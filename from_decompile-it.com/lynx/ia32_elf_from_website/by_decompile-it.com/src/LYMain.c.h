#define __MOD(a,b) a % b
/*****************************************************************************************/
/******                                                                             ******/
/******                            Structure Definitions                            ******/
/******                                                                             ******/
/*****************************************************************************************/
typedef enum  { NORECALL = 0, RECALL_URL = 1, RECALL_CMD = 2, RECALL_MAIL = 3, } RecallType;
typedef char BOOLEAN;
typedef struct _IO_FILE FILE;
struct _IO_marker {
     struct _IO_marker *_next;
     struct _IO_FILE *_sbuf;
     int _pos;
  } ;
typedef long __off_t;
typedef void _IO_lock_t;
typedef long long __quad_t;
typedef __quad_t __off64_t;
typedef unsigned int size_t;
struct _IO_FILE {
     int _flags;
     char *_IO_read_ptr;
     char *_IO_read_end;
     char *_IO_read_base;
     char *_IO_write_base;
     char *_IO_write_ptr;
     char *_IO_write_end;
     char *_IO_buf_base;
     char *_IO_buf_end;
     char *_IO_save_base;
     char *_IO_backup_base;
     char *_IO_save_end;
     struct _IO_marker *_markers;
     struct _IO_FILE *_chain;
     int _fileno;
     int _flags2;
     __off_t _old_offset;
     unsigned short _cur_column;
     char _vtable_offset;
     char _shortbuf[1];
     _IO_lock_t *_lock;
     __off64_t _offset;
     void *__pad1;
     void *__pad2;
     void *__pad3;
     void *__pad4;
     size_t __pad5;
     int _mode;
     char _unused2[40];
  } ;
typedef struct _HTList HTList;
struct _HTList {
     void *object;
     HTList *next;
  } ;
typedef void LYSigHandlerFunc_t( int  );
typedef struct {
     char *name;
     int value;
  } Config_Enum;
typedef struct _HTProtocol HTProtocol;
typedef struct _HTParentAnchor HTParentAnchor;
typedef struct _HTParentAnchor0 HTParentAnchor0;
typedef struct _HTBTree_top HTBTree;
typedef int (*HTComparer)( void *, void * );
struct _HTBTree_element {
     void *object;
     struct _HTBTree_element *up;
     struct _HTBTree_element *left;
     int left_depth;
     struct _HTBTree_element *right;
     int right_depth;
  } ;
struct _HTBTree_top {
     HTComparer compare;
     struct _HTBTree_element *top;
  } ;
struct _HTParentAnchor0 {
     HTParentAnchor0 *parent;
     char *address;
     HTParentAnchor *info;
     HTBTree *children;
     HTList sources;
     HTList _add_adult;
     short adult_hash;
     BOOLEAN underway;
     char __pad[1];
  } ;
typedef struct _HyperDoc HyperDoc;
struct _HyperDoc  ;
typedef struct {
     char *str;
     int len;
  } bstring;
typedef struct _HTAtom HTAtom;
struct _HTAtom {
     HTAtom *next;
     char *name;
  } ;
typedef HTAtom *HTFormat;
typedef struct _HTChunk HTChunk;
struct _HTChunk {
     int size;
     int growby;
     int allocated;
     char *data;
     int failok;
     HTChunk *next;
  } ;
typedef struct _UCAnchorInfo UCAnchorInfo;
typedef struct _LYUCcharset LYUCcharset;
struct _LYUCcharset {
     int UChndl;
     char *MIMEname;
     int enc;
     int codepage;
     int repertoire;
     int codepoints;
     int cpranges;
     int like8859;
  } ;
struct _UCStageInfo {
     int lock;
     int LYhndl;
     LYUCcharset C;
  } ;
struct _UCAnchorInfo {
     struct _UCStageInfo  s[4];
  } ;
struct _HTParentAnchor {
     HTParentAnchor0 *parent;
     HTList children_notag;
     HyperDoc *document;
     char *address;
     bstring *post_data;
     char *post_content_type;
     char *bookmark;
     HTFormat format;
     char *charset;
     BOOLEAN isIndex;
     char *isIndexAction;
     char *isIndexPrompt;
     char *title;
     char *owner;
     char *RevTitle;
     char *citehost;
     char *style;
     HTList *methods;
     void *protocol;
     char *physical;
     BOOLEAN isISMAPScript;
     BOOLEAN isHEAD;
     BOOLEAN safe;
     char *source_cache_file;
     HTChunk *source_cache_chunk;
     char *FileCache;
     char *SugFname;
     char *cache_control;
     BOOLEAN no_cache;
     BOOLEAN inBASE;
     char *content_type_params;
     char *content_type;
     char *content_language;
     char *content_encoding;
     char *content_base;
     char *content_disposition;
     char *content_location;
     char *content_md5;
     char *message_id;
     char *subject;
     int content_length;
     char *date;
     char *expires;
     char *last_modified;
     char *ETag;
     char *server;
     UCAnchorInfo *UCStages;
     HTList *imaps;
  } ;
typedef struct _HTStream HTStream;
struct _HTStream  ;
struct _HTProtocol {
     char *name;
     int (*load)( char *, HTParentAnchor *, HTFormat , HTStream * );
     HTStream *(*saveStream)( HTParentAnchor * );
  } ;
typedef unsigned long long __u_quad_t;
typedef __u_quad_t __dev_t;
typedef unsigned long __ino_t;
typedef unsigned int __mode_t;
typedef unsigned int __nlink_t;
typedef unsigned int __uid_t;
typedef unsigned int __gid_t;
typedef long __blksize_t;
typedef __quad_t __blkcnt64_t;
typedef long __time_t;
struct timespec {
     __time_t tv_sec;
     long tv_nsec;
  } ;
typedef __u_quad_t __ino64_t;
struct stat {
     __dev_t st_dev;
     unsigned short __pad1;
     __ino_t __st_ino;
     __mode_t st_mode;
     __nlink_t st_nlink;
     __uid_t st_uid;
     __gid_t st_gid;
     __dev_t st_rdev;
     unsigned short __pad2;
     __off64_t st_size;
     __blksize_t st_blksize;
     __blkcnt64_t st_blocks;
     struct timespec  st_atim;
     struct timespec  st_mtim;
     struct timespec  st_ctim;
     __ino64_t st_ino;
  } ;
typedef void (*__sighandler_t)( int  );
struct {
     char *name;
     char *help;
  } ;
typedef struct parse_args_type Config_Type;
struct parse_args_type {
     char *name;
     int type;
     long value;
     char *help_string;
  } ;
typedef struct {
     char *hl_text;
     short hl_x;
     char __pad[2];
  } HiliteInfo;
typedef struct {
     HiliteInfo *hl_info;
     HiliteInfo hl_base;
     short hl_len;
     char __pad[2];
  } HiliteList;
typedef struct _OptionType OptionType;
struct _OptionType {
     char *name;
     char *cp_submit_value;
     int value_cs;
     struct _OptionType *next;
  } ;
struct _FormInfo {
     char *name;
     int number;
     int type;
     char *value;
     char *orig_value;
     int size;
     unsigned int maxlength;
     int group;
     int num_value;
     int hrange;
     int lrange;
     OptionType *select_list;
     char *submit_action;
     int submit_method;
     char *submit_enctype;
     char *submit_title;
     BOOLEAN no_cache;
     char *cp_submit_value;
     char *orig_submit_value;
     int size_l;
     int disabled;
     int name_cs;
     int value_cs;
     char *accept_cs;
  } ;
typedef struct {
     char *lname;
     char *target;
     char *l_hightext;
     char *l_hightext2;
     int l_hightext2_offset;
     BOOLEAN inUnderline;
     int lx;
     int ly;
     int type;
     int sgml_offset;
     int anchor_number;
     int anchor_line_num;
     HiliteList list;
     struct _FormInfo *l_form;
  } LinkInfo;
/*****************************************************************************************/
/******                                                                             ******/
/******                          Function Prototypes                                ******/
/******                                                                             ******/
/*****************************************************************************************/
void cleanup_sig( int  );
void cleanup( void );
char *LYVersionDate( void );
void LYCloseCloset( RecallType  );
char *LYstrncpy( char *, char *, int  );
void ena_csi( BOOLEAN  );
char *LYSkipBlanks( char * );
void LYTrimTrailing( char * );
void LYEscapeStartfile( char ** );
char *LYSafeGets( char **, FILE * );
void LYOpenCmdLogfile( int , char ** );
void LYOpenCmdScript( void );
void HTAlert( char * );
void HTAlwaysAlert( char *, char * );
void LYSleepAlert( void );
void LYStdinArgs_free( void );
void reset_signals( void );
void exit_immediately( int  );
BOOLEAN GetStdin( char **, BOOLEAN  );
void SetLocale( void );
int main( int , char ** );
void LYRegisterLynxProtocols( void );
void reload_read_cfg( void );
void disable_pausing( void );
void force_dump_mode( void );
int parse_authentication( char *, char ** );
int anonymous_fun( char * );
int assume_charset_fun( char * );
int assume_local_charset_fun( char * );
int assume_unrec_charset_fun( char * );
int auth_fun( char * );
int base_fun( char * );
int cache_fun( char * );
int display_fun( char * );
int display_charset_fun( char * );
int dump_output_fun( char * );
int editor_fun( char * );
int get_data_fun( char * );
int help_fun( char * );
int hiddenlinks_fun( char * );
int homepage_fun( char * );
int mime_header_fun( char * );
int newschunksize_fun( char * );
int newsmaxchunk_fun( char * );
int nobold_fun( char * );
int nopause_fun( char * );
int noreverse_fun( char * );
int nounderline_fun( char * );
int pauth_fun( char * );
int post_data_fun( char * );
char *show_restriction( char * );
int restrictions_fun( char * );
int source_fun( char * );
int version_fun( char * );
int width_fun( char * );
void print_help_strings( char *, char *, char *, BOOLEAN  );
void print_help_and_exit( int  );
int arg_eqs_parse( char *, char *, char ** );
BOOLEAN parse_arg( char **, unsigned int , int * );
void FatalProblem( int  );
FILE *TraceFP( void );
BOOLEAN LYOpenTraceLog( void );
int mainloop( void );
void HTAddGotoURL( char * );
void lynx_setup_colors( void );
void LYnoVideo( int  );
BOOLEAN setup( char * );
void LYSetDisplayLines( void );
void set_default_bookmark_page( char * );
char *LYGetEnv( char * );
void LYFreeStringList( HTList * );
BOOLEAN LYCanDoHEAD( char * );
BOOLEAN LYCanReadFile( char * );
BOOLEAN inlocaldomain( void );
void LYExtSignal( int , LYSigHandlerFunc_t * );
void size_change( int  );
char *index_to_restriction( int  );
int find_restriction( char *, int  );
void parse_restrictions( char * );
void print_restrictions_to_fd( FILE * );
void LYEnsureAbsoluteURL( char **, char *, int  );
char *Current_Dir( char * );
char *LYPathLeaf( char * );
BOOLEAN LYPathOffHomeOK( char *, size_t  );
char *LYTildeExpand( char **, BOOLEAN  );
void LYAddPathToHome( char *, size_t , char * );
FILE *LYOpenTemp( char *, char *, char * );
void LYCloseTempFP( FILE * );
int LYRemoveTemp( char * );
void LYAddPathSep( char ** );
char *LYLastPathSep( char * );
void LYAddHtmlSep( char ** );
void LYsetXDisplay( char * );
void LYOpenlog( char * );
BOOLEAN LYCheckUserAgent( void );
void free_lynx_cfg( void );
void LYSetConfigValue( char *, char * );
void read_cfg( char *, char *, int , FILE * );
void LYAllocHistory( int  );
BOOLEAN LYgetEnum( Config_Enum *, char *, int * );
void read_rc( FILE * );
int save_rc( FILE * );
void set_vi_keys( void );
void set_emacs_keys( void );
void set_numbers_as_arrows( void );
void HTFormatInit( void );
void HTPreparsedFormatInit( void );
void HTFileInit( void );
void LYexit( int  );
void printlist( FILE *, BOOLEAN  );
int LYEditmapDeclared( void );
void HTMLUseCharacterSet( int  );
int LYCharSetsDeclared( void );
void LYLoadCookies( char * );
void LYStoreCookies( char * );
int style_readFromFile( char * );
void cache_tag_styles( void );
void html_src_on_lynxcfg_reload( void );
void HTMLSRC_init_caches( BOOLEAN  );
int UCGetLYhndl_byMIME( char * );
int safeUCGetLYhndl_byMIME( char * );
void LYFindLocaleCharset( void );
char *HTUnEscape( char * );
BOOLEAN HTRegisterProtocol( HTProtocol * );
int HTStat( char *, struct stat * );
char *HTHostName( void );
void HTSwitchDTD( int  );
HTAtom *HTAtom_for( char * );
HTList *HTList_new( void );
void HTList_appendObject( HTList *, void * );
int HTList_count( HTList * );
void *HTList_objectAt( HTList *, int  );
int strcasecomp( char *, char * );
char *HTSACopy( char **, char * );
char *HTSACat( char **, char * );
char *HTSprintf( char **, char *, ... );
char *HTSprintf0( char **, char *, ... );
int fileno( FILE * );
int fputs( char *, FILE * );
void abort( void );
int sprintf( char *, char *, ... );
int mkdir( char *, __mode_t  );
__sighandler_t signal( int , __sighandler_t  );
char *strchr( char *, char  );
void *calloc( unsigned int , unsigned int  );
int putchar( int  );
void *memset( void *, int , unsigned int  );
FILE *fopen64( char *, char * );
char *bindtextdomain( char *, char * );
char *gettext( char * );
void *strtol( char *, char **, int  );
void free( void * );
char *curses_version( void );
int fflush( FILE * );
short **__ctype_b_loc( void );
int isatty( int  );
unsigned int strlen( char * );
char *setlocale( int , char * );
int fgetc( FILE * );
char *strcpy( char *, char * );
int printf( char *, ... );
int atoi( char * );
int putenv( char * );
unsigned int fwrite( void *, unsigned int , unsigned int , FILE * );
int fprintf( FILE *, char *, ... );
char *strstr( char *, char * );
void *malloc( unsigned int  );
void __stack_chk_fail( void );
int fputc( int , FILE * );
int puts( char * );
char *textdomain( char * );
int sscanf( char *, char *, ... );
int strncmp( char *, char *, unsigned int  );
int strcmp( char *, char * );
/*****************************************************************************************/
/******                                                                             ******/
/******                        Forward Var Declarations                             ******/
/******                                                                             ******/
/*****************************************************************************************/
extern struct _IO_FILE  *stdout;
extern struct _IO_FILE  *stdin;
extern struct _IO_FILE  *stderr;
extern int LYcols;
extern LinkInfo links[1024];
extern int HTCacheSize;
extern BOOLEAN local_exec;
extern BOOLEAN LYUseDefShoCur;
extern BOOLEAN dump_output_immediately;
extern BOOLEAN ftp_ok;
extern BOOLEAN news_ok;
extern BOOLEAN rlogin_ok;
extern BOOLEAN telnet_ok;
extern char *LYTransferName;
extern char *LynxSigFile;
extern char *helpfilepath;
extern char *lynx_cmd_logfile;
extern char *lynx_cmd_script;
extern char *lynx_temp_space;
extern char *original_dir;
extern char *system_mail;
extern char *system_mail_flags;
extern int keypad_mode;
extern BOOLEAN no_mail;
extern BOOLEAN no_newspost;
extern char *editor;
extern BOOLEAN no_list;
extern int LYCacheSource;
extern BOOLEAN LYValidate;
extern BOOLEAN display_partial_flag;
extern char *authentication_info[2];
extern char *proxyauth_info[2];
extern BOOLEAN crawl;
extern BOOLEAN traversal;
extern int AlertSecs;
extern int InfoSecs;
extern int MessageSecs;
extern int DebugSecs;
extern int ReplaySecs;
extern char *UCAssume_MIMEcharset;
extern BOOLEAN LYSelectPopups;
extern BOOLEAN LYUseDefSelPop;
extern char *BibP_globalserver;
extern char *BibP_bibhost;
extern BOOLEAN persistent_cookies;
extern char *LYCookieSaveFile;
extern int LYHiddenLinks;
extern int Old_DTD;
extern BOOLEAN LYPreparsedSource;
extern BOOLEAN with_backspaces;
extern BOOLEAN LYNoCore;
extern char *lynx_lss_file2;
extern BOOLEAN LYShowCursor;
extern BOOLEAN child_lynx;
extern BOOLEAN emacs_keys;
extern BOOLEAN vi_keys;
extern HTList *Goto_URLs;
extern char *helpfile;
extern char *language;
extern char *pref_charset;
extern char *startfile;
extern BOOLEAN no_disk_save;
extern char *indexfile;
extern char *homepage;
extern char *bookmark_page;
extern char *BookmarkPage;
extern BOOLEAN LYRestricted;
extern char *form_post_data;
extern char *form_get_data;
extern BOOLEAN HEAD_request;
extern BOOLEAN nomore;
extern char *LYUserAgent;
extern int LYMultiBookmarks;
extern char *LYTraceLogPath;
extern BOOLEAN LYUseTraceLog;
extern int LYShowColor;
extern BOOLEAN LYCursesON;
extern char *x_display;
extern char *lynx_lss_file;
extern char *MBM_A_subbookmark[26];
extern char *MBM_A_subdescript[26];
extern char *lynx_save_space;
extern BOOLEAN no_inside_ftp;
extern BOOLEAN no_inside_news;
extern BOOLEAN no_inside_rlogin;
extern BOOLEAN no_inside_telnet;
extern BOOLEAN no_multibook;
extern BOOLEAN no_option_save;
extern BOOLEAN no_outside_ftp;
extern BOOLEAN no_outside_news;
extern BOOLEAN no_outside_rlogin;
extern BOOLEAN no_outside_telnet;
extern BOOLEAN no_suspend;
extern char *LYHostName;
extern char *LYLocalDomain;
extern char *URLDomainPrefixes;
extern char *URLDomainSuffixes;
extern BOOLEAN restore_sigpipe_for_children;
extern BOOLEAN system_editor;
extern char *LYUserAgentDefault;
extern BOOLEAN LYisConfiguredForX;
extern BOOLEAN LYMBMBlocked;
extern char *list_format;
extern BOOLEAN LYNewsPosting;
extern char *jumpprompt;
extern char *lynx_cfg_file;
extern char *syslog_txt;
extern char *personal_type_map;
extern char *global_type_map;
extern char *global_extension_map;
extern char *personal_extension_map;
extern char *LYCookieFile;
extern char *XLoadImageCommand;
extern char *SSL_cert_file;
extern BOOLEAN LYPrependBaseToSource;
extern BOOLEAN FileInitAlreadyDone;
extern HTProtocol LYLynxStatusMessages;
extern HTProtocol LYLynxKeymap;
extern char *LynxHome;
extern BOOLEAN source_cache_file_error;
extern BOOLEAN LYOutOfMemory;
extern BOOLEAN keep_mime_headers;
extern HTProtocol LYLynxCGI;
extern int current_char_set;
extern int LYlowest_eightbit[60];
extern LYUCcharset LYCharSet_UC[60];
extern HTProtocol LYLynxIMGmap;
extern HTProtocol LYLynxCookies;
extern int UCLYhndl_for_unspec;
extern int UCLYhndl_for_unrec;
extern int UCLYhndl_HTFile_for_unspec;
extern int LATIN1;
extern HTFormat HTOutputFormat;
extern char *http_error_file;
extern int HTDirAccess;
extern char *ftp_lasthost;
extern int dump_output_width;
extern char *HTLibraryVersion;
extern BOOLEAN WWW_TraceFlag;
extern int HTNewsChunkSize;
extern int HTNewsMaxChunk;
/*****************************************************************************************/
/******                                                                             ******/
/******                      Inline Function Definitions                            ******/
/******                                                                             ******/
/*****************************************************************************************/
