#define __MOD(a,b) a % b
/*****************************************************************************************/
/******                                                                             ******/
/******                            Structure Definitions                            ******/
/******                                                                             ******/
/*****************************************************************************************/
typedef struct {
     char *str;
     int len;
  } bstring;
typedef char BOOLEAN;
typedef struct {
     char *title;
     char *address;
     bstring *post_data;
     char *post_content_type;
     char *bookmark;
     BOOLEAN isHEAD;
     BOOLEAN safe;
     int link;
     int line;
     BOOLEAN internal_link;
     char *style;
  } DocInfo;
typedef unsigned int size_t;
typedef enum  { NORECALL = 0, RECALL_URL = 1, RECALL_CMD = 2, RECALL_MAIL = 3, } RecallType;
typedef struct _HText HText;
typedef struct _HTParentAnchor HTParentAnchor;
typedef struct _HTParentAnchor0 HTParentAnchor0;
typedef struct _HTBTree_top HTBTree;
typedef int (*HTComparer)( void *, void * );
struct _HTBTree_element {
     void *object;
     struct _HTBTree_element *up;
     struct _HTBTree_element *left;
     int left_depth;
     struct _HTBTree_element *right;
     int right_depth;
  } ;
struct _HTBTree_top {
     HTComparer compare;
     struct _HTBTree_element *top;
  } ;
typedef struct _HTList HTList;
struct _HTList {
     void *object;
     HTList *next;
  } ;
struct _HTParentAnchor0 {
     HTParentAnchor0 *parent;
     char *address;
     HTParentAnchor *info;
     HTBTree *children;
     HTList sources;
     HTList _add_adult;
     short adult_hash;
     BOOLEAN underway;
     char __pad[1];
  } ;
typedef struct _HyperDoc HyperDoc;
struct _HyperDoc  ;
typedef struct _HTAtom HTAtom;
struct _HTAtom {
     HTAtom *next;
     char *name;
  } ;
typedef HTAtom *HTFormat;
typedef struct _HTChunk HTChunk;
struct _HTChunk {
     int size;
     int growby;
     int allocated;
     char *data;
     int failok;
     HTChunk *next;
  } ;
typedef struct _UCAnchorInfo UCAnchorInfo;
typedef struct _LYUCcharset LYUCcharset;
struct _LYUCcharset {
     int UChndl;
     char *MIMEname;
     int enc;
     int codepage;
     int repertoire;
     int codepoints;
     int cpranges;
     int like8859;
  } ;
struct _UCStageInfo {
     int lock;
     int LYhndl;
     LYUCcharset C;
  } ;
struct _UCAnchorInfo {
     struct _UCStageInfo  s[4];
  } ;
struct _HTParentAnchor {
     HTParentAnchor0 *parent;
     HTList children_notag;
     HyperDoc *document;
     char *address;
     bstring *post_data;
     char *post_content_type;
     char *bookmark;
     HTFormat format;
     char *charset;
     BOOLEAN isIndex;
     char *isIndexAction;
     char *isIndexPrompt;
     char *title;
     char *owner;
     char *RevTitle;
     char *citehost;
     char *style;
     HTList *methods;
     void *protocol;
     char *physical;
     BOOLEAN isISMAPScript;
     BOOLEAN isHEAD;
     BOOLEAN safe;
     char *source_cache_file;
     HTChunk *source_cache_chunk;
     char *FileCache;
     char *SugFname;
     char *cache_control;
     BOOLEAN no_cache;
     BOOLEAN inBASE;
     char *content_type_params;
     char *content_type;
     char *content_language;
     char *content_encoding;
     char *content_base;
     char *content_disposition;
     char *content_location;
     char *content_md5;
     char *message_id;
     char *subject;
     int content_length;
     char *date;
     char *expires;
     char *last_modified;
     char *ETag;
     char *server;
     UCAnchorInfo *UCStages;
     HTList *imaps;
  } ;
typedef struct _line HTLine;
typedef struct {
     unsigned int bits_at_0;
  } HTStyleChange;
struct _line {
     struct _line *next;
     struct _line *prev;
     unsigned short offset;
     unsigned short size;
     HTStyleChange *styles;
     unsigned short numstyles;
     char data[1];
     char __pad[1];
  } ;
typedef struct {
     HTLine base;
     char data[1026];
     char __pad[2];
  } HTLineTemp;
typedef struct _TextAnchor TextAnchor;
typedef struct _FormInfo FormInfo;
typedef struct _OptionType OptionType;
struct _OptionType {
     char *name;
     char *cp_submit_value;
     int value_cs;
     struct _OptionType *next;
  } ;
struct _FormInfo {
     char *name;
     int number;
     int type;
     char *value;
     char *orig_value;
     int size;
     unsigned int maxlength;
     int group;
     int num_value;
     int hrange;
     int lrange;
     OptionType *select_list;
     char *submit_action;
     int submit_method;
     char *submit_enctype;
     char *submit_title;
     BOOLEAN no_cache;
     char *cp_submit_value;
     char *orig_submit_value;
     int size_l;
     int disabled;
     int name_cs;
     int value_cs;
     char *accept_cs;
  } ;
typedef struct {
     char *hl_text;
     short hl_x;
     char __pad[2];
  } HiliteInfo;
typedef struct {
     HiliteInfo *hl_info;
     HiliteInfo hl_base;
     short hl_len;
     char __pad[2];
  } HiliteList;
typedef struct _HTAnchor HTAnchor;
struct _HTAnchor {
     HTParentAnchor0 *parent;
  } ;
typedef HTAtom HTLinkType;
typedef struct {
     HTParentAnchor0 *parent;
     char *tag;
     HTAnchor *dest;
     HTLinkType *type;
     HTList _add_children_notag;
     HTList _add_sources;
  } HTChildAnchor;
struct _TextAnchor {
     struct _TextAnchor *next;
     struct _TextAnchor *prev;
     int sgml_offset;
     int number;
     int line_num;
     short line_pos;
     short extent;
     BOOLEAN show_anchor;
     BOOLEAN inUnderline;
     BOOLEAN expansion_anch;
     char link_type;
     FormInfo *input_field;
     HiliteList lites;
     HTChildAnchor *anchor;
  } ;
typedef struct _HTStyle HTStyle;
typedef long HTFont;
typedef int HTCoord;
typedef int HTColor;
typedef struct {
     short kind;
     HTCoord position;
  } HTTabStop;
struct _HTStyle {
     struct _HTStyle *next;
     char *name;
     int id;
     char *SGMLTag;
     HTFont font;
     HTCoord fontSize;
     HTColor color;
     int superscript;
     HTAnchor *anchor;
     HTCoord indent1st;
     HTCoord leftIndent;
     HTCoord rightIndent;
     short alignment;
     HTCoord lineHt;
     HTCoord descentLine;
     HTTabStop *tabs;
     BOOLEAN wordWrap;
     BOOLEAN freeFormat;
     HTCoord spaceBefore;
     HTCoord spaceAfter;
     int paraFlags;
  } ;
typedef struct _STable_info STable_info;
struct _STable_info  ;
typedef enum  { NOKANJI = 0, EUC = 1, SJIS = 2, JIS = 3, } HTkcode;
typedef enum  { DET_SJIS = 0, DET_EUC = 1, DET_NOTYET = 2, DET_MIXED = 3, } eDetectedKCode;
typedef enum  { SJIS_state_neutral = 0, SJIS_state_in_kanji = 1, SJIS_state_has_bad_code = 2, } eSJIS_status;
typedef enum  { EUC_state_neutral = 0, EUC_state_in_kanji = 1, EUC_state_in_kana = 2, EUC_state_has_bad_code = 3, } eEUC_status;
typedef enum  { S_text = 0, S_esc = 1, S_dollar = 2, S_paren = 3, S_nonascii_text = 4, S_dollar_paren = 5, S_jisx0201_text = 6, } eGridState;
typedef struct _UCTransParams UCTransParams;
struct _UCTransParams {
     BOOLEAN transp;
     BOOLEAN do_cjk;
     BOOLEAN decode_utf8;
     BOOLEAN output_utf8;
     BOOLEAN use_raw_char_in;
     BOOLEAN strip_raw_char_in;
     BOOLEAN pass_160_173_raw;
     BOOLEAN do_8bitraw;
     BOOLEAN trans_to_uni;
     BOOLEAN trans_C0_to_uni;
     BOOLEAN repl_translated_C0;
     BOOLEAN trans_from_uni;
  } ;
typedef struct _HTStream HTStream;
typedef struct _HTStreamClass HTStreamClass;
typedef void *HTError;
struct _HTStreamClass {
     char *name;
     void (*_free)( HTStream * );
     void (*_abort)( HTStream *, HTError  );
     void (*put_character)( HTStream *, char  );
     void (*put_string)( HTStream *, char * );
     void (*put_block)( HTStream *, char *, int  );
  } ;
struct _HTStream {
     HTStreamClass *isa;
  } ;
typedef struct _HTPool HTPool;
typedef HTStyleChange pool_data;
struct _HTPool {
     pool_data data[2042];
     struct _HTPool *prev;
     int used;
  } ;
struct _HText {
     HTParentAnchor *node_anchor;
     HTLine *last_line;
     HTLineTemp temp_line[2];
     int Lines;
     TextAnchor *first_anchor;
     TextAnchor *last_anchor;
     TextAnchor *last_anchor_before_stbl;
     TextAnchor *last_anchor_before_split;
     HTList *forms;
     int last_anchor_number;
     BOOLEAN source;
     BOOLEAN toolbar;
     HTList *tabs;
     HTList *hidden_links;
     int hiddenlinkflag;
     BOOLEAN no_cache;
     char LastChar;
     BOOLEAN IgnoreExcess;
     HTStyle *style;
     int display_on_the_fly;
     int top_of_screen;
     HTLine *top_of_screen_line;
     HTLine *next_line;
     unsigned int permissible_split;
     BOOLEAN in_line_1;
     BOOLEAN stale;
     BOOLEAN page_has_target;
     BOOLEAN has_utf8;
     BOOLEAN had_utf8;
     int first_lineno_last_disp_partial;
     int last_lineno_last_disp_partial;
     STable_info *stbl;
     HTList *enclosed_stbl;
     HTkcode kcode;
     HTkcode specified_kcode;
     eDetectedKCode detected_kcode;
     eSJIS_status SJIS_status;
     eEUC_status EUC_status;
     eGridState state;
     int kanji_buf;
     int in_sjis;
     int halted;
     BOOLEAN have_8bit_chars;
     LYUCcharset *UCI;
     int UCLYhndl;
     UCTransParams T;
     HTStream *target;
     HTStreamClass targetClass;
     HTPool *pool;
     BOOLEAN clickable_images;
     BOOLEAN pseudo_inline_alts;
     BOOLEAN verbose_img;
     BOOLEAN raw_mode;
     BOOLEAN historical_comments;
     BOOLEAN minimal_comments;
     BOOLEAN soft_dquotes;
     short old_dtd;
     short keypad_mode;
     short disp_lines;
     short disp_cols;
  } ;
typedef struct _IO_FILE FILE;
struct _IO_marker {
     struct _IO_marker *_next;
     struct _IO_FILE *_sbuf;
     int _pos;
  } ;
typedef long __off_t;
typedef void _IO_lock_t;
typedef long long __quad_t;
typedef __quad_t __off64_t;
struct _IO_FILE {
     int _flags;
     char *_IO_read_ptr;
     char *_IO_read_end;
     char *_IO_read_base;
     char *_IO_write_base;
     char *_IO_write_ptr;
     char *_IO_write_end;
     char *_IO_buf_base;
     char *_IO_buf_end;
     char *_IO_save_base;
     char *_IO_backup_base;
     char *_IO_save_end;
     struct _IO_marker *_markers;
     struct _IO_FILE *_chain;
     int _fileno;
     int _flags2;
     __off_t _old_offset;
     unsigned short _cur_column;
     char _vtable_offset;
     char _shortbuf[1];
     _IO_lock_t *_lock;
     __off64_t _offset;
     void *__pad1;
     void *__pad2;
     void *__pad3;
     void *__pad4;
     size_t __pad5;
     int _mode;
     char _unused2[40];
  } ;
typedef struct {
     char *lname;
     char *target;
     char *l_hightext;
     char *l_hightext2;
     int l_hightext2_offset;
     BOOLEAN inUnderline;
     int lx;
     int ly;
     int type;
     int sgml_offset;
     int anchor_number;
     int anchor_line_num;
     HiliteList list;
     struct _FormInfo *l_form;
  } LinkInfo;
typedef struct _win_st WINDOW;
typedef unsigned long chtype;
typedef chtype attr_t;
struct pdat {
     short _pad_y;
     short _pad_x;
     short _pad_top;
     short _pad_left;
     short _pad_bottom;
     short _pad_right;
  } ;
typedef int wchar_t;
typedef struct {
     attr_t attr;
     wchar_t chars[5];
  } cchar_t;
struct _win_st {
     short _cury;
     short _curx;
     short _maxy;
     short _maxx;
     short _begy;
     short _begx;
     short _flags;
     attr_t _attrs;
     chtype _bkgd;
     _Bool _notimeout;
     _Bool _clear;
     _Bool _leaveok;
     _Bool _scroll;
     _Bool _idlok;
     _Bool _idcok;
     _Bool _immed;
     _Bool _sync;
     _Bool _use_keypad;
     int _delay;
     struct ldat *_line;
     short _regtop;
     short _regbottom;
     int _parx;
     int _pary;
     WINDOW *_parent;
     struct pdat  _pad;
     short _yoffset;
     cchar_t _bkgrnd;
  } ;
typedef enum  { UIP_UNKNOWN = -1, UIP_HISTORY = 0, UIP_DOWNLOAD_OPTIONS = 1, UIP_PRINT_OPTIONS = 2, UIP_SHOWINFO = 3, UIP_LIST_PAGE = 4, UIP_VLINKS = 5, UIP_LYNXCFG = 6, UIP_OPTIONS_MENU = 7, UIP_DIRED_MENU = 8, UIP_PERMIT_OPTIONS = 9, UIP_UPLOAD_OPTIONS = 10, UIP_ADDRLIST_PAGE = 11, UIP_CONFIG_DEF = 12, UIP_TRACELOG = 13, UIP_INSTALL = 14, } UIP_t;
typedef struct _DocAddress DocAddress;
struct _DocAddress {
     char *address;
     bstring *post_data;
     char *post_content_type;
     char *bookmark;
     BOOLEAN isHEAD;
     BOOLEAN safe;
     char __pad[2];
  } ;
typedef void (*__sighandler_t)( int  );
struct {
     char *name;
     BOOLEAN *flag;
  } ;
typedef struct {
     DocInfo hdoc;
     int intern_seq_start;
  } HistInfo;
typedef unsigned short LYKeymap_t;
typedef struct _JumpDatum JumpDatum;
struct _JumpDatum {
     char *key;
     char *url;
  } ;
struct JumpTable {
     int key;
     int nel;
     char *msg;
     char *file;
     char *shortcut;
     HTList *history;
     JumpDatum *table;
     struct JumpTable *next;
     char *mp;
  } ;
/*****************************************************************************************/
/******                                                                             ******/
/******                          Function Prototypes                                ******/
/******                                                                             ******/
/*****************************************************************************************/
void cleanup_sig( int  );
void cleanup( void );
int LYShowInfo( DocInfo *, DocInfo *, char * );
int edit_current_file( char *, int , int  );
int get_mouse_link( void );
int peek_mouse_link( void );
char *LYstrncpy( char *, char *, int  );
int LYgetch( void );
int LYgetch_single( void );
char *LYRemoveBlanks( char * );
char *LYSkipBlanks( char * );
char *LYSkipNonBlanks( char * );
BOOLEAN LYTrimStartfile( char * );
void LYTrimAllStartfile( char * );
int LYgetstr( char *, int , size_t , RecallType  );
char *LYLineeditHelpURL( void );
void mailmsg( int , char *, char *, char * );
void reply_by_mail( char *, char *, char *, char * );
void HTAlert( char * );
void HTInfoMsg( char * );
void HTUserMsg( char * );
void HTUserMsg2( char *, char * );
BOOLEAN HTLastConfirmCancelled( void );
int HTConfirmDefault( char *, int  );
BOOLEAN HTConfirm( char * );
BOOLEAN confirm_post_resub( char *, char *, int , int  );
void LYSleepAlert( void );
BOOLEAN HText_TAHasMoreLines( int , int  );
int HTGetLinkOrFieldStart( int , int *, int *, int , BOOLEAN  );
int HText_getNumOfLines( void );
char *HText_getTitle( void );
char *HText_getStyle( void );
void HText_pageDisplay( int , char * );
BOOLEAN HText_pageHasPrevTarget( void );
int HText_closestAnchor( HText *, int  );
int HText_locateAnchor( HText *, int  );
int HText_getAbsLineNumber( HText *, int  );
int HText_anchorRelativeTo( HText *, int , int  );
int HText_LinksInLines( HText *, int , int  );
void HText_setStale( HText * );
BOOLEAN HText_canScrollDown( void );
BOOLEAN HText_POSTReplyLoaded( DocInfo * );
BOOLEAN HTFindPoundSelector( char * );
int HText_getTopOfScreen( void );
int HText_getPreferredTopLine( HText *, int  );
int do_www_search( DocInfo * );
void print_wwwfile_to_fd( FILE *, BOOLEAN , BOOLEAN  );
void print_crawl_to_fd( FILE *, char *, char * );
void user_message( char *, char * );
char *HText_getOwner( void );
void HText_setMainTextOwner( char * );
char *HText_getRevTitle( void );
char *HText_getMessageID( void );
void HTuncache_current_document( void );
BOOLEAN HTreparse_document( void );
BOOLEAN HTcan_reparse_document( void );
BOOLEAN HTdocument_settings_changed( void );
int HTisDocumentSource( void );
char *HTLoadedDocumentURL( void );
char *HTLoadedDocumentTitle( void );
BOOLEAN HTLoadedDocumentIsHEAD( void );
BOOLEAN HTLoadedDocumentIsSafe( void );
char *HTLoadedDocumentCharset( void );
BOOLEAN HText_hasToolbar( HText * );
void HText_setNoCache( HText * );
int HText_ExtEditForm( LinkInfo * );
void HText_ExpandTextarea( LinkInfo *, int  );
int HText_InsertFile( LinkInfo * );
void HTMark_asSource( void );
int HTMainText_Get_UCLYhndl( void );
int getfile( DocInfo *, int * );
void srcmode_for_next_retrieval( int  );
int follow_link_number( int , int , DocInfo *, int * );
void exit_immediately( int  );
int sametext( char *, char * );
void TracelogOpenFailed( void );
BOOLEAN LYReopenTracelog( BOOLEAN * );
void turn_trace_back_on( BOOLEAN * );
FILE *TraceFP( void );
BOOLEAN LYOpenTraceLog( void );
void LYCloseTracelog( void );
void handle_LYK_TRACE_TOGGLE( void );
BOOLEAN reparse_document( void );
BOOLEAN reparse_or_reload( int * );
void set_address( DocInfo *, char * );
void copy_address( DocInfo *, DocInfo * );
void free_address( DocInfo * );
void move_address( DocInfo *, DocInfo * );
BOOLEAN LYMainLoop_pageDisplay( int  );
BOOLEAN set_curdoc_link( int  );
void goto_line( int  );
void set_curdoc_link_by_mouse( int  );
int do_change_link( void );
void do_check_goto_URL( char *, char **, BOOLEAN * );
BOOLEAN do_check_recall( int , char *, char **, int , int *, RecallType , BOOLEAN * );
void do_cleanup_after_delete( void );
int find_link_near_col( int , int  );
int DoTraversal( int , BOOLEAN * );
int handle_LYK_ACTIVATE( int *, int , BOOLEAN *, BOOLEAN *, BOOLEAN *, int  );
void handle_LYK_ADD_BOOKMARK( BOOLEAN *, int *, int  );
void handle_LYK_CLEAR_AUTH( int *, int  );
int handle_LYK_COMMAND( char * );
void handle_LYK_COMMENT( BOOLEAN *, char **, int *, int  );
BOOLEAN handle_LYK_COOKIE_JAR( int * );
void handle_LYK_CREATE( void );
void handle_LYK_DEL_BOOKMARK( BOOLEAN *, int *, int  );
void handle_LYK_DIRED_MENU( BOOLEAN *, int *, int  );
int handle_LYK_DOWNLOAD( int *, int *, int  );
void handle_LYK_DOWN_xxx( int *, int , int  );
void handle_LYK_DOWN_HALF( int *, int  );
void handle_LYK_DOWN_LINK( int *, int *, int  );
void handle_LYK_DOWN_TWO( int *, int  );
int handle_LYK_DWIMEDIT( int *, int *, int  );
int handle_LYK_ECGOTO( int *, char *, char **, int *, int  );
void handle_LYK_EDIT( int *, int  );
void handle_LYK_DWIMHELP( char ** );
void handle_LYK_EDIT_TEXTAREA( BOOLEAN *, int *, int  );
int handle_LYK_ELGOTO( int *, char *, char **, int *, int  );
void handle_LYK_EXTERN_LINK( BOOLEAN * );
void handle_LYK_EXTERN_PAGE( BOOLEAN * );
BOOLEAN handle_LYK_FASTBACKW_LINK( int *, int *, int  );
void handle_LYK_FASTFORW_LINK( int *, int  );
void handle_LYK_FIRST_LINK( void );
BOOLEAN handle_LYK_GOTO( int *, char *, char **, RecallType *, int *, int *, BOOLEAN *, int *, int  );
void handle_LYK_GROW_TEXTAREA( BOOLEAN * );
BOOLEAN handle_LYK_HEAD( int * );
void handle_LYK_HELP( char ** );
void handle_LYK_HISTORICAL( void );
BOOLEAN handle_LYK_HISTORY( BOOLEAN  );
BOOLEAN handle_LYK_IMAGE_TOGGLE( int * );
void handle_LYK_INDEX( int *, int  );
void handle_LYK_INDEX_SEARCH( BOOLEAN *, BOOLEAN , int *, int  );
BOOLEAN handle_LYK_INFO( int * );
BOOLEAN handle_LYK_INLINE_TOGGLE( int * );
void handle_LYK_INSERT_FILE( BOOLEAN *, int *, int  );
BOOLEAN handle_LYK_JUMP( int , char *, char **, RecallType *, BOOLEAN *, int *, int *, int *, int *, int  );
void handle_LYK_KEYMAP( BOOLEAN *, BOOLEAN *, int *, int  );
void handle_LYK_LAST_LINK( void );
void handle_LYK_LEFT_LINK( void );
BOOLEAN handle_LYK_LIST( int * );
void handle_LYK_MAIN_MENU( int *, int  );
void handle_LYK_MINIMAL( void );
void handle_LYK_MODIFY( BOOLEAN * );
BOOLEAN handle_LYK_NESTED_TABLES( int * );
BOOLEAN handle_LYK_OPTIONS( int *, BOOLEAN * );
void handle_NEXT_DOC( void );
void handle_LYK_NEXT_LINK( int , int *, int  );
void handle_LYK_NEXT_PAGE( int *, int  );
BOOLEAN handle_LYK_NOCACHE( int *, int  );
void handle_LYK_PREV_LINK( int *, int *, int  );
int handle_PREV_DOC( int *, int *, int  );
void handle_LYK_PREV_PAGE( int *, int  );
void handle_LYK_PRINT( BOOLEAN *, int *, int  );
BOOLEAN handle_LYK_QUIT( void );
BOOLEAN handle_LYK_RAW_TOGGLE( int * );
void handle_LYK_RELOAD( int  );
void handle_LYK_REMOVE( BOOLEAN * );
void handle_LYK_RIGHT_LINK( void );
void handle_LYK_SHELL( BOOLEAN *, int *, int  );
void handle_LYK_SOFT_DQUOTES( void );
int wrap_reparse_document( void );
void handle_LYK_SOURCE( char ** );
void handle_LYK_SWITCH_DTD( void );
void handle_LYK_TAG_LINK( void );
void handle_LYK_TOGGLE_HELP( void );
void handle_LYK_TOOLBAR( BOOLEAN *, BOOLEAN *, int *, int  );
void handle_LYK_TRACE_LOG( BOOLEAN * );
void handle_LYK_UPLOAD( void );
void handle_LYK_UP_xxx( int *, int *, int , int  );
void handle_LYK_UP_HALF( int *, int *, int  );
void handle_LYK_UP_LINK( int *, int *, int *, int  );
void handle_LYK_UP_TWO( int *, int *, int  );
void handle_LYK_VIEW_BOOKMARK( BOOLEAN *, int *, int  );
BOOLEAN handle_LYK_VLINKS( int *, BOOLEAN * );
void handle_LYK_WHEREIS( int , BOOLEAN * );
void handle_LYK_digit( int , BOOLEAN *, char *, int *, int , BOOLEAN * );
void handle_LYK_CHDIR( void );
int repeat_to_delta( int  );
void handle_LYK_SHIFT_LEFT( BOOLEAN *, int  );
void handle_LYK_SHIFT_RIGHT( BOOLEAN *, int  );
BOOLEAN handle_LYK_LINEWRAP_TOGGLE( int *, BOOLEAN * );
int mainloop( void );
int are_different( DocInfo *, DocInfo * );
void HTAddGotoURL( char * );
void show_main_statusline( LinkInfo , int  );
void repaint_main_statusline( int  );
void form_noviceline( int  );
void exit_immediately_with_error_message( int , BOOLEAN  );
void status_link( char *, BOOLEAN , BOOLEAN  );
void start_curses( void );
void stop_curses( void );
void LYwaddnstr( WINDOW *, char *, size_t  );
void LYclear( void );
void LYclrtoeol( void );
void LYerase( void );
void LYmove( int , int  );
void LYrefresh( void );
void lynx_force_repaint( void );
void lynx_start_reverse( void );
void lynx_stop_reverse( void );
void LYSetDisplayLines( void );
char *get_bookmark_filename( char ** );
void save_bookmark_link( char *, char * );
void remove_bookmark_link( int , char * );
void LYMBM_statusline( char * );
char *LYGetHiliteStr( int , int  );
void LYhighlight( int , int , char * );
char *strip_trailing_slash( char * );
void statusline( char * );
void toggle_novice_line( void );
void noviceline( int  );
BOOLEAN LYisLocalFile( char * );
BOOLEAN LYisLocalHost( char * );
BOOLEAN LYisLocalAlias( char * );
UrlTypes is_url( char * );
BOOLEAN LYCanDoHEAD( char * );
BOOLEAN LYCloseOutput( FILE * );
void LYCheckMail( void );
void LYEnsureAbsoluteURL( char **, char *, int  );
char *Current_Dir( char * );
char *Home_Dir( void );
FILE *LYNewTxtFile( char * );
FILE *LYAppendToTxtFile( char * );
BOOLEAN LYIsUIPage3( char *, UIP_t , int  );
void LYRegisterUIPage( char *, UIP_t  );
char *wwwName( char * );
void LYLocalFileToURL( char **, char * );
char *trimPoundSelector( char * );
void LYAddHtmlSep( char ** );
int LYSystem( char * );
char *LYSysShell( void );
void get_clip_release( void );
char *get_clip_grab( void );
int put_clip( char * );
void LYmsec_delay( unsigned int  );
void LYoptions( void );
int popup_choice( int , int , int , char **, int , int , BOOLEAN  );
BOOLEAN textsearch( DocInfo *, char *, int , int  );
void LYAddVisitedLink( DocInfo * );
void LYFreePostData( DocInfo * );
void LYFreeDocInfo( DocInfo * );
int LYpush( DocInfo *, BOOLEAN  );
void LYpop( DocInfo * );
void LYhist_prev( DocInfo * );
void LYhist_prev_register( DocInfo * );
int LYhist_next( DocInfo *, DocInfo * );
int showhistory( char ** );
int LYShowVisitedLinks( char ** );
void LYstatusline_messages_on_exit( char ** );
int change_form_link( int , DocInfo *, BOOLEAN *, BOOLEAN , BOOLEAN  );
void show_formlink_statusline( FormInfo *, int  );
int print_options( char **, char *, int  );
int LYdownload_options( char **, char * );
Kcmd *LYStringToKcmd( char * );
char *LYKeycodeToString( int , BOOLEAN  );
char *key_for_func( int  );
char *fmt_keys( int , int  );
int LYReverseKeymap( int  );
int LYUpload_options( char **, char * );
char *LYJump( int  );
int showlist( DocInfo *, BOOLEAN  );
BOOLEAN lookup_link( char * );
void add_to_table( char * );
void add_to_traverse_list( char *, char * );
void add_to_reject_list( char * );
BOOLEAN lookup_reject( char * );
int EditBinding( int  );
int LYKeyForEditAction( int  );
void HTMLSetCharacterHandling( int  );
int style_readFromFile( char * );
BOOLEAN run_external( char *, BOOLEAN  );
int local_modify( DocInfo *, char ** );
int local_create( DocInfo * );
int local_remove( DocInfo * );
void tagflag( int , int  );
void showtags( HTList * );
int dired_options( DocInfo *, char ** );
char *HTParse( char *, char *, int  );
char *HTUnEscape( char * );
char *HTUnEscapeSome( char *, char * );
void LYUCPushAssumed( HTParentAnchor * );
int LYUCPopAssumed( void );
void HTSetSuffix5( char *, char *, char *, char *, double  );
char *HTnameOfFile_WWW( char *, BOOLEAN , BOOLEAN  );
HTFormat HTFileFormat( char *, HTAtom **, char ** );
void HTClearFTPPassword( void );
void HTSwitchDTD( int  );
HTAtom *HTAtom_for( char * );
HTParentAnchor *HTAnchor_findAddress( DocAddress * );
HyperDoc *HTAnchor_document( HTParentAnchor * );
BOOLEAN HTAnchor_safe( HTParentAnchor * );
char *HTAnchor_subject( HTParentAnchor * );
HTList *HTList_new( void );
void HTList_addObject( HTList *, void * );
BOOLEAN HTList_removeObject( HTList *, void * );
int HTList_count( HTList * );
void *HTList_objectAt( HTList *, int  );
int strcasecomp8( char *, char * );
int strcasecomp( char *, char * );
int strncasecomp( char *, char *, int  );
char *HTSACopy( char **, char * );
char *HTSACat( char **, char * );
char *HTSprintf0( char **, char *, ... );
void HTSABCopy( bstring **, char *, int  );
void HTSABCopy0( bstring **, char * );
BOOLEAN HTSABEql( bstring *, bstring * );
void HTSABFree( bstring ** );
void HTClearNNTPAuthInfo( void );
void HTClearHTTPAuthInfo( void );
int fputs( char *, FILE * );
int *__errno_location( void );
int sprintf( char *, char *, ... );
__sighandler_t signal( int , __sighandler_t  );
char *strchr( char *, char  );
char *strncpy( char *, char *, unsigned int  );
int resizeterm( int , int  );
char *strrchr( char *, char  );
void perror( char * );
char *gettext( char * );
void free( void * );
int fflush( FILE * );
int fclose( FILE * );
unsigned int strlen( char * );
int printf( char *, ... );
int chdir( char * );
int atoi( char * );
int wresize( WINDOW *, int , int  );
unsigned int fwrite( void *, unsigned int , unsigned int , FILE * );
int fprintf( FILE *, char *, ... );
char *strstr( char *, char * );
void *malloc( unsigned int  );
void __stack_chk_fail( void );
int strncmp( char *, char *, unsigned int  );
int strcmp( char *, char * );
int stat64( char *, void * );
/*****************************************************************************************/
/******                                                                             ******/
/******                        Forward Var Declarations                             ******/
/******                                                                             ******/
/*****************************************************************************************/
extern struct _IO_FILE  *stdout;
extern struct _IO_FILE  *stderr;
extern HText *HTMainText;
extern HTParentAnchor *HTMainAnchor;
extern BOOLEAN LYShowScrollbar;
extern int LYlines;
extern int LYcols;
extern LinkInfo links[1024];
extern int nlinks;
extern int nhist;
extern BOOLEAN lynx_edit_mode;
extern BOOLEAN no_dired_support;
extern BOOLEAN local_exec_on_local_files;
extern BOOLEAN LYJumpFileURL;
extern BOOLEAN LYUserSpecifiedURL;
extern BOOLEAN LYforce_no_cache;
extern BOOLEAN case_sensitive;
extern BOOLEAN dump_output_immediately;
extern BOOLEAN is_www_index;
extern BOOLEAN lynx_mode;
extern BOOLEAN more_text;
extern BOOLEAN recent_sizechange;
extern BOOLEAN verbose_img;
extern char *helpfilepath;
extern char *lynxjumpfile;
extern char *lynxlinksfile;
extern char *lynxlistfile;
extern int display_lines;
extern int keypad_mode;
extern int user_mode;
extern int www_search_result;
extern BOOLEAN no_editor;
extern BOOLEAN no_file_url;
extern BOOLEAN no_goto_cso;
extern BOOLEAN no_goto_file;
extern BOOLEAN no_goto_finger;
extern BOOLEAN no_goto_ftp;
extern BOOLEAN no_goto_gopher;
extern BOOLEAN no_goto_http;
extern BOOLEAN no_goto_https;
extern BOOLEAN no_goto_lynxcgi;
extern BOOLEAN no_goto_mailto;
extern BOOLEAN no_goto_news;
extern BOOLEAN no_goto_nntp;
extern BOOLEAN no_goto_rlogin;
extern BOOLEAN no_goto_snews;
extern BOOLEAN no_goto_telnet;
extern BOOLEAN no_goto_tn3270;
extern BOOLEAN no_goto_wais;
extern BOOLEAN no_mail;
extern BOOLEAN no_filereferer;
extern BOOLEAN local_host_only;
extern BOOLEAN show_dotfiles;
extern char *editor;
extern BOOLEAN historical_comments;
extern BOOLEAN minimal_comments;
extern BOOLEAN soft_dquotes;
extern BOOLEAN LYValidate;
extern BOOLEAN LYPermitURL;
extern BOOLEAN enable_scrollback;
extern char *authentication_info[2];
extern char *proxyauth_info[2];
extern BOOLEAN clickable_images;
extern BOOLEAN nested_tables;
extern BOOLEAN pseudo_inline_alts;
extern BOOLEAN crawl;
extern BOOLEAN traversal;
extern BOOLEAN check_realm;
extern char *startrealm;
extern BOOLEAN more_links;
extern BOOLEAN LYNoRefererForThis;
extern BOOLEAN LYRawMode;
extern BOOLEAN LYUseDefaultRawMode;
extern BOOLEAN LYSelectPopups;
extern BOOLEAN no_goto_bibp;
extern int Old_DTD;
extern BOOLEAN LYPreparsedSource;
extern FILE *LYTraceLogFP;
extern BOOLEAN textfields_need_activation;
extern HTAtom *WWW_SOURCE;
extern WINDOW *stdscr;
extern HistInfo *history;
extern HTList *tagged;
extern int LYAutoUncacheDirLists;
extern int dir_list_style;
extern BOOLEAN prev_lynx_edit_mode;
extern BOOLEAN LYUseFormsOptions;
extern BOOLEAN LYShowCursor;
extern BOOLEAN LYforce_HTML_mode;
extern BOOLEAN LYresubmit_posts;
extern BOOLEAN check_mail;
extern BOOLEAN child_lynx;
extern BOOLEAN dump_links_only;
extern BOOLEAN emacs_keys;
extern BOOLEAN error_logging;
extern BOOLEAN goto_buffer;
extern BOOLEAN long_url_ok;
extern BOOLEAN vi_keys;
extern HTList *Goto_URLs;
extern char *LYRequestReferer;
extern char *helpfile;
extern char *language;
extern char *pref_charset;
extern char *startfile;
extern int dump_server_status;
extern BOOLEAN had_restrictions_all;
extern BOOLEAN had_restrictions_default;
extern BOOLEAN no_chdir;
extern BOOLEAN no_disk_save;
extern BOOLEAN no_download;
extern BOOLEAN no_goto;
extern BOOLEAN no_goto_configinfo;
extern BOOLEAN no_goto_lynxexec;
extern BOOLEAN no_goto_lynxprog;
extern BOOLEAN no_jump;
extern BOOLEAN no_shell;
extern BOOLEAN override_no_download;
extern char *indexfile;
extern char *homepage;
extern char *bookmark_page;
extern char *BookmarkPage;
extern BOOLEAN LYRestricted;
extern BOOLEAN display_partial;
extern char *form_post_data;
extern char *form_get_data;
extern BOOLEAN HEAD_request;
extern BOOLEAN bookmark_start;
extern int crawl_count;
extern BOOLEAN LYCancelledFetch;
extern BOOLEAN nomore;
extern char *LYUserAgent;
extern BOOLEAN startfile_ok;
extern int LYMultiBookmarks;
extern BOOLEAN LYQuitDefaultYes;
extern char *LYTraceLogPath;
extern BOOLEAN LYUseTraceLog;
extern BOOLEAN textfields_activation_option;
extern BOOLEAN no_table_center;
extern WINDOW *LYwin;
extern int LYshiftWin;
extern int LYwideLines;
extern int LYtableCols;
extern BOOLEAN LYCursesON;
extern char *MBM_A_subbookmark[26];
extern BOOLEAN mustshow;
extern BOOLEAN term_options;
/* Warning:  conflicting decls for prev_target */
extern LYKeymap_t keymap[661];
extern LYKeymap_t key_override[661];
extern HTLinkType *HTInternalLink;
extern char *LYToolbarName;
extern struct JumpTable  *JThead;
extern int current_char_set;
extern BOOLEAN force_old_UCLYhndl_on_reload;
extern int forced_UCLYhdnl;
extern BOOLEAN psrc_view;
extern BOOLEAN LYpsrc;
extern int UCLYhndl_for_unspec;
extern char *use_this_url_instead;
extern HTFormat HTOutputFormat;
extern BOOLEAN reloading;
extern int HTDirAccess;
extern int HTfileSortMethod;
extern BOOLEAN WWW_TraceFlag;
/*****************************************************************************************/
/******                                                                             ******/
/******                      Inline Function Definitions                            ******/
/******                                                                             ******/
/*****************************************************************************************/
