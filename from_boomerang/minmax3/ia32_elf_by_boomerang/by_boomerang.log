got filename minmax2.c for main
got filename minmax2.c for test
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure test ###
in proc test adding addrExp r28{0} - 4 to local table
in proc test adding addrExp r28{0} - 24 to local table
in proc test adding addrExp r28{0} - 28 to local table
in proc test adding addrExp r28{0} - 32 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure test ###
in proc test adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc test adding addrExp r28{0} - 24 to local table
in proc test adding addrExp r28{0} - 28 to local table
in proc test adding addrExp r28{0} - 32 to local table
finding final parameters for test
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
in proc main adding addrExp r28{0} - 4 to local table
in proc main adding addrExp r28{0} - 28 to local table
in proc main adding addrExp r28{0} - 32 to local table
in proc main adding addrExp r28{0} - 28 to local table
in proc main adding addrExp r28{0} - 32 to local table
in proc main adding addrExp r28{0} - 28 to local table
in proc main adding addrExp r28{0} - 32 to local table
in proc main adding addrExp r28{0} - 28 to local table
in proc main adding addrExp r28{0} - 32 to local table
in proc main adding addrExp r28{0} - 28 to local table
in proc main adding addrExp r28{0} - 32 to local table
could not set type for unknown parameter expression m[r28{0} + 4]
could not set type for unknown parameter expression m[r28{0} + 8]
could not set type for unknown parameter expression m[r28{0} + 12]
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure test ###
finding final parameters for test
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
local ecx has type /*signed?*/int that doesn't agree with type of define __size32 of a library, why?
local edx has type /*signed?*/int that doesn't agree with type of define __size32 of a library, why?
local esp has type __size32 that doesn't agree with type of define void of a library, why?
dest is not lib
call:   19 {*32* r25, *32* r26, *32* r27} := CALL test(
                *i32* local0 := -5
              )
              Reaching definitions: r24=0,   r28=r28{0} - 32,   r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 28]=-5,   m[r28{0} - 32]=%pc,   tmp1=r28{0} - 12,
                %flags=SUBFLAGS32( r28{0} - 12, 12, r28{0} - 24 ),   %ZF=(r28{0} - 24) = 0,   %CF=(r28{0} - 12) <u 12
              Live variables:  in proc main
dest is not lib
call:   31 {*32* r25, *32* r26, *32* r27} := CALL test(
                *i32* local0 := -2
              )
              Reaching definitions: r24=r24{19},   r25=r25{19},   r26=r26{19},   r27=r27{19},   r28=r28{0} - 32,
                r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},
                m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 28]=-2,   m[r28{0} - 32]=%pc,
                tmp1=r28{0} - 12,   %flags=SUBFLAGS32( r28{0} - 12, 12, r28{0} - 24 ),   %ZF=(r28{0} - 24) = 0,
                %CF=(r28{0} - 12) <u 12
              Live variables:  in proc main
dest is not lib
call:   43 {*32* r25, *32* r26, *32* r27} := CALL test(
                *i32* local0 := 0
              )
              Reaching definitions: r24=r24{31},   r25=r25{31},   r26=r26{31},   r27=r27{31},   r28=r28{0} - 32,
                r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},
                m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 28]=0,   m[r28{0} - 32]=%pc,
                tmp1=r28{0} - 12,   %flags=SUBFLAGS32( r28{0} - 12, 12, r28{0} - 24 ),   %ZF=(r28{0} - 24) = 0,
                %CF=(r28{0} - 12) <u 12
              Live variables:  in proc main
dest is not lib
call:   55 {*32* r25, *32* r26, *32* r27} := CALL test(
                *i32* local0 := argc
              )
              Reaching definitions: r24=r24{43},   r25=r25{43},   r26=r26{43},   r27=r27{43},   r28=r28{0} - 32,
                r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},
                m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 28]=m[r28{0} + 4]{0},
                m[r28{0} - 32]=%pc,   tmp1=r28{0} - 12,   %flags=SUBFLAGS32( r28{0} - 12, 12, r28{0} - 24 ),
                %ZF=(r28{0} - 24) = 0,   %CF=(r28{0} - 12) <u 12
              Live variables:  in proc main
dest is not lib
call:   67 {*32* r25, *32* r26, *32* r27} := CALL test(
                *i32* local0 := 5
              )
              Reaching definitions: r24=r24{55},   r25=r25{55},   r26=r26{55},   r27=r27{55},   r28=r28{0} - 32,
                r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},
                m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 28]=5,   m[r28{0} - 32]=%pc,
                tmp1=r28{0} - 12,   %flags=SUBFLAGS32( r28{0} - 12, 12, r28{0} - 24 ),   %ZF=(r28{0} - 24) = 0,
                %CF=(r28{0} - 12) <u 12
              Live variables:  in proc main
dest is not lib
call:   50 {*32* r24, *32* ecx, *32* edx} := CALL printf(
                *c** local0 := "MinMax result %d
"
                *j32* local1 := edx + 3
              )
              Reaching definitions: r24=m[r28{0} + 4]{0} >>A 31,   r25=r25{17},   r26=r26{35} + 3,   r27=r27{33},
                r28=r28{0} - 32,   r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 24]=r26{35} + 3,   m[r28{0} - 28]=0x8048474,   m[r28{0} - 32]=%pc,   tmp1=r28{0} - 12,
                %flags=SUBFLAGS32( r28{0} - 12, 8, r28{0} - 20 ),   %ZF=(r28{0} - 20) = 0,   %CF=(r28{0} - 12) <u 8
              Live variables:  in proc test
