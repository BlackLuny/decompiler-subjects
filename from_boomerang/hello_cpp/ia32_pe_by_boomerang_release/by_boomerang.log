assgn    7 *32* r30 := m[0x4040c4]
is readonly
assgn   29 *32* %pc := m[0x4040c8]
is readonly
assgn   50 *32* %pc := m[0x4040cc]
is readonly
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
in proc proc1 adding addrExp r28{0} - 52 to local table
in proc proc1 adding addrExp r28{0} - 56 to local table
in proc proc1 adding addrExp r28{0} - 60 to local table
in proc proc1 adding addrExp r28{0} - 48 to local table
in proc proc1 adding addrExp r28{0} - 44 to local table
in proc proc1 adding addrExp r28{0} - 40 to local table
in proc proc1 adding addrExp r28{0} - 36 to local table
in proc proc1 adding addrExp r28{0} - 32 to local table
in proc proc1 adding addrExp r28{0} - 28 to local table
in proc proc1 adding addrExp r28{0} - 64 to local table
finding final parameters for proc1
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
assgn   31 *32* %pc := m[0x4040b8]
is readonly
assgn   49 *32* %pc := m[0x4040bc]
is readonly
assgn   55 *32* %pc := m[0x4040c0]
is readonly
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc2 ###
in proc proc2 adding addrExp r28{0} - 4 to local table
in proc proc2 adding addrExp r28{0} - 8 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 16 to local table
in proc proc2 adding addrExp r28{0} - 20 to local table
in proc proc2 adding addrExp r28{0} - 24 to local table
in proc proc2 adding addrExp r28{0} - 28 to local table
in proc proc2 adding addrExp r28{0} - 32 to local table
in proc proc2 adding addrExp r28{0} - 36 to local table
in proc proc2 adding addrExp r28{0} - 40 to local table
in proc proc2 adding addrExp r28{0} - 44 to local table
in proc proc2 adding addrExp r28{0} - 48 to local table
in proc proc2 adding addrExp r28{0} - 52 to local table
in proc proc2 adding addrExp r28{0} - 56 to local table
in proc proc2 adding addrExp r28{0} - 8 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 16 to local table
in proc proc2 adding addrExp r28{0} - 8 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 16 to local table
in proc proc2 adding addrExp r28{0} - 8 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
finding final parameters for proc2
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
assgn    9 *32* r31 := m[0x4040d0]
is readonly
assgn   71 *32* %pc := m[0x4040d4]
is readonly
assgn   73 *32* r31 := m[0x4040d8]
is readonly
assgn   93 *32* r27 := m[0x4040dc]
is readonly
assgn   96 *32* r29 := m[0x4040e0]
is readonly
assgn  124 *32* %pc := m[0x4040e4]
is readonly
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure WinMain ###
in proc WinMain adding addrExp r28{0} - 32 to local table
in proc WinMain adding addrExp r28{0} - 36 to local table
in proc WinMain adding addrExp r28{0} - 40 to local table
in proc WinMain adding addrExp r28{0} - 44 to local table
in proc WinMain adding addrExp r28{0} - 48 to local table
in proc WinMain adding addrExp r28{0} - 52 to local table
in proc WinMain adding addrExp r28{0} - 56 to local table
in proc WinMain adding addrExp r28{0} - 32 to local table
TYPE ERROR: Existing type at address 0xffffffe0 is not structure or array type
in proc WinMain adding addrExp r28{0} - 36 to local table
TYPE ERROR: Existing type at address 0xffffffdc is not structure or array type
in proc WinMain adding addrExp r28{0} - 40 to local table
TYPE ERROR: Existing type at address 0xffffffd8 is not structure or array type
in proc WinMain adding addrExp r28{0} - 44 to local table
TYPE ERROR: Existing type at address 0xffffffd4 is not structure or array type
in proc WinMain adding addrExp r28{0} - 48 to local table
TYPE ERROR: Existing type at address 0xffffffd0 is not structure or array type
in proc WinMain adding addrExp r28{0} - 52 to local table
TYPE ERROR: Existing type at address 0xffffffcc is not structure or array type
in proc WinMain adding addrExp r28{0} - 56 to local table
TYPE ERROR: Existing type at address 0xffffffc8 is not structure or array type
in proc WinMain adding addrExp r28{0} - 32 to local table
TYPE ERROR: Existing type at address 0xffffffe0 is not structure or array type
in proc WinMain adding addrExp r28{0} - 36 to local table
TYPE ERROR: Existing type at address 0xffffffdc is not structure or array type
in proc WinMain adding addrExp r28{0} - 40 to local table
TYPE ERROR: Existing type at address 0xffffffd8 is not structure or array type
in proc WinMain adding addrExp r28{0} - 44 to local table
TYPE ERROR: Existing type at address 0xffffffd4 is not structure or array type
in proc WinMain adding addrExp r28{0} - 48 to local table
TYPE ERROR: Existing type at address 0xffffffd0 is not structure or array type
in proc WinMain adding addrExp r28{0} - 52 to local table
TYPE ERROR: Existing type at address 0xffffffcc is not structure or array type
in proc WinMain adding addrExp r28{0} - 56 to local table
TYPE ERROR: Existing type at address 0xffffffc8 is not structure or array type
in proc WinMain adding addrExp r28{0} - 32 to local table
TYPE ERROR: Existing type at address 0xffffffe0 is not structure or array type
in proc WinMain adding addrExp r28{0} - 36 to local table
TYPE ERROR: Existing type at address 0xffffffdc is not structure or array type
in proc WinMain adding addrExp r28{0} - 40 to local table
TYPE ERROR: Existing type at address 0xffffffd8 is not structure or array type
in proc WinMain adding addrExp r28{0} - 44 to local table
TYPE ERROR: Existing type at address 0xffffffd4 is not structure or array type
in proc WinMain adding addrExp r28{0} - 48 to local table
TYPE ERROR: Existing type at address 0xffffffd0 is not structure or array type
in proc WinMain adding addrExp r28{0} - 52 to local table
TYPE ERROR: Existing type at address 0xffffffcc is not structure or array type
in proc WinMain adding addrExp r28{0} - 56 to local table
TYPE ERROR: Existing type at address 0xffffffc8 is not structure or array type
in proc WinMain adding addrExp r28{0} - 32 to local table
TYPE ERROR: Existing type at address 0xffffffe0 is not structure or array type
in proc WinMain adding addrExp r28{0} - 36 to local table
TYPE ERROR: Existing type at address 0xffffffdc is not structure or array type
in proc WinMain adding addrExp r28{0} - 40 to local table
TYPE ERROR: Existing type at address 0xffffffd8 is not structure or array type
in proc WinMain adding addrExp r28{0} - 44 to local table
TYPE ERROR: Existing type at address 0xffffffd4 is not structure or array type
in proc WinMain adding addrExp r28{0} - 48 to local table
TYPE ERROR: Existing type at address 0xffffffd0 is not structure or array type
in proc WinMain adding addrExp r28{0} - 52 to local table
TYPE ERROR: Existing type at address 0xffffffcc is not structure or array type
in proc WinMain adding addrExp r28{0} - 56 to local table
TYPE ERROR: Existing type at address 0xffffffc8 is not structure or array type
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure WinMain ###
could not set type for unknown parameter expression m[r28{0} + 4]
could not set type for unknown parameter expression m[r28{0} + 8]
could not set type for unknown parameter expression m[r28{0} + 12]
could not set type for unknown parameter expression m[r28{0} + 16]
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc1 ###
finding final parameters for proc1
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for proc2
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
local ecx has type __size32 that doesn't agree with type of define void of a library, why?
local esp has type unsigned int that doesn't agree with type of define void of a library, why?
local ecx has type void that doesn't agree with type of define __size32 of a library, why?
local esp has type void that doesn't agree with type of define void * of a library, why?
local esp has type unsigned int that doesn't agree with type of define void of a library, why?
local ecx has type void that doesn't agree with type of define __size32 of a library, why?
local edx has type void that doesn't agree with type of define __size32 of a library, why?
local esp has type __size32 that doesn't agree with type of define void of a library, why?
local eax has type HWND that doesn't agree with type of define __size32 of a library, why?
dest is not lib
call:   39 {*32* eax, *32* esi, *v* ecx, *v* edx, *LPCSTR** esp_1} := CALL proc1(
                *32* m[esp_1 - 4] := m[esp_1 - 4]
              )
              Reaching definitions: r24=r24{33},   r25=r25{33},   r26=r26{33},   r27=r27{33},   r28=r28{33} - 8,
                r29=r29{33},   r30=r30{33},   r31=r31{33},   m[r28{0} + 4]=m[r28{0} + 4]{33},
                m[r28{0} + 8]=m[r28{0} + 8]{33},   m[r28{0} + 12]=m[r28{0} + 12]{33},
                m[r28{0} + 16]=m[r28{0} + 16]{33},   m[r28{0} - 32]=m[r28{0} - 32]{33},
                m[r28{0} - 36]=m[r28{0} - 36]{33},   m[r28{0} - 40]=m[r28{0} - 40]{33},
                m[r28{0} - 44]=m[r28{0} - 44]{33},   m[r28{0} - 48]=m[r28{0} - 48]{33},
                m[r28{0} - 52]=m[r28{0} - 52]{33},   m[r28{0} - 56]=m[r28{0} - 56]{33},
                m[r28{0} - 32]=m[r28{0} - 32]{33},   m[r28{0} - 36]=m[r28{0} - 36]{33},
                m[r28{0} - 40]=m[r28{0} - 40]{33},   m[r28{0} - 44]=m[r28{0} - 44]{33},
                m[r28{0} - 48]=m[r28{0} - 48]{33},   m[r28{0} - 52]=m[r28{0} - 52]{33},
                m[r28{0} - 56]=m[r28{0} - 56]{33},   <all>=<all>{33},   tmp1=tmp1{33},   %flags=%flags{33},
                %ZF=%ZF{33},   %CF=%CF{33}
              Live variables: esi,  esp_1 in proc WinMain
result:    0 *32* esi := -
result:    0 *LPCSTR** esp_1 := -
dest is not lib
call:   48 {*32* eax_1, *32* ecx, *32* edx, *v* esp} := CALL proc2(
                *i32* m[esp_1 - 4] := m[esp_1 - 4]
                *HINSTANCE* m[esp_1 - 8] := m[esp_1 - 8]
              )
              Reaching definitions: r24=r24{40},   r25=r25{39},   r26=r26{39},   r27=r27{33},   r28=r28{39} - 12,
                r29=r29{33},   r30=r30{39},   r31=r31{33},   m[r28{0} + 4]=m[r28{0} + 4]{33},
                m[r28{0} + 8]=m[r28{0} + 8]{33},   m[r28{0} + 12]=m[r28{0} + 12]{33},
                m[r28{0} + 16]=m[r28{0} + 16]{33},   m[r28{0} - 32]=m[r28{0} - 32]{33},
                m[r28{0} - 36]=m[r28{0} - 36]{33},   m[r28{0} - 40]=m[r28{0} - 40]{33},
                m[r28{0} - 44]=m[r28{0} - 44]{33},   m[r28{0} - 48]=m[r28{0} - 48]{33},
                m[r28{0} - 52]=m[r28{0} - 52]{33},   m[r28{0} - 56]=m[r28{0} - 56]{33},
                m[r28{0} - 32]=m[r28{0} - 32]{33},   m[r28{0} - 36]=m[r28{0} - 36]{33},
                m[r28{0} - 40]=m[r28{0} - 40]{33},   m[r28{0} - 44]=m[r28{0} - 44]{33},
                m[r28{0} - 48]=m[r28{0} - 48]{33},   m[r28{0} - 52]=m[r28{0} - 52]{33},
                m[r28{0} - 56]=m[r28{0} - 56]{33},   <all>=<all>{33},   tmp1=tmp1{33},   %flags=%flags{33},
                %ZF=%ZF{33},   %CF=%CF{33}
              Live variables: eax_1 in proc WinMain
result:    0 *32* eax_1 := -
dest is not lib
call:   72 {*32* eax, *v* ecx, *32* edx, *v* esp} := CALL LoadAcceleratorsA(
                *HINSTANCE* m[esp_1 - 4] := m[esp_1 - 4]
                *LPCSTR* m[esp_1] := m[esp_1]
              )
              Reaching definitions: r24=r24{48},   r25=r25{48},   r26=r26{48},   r27=r27{33},   r28=(r28{39} - 12) + 4,
                r29=r29{33},   r30=r30{39},   r31=r31{33},   m[r28{0} + 4]=m[r28{0} + 4]{33},
                m[r28{0} + 8]=m[r28{0} + 8]{33},   m[r28{0} + 12]=m[r28{0} + 12]{33},
                m[r28{0} + 16]=m[r28{0} + 16]{33},   m[r28{0} - 32]=m[r28{0} - 32]{33},
                m[r28{0} - 36]=m[r28{0} - 36]{33},   m[r28{0} - 40]=m[r28{0} - 40]{33},
                m[r28{0} - 44]=m[r28{0} - 44]{33},   m[r28{0} - 48]=m[r28{0} - 48]{33},
                m[r28{0} - 52]=m[r28{0} - 52]{33},   m[r28{0} - 56]=m[r28{0} - 56]{33},
                m[r28{0} - 32]=m[r28{0} - 32]{33},   m[r28{0} - 36]=m[r28{0} - 36]{33},
                m[r28{0} - 40]=m[r28{0} - 40]{33},   m[r28{0} - 44]=m[r28{0} - 44]{33},
                m[r28{0} - 48]=m[r28{0} - 48]{33},   m[r28{0} - 52]=m[r28{0} - 52]{33},
                m[r28{0} - 56]=m[r28{0} - 56]{33},   <all>=<all>{33},   tmp1=r24{48},
                %flags=LOGICALFLAGS32( r24{48} ),   %ZF=LOGICALFLAGS32( r24{48} ),   %CF=LOGICALFLAGS32( r24{48} )
              Live variables: eax,  edx in proc WinMain
result:    0 *32* eax := -
result:    0 *32* edx := -
dest is not lib
call:  125 {*32* eax, *32* ecx, *32* edx, *v** esp} := CALL DispatchMessageA(
                *MSG** m[esp - 4] := m[esp - 4]
              )
              Reaching definitions: r24=r24{118},   r25=r25{118},   r26=r28{118} + 16,   r27=r27{118},
                r28=r28{118} - 8,   r29=r29{118},   r30=r30{118},   r31=r31{118},   m[r28{0} + 4]=m[r28{0} + 4]{118},
                m[r28{0} + 8]=m[r28{0} + 8]{118},   m[r28{0} + 12]=m[r28{0} + 12]{118},
                m[r28{0} + 16]=m[r28{0} + 16]{118},   m[r28{0} - 32]=m[r28{0} - 32]{118},
                m[r28{0} - 36]=m[r28{0} - 36]{118},   m[r28{0} - 40]=m[r28{0} - 40]{118},
                m[r28{0} - 44]=m[r28{0} - 44]{118},   m[r28{0} - 48]=m[r28{0} - 48]{118},
                m[r28{0} - 52]=m[r28{0} - 52]{118},   m[r28{0} - 56]=m[r28{0} - 56]{118},
                m[r28{0} - 32]=m[r28{0} - 32]{118},   m[r28{0} - 36]=m[r28{0} - 36]{118},
                m[r28{0} - 40]=m[r28{0} - 40]{118},   m[r28{0} - 44]=m[r28{0} - 44]{118},
                m[r28{0} - 48]=m[r28{0} - 48]{118},   m[r28{0} - 52]=m[r28{0} - 52]{118},
                m[r28{0} - 56]=m[r28{0} - 56]{118},   <all>=<all>{118},   tmp1=tmp1{118},   %flags=%flags{118},
                %ZF=%ZF{118},   %CF=%CF{118}
              Live variables: ecx,  edx,  esp in proc WinMain
result:    0 *32* ecx := -
result:    0 *32* edx := -
result:    0 *v** esp := -
dest is not lib
call:   30 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL LoadCursorA(
                *HINSTANCE* m[esp_1 - 8] := m[esp_1 - 8]
                *LPCSTR* m[esp_1 - 4] := m[esp_1 - 4]
              )
              Reaching definitions: r24=r24{21},   r25=r25{21},   r26=r26{21},   r28=r28{21} - 12,   r30=r30{21},
                m[r28{0} + 4]=m[r28{0} + 4]{21},   m[r28{0} - 28]=m[r28{0} - 28]{21},
                m[r28{0} - 32]=m[r28{0} - 32]{21},   m[r28{0} - 36]=m[r28{0} - 36]{21},
                m[r28{0} - 40]=m[r28{0} - 40]{21},   m[r28{0} - 44]=m[r28{0} - 44]{21},
                m[r28{0} - 48]=m[r28{0} - 48]{21},   m[r28{0} - 52]=m[r28{0} - 52]{21},
                m[r28{0} - 56]=m[r28{0} - 56]{21},   m[r28{0} - 60]=m[r28{0} - 60]{21},
                m[r28{0} - 64]=m[r28{0} - 64]{21},   m[r28{0} - 28]=m[r28{0} - 28]{21},
                m[r28{0} - 32]=m[r28{0} - 32]{21},   m[r28{0} - 36]=m[r28{0} - 36]{21},
                m[r28{0} - 40]=m[r28{0} - 40]{21},   m[r28{0} - 44]=m[r28{0} - 44]{21},
                m[r28{0} - 48]=m[r28{0} - 48]{21},   m[r28{0} - 52]=m[r28{0} - 52]{21},
                m[r28{0} - 56]=m[r28{0} - 56]{21},   m[r28{0} - 60]=m[r28{0} - 60]{21},
                m[r28{0} - 64]=m[r28{0} - 64]{21},   <all>=<all>{21},   tmp1=tmp1{21},   %flags=%flags{21},
                %ZF=%ZF{21},   %CF=%CF{21}
              Live variables: eax,  ecx,  edx in proc proc1
result:    0 *32* eax := -
result:    0 *v* ecx := -
result:    0 *v* edx := -
dest is not lib
call:   51 {*32* eax, *32* ecx, *32* edx, *v* esp} := CALL RegisterClassExA(
                *WNDCLASSEX** m[esp - 4] := m[esp - 4]
              )
              Reaching definitions: r24=r24{43},   r25=r28{43} + 4,   r26=r26{43},   r28=r28{43} - 8,   r30=r30{43},
                m[r28{0} + 4]=m[r28{0} + 4]{43},   m[r28{0} - 28]=m[r28{0} - 28]{43},
                m[r28{0} - 32]=m[r28{0} - 32]{43},   m[r28{0} - 36]=m[r28{0} - 36]{43},
                m[r28{0} - 40]=m[r28{0} - 40]{43},   m[r28{0} - 44]=m[r28{0} - 44]{43},
                m[r28{0} - 48]=m[r28{0} - 48]{43},   m[r28{0} - 52]=m[r28{0} - 52]{43},
                m[r28{0} - 56]=m[r28{0} - 56]{43},   m[r28{0} - 60]=m[r28{0} - 60]{43},
                m[r28{0} - 64]=m[r28{0} - 64]{43},   m[r28{0} - 28]=m[r28{0} - 28]{43},
                m[r28{0} - 32]=m[r28{0} - 32]{43},   m[r28{0} - 36]=m[r28{0} - 36]{43},
                m[r28{0} - 40]=m[r28{0} - 40]{43},   m[r28{0} - 44]=m[r28{0} - 44]{43},
                m[r28{0} - 48]=m[r28{0} - 48]{43},   m[r28{0} - 52]=m[r28{0} - 52]{43},
                m[r28{0} - 56]=m[r28{0} - 56]{43},   m[r28{0} - 60]=m[r28{0} - 60]{43},
                m[r28{0} - 64]=m[r28{0} - 64]{43},   <all>=<all>{43},   tmp1=tmp1{43},   %flags=%flags{43},
                %ZF=%ZF{43},   %CF=%CF{43}
              Live variables:  in proc proc1
dest is not lib
call:   32 {*HWND* eax, *32* r25, *32* r26} := CALL CreateWindowExA(
                *DWORD* local0 := 0
                *LPCSTR* local1 := ""
                *LPCSTR* local2 := ""
                *DWORD* local3 := 0xcf0000
                *i32* local4 := 0x80000000
                *i32* local5 := 0
                *i32* local6 := 0x80000000
                *i32* local7 := 0
                *HWND* local8 := 0
                *HMENU* local9 := 0
                *HINSTANCE* local10 := param1
                *LPVOID* local11 := 0
              )
              Reaching definitions: r24=m[r28{0} + 4]{0},   r28=r28{0} - 56,   r30=r30{0},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r30{0},
                m[r28{0} - 8]=0,   m[r28{0} - 12]=m[r28{0} + 4]{0},   m[r28{0} - 16]=0,   m[r28{0} - 20]=0,
                m[r28{0} - 24]=0,   m[r28{0} - 28]=0x80000000,   m[r28{0} - 32]=0,   m[r28{0} - 36]=0x80000000,
                m[r28{0} - 40]=0xcf0000,   m[r28{0} - 44]=0x4054f4,   m[r28{0} - 48]=0x405490,   m[r28{0} - 52]=0,
                m[r28{0} - 56]=%pc
              Live variables: eax in proc proc2
result:    0 *HWND* eax := -
dest is not lib
call:   50 {*32* eax, *v* r25, *v* r26} := CALL ShowWindow(
                *HWND* local10 := eax
                *i32* local12 := param2
              )
              Reaching definitions: r24=m[r28{0} + 8]{0},   r25=r25{32},   r26=r26{32},   r28=r28{0} - 16,
                r30=r24{32},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r30{0}
                m[r28{0} - 8]=m[r28{0} + 8]{0},   m[r28{0} - 12]=r24{32},   m[r28{0} - 16]=%pc,   m[r28{0} - 20]=0,
                m[r28{0} - 24]=0,   m[r28{0} - 28]=0x80000000,   m[r28{0} - 32]=0,   m[r28{0} - 36]=0x80000000,
                m[r28{0} - 40]=0xcf0000,   m[r28{0} - 44]=0x4054f4,   m[r28{0} - 48]=0x405490,   m[r28{0} - 52]=0,
                m[r28{0} - 56]=%pc,   tmp1=r24{32},   %flags=LOGICALFLAGS32( r24{32} ),   %ZF=LOGICALFLAGS32( r24{32} )
                %CF=LOGICALFLAGS32( r24{32} )
              Live variables:  in proc proc2
dest is not lib
call:   56 {*32* eax, *32* r25, *32* r26} := CALL UpdateWindow(
                *HWND* local12 := eax
              )
              Reaching definitions: r24=r24{50},   r25=r25{50},   r26=r26{50},   r28=r28{0} - 12,   r30=r24{32},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r30{0},
                m[r28{0} - 8]=r24{32},   m[r28{0} - 12]=%pc,   m[r28{0} - 16]=%pc,   m[r28{0} - 20]=0,
                m[r28{0} - 24]=0,   m[r28{0} - 28]=0x80000000,   m[r28{0} - 32]=0,   m[r28{0} - 36]=0x80000000,
                m[r28{0} - 40]=0xcf0000,   m[r28{0} - 44]=0x4054f4,   m[r28{0} - 48]=0x405490,   m[r28{0} - 52]=0,
                m[r28{0} - 56]=%pc,   tmp1=r24{32},   %flags=LOGICALFLAGS32( r24{32} ),   %ZF=LOGICALFLAGS32( r24{32} )
                %CF=LOGICALFLAGS32( r24{32} )
              Live variables:  in proc proc2
