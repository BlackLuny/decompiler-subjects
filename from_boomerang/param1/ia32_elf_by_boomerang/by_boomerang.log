got filename param1.c for main
got filename param1.c for cparam
after removing matching assigns (%pc).
in proc cparam adding addrExp r28{0} - 4 to local table
finding final parameters for cparam
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
in proc main adding addrExp r28{0} - 4 to local table
in proc main adding addrExp r28{0} - 32 to local table
in proc main adding addrExp r28{0} - 36 to local table
in proc main adding addrExp r28{0} - 40 to local table
in proc main adding addrExp r28{0} - 40 to local table
in proc main adding addrExp r28{0} - 44 to local table
in proc main adding addrExp r28{0} - 48 to local table
in proc main adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc main adding addrExp r28{0} - 32 to local table
in proc main adding addrExp r28{0} - 36 to local table
in proc main adding addrExp r28{0} - 40 to local table
in proc main adding addrExp r28{0} - 40 to local table
in proc main adding addrExp r28{0} - 44 to local table
in proc main adding addrExp r28{0} - 48 to local table
could not set type for unknown parameter expression m[r28{0} + 4]
could not set type for unknown parameter expression m[r28{0} + 8]
could not set type for unknown parameter expression m[r28{0} + 12]
local eax has type /*signed?*/int that doesn't agree with type of define __size32 of a library, why?
local esp has type __size32 that doesn't agree with type of define void of a library, why?
dest is not lib
call:   34 *j32* eax := CALL cparam(
                *i32* local0 := argc - 3
                *32* local1 := 2
              )
              Reaching definitions: r24=m[r28{0} + 4]{0} - 3,   r28=r28{0} - 40,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 32]=2,   m[r28{0} - 36]=m[r28{0} + 4]{0} - 3,   m[r28{0} - 40]=%pc,
                tmp1=m[r28{0} + 4]{0},   %flags=SUBFLAGS32( m[r28{0} + 4]{0}, 3, m[r28{0} + 4]{0} - 3 ),
                %ZF=(m[r28{0} + 4]{0} - 3) = 0,   %CF=m[r28{0} + 4]{0} <u 3
              Live variables: eax in proc main
result:    0 *j32* eax := -
dest is not lib
call:   48 {*32* eax, *32* r25, *32* r26} := CALL printf(
                *c** local2 := "Result is %d
"
                *j32* local3 := eax
              )
              Reaching definitions: r24=r24{34},   r28=r28{0} - 48,   r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 32]=2,   m[r28{0} - 36]=m[r28{0} + 4]{0} - 3,   m[r28{0} - 40]=r24{34},
                m[r28{0} - 44]=0x8048480,   m[r28{0} - 48]=%pc,   tmp1=r28{0} - 28,
                %flags=SUBFLAGS32( r28{0} - 28, 8, r28{0} - 36 ),   %ZF=(r28{0} - 36) = 0,   %CF=(r28{0} - 28) <u 8
              Live variables:  in proc main
