got filename fbranch.c for main
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
WARNING: size 0x20 meet with double; allowing temporarily
WARNING: size 0x50 meet with double; allowing temporarily
WARNING: size 0x20 meet with double; allowing temporarily
WARNING: size 0x50 meet with double; allowing temporarily
WARNING: size 0x20 meet with double; allowing temporarily
WARNING: size 0x20 meet with double; allowing temporarily
WARNING: size 0x50 meet with double; allowing temporarily
WARNING: size 0x20 meet with double; allowing temporarily
WARNING: size 0x20 meet with double; allowing temporarily
WARNING: size 0x50 meet with double; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure main ###
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 4 to local table
in proc main adding addrExp r28{0} - 24 to local table
in proc main adding addrExp r28{0} - 28 to local table
in proc main adding addrExp r28{0} - 32 to local table
in proc main adding addrExp r28{0} - 32 to local table
in proc main adding addrExp r28{0} - 32 to local table
TYPE ERROR: at address 0xffffffe0, overlapping type double does not resolve to compound or array
in proc main adding addrExp r28{0} - 36 to local table
in proc main adding addrExp r28{0} - 40 to local table
in proc main adding addrExp r28{0} - 44 to local table
in proc main adding addrExp r28{0} - 48 to local table
in proc main adding addrExp r28{0} - 28 to local table
in proc main adding addrExp r28{0} - 32 to local table
TYPE ERROR: at address 0xffffffe0, overlapping type union { double x27; unsigned int x28; } does not resolve to compound or array
in proc main adding addrExp r28{0} - 28 to local table
in proc main adding addrExp r28{0} - 32 to local table
TYPE ERROR: at address 0xffffffe0, overlapping type union { double x27; unsigned int x28; } does not resolve to compound or array
in proc main adding addrExp r28{0} - 28 to local table
in proc main adding addrExp r28{0} - 32 to local table
TYPE ERROR: at address 0xffffffe0, overlapping type union { double x27; unsigned int x28; } does not resolve to compound or array
in proc main adding addrExp r28{0} - 28 to local table
in proc main adding addrExp r28{0} - 32 to local table
TYPE ERROR: at address 0xffffffe0, overlapping type union { double x27; unsigned int x28; } does not resolve to compound or array
in proc main adding addrExp r28{0} - 28 to local table
in proc main adding addrExp r28{0} - 32 to local table
TYPE ERROR: at address 0xffffffe0, overlapping type union { double x27; unsigned int x28; } does not resolve to compound or array
in proc main adding addrExp r28{0} - 28 to local table
in proc main adding addrExp r28{0} - 32 to local table
TYPE ERROR: at address 0xffffffe0, overlapping type union { double x27; unsigned int x28; } does not resolve to compound or array
in proc main adding addrExp r28{0} - 28 to local table
in proc main adding addrExp r28{0} - 32 to local table
TYPE ERROR: at address 0xffffffe0, overlapping type union { double x17; unsigned int x18; } does not resolve to compound or array
in proc main adding addrExp r28{0} - 28 to local table
in proc main adding addrExp r28{0} - 32 to local table
TYPE ERROR: at address 0xffffffe0, overlapping type union { double x19; unsigned int x20; } does not resolve to compound or array
in proc main adding addrExp r28{0} - 28 to local table
in proc main adding addrExp r28{0} - 32 to local table
TYPE ERROR: at address 0xffffffe0, overlapping type union { double x21; unsigned int x22; } does not resolve to compound or array
in proc main adding addrExp r28{0} - 28 to local table
in proc main adding addrExp r28{0} - 32 to local table
TYPE ERROR: at address 0xffffffe0, overlapping type union { double x23; unsigned int x24; } does not resolve to compound or array
in proc main adding addrExp r28{0} - 28 to local table
in proc main adding addrExp r28{0} - 32 to local table
TYPE ERROR: at address 0xffffffe0, overlapping type union { double x25; unsigned int x26; } does not resolve to compound or array
in proc main adding addrExp r28{0} - 28 to local table
in proc main adding addrExp r28{0} - 32 to local table
TYPE ERROR: at address 0xffffffe0, overlapping type union { double x27; unsigned int x28; } does not resolve to compound or array
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure main ###
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc main adding addrExp r28{0} - 24 to local table
in proc main adding addrExp r28{0} - 28 to local table
in proc main adding addrExp r28{0} - 32 to local table
in proc main adding addrExp r28{0} - 32 to local table
in proc main adding addrExp r28{0} - 32 to local table
TYPE ERROR: at address 0xffffffe0, overlapping type double does not resolve to compound or array
in proc main adding addrExp r28{0} - 36 to local table
in proc main adding addrExp r28{0} - 40 to local table
in proc main adding addrExp r28{0} - 44 to local table
in proc main adding addrExp r28{0} - 48 to local table
in proc main adding addrExp r28{0} - 28 to local table
in proc main adding addrExp r28{0} - 32 to local table
TYPE ERROR: at address 0xffffffe0, overlapping type union { double x27; unsigned int x28; } does not resolve to compound or array
in proc main adding addrExp r28{0} - 28 to local table
in proc main adding addrExp r28{0} - 32 to local table
TYPE ERROR: at address 0xffffffe0, overlapping type union { double x27; unsigned int x28; } does not resolve to compound or array
in proc main adding addrExp r28{0} - 28 to local table
in proc main adding addrExp r28{0} - 32 to local table
TYPE ERROR: at address 0xffffffe0, overlapping type union { double x27; unsigned int x28; } does not resolve to compound or array
in proc main adding addrExp r28{0} - 28 to local table
in proc main adding addrExp r28{0} - 32 to local table
TYPE ERROR: at address 0xffffffe0, overlapping type union { double x27; unsigned int x28; } does not resolve to compound or array
in proc main adding addrExp r28{0} - 28 to local table
in proc main adding addrExp r28{0} - 32 to local table
TYPE ERROR: at address 0xffffffe0, overlapping type union { double x27; unsigned int x28; } does not resolve to compound or array
in proc main adding addrExp r28{0} - 28 to local table
in proc main adding addrExp r28{0} - 32 to local table
TYPE ERROR: at address 0xffffffe0, overlapping type union { double x27; unsigned int x28; } does not resolve to compound or array
in proc main adding addrExp r28{0} - 28 to local table
in proc main adding addrExp r28{0} - 32 to local table
TYPE ERROR: at address 0xffffffe0, overlapping type union { double x17; unsigned int x18; } does not resolve to compound or array
in proc main adding addrExp r28{0} - 28 to local table
in proc main adding addrExp r28{0} - 32 to local table
TYPE ERROR: at address 0xffffffe0, overlapping type union { double x19; unsigned int x20; } does not resolve to compound or array
in proc main adding addrExp r28{0} - 28 to local table
in proc main adding addrExp r28{0} - 32 to local table
TYPE ERROR: at address 0xffffffe0, overlapping type union { double x21; unsigned int x22; } does not resolve to compound or array
in proc main adding addrExp r28{0} - 28 to local table
in proc main adding addrExp r28{0} - 32 to local table
TYPE ERROR: at address 0xffffffe0, overlapping type union { double x23; unsigned int x24; } does not resolve to compound or array
in proc main adding addrExp r28{0} - 28 to local table
in proc main adding addrExp r28{0} - 32 to local table
TYPE ERROR: at address 0xffffffe0, overlapping type union { double x25; unsigned int x26; } does not resolve to compound or array
in proc main adding addrExp r28{0} - 28 to local table
in proc main adding addrExp r28{0} - 32 to local table
TYPE ERROR: at address 0xffffffe0, overlapping type union { double x27; unsigned int x28; } does not resolve to compound or array
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure main ###
in proc main adding addrExp r28{0} - 8 to local table
could not set type for unknown parameter expression m[r28{0} + 4]
could not set type for unknown parameter expression m[r28{0} + 8]
could not set type for unknown parameter expression m[r28{0} + 12]
local eax has type /*signed?*/int that doesn't agree with type of define __size32 of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local eax has type __size32 that doesn't agree with type of define /*signed?*/int of a library, why?
dest is not lib
call:   18 {*32* eax, *v* r25, *v* r26} := CALL scanf(
                *c** local1 := "%f"
                *f32** local2 := a[local0]
              )
              Reaching definitions: r26=r28{0} - 8,   r28=r28{0} - 32,   r29=r28{0} - 4,   r32=r32{0},   r33=r33{0},
                r34=r34{0},   r35=r35{0},   r36=r36{0},   r37=r37{0},   r38=r38{0},   r39=r39{0},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 24]=r28{0} - 8,
                m[r28{0} - 28]=0x8048580,   m[r28{0} - 32]=%pc,   tmp1=r28{0} - 12,
                %flags=SUBFLAGS32( r28{0} - 12, 8, r28{0} - 20 ),   %ZF=(r28{0} - 20) = 0,   %CF=(r28{0} - 12) <u 8
              Live variables:  in proc main
dest is not lib
call:   50 {*j32* eax, *32* r25, *32* r26} := CALL printf(
                *c** local3 := "a is %f, b is %f
"
                *c** local4 := 0
                *f64* local5 := 2.3125
              )
              Reaching definitions: r24=r24{18},   r25=r25{18},   r26=r26{18},   r28=r28{0} - 48,   r29=r28{0} - 4,
                r32=r32{0},   r33=r33{0},   r34=r34{0},   r35=r35{0},   r36=r36{0},   r37=r37{0},   r38=r38{0},
                r39=r32{30},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},
                m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{0},
                m[r28{0} - 24]=r28{0} - 8,   m[r28{0} - 28]=0x8048580,   m[r28{0} - 32]=fsize(80,64,r32{30}),
                m[r28{0} - 36]=0x40140000,   m[r28{0} - 40]=0,   m[r28{0} - 44]=0x8048583,   m[r28{0} - 48]=%pc,
                tmp1=r28{0} - 12,   tmpD9=r32{30},   %flags=SUBFLAGS32( r28{0} - 12, 8, r28{0} - 20 ),
                %ZF=(r28{0} - 20) = 0,   %CF=(r28{0} - 12) <u 8
              Live variables: eax in proc main
result:    0 *j32* eax := -
dest is not lib
call:  445 {*j32* eax, *32* r25, *32* r26} := CALL puts(
                *c** local1 := "Equal"
              )
              Reaching definitions: r8=0,   r12=((SETFFLAGS( r32{60}, 5.0000 )) & 69) ^ 64,
                r24=((((((r24{50} & 0xffff00ff) | ((SETFFLAGS( r32{60}, 5.0000 )) * 256))@31:8) & 0xffff00ff) | (((SETFFLAGS( r32{60}, 5.0000 )) & 69) * 256)) & 0xffff00ff) | ((((SETFFLAGS( r32{60}, 5.0000 )) & 69) ^ 64) * 256),
                r25=r25{50},   r26=r26{50},   r28=r28{0} - 32,   r29=r28{0} - 4,   r32=r32{0},   r33=r33{0},
                r34=r34{0},   r35=r35{0},   r36=r36{0},   r37=r37{0},   r38=r32{60},   r39=r32{60},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 24]=r28{0} - 8,
                m[r28{0} - 28]=0x80485a5,   m[r28{0} - 32]=%pc,   m[r28{0} - 36]=0x40140000,   m[r28{0} - 40]=0,
                m[r28{0} - 44]=0x8048583,   m[r28{0} - 48]=%pc,   tmp1=r28{0} - 12,   tmpD=r32{60} -f 5.0000,
                tmpD9=r32{60},   %flags=SUBFLAGS32( r28{0} - 12, 12, r28{0} - 24 ),
                %fflags=SETFFLAGS( r32{60}, 5.0000 ),   %ZF=(r28{0} - 24) = 0,   %CF=(r28{0} - 12) <u 12
              Live variables: eax in proc main
result:    0 *j32* eax := -
dest is not lib
call:  412 {*j32* eax, *32* r25, *32* r26} := CALL puts(
                *c** local1 := "Not Equal"
              )
              Reaching definitions: r8=0,   r12=(SETFFLAGS( 5.0000, r32{464} )) & 69,
                r24=((((r24{460} & 0xffff00ff) | ((SETFFLAGS( 5.0000, r32{464} )) * 256))@31:8) & 0xffff00ff) | (((SETFFLAGS( 5.0000, r32{464} )) & 69) * 256),
                r25=r25{461},   r26=r26{462},   r28=(r28{0} - 12) - 20,   r29=r28{0} - 4,   r32=r32{0},   r33=r33{0},
                r34=r34{0},   r35=r35{0},   r36=r36{0},   r37=r37{0},   r38=5.0000,   r39=r32{464},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 24]=r28{0} - 8,
                m[r28{0} - 28]=0x80485c1,   m[r28{0} - 32]=%pc,   m[r28{0} - 36]=0x40140000,   m[r28{0} - 40]=0,
                m[r28{0} - 44]=0x8048583,   m[r28{0} - 48]=%pc,   tmp1=r28{0} - 12,   tmpD=5.0000 -f r32{464},
                tmpD1=5.0000,   tmpD2=r32{464},   tmpD9=r32{464},   tmpb=((SETFFLAGS( 5.0000, r32{464} )) & 69) - 64,
                %flags=SUBFLAGS32( r28{0} - 12, 12, (r28{0} - 12) - 12 ),   %fflags=SETFFLAGS( 5.0000, r32{464} ),
                %ZF=((r28{0} - 12) - 12) = 0,   %CF=(r28{0} - 12) <u 12
              Live variables: eax in proc main
result:    0 *j32* eax := -
dest is not lib
call:  379 {*j32* eax, *32* r25, *32* r26} := CALL puts(
                *c** local1 := "Greater"
              )
              Reaching definitions: r8=0,   r12=SETFFLAGS( 5.0000, r32{481} ),
                r24=((r24{477} & 0xffff00ff) | ((SETFFLAGS( 5.0000, r32{481} )) * 256))@31:8,   r25=r25{478},
                r26=r26{479},   r28=(r28{0} - 12) - 20,   r29=r28{0} - 4,   r32=r32{0},   r33=r33{0},   r34=r34{0},
                r35=r35{0},   r36=r36{0},   r37=r37{0},   r38=5.0000,   r39=r32{481},   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 24]=r28{0} - 8,   m[r28{0} - 28]=0x80485b9,
                m[r28{0} - 32]=%pc,   m[r28{0} - 36]=0x40140000,   m[r28{0} - 40]=0,   m[r28{0} - 44]=0x8048583,
                m[r28{0} - 48]=%pc,   tmp1=r28{0} - 12,   tmpD=5.0000 -f r32{481},   tmpD1=5.0000,   tmpD2=r32{481},
                tmpD9=r32{481},   tmpb=(SETFFLAGS( 5.0000, r32{481} )) & 69,
                %flags=SUBFLAGS32( r28{0} - 12, 12, (r28{0} - 12) - 12 ),   %fflags=SETFFLAGS( 5.0000, r32{481} ),
                %ZF=((r28{0} - 12) - 12) = 0,   %CF=(r28{0} - 12) <u 12
              Live variables: eax in proc main
result:    0 *j32* eax := -
dest is not lib
call:  346 {*j32* eax, *32* r25, *32* r26} := CALL puts(
                *c** local1 := "Less or Equal"
              )
              Reaching definitions: r8=0,   r12=SETFFLAGS( r32{498}, 5.0000 ),
                r24=((r24{494} & 0xffff00ff) | ((SETFFLAGS( r32{498}, 5.0000 )) * 256))@31:8,   r25=r25{495},
                r26=r26{496},   r28=(r28{0} - 12) - 20,   r29=r28{0} - 4,   r32=r32{0},   r33=r33{0},   r34=r34{0},
                r35=r35{0},   r36=r36{0},   r37=r37{0},   r38=r32{498},   r39=r32{498},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 24]=r28{0} - 8,
                m[r28{0} - 28]=0x80485ab,   m[r28{0} - 32]=%pc,   m[r28{0} - 36]=0x40140000,   m[r28{0} - 40]=0,
                m[r28{0} - 44]=0x8048583,   m[r28{0} - 48]=%pc,   tmp1=r28{0} - 12,   tmpD=r32{498} -f 5.0000,
                tmpD1=5.0000,   tmpD2=r32{481},   tmpD9=r32{498},   tmpb=(SETFFLAGS( r32{498}, 5.0000 )) & 1,
                %flags=SUBFLAGS32( r28{0} - 12, 12, (r28{0} - 12) - 12 ),   %fflags=SETFFLAGS( r32{498}, 5.0000 ),
                %ZF=((r28{0} - 12) - 12) = 0,   %CF=(r28{0} - 12) <u 12
              Live variables: eax in proc main
result:    0 *j32* eax := -
dest is not lib
call:  313 {*j32* eax, *32* r25, *32* r26} := CALL puts(
                *c** local1 := "Greater or Equal"
              )
              Reaching definitions: r8=0,   r12=SETFFLAGS( 5.0000, r32{515} ),
                r24=((r24{511} & 0xffff00ff) | ((SETFFLAGS( 5.0000, r32{515} )) * 256))@31:8,   r25=r25{512},
                r26=r26{513},   r28=(r28{0} - 12) - 20,   r29=r28{0} - 4,   r32=r32{0},   r33=r33{0},   r34=r34{0},
                r35=r35{0},   r36=r36{0},   r37=r37{0},   r38=5.0000,   r39=r32{515},   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 24]=r28{0} - 8,   m[r28{0} - 28]=0x804859a,
                m[r28{0} - 32]=%pc,   m[r28{0} - 36]=0x40140000,   m[r28{0} - 40]=0,   m[r28{0} - 44]=0x8048583,
                m[r28{0} - 48]=%pc,   tmp1=r28{0} - 12,   tmpD=5.0000 -f r32{515},   tmpD1=5.0000,   tmpD2=r32{515},
                tmpD9=r32{515},   tmpb=(SETFFLAGS( 5.0000, r32{515} )) & 1,
                %flags=SUBFLAGS32( r28{0} - 12, 12, (r28{0} - 12) - 12 ),   %fflags=SETFFLAGS( 5.0000, r32{515} ),
                %ZF=((r28{0} - 12) - 12) = 0,   %CF=(r28{0} - 12) <u 12
              Live variables: eax in proc main
result:    0 *j32* eax := -
dest is not lib
call:  290 {*j32* eax, *32* r25, *32* r26} := CALL puts(
                *c** local1 := "Less"
              )
              Reaching definitions: r8=0,   r12=SETFFLAGS( r32{532}, 5.0000 ),
                r24=((r24{528} & 0xffff00ff) | ((SETFFLAGS( r32{532}, 5.0000 )) * 256))@31:8,   r25=r25{529},
                r26=r26{530},   r28=(r28{0} - 12) - 20,   r29=r28{0} - 4,   r32=r32{0},   r33=r33{0},   r34=r34{0},
                r35=r35{0},   r36=r36{0},   r37=r37{0},   r38=r32{532},   r39=5.0000,   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 24]=r28{0} - 8,   m[r28{0} - 28]=0x8048595,
                m[r28{0} - 32]=%pc,   m[r28{0} - 36]=0x40140000,   m[r28{0} - 40]=0,   m[r28{0} - 44]=0x8048583,
                m[r28{0} - 48]=%pc,   tmp1=r28{0} - 12,   tmpD=r32{532} -f 5.0000,   tmpD1=r32{532},   tmpD2=5.0000,
                tmpD9=5.0000,   tmpb=(SETFFLAGS( r32{532}, 5.0000 )) & 69,
                %flags=SUBFLAGS32( r28{0} - 12, 12, (r28{0} - 12) - 12 ),   %fflags=SETFFLAGS( r32{532}, 5.0000 ),
                %ZF=((r28{0} - 12) - 12) = 0,   %CF=(r28{0} - 12) <u 12
              Live variables: eax in proc main
result:    0 *j32* eax := -
