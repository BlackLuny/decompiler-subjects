after removing matching assigns (%pc).
in proc main adding addrExp r1{0} - 16 to local table
in proc main adding addrExp r1{0} + 4 to local table
in proc main adding addrExp r1{0} - 8 to local table
in proc main adding addrExp r1{0} - 16 to local table
in proc main adding addrExp r1{0} + 4 to local table
in proc main adding addrExp r1{0} - 8 to local table
TYPE ERROR: at address 0xfffffff8, overlapping type double does not resolve to compound or array
local g3 has type char * that doesn't agree with type of define void of a library, why?
local g4 has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local g6 has type /*signed?*/int that doesn't agree with type of define __size32 of a library, why?
local g8 has type /*signed?*/int that doesn't agree with type of define __size32 of a library, why?
local g10 has type /*signed?*/int that doesn't agree with type of define __size32 of a library, why?
dest is not lib
call:   22 {*32* r5, *32* r7, *32* r9, *32* g10, *32* r11, *32* r12} := CALL printf(
                *c** g3 := "Many parameters: %d, %.1f, %d, %.1f, %d, %.1f, %d, %.1f
"
                *j32* g4 := 1
                *f64* g5 := 0.0000
                *j32* g6 := 3
                *f64* g7 := 0.0000
                *j32* g8 := machine("%LR")
                *f64* g9 := g9
                *j32* g10 := g10
                *f64* local0 := local0
              )
              Reaching definitions: r1=r1{0} - 16,   r3=0x1000081c,   r4=1,   r5=2,   r6=3,   r7=4,   r8=machine("%LR")
                r9=r9{0},   r10=r10{0},   r33=global0,   r34=global1,   r35=global2,   r36=global3,   r65=-1,
                m[r1{0} + 4]=machine("%LR"),   m[r1{0} - 8]=m[r1{0} - 8]{0},   m[r1{0} - 16]=r1{0}
              Live variables:  in proc main
