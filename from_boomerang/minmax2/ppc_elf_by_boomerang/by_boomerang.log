after removing matching assigns (%pc).
in proc test adding addrExp r1{0} - 32 to local table
in proc test adding addrExp r1{0} - 4 to local table
in proc test adding addrExp r1{0} + 4 to local table
in proc test adding addrExp r1{0} - 24 to local table
in proc test adding addrExp r1{0} - 24 to local table
in proc test adding addrExp r1{0} - 24 to local table
in proc test adding addrExp r1{0} - 24 to local table
in proc test adding addrExp r1{0} - 24 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure test ###
in proc test adding addrExp r1{0} - 32 to local table
in proc test adding addrExp r1{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc test adding addrExp r1{0} + 4 to local table
in proc test adding addrExp r1{0} - 24 to local table
in proc test adding addrExp r1{0} - 24 to local table
in proc test adding addrExp r1{0} - 24 to local table
in proc test adding addrExp r1{0} - 24 to local table
in proc test adding addrExp r1{0} - 24 to local table
finding final parameters for test
potential param r1
found new parameter r1
potential param r3
found new parameter r3
after removing matching assigns (%pc).
in proc main adding addrExp r1{0} - 32 to local table
in proc main adding addrExp r1{0} - 4 to local table
in proc main adding addrExp r1{0} + 4 to local table
in proc main adding addrExp r1{0} - 24 to local table
in proc test adding addrExp r1{0} - 24 to local table
in proc test adding addrExp r1{0} - 24 to local table
in proc test adding addrExp r1{0} - 24 to local table
in proc test adding addrExp r1{0} - 24 to local table
in proc test adding addrExp r1{0} - 24 to local table
finding final parameters for test
potential param r1
found new parameter r1
potential param r3
found new parameter r3
local g3 has type char * that doesn't agree with type of define void of a library, why?
local g4 has type int that doesn't agree with type of define __size32 of a library, why?
dest is not lib
call:   11 {*32* r0, *32* r4, *v* r5, *v* r6, *v* r7, *v* r8, *32* r9, *v* r10, *v* r11, *v* r12, *32* r65} := CALL test(
                *i32* g3 := -5
              )
              Reaching definitions: r0=machine("%LR"),   r1=r1{0} - 32,   r3=-5,   r4=r4{0},   r5=r5{0},
                r31=r1{0} - 32,   m[r1{0} + 4]=machine("%LR"),   m[r1{0} - 4]=r31{0},   m[r1{0} - 24]=r3{0},
                m[r1{0} - 32]=r1{0}
              Live variables:  in proc main
dest is not lib
call:   15 {*32* r0, *32* r4, *v* r5, *v* r6, *v* r7, *v* r8, *32* r9, *v* r10, *v* r11, *v* r12, *32* r65} := CALL test(
                *i32* g3 := -2
              )
              Reaching definitions: r0=r0{11},   r1=r1{0} - 32,   r3=-2,   r4=r4{11},   r5=r5{11},   r6=r6{11},
                r7=r7{11},   r8=r8{11},   r9=r9{11},   r10=r10{11},   r11=r11{11},   r12=r12{11},   r31=r1{0} - 32,
                r65=r65{11},   m[r1{0} + 4]=machine("%LR"),   m[r1{0} - 4]=r31{0},   m[r1{0} - 24]=r3{0},
                m[r1{0} - 32]=r1{0}
              Live variables:  in proc main
dest is not lib
call:   19 {*32* r0, *32* r4, *v* r5, *v* r6, *v* r7, *v* r8, *32* r9, *v* r10, *v* r11, *v* r12, *32* r65} := CALL test(
                *i32* g3 := 0
              )
              Reaching definitions: r0=r0{15},   r1=r1{0} - 32,   r3=0,   r4=r4{15},   r5=r5{15},   r6=r6{15},
                r7=r7{15},   r8=r8{15},   r9=r9{15},   r10=r10{15},   r11=r11{15},   r12=r12{15},   r31=r1{0} - 32,
                r65=r65{15},   m[r1{0} + 4]=machine("%LR"),   m[r1{0} - 4]=r31{0},   m[r1{0} - 24]=r3{0},
                m[r1{0} - 32]=r1{0}
              Live variables:  in proc main
dest is not lib
call:   23 {*32* r0, *32* r4, *v* r5, *v* r6, *v* r7, *v* r8, *32* r9, *v* r10, *v* r11, *v* r12, *32* r65} := CALL test(
                *i32* g3 := argc
              )
              Reaching definitions: r0=r0{19},   r1=r1{0} - 32,   r3=r3{0},   r4=r4{19},   r5=r5{19},   r6=r6{19},
                r7=r7{19},   r8=r8{19},   r9=r9{19},   r10=r10{19},   r11=r11{19},   r12=r12{19},   r31=r1{0} - 32,
                r65=r65{19},   m[r1{0} + 4]=machine("%LR"),   m[r1{0} - 4]=r31{0},   m[r1{0} - 24]=r3{0},
                m[r1{0} - 32]=r1{0}
              Live variables:  in proc main
dest is not lib
call:   27 {*32* r0, *32* r4, *32* r5, *32* r6, *32* r7, *32* r8, *32* r9, *32* r10, *v* r11, *32* r12, *32* r65} := CALL test(
                *i32* g3 := 5
              )
              Reaching definitions: r0=r0{23},   r1=r1{0} - 32,   r3=5,   r4=r4{23},   r5=r5{23},   r6=r6{23},
                r7=r7{23},   r8=r8{23},   r9=r9{23},   r10=r10{23},   r11=r11{23},   r12=r12{23},   r31=r1{0} - 32,
                r65=r65{23},   m[r1{0} + 4]=machine("%LR"),   m[r1{0} - 4]=r31{0},   m[r1{0} - 24]=r3{0},
                m[r1{0} - 32]=r1{0}
              Live variables:  in proc main
dest is not lib
call:   25 {*32* r5, *32* r6, *32* r7, *32* r8, *32* r9, *32* r10, *v* r11, *32* r12} := CALL printf(
                *c** g3 := "MinMax result %d
"
                *i32* g4 := local0
              )
              Reaching definitions: r0=r0{34},   r1=r1{0} - 32,   r3=0x1000088c,   r4=m[r1{0} - 24]{36},
                r9=0x10000000,   r31=r1{0} - 32,   r65=0,   m[r1{0} + 4]=machine("%LR"),   m[r1{0} - 4]=r31{0},
                m[r1{0} - 24]=m[r1{0} - 24]{36},   m[r1{0} - 32]=r1{0},   %flags=SUBFLAGSNS( m[r1{0} - 24]{35}, 3, 7 ),
                %ZF=7 = 0,   %CF=m[r1{0} - 24]{35} <u 3
              Live variables:  in proc test
