got filename superstat.c for main
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure main ###
in proc main adding addrExp r28{0} - 108 to local table
in proc main adding addrExp r28{0} - 104 to local table
TYPE ERROR: At address 0xffffff98 type __size32 is not compatible with existing structure member type /*signed?*/long long
in proc main adding addrExp r28{0} - 96 to local table
in proc main adding addrExp r28{0} - 92 to local table
in proc main adding addrExp r28{0} - 88 to local table
in proc main adding addrExp r28{0} - 84 to local table
in proc main adding addrExp r28{0} - 80 to local table
in proc main adding addrExp r28{0} - 72 to local table
TYPE ERROR: At address 0xffffffb8 type __size32 is not compatible with existing structure member type /*signed?*/long long
in proc main adding addrExp r28{0} - 76 to local table
TYPE ERROR: At address 0xffffffb4 type __size32 is not compatible with existing structure member type /*signed?*/long long
in proc main adding addrExp r28{0} - 64 to local table
in proc main adding addrExp r28{0} - 60 to local table
in proc main adding addrExp r28{0} - 56 to local table
in proc main adding addrExp r28{0} - 52 to local table
in proc main adding addrExp r28{0} - 44 to local table
in proc main adding addrExp r28{0} - 36 to local table
in proc main adding addrExp r28{0} - 4 to local table
in proc main adding addrExp r28{0} - 112 to local table
in proc main adding addrExp r28{0} - 116 to local table
in proc main adding addrExp r28{0} - 120 to local table
in proc main adding addrExp r28{0} - 124 to local table
in proc main adding addrExp r28{0} - 128 to local table
in proc main adding addrExp r28{0} - 120 to local table
in proc main adding addrExp r28{0} - 124 to local table
in proc main adding addrExp r28{0} - 128 to local table
in proc main adding addrExp r28{0} - 116 to local table
in proc main adding addrExp r28{0} - 120 to local table
TYPE ERROR: at address 0xffffff88, overlapping type union { __size32 x1; struct stat x2; } does not resolve to compound or array
in proc main adding addrExp r28{0} - 124 to local table
in proc main adding addrExp r28{0} - 128 to local table
in proc main adding addrExp r28{0} - 120 to local table
in proc main adding addrExp r28{0} - 124 to local table
in proc main adding addrExp r28{0} - 128 to local table
in proc main adding addrExp r28{0} - 120 to local table
in proc main adding addrExp r28{0} - 124 to local table
in proc main adding addrExp r28{0} - 128 to local table
in proc main adding addrExp r28{0} - 120 to local table
in proc main adding addrExp r28{0} - 124 to local table
in proc main adding addrExp r28{0} - 128 to local table
in proc main adding addrExp r28{0} - 120 to local table
in proc main adding addrExp r28{0} - 124 to local table
in proc main adding addrExp r28{0} - 128 to local table
in proc main adding addrExp r28{0} - 120 to local table
in proc main adding addrExp r28{0} - 124 to local table
in proc main adding addrExp r28{0} - 128 to local table
in proc main adding addrExp r28{0} - 116 to local table
in proc main adding addrExp r28{0} - 120 to local table
in proc main adding addrExp r28{0} - 124 to local table
in proc main adding addrExp r28{0} - 128 to local table
in proc main adding addrExp r28{0} - 120 to local table
in proc main adding addrExp r28{0} - 124 to local table
in proc main adding addrExp r28{0} - 128 to local table
in proc main adding addrExp r28{0} - 120 to local table
in proc main adding addrExp r28{0} - 124 to local table
in proc main adding addrExp r28{0} - 128 to local table
in proc main adding addrExp r28{0} - 120 to local table
in proc main adding addrExp r28{0} - 124 to local table
in proc main adding addrExp r28{0} - 128 to local table
in proc main adding addrExp r28{0} - 120 to local table
in proc main adding addrExp r28{0} - 124 to local table
in proc main adding addrExp r28{0} - 128 to local table
in proc main adding addrExp r28{0} - 120 to local table
in proc main adding addrExp r28{0} - 124 to local table
in proc main adding addrExp r28{0} - 128 to local table
in proc main adding addrExp r28{0} - 120 to local table
in proc main adding addrExp r28{0} - 124 to local table
in proc main adding addrExp r28{0} - 128 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure main ###
in proc main adding addrExp r28{0} - 108 to local table
in proc main adding addrExp r28{0} - 104 to local table
TYPE ERROR: At address 0xffffff98 type __size32 is not compatible with existing structure member type /*signed?*/long long
in proc main adding addrExp r28{0} - 96 to local table
in proc main adding addrExp r28{0} - 92 to local table
in proc main adding addrExp r28{0} - 88 to local table
in proc main adding addrExp r28{0} - 84 to local table
in proc main adding addrExp r28{0} - 80 to local table
in proc main adding addrExp r28{0} - 72 to local table
TYPE ERROR: At address 0xffffffb8 type __size32 is not compatible with existing structure member type /*signed?*/long long
in proc main adding addrExp r28{0} - 76 to local table
in proc main adding addrExp r28{0} - 64 to local table
in proc main adding addrExp r28{0} - 60 to local table
in proc main adding addrExp r28{0} - 56 to local table
in proc main adding addrExp r28{0} - 52 to local table
in proc main adding addrExp r28{0} - 44 to local table
in proc main adding addrExp r28{0} - 36 to local table
in proc main adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc main adding addrExp r28{0} - 112 to local table
in proc main adding addrExp r28{0} - 116 to local table
in proc main adding addrExp r28{0} - 120 to local table
in proc main adding addrExp r28{0} - 124 to local table
in proc main adding addrExp r28{0} - 128 to local table
in proc main adding addrExp r28{0} - 120 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffff88 existing type char * but added type /*signed?*/int
in proc main adding addrExp r28{0} - 124 to local table
in proc main adding addrExp r28{0} - 128 to local table
in proc main adding addrExp r28{0} - 116 to local table
in proc main adding addrExp r28{0} - 120 to local table
TYPE ERROR: at address 0xffffff88, overlapping type union { __size32 x1; struct stat x2; } does not resolve to compound or array
in proc main adding addrExp r28{0} - 124 to local table
in proc main adding addrExp r28{0} - 128 to local table
in proc main adding addrExp r28{0} - 120 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffff88 existing type char * but added type /*signed?*/int
in proc main adding addrExp r28{0} - 124 to local table
in proc main adding addrExp r28{0} - 128 to local table
in proc main adding addrExp r28{0} - 120 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffff88 existing type char * but added type /*signed?*/int
in proc main adding addrExp r28{0} - 124 to local table
in proc main adding addrExp r28{0} - 128 to local table
in proc main adding addrExp r28{0} - 120 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffff88 existing type char * but added type /*signed?*/int
in proc main adding addrExp r28{0} - 124 to local table
in proc main adding addrExp r28{0} - 128 to local table
in proc main adding addrExp r28{0} - 120 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffff88 existing type char * but added type /*signed?*/int
in proc main adding addrExp r28{0} - 124 to local table
in proc main adding addrExp r28{0} - 128 to local table
in proc main adding addrExp r28{0} - 120 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffff88 existing type char * but added type /*signed?*/int
in proc main adding addrExp r28{0} - 124 to local table
in proc main adding addrExp r28{0} - 128 to local table
in proc main adding addrExp r28{0} - 116 to local table
in proc main adding addrExp r28{0} - 120 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffff88 existing type char * but added type /*signed?*/int
in proc main adding addrExp r28{0} - 124 to local table
in proc main adding addrExp r28{0} - 128 to local table
in proc main adding addrExp r28{0} - 120 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffff88 existing type char * but added type /*signed?*/int
in proc main adding addrExp r28{0} - 124 to local table
in proc main adding addrExp r28{0} - 128 to local table
in proc main adding addrExp r28{0} - 120 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffff88 existing type char * but added type /*signed?*/int
in proc main adding addrExp r28{0} - 124 to local table
in proc main adding addrExp r28{0} - 128 to local table
in proc main adding addrExp r28{0} - 120 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffff88 existing type char * but added type /*signed?*/int
in proc main adding addrExp r28{0} - 124 to local table
in proc main adding addrExp r28{0} - 128 to local table
in proc main adding addrExp r28{0} - 120 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffff88 existing type char * but added type /*signed?*/int
in proc main adding addrExp r28{0} - 124 to local table
in proc main adding addrExp r28{0} - 128 to local table
in proc main adding addrExp r28{0} - 120 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffff88 existing type char * but added type /*signed?*/int
in proc main adding addrExp r28{0} - 124 to local table
in proc main adding addrExp r28{0} - 128 to local table
in proc main adding addrExp r28{0} - 120 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffff88 existing type char * but added type /*signed?*/int
in proc main adding addrExp r28{0} - 124 to local table
in proc main adding addrExp r28{0} - 128 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure main ###
could not set type for unknown parameter expression m[r28{0} + 8]
in proc main adding addrExp r28{0} - 108 to local table
in proc main adding addrExp r28{0} - 96 to local table
in proc main adding addrExp r28{0} - 92 to local table
in proc main adding addrExp r28{0} - 88 to local table
in proc main adding addrExp r28{0} - 84 to local table
in proc main adding addrExp r28{0} - 80 to local table
in proc main adding addrExp r28{0} - 76 to local table
in proc main adding addrExp r28{0} - 64 to local table
in proc main adding addrExp r28{0} - 60 to local table
in proc main adding addrExp r28{0} - 56 to local table
in proc main adding addrExp r28{0} - 52 to local table
in proc main adding addrExp r28{0} - 44 to local table
in proc main adding addrExp r28{0} - 36 to local table
could not set type for unknown parameter expression m[r28{0} + 4]
could not set type for unknown parameter expression m[r28{0} + 12]
in proc main adding addrExp r28{0} - 120 to local table
local esp has type void * that doesn't agree with type of define void of a library, why?
local eax has type /*signed?*/int that doesn't agree with type of define __size32 of a library, why?
dest is not lib
call:   20 {*j32* eax, *v* r25, *v* r26} := CALL __xstat(
                *i32* local14 := 3
                *c** local13 := local13
                *struct stat** local15 := a[local0]
              )
              Reaching definitions: r24=m[r28{0} + 8]{0},   r25=r25{0},   r26=r28{0} - 108,   r28=r28{0} - 128,
                r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},
                m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 36]=m[r28{0} - 36]{0},
                m[r28{0} - 44]=m[r28{0} - 44]{0},   m[r28{0} - 52]=m[r28{0} - 52]{0},
                m[r28{0} - 56]=m[r28{0} - 56]{0},   m[r28{0} - 60]=m[r28{0} - 60]{0},
                m[r28{0} - 64]=m[r28{0} - 64]{0},   m[r28{0} - 72]=m[r28{0} - 72]{0},
                m[r28{0} - 76]=m[r28{0} - 76]{0},   m[r28{0} - 80]=m[r28{0} - 80]{0},
                m[r28{0} - 84]=m[r28{0} - 84]{0},   m[r28{0} - 88]=m[r28{0} - 88]{0},
                m[r28{0} - 92]=m[r28{0} - 92]{0},   m[r28{0} - 96]=m[r28{0} - 96]{0},
                m[r28{0} - 104]=m[r28{0} - 104]{0},   m[r28{0} - 108]=m[r28{0} - 108]{0},   m[r28{0} - 112]=r25{0},
                m[r28{0} - 116]=r28{0} - 108,   m[r28{0} - 120]=m[r28{0} - 120]{13},   m[r28{0} - 124]=3,
                m[r28{0} - 128]=%pc,   tmp1=r28{0} - 4,   %flags=SUBFLAGS32( r28{0} - 4, 104, r28{0} - 108 ),
                %ZF=(r28{0} - 108) = 0,   %CF=(r28{0} - 4) <u 104
              Live variables: eax in proc main
result:    0 *j32* eax := -
dest is not lib
call:   32 {*32* eax, *v* r25, *v* r26} := CALL printf(
                *c** local16 := "res: %i
"
                *j32* local17 := eax
              )
              Reaching definitions: r24=r24{20},   r25=3,   r26=m[r28{0} - 120]{13},   r28=r28{0} - 128,
                r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},
                m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 36]=m[r28{0} - 36]{0},
                m[r28{0} - 44]=m[r28{0} - 44]{0},   m[r28{0} - 52]=m[r28{0} - 52]{0},
                m[r28{0} - 56]=m[r28{0} - 56]{0},   m[r28{0} - 60]=m[r28{0} - 60]{0},
                m[r28{0} - 64]=m[r28{0} - 64]{0},   m[r28{0} - 72]=m[r28{0} - 72]{0},
                m[r28{0} - 76]=m[r28{0} - 76]{0},   m[r28{0} - 80]=m[r28{0} - 80]{0},
                m[r28{0} - 84]=m[r28{0} - 84]{0},   m[r28{0} - 88]=m[r28{0} - 88]{0},
                m[r28{0} - 92]=m[r28{0} - 92]{0},   m[r28{0} - 96]=m[r28{0} - 96]{0},
                m[r28{0} - 104]=m[r28{0} - 104]{0},   m[r28{0} - 108]=m[r28{0} - 108]{0},   m[r28{0} - 112]=r25{0},
                m[r28{0} - 116]=r28{0} - 108,   m[r28{0} - 120]=r24{20},   m[r28{0} - 124]=0x8048500,
                m[r28{0} - 128]=%pc,   tmp1=r28{0} - 4,   %flags=SUBFLAGS32( r28{0} - 4, 104, r28{0} - 108 ),
                %ZF=(r28{0} - 108) = 0,   %CF=(r28{0} - 4) <u 104
              Live variables:  in proc main
dest is not lib
call:   45 {*32* eax, *v* r25, *v* r26} := CALL printf(
                *c** local16 := "dev: %i
"
                *struct stat* local17 := local0
              )
              Reaching definitions: r24=r24{32},   r25=r25{32},   r26=r26{32},   r28=r28{0} - 128,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 36]=m[r28{0} - 36]{0},   m[r28{0} - 44]=m[r28{0} - 44]{0},
                m[r28{0} - 52]=m[r28{0} - 52]{0},   m[r28{0} - 56]=m[r28{0} - 56]{0},
                m[r28{0} - 60]=m[r28{0} - 60]{0},   m[r28{0} - 64]=m[r28{0} - 64]{0},
                m[r28{0} - 72]=m[r28{0} - 72]{0},   m[r28{0} - 76]=m[r28{0} - 76]{0},
                m[r28{0} - 80]=m[r28{0} - 80]{0},   m[r28{0} - 84]=m[r28{0} - 84]{0},
                m[r28{0} - 88]=m[r28{0} - 88]{0},   m[r28{0} - 92]=m[r28{0} - 92]{0},
                m[r28{0} - 96]=m[r28{0} - 96]{0},   m[r28{0} - 104]=m[r28{0} - 104]{0},
                m[r28{0} - 108]=m[r28{0} - 108]{0},   m[r28{0} - 112]=r25{0},   m[r28{0} - 116]=m[r28{0} - 104]{0},
                m[r28{0} - 120]=m[r28{0} - 108]{0},   m[r28{0} - 124]=0x804853a,   m[r28{0} - 128]=%pc,
                tmp1=(r28{0} - 128) + 4,   %flags=ADDFLAGS32( r28{0} - 124, 12, r28{0} - 112 ),
                %ZF=ADDFLAGS32( r28{0} - 124, 12, r28{0} - 112 ),   %CF=ADDFLAGS32( r28{0} - 124, 12, r28{0} - 112 )
              Live variables:  in proc main
dest is not lib
call:   57 {*32* eax, *v* r25, *v* r26} := CALL printf(
                *c** local16 := "ino: %i
"
                *j32* local17 := local1
              )
              Reaching definitions: r24=0x804853a,   r25=r25{45},   r26=m[r28{0} - 108]{0},   r28=r28{0} - 128,
                r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},
                m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 36]=m[r28{0} - 36]{0},
                m[r28{0} - 44]=m[r28{0} - 44]{0},   m[r28{0} - 52]=m[r28{0} - 52]{0},
                m[r28{0} - 56]=m[r28{0} - 56]{0},   m[r28{0} - 60]=m[r28{0} - 60]{0},
                m[r28{0} - 64]=m[r28{0} - 64]{0},   m[r28{0} - 72]=m[r28{0} - 72]{0},
                m[r28{0} - 76]=m[r28{0} - 76]{0},   m[r28{0} - 80]=m[r28{0} - 80]{0},
                m[r28{0} - 84]=m[r28{0} - 84]{0},   m[r28{0} - 88]=m[r28{0} - 88]{0},
                m[r28{0} - 92]=m[r28{0} - 92]{0},   m[r28{0} - 96]=m[r28{0} - 96]{0},
                m[r28{0} - 104]=m[r28{0} - 104]{0},   m[r28{0} - 108]=m[r28{0} - 108]{0},   m[r28{0} - 112]=r25{0},
                m[r28{0} - 116]=m[r28{0} - 104]{0},   m[r28{0} - 120]=m[r28{0} - 96]{0},   m[r28{0} - 124]=0x8048509,
                m[r28{0} - 128]=%pc,   tmp1=(r28{0} - 128) + 4,   %flags=ADDFLAGS32( r28{0} - 124, 12, r28{0} - 112 ),
                %ZF=ADDFLAGS32( r28{0} - 124, 12, r28{0} - 112 ),   %CF=ADDFLAGS32( r28{0} - 124, 12, r28{0} - 112 )
              Live variables:  in proc main
dest is not lib
call:   69 {*32* eax, *v* r25, *v* r26} := CALL printf(
                *c** local16 := "mode: %i
"
                *j32* local17 := local2
              )
              Reaching definitions: r24=m[r28{0} - 96]{0},   r25=0x8048509,   r26=r26{57},   r28=r28{0} - 128,
                r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},
                m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 36]=m[r28{0} - 36]{0},
                m[r28{0} - 44]=m[r28{0} - 44]{0},   m[r28{0} - 52]=m[r28{0} - 52]{0},
                m[r28{0} - 56]=m[r28{0} - 56]{0},   m[r28{0} - 60]=m[r28{0} - 60]{0},
                m[r28{0} - 64]=m[r28{0} - 64]{0},   m[r28{0} - 72]=m[r28{0} - 72]{0},
                m[r28{0} - 76]=m[r28{0} - 76]{0},   m[r28{0} - 80]=m[r28{0} - 80]{0},
                m[r28{0} - 84]=m[r28{0} - 84]{0},   m[r28{0} - 88]=m[r28{0} - 88]{0},
                m[r28{0} - 92]=m[r28{0} - 92]{0},   m[r28{0} - 96]=m[r28{0} - 96]{0},
                m[r28{0} - 104]=m[r28{0} - 104]{0},   m[r28{0} - 108]=m[r28{0} - 108]{0},   m[r28{0} - 112]=r25{0},
                m[r28{0} - 116]=m[r28{0} - 104]{0},   m[r28{0} - 120]=m[r28{0} - 92]{0},   m[r28{0} - 124]=0x8048512,
                m[r28{0} - 128]=%pc,   tmp1=(r28{0} - 128) + 4,   %flags=ADDFLAGS32( r28{0} - 124, 12, r28{0} - 112 ),
                %ZF=ADDFLAGS32( r28{0} - 124, 12, r28{0} - 112 ),   %CF=ADDFLAGS32( r28{0} - 124, 12, r28{0} - 112 )
              Live variables:  in proc main
dest is not lib
call:   81 {*32* eax, *v* r25, *v* r26} := CALL printf(
                *c** local16 := "nlink: %i
"
                *j32* local17 := local3
              )
              Reaching definitions: r24=0x8048512,   r25=r25{69},   r26=m[r28{0} - 92]{0},   r28=r28{0} - 128,
                r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},
                m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 36]=m[r28{0} - 36]{0},
                m[r28{0} - 44]=m[r28{0} - 44]{0},   m[r28{0} - 52]=m[r28{0} - 52]{0},
                m[r28{0} - 56]=m[r28{0} - 56]{0},   m[r28{0} - 60]=m[r28{0} - 60]{0},
                m[r28{0} - 64]=m[r28{0} - 64]{0},   m[r28{0} - 72]=m[r28{0} - 72]{0},
                m[r28{0} - 76]=m[r28{0} - 76]{0},   m[r28{0} - 80]=m[r28{0} - 80]{0},
                m[r28{0} - 84]=m[r28{0} - 84]{0},   m[r28{0} - 88]=m[r28{0} - 88]{0},
                m[r28{0} - 92]=m[r28{0} - 92]{0},   m[r28{0} - 96]=m[r28{0} - 96]{0},
                m[r28{0} - 104]=m[r28{0} - 104]{0},   m[r28{0} - 108]=m[r28{0} - 108]{0},   m[r28{0} - 112]=r25{0},
                m[r28{0} - 116]=m[r28{0} - 104]{0},   m[r28{0} - 120]=m[r28{0} - 88]{0},   m[r28{0} - 124]=0x804851c,
                m[r28{0} - 128]=%pc,   tmp1=(r28{0} - 128) + 4,   %flags=ADDFLAGS32( r28{0} - 124, 12, r28{0} - 112 ),
                %ZF=ADDFLAGS32( r28{0} - 124, 12, r28{0} - 112 ),   %CF=ADDFLAGS32( r28{0} - 124, 12, r28{0} - 112 )
              Live variables:  in proc main
dest is not lib
call:   93 {*32* eax, *v* r25, *v* r26} := CALL printf(
                *c** local16 := "uid: %i
"
                *j32* local17 := local4
              )
              Reaching definitions: r24=m[r28{0} - 88]{0},   r25=0x804851c,   r26=r26{81},   r28=r28{0} - 128,
                r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},
                m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 36]=m[r28{0} - 36]{0},
                m[r28{0} - 44]=m[r28{0} - 44]{0},   m[r28{0} - 52]=m[r28{0} - 52]{0},
                m[r28{0} - 56]=m[r28{0} - 56]{0},   m[r28{0} - 60]=m[r28{0} - 60]{0},
                m[r28{0} - 64]=m[r28{0} - 64]{0},   m[r28{0} - 72]=m[r28{0} - 72]{0},
                m[r28{0} - 76]=m[r28{0} - 76]{0},   m[r28{0} - 80]=m[r28{0} - 80]{0},
                m[r28{0} - 84]=m[r28{0} - 84]{0},   m[r28{0} - 88]=m[r28{0} - 88]{0},
                m[r28{0} - 92]=m[r28{0} - 92]{0},   m[r28{0} - 96]=m[r28{0} - 96]{0},
                m[r28{0} - 104]=m[r28{0} - 104]{0},   m[r28{0} - 108]=m[r28{0} - 108]{0},   m[r28{0} - 112]=r25{0},
                m[r28{0} - 116]=m[r28{0} - 104]{0},   m[r28{0} - 120]=m[r28{0} - 84]{0},   m[r28{0} - 124]=0x8048527,
                m[r28{0} - 128]=%pc,   tmp1=(r28{0} - 128) + 4,   %flags=ADDFLAGS32( r28{0} - 124, 12, r28{0} - 112 ),
                %ZF=ADDFLAGS32( r28{0} - 124, 12, r28{0} - 112 ),   %CF=ADDFLAGS32( r28{0} - 124, 12, r28{0} - 112 )
              Live variables:  in proc main
dest is not lib
call:  105 {*32* eax, *v* r25, *v* r26} := CALL printf(
                *c** local16 := "gid: %i
"
                *j32* local17 := local5
              )
              Reaching definitions: r24=0x8048527,   r25=r25{93},   r26=m[r28{0} - 84]{0},   r28=r28{0} - 128,
                r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},
                m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 36]=m[r28{0} - 36]{0},
                m[r28{0} - 44]=m[r28{0} - 44]{0},   m[r28{0} - 52]=m[r28{0} - 52]{0},
                m[r28{0} - 56]=m[r28{0} - 56]{0},   m[r28{0} - 60]=m[r28{0} - 60]{0},
                m[r28{0} - 64]=m[r28{0} - 64]{0},   m[r28{0} - 72]=m[r28{0} - 72]{0},
                m[r28{0} - 76]=m[r28{0} - 76]{0},   m[r28{0} - 80]=m[r28{0} - 80]{0},
                m[r28{0} - 84]=m[r28{0} - 84]{0},   m[r28{0} - 88]=m[r28{0} - 88]{0},
                m[r28{0} - 92]=m[r28{0} - 92]{0},   m[r28{0} - 96]=m[r28{0} - 96]{0},
                m[r28{0} - 104]=m[r28{0} - 104]{0},   m[r28{0} - 108]=m[r28{0} - 108]{0},   m[r28{0} - 112]=r25{0},
                m[r28{0} - 116]=m[r28{0} - 104]{0},   m[r28{0} - 120]=m[r28{0} - 80]{0},   m[r28{0} - 124]=0x8048530,
                m[r28{0} - 128]=%pc,   tmp1=(r28{0} - 128) + 4,   %flags=ADDFLAGS32( r28{0} - 124, 12, r28{0} - 112 ),
                %ZF=ADDFLAGS32( r28{0} - 124, 12, r28{0} - 112 ),   %CF=ADDFLAGS32( r28{0} - 124, 12, r28{0} - 112 )
              Live variables:  in proc main
dest is not lib
call:  118 {*32* eax, *v* r25, *v* r26} := CALL printf(
                *c** local16 := "rdev: %i
"
                *j32* local17 := local6
              )
              Reaching definitions: r24=r24{105},   r25=r25{105},   r26=r26{105},   r28=r28{0} - 128,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 36]=m[r28{0} - 36]{0},   m[r28{0} - 44]=m[r28{0} - 44]{0},
                m[r28{0} - 52]=m[r28{0} - 52]{0},   m[r28{0} - 56]=m[r28{0} - 56]{0},
                m[r28{0} - 60]=m[r28{0} - 60]{0},   m[r28{0} - 64]=m[r28{0} - 64]{0},
                m[r28{0} - 72]=m[r28{0} - 72]{0},   m[r28{0} - 76]=m[r28{0} - 76]{0},
                m[r28{0} - 80]=m[r28{0} - 80]{0},   m[r28{0} - 84]=m[r28{0} - 84]{0},
                m[r28{0} - 88]=m[r28{0} - 88]{0},   m[r28{0} - 92]=m[r28{0} - 92]{0},
                m[r28{0} - 96]=m[r28{0} - 96]{0},   m[r28{0} - 104]=m[r28{0} - 104]{0},
                m[r28{0} - 108]=m[r28{0} - 108]{0},   m[r28{0} - 112]=r25{0},   m[r28{0} - 116]=m[r28{0} - 72]{0},
                m[r28{0} - 120]=m[r28{0} - 76]{0},   m[r28{0} - 124]=0x8048539,   m[r28{0} - 128]=%pc,
                tmp1=(r28{0} - 128) + 4,   %flags=ADDFLAGS32( r28{0} - 124, 12, r28{0} - 112 ),
                %ZF=ADDFLAGS32( r28{0} - 124, 12, r28{0} - 112 ),   %CF=ADDFLAGS32( r28{0} - 124, 12, r28{0} - 112 )
              Live variables:  in proc main
dest is not lib
call:  130 {*32* eax, *v* r25, *v* r26} := CALL printf(
                *c** local16 := "size: %i
"
                *j32* local17 := local7
              )
              Reaching definitions: r24=m[r28{0} - 76]{0},   r25=0x8048539,   r26=r26{118},   r28=r28{0} - 128,
                r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},
                m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 36]=m[r28{0} - 36]{0},
                m[r28{0} - 44]=m[r28{0} - 44]{0},   m[r28{0} - 52]=m[r28{0} - 52]{0},
                m[r28{0} - 56]=m[r28{0} - 56]{0},   m[r28{0} - 60]=m[r28{0} - 60]{0},
                m[r28{0} - 64]=m[r28{0} - 64]{0},   m[r28{0} - 72]=m[r28{0} - 72]{0},
                m[r28{0} - 76]=m[r28{0} - 76]{0},   m[r28{0} - 80]=m[r28{0} - 80]{0},
                m[r28{0} - 84]=m[r28{0} - 84]{0},   m[r28{0} - 88]=m[r28{0} - 88]{0},
                m[r28{0} - 92]=m[r28{0} - 92]{0},   m[r28{0} - 96]=m[r28{0} - 96]{0},
                m[r28{0} - 104]=m[r28{0} - 104]{0},   m[r28{0} - 108]=m[r28{0} - 108]{0},   m[r28{0} - 112]=r25{0},
                m[r28{0} - 116]=m[r28{0} - 72]{0},   m[r28{0} - 120]=m[r28{0} - 64]{0},   m[r28{0} - 124]=0x8048546,
                m[r28{0} - 128]=%pc,   tmp1=(r28{0} - 128) + 4,   %flags=ADDFLAGS32( r28{0} - 124, 12, r28{0} - 112 ),
                %ZF=ADDFLAGS32( r28{0} - 124, 12, r28{0} - 112 ),   %CF=ADDFLAGS32( r28{0} - 124, 12, r28{0} - 112 )
              Live variables:  in proc main
dest is not lib
call:  142 {*32* eax, *v* r25, *v* r26} := CALL printf(
                *c** local16 := "blksize: %i
"
                *j32* local17 := local8
              )
              Reaching definitions: r24=0x8048546,   r25=r25{130},   r26=m[r28{0} - 64]{0},   r28=r28{0} - 128,
                r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},
                m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 36]=m[r28{0} - 36]{0},
                m[r28{0} - 44]=m[r28{0} - 44]{0},   m[r28{0} - 52]=m[r28{0} - 52]{0},
                m[r28{0} - 56]=m[r28{0} - 56]{0},   m[r28{0} - 60]=m[r28{0} - 60]{0},
                m[r28{0} - 64]=m[r28{0} - 64]{0},   m[r28{0} - 72]=m[r28{0} - 72]{0},
                m[r28{0} - 76]=m[r28{0} - 76]{0},   m[r28{0} - 80]=m[r28{0} - 80]{0},
                m[r28{0} - 84]=m[r28{0} - 84]{0},   m[r28{0} - 88]=m[r28{0} - 88]{0},
                m[r28{0} - 92]=m[r28{0} - 92]{0},   m[r28{0} - 96]=m[r28{0} - 96]{0},
                m[r28{0} - 104]=m[r28{0} - 104]{0},   m[r28{0} - 108]=m[r28{0} - 108]{0},   m[r28{0} - 112]=r25{0},
                m[r28{0} - 116]=m[r28{0} - 72]{0},   m[r28{0} - 120]=m[r28{0} - 60]{0},   m[r28{0} - 124]=0x8048543,
                m[r28{0} - 128]=%pc,   tmp1=(r28{0} - 128) + 4,   %flags=ADDFLAGS32( r28{0} - 124, 12, r28{0} - 112 ),
                %ZF=ADDFLAGS32( r28{0} - 124, 12, r28{0} - 112 ),   %CF=ADDFLAGS32( r28{0} - 124, 12, r28{0} - 112 )
              Live variables:  in proc main
dest is not lib
call:  154 {*32* eax, *v* r25, *v* r26} := CALL printf(
                *c** local16 := "blocks: %i
"
                *j32* local17 := local9
              )
              Reaching definitions: r24=m[r28{0} - 60]{0},   r25=0x8048543,   r26=r26{142},   r28=r28{0} - 128,
                r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},
                m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 36]=m[r28{0} - 36]{0},
                m[r28{0} - 44]=m[r28{0} - 44]{0},   m[r28{0} - 52]=m[r28{0} - 52]{0},
                m[r28{0} - 56]=m[r28{0} - 56]{0},   m[r28{0} - 60]=m[r28{0} - 60]{0},
                m[r28{0} - 64]=m[r28{0} - 64]{0},   m[r28{0} - 72]=m[r28{0} - 72]{0},
                m[r28{0} - 76]=m[r28{0} - 76]{0},   m[r28{0} - 80]=m[r28{0} - 80]{0},
                m[r28{0} - 84]=m[r28{0} - 84]{0},   m[r28{0} - 88]=m[r28{0} - 88]{0},
                m[r28{0} - 92]=m[r28{0} - 92]{0},   m[r28{0} - 96]=m[r28{0} - 96]{0},
                m[r28{0} - 104]=m[r28{0} - 104]{0},   m[r28{0} - 108]=m[r28{0} - 108]{0},   m[r28{0} - 112]=r25{0},
                m[r28{0} - 116]=m[r28{0} - 72]{0},   m[r28{0} - 120]=m[r28{0} - 56]{0},   m[r28{0} - 124]=0x8048550,
                m[r28{0} - 128]=%pc,   tmp1=(r28{0} - 128) + 4,   %flags=ADDFLAGS32( r28{0} - 124, 12, r28{0} - 112 ),
                %ZF=ADDFLAGS32( r28{0} - 124, 12, r28{0} - 112 ),   %CF=ADDFLAGS32( r28{0} - 124, 12, r28{0} - 112 )
              Live variables:  in proc main
dest is not lib
call:  166 {*32* eax, *v* r25, *v* r26} := CALL printf(
                *c** local16 := "atime: %i
"
                *j32* local17 := local10
              )
              Reaching definitions: r24=0x8048550,   r25=r25{154},   r26=m[r28{0} - 56]{0},   r28=r28{0} - 128,
                r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},
                m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 36]=m[r28{0} - 36]{0},
                m[r28{0} - 44]=m[r28{0} - 44]{0},   m[r28{0} - 52]=m[r28{0} - 52]{0},
                m[r28{0} - 56]=m[r28{0} - 56]{0},   m[r28{0} - 60]=m[r28{0} - 60]{0},
                m[r28{0} - 64]=m[r28{0} - 64]{0},   m[r28{0} - 72]=m[r28{0} - 72]{0},
                m[r28{0} - 76]=m[r28{0} - 76]{0},   m[r28{0} - 80]=m[r28{0} - 80]{0},
                m[r28{0} - 84]=m[r28{0} - 84]{0},   m[r28{0} - 88]=m[r28{0} - 88]{0},
                m[r28{0} - 92]=m[r28{0} - 92]{0},   m[r28{0} - 96]=m[r28{0} - 96]{0},
                m[r28{0} - 104]=m[r28{0} - 104]{0},   m[r28{0} - 108]=m[r28{0} - 108]{0},   m[r28{0} - 112]=r25{0},
                m[r28{0} - 116]=m[r28{0} - 72]{0},   m[r28{0} - 120]=m[r28{0} - 52]{0},   m[r28{0} - 124]=0x804855c,
                m[r28{0} - 128]=%pc,   tmp1=(r28{0} - 128) + 4,   %flags=ADDFLAGS32( r28{0} - 124, 12, r28{0} - 112 ),
                %ZF=ADDFLAGS32( r28{0} - 124, 12, r28{0} - 112 ),   %CF=ADDFLAGS32( r28{0} - 124, 12, r28{0} - 112 )
              Live variables:  in proc main
dest is not lib
call:  178 {*32* eax, *v* r25, *v* r26} := CALL printf(
                *c** local16 := "mtime: %i
"
                *j32* local17 := local11
              )
              Reaching definitions: r24=m[r28{0} - 52]{0},   r25=0x804855c,   r26=r26{166},   r28=r28{0} - 128,
                r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},
                m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 36]=m[r28{0} - 36]{0},
                m[r28{0} - 44]=m[r28{0} - 44]{0},   m[r28{0} - 52]=m[r28{0} - 52]{0},
                m[r28{0} - 56]=m[r28{0} - 56]{0},   m[r28{0} - 60]=m[r28{0} - 60]{0},
                m[r28{0} - 64]=m[r28{0} - 64]{0},   m[r28{0} - 72]=m[r28{0} - 72]{0},
                m[r28{0} - 76]=m[r28{0} - 76]{0},   m[r28{0} - 80]=m[r28{0} - 80]{0},
                m[r28{0} - 84]=m[r28{0} - 84]{0},   m[r28{0} - 88]=m[r28{0} - 88]{0},
                m[r28{0} - 92]=m[r28{0} - 92]{0},   m[r28{0} - 96]=m[r28{0} - 96]{0},
                m[r28{0} - 104]=m[r28{0} - 104]{0},   m[r28{0} - 108]=m[r28{0} - 108]{0},   m[r28{0} - 112]=r25{0},
                m[r28{0} - 116]=m[r28{0} - 72]{0},   m[r28{0} - 120]=m[r28{0} - 44]{0},   m[r28{0} - 124]=0x8048567,
                m[r28{0} - 128]=%pc,   tmp1=(r28{0} - 128) + 4,   %flags=ADDFLAGS32( r28{0} - 124, 12, r28{0} - 112 ),
                %ZF=ADDFLAGS32( r28{0} - 124, 12, r28{0} - 112 ),   %CF=ADDFLAGS32( r28{0} - 124, 12, r28{0} - 112 )
              Live variables:  in proc main
dest is not lib
call:  190 {*32* eax, *32* r25, *32* r26} := CALL printf(
                *c** local16 := "ctime: %i
"
                *j32* local17 := local12
              )
              Reaching definitions: r24=0x8048567,   r25=r25{178},   r26=m[r28{0} - 44]{0},   r28=r28{0} - 128,
                r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},
                m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 36]=m[r28{0} - 36]{0},
                m[r28{0} - 44]=m[r28{0} - 44]{0},   m[r28{0} - 52]=m[r28{0} - 52]{0},
                m[r28{0} - 56]=m[r28{0} - 56]{0},   m[r28{0} - 60]=m[r28{0} - 60]{0},
                m[r28{0} - 64]=m[r28{0} - 64]{0},   m[r28{0} - 72]=m[r28{0} - 72]{0},
                m[r28{0} - 76]=m[r28{0} - 76]{0},   m[r28{0} - 80]=m[r28{0} - 80]{0},
                m[r28{0} - 84]=m[r28{0} - 84]{0},   m[r28{0} - 88]=m[r28{0} - 88]{0},
                m[r28{0} - 92]=m[r28{0} - 92]{0},   m[r28{0} - 96]=m[r28{0} - 96]{0},
                m[r28{0} - 104]=m[r28{0} - 104]{0},   m[r28{0} - 108]=m[r28{0} - 108]{0},   m[r28{0} - 112]=r25{0},
                m[r28{0} - 116]=m[r28{0} - 72]{0},   m[r28{0} - 120]=m[r28{0} - 36]{0},   m[r28{0} - 124]=0x8048572,
                m[r28{0} - 128]=%pc,   tmp1=(r28{0} - 128) + 4,   %flags=ADDFLAGS32( r28{0} - 124, 12, r28{0} - 112 ),
                %ZF=ADDFLAGS32( r28{0} - 124, 12, r28{0} - 112 ),   %CF=ADDFLAGS32( r28{0} - 124, 12, r28{0} - 112 )
              Live variables:  in proc main
