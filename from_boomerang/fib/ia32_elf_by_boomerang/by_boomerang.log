got filename fib.c for main
got filename fib.c for fib
after removing matching assigns (%pc).
in proc fib adding addrExp r28{0} - 12 to local table
in proc fib adding addrExp r28{0} - 16 to local table
in proc fib adding addrExp r28{0} - 20 to local table
in proc fib adding addrExp r28{0} - 4 to local table
in proc fib adding addrExp r28{0} - 8 to local table
in proc fib adding addrExp r28{0} - 16 to local table
in proc fib adding addrExp r28{0} - 20 to local table
in proc fib adding addrExp r28{0} - 16 to local table
in proc fib adding addrExp r28{0} - 20 to local table
in proc fib adding addrExp r28{0} - 12 to local table
in proc fib adding addrExp r28{0} - 12 to local table
in proc fib adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc fib adding addrExp r28{0} - 8 to local table
in proc fib adding addrExp r28{0} - 12 to local table
in proc fib adding addrExp r28{0} - 16 to local table
TYPE ERROR: Existing type at address 0xfffffff0 is not structure or array type
in proc fib adding addrExp r28{0} - 20 to local table
TYPE ERROR: Existing type at address 0xffffffec is not structure or array type
finding final parameters for fib
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for fib
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
in proc main adding addrExp r28{0} - 4 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 16 to local table
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 16 to local table
in proc main adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 16 to local table
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 16 to local table
could not set type for unknown parameter expression m[r28{0} + 4]
could not set type for unknown parameter expression m[r28{0} + 8]
could not set type for unknown parameter expression m[r28{0} + 12]
in proc fib adding addrExp r28{0} - 12 to local table
in proc fib adding addrExp r28{0} - 12 to local table
in proc fib adding addrExp r28{0} - 12 to local table
local eax has type /*signed?*/int that doesn't agree with type of define __size32 of a library, why?
local esp has type __size32 that doesn't agree with type of define void of a library, why?
dest is not lib
call:   15 *j32* eax := CALL fib(
                *i32* local0 := 10
              )
              Reaching definitions: r24=0,   r28=r28{0} - 16,   r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=10,   m[r28{0} - 16]=%pc,   tmp1=r28{0} - 12,
                %flags=SUBFLAGS32( r28{0} - 12, 0, r28{0} - 12 ),   %ZF=(r28{0} - 12) = 0,   %CF=(r28{0} - 12) <u 0
              Live variables: eax in proc main
result:    0 *j32* eax := -
dest is not lib
call:   21 {*32* eax, *32* r25, *32* r26} := CALL printf(
                *c** local1 := "%i
"
                *j32* local2 := eax
              )
              Reaching definitions: r24=r24{15},   r28=r28{0} - 16,   r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=r24{15},   m[r28{0} - 12]=0x8048468,   m[r28{0} - 16]=%pc,   tmp1=r28{0} - 12,
                %flags=SUBFLAGS32( r28{0} - 12, 0, r28{0} - 12 ),   %ZF=(r28{0} - 12) = 0,   %CF=(r28{0} - 12) <u 0
              Live variables:  in proc main
dest is not lib
call:   20 *i32* eax_1 := CALL fib(
                *i32* local2 := param1 - 1
              )
              Reaching definitions: r24=m[r28{0} + 4]{0} - 1,   r27=r27{0},   r28=r28{0} - 20,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r27{0},
                m[r28{0} - 12]=m[r28{0} - 12]{0},   m[r28{0} - 16]=m[r28{0} + 4]{0} - 1,   m[r28{0} - 20]=%pc,
                tmp1=m[r28{0} + 4]{0},   %flags=LOGICALFLAGS32( m[r28{0} + 4]{0} - 1 ),
                %ZF=LOGICALFLAGS32( m[r28{0} + 4]{0} - 1 ),   %CF=LOGICALFLAGS32( m[r28{0} + 4]{0} - 1 )
              Live variables: eax_1 in proc fib
result:    0 *i32* eax_1 := -
dest is not lib
call:   30 *i32* eax := CALL fib(
                *i32* local2 := param1 - 2
              )
              Reaching definitions: r24=m[r28{0} + 4]{0} - 2,   r27=r24{20},   r28=r28{0} - 20,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r27{0},
                m[r28{0} - 12]=m[r28{0} - 12]{0},   m[r28{0} - 16]=m[r28{0} + 4]{0} - 2,   m[r28{0} - 20]=%pc,
                <all>=<all>{20},   tmp1=m[r28{0} + 4]{0},
                %flags=SUBFLAGS32( m[r28{0} + 4]{0}, 2, m[r28{0} + 4]{0} - 2 ),   %ZF=(m[r28{0} + 4]{0} - 2) = 0,
                %CF=m[r28{0} + 4]{0} <u 2
              Live variables: eax in proc fib
result:    0 *i32* eax := -
