got filename short1.c for main
got filename short1.c for test
after removing matching assigns (%pc).
in proc test adding addrExp r28{0} - 4 to local table
in proc test adding addrExp r28{0} - 8 to local table
in proc test adding addrExp r28{0} - 8 to local table
in proc test adding addrExp r28{0} - 8 to local table
finding final parameters for test
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
in proc main adding addrExp r28{0} - 4 to local table
in proc main adding addrExp r28{0} - 32 to local table
in proc main adding addrExp r28{0} - 36 to local table
in proc main adding addrExp r28{0} - 40 to local table
in proc main adding addrExp r28{0} - 44 to local table
in proc main adding addrExp r28{0} - 40 to local table
in proc main adding addrExp r28{0} - 44 to local table
in proc main adding addrExp r28{0} - 48 to local table
in proc main adding addrExp r28{0} - 32 to local table
in proc main adding addrExp r28{0} - 36 to local table
in proc main adding addrExp r28{0} - 40 to local table
in proc main adding addrExp r28{0} - 44 to local table
in proc main adding addrExp r28{0} - 40 to local table
in proc main adding addrExp r28{0} - 44 to local table
in proc main adding addrExp r28{0} - 48 to local table
in proc main adding addrExp r28{0} - 32 to local table
in proc main adding addrExp r28{0} - 36 to local table
in proc main adding addrExp r28{0} - 40 to local table
in proc main adding addrExp r28{0} - 44 to local table
in proc main adding addrExp r28{0} - 40 to local table
in proc main adding addrExp r28{0} - 44 to local table
in proc main adding addrExp r28{0} - 48 to local table
in proc main adding addrExp r28{0} - 32 to local table
in proc main adding addrExp r28{0} - 36 to local table
in proc main adding addrExp r28{0} - 40 to local table
in proc main adding addrExp r28{0} - 44 to local table
in proc main adding addrExp r28{0} - 40 to local table
in proc main adding addrExp r28{0} - 44 to local table
in proc main adding addrExp r28{0} - 48 to local table
in proc main adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc main adding addrExp r28{0} - 32 to local table
in proc main adding addrExp r28{0} - 36 to local table
in proc main adding addrExp r28{0} - 40 to local table
in proc main adding addrExp r28{0} - 44 to local table
in proc main adding addrExp r28{0} - 40 to local table
in proc main adding addrExp r28{0} - 44 to local table
in proc main adding addrExp r28{0} - 48 to local table
in proc main adding addrExp r28{0} - 32 to local table
in proc main adding addrExp r28{0} - 36 to local table
in proc main adding addrExp r28{0} - 40 to local table
in proc main adding addrExp r28{0} - 44 to local table
in proc main adding addrExp r28{0} - 40 to local table
in proc main adding addrExp r28{0} - 44 to local table
in proc main adding addrExp r28{0} - 48 to local table
in proc main adding addrExp r28{0} - 32 to local table
in proc main adding addrExp r28{0} - 36 to local table
in proc main adding addrExp r28{0} - 40 to local table
in proc main adding addrExp r28{0} - 44 to local table
in proc main adding addrExp r28{0} - 40 to local table
in proc main adding addrExp r28{0} - 44 to local table
in proc main adding addrExp r28{0} - 48 to local table
in proc main adding addrExp r28{0} - 32 to local table
in proc main adding addrExp r28{0} - 36 to local table
in proc main adding addrExp r28{0} - 40 to local table
in proc main adding addrExp r28{0} - 44 to local table
in proc main adding addrExp r28{0} - 40 to local table
in proc main adding addrExp r28{0} - 44 to local table
in proc main adding addrExp r28{0} - 48 to local table
could not set type for unknown parameter expression m[r28{0} + 4]
could not set type for unknown parameter expression m[r28{0} + 8]
could not set type for unknown parameter expression m[r28{0} + 12]
in proc test adding addrExp r28{0} - 8 to local table
in proc test adding addrExp r28{0} - 8 to local table
in proc test adding addrExp r28{0} - 8 to local table
local eax has type /*signed?*/int that doesn't agree with type of define __size32 of a library, why?
local esp has type __size32 that doesn't agree with type of define void of a library, why?
dest is not lib
call:   32 *j32* eax := CALL test(
                *i32* local0 := 4
                *i32* local1 := 5
                *i32* local2 := 6
              )
              Reaching definitions: r24=16,   r28=r28{0} - 44,   r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 32]=6,   m[r28{0} - 36]=5,   m[r28{0} - 40]=4,   m[r28{0} - 44]=%pc,   tmp1=r28{0} - 12,
                %flags=SUBFLAGS32( r28{0} - 12, 16, r28{0} - 28 ),   %ZF=(r28{0} - 28) = 0,   %CF=(r28{0} - 12) <u 16
              Live variables: eax in proc main
result:    0 *j32* eax := -
dest is not lib
call:   46 {*32* eax, *v* r25, *v* r26} := CALL printf(
                *c** local3 := "Result for 4, 5, 6: %d
"
                *j32* local0 := eax
              )
              Reaching definitions: r24=r24{32},   r28=r28{0} - 48,   r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 32]=6,   m[r28{0} - 36]=5,   m[r28{0} - 40]=r24{32},   m[r28{0} - 44]=0x80484ec,
                m[r28{0} - 48]=%pc,   tmp1=r28{0} - 28,   %flags=SUBFLAGS32( r28{0} - 28, 8, r28{0} - 36 ),
                %ZF=(r28{0} - 36) = 0,   %CF=(r28{0} - 28) <u 8
              Live variables:  in proc main
dest is not lib
call:   59 *j32* eax := CALL test(
                *i32* local0 := 6
                *i32* local1 := 5
                *i32* local2 := 4
              )
              Reaching definitions: r24=r24{46},   r25=r25{46},   r26=r26{46},   r28=(r28{0} - 48) + 4,
                r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},
                m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 32]=4,   m[r28{0} - 36]=5,
                m[r28{0} - 40]=6,   m[r28{0} - 44]=%pc,   m[r28{0} - 48]=%pc,   tmp1=(r28{0} - 48) + 4,
                %flags=ADDFLAGS32( r28{0} - 44, 16, r28{0} - 28 ),   %ZF=ADDFLAGS32( r28{0} - 44, 16, r28{0} - 28 ),
                %CF=ADDFLAGS32( r28{0} - 44, 16, r28{0} - 28 )
              Live variables: eax in proc main
result:    0 *j32* eax := -
dest is not lib
call:   73 {*32* eax, *v* r25, *v* r26} := CALL printf(
                *c** local3 := "Result for 6, 5, 4: %d
"
                *j32* local0 := eax
              )
              Reaching definitions: r24=r24{59},   r25=r25{46},   r26=r26{46},   r28=r28{0} - 48,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 32]=4,   m[r28{0} - 36]=5,   m[r28{0} - 40]=r24{59},
                m[r28{0} - 44]=0x8048504,   m[r28{0} - 48]=%pc,   tmp1=r28{0} - 28,
                %flags=SUBFLAGS32( r28{0} - 28, 8, r28{0} - 36 ),   %ZF=(r28{0} - 36) = 0,   %CF=(r28{0} - 28) <u 8
              Live variables:  in proc main
dest is not lib
call:   86 *j32* eax := CALL test(
                *i32* local0 := 4
                *i32* local1 := 6
                *i32* local2 := 5
              )
              Reaching definitions: r24=r24{73},   r25=r25{73},   r26=r26{73},   r28=(r28{0} - 48) + 4,
                r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},
                m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 32]=5,   m[r28{0} - 36]=6,
                m[r28{0} - 40]=4,   m[r28{0} - 44]=%pc,   m[r28{0} - 48]=%pc,   tmp1=(r28{0} - 48) + 4,
                %flags=ADDFLAGS32( r28{0} - 44, 16, r28{0} - 28 ),   %ZF=ADDFLAGS32( r28{0} - 44, 16, r28{0} - 28 ),
                %CF=ADDFLAGS32( r28{0} - 44, 16, r28{0} - 28 )
              Live variables: eax in proc main
result:    0 *j32* eax := -
dest is not lib
call:  100 {*32* eax, *v* r25, *v* r26} := CALL printf(
                *c** local3 := "Result for 4, 6, 5: %d
"
                *j32* local0 := eax
              )
              Reaching definitions: r24=r24{86},   r25=r25{73},   r26=r26{73},   r28=r28{0} - 48,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 32]=5,   m[r28{0} - 36]=6,   m[r28{0} - 40]=r24{86},
                m[r28{0} - 44]=0x804851c,   m[r28{0} - 48]=%pc,   tmp1=r28{0} - 28,
                %flags=SUBFLAGS32( r28{0} - 28, 8, r28{0} - 36 ),   %ZF=(r28{0} - 36) = 0,   %CF=(r28{0} - 28) <u 8
              Live variables:  in proc main
dest is not lib
call:  113 *j32* eax := CALL test(
                *i32* local0 := 6
                *i32* local1 := 4
                *i32* local2 := 5
              )
              Reaching definitions: r24=r24{100},   r25=r25{100},   r26=r26{100},   r28=(r28{0} - 48) + 4,
                r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},
                m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 32]=5,   m[r28{0} - 36]=4,
                m[r28{0} - 40]=6,   m[r28{0} - 44]=%pc,   m[r28{0} - 48]=%pc,   tmp1=(r28{0} - 48) + 4,
                %flags=ADDFLAGS32( r28{0} - 44, 16, r28{0} - 28 ),   %ZF=ADDFLAGS32( r28{0} - 44, 16, r28{0} - 28 ),
                %CF=ADDFLAGS32( r28{0} - 44, 16, r28{0} - 28 )
              Live variables: eax in proc main
result:    0 *j32* eax := -
dest is not lib
call:  127 {*32* eax, *32* r25, *32* r26} := CALL printf(
                *c** local3 := "Result for 6, 4, 5: %d
"
                *j32* local0 := eax
              )
              Reaching definitions: r24=r24{113},   r25=r25{100},   r26=r26{100},   r28=r28{0} - 48,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 32]=5,   m[r28{0} - 36]=4,   m[r28{0} - 40]=r24{113},
                m[r28{0} - 44]=0x8048534,   m[r28{0} - 48]=%pc,   tmp1=r28{0} - 28,
                %flags=SUBFLAGS32( r28{0} - 28, 8, r28{0} - 36 ),   %ZF=(r28{0} - 36) = 0,   %CF=(r28{0} - 28) <u 8
              Live variables:  in proc main
