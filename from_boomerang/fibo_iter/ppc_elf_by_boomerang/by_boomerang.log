in proc fib adding addrExp r1{0} - 24 to local table
in proc fib adding addrExp r1{0} - 28 to local table
in proc fib adding addrExp r1{0} - 32 to local table
in proc fib adding addrExp r1{0} - 36 to local table
in proc fib adding addrExp r1{0} - 48 to local table
in proc fib adding addrExp r1{0} - 4 to local table
in proc fib adding addrExp r1{0} - 40 to local table
in proc fib adding addrExp r1{0} - 20 to local table
in proc fib adding addrExp r1{0} - 36 to local table
in proc fib adding addrExp r1{0} - 32 to local table
in proc fib adding addrExp r1{0} - 28 to local table
in proc fib adding addrExp r1{0} - 24 to local table
in proc fib adding addrExp r1{0} - 28 to local table
in proc fib adding addrExp r1{0} - 32 to local table
in proc fib adding addrExp r1{0} - 36 to local table
in proc fib adding addrExp r1{0} - 24 to local table
in proc fib adding addrExp r1{0} - 32 to local table
in proc fib adding addrExp r1{0} - 28 to local table
in proc fib adding addrExp r1{0} - 36 to local table
in proc fib adding addrExp r1{0} - 20 to local table
in proc fib adding addrExp r1{0} - 20 to local table
in proc fib adding addrExp r1{0} - 24 to local table
in proc fib adding addrExp r1{0} - 28 to local table
in proc fib adding addrExp r1{0} - 32 to local table
in proc fib adding addrExp r1{0} - 36 to local table
finding final parameters for fib
potential param r1
found new parameter r1
potential param r3
found new parameter r3
potential param r9
found new parameter r9
after removing matching assigns (%pc).
in proc main adding addrExp r1{0} - 24 to local table
in proc main adding addrExp r1{0} - 32 to local table
in proc main adding addrExp r1{0} - 4 to local table
in proc main adding addrExp r1{0} + 4 to local table
in proc main adding addrExp r1{0} - 20 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure main ###
in proc main adding addrExp r1{0} - 24 to local table
in proc main adding addrExp r1{0} - 32 to local table
in proc main adding addrExp r1{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc main adding addrExp r1{0} + 4 to local table
in proc main adding addrExp r1{0} - 20 to local table
in proc main adding addrExp r1{0} - 24 to local table
in proc fib adding addrExp r1{0} - 20 to local table
in proc fib adding addrExp r1{0} - 36 to local table
in proc fib adding addrExp r1{0} - 32 to local table
in proc fib adding addrExp r1{0} - 28 to local table
in proc fib adding addrExp r1{0} - 28 to local table
in proc fib adding addrExp r1{0} - 32 to local table
in proc fib adding addrExp r1{0} - 36 to local table
in proc fib adding addrExp r1{0} - 32 to local table
in proc fib adding addrExp r1{0} - 28 to local table
in proc fib adding addrExp r1{0} - 36 to local table
in proc fib adding addrExp r1{0} - 20 to local table
in proc fib adding addrExp r1{0} - 20 to local table
finding final parameters for fib
potential param r1
found new parameter r1
potential param r3
found new parameter r3
local g3 has type char * that doesn't agree with type of define void of a library, why?
local g4 has type int * that doesn't agree with type of define void of a library, why?
local g5 has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local g4 has type void that doesn't agree with type of define __size32 of a library, why?
local g5 has type void that doesn't agree with type of define __size32 of a library, why?
dest is not lib
call:   11 {*v* g3, *v* r6, *v* r7, *v* r8, *v* r9, *v* r10, *v* r11, *v* r12} := CALL printf(
                *c** g3 := "Input number: "
              )
              Reaching definitions: r0=machine("%LR"),   r1=r1{0} - 32,   r3=0x100008fc,   r4=r4{0},   r5=r5{0},
                r9=0x10000000,   r31=r1{0} - 32,   m[r1{0} + 4]=machine("%LR"),   m[r1{0} - 4]=r31{0},
                m[r1{0} - 24]=m[r1{0} - 24]{0},   m[r1{0} - 32]=r1{0}
              Live variables:  in proc main
dest is not lib
call:   18 {*v* g3, *v* r6, *v* r7, *v* r8, *i32* r9, *v* r10, *v* r11, *v* r12} := CALL scanf(
                *c** g3 := "%d"
                *i32** g4 := a[local0]
              )
              Reaching definitions: r0=machine("%LR"),   r1=r1{0} - 32,   r3=0x1000090c,   r4=r1{0} - 24,   r5=r5{11},
                r6=r6{11},   r7=r7{11},   r8=r8{11},   r9=0x10000000,   r10=r10{11},   r11=r11{11},   r12=r12{11},
                r31=r1{0} - 32,   r65=0,   m[r1{0} + 4]=machine("%LR"),   m[r1{0} - 4]=r31{0},
                m[r1{0} - 24]=m[r1{0} - 24]{0},   m[r1{0} - 32]=r1{0}
              Live variables:  in proc main
dest is not lib
call:   22 {*32* r0, *j32* g3, *32* r9, *32* r11} := CALL fib(
                *i32* g3 := local0
              )
              Reaching definitions: r0=machine("%LR"),   r1=r1{0} - 32,   r3=m[r1{0} - 24]{0},   r4=r4{18},   r5=r5{18}
                r6=r6{18},   r7=r7{18},   r8=r8{18},   r9=r9{18},   r10=r10{18},   r11=r11{18},   r12=r12{18},
                r31=r1{0} - 32,   r65=0,   m[r1{0} + 4]=machine("%LR"),   m[r1{0} - 4]=r31{0},
                m[r1{0} - 24]=m[r1{0} - 24]{0},   m[r1{0} - 32]=r1{0}
              Live variables: g3 in proc main
result:    0 *j32* g3 := -
dest is not lib
call:   32 {*v* g3, *32* r6, *32* r7, *32* r8, *32* r9, *32* r10, *v* r11, *32* r12} := CALL printf(
                *c** g3 := "fibonacci(%d) = %d
"
                *i32* g4 := local0
                *j32* g5 := g3
              )
              Reaching definitions: r0=r3{22},   r1=r1{0} - 32,   r3=0x10000910,   r4=m[r1{0} - 24]{0},   r5=r3{22},
                r6=r6{18},   r7=r7{18},   r8=r8{18},   r9=0x10000000,   r10=r10{18},   r11=r11{22},   r12=r12{18},
                r31=r1{0} - 32,   r65=0,   m[r1{0} + 4]=machine("%LR"),   m[r1{0} - 4]=r31{0},   m[r1{0} - 20]=r3{22},
                m[r1{0} - 24]=m[r1{0} - 24]{0},   m[r1{0} - 32]=r1{0}
              Live variables:  in proc main
