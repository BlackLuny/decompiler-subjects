got filename phi.c for main
got filename phi.c for fib
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure fib ###
in proc fib adding addrExp r28{0} - 24 to local table
in proc fib adding addrExp r28{0} - 28 to local table
in proc fib adding addrExp r28{0} - 32 to local table
in proc fib adding addrExp r28{0} - 4 to local table
in proc fib adding addrExp r28{0} - 8 to local table
in proc fib adding addrExp r28{0} - 12 to local table
in proc fib adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc fib adding addrExp r28{0} - 8 to local table
in proc fib adding addrExp r28{0} - 12 to local table
in proc fib adding addrExp r28{0} - 24 to local table
in proc fib adding addrExp r28{0} - 28 to local table
in proc fib adding addrExp r28{0} - 32 to local table
in proc fib adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc fib adding addrExp r28{0} - 8 to local table
in proc fib adding addrExp r28{0} - 12 to local table
in proc fib adding addrExp r28{0} - 24 to local table
in proc fib adding addrExp r28{0} - 28 to local table
in proc fib adding addrExp r28{0} - 32 to local table
in proc fib adding addrExp r28{0} - 28 to local table
in proc fib adding addrExp r28{0} - 32 to local table
in proc fib adding addrExp r28{0} - 28 to local table
in proc fib adding addrExp r28{0} - 32 to local table
in proc fib adding addrExp r28{0} - 24 to local table
in proc fib adding addrExp r28{0} - 28 to local table
in proc fib adding addrExp r28{0} - 32 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure fib ###
in proc fib adding addrExp r28{0} - 24 to local table
in proc fib adding addrExp r28{0} - 28 to local table
in proc fib adding addrExp r28{0} - 32 to local table
in proc fib adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc fib adding addrExp r28{0} - 8 to local table
in proc fib adding addrExp r28{0} - 12 to local table
in proc fib adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc fib adding addrExp r28{0} - 8 to local table
in proc fib adding addrExp r28{0} - 12 to local table
in proc fib adding addrExp r28{0} - 24 to local table
in proc fib adding addrExp r28{0} - 28 to local table
in proc fib adding addrExp r28{0} - 32 to local table
in proc fib adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc fib adding addrExp r28{0} - 8 to local table
in proc fib adding addrExp r28{0} - 12 to local table
in proc fib adding addrExp r28{0} - 24 to local table
in proc fib adding addrExp r28{0} - 28 to local table
in proc fib adding addrExp r28{0} - 32 to local table
in proc fib adding addrExp r28{0} - 28 to local table
in proc fib adding addrExp r28{0} - 32 to local table
in proc fib adding addrExp r28{0} - 28 to local table
in proc fib adding addrExp r28{0} - 32 to local table
in proc fib adding addrExp r28{0} - 24 to local table
in proc fib adding addrExp r28{0} - 28 to local table
in proc fib adding addrExp r28{0} - 32 to local table
finding final parameters for fib
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r25
found new parameter r25
potential param r26
found new parameter r26
finding final parameters for fib
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r25
found new parameter r25
potential param r26
found new parameter r26
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
in proc main adding addrExp r28{0} - 24 to local table
in proc main adding addrExp r28{0} - 4 to local table
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 28 to local table
in proc main adding addrExp r28{0} - 32 to local table
in proc main adding addrExp r28{0} - 24 to local table
in proc main adding addrExp r28{0} - 28 to local table
in proc main adding addrExp r28{0} - 32 to local table
in proc main adding addrExp r28{0} - 24 to local table
in proc main adding addrExp r28{0} - 28 to local table
TYPE ERROR: Existing type at address 0xffffffe4 is not structure or array type
in proc main adding addrExp r28{0} - 32 to local table
in proc main adding addrExp r28{0} - 24 to local table
in proc main adding addrExp r28{0} - 28 to local table
TYPE ERROR: Existing type at address 0xffffffe4 is not structure or array type
in proc main adding addrExp r28{0} - 32 to local table
in proc main adding addrExp r28{0} - 16 to local table
in proc main adding addrExp r28{0} - 20 to local table
in proc main adding addrExp r28{0} - 24 to local table
in proc main adding addrExp r28{0} - 28 to local table
in proc main adding addrExp r28{0} - 32 to local table
in proc main adding addrExp r28{0} - 28 to local table
in proc main adding addrExp r28{0} - 32 to local table
in proc main adding addrExp r28{0} - 28 to local table
in proc main adding addrExp r28{0} - 32 to local table
in proc main adding addrExp r28{0} - 24 to local table
in proc main adding addrExp r28{0} - 28 to local table
in proc main adding addrExp r28{0} - 32 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure main ###
in proc main adding addrExp r28{0} - 24 to local table
in proc main adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 28 to local table
in proc main adding addrExp r28{0} - 32 to local table
in proc main adding addrExp r28{0} - 24 to local table
in proc main adding addrExp r28{0} - 28 to local table
in proc main adding addrExp r28{0} - 32 to local table
in proc main adding addrExp r28{0} - 24 to local table
in proc main adding addrExp r28{0} - 28 to local table
TYPE ERROR: Existing type at address 0xffffffe4 is not structure or array type
in proc main adding addrExp r28{0} - 32 to local table
in proc main adding addrExp r28{0} - 24 to local table
in proc main adding addrExp r28{0} - 28 to local table
TYPE ERROR: Existing type at address 0xffffffe4 is not structure or array type
in proc main adding addrExp r28{0} - 32 to local table
in proc main adding addrExp r28{0} - 16 to local table
in proc main adding addrExp r28{0} - 20 to local table
in proc main adding addrExp r28{0} - 24 to local table
in proc main adding addrExp r28{0} - 28 to local table
in proc main adding addrExp r28{0} - 32 to local table
in proc main adding addrExp r28{0} - 28 to local table
in proc main adding addrExp r28{0} - 32 to local table
in proc main adding addrExp r28{0} - 28 to local table
in proc main adding addrExp r28{0} - 32 to local table
in proc main adding addrExp r28{0} - 24 to local table
in proc main adding addrExp r28{0} - 28 to local table
in proc main adding addrExp r28{0} - 32 to local table
could not set type for unknown parameter expression m[r28{0} + 4]
could not set type for unknown parameter expression m[r28{0} + 8]
could not set type for unknown parameter expression m[r28{0} + 12]
local eax has type int that doesn't agree with type of define __size32 of a library, why?
local ecx has type __size32 that doesn't agree with type of define void of a library, why?
local edx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local ecx has type void that doesn't agree with type of define __size32 of a library, why?
local edx has type void that doesn't agree with type of define __size32 of a library, why?
local eax has type __size32 that doesn't agree with type of define int of a library, why?
dest is not lib
call:   16 {*32* eax, *v* ecx, *v* edx} := CALL printf(
                *c** local0 := "Input number: "
              )
              Reaching definitions: r24=r24{0},   r27=r27{0},   r28=r28{0} - 32,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r27{0},   m[r28{0} - 12]=r24{0},
                m[r28{0} - 24]=m[r28{0} - 24]{0},   m[r28{0} - 28]=0x80484d8,   m[r28{0} - 32]=%pc,   tmp1=r28{0} - 12,
                %flags=SUBFLAGS32( r28{0} - 12, 12, r28{0} - 24 ),   %ZF=(r28{0} - 24) = 0,   %CF=(r28{0} - 12) <u 12
              Live variables:  in proc main
dest is not lib
call:   29 {*32* eax, *32* ecx, *32* edx} := CALL scanf(
                *c** local0 := "%d"
                *i32** local1 := a[eax]
              )
              Reaching definitions: r24=r24{16},   r25=0x80484d8,   r26=r28{0} - 12,   r27=m[r28{0} - 24]{0},
                r28=r28{0} - 32,   r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},
                m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r27{0},
                m[r28{0} - 12]=r24{0},   m[r28{0} - 24]=r28{0} - 12,   m[r28{0} - 28]=0x80484e7,   m[r28{0} - 32]=%pc,
                tmp1=r28{0} - 12,   %flags=SUBFLAGS32( r28{0} - 12, 12, r28{0} - 24 ),   %ZF=(r28{0} - 24) = 0,
                %CF=(r28{0} - 12) <u 12
              Live variables: ecx in proc main
result:    0 *32* ecx := -
dest is not lib
call:   72 {*i32* eax_3, *32* ecx, *32* edx} := CALL fib(
                *i32* local4 := eax - 1
                *32* ecx := ecx
                *j32* edx := eax - 1
              )
              Reaching definitions: r24=r24{29},   r25=r25{29},   r26=r24{0} - 1,   r27=r24{0},   r28=r28{0} - 32,
                r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},
                m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r27{0},
                m[r28{0} - 12]=r24{0},   m[r28{0} - 24]=r28{0} - 12,   m[r28{0} - 28]=r24{0} - 1,   m[r28{0} - 32]=%pc,
                tmp1=r28{0} - 12,   %flags=SUBFLAGS32( r28{0} - 12, 12, r28{0} - 24 ),   %ZF=(r28{0} - 24) = 0,
                %CF=(r28{0} - 12) <u 12
              Live variables: eax_3,  edx in proc main
result:    0 *i32* eax_3 := -
result:    0 *32* edx := -
dest is not lib
call:   79 {*i32* eax, *32* ecx, *32* edx} := CALL fib(
                *i32* local4 := eax_3 - 1
                *j32* ecx := eax_3 - 1
                *32* edx := edx
              )
              Reaching definitions: r24=r24{72},   r25=r24{72} - 1,   r26=r26{72},   r27=r24{72},   r28=r28{0} - 32,
                r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},
                m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r27{0},
                m[r28{0} - 12]=r24{0},   m[r28{0} - 24]=r28{0} - 12,   m[r28{0} - 28]=r24{72} - 1,   m[r28{0} - 32]=%pc
                tmp1=r28{0} - 12,   %flags=SUBFLAGS32( r28{0} - 12, 12, r28{0} - 24 ),   %ZF=(r28{0} - 24) = 0,
                %CF=(r28{0} - 12) <u 12
              Live variables: eax in proc main
result:    0 *i32* eax := -
dest is not lib
call:   92 {*i32* eax, *32* ecx, *32* edx} := CALL printf(
                *c** local0 := "%d"
                *i32* local2 := eax + eax_3
              )
              Reaching definitions: r24=r24{79},   r25=r24{72} - 1,   r26=r24{79} + r24{72},   r27=r24{72},
                r28=r28{0} - 32,   r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},
                m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r27{0},
                m[r28{0} - 12]=r24{0},   m[r28{0} - 24]=r24{79} + r24{72},   m[r28{0} - 28]=0x80484e7,
                m[r28{0} - 32]=%pc,   tmp1=r28{0} - 12,   %flags=SUBFLAGS32( r28{0} - 12, 12, r28{0} - 24 ),
                %ZF=(r28{0} - 24) = 0,   %CF=(r28{0} - 12) <u 12
              Live variables:  in proc main
dest is not lib
call:   53 {*32* eax, *32* ecx, *32* edx} := CALL printf(
                *c** local0 := "fibonacci(%d) = %d
"
                *i32* local2 := eax
                *i32* local3 := eax_4
              )
              Reaching definitions: r24=r24{106},   r25=r25{107},   r26=r26{108},   r27=r27{109},
                r28=(r28{0} - 12) - 20,   r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=r27{0},   m[r28{0} - 12]=r24{0},   m[r28{0} - 16]=r26{108},   m[r28{0} - 20]=r24{106},
                m[r28{0} - 24]=r24{0},   m[r28{0} - 28]=0x80484ea,   m[r28{0} - 32]=%pc,   tmp1=tmp1{111},
                %flags=%flags{112},   %ZF=%ZF{113},   %CF=%CF{114}
              Live variables:  in proc main
dest is not lib
call:   33 {*i32* eax_1, *32* ecx, *32* edx} := CALL fib(
                *i32* local4 := param1 - 1
                *j32* ecx := param1 - 1
                *32* edx := param3
              )
              Reaching definitions: r25=m[r28{0} + 4]{0} - 1,   r26=r26{0},   r27=m[r28{0} + 4]{0},   r28=r28{0} - 32,
                r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r27{0},
                m[r28{0} - 12]=r27{0},   m[r28{0} - 24]=m[r28{0} - 24]{0},   m[r28{0} - 28]=m[r28{0} + 4]{0} - 1,
                m[r28{0} - 32]=%pc,   tmp1=r28{0} - 12,   %flags=SUBFLAGS32( r28{0} - 12, 12, r28{0} - 24 ),
                %ZF=(r28{0} - 24) = 0,   %CF=(r28{0} - 12) <u 12
              Live variables: eax_1,  ecx in proc fib
result:    0 *i32* eax_1 := -
result:    0 *32* ecx := -
dest is not lib
call:   40 {*i32* eax, *32* ecx, *32* edx} := CALL fib(
                *i32* local4 := eax_1 - 1
                *32* ecx := ecx
                *j32* edx := eax_1 - 1
              )
              Reaching definitions: r24=r24{33},   r25=r25{33},   r26=r24{33} - 1,   r27=r24{33},   r28=r28{0} - 32,
                r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r27{0},
                m[r28{0} - 12]=r27{0},   m[r28{0} - 24]=m[r28{0} - 24]{0},   m[r28{0} - 28]=r24{33} - 1,
                m[r28{0} - 32]=%pc,   <all>=<all>{33},   tmp1=tmp1{33},   %flags=%flags{33},   %ZF=%ZF{33},
                %CF=%CF{33}
              Live variables: eax in proc fib
result:    0 *i32* eax := -
dest is not lib
call:   53 {*i32* eax, *32* ecx, *32* edx, *j32* r28} := CALL printf(
                *c** local4 := "%d"
                *i32* local3 := eax + eax_1
              )
              Reaching definitions: r24=r24{40},   r25=m[r28{0} - 24]{0},   r26=r24{40} + r24{33},   r27=r24{33},
                r28=r28{0} - 32,   r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=r27{0},   m[r28{0} - 12]=r27{0},   m[r28{0} - 24]=r24{40} + r24{33},
                m[r28{0} - 28]=0x80484e7,   m[r28{0} - 32]=%pc,   <all>=<all>{40},   tmp1=tmp1{40},   %flags=%flags{40}
                %ZF=%ZF{40},   %CF=%CF{40}
              Live variables: ecx,  edx in proc fib
result:    0 *32* ecx := -
result:    0 *32* edx := -
