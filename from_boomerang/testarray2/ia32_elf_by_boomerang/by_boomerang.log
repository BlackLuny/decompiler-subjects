got filename testarray2.c for main
got filename testarray2.c for mid
got filename testarray2.c for fst
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
in proc mid adding addrExp r28{0} - 4 to local table
in proc mid adding addrExp r28{0} - 24 to local table
in proc mid adding addrExp r28{0} - 28 to local table
in proc mid adding addrExp r28{0} - 32 to local table
in proc mid adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc mid adding addrExp r28{0} - 24 to local table
in proc mid adding addrExp r28{0} - 28 to local table
in proc mid adding addrExp r28{0} - 32 to local table
finding final parameters for mid
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
in proc fst adding addrExp r28{0} - 4 to local table
in proc fst adding addrExp r28{0} - 24 to local table
in proc fst adding addrExp r28{0} - 28 to local table
in proc fst adding addrExp r28{0} - 32 to local table
in proc fst adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc fst adding addrExp r28{0} - 24 to local table
in proc fst adding addrExp r28{0} - 28 to local table
in proc fst adding addrExp r28{0} - 32 to local table
finding final parameters for fst
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
after removing matching assigns (%pc).
in proc main adding addrExp r28{0} - 4 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 60 to local table
in proc main adding addrExp r28{0} - 64 to local table
in proc main adding addrExp r28{0} - 60 to local table
in proc main adding addrExp r28{0} - 64 to local table
in proc main adding addrExp r28{0} - 16 to local table
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 16 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 16 to local table
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 56 to local table
in proc main adding addrExp r28{0} - 60 to local table
in proc main adding addrExp r28{0} - 64 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure main ###
in proc main adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 60 to local table
in proc main adding addrExp r28{0} - 64 to local table
in proc main adding addrExp r28{0} - 60 to local table
in proc main adding addrExp r28{0} - 64 to local table
in proc main adding addrExp r28{0} - 16 to local table
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 16 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 16 to local table
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 56 to local table
in proc main adding addrExp r28{0} - 60 to local table
in proc main adding addrExp r28{0} - 64 to local table
could not set type for unknown parameter expression m[r28{0} + 4]
could not set type for unknown parameter expression m[r28{0} + 8]
could not set type for unknown parameter expression m[r28{0} + 12]
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 16 to local table
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 16 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 16 to local table
in proc main adding addrExp r28{0} - 8 to local table
finding final parameters for mid
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for fst
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
local edx has type int that doesn't agree with type of define __size32 of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local eax has type int that doesn't agree with type of define __size32 of a library, why?
local esp has type __size32 that doesn't agree with type of define void of a library, why?
local eax has type int that doesn't agree with type of define __size32 of a library, why?
local esp has type __size32 that doesn't agree with type of define void of a library, why?
dest is not lib
call:   32 {*v* r25, *v* edx} := CALL mid(
                *32* local1 := 0x8049654
              )
              Reaching definitions: r24=16,   r28=r28{0} - 64,   r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0,   m[r28{0} - 60]=0x8049654,   m[r28{0} - 64]=%pc,   tmp1=r28{0} - 44,
                %flags=SUBFLAGS32( r28{0} - 44, 12, r28{0} - 56 ),   %ZF=(r28{0} - 56) = 0,   %CF=(r28{0} - 44) <u 12
              Live variables:  in proc main
dest is not lib
call:   48 {*v* r25, *i32* edx} := CALL fst(
                *32* local1 := 0x804964a
              )
              Reaching definitions: r24=0x804964a,   r25=r25{32},   r26=r26{32},   r28=r28{0} - 64,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 12]=0,   m[r28{0} - 60]=0x804964a,   m[r28{0} - 64]=%pc,
                tmp1=0x8049654,   %flags=SUBFLAGS32( 0x8049654, 10, 0x804964a ),   %ZF=0,   %CF=0
              Live variables:  in proc main
dest is not lib
call:   82 {*32* r25, *32* edx} := CALL printf(
                *c** local1 := "Sum is %d
"
                *i32* local4 := local0
              )
              Reaching definitions: r24=r24{93},   r25=r25{48},   r26=r26{94},   r28=r28{0} - 64,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{99},   m[r28{0} - 12]=m[r28{0} - 12]{100},
                m[r28{0} - 16]=m[r28{0} - 16]{101},   m[r28{0} - 56]=m[r28{0} - 12]{100},   m[r28{0} - 60]=0x8048542,
                m[r28{0} - 64]=%pc,   tmp1=r28{0} - 44,   %flags=SUBFLAGS32( r28{0} - 44, 8, r28{0} - 52 ),
                %ZF=(r28{0} - 52) = 0,   %CF=(r28{0} - 44) <u 8
              Live variables:  in proc main
dest is not lib
call:   22 {*32* eax, *32* r25, *32* r26} := CALL printf(
                *c** local0 := "Middle elment is %d
"
                *i32* local1 := eax
              )
              Reaching definitions: r24=r24{14},   r28=r28{0} - 32,   r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 24]=r24{14},   m[r28{0} - 28]=0x8048518,   m[r28{0} - 32]=%pc,
                tmp1=m[r28{0} + 4]{0},   %flags=ADDFLAGS32( m[r28{0} + 4]{0}, 2, m[r28{0} + 4]{0} + 2 ),
                %ZF=ADDFLAGS32( m[r28{0} + 4]{0}, 2, m[r28{0} + 4]{0} + 2 ),
                %CF=ADDFLAGS32( m[r28{0} + 4]{0}, 2, m[r28{0} + 4]{0} + 2 )
              Live variables:  in proc mid
dest is not lib
call:   22 {*32* eax, *32* r25, *32* r26} := CALL printf(
                *c** local0 := "First element is %d
"
                *i32* local1 := eax
              )
              Reaching definitions: r24=r24{14},   r28=r28{0} - 32,   r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 24]=r24{14},   m[r28{0} - 28]=0x804852d,   m[r28{0} - 32]=%pc,
                tmp1=m[r28{0} + 4]{0},   %flags=ADDFLAGS32( m[r28{0} + 4]{0}, 10, m[r28{0} + 4]{0} + 10 ),
                %ZF=ADDFLAGS32( m[r28{0} + 4]{0}, 10, m[r28{0} + 4]{0} + 10 ),
                %CF=ADDFLAGS32( m[r28{0} + 4]{0}, 10, m[r28{0} + 4]{0} + 10 )
              Live variables:  in proc fst
