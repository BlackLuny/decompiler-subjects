INFO  holdec.an - ### holdec 1.1 Copyright 2003-2012 Raimar Falke
INFO  holdec.an - Using ./from_boomerang/branch/ia32_elf_by_boomerang_sunos/subject.exe as executable
INFO  holdec.fG - Detected ELF (Executable and Linkable Format)
INFO  holdec.ks - wrote ./from_boomerang/branch/ia32_elf_by_boomerang_sunos/subject.exe.info
INFO  holdec.fG - disassembleAndWrite: start a new loop with 1 extra block starts
INFO  holdec.fG - disassembleAndWrite: running multiline
INFO  holdec.ks - wrote ./from_boomerang/branch/ia32_elf_by_boomerang_sunos/subject.exe.info
INFO  holdec.ks - wrote ./from_boomerang/branch/ia32_elf_by_boomerang_sunos/subject.exe.info
INFO  holdec.fG - disassembleAndWrite: found 1 new addresses
INFO  holdec.fG - disassembleAndWrite: start a new loop with 2 extra block starts
INFO  holdec.fG - disassembleAndWrite: running multiline
INFO  holdec.ks - wrote ./from_boomerang/branch/ia32_elf_by_boomerang_sunos/subject.exe.info
INFO  holdec.ks - wrote ./from_boomerang/branch/ia32_elf_by_boomerang_sunos/subject.exe.info
INFO  holdec.fG - disassembleAndWrite: found no new addresses. will stop now.
INFO  holdec.ks - wrote ./from_boomerang/branch/ia32_elf_by_boomerang_sunos/subject.exe.info
INFO  holdec.ks - wrote ./from_boomerang/branch/ia32_elf_by_boomerang_sunos/subject.exe.info
INFO  holdec.fG - reading all asm lines ...
INFO  holdec.fG - ... read 1461 asm lines
WARN  holdec.w - Address 080480d4.0 is excluded by the address filter. Maybe outside text section?
WARN  holdec.w - Address 08049524.0 is excluded by the address filter. Maybe outside text section?
INFO  holdec.an - will decompile 25 functions
WARN  holdec.ag - Referencing unknown line 080492c8.0
WARN  holdec.ag - Referencing unknown line 0804923c.0
WARN  holdec.ag - Referencing unknown line 08048af0.0
WARN  holdec.ag - Referencing unknown line 08048b48.0
WARN  holdec.ag - Referencing unknown line 08048b48.0
WARN  holdec.ag - Referencing unknown line 08048800.0
WARN  holdec.ag - Referencing unknown line 08048b78.0
WARN  holdec.ag - Referencing unknown line 08048b78.0
WARN  holdec.ac - Block 10 is already known to have a starting stack offset of 4 but when called from 9 it has an offset of -16
WARN  holdec.ag - Referencing unknown line 08048c08.0
WARN  holdec.ag - Referencing unknown line 08048a58.0
WARN  holdec.ag - Referencing unknown line 08048a94.0
WARN  holdec.ag - Referencing unknown line 08048a58.0
WARN  holdec.ac - Block 9 is already known to have a starting stack offset of 4 but when called from 8 it has an offset of -4
WARN  holdec.ac - Block 10 is already known to have a starting stack offset of 4 but when called from 9 it has an offset of -4
WARN  holdec.ag - Referencing unknown line 08048a58.0
WARN  holdec.ag - Referencing unknown line 08048820.0
WARN  holdec.ac - Block 9 is already known to have a starting stack offset of 4 but when called from 3 it has an offset of -4
WARN  holdec.ac - Block 9 is already known to have a starting stack offset of -4 but when called from 5 it has an offset of 4
WARN  holdec.ac - Block 9 is already known to have a starting stack offset of -4 but when called from 8 it has an offset of 4
WARN  holdec.ag - Referencing unknown line 08048810.0
WARN  holdec.ag - Referencing unknown line 08048820.0
WARN  holdec.ac - Block 7 is already known to have a starting stack offset of 4 but when called from 4 it has an offset of 0
WARN  holdec.ac - Block 7 is already known to have a starting stack offset of 0 but when called from 6 it has an offset of 4
WARN  holdec.d - may result in wrong values
WARN  holdec.d -   reg_pp6 = PHI(reg_var13, reg_var10) in Block2
WARN  holdec.d -   reg_var13 = ADD(LOAD(reg_pp6), 20) in Block5
WARN  holdec.ag - Referencing unknown line 08048cf4.0
WARN  holdec.ag - Referencing unknown line 08048d94.0
WARN  holdec.ag - Referencing unknown line 08048830.0
WARN  holdec.ag - Referencing unknown line 08048eac.0
WARN  holdec.ag - Referencing unknown line 08048a58.0
WARN  holdec.ag - Referencing unknown line 08048eac.0
