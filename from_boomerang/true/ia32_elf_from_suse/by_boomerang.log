Unknown library function __cxa_atexit
COMPUTED JUMP at 0x804993c, pDest = m[(r27 * 4) + 0x804a620]
Unknown library function vfprintf
Unknown library function __overflow
after removing matching assigns (%pc).
in proc __i686.get_pc_thunk.bx adding addrExp r28{0} to local table
finding final parameters for __i686.get_pc_thunk.bx
potential param r28
found new parameter r28
potential param m[r28{0}]
found new parameter m[r28{0}]
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure atexit ###
in proc atexit adding addrExp r28{0} - 4 to local table
in proc atexit adding addrExp r28{0} - 8 to local table
in proc atexit adding addrExp r28{0} - 24 to local table
in proc atexit adding addrExp r28{0} - 12 to local table
in proc atexit adding addrExp r28{0} - 16 to local table
in proc atexit adding addrExp r28{0} - 20 to local table
in proc atexit adding addrExp r28{0} - 24 to local table
finding final parameters for atexit
assgn   17 *32* r26 := m[0x804b948]
assgn   34 *32* r26 := m[0x804b800]
assgn   50 *32* r26 := m[0x804b800]
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
in proc usage adding addrExp r28{0} - 4 to local table
in proc usage adding addrExp r28{0} - 20 to local table
in proc usage adding addrExp r28{0} - 24 to local table
in proc usage adding addrExp r28{0} - 28 to local table
in proc usage adding addrExp r28{0} - 32 to local table
in proc usage adding addrExp r28{0} - 28 to local table
in proc usage adding addrExp r28{0} - 20 to local table
in proc usage adding addrExp r28{0} - 24 to local table
in proc usage adding addrExp r28{0} - 32 to local table
in proc usage adding addrExp r28{0} - 28 to local table
in proc usage adding addrExp r28{0} - 20 to local table
in proc usage adding addrExp r28{0} - 24 to local table
in proc usage adding addrExp r28{0} - 32 to local table
in proc usage adding addrExp r28{0} - 28 to local table
in proc usage adding addrExp r28{0} - 24 to local table
in proc usage adding addrExp r28{0} - 32 to local table
in proc usage adding addrExp r28{0} - 28 to local table
in proc usage adding addrExp r28{0} - 20 to local table
in proc usage adding addrExp r28{0} - 24 to local table
in proc usage adding addrExp r28{0} - 32 to local table
in proc usage adding addrExp r28{0} - 28 to local table
in proc usage adding addrExp r28{0} - 24 to local table
in proc usage adding addrExp r28{0} - 32 to local table
in proc usage adding addrExp r28{0} - 28 to local table
in proc usage adding addrExp r28{0} - 24 to local table
in proc usage adding addrExp r28{0} - 20 to local table
in proc usage adding addrExp r28{0} - 32 to local table
in proc usage adding addrExp r28{0} - 28 to local table
in proc usage adding addrExp r28{0} - 24 to local table
in proc usage adding addrExp r28{0} - 32 to local table
in proc usage adding addrExp r28{0} - 28 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffe4 existing type char * but added type int
in proc usage adding addrExp r28{0} - 32 to local table
finding final parameters for usage
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
assgn   83 *32* r24 := m[0x804b7e8]
after removing matching assigns (%pc).
=== about to restart decompilation of version_etc_va because indirect jumps or calls have been analysed

assgn   82 *32* r24 := m[0x804b7e8]
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure version_etc_va ###
in proc version_etc_va adding addrExp r28{0} - 4 to local table
in proc version_etc_va adding addrExp r28{0} - 8 to local table
in proc version_etc_va adding addrExp r28{0} - 12 to local table
in proc version_etc_va adding addrExp r28{0} - 16 to local table
in proc version_etc_va adding addrExp r28{0} - 20 to local table
in proc version_etc_va adding addrExp r28{0} - 24 to local table
in proc version_etc_va adding addrExp r28{0} - 28 to local table
in proc version_etc_va adding addrExp r28{0} - 36 to local table
in proc version_etc_va adding addrExp r28{0} - 44 to local table
in proc version_etc_va adding addrExp r28{0} - 32 to local table
in proc version_etc_va adding addrExp r28{0} - 40 to local table
in proc version_etc_va adding addrExp r28{0} - 48 to local table
in proc version_etc_va adding addrExp r28{0} - 36 to local table
in proc version_etc_va adding addrExp r28{0} - 36 to local table
TYPE ERROR: Existing type at address 0xffffffdc is not structure or array type
in proc version_etc_va adding addrExp r28{0} - 40 to local table
in proc version_etc_va adding addrExp r28{0} - 36 to local table
in proc version_etc_va adding addrExp r28{0} - 40 to local table
in proc version_etc_va adding addrExp r28{0} - 44 to local table
in proc version_etc_va adding addrExp r28{0} - 48 to local table
in proc version_etc_va adding addrExp r28{0} - 40 to local table
in proc version_etc_va adding addrExp r28{0} - 36 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffdc existing type int but added type char **
in proc version_etc_va adding addrExp r28{0} - 44 to local table
in proc version_etc_va adding addrExp r28{0} - 48 to local table
in proc version_etc_va adding addrExp r28{0} - 40 to local table
in proc version_etc_va adding addrExp r28{0} - 44 to local table
in proc version_etc_va adding addrExp r28{0} - 48 to local table
in proc version_etc_va adding addrExp r28{0} - 40 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffd8 existing type char * but added type FILE *
in proc version_etc_va adding addrExp r28{0} - 44 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffd4 existing type FILE * but added type char *
in proc version_etc_va adding addrExp r28{0} - 48 to local table
in proc version_etc_va adding addrExp r28{0} - 40 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffd8 existing type char * but added type FILE *
in proc version_etc_va adding addrExp r28{0} - 44 to local table
in proc version_etc_va adding addrExp r28{0} - 48 to local table
in proc version_etc_va adding addrExp r28{0} - 36 to local table
in proc version_etc_va adding addrExp r28{0} - 40 to local table
in proc version_etc_va adding addrExp r28{0} - 44 to local table
in proc version_etc_va adding addrExp r28{0} - 48 to local table
in proc version_etc_va adding addrExp r28{0} - 36 to local table
in proc version_etc_va adding addrExp r28{0} - 36 to local table
in proc version_etc_va adding addrExp r28{0} - 36 to local table
in proc version_etc_va adding addrExp r28{0} - 40 to local table
in proc version_etc_va adding addrExp r28{0} - 36 to local table
in proc version_etc_va adding addrExp r28{0} - 40 to local table
in proc version_etc_va adding addrExp r28{0} - 36 to local table
in proc version_etc_va adding addrExp r28{0} - 36 to local table
in proc version_etc_va adding addrExp r28{0} - 36 to local table
in proc version_etc_va adding addrExp r28{0} - 36 to local table
in proc version_etc_va adding addrExp r28{0} - 40 to local table
in proc version_etc_va adding addrExp r28{0} - 36 to local table
in proc version_etc_va adding addrExp r28{0} - 48 to local table
in proc version_etc_va adding addrExp r28{0} - 32 to local table
in proc version_etc_va adding addrExp r28{0} - 44 to local table
in proc version_etc_va adding addrExp r28{0} - 36 to local table
in proc version_etc_va adding addrExp r28{0} - 40 to local table
in proc version_etc_va adding addrExp r28{0} - 48 to local table
in proc version_etc_va adding addrExp r28{0} - 44 to local table
in proc version_etc_va adding addrExp r28{0} - 40 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffd8 existing type char * but added type FILE *
in proc version_etc_va adding addrExp r28{0} - 48 to local table
in proc version_etc_va adding addrExp r28{0} - 44 to local table
in proc version_etc_va adding addrExp r28{0} - 40 to local table
in proc version_etc_va adding addrExp r28{0} - 48 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure version_etc_va ###
in proc version_etc_va adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc version_etc_va adding addrExp r28{0} - 8 to local table
in proc version_etc_va adding addrExp r28{0} - 12 to local table
in proc version_etc_va adding addrExp r28{0} - 16 to local table
in proc version_etc_va adding addrExp r28{0} - 20 to local table
in proc version_etc_va adding addrExp r28{0} - 24 to local table
in proc version_etc_va adding addrExp r28{0} - 28 to local table
in proc version_etc_va adding addrExp r28{0} - 36 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffdc existing type int but added type char[] *
in proc version_etc_va adding addrExp r28{0} - 44 to local table
in proc version_etc_va adding addrExp r28{0} - 32 to local table
in proc version_etc_va adding addrExp r28{0} - 40 to local table
in proc version_etc_va adding addrExp r28{0} - 48 to local table
in proc version_etc_va adding addrExp r28{0} - 36 to local table
in proc version_etc_va adding addrExp r28{0} - 36 to local table
TYPE ERROR: Existing type at address 0xffffffdc is not structure or array type
in proc version_etc_va adding addrExp r28{0} - 40 to local table
in proc version_etc_va adding addrExp r28{0} - 36 to local table
in proc version_etc_va adding addrExp r28{0} - 40 to local table
in proc version_etc_va adding addrExp r28{0} - 44 to local table
in proc version_etc_va adding addrExp r28{0} - 48 to local table
in proc version_etc_va adding addrExp r28{0} - 40 to local table
in proc version_etc_va adding addrExp r28{0} - 36 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffdc existing type int but added type char **
in proc version_etc_va adding addrExp r28{0} - 44 to local table
in proc version_etc_va adding addrExp r28{0} - 48 to local table
in proc version_etc_va adding addrExp r28{0} - 40 to local table
in proc version_etc_va adding addrExp r28{0} - 44 to local table
in proc version_etc_va adding addrExp r28{0} - 48 to local table
in proc version_etc_va adding addrExp r28{0} - 40 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffd8 existing type char * but added type FILE *
in proc version_etc_va adding addrExp r28{0} - 44 to local table
in proc version_etc_va adding addrExp r28{0} - 48 to local table
in proc version_etc_va adding addrExp r28{0} - 40 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffd8 existing type char * but added type FILE *
in proc version_etc_va adding addrExp r28{0} - 44 to local table
in proc version_etc_va adding addrExp r28{0} - 48 to local table
in proc version_etc_va adding addrExp r28{0} - 36 to local table
in proc version_etc_va adding addrExp r28{0} - 40 to local table
in proc version_etc_va adding addrExp r28{0} - 44 to local table
in proc version_etc_va adding addrExp r28{0} - 48 to local table
in proc version_etc_va adding addrExp r28{0} - 36 to local table
in proc version_etc_va adding addrExp r28{0} - 36 to local table
in proc version_etc_va adding addrExp r28{0} - 36 to local table
in proc version_etc_va adding addrExp r28{0} - 40 to local table
in proc version_etc_va adding addrExp r28{0} - 36 to local table
in proc version_etc_va adding addrExp r28{0} - 40 to local table
in proc version_etc_va adding addrExp r28{0} - 36 to local table
in proc version_etc_va adding addrExp r28{0} - 36 to local table
in proc version_etc_va adding addrExp r28{0} - 36 to local table
in proc version_etc_va adding addrExp r28{0} - 36 to local table
in proc version_etc_va adding addrExp r28{0} - 40 to local table
in proc version_etc_va adding addrExp r28{0} - 36 to local table
in proc version_etc_va adding addrExp r28{0} - 48 to local table
in proc version_etc_va adding addrExp r28{0} - 32 to local table
in proc version_etc_va adding addrExp r28{0} - 44 to local table
in proc version_etc_va adding addrExp r28{0} - 36 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffdc existing type int but added type char[] *
in proc version_etc_va adding addrExp r28{0} - 40 to local table
in proc version_etc_va adding addrExp r28{0} - 48 to local table
in proc version_etc_va adding addrExp r28{0} - 44 to local table
in proc version_etc_va adding addrExp r28{0} - 40 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffd8 existing type char * but added type FILE *
in proc version_etc_va adding addrExp r28{0} - 48 to local table
in proc version_etc_va adding addrExp r28{0} - 44 to local table
in proc version_etc_va adding addrExp r28{0} - 40 to local table
in proc version_etc_va adding addrExp r28{0} - 48 to local table
finding final parameters for version_etc_va
potential param r28
found new parameter r28
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 20]
found new parameter m[r28{0} + 20]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 16]
found new parameter m[r28{0} + 16]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
finding final parameters for version_etc_va
potential param r28
found new parameter r28
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 20]
found new parameter m[r28{0} + 20]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 16]
found new parameter m[r28{0} + 16]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
in proc version_etc adding addrExp r28{0} - 4 to local table
in proc version_etc adding addrExp r28{0} - 12 to local table
in proc version_etc adding addrExp r28{0} - 16 to local table
in proc version_etc adding addrExp r28{0} - 20 to local table
in proc version_etc adding addrExp r28{0} - 24 to local table
in proc version_etc adding addrExp r28{0} - 28 to local table
in proc version_etc adding addrExp r28{0} - 32 to local table
finding final parameters for version_etc
potential param r28
found new parameter r28
potential param m[r28{0} + 16]
found new parameter m[r28{0} + 16]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 20]
found new parameter m[r28{0} + 20]
assgn   90 *32* r24 := m[0x804b800]
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure main ###
in proc main adding addrExp r28{0} - 4 to local table
in proc main adding addrExp r28{0} - 16 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 60 to local table
in proc main adding addrExp r28{0} - 56 to local table
in proc main adding addrExp r28{0} - 64 to local table
in proc main adding addrExp r28{0} - 60 to local table
in proc main adding addrExp r28{0} - 56 to local table
in proc main adding addrExp r28{0} - 64 to local table
in proc main adding addrExp r28{0} - 60 to local table
in proc main adding addrExp r28{0} - 64 to local table
in proc main adding addrExp r28{0} - 60 to local table
in proc main adding addrExp r28{0} - 64 to local table
in proc main adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 16 to local table
in proc main adding addrExp r28{0} - 56 to local table
TYPE ERROR: Existing type at address 0xffffffc8 is not structure or array type
in proc main adding addrExp r28{0} - 60 to local table
in proc main adding addrExp r28{0} - 64 to local table
in proc main adding addrExp r28 to local table
in proc main adding addrExp r28 to local table
in proc main adding addrExp r28{0} - 60 to local table
in proc main adding addrExp r28{0} - 64 to local table
in proc main adding addrExp r28{0} - 20 to local table
in proc main adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 16 to local table
in proc main adding addrExp r28{0} - 20 to local table
TYPE ERROR: Existing type at address 0xffffffec is not structure or array type
in proc main adding addrExp r28{0} - 56 to local table
TYPE ERROR: Existing type at address 0xffffffc8 is not structure or array type
in proc main adding addrExp r28{0} - 60 to local table
TYPE ERROR: Existing type at address 0xffffffc4 is not structure or array type
in proc main adding addrExp r28{0} - 64 to local table
in proc main adding addrExp r28 to local table
in proc main adding addrExp r28 to local table
in proc main adding addrExp r28{0} - 60 to local table
in proc main adding addrExp r28{0} - 64 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure main ###
could not set type for unknown parameter expression m[r28{0} + 8]
could not set type for unknown parameter expression m[r28{0} + 4]
could not set type for unknown parameter expression m[r28{0} + 12]
in proc main adding addrExp r28 to local table
in proc main adding addrExp r28 to local table
in proc main adding addrExp r28 to local table
in proc main adding addrExp r28 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure version_etc_va ###
in proc version_etc_va adding addrExp r28{0} - 40 to local table
in proc version_etc_va adding addrExp r28{0} - 40 to local table
in proc version_etc_va adding addrExp r28{0} - 40 to local table
in proc version_etc_va adding addrExp r28{0} - 40 to local table
in proc version_etc_va adding addrExp r28{0} - 40 to local table
in proc __i686.get_pc_thunk.bx adding addrExp r28{0} to local table
finding final parameters for atexit
finding final parameters for version_etc
potential param r28
found new parameter r28
potential param m[r28{0} + 16]
found new parameter m[r28{0} + 16]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 20]
found new parameter m[r28{0} + 20]
local ecx has type __size32 that doesn't agree with type of define void of a library, why?
local esp has type __size32 that doesn't agree with type of define void of a library, why?
local edx has type __size32 * that doesn't agree with type of define __size32 of a library, why?
local edx has type FILE * that doesn't agree with type of define void of a library, why?
local esp has type __size32 that doesn't agree with type of define void of a library, why?
local eax has type char * that doesn't agree with type of define __size32 of a library, why?
local eax has type __size32 that doesn't agree with type of define char * of a library, why?
local eax has type char * that doesn't agree with type of define __size32 of a library, why?
local eax has type __size32 that doesn't agree with type of define char * of a library, why?
local eax has type char * that doesn't agree with type of define __size32 of a library, why?
local eax has type __size32 that doesn't agree with type of define char * of a library, why?
local eax has type char * that doesn't agree with type of define __size32 of a library, why?
local eax has type char * that doesn't agree with type of define __size32 of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local eax has type __size32 that doesn't agree with type of define char * of a library, why?
local eax has type char * that doesn't agree with type of define __size32 of a library, why?
local eax has type __size32 that doesn't agree with type of define union { unsigned int x3; __size8 * x4; } of a library, why?
dest is not lib
call:   22 {*32* eax, *v* ecx, *v* r26} := CALL setlocale(
                *i32* local0 := 6
                *c** local1 := ""
              )
              Reaching definitions: r24=0x804a03c,   r27=m[r28{0} + 8]{0},   r28=r28{0} - 64,   r29=r28{0} - 4,
                r30=r30{0},   r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},
                m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r31{0},
                m[r28{0} - 12]=r30{0},   m[r28{0} - 16]=r27{0},   m[r28{0} - 56]=0x804a03c,   m[r28{0} - 60]=6,
                m[r28{0} - 64]=%pc,   tmp1=r28{0} - 44,   tmpb=tmpb{0},
                %flags=SUBFLAGS32( r28{0} - 44, 16, r28{0} - 60 ),   %ZF=(r28{0} - 60) = 0,   %CF=(r28{0} - 44) <u 16
              Live variables:  in proc main
dest is not lib
call:   29 {*32* eax, *v* ecx, *v* r26} := CALL bindtextdomain(
                *c** local2 := "coreutils"
                *c** local1 := "/usr/share/locale"
              )
              Reaching definitions: r24=0x804a053,   r25=r25{22},   r26=r26{22},   r27=m[r28{0} + 8]{0},
                r28=r28{0} - 64,   r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=r31{0},   m[r28{0} - 12]=r30{0},   m[r28{0} - 16]=r27{0},   m[r28{0} - 56]=0x804a053,
                m[r28{0} - 60]=0x804a09d,   m[r28{0} - 64]=%pc,   tmp1=r28{0} - 44,   tmpb=tmpb{0},
                %flags=SUBFLAGS32( r28{0} - 44, 16, r28{0} - 60 ),   %ZF=(r28{0} - 60) = 0,   %CF=(r28{0} - 44) <u 16
              Live variables:  in proc main
dest is not lib
call:   34 {*32* eax, *v* ecx, *v* r26} := CALL textdomain(
                *c** local2 := "coreutils"
              )
              Reaching definitions: r24=r24{29},   r25=r25{29},   r26=r26{29},   r27=m[r28{0} + 8]{0},
                r28=r28{0} - 64,   r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=r31{0},   m[r28{0} - 12]=r30{0},   m[r28{0} - 16]=r27{0},   m[r28{0} - 56]=0x804a053,
                m[r28{0} - 60]=0x804a09d,   m[r28{0} - 64]=%pc,   tmp1=r28{0} - 44,   tmpb=tmpb{0},
                %flags=SUBFLAGS32( r28{0} - 44, 16, r28{0} - 60 ),   %ZF=(r28{0} - 60) = 0,   %CF=(r28{0} - 44) <u 16
              Live variables:  in proc main
dest is not lib
call:   39 {*32* eax, *v* ecx, *32* r26} := CALL atexit(
              )
              Reaching definitions: r24=r24{34},   r25=r25{34},   r26=r26{34},   r27=m[r28{0} + 8]{0},
                r28=r28{0} - 64,   r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=r31{0},   m[r28{0} - 12]=r30{0},   m[r28{0} - 16]=r27{0},   m[r28{0} - 56]=0x804a053,
                m[r28{0} - 60]=0x8048c80,   m[r28{0} - 64]=%pc,   tmp1=r28{0} - 44,   tmpb=tmpb{0},
                %flags=SUBFLAGS32( r28{0} - 44, 16, r28{0} - 60 ),   %ZF=(r28{0} - 60) = 0,   %CF=(r28{0} - 44) <u 16
              Live variables:  in proc main
dest is not lib
call:   53 {*32* eax, *v* ecx, *32* r26} := CALL getenv(
                *c** local2 := "POSIXLY_CORRECT"
              )
              Reaching definitions: r24=r24{39},   r25=r25{39},   r26=r26{39},   r27=m[r28{0} + 8]{0},
                r28=r28{0} - 64,   r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=r31{0},   m[r28{0} - 12]=r30{0},   m[r28{0} - 16]=r27{0},   m[r28{0} - 56]=0x804a053,
                m[r28{0} - 60]=0x804a065,   m[r28{0} - 64]=%pc,   tmp1=tmp1{40},   tmpb=tmpb{0},
                %flags=SUBFLAGS32( m[r28{0} + 4], 2, tmp1{40} ),   %ZF=tmp1{40} = 0,   %CF=m[r28{0} + 4] <u 2
              Live variables: eax in proc main
result:    0 *32* eax := -
dest is not lib
call:  107 CALL usage(
                *i32* local0 := 0
              )
              Reaching definitions: r24=7,   r25=r25{128},   r26=r26{53},   r27=m[r28{0} + 8]{0},   r28=r28{0} - 64,
                r29=r28{0} - 4,   r30=r30{129},   r31=r31{130},   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=r31{0},   m[r28{0} - 12]=r30{0},   m[r28{0} - 16]=r27{0},   m[r28{0} - 20]=r24{58},
                m[r28{0} - 56]=0x804a053,   m[r28{0} - 60]=0,   m[r28{0} - 64]=%pc,   tmp1=r24{53},   tmpb=tmpb{131},
                %flags=%flags{132},   %ZF=%ZF{133},   %CF=%CF{134}
              Live variables:  in proc main
dest is not lib
call:  101 *32* eax := CALL version_etc(
                *FILE** m[r28 + 4] := m[r28 + 4]
                *[c]** m[r28 + 8] := m[r28 + 8]
                *[c]** m[r28 + 12] := m[r28 + 12]
                *[c]** m[r28 + 16] := m[r28 + 16]
                *c** m[r28 + 20] := m[r28 + 20]
              )
              Reaching definitions: 
              Live variables:  in proc main
dest is not lib
call:   47 {*32* eax, *v* ecx, *v* r26} := CALL exit(
                *i32* m[r28 + 4] := m[r28 + 4]
              )
              Reaching definitions: 
              Live variables:  in proc main
dest is not lib
call:   14 *v* r28 := CALL __i686.get_pc_thunk.bx(
              )
              Reaching definitions: r24=0,   r27=r27{0},   r28=r28{0} - 24,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r27{0},   m[r28{0} - 24]=%pc,
                tmp1=r28{0} - 8,   %flags=SUBFLAGS32( r28{0} - 8, 12, r28{0} - 20 ),   %ZF=(r28{0} - 20) = 0,
                %CF=(r28{0} - 8) <u 12
              Live variables: ebx in proc atexit
dest is not lib
call:   32 {*32* r24, *32* r25, *32* edx, *v* r28} := CALL __cxa_atexit(
              )
              Reaching definitions: r24=m[r28{0} + 4]{0},   r26=r26{18},   r27=r27{14} + 0x18a6,   r28=r28{0} - 24,
                r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r27{0},
                m[r28{0} - 12]=r24{43},   m[r28{0} - 16]=0,   m[r28{0} - 20]=m[r28{0} + 4]{0},   m[r28{0} - 24]=%pc,
                tmp1=r26{18},   %flags=LOGICALFLAGS32( 0 ),   %ZF=LOGICALFLAGS32( 0 ),   %CF=LOGICALFLAGS32( 0 )
              Live variables:  in proc atexit
dest is not lib
call:   20 CALL version_etc_va(
                *FILE** local0 := param1
                *[c]** local1 := param2
                *[c]** local2 := param3
                *[c]** local3 := param4
                *c*** local4 := a[param5]
              )
              Reaching definitions: r24=m[r28{0} + 4]{0},   r28=r28{0} - 32,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} + 16]=m[r28{0} + 16]{0},   m[r28{0} + 20]=m[r28{0} + 20]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=r28{0} + 20,   m[r28{0} - 16]=m[r28{0} + 16]{0},   m[r28{0} - 20]=m[r28{0} + 12]{0},
                m[r28{0} - 24]=m[r28{0} + 8]{0},   m[r28{0} - 28]=m[r28{0} + 4]{0},   m[r28{0} - 32]=%pc,
                tmp1=r28{0} - 4,   %flags=SUBFLAGS32( r28{0} - 4, 24, r28{0} - 28 ),   %ZF=(r28{0} - 28) = 0,
                %CF=(r28{0} - 4) <u 24
              Live variables:  in proc version_etc
dest is not lib
call:   15 {*c** eax, *v* r25, *v* edx} := CALL dcgettext(
                *c** local0 := 0
                *c** local1 := "Usage: %s [ignored command line arguments]
  or:  %s OPTION
Exit with a status code indicating success.

These option names may not be abbreviated.

"
                *i32* local2 := 5
              )
              Reaching definitions: r24=0x8049f28,   r26=5,   r28=r28{0} - 32,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 20]=5,   m[r28{0} - 24]=0x8049f28,
                m[r28{0} - 28]=0,   m[r28{0} - 32]=%pc,   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 24, r28{0} - 28 ),   %ZF=(r28{0} - 28) = 0,   %CF=(r28{0} - 4) <u 24
              Live variables: eax in proc usage
result:    0 *c** eax := -
dest is not lib
call:   23 {*32* eax, *v* r25, *v* edx} := CALL printf(
                *c** local0 := eax
              )
              Reaching definitions: r24=r24{15},   r25=r25{15},   r26=program_name,   r28=r28{0} - 32,   r29=r28{0} - 4
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 20]=program_name,
                m[r28{0} - 24]=program_name,   m[r28{0} - 28]=r24{15},   m[r28{0} - 32]=%pc,   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 24, r28{0} - 28 ),   %ZF=(r28{0} - 28) = 0,   %CF=(r28{0} - 4) <u 24
              Live variables:  in proc usage
dest is not lib
call:   32 {*c** eax, *v* r25, *v* edx} := CALL dcgettext(
                *c** local0 := 0
                *c** local1 := "      --help     display this help and exit
"
                *i32* local2 := 5
              )
              Reaching definitions: r24=0x8049fc0,   r25=r25{23},   r26=r26{23},   r28=r28{0} - 32,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 20]=5,   m[r28{0} - 24]=0x8049fc0,
                m[r28{0} - 28]=0,   m[r28{0} - 32]=%pc,   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 24, r28{0} - 28 ),   %ZF=(r28{0} - 28) = 0,   %CF=(r28{0} - 4) <u 24
              Live variables: eax in proc usage
result:    0 *c** eax := -
dest is not lib
call:   39 {*32* eax, *v* r25, *v* edx} := CALL fputs_unlocked(
                *c** local0 := eax
                *FILE** local3 := edx
              )
              Reaching definitions: r24=r24{32},   r25=r25{32},   r26=r26{34},   r28=r28{0} - 32,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 20]=5,   m[r28{0} - 24]=r26{34},
                m[r28{0} - 28]=r24{32},   m[r28{0} - 32]=%pc,   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 24, r28{0} - 28 ),   %ZF=(r28{0} - 28) = 0,   %CF=(r28{0} - 4) <u 24
              Live variables:  in proc usage
dest is not lib
call:   48 {*c** eax, *v* r25, *v* edx} := CALL dcgettext(
                *c** local0 := 0
                *c** local1 := "      --version  output version information and exit
"
                *i32* local2 := 5
              )
              Reaching definitions: r24=0x8049ff0,   r25=r25{39},   r26=r26{39},   r28=r28{0} - 32,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 20]=5,   m[r28{0} - 24]=0x8049ff0,
                m[r28{0} - 28]=0,   m[r28{0} - 32]=%pc,   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 24, r28{0} - 28 ),   %ZF=(r28{0} - 28) = 0,   %CF=(r28{0} - 4) <u 24
              Live variables: eax in proc usage
result:    0 *c** eax := -
dest is not lib
call:   55 {*32* eax, *v* r25, *v* edx} := CALL fputs_unlocked(
                *c** local0 := eax
                *FILE** local3 := edx
              )
              Reaching definitions: r24=r24{48},   r25=r25{48},   r26=r26{50},   r28=r28{0} - 32,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 20]=5,   m[r28{0} - 24]=r26{50},
                m[r28{0} - 28]=r24{48},   m[r28{0} - 32]=%pc,   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 24, r28{0} - 28 ),   %ZF=(r28{0} - 28) = 0,   %CF=(r28{0} - 4) <u 24
              Live variables:  in proc usage
dest is not lib
call:   64 {*c** eax, *v* r25, *v* edx} := CALL dcgettext(
                *c** local0 := 0
                *c** local1 := "
Report bugs to <%s>.
"
                *i32* local2 := 5
              )
              Reaching definitions: r24=5,   r25=0x804a026,   r26=r26{55},   r28=r28{0} - 32,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 20]=5,   m[r28{0} - 24]=0x804a026,
                m[r28{0} - 28]=0,   m[r28{0} - 32]=%pc,   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 24, r28{0} - 28 ),   %ZF=(r28{0} - 28) = 0,   %CF=(r28{0} - 4) <u 24
              Live variables: eax in proc usage
result:    0 *c** eax := -
dest is not lib
call:   71 {*32* eax, *v* r25, *v* edx} := CALL printf(
                *c** local0 := eax
              )
              Reaching definitions: r24=r24{64},   r25=r25{64},   r26=0x804a03d,   r28=r28{0} - 32,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 20]=5,   m[r28{0} - 24]=0x804a03d,
                m[r28{0} - 28]=r24{64},   m[r28{0} - 32]=%pc,   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 24, r28{0} - 28 ),   %ZF=(r28{0} - 28) = 0,   %CF=(r28{0} - 4) <u 24
              Live variables:  in proc usage
dest is not lib
call:   77 {*32* eax, *v* r25, *v* edx} := CALL exit(
                *i32* local4 := param1
              )
              Reaching definitions: r24=m[r28{0} + 4]{0},   r25=r25{71},   r26=r26{71},   r28=r28{0} - 32,
                r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 20]=5,
                m[r28{0} - 24]=0x804a03d,   m[r28{0} - 28]=m[r28{0} + 4]{0},   m[r28{0} - 32]=%pc,   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 24, r28{0} - 28 ),   %ZF=(r28{0} - 28) = 0,   %CF=(r28{0} - 4) <u 24
              Live variables:  in proc usage
dest is not lib
call:  174 {*32* eax, *v* r25, *v* r26} := CALL fprintf(
                *FILE** local0 := param1
                *c** local1 := "%s %s
"
                *[c]** local2 := param3
                *[c]** local3 := param4
              )
              Reaching definitions: r24=0x804a617,   r25=m[r28{0} + 8]{0},   r26=m[r28{0} + 20]{0} + 4,   r27=0,
                r28=r28{0} - 48,   r29=r28{0} - 4,   r30=m[r28{0} + 4]{0},   r31=m[r28{0} + 20]{0},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} + 16]=m[r28{0} + 16]{0},   m[r28{0} + 20]=m[r28{0} + 20]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=r31{0},   m[r28{0} - 12]=r30{0},   m[r28{0} - 16]=r27{0},
                m[r28{0} - 20]=m[r28{0} + 12]{0},   m[r28{0} - 24]=m[r28{0} + 16]{0},
                m[r28{0} - 32]=m[r28{0} + 16]{0},   m[r28{0} - 36]=m[r28{0} + 12]{0},   m[r28{0} - 40]=0x804a617,
                m[r28{0} - 44]=m[r28{0} + 4]{0},   m[r28{0} - 48]=%pc,   tmp1=m[r28{0} + 8]{0},
                %flags=LOGICALFLAGS32( m[r28{0} + 8]{0} ),   %ZF=LOGICALFLAGS32( m[r28{0} + 8]{0} ),
                %CF=LOGICALFLAGS32( m[r28{0} + 8]{0} )
              Live variables:  in proc version_etc_va
dest is not lib
call:   53 {*32* eax, *v* r25, *v* r26} := CALL fprintf(
                *FILE** local0 := param1
                *c** local1 := "%s (%s) %s
"
                *[c]** local2 := param2
                *[c]** local3 := param3
                *[c]** local4 := param4
              )
              Reaching definitions: r24=0x804a5c8,   r25=m[r28{0} + 8]{0},   r26=m[r28{0} + 20]{0} + 4,   r27=0,
                r28=r28{0} - 48,   r29=r28{0} - 4,   r30=m[r28{0} + 4]{0},   r31=m[r28{0} + 20]{0},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} + 16]=m[r28{0} + 16]{0},   m[r28{0} + 20]=m[r28{0} + 20]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=r31{0},   m[r28{0} - 12]=r30{0},   m[r28{0} - 16]=r27{0},
                m[r28{0} - 20]=m[r28{0} + 12]{0},   m[r28{0} - 24]=m[r28{0} + 16]{0},
                m[r28{0} - 28]=m[r28{0} + 16]{0},   m[r28{0} - 32]=m[r28{0} + 12]{0},   m[r28{0} - 36]=m[r28{0} + 8]{0}
                m[r28{0} - 40]=0x804a5c8,   m[r28{0} - 44]=m[r28{0} + 4]{0},   m[r28{0} - 48]=%pc,
                tmp1=m[r28{0} + 8]{0},   %flags=LOGICALFLAGS32( m[r28{0} + 8]{0} ),
                %ZF=LOGICALFLAGS32( m[r28{0} + 8]{0} ),   %CF=LOGICALFLAGS32( m[r28{0} + 8]{0} )
              Live variables:  in proc version_etc_va
dest is not lib
call:  162 {*32* eax, *v* r25, *v* r26} := CALL abort(
              )
              Reaching definitions: r24=r24{23},   r25=m[r28{0} + 8]{0},   r26=m[r28{0} + 20]{0} + 4,   r27=0,
                r28=r28{0} - 48,   r29=r28{0} - 4,   r30=m[r28{0} + 4]{0},   r31=m[r28{0} + 20]{0},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} + 16]=m[r28{0} + 16]{0},   m[r28{0} + 20]=m[r28{0} + 20]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=r31{0},   m[r28{0} - 12]=r30{0},   m[r28{0} - 16]=r27{0},
                m[r28{0} - 20]=m[r28{0} + 12]{0},   m[r28{0} - 24]=m[r28{0} + 16]{0},   m[r28{0} - 48]=%pc,   tmp1=-9,
                %flags=SUBFLAGS32( 0, 9, -9 ),   %ZF=-9 = 0,   %CF=0 <u 9
              Live variables:  in proc version_etc_va
dest is not lib
call:   65 {*32* eax, *v* r25, *v* r26} := CALL dcgettext(
                *c** local5 := 0
                *c** local1 := local1
                *i32* local6 := 5
              )
              Reaching definitions: r24=r24{194},   r25=r25{195},   r26=r26{196},   r27=r27{197},   r28=r28{0} - 48,
                r29=r28{0} - 4,   r30=m[r28{0} + 4]{0},   r31=m[r28{0} + 20]{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} + 16]=m[r28{0} + 16]{0},
                m[r28{0} + 20]=m[r28{0} + 20]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r31{0},
                m[r28{0} - 12]=r30{0},   m[r28{0} - 16]=r27{0},   m[r28{0} - 20]=m[r28{0} + 12]{0},
                m[r28{0} - 24]=m[r28{0} + 16]{0},   m[r28{0} - 36]=5,   m[r28{0} - 40]=m[r28{0} - 40]{217},
                m[r28{0} - 44]=0,   m[r28{0} - 48]=%pc,   tmp1=-9,   %flags=SUBFLAGS32( 0, 9, -9 ),   %ZF=-9 = 0,
                %CF=0 <u 9
              Live variables:  in proc version_etc_va
dest is not lib
call:   72 {*32* eax, *32* r25, *32* r26} := CALL vfprintf(
              )
              Reaching definitions: r24=r24{65},   r25=r25{65},   r26=r26{65},   r27=r27{197},   r28=r28{0} - 48,
                r29=r28{0} - 4,   r30=m[r28{0} + 4]{0},   r31=m[r28{0} + 20]{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} + 16]=m[r28{0} + 16]{0},
                m[r28{0} + 20]=m[r28{0} + 20]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r31{0},
                m[r28{0} - 12]=r30{0},   m[r28{0} - 16]=r27{0},   m[r28{0} - 20]=m[r28{0} + 12]{0},
                m[r28{0} - 24]=m[r28{0} + 16]{0},   m[r28{0} - 36]=m[r28{0} + 20]{0},   m[r28{0} - 40]=r24{65},
                m[r28{0} - 44]=m[r28{0} + 4]{0},   m[r28{0} - 48]=%pc,   tmp1=-9,   %flags=SUBFLAGS32( 0, 9, -9 ),
                %ZF=0,   %CF=1
              Live variables:  in proc version_etc_va
dest is not lib
call:  190 {*union* eax, *32* r25, *32* r26} := CALL __overflow(
              )
              Reaching definitions: r24=r24{73},   r25=r25{72},   r26=r26{72},   r27=10,   r28=r28{0} - 48,
                r29=r28{0} - 4,   r30=m[r28{0} + 4]{0},   r31=m[r28{0} + 20]{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} + 16]=m[r28{0} + 16]{0},
                m[r28{0} + 20]=m[r28{0} + 20]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r31{0},
                m[r28{0} - 12]=r30{0},   m[r28{0} - 16]=r27{0},   m[r28{0} - 20]=m[r28{0} + 12]{0},
                m[r28{0} - 24]=m[r28{0} + 16]{0},   m[r28{0} - 36]=m[r28{0} + 20]{0},   m[r28{0} - 40]=10,
                m[r28{0} - 44]=m[r28{0} + 4]{0},   m[r28{0} - 48]=%pc,   tmp1=tmp1{74},
                %flags=SUBFLAGS32( r24{73}, m[m[r28{0} + 4]{0} + 24], tmp1{74} ),   %ZF=tmp1{74} = 0,
                %CF=r24{73} <u m[m[r28{0} + 4]{0} + 24]
              Live variables:  in proc version_etc_va
dest is not lib
call:   87 {*32* eax, *32* r25, *32* r26} := CALL fputs_unlocked(
                *c** local5 := eax
                *FILE** local7 := param1
              )
              Reaching definitions: r24=r24{82},   r25=r25{199},   r26=r26{200},   r27=r27{201},   r28=r28{0} - 48,
                r29=r28{0} - 4,   r30=m[r28{0} + 4]{0},   r31=m[r28{0} + 20]{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} + 16]=m[r28{0} + 16]{0},
                m[r28{0} + 20]=m[r28{0} + 20]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r31{0},
                m[r28{0} - 12]=r30{0},   m[r28{0} - 16]=r27{0},   m[r28{0} - 20]=m[r28{0} + 12]{0},
                m[r28{0} - 24]=m[r28{0} + 16]{0},   m[r28{0} - 36]=m[r28{0} + 20]{0},   m[r28{0} - 40]=m[r28{0} + 4]{0}
                m[r28{0} - 44]=r24{82},   m[r28{0} - 48]=%pc,   tmp1=tmp1{203},   %flags=%flags{204},   %ZF=%ZF{205},
                %CF=%CF{206}
              Live variables:  in proc version_etc_va
dest is not lib
call:  182 {*union* eax, *32* r25, *32* r26} := CALL __overflow(
              )
              Reaching definitions: r24=r24{88},   r25=10,   r26=r26{87},   r27=r27{201},   r28=r28{0} - 48,
                r29=r28{0} - 4,   r30=m[r28{0} + 4]{0},   r31=m[r28{0} + 20]{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} + 16]=m[r28{0} + 16]{0},
                m[r28{0} + 20]=m[r28{0} + 20]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r31{0},
                m[r28{0} - 12]=r30{0},   m[r28{0} - 16]=r27{0},   m[r28{0} - 20]=m[r28{0} + 12]{0},
                m[r28{0} - 24]=m[r28{0} + 16]{0},   m[r28{0} - 36]=m[r28{0} + 20]{0},   m[r28{0} - 40]=10,
                m[r28{0} - 44]=m[r28{0} + 4]{0},   m[r28{0} - 48]=%pc,   tmp1=tmp1{89},
                %flags=SUBFLAGS32( r24{88}, m[m[r28{0} + 4]{0} + 24], tmp1{89} ),   %ZF=tmp1{89} = 0,
                %CF=r24{88} <u m[m[r28{0} + 4]{0} + 24]
              Live variables:  in proc version_etc_va
dest is not lib
call:  105 {*c** eax, *v* r25, *v* r26} := CALL dcgettext(
                *c** local5 := 0
                *c** local1 := "This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
"
                *i32* local6 := 5
              )
              Reaching definitions: r24=0x804a434,   r25=r25{208},   r26=5,   r27=r27{201},   r28=r28{0} - 48,
                r29=r28{0} - 4,   r30=m[r28{0} + 4]{0},   r31=m[r28{0} + 20]{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 4]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} + 16]=m[r28{0} + 16]{0},
                m[r28{0} + 20]=m[r28{0} + 20]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r31{0},
                m[r28{0} - 12]=r30{0},   m[r28{0} - 16]=r27{0},   m[r28{0} - 20]=m[r28{0} + 12]{0},
                m[r28{0} - 24]=m[r28{0} + 16]{0},   m[r28{0} - 36]=5,   m[r28{0} - 40]=0x804a434,   m[r28{0} - 44]=0,
                m[r28{0} - 48]=%pc,   tmp1=tmp1{211},   %flags=%flags{212},   %ZF=%ZF{213},   %CF=%CF{214}
              Live variables: eax in proc version_etc_va
result:    0 *c** eax := -
dest is not lib
call:  118 {*32* eax, *v* r25, *v* r26} := CALL fputs_unlocked(
                *c** local8 := eax
                *FILE** local9 := param1
              )
              Reaching definitions: r24=r24{105},   r25=r25{105},   r26=r26{105},   r27=r27{0},   r28=r28{0},
                r29=r29{0},   r30=r30{0},   r31=r31{0},   m[r28{0} + 4]=r24{105},   m[r28{0} + 8]=m[r28{0} + 4]{0},
                m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} + 16]=m[r28{0} + 16]{0},
                m[r28{0} + 20]=m[r28{0} + 20]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r31{0},
                m[r28{0} - 12]=r30{0},   m[r28{0} - 16]=r27{0},   m[r28{0} - 20]=m[r28{0} + 12]{0},
                m[r28{0} - 24]=m[r28{0} + 16]{0},   m[r28{0} - 36]=5,   m[r28{0} - 40]=0x804a434,   m[r28{0} - 44]=0,
                m[r28{0} - 48]=%pc,   tmp1=r28{0} - 44,   %flags=ADDFLAGS32( r28{0} - 44, 28, r28{0} - 16 ),
                %ZF=ADDFLAGS32( r28{0} - 44, 28, r28{0} - 16 ),   %CF=ADDFLAGS32( r28{0} - 44, 28, r28{0} - 16 )
              Live variables:  in proc version_etc_va
