Unknown library function InterlockedCompareExchange
Unknown library function _amsg_exit
Unknown library function _initterm_e
Unknown library function _initterm
Unknown library function _cexit
Unknown library function _XcptFilter
Unknown library function GetSystemTimeAsFileTime
Unknown library function GetCurrentProcessId
Unknown library function GetCurrentThreadId
Unknown library function GetTickCount
Unknown library function QueryPerformanceCounter
Unknown library function _stat64i32
assgn    8 *32* r24 := m[0x403000]
assgn   35 *32* %pc := m[0x402030]
is readonly
assgn   42 *32* %pc := m[0x402000]
is readonly
assgn   48 *32* %pc := m[0x402004]
is readonly
assgn   54 *32* %pc := m[0x402008]
is readonly
assgn   63 *32* %pc := m[0x40200c]
is readonly
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc1 ###
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 20 to local table
in proc proc1 adding addrExp r28{0} - 32 to local table
in proc proc1 adding addrExp r28{0} - 36 to local table
in proc proc1 adding addrExp r28{0} - 40 to local table
in proc proc1 adding addrExp r28{0} - 44 to local table
in proc proc1 adding addrExp r28{0} - 4 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 8 to local table
in proc proc1 adding addrExp r28{0} - 24 to local table
in proc proc1 adding addrExp r28{0} - 28 to local table
in proc proc1 adding addrExp r28{0} - 32 to local table
in proc proc1 adding addrExp r28{0} - 36 to local table
in proc proc1 adding addrExp r28{0} - 40 to local table
in proc proc1 adding addrExp r28{0} - 40 to local table
in proc proc1 adding addrExp r28{0} - 40 to local table
in proc proc1 adding addrExp r28{0} - 40 to local table
in proc proc1 adding addrExp r28{0} - 40 to local table
in proc proc1 adding addrExp r28{0} - 44 to local table
in proc proc1 adding addrExp r28{0} - 32 to local table
in proc proc1 adding addrExp r28{0} - 36 to local table
in proc proc1 adding addrExp r28{0} - 40 to local table
in proc proc1 adding addrExp r28{0} - 44 to local table
finding final parameters for proc1
potential param r30
found new parameter r30
potential param m[r28{0} - 16]
found new parameter m[r28{0} - 16]
potential param m[r28{0} - 20]
found new parameter m[r28{0} - 20]
potential param r25
found new parameter r25
potential param r26
found new parameter r26
assgn    3 *32* m[r28 - 4] := m[0]
assgn   17 *32* r24 := m[0x403000]
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc2 ###
in proc proc2 adding addrExp r28{0} to local table
in proc proc2 adding addrExp r28{0} - 4 to local table
in proc proc2 adding addrExp r28{0} - 8 to local table
in proc proc2 adding addrExp r28{0} - 16 to local table
in proc proc2 adding addrExp r28{0} to local table
finding final parameters for proc2
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param r27
found new parameter r27
potential param r30
found new parameter r30
potential param r31
found new parameter r31
potential param m[r28{0}]
found new parameter m[r28{0}]
after removing matching assigns (%pc).
in proc proc8 adding addrExp r28{0} to local table
finding final parameters for proc8
potential param r29
found new parameter r29
potential param r28
found new parameter r28
potential param m[r28{0}]
found new parameter m[r28{0}]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 16]
found new parameter m[r28{0} + 16]
in proc proc13 adding addrExp r28{0} - 4 to local table
finding final parameters for proc13
potential param r25
found new parameter r25
potential param r31
found new parameter r31
potential param r24
found new parameter r24
potential param r26
found new parameter r26
potential param r27
found new parameter r27
potential param r30
found new parameter r30
assgn    4 *32* r24 := m[0x403000]
assgn   17 *32* r27 := m[0x4020b8]
is readonly
assgn   81 *32* r26 := m[0x402114]
is readonly
assgn  207 *32* %pc := m[0x4020ac]
is readonly
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
WARNING: size 0x20 meet with /*signed?*/char; allowing temporarily
WARNING: size 0x20 meet with /*signed?*/char; allowing temporarily
WARNING: size 0x20 meet with /*signed?*/char; allowing temporarily
integer size 0x8 meet with SizeType size 0x20!
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc14 ###
in proc proc14 adding addrExp r28{0} - 4 to local table
in proc proc14 adding addrExp r28{0} - 92 to local table
in proc proc14 adding addrExp r28{0} - 96 to local table
in proc proc14 adding addrExp r28{0} - 100 to local table
in proc proc14 adding addrExp r28{0} - 104 to local table
in proc proc14 adding addrExp r28{0} - 108 to local table
in proc proc14 adding addrExp r28{0} - 112 to local table
in proc proc14 adding addrExp r28{0} - 116 to local table
in proc proc14 adding addrExp r28{0} - 88 to local table
in proc proc14 adding addrExp r28{0} - 120 to local table
in proc proc14 adding addrExp r28{0} - 4 to local table
in proc proc14 adding addrExp r28{0} - 88 to local table
TYPE ERROR: Existing type at address 0xffffffa8 is not structure or array type
in proc proc14 adding addrExp r28{0} - 92 to local table
TYPE ERROR: Existing type at address 0xffffffa4 is not structure or array type
in proc proc14 adding addrExp r28{0} - 96 to local table
TYPE ERROR: Existing type at address 0xffffffa0 is not structure or array type
in proc proc14 adding addrExp r28{0} - 100 to local table
TYPE ERROR: Existing type at address 0xffffff9c is not structure or array type
in proc proc14 adding addrExp r28{0} - 104 to local table
TYPE ERROR: Existing type at address 0xffffff98 is not structure or array type
in proc proc14 adding addrExp r28{0} - 108 to local table
TYPE ERROR: Existing type at address 0xffffff94 is not structure or array type
in proc proc14 adding addrExp r28{0} - 112 to local table
TYPE ERROR: Existing type at address 0xffffff90 is not structure or array type
in proc proc14 adding addrExp r28{0} - 116 to local table
TYPE ERROR: Existing type at address 0xffffff8c is not structure or array type
in proc proc14 adding addrExp r28{0} - 120 to local table
TYPE ERROR: Existing type at address 0xffffff88 is not structure or array type
in proc proc14 adding addrExp r28{0} - 4 to local table
in proc proc14 adding addrExp r28{0} - 88 to local table
TYPE ERROR: Existing type at address 0xffffffa8 is not structure or array type
in proc proc14 adding addrExp r28{0} - 92 to local table
TYPE ERROR: Existing type at address 0xffffffa4 is not structure or array type
in proc proc14 adding addrExp r28{0} - 96 to local table
TYPE ERROR: Existing type at address 0xffffffa0 is not structure or array type
in proc proc14 adding addrExp r28{0} - 100 to local table
TYPE ERROR: Existing type at address 0xffffff9c is not structure or array type
in proc proc14 adding addrExp r28{0} - 104 to local table
TYPE ERROR: Existing type at address 0xffffff98 is not structure or array type
in proc proc14 adding addrExp r28{0} - 108 to local table
TYPE ERROR: Existing type at address 0xffffff94 is not structure or array type
in proc proc14 adding addrExp r28{0} - 112 to local table
TYPE ERROR: Existing type at address 0xffffff90 is not structure or array type
in proc proc14 adding addrExp r28{0} - 116 to local table
TYPE ERROR: Existing type at address 0xffffff8c is not structure or array type
in proc proc14 adding addrExp r28{0} - 120 to local table
TYPE ERROR: Existing type at address 0xffffff88 is not structure or array type
in proc proc14 adding addrExp r28{0} - 4 to local table
in proc proc14 adding addrExp r28{0} - 88 to local table
TYPE ERROR: Existing type at address 0xffffffa8 is not structure or array type
in proc proc14 adding addrExp r28{0} - 92 to local table
TYPE ERROR: Existing type at address 0xffffffa4 is not structure or array type
in proc proc14 adding addrExp r28{0} - 96 to local table
TYPE ERROR: Existing type at address 0xffffffa0 is not structure or array type
in proc proc14 adding addrExp r28{0} - 100 to local table
TYPE ERROR: Existing type at address 0xffffff9c is not structure or array type
in proc proc14 adding addrExp r28{0} - 104 to local table
TYPE ERROR: Existing type at address 0xffffff98 is not structure or array type
in proc proc14 adding addrExp r28{0} - 108 to local table
TYPE ERROR: Existing type at address 0xffffff94 is not structure or array type
in proc proc14 adding addrExp r28{0} - 112 to local table
TYPE ERROR: Existing type at address 0xffffff90 is not structure or array type
in proc proc14 adding addrExp r28{0} - 116 to local table
TYPE ERROR: Existing type at address 0xffffff8c is not structure or array type
in proc proc14 adding addrExp r28{0} - 120 to local table
TYPE ERROR: Existing type at address 0xffffff88 is not structure or array type
finding final parameters for proc14
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
assgn    4 *32* r24 := m[0x403000]
assgn   24 *32* %pc := m[0x40209c]
is readonly
assgn   36 *32* %pc := m[0x4020b0]
is readonly
assgn   69 *32* %pc := m[0x4020a8]
is readonly
assgn   83 *32* r27 := m[0x4020a4]
is readonly
assgn  128 *32* %pc := m[0x4020a0]
is readonly
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc10 ###
in proc proc10 adding addrExp r28{0} - 56 to local table
in proc proc10 adding addrExp r28{0} - 8 to local table
in proc proc10 adding addrExp r28{0} - 80 to local table
in proc proc10 adding addrExp r28{0} - 84 to local table
in proc proc10 adding addrExp r28{0} - 88 to local table
in proc proc10 adding addrExp r28{0} - 92 to local table
in proc proc10 adding addrExp r28{0} - 96 to local table
in proc proc10 adding addrExp r28{0} - 100 to local table
in proc proc10 adding addrExp r28{0} - 104 to local table
in proc proc10 adding addrExp r28{0} - 96 to local table
in proc proc10 adding addrExp r28{0} - 100 to local table
in proc proc10 adding addrExp r28{0} - 104 to local table
in proc proc10 adding addrExp r28{0} - 96 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffa0 existing type /*signed?*/int but added type char *
in proc proc10 adding addrExp r28{0} - 100 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffff9c existing type char * but added type unsigned int
in proc proc10 adding addrExp r28{0} - 80 to local table
in proc proc10 adding addrExp r28{0} - 96 to local table
in proc proc10 adding addrExp r28{0} - 100 to local table
in proc proc10 adding addrExp r28{0} - 104 to local table
in proc proc10 adding addrExp r28{0} - 8 to local table
in proc proc10 adding addrExp r28{0} - 80 to local table
in proc proc10 adding addrExp r28{0} - 84 to local table
in proc proc10 adding addrExp r28{0} - 88 to local table
in proc proc10 adding addrExp r28{0} - 92 to local table
in proc proc10 adding addrExp r28{0} - 96 to local table
TYPE ERROR: Existing type at address 0xffffffa0 is not structure or array type
in proc proc10 adding addrExp r28{0} - 100 to local table
in proc proc10 adding addrExp r28{0} - 104 to local table
in proc proc10 adding addrExp r28 - 4 to local table
in proc proc10 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc10 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc10 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc10 adding addrExp r28 to local table
in proc proc10 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc10 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc10 adding addrExp r28 to local table
in proc proc10 adding addrExp r28{0} - 8 to local table
in proc proc10 adding addrExp r28{0} - 80 to local table
in proc proc10 adding addrExp r28{0} - 84 to local table
in proc proc10 adding addrExp r28{0} - 88 to local table
in proc proc10 adding addrExp r28{0} - 92 to local table
in proc proc10 adding addrExp r28{0} - 96 to local table
TYPE ERROR: Existing type at address 0xffffffa0 is not structure or array type
in proc proc10 adding addrExp r28{0} - 100 to local table
in proc proc10 adding addrExp r28{0} - 104 to local table
in proc proc10 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc10 adding addrExp r28 to local table
in proc proc10 adding addrExp r28 to local table
finding final parameters for proc10
potential param r28
found new parameter r28
potential param r27
found new parameter r27
potential param r29
found new parameter r29
potential param r30
found new parameter r30
potential param r31
found new parameter r31
potential param r25
found new parameter r25
potential param m[r28{0} - 56]
found new parameter m[r28{0} - 56]
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc6 ###
in proc proc6 adding addrExp r28{0} - 4 to local table
finding final parameters for proc6
potential param r28
found new parameter r28
potential param r25
found new parameter r25
potential param r27
found new parameter r27
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r30
found new parameter r30
potential param r31
found new parameter r31
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc11 ###
in proc proc11 adding addrExp r28{0} - 4 to local table
finding final parameters for proc11
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r10
found new parameter r10
potential param r26
found new parameter r26
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc12 ###
in proc proc12 adding addrExp r28{0} - 4 to local table
in proc proc12 adding addrExp r28{0} - 8 to local table
in proc proc12 adding addrExp r28{0} - 12 to local table
in proc proc12 adding addrExp r28{0} - 16 to local table
finding final parameters for proc12
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r27
found new parameter r27
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
assgn   11 *32* r24 := m[0]
assgn   23 *32* r24 := m[0x403000]
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc5 ###
in proc proc5 adding addrExp r28{0} - 56 to local table
in proc proc5 adding addrExp r28{0} - 4 to local table
in proc proc5 adding addrExp r28{0} - 8 to local table
in proc proc5 adding addrExp r28{0} - 12 to local table
in proc proc5 adding addrExp r28{0} - 16 to local table
in proc proc5 adding addrExp r28{0} - 20 to local table
in proc proc5 adding addrExp r28{0} - 32 to local table
in proc proc5 adding addrExp r28{0} - 36 to local table
in proc proc5 adding addrExp r28{0} - 40 to local table
in proc proc5 adding addrExp r28{0} - 12 to local table
in proc proc5 adding addrExp r28{0} - 44 to local table
in proc proc5 adding addrExp r28{0} - 28 to local table
in proc proc5 adding addrExp r28{0} - 8 to local table
in proc proc5 adding addrExp r28{0} - 48 to local table
in proc proc5 adding addrExp r28{0} - 52 to local table
in proc proc5 adding addrExp r28{0} - 48 to local table
in proc proc5 adding addrExp r28{0} - 52 to local table
in proc proc5 adding addrExp r28{0} - 56 to local table
in proc proc5 adding addrExp r28{0} - 8 to local table
in proc proc5 adding addrExp r28{0} - 8 to local table
TYPE ERROR: Existing type at address 0xfffffff8 is not structure or array type
in proc proc5 adding addrExp r28{0} - 48 to local table
in proc proc5 adding addrExp r28{0} - 52 to local table
in proc proc5 adding addrExp r28{0} - 56 to local table
in proc proc5 adding addrExp r28{0} - 48 to local table
in proc proc5 adding addrExp r28{0} - 52 to local table
in proc proc5 adding addrExp r28{0} - 56 to local table
in proc proc5 adding addrExp r28{0} - 8 to local table
finding final parameters for proc5
potential param r28
found new parameter r28
potential param r27
found new parameter r27
potential param r10
found new parameter r10
potential param r26
found new parameter r26
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
assgn   12 *32* r24 := m[24]
assgn   24 *32* %pc := m[0x402024]
is readonly
assgn   43 *32* %pc := m[0x402028]
is readonly
assgn   51 *32* r24 := m[0x403370]
assgn   64 *32* r24 := m[0x403370]
assgn   88 *32* r24 := m[0x403370]
assgn  114 *32* %pc := m[0x40202c]
is readonly
assgn  138 *32* %pc := m[0x403380]
assgn  140 *32* r24 := m[0x40301c]
assgn  141 *32* r25 := m[0x40205c]
is readonly
assgn  143 *32* m[r28 - 4] := m[0x40301c]
assgn  145 *32* m[r28 - 4] := m[0x403020]
assgn  147 *32* m[r28 - 4] := m[0x403018]
assgn  164 *32* %pc := m[0x402084]
is readonly
assgn  172 *32* %pc := m[0x402090]
is readonly
assgn  175 *32* r24 := m[0x403030]
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
in proc _start adding addrExp r28{0} - 4 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 20 to local table
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type unsigned int does not resolve to compound or array
finding final parameters for _start
finding final parameters for __imp__XcptFilter
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc1 ###
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 20 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc2 ###
in proc proc2 adding addrExp r28{0} to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc5 ###
in proc proc5 adding addrExp r28{0} - 48 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc6 ###
in proc proc8 adding addrExp r28{0} to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 20 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc10 ###
in proc proc10 adding addrExp r28{0} - 56 to local table
in proc proc10 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc10 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc10 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc10 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc10 adding addrExp r28 to local table
in proc proc10 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc10 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc10 adding addrExp r28 to local table
in proc proc10 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc10 adding addrExp r28 to local table
in proc proc10 adding addrExp r28 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc11 ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc12 ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc14 ###
finding final parameters for proc1
potential param r30
found new parameter r30
potential param m[r28{0} - 16]
found new parameter m[r28{0} - 16]
potential param m[r28{0} - 20]
found new parameter m[r28{0} - 20]
finding final parameters for _start
finding final parameters for proc2
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param r27
found new parameter r27
potential param r30
found new parameter r30
potential param r31
found new parameter r31
potential param m[r28{0}]
found new parameter m[r28{0}]
finding final parameters for _start
finding final parameters for proc5
potential param r28
found new parameter r28
potential param r27
found new parameter r27
potential param r10
found new parameter r10
potential param r26
found new parameter r26
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for _start
finding final parameters for proc6
potential param r28
found new parameter r28
potential param r25
found new parameter r25
potential param r27
found new parameter r27
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r30
found new parameter r30
potential param r31
found new parameter r31
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
finding final parameters for _start
finding final parameters for __imp__XcptFilter
finding final parameters for _start
finding final parameters for proc8
potential param r29
found new parameter r29
potential param r28
found new parameter r28
potential param m[r28{0}]
found new parameter m[r28{0}]
finding final parameters for _start
finding final parameters for proc11
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r10
found new parameter r10
potential param r26
found new parameter r26
finding final parameters for proc5
potential param r28
found new parameter r28
potential param r27
found new parameter r27
potential param r10
found new parameter r10
potential param r26
found new parameter r26
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for proc12
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r27
found new parameter r27
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
finding final parameters for proc5
potential param r28
found new parameter r28
potential param r27
found new parameter r27
potential param r10
found new parameter r10
potential param r26
found new parameter r26
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for proc14
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
finding final parameters for proc10
potential param r28
found new parameter r28
potential param r27
found new parameter r27
potential param r29
found new parameter r29
potential param r30
found new parameter r30
potential param r31
found new parameter r31
potential param r25
found new parameter r25
potential param m[r28{0} - 56]
found new parameter m[r28{0} - 56]
local eax has type /*signed?*/int that doesn't agree with type of define __size32 of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local eax has type __size32 that doesn't agree with type of define /*signed?*/int of a library, why?
local eax has type /*signed?*/int that doesn't agree with type of define __size32 of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local edx has type /*signed?*/int that doesn't agree with type of define __size32 of a library, why?
local ecx has type __size32 that doesn't agree with type of define void of a library, why?
local edx has type __size32 that doesn't agree with type of define /*signed?*/int of a library, why?
local ecx has type void that doesn't agree with type of define __size32 of a library, why?
local ecx has type __size32 that doesn't agree with type of define void of a library, why?
local edx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local ecx has type void that doesn't agree with type of define __size32 of a library, why?
local edx has type void that doesn't agree with type of define /*signed?*/int of a library, why?
local ecx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local esp has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local eax has type __size32 that doesn't agree with type of define unsigned int of a library, why?
local ecx has type __size32 that doesn't agree with type of define void * of a library, why?
local esp has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local eax has type unsigned int that doesn't agree with type of define __size32 of a library, why?
local ecx has type void * that doesn't agree with type of define void of a library, why?
local edx has type /*signed?*/int that doesn't agree with type of define __size32 of a library, why?
dest is not lib
call:   36 {*32* eax, *v* r25, *v* r26, *v* esp} := CALL GetSystemTimeAsFileTime(
              )
              Reaching definitions: r24=r28{0} - 12,   r25=r25{0},   r26=r26{0},   r27=0xffff0000,   r28=r28{0} - 40,
                r29=r28{0} - 4,   r30=r30{0},   r31=0xbb40e64e,   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=0,
                m[r28{0} - 12]=0,   m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 20]=m[r28{0} - 20]{0},
                m[r28{0} - 24]=r27{0},   m[r28{0} - 28]=r31{0},   m[r28{0} - 32]=r30{0},   m[r28{0} - 36]=r28{0} - 12,
                m[r28{0} - 40]=%pc,   m[r28{0} - 44]=m[r28{0} - 44]{0},   tmp1=tmp1{99},   %flags=%flags{100},
                %ZF=%ZF{101},   %CF=%CF{102}
              Live variables:  in proc proc1
dest is not lib
call:   43 {*j32* eax_1, *v* r25, *v* r26, *v* esp} := CALL GetCurrentProcessId(
              )
              Reaching definitions: r24=r24{36},   r25=r25{36},   r26=r26{36},   r27=0xffff0000,   r28=r28{0} - 40,
                r29=r28{0} - 4,   r30=0,   r31=0xbb40e64e,   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=0,
                m[r28{0} - 12]=0,   m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 20]=m[r28{0} - 20]{0},
                m[r28{0} - 24]=r27{0},   m[r28{0} - 28]=r31{0},   m[r28{0} - 32]=r30{0},   m[r28{0} - 36]=r28{0} - 12,
                m[r28{0} - 40]=%pc,   m[r28{0} - 44]=m[r28{0} - 44]{0},   tmp1=tmp1{99},   %flags=LOGICALFLAGS32( 0 ),
                %ZF=LOGICALFLAGS32( 0 ),   %CF=LOGICALFLAGS32( 0 )
              Live variables: eax_1 in proc proc1
result:    0 *j32* eax_1 := -
dest is not lib
call:   49 {*j32* eax, *v* r25, *v* r26, *v* esp} := CALL GetCurrentThreadId(
              )
              Reaching definitions: r24=r24{43},   r25=r25{43},   r26=r26{43},   r27=0xffff0000,   r28=r28{0} - 40,
                r29=r28{0} - 4,   r30=0 ^ r24{43},   r31=0xbb40e64e,   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=0,
                m[r28{0} - 12]=0,   m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 20]=m[r28{0} - 20]{0},
                m[r28{0} - 24]=r27{0},   m[r28{0} - 28]=r31{0},   m[r28{0} - 32]=r30{0},   m[r28{0} - 36]=r28{0} - 12,
                m[r28{0} - 40]=%pc,   m[r28{0} - 44]=m[r28{0} - 44]{0},   tmp1=tmp1{99},
                %flags=LOGICALFLAGS32( 0 ^ r24{43} ),   %ZF=LOGICALFLAGS32( 0 ^ r24{43} ),
                %CF=LOGICALFLAGS32( 0 ^ r24{43} )
              Live variables: eax in proc proc1
result:    0 *j32* eax := -
dest is not lib
call:   55 {*j32* eax, *v* r25, *v* r26, *v* esp} := CALL GetTickCount(
              )
              Reaching definitions: r24=r24{49},   r25=r25{49},   r26=r26{49},   r27=0xffff0000,   r28=r28{0} - 40,
                r29=r28{0} - 4,   r30=(0 ^ r24{43}) ^ r24{49},   r31=0xbb40e64e,   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=0,   m[r28{0} - 12]=0,   m[r28{0} - 16]=m[r28{0} - 16]{0},
                m[r28{0} - 20]=m[r28{0} - 20]{0},   m[r28{0} - 24]=r27{0},   m[r28{0} - 28]=r31{0},
                m[r28{0} - 32]=r30{0},   m[r28{0} - 36]=r28{0} - 12,   m[r28{0} - 40]=%pc,
                m[r28{0} - 44]=m[r28{0} - 44]{0},   tmp1=tmp1{99},   %flags=LOGICALFLAGS32( (0 ^ r24{43}) ^ r24{49} ),
                %ZF=LOGICALFLAGS32( (0 ^ r24{43}) ^ r24{49} ),   %CF=LOGICALFLAGS32( (0 ^ r24{43}) ^ r24{49} )
              Live variables: eax in proc proc1
result:    0 *j32* eax := -
dest is not lib
call:   64 {*32* eax, *32* r25, *32* r26, *v* esp} := CALL QueryPerformanceCounter(
              )
              Reaching definitions: r24=r28{0} - 20,   r25=r25{55},   r26=r26{55},   r27=0xffff0000,   r28=r28{0} - 44,
                r29=r28{0} - 4,   r30=r30{56},   r31=0xbb40e64e,   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=0,
                m[r28{0} - 12]=0,   m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 20]=m[r28{0} - 20]{0},
                m[r28{0} - 24]=r27{0},   m[r28{0} - 28]=r31{0},   m[r28{0} - 32]=r30{0},   m[r28{0} - 36]=r28{0} - 12,
                m[r28{0} - 40]=r28{0} - 20,   m[r28{0} - 44]=%pc,   tmp1=tmp1{99},   %flags=LOGICALFLAGS32( r30{56} ),
                %ZF=LOGICALFLAGS32( r30{56} ),   %CF=LOGICALFLAGS32( r30{56} )
              Live variables:  in proc proc1
dest is not lib
call:   39 {*32* eax, *16* ax, *16* cx, *8* dl, *32* r25, *32* edx, *v* esp} := CALL proc11(
                *16** local0 := 0x400000
                *u8* dl := param2
                *j32* edx := param3
              )
              Reaching definitions: r10=r10{0},   r24=r28{0} - 20,   r26=r26{0},   r27=r27{0},   r28=r28{0} - 52,
                r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=0,   m[r28{0} - 12]=0x402218 ^ global0,   m[r28{0} - 16]=0x401915,
                m[r28{0} - 20]=r24{11},   m[r28{0} - 28]=r28{0} - 44,   m[r28{0} - 32]=r27{0},   m[r28{0} - 36]=r30{0},
                m[r28{0} - 40]=r31{0},   m[r28{0} - 44]=global0 ^ (r28{0} - 4),   m[r28{0} - 48]=0x400000,
                m[r28{0} - 52]=%pc,   m[r28{0} - 56]=m[r28{0} - 56]{0},   tmp1=r28{0} - 20,
                %flags=LOGICALFLAGS32( global0 ^ (r28{0} - 4) ),   %ZF=LOGICALFLAGS32( global0 ^ (r28{0} - 4) ),
                %CF=LOGICALFLAGS32( global0 ^ (r28{0} - 4) )
              Live variables: ax,  cx,  dl,  eax,  edx in proc proc5
result:    0 *32* eax := -
result:    0 *16* ax := -
result:    0 *16* cx := -
result:    0 *8* dl := -
result:    0 *32* edx := -
dest is not lib
call:   57 {*32* eax, *32* r25, *32* edx, *v* esp} := CALL proc12(
                *32* local2 := 0x400000
                *u32* local1 := local1
                *u32* ebx := param4
              )
              Reaching definitions: r0=r0{39},   r1=r1{39},   r10=r10{39},   r24=m[r28{0} + 4]{0} - 0x400000,
                r25=r25{39},   r26=r26{39},   r27=r27{0},   r28=r28{0} - 56,   r29=r28{0} - 4,   r30=r30{0},
                r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=0,
                m[r28{0} - 12]=0x402218 ^ global0,   m[r28{0} - 16]=0x401915,   m[r28{0} - 20]=r24{11},
                m[r28{0} - 28]=r28{0} - 44,   m[r28{0} - 32]=r27{0},   m[r28{0} - 36]=r30{0},   m[r28{0} - 40]=r31{0},
                m[r28{0} - 44]=global0 ^ (r28{0} - 4),   m[r28{0} - 48]=m[r28{0} - 48]{50},   m[r28{0} - 52]=0x400000,
                m[r28{0} - 56]=%pc,   tmp1=m[r28{0} + 4]{0},
                %flags=SUBFLAGS32( m[r28{0} + 4]{0}, 0x400000, m[r28{0} + 4]{0} - 0x400000 ),
                %ZF=(m[r28{0} + 4]{0} - 0x400000) = 0,   %CF=m[r28{0} + 4]{0} <u 0x400000
              Live variables: eax,  edx in proc proc5
result:    0 *32* eax := -
result:    0 *32* edx := -
dest is not lib
call:   27 CALL proc10(
                *u32* m[esp_4 - 60] := m[esp_4 - 60]
                *c** ecx := ecx
                *i32* ebx := param1
                *j32* ebp := esp - 4
                *u32* esi := esi_1
                *union* edi := edi
              )
              Reaching definitions: r24=m[r28{0} + 8]{0},   r25=r25{23},   r27=m[r28{0} + 4]{0},   r28=r28{52} - 4,
                r29=r28{0} - 4,   r30=r30{53},   r31=r31{54},   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},   tmp1=tmp1{55},   %flags=%flags{56},
                %ZF=%ZF{57},   %CF=%CF{58}
              Live variables:  in proc proc6
dest is not lib
call:    1 {*32* r24, *32* r25, *32* r26, *v* r28} := CALL _XcptFilter(
              )
              Reaching definitions: 
              Live variables:  in proc __imp__XcptFilter
dest is not lib
call:  186 {*32* eax, *32* esi, *32* ecx, *32* edx, *32* ebx, *v* esp, *32* edi} := CALL proc1(
                *j32* local1 := local1
                *j32* local2 := local2
                *j32* esi := esi
              )
              Reaching definitions: r0=r0{0},   r1=r1{0},   r10=r10{0},   r25=r25{0},   r26=r26{0},   r28=r28{0} - 4,
                r30=r30{0},   m[r28{0} - 4]=%pc,   m[r28{0} - 20]=m[r28{0} - 20]{0},   m[r28{0} - 24]=m[r28{0} - 24]{0}
                tmp1=tmp1{0}
              Live variables: ebx,  edi,  esi in proc _start
result:    0 *32* esi := -
result:    0 *32* ebx := -
result:    0 *32* edi := -
dest is not lib
call:    8 {*32* eax, *v** esp_1, *32** ebp} := CALL proc2(
                *j32* local0 := 16
                *32* ebx := ebx
                *32* esi := esi
                *32* edi := edi
              )
              Reaching definitions: r0=r0{0},   r1=r1{0},   r10=r10{0},   r24=r24{186},   r25=r25{186},   r26=r26{186},
                r27=r27{186},   r28=r28{0} - 12,   r30=r30{186},   r31=r31{186},   m[r28{0} - 4]=16,
                m[r28{0} - 8]=0x4021d8,   m[r28{0} - 12]=%pc,   m[r28{0} - 20]=m[r28{0} - 20]{0},
                m[r28{0} - 24]=m[r28{0} - 24]{0},   tmp1=tmp1{0}
              Live variables: ebp,  esp_1 in proc _start
result:    0 *v** esp_1 := -
result:    0 *32** ebp := -
dest is not lib
call:   25 {*32* eax, *32* ecx, *j32* edx, *v* esp} := CALL InterlockedCompareExchange(
              )
              Reaching definitions: r0=r0{0},   r1=r1{0},   r10=r10{0},   r24=r24{188},   r25=r25{189},   r26=r26{190},
                r27=0,   r28=r28{191} - 16,   r29=r29{8},   r30=r30{13},   r31=0x403374,   m[r28{0} - 4]=16,
                m[r28{0} - 8]=0x4021d8,   m[r28{0} - 12]=%pc,   m[r28{0} - 20]=m[r28{0} - 20]{0},
                m[r28{0} - 24]=m[r28{0} - 24]{0},   tmp1=tmp1{192},   %flags=%flags{193},   %ZF=%ZF{194},
                %CF=%CF{195}
              Live variables: eax,  edx in proc _start
result:    0 *32* eax := -
result:    0 *j32* edx := -
dest is not lib
call:   44 {*32* eax, *32* ecx, *32* edx, *v** esp_2} := CALL Sleep(
                *DWORD* m[esp_3 - 16] := m[esp_3 - 16]
              )
              Reaching definitions: r0=r0{0},   r1=r1{0},   r10=r10{0},   r24=r24{25},   r25=r25{25},   r26=r26{25},
                r27=0,   r28=r28{191} - 20,   r29=r29{8},   r30=r30{13},   r31=0x403374,   m[r28{0} - 4]=16,
                m[r28{0} - 8]=0x4021d8,   m[r28{0} - 12]=%pc,   m[r28{0} - 20]=m[r28{0} - 20]{0},
                m[r28{0} - 24]=m[r28{0} - 24]{0},   tmp1=r24{25} - r30{13},
                %flags=SUBFLAGS32( r24{25}, r30{13}, r24{25} - r30{13} ),   %ZF=(r24{25} - r30{13}) = 0,
                %CF=r24{25} <u r30{13}
              Live variables: esp_2 in proc _start
result:    0 *v** esp_2 := -
dest is not lib
call:   99 {*32* eax, *v* ecx, *j32* edx, *v* esp} := CALL _initterm(
              )
              Reaching definitions: r0=r0{0},   r1=r1{0},   r10=r10{0},   r24=global61,   r25=r25{202},   r26=r26{203},
                r27=0,   r28=(r28{191} - 12) - 12,   r29=r29{8},   r30=1,   r31=0x403374,   m[r28{0} - 4]=16,
                m[r28{0} - 8]=0x4021d8,   m[r28{0} - 12]=%pc,   m[r28{0} - 20]=m[r28{0} - 20]{0},
                m[r28{0} - 24]=m[r28{0} - 24]{0},   tmp1=global61 - 1,   %flags=SUBFLAGS32( global61, 1, global61 - 1 )
                %ZF=(global61 - 1) = 0,   %CF=global61 <u 1
              Live variables: edx in proc _start
result:    0 *j32* edx := -
dest is not lib
call:  115 {*32* eax, *32* ecx, *j32* edx, *v* esp} := CALL InterlockedExchange(
                *LONG** m[esp_3 - 20] := m[esp_3 - 20]
                *LONG** m[esp_3 - 16] := m[esp_3 - 16]
              )
              Reaching definitions: r0=r0{0},   r1=r1{0},   r10=r10{0},   r24=r24{209},   r25=r25{210},   r26=r26{211},
                r27=0,   r28=(r28{191} - 12) - 12,   r29=r29{8},   r30=1,   r31=0x403374,   m[r28{0} - 4]=16,
                m[r28{0} - 8]=0x4021d8,   m[r28{0} - 12]=%pc,   m[r28{0} - 20]=m[r28{0} - 20]{0},
                m[r28{0} - 24]=m[r28{0} - 24]{0},   tmp1=tmp1{105},   %flags=SUBFLAGS32( m[r29{8} - 28], 0, tmp1{105} )
                %ZF=tmp1{105} = 0,   %CF=m[r29{8} - 28] <u 0
              Live variables: edx in proc _start
result:    0 *j32* edx := -
dest is not lib
call:  124 {*32* eax, *16* ax, *16* cx, *u8* dl, *32* ecx, *j32* edx, *v* esp} := CALL proc5(
                *u32* m[esp_3 - 16] := m[esp_3 - 16]
                *u8* dl := dl
                *j32* edx := edx
                *u32* ebx := 0
              )
              Reaching definitions: r0=r0{0},   r1=r1{0},   r10=r10{0},   r24=r24{213},   r25=r25{214},   r26=r26{215},
                r27=0,   r28=(r28{191} - 12) - 8,   r29=r29{8},   r30=1,   r31=0x403374,   m[r28{0} - 4]=16,
                m[r28{0} - 8]=0x4021d8,   m[r28{0} - 12]=%pc,   m[r28{0} - 20]=m[r28{0} - 20]{0},
                m[r28{0} - 24]=m[r28{0} - 24]{0},   tmp1=global53,   %flags=SUBFLAGS32( m[0x403380], 0, global53 ),
                %ZF=global53 = 0,   %CF=m[0x403380] <u 0
              Live variables: ax,  cx,  dl,  eax,  edx in proc _start
result:    0 *32* eax := -
result:    0 *16* ax := -
result:    0 *16* cx := -
result:    0 *u8* dl := -
result:    0 *j32* edx := -
dest is not lib
call:  152 {*32* eax, *32* esi, *32* ecx, *32* ebx, *v* esp, *32* edi} := CALL proc6(
                *i32* local3 := m[esp - 12]
                *v** local4 := m[esp - 8]
                *c** ecx := 0x23cc
                *32* ebx := ebx
                *32* esi := esi
                *32* edi := edi
              )
              Reaching definitions: r0=r0{217},   r1=r1{218},   r10=r10{219},   r24=global75,   r25=0x23cc,
                r26=r26{222},   r27=r27{223},   r28=r28{224} - 16,   r29=r29{225},   r30=r30{226},   r31=r31{227},
                m[r28{0} - 4]=m[r28{0} - 4]{251},   m[r28{0} - 8]=m[r28{0} - 8]{252},
                m[r28{0} - 12]=m[r28{0} - 12]{253},   m[r28{0} - 20]=m[r28{0} - 20]{257},
                m[r28{0} - 24]=m[r28{0} - 24]{258},   tmp1=tmp1{228},   %flags=%flags{229},   %ZF=%ZF{230},
                %CF=%CF{231}
              Live variables: eax,  ebx in proc _start
result:    0 *32* eax := -
result:    0 *32* ebx := -
dest is not lib
call:  165 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL exit(
                *i32* local0 := m[esp - 4]
              )
              Reaching definitions: r0=r0{217},   r1=r1{218},   r10=r10{219},   r24=r24{152},   r25=r25{152},
                r26=r26{222},   r27=r27{152},   r28=r28{224} - 8,   r29=r29{225},   r30=r30{152},   r31=r31{152},
                m[r28{0} - 4]=m[r28{0} - 4]{251},   m[r28{0} - 8]=m[r28{0} - 8]{252},
                m[r28{0} - 12]=m[r28{0} - 12]{253},   m[r28{0} - 20]=m[r28{0} - 20]{257},
                m[r28{0} - 24]=m[r28{0} - 24]{258},   tmp1=global80 - r27{152},
                %flags=SUBFLAGS32( m[0x403024], r27{152}, global80 - r27{152} ),   %ZF=(global80 - r27{152}) = 0,
                %CF=m[0x403024] <u r27{152}
              Live variables:  in proc _start
dest is not lib
call:  173 {*32* eax, *32* ecx, *j32* edx, *v* esp} := CALL _cexit(
              )
              Reaching definitions: r0=r0{217},   r1=r1{218},   r10=r10{219},   r24=r24{152},   r25=r25{152},
                r26=r26{222},   r27=r27{152},   r28=r28{224} - 4,   r29=r29{225},   r30=r30{152},   r31=r31{152},
                m[r28{0} - 4]=m[r28{0} - 4]{251},   m[r28{0} - 8]=m[r28{0} - 8]{252},
                m[r28{0} - 12]=m[r28{0} - 12]{253},   m[r28{0} - 20]=m[r28{0} - 20]{257},
                m[r28{0} - 24]=m[r28{0} - 24]{258},   tmp1=global68 - r27{152},
                %flags=SUBFLAGS32( m[0x403034], r27{152}, global68 - r27{152} ),   %ZF=(global68 - r27{152}) = 0,
                %CF=m[0x403034] <u r27{152}
              Live variables:  in proc _start
dest is not lib
call:   76 {*32* eax, *v* ecx, *j32* edx, *v* esp} := CALL _initterm_e(
              )
              Reaching definitions: r0=r0{0},   r1=r1{0},   r10=r10{0},   r24=global61,   r25=r25{25},   r26=r26{25},
                r27=0,   r28=r28{191} - 24,   r29=r29{8},   r30=1,   r31=0x403374,   m[r28{0} - 4]=16,
                m[r28{0} - 8]=0x4021d8,   m[r28{0} - 12]=%pc,   m[r28{0} - 20]=m[r28{0} - 20]{0},
                m[r28{0} - 24]=m[r28{0} - 24]{0},   tmp1=global61,   %flags=LOGICALFLAGS32( global61 ),
                %ZF=LOGICALFLAGS32( global61 ),   %CF=LOGICALFLAGS32( global61 )
              Live variables: eax,  edx in proc _start
result:    0 *32* eax := -
result:    0 *j32* edx := -
dest is not lib
call:   60 {*32* eax, *v* ecx, *j32* edx, *v* esp} := CALL _amsg_exit(
              )
              Reaching definitions: r0=r0{0},   r1=r1{0},   r10=r10{0},   r24=global61,   r25=r25{25},   r26=r26{25},
                r27=0,   r28=r28{191} - 20,   r29=r29{8},   r30=1,   r31=0x403374,   m[r28{0} - 4]=16,
                m[r28{0} - 8]=0x4021d8,   m[r28{0} - 12]=%pc,   m[r28{0} - 20]=m[r28{0} - 20]{0},
                m[r28{0} - 24]=m[r28{0} - 24]{0},   tmp1=global61 - 1,   %flags=SUBFLAGS32( global61, 1, global61 - 1 )
                %ZF=(global61 - 1) = 0,   %CF=global61 <u 1
              Live variables: edx in proc _start
result:    0 *j32* edx := -
dest is not lib
call:  179 {*32* esi, *32* ecx, *32* ebx, *32* esp, *32* ebp, *32* edi} := CALL proc8(
                *32** ebp := ebp
              )
              Reaching definitions: r0=r0{236},   r1=r1{237},   r10=r10{238},   r24=r24{239},   r25=r25{240},
                r26=r26{241},   r27=r27{242},   r28=r28{243} - 4,   r29=r29{244},   r30=r30{245},   r31=r31{246},
                m[r28{0} - 4]=m[r28{0} - 4]{254},   m[r28{0} - 8]=m[r28{0} - 8]{255},
                m[r28{0} - 12]=m[r28{0} - 12]{256},   m[r28{0} - 20]=m[r28{0} - 20]{259},
                m[r28{0} - 24]=m[r28{0} - 24]{260},   tmp1=tmp1{247},   %flags=%flags{248},   %ZF=%ZF{249},
                %CF=%CF{250}
              Live variables:  in proc _start
dest is not lib
call:   25 {*32* eax, *v* edx, *v* esp} := CALL _stat64i32(
              )
              Reaching definitions: r24=r28{0} - 76,   r25=r25{0},   r27=r27{0},   r28=r28{0} - 104,   r29=r29{0},
                r30=r25{0},   r31=r31{0},   m[r28{0} - 8]=global0 ^ (r28{0} - 76),   m[r28{0} - 56]=m[r28{0} - 56]{0},
                m[r28{0} - 80]=r27{0},   m[r28{0} - 84]=r29{0},   m[r28{0} - 88]=r30{0},   m[r28{0} - 92]=r31{0},
                m[r28{0} - 96]=r28{0} - 76,   m[r28{0} - 100]=r25{0},   m[r28{0} - 104]=%pc,   tmp1=r28{0},
                %flags=LOGICALFLAGS32( global0 ^ (r28{0} - 76) ),   %ZF=LOGICALFLAGS32( global0 ^ (r28{0} - 76) ),
                %CF=LOGICALFLAGS32( global0 ^ (r28{0} - 76) )
              Live variables: eax in proc proc10
result:    0 *32* eax := -
dest is not lib
call:   37 {*32* eax, *v* edx, *v* esp} := CALL perror(
                *c** local0 := param2
              )
              Reaching definitions: r24=r24{154},   r25=r25{155},   r26=r26{156},   r27=r27{0},   r28=(r28{0} - 92) - 8
                r29=r29{0},   r30=r25{0},   r31=r31{158},   m[r28{0} - 8]=global0 ^ (r28{0} - 76),
                m[r28{0} - 56]=m[r28{0} - 56]{0},   m[r28{0} - 80]=r27{0},   m[r28{0} - 84]=r29{0},
                m[r28{0} - 88]=r30{0},   m[r28{0} - 92]=r31{0},   m[r28{0} - 96]=r25{0},   m[r28{0} - 100]=%pc,
                m[r28{0} - 104]=%pc,   tmp1=tmp1{159},   %flags=%flags{160},   %ZF=%ZF{161},   %CF=%CF{162}
              Live variables: edx in proc proc10
result:    0 *v* edx := -
dest is not lib
call:   56 <all> := CALL proc13(<all>)
              Reaching definitions: r24=1,   r25=(global0 ^ (esp - 76)) ^ (esp - 76),   r26=r26{37},   r27=r27{0},
                r28=(r28{0} - 92) + 12,   r29=r29{0},   r30=r30{0},   r31=r31{0},
                m[r28{0} - 8]=global0 ^ a[m[esp - 76]],   m[r28{0} - 56]=m[esp - 56]{0},   m[r28{0} - 80]=%pc,
                m[r28{0} - 84]=r29{0},   m[r28{0} - 88]=r30{0},   m[r28{0} - 92]=r31{0},   m[r28{0} - 96]=r25{0},
                m[r28{0} - 100]=%pc,   m[r28{0} - 104]=%pc,   tmp1=((r28{0} - 92) - 8) + 4,
                %flags=LOGICALFLAGS32( (global0 ^ (esp - 76)) ^ (esp - 76) ),
                %ZF=LOGICALFLAGS32( (global0 ^ (esp - 76)) ^ (esp - 76) ),
                %CF=LOGICALFLAGS32( (global0 ^ (esp - 76)) ^ (esp - 76) )
              Live variables:  in proc proc10
dest is not lib
call:   70 {*32* eax, *v* edx, *v* esp} := CALL fopen(
                *c** local9 := param2
                *c** local0 := "rb"
              )
              Reaching definitions: r24=r24{25},   r25=r25{25},   r26=r26{25},   r27=r27{0},   r28=r28{0} - 104,
                r29=r29{0},   r30=r25{0},   r31=r31{0},   m[r28{0} - 8]=global0 ^ (r28{0} - 76),
                m[r28{0} - 56]=m[r28{0} - 56]{0},   m[r28{0} - 80]=r27{0},   m[r28{0} - 84]=r29{0},
                m[r28{0} - 88]=r30{0},   m[r28{0} - 92]=r31{0},   m[r28{0} - 96]=0x40211c,   m[r28{0} - 100]=r25{0},
                m[r28{0} - 104]=%pc,   tmp1=r24{25},   %flags=LOGICALFLAGS32( r24{25} ),
                %ZF=LOGICALFLAGS32( r24{25} ),   %CF=LOGICALFLAGS32( r24{25} )
              Live variables: eax in proc proc10
result:    0 *32* eax := -
dest is not lib
call:  114 {*32* eax, *16* r0, *8* r8, *8* r9, *32* edx, *v* esp} := CALL proc14(
                *32* m[r28 + 4] := m[r28 + 4]
                *32* m[r28 + 8] := m[r28 + 8]
              )
              Reaching definitions: 
              Live variables:  in proc proc10
dest is not lib
call:  129 {*32* eax, *v* edx, *v* esp} := CALL fclose(
                *FILE** m[r28 + 4] := m[r28 + 4]
              )
              Reaching definitions: 
              Live variables:  in proc proc10
dest is not lib
call:  149 <all> := CALL proc13(<all>)
              Reaching definitions: 
              Live variables:  in proc proc10
found seq with more than one outedge!
dest is not lib
call:  185 {*u32* eax, *v** ecx, *v** edx_1, *v* esp} := CALL memset(
                *v** m[esp_1 - 12] := m[esp_1 - 12]
                *i32* m[esp_1 - 8] := m[esp_1 - 8]
                *j32* m[esp_1 - 4] := m[esp_1 - 4]
              )
              Reaching definitions: r0=truncu(32,16,(r28{295} + r24{172}) + 20),
                r8=truncu(32,8,(r28{295} + r24{172}) + 20),   r9=r9{340},   r24=(r28{295} + r24{172}) + 20,
                r25=r25{342},   r26=r26{343},   r27=(r24{307} - r28{295}) - 17,   r28=r28{295} - 16,   r29=r29{296},
                r30=r30{344},   r31=16 - r30{344},   m[r28{0} + 4]=m[r28{0} + 4]{398},
                m[r28{0} + 8]=m[r28{0} + 8]{399},   m[r28{0} - 4]=m[r28{0} - 4]{36},
                m[r28{0} - 88]=m[r28{0} - 88]{36},   m[r28{0} - 92]=m[r28{0} - 92]{36},
                m[r28{0} - 96]=m[r28{0} - 96]{36},   m[r28{0} - 100]=m[r28{0} - 100]{36},
                m[r28{0} - 104]=m[r28{0} - 104]{36},   m[r28{0} - 108]=m[r28{0} - 108]{36},
                m[r28{0} - 112]=m[r28{0} - 112]{36},   m[r28{0} - 116]=m[r28{0} - 116]{36},
                m[r28{0} - 120]=m[r28{0} - 120]{36},   m[r28{0} - 4]=m[r28{0} - 4]{384},
                m[r28{0} - 88]=m[r28{0} - 88]{385},   m[r28{0} - 92]=m[r28{0} - 92]{386},
                m[r28{0} - 96]=m[r28{0} - 96]{387},   m[r28{0} - 100]=m[r28{0} - 100]{388},
                m[r28{0} - 104]=m[r28{0} - 104]{389},   m[r28{0} - 108]=m[r28{0} - 108]{390},
                m[r28{0} - 112]=m[r28{0} - 112]{391},   m[r28{0} - 116]=m[r28{0} - 116]{392},
                m[r28{0} - 120]=m[r28{0} - 120]{393},   <all>=<all>{36},   tmp1=16,   tmpb=tmpb{346},
                %flags=SUBFLAGS32( 16, r30{344}, 16 - r30{344} ),   %ZF=(16 - r30{344}) = 0,   %CF=16 <u r30{344}
              Live variables:  in proc proc14
dest is not lib
call:  208 {*32* eax, *v* ecx, *32* edx, *v* esp} := CALL printf(
                *c** m[esp - 8] := m[esp - 8]
              )
              Reaching definitions: r0=124,   r8=124,   r9=truncu(32,8,r28{295} + 20),   r24=124,   r25=r28{295} + 20,
                r26=r26{355},   r27=r27{200},   r28=r28{295} - 12,   r29=r29{296},   r30=r30{357},   r31=r31{358},
                m[r28{0} + 4]=m[r28{0} + 4]{398},   m[r28{0} + 8]=m[r28{0} + 8]{399},   m[r28{0} - 4]=m[r28{0} - 4]{36}
                m[r28{0} - 88]=m[r28{0} - 88]{36},   m[r28{0} - 92]=m[r28{0} - 92]{36},
                m[r28{0} - 96]=m[r28{0} - 96]{36},   m[r28{0} - 100]=m[r28{0} - 100]{36},
                m[r28{0} - 104]=m[r28{0} - 104]{36},   m[r28{0} - 108]=m[r28{0} - 108]{36},
                m[r28{0} - 112]=m[r28{0} - 112]{36},   m[r28{0} - 116]=m[r28{0} - 116]{36},
                m[r28{0} - 120]=m[r28{0} - 120]{36},   m[r28{0} - 4]=m[r28{0} - 4]{384},
                m[r28{0} - 88]=m[r28{0} - 88]{385},   m[r28{0} - 92]=m[r28{0} - 92]{386},
                m[r28{0} - 96]=m[r28{0} - 96]{387},   m[r28{0} - 100]=m[r28{0} - 100]{388},
                m[r28{0} - 104]=m[r28{0} - 104]{389},   m[r28{0} - 108]=m[r28{0} - 108]{390},
                m[r28{0} - 112]=m[r28{0} - 112]{391},   m[r28{0} - 116]=m[r28{0} - 116]{392},
                m[r28{0} - 120]=m[r28{0} - 120]{393},   <all>=<all>{36},   tmp1=(r24{307} - r28{295}) - 17,
                tmpb=tmpb{360},   %flags=ADDFLAGS32( (r24{307} - r28{295}) - 17, r30{357}, r27{200} ),
                %ZF=ADDFLAGS32( (r24{307} - r28{295}) - 17, r30{357}, r27{200} ),
                %CF=ADDFLAGS32( (r24{307} - r28{295}) - 17, r30{357}, r27{200} )
              Live variables: eax,  edx in proc proc14
result:    0 *32* eax := -
result:    0 *32* edx := -
dest is not lib
call:  228 <all> := CALL proc13(<all>)
              Reaching definitions: r0=124,   r8=124,   r9=truncu(32,8,ecx ^ (esp + 16)),   r24=r24{208},
                r25=ecx ^ (esp + 16),   r26=r26{208},   r27=r27{220},   r28=r28{295} + 12,   r29=r29{218},
                r30=r30{216},   r31=r31{214},   m[r28{0} + 4]=m[esp + 4]{398},   m[r28{0} + 8]=m[esp + 8]{399},
                m[r28{0} - 4]=m[esp - 4]{36},   m[r28{0} - 88]=m[esp - 88]{36},   m[r28{0} - 92]=m[esp - 92]{36},
                m[r28{0} - 96]=m[esp - 96]{36},   m[r28{0} - 100]=m[esp - 100]{36},   m[r28{0} - 104]=m[esp - 104]{36},
                m[r28{0} - 108]=m[esp - 108]{36},   m[r28{0} - 112]=m[esp - 112]{36},
                m[r28{0} - 116]=m[esp - 116]{36},   m[r28{0} - 120]=m[esp - 120]{36},
                m[r28{0} - 4]=m[r28{0} - 4]{384},   m[r28{0} - 88]=m[r28{0} - 88]{385},
                m[r28{0} - 92]=m[r28{0} - 92]{386},   m[r28{0} - 96]=m[r28{0} - 96]{387},
                m[r28{0} - 100]=m[r28{0} - 100]{388},   m[r28{0} - 104]=m[r28{0} - 104]{389},
                m[r28{0} - 108]=m[r28{0} - 108]{390},   m[r28{0} - 112]=m[r28{0} - 112]{391},
                m[r28{0} - 116]=m[r28{0} - 116]{392},   m[r28{0} - 120]=m[r28{0} - 120]{393},   <all>=<all>{36},
                tmp1=(r28{295} - 12) + 4,   tmpb=tmpb{360},   %flags=LOGICALFLAGS32( ecx ^ (esp + 16) ),
                %ZF=LOGICALFLAGS32( ecx ^ (esp + 16) ),   %CF=LOGICALFLAGS32( ecx ^ (esp + 16) )
              Live variables:  in proc proc14
