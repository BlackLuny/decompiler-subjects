Using options:
0000000000400410: error: The method or operation is not implemented.
00000000004004A1: error: An error occurred while processing instruction at address 00000000004004A1.
    Expected stack depth to be negative.
      at Reko.Analysis.ExpressionPropagator.GetStackDepthBeforeCall () <0x41fa1670 + 0x0020f> in <filename unknown>:0 
  at Reko.Analysis.ExpressionPropagator.VisitCallInstruction (Reko.Core.Code.CallInstruction ci) <0x41fa1300 + 0x0005f> in <filename unknown>:0 
  at Reko.Core.Code.CallInstruction.Accept[T] (InstructionVisitor`1 visitor) <0x41f99700 + 0x00030> in <filename unknown>:0 
  at Reko.Analysis.TrashedRegisterFinder.RewriteBlock (Reko.Core.Block block) <0x41fa0080 + 0x0018c> in <filename unknown>:0 
0000000000400548: error: An error occurred while processing the statement branch 0x0000000000600E14 - 0x0000000000600E14 >> 0x0000000000000003 == 0x0000000000000000 l0000000000400566.
    Pulling difference ptr64 and ptr64
      at Reko.Core.Expressions.ExpressionTypeAscenderBase.PullDiffDataType (Reko.Core.Types.DataType dtLeft, Reko.Core.Types.DataType dtRight) <0x41fe5060 + 0x00147> in <filename unknown>:0 
  at Reko.Core.Expressions.ExpressionTypeAscenderBase.VisitBinaryExpression (Reko.Core.Expressions.BinaryExpression binExp) <0x41fd0c00 + 0x000eb> in <filename unknown>:0 
  at Reko.Core.Expressions.BinaryExpression.Accept[T] (ExpressionVisitor`1 v) <0x41f5dd20 + 0x00030> in <filename unknown>:0 
  at Reko.Core.Expressions.ExpressionTypeAscenderBase.VisitBinaryExpression (Reko.Core.Expressions.BinaryExpression binExp) <0x41fd0c00 + 0x00044> in <filename unknown>:0 
  at Reko.Core.Expressions.BinaryExpression.Accept[T] (ExpressionVisitor`1 v) <0x41f5dd20 + 0x00030> in <filename unknown>:0 
  at Reko.Core.Expressions.ExpressionTypeAscenderBase.VisitBinaryExpression (Reko.Core.Expressions.BinaryExpression binExp) <0x41fd0c00 + 0x00044> in <filename unknown>:0 
  at Reko.Core.Expressions.BinaryExpression.Accept[T] (ExpressionVisitor`1 v) <0x41f5dd20 + 0x00030> in <filename unknown>:0 
  at Reko.Typing.TypeCollector.VisitBranch (Reko.Core.Code.Branch branch) <0x41fe37c0 + 0x00031> in <filename unknown>:0 
  at Reko.Core.Code.Branch.Accept (InstructionVisitor v) <0x41f8ba20 + 0x00027> in <filename unknown>:0 
  at Reko.Typing.TypeCollector.CollectTypes () <0x41fdc520 + 0x00289> in <filename unknown>:0 
