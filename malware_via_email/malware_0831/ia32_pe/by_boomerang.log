Unknown library function GetModuleHandleA
Unknown library function VirtualProtect
COMPUTED JUMP at 0x40125d, pDest = r27
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc1 ###
in proc proc1 adding addrExp r28{0} - 4 to local table
finding final parameters for proc1
potential param r30
found new parameter r30
potential param r31
found new parameter r31
potential param r25
found new parameter r25
assgn   54 *32* %pc := m[0x40100c]
is readonly
assgn   87 *32* %pc := m[0x401000]
is readonly
assgn  124 *32* r24 := m[24]
assgn  205 *32* %pc := m[0x401008]
is readonly
assgn  285 *32* %pc := m[0x401004]
is readonly
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
in proc _start adding addrExp r28{0} - 4 to local table
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 32 to local table
in proc _start adding addrExp r28{0} - 32 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 44 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffd4 existing type HANDLE but added type unsigned int
in proc _start adding addrExp r28{0} - 76 to local table
finding final parameters for _start
potential param r31
found new parameter r31
potential param r28
found new parameter r28
potential param r30
found new parameter r30
potential param r27
found new parameter r27
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc1 ###
finding final parameters for proc1
potential param r30
found new parameter r30
potential param r31
found new parameter r31
potential param r25
found new parameter r25
finding final parameters for _start
potential param r31
found new parameter r31
potential param r28
found new parameter r28
potential param r30
found new parameter r30
potential param r27
found new parameter r27
local esp has type unsigned int that doesn't agree with type of define void of a library, why?
local eax has type HANDLE that doesn't agree with type of define __size32 of a library, why?
local edx has type void that doesn't agree with type of define __size32 of a library, why?
local ecx has type void that doesn't agree with type of define __size32 of a library, why?
local edx has type __size32 that doesn't agree with type of define void of a library, why?
dest is not lib
call:   55 {*HANDLE* eax_2, *v* ecx, *v* edx, *v* esp} := CALL GetModuleHandleA(
              )
              Reaching definitions: r8=32,   r24=0x401020,   r25=r25{0},   r26=r26{0},   r27=r27{0},   r28=r28{0} - 36,
                r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{0},
                m[r28{0} - 32]=0x401020,   m[r28{0} - 36]=%pc,   tmp1=r30{0},
                %flags=SUBFLAGS32( r28{0} - 4, 24, r28{0} - 28 ),   %ZF=(r28{0} - 28) = 0,   %CF=(r28{0} - 4) <u 24
              Live variables: eax_2 in proc _start
result:    0 *HANDLE* eax_2 := -
dest is not lib
call:   88 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local0 := eax_2
                *c** local1 := "ZwFsControlFile"
              )
              Reaching definitions: r8=42,   r24=0x40102a,   r25=r25{55},   r26=r26{55},   r27=r27{0},
                r28=r28{0} - 44,   r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=r24{0},   m[r28{0} - 32]=0x401020,   m[r28{0} - 36]=0x40102a,   m[r28{0} - 40]=r24{55},
                m[r28{0} - 44]=%pc,   tmp1=r27{0},   %flags=SUBFLAGS32( r28{0} - 32, 8, r28{0} - 40 ),
                %ZF=(r28{0} - 40) = 0,   %CF=(r28{0} - 32) <u 8
              Live variables: eax,  ecx,  edx in proc _start
result:    0 *32* eax := -
result:    0 *v* ecx := -
result:    0 *v* edx := -
dest is not lib
call:  206 {*32* eax, *v* ecx, *32* edx, *v* esp} := CALL VirtualProtect(
              )
              Reaching definitions: r8=truncu(32,8,r24{180}),   r24=r24{180},   r25=r25{95},   r26=r26{193},
                r27=r27{201},   r28=r28{95} - 24,   r29=r29{95},   r30=r30{112},   r31=r31{95},
                m[r28{0} - 4]=m[r28{0} - 4]{95},   m[r28{0} - 8]=m[r28{0} - 8]{95},   m[r28{0} - 32]=m[r28{0} - 32]{95}
                m[r28{0} - 36]=m[r28{0} - 36]{95},   m[r28{0} - 40]=m[r28{0} - 40]{95},
                m[r28{0} - 44]=m[r28{0} - 44]{95},   m[r28{0} - 76]=m[r28{0} - 76]{95},
                m[r28{0} - 4]=m[r28{0} - 4]{95},   m[r28{0} - 8]=m[r28{0} - 8]{95},   m[r28{0} - 32]=m[r28{0} - 32]{95}
                m[r28{0} - 36]=m[r28{0} - 36]{95},   m[r28{0} - 40]=m[r28{0} - 40]{95},
                m[r28{0} - 44]=m[r28{0} - 44]{95},   m[r28{0} - 76]=m[r28{0} - 76]{95},   <all>=<all>{95},
                tmp1=r28{95},   %flags=SUBFLAGS32( r28{95}, 4, r28{95} - 4 ),   %ZF=(r28{95} - 4) = 0,
                %CF=r28{95} <u 4
              Live variables: edx in proc _start
result:    0 *32* edx := -
dest is not lib
call:  286 {*32* eax, *32* ecx, *v* edx, *v* esp} := CALL VirtualAlloc(
                *LPVOID* local4 := m[esp - 32]
                *DWORD* m[esp - 28] := m[esp - 28]
                *DWORD* m[esp - 24] := m[esp - 24]
                *DWORD* m[esp - 20] := m[esp - 20]
              )
              Reaching definitions: r8=truncu(32,8,r24{258}),   r24=r24{258},   r25=r25{211} - 1,   r26=r26{280},
                r27=r27{201},   r28=r28{95} - 36,   r29=r29{95},   r30=r30{112},   r31=r31{272},
                m[r28{0} - 4]=m[r28{0} - 4]{95},   m[r28{0} - 8]=m[r28{0} - 8]{95},   m[r28{0} - 32]=m[r28{0} - 32]{95}
                m[r28{0} - 36]=m[r28{0} - 36]{95},   m[r28{0} - 40]=m[r28{0} - 40]{95},
                m[r28{0} - 44]=m[r28{0} - 44]{95},   m[r28{0} - 76]=m[r28{0} - 76]{95},
                m[r28{0} - 4]=m[r28{0} - 4]{95},   m[r28{0} - 8]=m[r28{0} - 8]{95},   m[r28{0} - 32]=m[r28{0} - 32]{95}
                m[r28{0} - 36]=m[r28{0} - 36]{95},   m[r28{0} - 40]=m[r28{0} - 40]{95},
                m[r28{0} - 44]=m[r28{0} - 44]{95},   m[r28{0} - 76]=m[r28{0} - 76]{95},   <all>=<all>{95},
                tmp1=r25{211} - 1,   %flags=ADDFLAGS32( r24{254}, m[r24{258} + 60], r24{258} ),
                %ZF=ADDFLAGS32( r24{254}, m[r24{258} + 60], r24{258} ),
                %CF=ADDFLAGS32( r24{254}, m[r24{258} + 60], r24{258} )
              Live variables: eax,  ecx in proc _start
result:    0 *32* eax := -
result:    0 *32* ecx := -
dest is not lib
call:  340 {*32* esi, *32* ecx, *v* esp, *32* edi} := CALL proc1(
                *32* ecx := ecx
                *8** esi := esi
                *8** edi := edi
              )
              Reaching definitions: r8=truncu(32,8,r24{314}),   r24=r24{314},   r25=r25{318},   r26=r26{286},
                r27=r27{201},   r28=r28{95} - 20,   r29=r29{95},   r30=r30{335},   r31=r31{333},
                m[r28{0} - 4]=m[r28{0} - 4]{95},   m[r28{0} - 8]=m[r28{0} - 8]{95},   m[r28{0} - 32]=m[r28{0} - 32]{95}
                m[r28{0} - 36]=m[r28{0} - 36]{95},   m[r28{0} - 40]=m[r28{0} - 40]{95},
                m[r28{0} - 44]=m[r28{0} - 44]{95},   m[r28{0} - 76]=m[r28{0} - 76]{95},
                m[r28{0} - 4]=m[r28{0} - 4]{95},   m[r28{0} - 8]=m[r28{0} - 8]{95},   m[r28{0} - 32]=m[r28{0} - 32]{95}
                m[r28{0} - 36]=m[r28{0} - 36]{95},   m[r28{0} - 40]=m[r28{0} - 40]{95},
                m[r28{0} - 44]=m[r28{0} - 44]{95},   m[r28{0} - 76]=m[r28{0} - 76]{95},   <all>=<all>{95},
                tmp1=r27{201},   %flags=ADDFLAGS32( r24{304}, m[r24{314} + 60], r24{314} ),
                %ZF=ADDFLAGS32( r24{304}, m[r24{314} + 60], r24{314} ),
                %CF=ADDFLAGS32( r24{304}, m[r24{314} + 60], r24{314} )
              Live variables: ecx,  edi in proc _start
result:    0 *32* ecx := -
result:    0 *32* edi := -
found seq with more than one outedge!
taken branch is first out edge
dest is not lib
call:  398 {*32* esi, *32* ecx, *v* esp, *32* edi} := CALL proc1(
                *32* ecx := ecx
                *8** esi := esi
                *8** edi := edi
              )
              Reaching definitions: r8=r8{436},   r24=r24{352},   r25=r25{390},   r26=r26{438},   r27=r27{368},
                r28=(r28{95} - 16) - 4,   r29=r29{95},   r30=r30{387},   r31=r31{383},
                m[r28{0} - 4]=m[r28{0} - 4]{95},   m[r28{0} - 8]=m[r28{0} - 8]{95},   m[r28{0} - 32]=m[r28{0} - 32]{95}
                m[r28{0} - 36]=m[r28{0} - 36]{95},   m[r28{0} - 40]=m[r28{0} - 40]{95},
                m[r28{0} - 44]=m[r28{0} - 44]{95},   m[r28{0} - 76]=m[r28{0} - 76]{95},
                m[r28{0} - 4]=m[r28{0} - 4]{95},   m[r28{0} - 8]=m[r28{0} - 8]{95},   m[r28{0} - 32]=m[r28{0} - 32]{95}
                m[r28{0} - 36]=m[r28{0} - 36]{95},   m[r28{0} - 40]=m[r28{0} - 40]{95},
                m[r28{0} - 44]=m[r28{0} - 44]{95},   m[r28{0} - 76]=m[r28{0} - 76]{95},   <all>=<all>{95},
                tmp1=r30{385},   %flags=LOGICALFLAGS32( r25{390} ),   %ZF=LOGICALFLAGS32( r25{390} ),
                %CF=LOGICALFLAGS32( r25{390} )
              Live variables:  in proc _start
