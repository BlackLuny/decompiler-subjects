Unknown library function lstrcpyA
Unknown library function GetModuleHandleA
Unknown library function StgCreateStorageEx
assgn   78 *32* %pc := m[0x405400]
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc1 ###
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 8 to local table
in proc proc1 adding addrExp r28{0} - 48 to local table
in proc proc1 adding addrExp r28{0} - 32 to local table
in proc proc1 adding addrExp r28{0} - 36 to local table
in proc proc1 adding addrExp r28{0} - 40 to local table
in proc proc1 adding addrExp r28{0} - 4 to local table
in proc proc1 adding addrExp r28{0} - 52 to local table
in proc proc1 adding addrExp r28{0} - 56 to local table
in proc proc1 adding addrExp r28{0} - 60 to local table
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 20 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 64 to local table
in proc proc1 adding addrExp r28{0} - 68 to local table
in proc proc1 adding addrExp r28{0} - 72 to local table
in proc proc1 adding addrExp r28{0} - 76 to local table
in proc proc1 adding addrExp r28{0} - 80 to local table
in proc proc1 adding addrExp r28{0} - 84 to local table
in proc proc1 adding addrExp r28{0} - 88 to local table
in proc proc1 adding addrExp r28{0} - 92 to local table
in proc proc1 adding addrExp r28{0} - 96 to local table
in proc proc1 adding addrExp r28{0} - 28 to local table
in proc proc1 adding addrExp r28{0} - 24 to local table
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 32 to local table
in proc proc1 adding addrExp r28{0} - 36 to local table
in proc proc1 adding addrExp r28{0} - 40 to local table
in proc proc1 adding addrExp r28{0} - 40 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 40 to local table
in proc proc1 adding addrExp r28{0} - 36 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 36 to local table
in proc proc1 adding addrExp r28{0} - 40 to local table
in proc proc1 adding addrExp r28{0} - 8 to local table
in proc proc1 adding addrExp r28{0} - 48 to local table
in proc proc1 adding addrExp r28{0} - 48 to local table
in proc proc1 adding addrExp r28{0} - 8 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 32 to local table
in proc proc1 adding addrExp r28{0} - 36 to local table
in proc proc1 adding addrExp r28{0} - 40 to local table
in proc proc1 adding addrExp r28{0} - 8 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 8 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 32 to local table
in proc proc1 adding addrExp r28{0} - 36 to local table
in proc proc1 adding addrExp r28{0} - 40 to local table
in proc proc1 adding addrExp r28{0} - 48 to local table
finding final parameters for proc1
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} - 16]
found new parameter m[r28{0} - 16]
potential param m[r28{0} - 8]
found new parameter m[r28{0} - 8]
assgn   21 *32* %pc := m[0x405384]
assgn   37 *32* %pc := m[0x405388]
assgn   79 *32* %pc := m[0x40538c]
assgn  191 *32* %pc := m[0x405390]
assgn  324 *32* %pc := m[0x405688]
assgn  355 *32* m[r28 - 4] := m[0x405d0c]
assgn  359 *32* %pc := m[0x40568c]
assgn  455 *32* m[r28 - 4] := m[0x405d0c]
assgn  459 *32* %pc := m[0x405690]
assgn  533 *32* m[r28 - 4] := m[0x405d10]
assgn  537 *32* %pc := m[0x405694]
assgn  586 *32* m[r28 - 4] := m[0x405d10]
assgn  590 *32* %pc := m[0x405698]
assgn  595 *32* m[r28 - 4] := m[0x405d10]
assgn  599 *32* %pc := m[0x40569c]
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc2 ###
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 8 to local table
in proc proc2 adding addrExp r28{0} - 16 to local table
in proc proc2 adding addrExp r28{0} - 36 to local table
in proc proc2 adding addrExp r28{0} - 4 to local table
in proc proc2 adding addrExp r28{0} - 72 to local table
in proc proc2 adding addrExp r28{0} - 76 to local table
in proc proc2 adding addrExp r28{0} - 80 to local table
in proc proc2 adding addrExp r28{0} - 84 to local table
in proc proc2 adding addrExp r28{0} - 88 to local table
in proc proc2 adding addrExp r28{0} - 92 to local table
in proc proc2 adding addrExp r28{0} - 96 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 84 to local table
in proc proc2 adding addrExp r28{0} - 88 to local table
in proc proc2 adding addrExp r28{0} - 92 to local table
in proc proc2 adding addrExp r28{0} - 16 to local table
in proc proc2 adding addrExp r28{0} - 92 to local table
in proc proc2 adding addrExp r28{0} - 96 to local table
in proc proc2 adding addrExp r28{0} - 100 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 16 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 92 to local table
in proc proc2 adding addrExp r28{0} - 96 to local table
in proc proc2 adding addrExp r28{0} - 24 to local table
in proc proc2 adding addrExp r28{0} - 16 to local table
in proc proc2 adding addrExp r28{0} - 68 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 36 to local table
in proc proc2 adding addrExp r28{0} - 36 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 96 to local table
in proc proc2 adding addrExp r28{0} - 100 to local table
in proc proc2 adding addrExp r28{0} - 104 to local table
in proc proc2 adding addrExp r28{0} - 108 to local table
in proc proc2 adding addrExp r28{0} - 112 to local table
in proc proc2 adding addrExp r28{0} - 116 to local table
in proc proc2 adding addrExp r28{0} - 120 to local table
in proc proc2 adding addrExp r28{0} - 124 to local table
in proc proc2 adding addrExp r28{0} - 128 to local table
in proc proc2 adding addrExp r28{0} - 132 to local table
in proc proc2 adding addrExp r28{0} - 136 to local table
finding final parameters for proc2
potential param r28
found new parameter r28
potential param m[r28{0} - 8]
found new parameter m[r28{0} - 8]
potential param m[r28{0} - 16]
found new parameter m[r28{0} - 16]
potential param global10
potential param global11
potential param global12
potential param global13
potential param global14
potential param global15
assgn   17 *32* %pc := m[0x405370]
assgn  308 *32* %pc := m[0x4056a4]
assgn  495 *32* %pc := m[0x4056a4]
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure main ###
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 16 to local table
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 80 to local table
in proc main adding addrExp r28{0} - 72 to local table
in proc main adding addrExp r28{0} - 28 to local table
in proc main adding addrExp r28{0} - 4 to local table
in proc main adding addrExp r28{0} - 44 to local table
in proc main adding addrExp r28{0} - 48 to local table
in proc main adding addrExp r28{0} - 52 to local table
in proc main adding addrExp r28{0} - 56 to local table
in proc main adding addrExp r28{0} - 60 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 56 to local table
in proc main adding addrExp r28{0} - 60 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffc4 existing type unsigned int but added type void *
in proc main adding addrExp r28{0} - 64 to local table
in proc main adding addrExp r28{0} - 16 to local table
in proc main adding addrExp r28{0} - 56 to local table
in proc main adding addrExp r28{0} - 60 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffc4 existing type unsigned int but added type void *
in proc main adding addrExp r28{0} - 64 to local table
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 56 to local table
in proc main adding addrExp r28{0} - 60 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffc4 existing type unsigned int but added type void *
in proc main adding addrExp r28{0} - 64 to local table
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 56 to local table
in proc main adding addrExp r28{0} - 60 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffc4 existing type unsigned int but added type void *
in proc main adding addrExp r28{0} - 64 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 56 to local table
in proc main adding addrExp r28{0} - 60 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffc4 existing type unsigned int but added type void *
in proc main adding addrExp r28{0} - 64 to local table
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 56 to local table
in proc main adding addrExp r28{0} - 60 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffc4 existing type unsigned int but added type void *
in proc main adding addrExp r28{0} - 64 to local table
in proc main adding addrExp r28{0} - 16 to local table
in proc main adding addrExp r28{0} - 28 to local table
in proc main adding addrExp r28{0} - 28 to local table
in proc main adding addrExp r28{0} - 16 to local table
in proc main adding addrExp r28{0} - 56 to local table
in proc main adding addrExp r28{0} - 60 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffc4 existing type unsigned int but added type void *
in proc main adding addrExp r28{0} - 64 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 56 to local table
in proc main adding addrExp r28{0} - 60 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffc4 existing type unsigned int but added type void *
in proc main adding addrExp r28{0} - 64 to local table
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 56 to local table
in proc main adding addrExp r28{0} - 60 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure main ###
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 16 to local table
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 80 to local table
in proc main adding addrExp r28{0} - 72 to local table
could not set type for unknown parameter expression m[r28{0} + 4]
could not set type for unknown parameter expression m[r28{0} + 8]
could not set type for unknown parameter expression m[r28{0} + 12]
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 16 to local table
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 16 to local table
in proc main adding addrExp r28{0} - 28 to local table
in proc main adding addrExp r28{0} - 16 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 12 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc1 ###
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 8 to local table
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 32 to local table
in proc proc1 adding addrExp r28{0} - 36 to local table
in proc proc1 adding addrExp r28{0} - 40 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 40 to local table
in proc proc1 adding addrExp r28{0} - 36 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 36 to local table
in proc proc1 adding addrExp r28{0} - 40 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc2 ###
in proc proc2 adding addrExp r28{0} - 8 to local table
in proc proc2 adding addrExp r28{0} - 16 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 24 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 36 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
finding final parameters for proc1
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} - 16]
found new parameter m[r28{0} - 16]
potential param m[r28{0} - 8]
found new parameter m[r28{0} - 8]
finding final parameters for proc2
potential param r28
found new parameter r28
potential param m[r28{0} - 8]
found new parameter m[r28{0} - 8]
potential param m[r28{0} - 16]
found new parameter m[r28{0} - 16]
potential param global10
potential param global11
potential param global12
potential param global13
potential param global14
potential param global15
local ecx has type unsigned int that doesn't agree with type of define __size32 of a library, why?
local edx has type int that doesn't agree with type of define unsigned int of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local ecx has type int that doesn't agree with type of define unsigned int of a library, why?
local edx has type unsigned int that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local eax has type int that doesn't agree with type of define __size32 of a library, why?
local ecx has type unsigned int that doesn't agree with type of define void of a library, why?
local edx has type unsigned int that doesn't agree with type of define __size32 of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local edx has type __size32 that doesn't agree with type of define void of a library, why?
local ecx has type void that doesn't agree with type of define /*signed?*/int of a library, why?
local edx has type void that doesn't agree with type of define unsigned int of a library, why?
local ecx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local edx has type unsigned int that doesn't agree with type of define void of a library, why?
dest is not lib
call:   18 {*v** eax_1, *32* ecx, *u32* edx, *v* esp} := CALL LoadLibraryA(
                *LPCSTR* local5 := "kernel32.dll"
              )
              Reaching definitions: r27=r27{0},   r28=r28{0} - 60,   r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 12]=m[r28{0} - 12]{0},
                m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 28]=m[r28{0} - 28]{0},   m[r28{0} - 44]=r27{0},
                m[r28{0} - 48]=r30{0},   m[r28{0} - 52]=r31{0},   m[r28{0} - 56]=0x404031,   m[r28{0} - 60]=%pc,
                m[r28{0} - 72]=m[r28{0} - 72]{0},   m[r28{0} - 80]=m[r28{0} - 80]{0},   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 36, r28{0} - 40 ),   %ZF=(r28{0} - 40) = 0,   %CF=(r28{0} - 4) <u 36
              Live variables: eax_1 in proc main
result:    0 *v** eax_1 := -
dest is not lib
call:   71 {*32* eax, *32* esi, *32* ecx, *32* edx, *v** ebx_2, *v* esp, *32* edi} := CALL proc1(
                *i32* local3 := local3
                *u32* local4 := local4
                *v** local6 := eax_1
                *u32* local7 :=  *u32*0xd713ce4d
              )
              Reaching definitions: r24=r24{620} - 4,   r25=(m[r28{0} - 16]{0} - r25{46}) + 0x1fac,   r26=r26{57},
                r27=r24{18},   r28=r28{0} - 64,   r29=r28{0} - 4,   r30=m[r28{0} - 16]{0},
                r31=m[r28{0} - 16]{0} + 0x1c7a,   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},
                m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{0},
                m[r28{0} - 12]=r26{57},   m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 28]=m[r28{0} - 28]{0},
                m[r28{0} - 44]=r27{0},   m[r28{0} - 48]=r30{0},   m[r28{0} - 52]=r31{0},   m[r28{0} - 56]=0xd713ce4d,
                m[r28{0} - 60]=r24{18},   m[r28{0} - 64]=%pc,   m[r28{0} - 72]=m[r28{0} - 72]{0},
                m[r28{0} - 80]=m[r28{0} - 80]{0},   tmp1=r24{620},   %flags=SUBFLAGS32( r24{620}, 4, r24{620} - 4 ),
                %ZF=(r24{620} - 4) = 0,   %CF=r24{620} <u 4
              Live variables: eax,  ebx_2 in proc main
result:    0 *32* eax := -
result:    0 *v** ebx_2 := -
dest is not lib
call:  109 {*32* eax, *32* esi, *32* ecx, *32* edx, *v** ebx_3, *v* esp, *32* edi} := CALL proc1(
                *i32* local3 := local3
                *u32* local4 := local4
                *v** local6 := ebx_2
                *u32* local7 := 0xb9dfc2c
              )
              Reaching definitions: r24=r24{89} >> r26{95},   r25=r26{95},   r26=r26{95},   r27=r27{71},
                r28=r28{0} - 64,   r29=r28{0} - 4,   r30=r30{78} >> (m[r28{0} - 8]{0} + 0x542),   r31=r31{71},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 12]=r26{57},
                m[r28{0} - 16]=r24{89} >> r26{95},   m[r28{0} - 28]=m[r28{0} - 28]{0},   m[r28{0} - 44]=r27{0},
                m[r28{0} - 48]=r30{0},   m[r28{0} - 52]=r31{0},   m[r28{0} - 56]=0xb9dfc2c,   m[r28{0} - 60]=r27{71},
                m[r28{0} - 64]=%pc,   m[r28{0} - 72]=m[r28{0} - 72]{0},   m[r28{0} - 80]=m[r28{0} - 80]{0},
                tmp1=r24{89},   %flags=SHRFLAGS32( r24{89} >> r26{95}, r24{89}, r26{95} ),
                %ZF=SHRFLAGS32( r24{89} >> r26{95}, r24{89}, r26{95} ),
                %CF=SHRFLAGS32( r24{89} >> r26{95}, r24{89}, r26{95} )
              Live variables: eax,  ebx_3 in proc main
result:    0 *32* eax := -
result:    0 *v** ebx_3 := -
dest is not lib
call:  128 {*32* eax, *j32* esi, *j32* ecx, *u32* edx, *v** ebx_4, *v* esp, *j32* edi} := CALL proc1(
                *i32* local3 := local3
                *u32* local4 := local4
                *v** local6 := ebx_3
                *u32* local7 := 0x1ae82e17
              )
              Reaching definitions: r24=r24{629} + 4,   r25=r25{109},   r26=r26{109},   r27=r27{109},   r28=r28{0} - 64
                r29=r28{0} - 4,   r30=r30{109},   r31=r31{109},   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=0,   m[r28{0} - 12]=r26{57},   m[r28{0} - 16]=r24{89} >> r26{95},
                m[r28{0} - 28]=m[r28{0} - 28]{0},   m[r28{0} - 44]=r27{0},   m[r28{0} - 48]=r30{0},
                m[r28{0} - 52]=r31{0},   m[r28{0} - 56]=0x1ae82e17,   m[r28{0} - 60]=r27{109},   m[r28{0} - 64]=%pc,
                m[r28{0} - 72]=m[r28{0} - 72]{0},   m[r28{0} - 80]=m[r28{0} - 80]{0},   tmp1=r24{629} - 2,
                %flags=SUBFLAGS32( r24{629} + 4, 6, r24{629} - 2 ),   %ZF=(r24{629} - 2) = 0,   %CF=(r24{629} + 4) <u 6
              Live variables: eax,  ebx_4 in proc main
result:    0 *32* eax := -
result:    0 *v** ebx_4 := -
dest is not lib
call:  179 {*32* eax, *32* esi, *32* ecx, *32* edx, *v** ebx_5, *v* esp, *32* edi} := CALL proc1(
                *i32* local3 := local3
                *u32* local4 := local4
                *v** local6 := ebx_4
                *u32* local7 := 0x3b3f710d
              )
              Reaching definitions: r24=r24{634} + 2,   r25=(r30{139} & r31{144}) & r31{157},   r26=r26{163},
                r27=r27{128},   r28=r28{0} - 64,   r29=r28{0} - 4,   r30=r30{139} & r31{144},   r31=r31{157},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r26{163},   m[r28{0} - 12]=r26{57},
                m[r28{0} - 16]=r24{89} >> r26{95},   m[r28{0} - 28]=m[r28{0} - 28]{0},   m[r28{0} - 44]=r27{0},
                m[r28{0} - 48]=r30{0},   m[r28{0} - 52]=r31{0},   m[r28{0} - 56]=0x3b3f710d,   m[r28{0} - 60]=r27{128},
                m[r28{0} - 64]=%pc,   m[r28{0} - 72]=m[r28{0} - 72]{0},   m[r28{0} - 80]=m[r28{0} - 80]{0},
                tmp1=r24{634} - 1,   %flags=SUBFLAGS32( r24{634} + 2, 3, r24{634} - 1 ),   %ZF=(r24{634} - 1) = 0,
                %CF=(r24{634} + 2) <u 3
              Live variables: eax,  ebx_5 in proc main
result:    0 *32* eax := -
result:    0 *v** ebx_5 := -
dest is not lib
call:  201 {*32* eax, *32* esi, *32* ecx, *32* edx, *v** ebx_6, *v* esp, *32* edi} := CALL proc1(
                *i32* local3 := local3
                *u32* local4 := local4
                *v** local6 := ebx_5
                *u32* local7 := 0x3b3f590d
              )
              Reaching definitions: r24=r24{191},   r25=r25{179},   r26=(r26{163} + r26{163}) + 77,   r27=r27{179},
                r28=r28{0} - 64,   r29=r28{0} - 4,   r30=r30{179},   r31=r31{179},   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=r26{163},   m[r28{0} - 12]=r24{191},   m[r28{0} - 16]=r24{89} >> r26{95},
                m[r28{0} - 28]=m[r28{0} - 28]{0},   m[r28{0} - 44]=r27{0},   m[r28{0} - 48]=r30{0},
                m[r28{0} - 52]=r31{0},   m[r28{0} - 56]=0x3b3f590d,   m[r28{0} - 60]=r27{179},   m[r28{0} - 64]=%pc,
                m[r28{0} - 72]=m[r28{0} - 72]{0},   m[r28{0} - 80]=m[r28{0} - 80]{0},   tmp1=r26{57},
                %flags=LOGICALFLAGS32( r24{191} ),   %ZF=LOGICALFLAGS32( r24{191} ),   %CF=LOGICALFLAGS32( r24{191} )
              Live variables: eax,  ebx_6 in proc main
result:    0 *32* eax := -
result:    0 *v** ebx_6 := -
dest is not lib
call:  221 {*32* eax, *j32* esi, *32* ecx, *j32* edx, *v** ebx_7, *v* esp, *u32* edi} := CALL proc1(
                *i32* local3 := local3
                *u32* local4 := local4
                *v** local6 := ebx_6
                *u32* local7 :=  *u32*0xbc0afbb2
              )
              Reaching definitions: r24=r24{643} + 2,   r25=r25{201},
                r26=((r24{89} >> r26{95}) + (r24{89} >> r26{95})) + 114,   r27=r27{201},   r28=r28{0} - 64,
                r29=r28{0} - 4,   r30=r30{201},   r31=r31{201},   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 8]{207},   m[r28{0} - 12]=r24{191},   m[r28{0} - 16]=r24{89} >> r26{95},
                m[r28{0} - 28]=m[r28{0} - 28]{0},   m[r28{0} - 44]=r27{0},   m[r28{0} - 48]=r30{0},
                m[r28{0} - 52]=r31{0},   m[r28{0} - 56]=0xbc0afbb2,   m[r28{0} - 60]=r27{201},   m[r28{0} - 64]=%pc,
                m[r28{0} - 72]=m[r28{0} - 72]{0},   m[r28{0} - 80]=m[r28{0} - 80]{0},   tmp1=r24{643} - 8,
                %flags=SUBFLAGS32( r24{643} + 2, 10, r24{643} - 8 ),   %ZF=(r24{643} - 8) = 0,
                %CF=(r24{643} + 2) <u 10
              Live variables: eax,  ebx_7 in proc main
result:    0 *32* eax := -
result:    0 *v** ebx_7 := -
dest is not lib
call:  259 {*32* eax, *32* esi, *32* ecx, *u32* edx, *v** ebx_8, *v* esp, *32* edi} := CALL proc1(
                *i32* local3 := local3
                *u32* local4 := local4
                *v** local6 := ebx_7
                *u32* local7 := 0x171cd349
              )
              Reaching definitions: r24=r24{649} - 2,   r25=(m[r28{0} - 8]{207} * 4) + 0x44a,   r26=r26{243} | r30{238}
                r27=r27{221},   r28=r28{0} - 64,   r29=r28{0} - 4,   r30=r30{238},
                r31=m[r28{0} - 28]{226} + (m[r28{0} - 8]{207} * 8),   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 8]{207},   m[r28{0} - 12]=r24{191},   m[r28{0} - 16]=r26{243} | r30{238},
                m[r28{0} - 28]=m[r28{0} - 28]{226},   m[r28{0} - 44]=r27{0},   m[r28{0} - 48]=r30{0},
                m[r28{0} - 52]=r31{0},   m[r28{0} - 56]=0x171cd349,   m[r28{0} - 60]=r27{221},   m[r28{0} - 64]=%pc,
                m[r28{0} - 72]=m[r28{0} - 72]{0},   m[r28{0} - 80]=m[r28{0} - 80]{0},   tmp1=r24{649},
                %flags=SUBFLAGS32( r24{649}, 2, r24{649} - 2 ),   %ZF=(r24{649} - 2) = 0,   %CF=r24{649} <u 2
              Live variables: eax,  ebx_8 in proc main
result:    0 *32* eax := -
result:    0 *v** ebx_8 := -
dest is not lib
call:  287 {*32* eax, *32* esi, *u32* ecx, *u32* edx, *32* ebx_9, *v* esp, *32* edi_3} := CALL proc1(
                *i32* local3 := local3
                *u32* local4 := local4
                *v** local6 := ebx_8
                *u32* local7 := 0xf2ec4af
              )
              Reaching definitions: r24=r24{658} + 3,   r25=(m[r28{0} - 12]{738} + m[r28{0} - 12]{738}) + 36,
                r26=r26{271},   r27=r27{259},   r28=r28{0} - 64,   r29=r28{0} - 4,   r30=r30{259},   r31=r31{259},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{207},   m[r28{0} - 12]=r26{271},
                m[r28{0} - 16]=r26{243} | r30{238},   m[r28{0} - 28]=m[r28{0} - 28]{226},   m[r28{0} - 44]=r27{0},
                m[r28{0} - 48]=r30{0},   m[r28{0} - 52]=r31{0},   m[r28{0} - 56]=0xf2ec4af,   m[r28{0} - 60]=r27{259},
                m[r28{0} - 64]=%pc,   m[r28{0} - 72]=m[r28{0} - 72]{0},   m[r28{0} - 80]=m[r28{0} - 80]{0},
                tmp1=r24{658} - 5,   %flags=SUBFLAGS32( r24{658} + 3, 8, r24{658} - 5 ),   %ZF=(r24{658} - 5) = 0,
                %CF=(r24{658} + 3) <u 8
              Live variables: eax,  ebx_9,  edi_3,  esi in proc main
result:    0 *32* eax := -
result:    0 *32* esi := -
result:    0 *32* ebx_9 := -
result:    0 *32* edi_3 := -
dest is not lib
call:  335 {*32* eax, *32* esi, *32* ecx, *32* edx, *32* ebx, *v* esp, *32* edi} := CALL proc1(
                *i32* m[esp_1 - 28] := m[esp_1 - 28]
                *u32* m[esp_1 - 20] := m[esp_1 - 20]
                *v** m[esp_1 - 8] := m[esp_1 - 8]
                *u32* m[esp_1 - 4] := m[esp_1 - 4]
              )
              Reaching definitions: r24=r24{672} - 3,   r25=(r25{319} + r25{319}) + 0x109e,   r26=r26{321},
                r27=r24{309},   r28=r28{309} - 12,   r29=r29{309},   r30=r30{309},   r31=r31{309},
                m[r28{0} + 4]=m[r28{0} + 4]{309},   m[r28{0} + 8]=m[r28{0} + 8]{309},
                m[r28{0} + 12]=m[r28{0} + 12]{309},   m[r28{0} - 4]=m[r28{0} - 4]{309},
                m[r28{0} - 8]=m[r28{0} - 8]{309},   m[r28{0} - 12]=m[r28{0} - 12]{309},
                m[r28{0} - 16]=m[r28{0} - 16]{309},   m[r28{0} - 28]=m[r28{0} - 28]{309},
                m[r28{0} - 44]=m[r28{0} - 44]{309},   m[r28{0} - 48]=m[r28{0} - 48]{309},
                m[r28{0} - 52]=m[r28{0} - 52]{309},   m[r28{0} - 56]=m[r28{0} - 56]{309},
                m[r28{0} - 60]=m[r28{0} - 60]{309},   m[r28{0} - 64]=m[r28{0} - 64]{309},
                m[r28{0} - 4]=m[r28{0} - 4]{309},   m[r28{0} - 8]=m[r28{0} - 8]{309},
                m[r28{0} - 12]=m[r28{0} - 12]{309},   m[r28{0} - 16]=m[r28{0} - 16]{309},
                m[r28{0} - 28]=m[r28{0} - 28]{309},   m[r28{0} - 44]=m[r28{0} - 44]{309},
                m[r28{0} - 48]=m[r28{0} - 48]{309},   m[r28{0} - 52]=m[r28{0} - 52]{309},
                m[r28{0} - 56]=m[r28{0} - 56]{309},   m[r28{0} - 60]=m[r28{0} - 60]{309},
                m[r28{0} - 64]=m[r28{0} - 64]{309},   m[r28{0} - 72]=m[r28{0} - 72]{309},
                m[r28{0} - 80]=m[r28{0} - 80]{309},   <all>=<all>{309},   tmp1=r24{672},
                %flags=SUBFLAGS32( r24{672}, 3, r24{672} - 3 ),   %ZF=(r24{672} - 3) = 0,   %CF=r24{672} <u 3
              Live variables: eax,  ebx in proc main
result:    0 *32* eax := -
result:    0 *32* ebx := -
dest is not lib
call:  351 {*32* eax, *32* esi, *32* ecx, *j32* edx, *32* ebx, *v* esp, *32* edi} := CALL proc1(
                *i32* m[esp_1 - 28] := m[esp_1 - 28]
                *u32* m[esp_1 - 20] := m[esp_1 - 20]
                *v** m[esp_1 - 8] := m[esp_1 - 8]
                *u32* m[esp_1 - 4] := m[esp_1 - 4]
              )
              Reaching definitions: r24=r24{679} - 5,   r25=r25{335},   r26=r26{335},   r27=r27{335},
                r28=r28{309} - 12,   r29=r29{309},   r30=r30{335},   r31=r31{335},   m[r28{0} + 4]=m[r28{0} + 4]{309},
                m[r28{0} + 8]=m[r28{0} + 8]{309},   m[r28{0} + 12]=m[r28{0} + 12]{309},
                m[r28{0} - 4]=m[r28{0} - 4]{309},   m[r28{0} - 8]=m[r28{0} - 8]{309},
                m[r28{0} - 12]=m[r28{0} - 12]{309},   m[r28{0} - 16]=m[r28{0} - 16]{309},
                m[r28{0} - 28]=m[r28{0} - 28]{309},   m[r28{0} - 44]=m[r28{0} - 44]{309},
                m[r28{0} - 48]=m[r28{0} - 48]{309},   m[r28{0} - 52]=m[r28{0} - 52]{309},
                m[r28{0} - 56]=m[r28{0} - 56]{309},   m[r28{0} - 60]=m[r28{0} - 60]{309},
                m[r28{0} - 64]=m[r28{0} - 64]{309},   m[r28{0} - 4]=m[r28{0} - 4]{309},
                m[r28{0} - 8]=m[r28{0} - 8]{309},   m[r28{0} - 12]=m[r28{0} - 12]{309},
                m[r28{0} - 16]=m[r28{0} - 16]{309},   m[r28{0} - 28]=m[r28{0} - 28]{309},
                m[r28{0} - 44]=m[r28{0} - 44]{309},   m[r28{0} - 48]=m[r28{0} - 48]{309},
                m[r28{0} - 52]=m[r28{0} - 52]{309},   m[r28{0} - 56]=m[r28{0} - 56]{309},
                m[r28{0} - 60]=m[r28{0} - 60]{309},   m[r28{0} - 64]=m[r28{0} - 64]{309},
                m[r28{0} - 72]=m[r28{0} - 72]{309},   m[r28{0} - 80]=m[r28{0} - 80]{309},   <all>=<all>{309},
                tmp1=r24{679},   %flags=SUBFLAGS32( r24{679}, 5, r24{679} - 5 ),   %ZF=(r24{679} - 5) = 0,
                %CF=r24{679} <u 5
              Live variables: eax,  ebx in proc main
result:    0 *32* eax := -
result:    0 *32* ebx := -
dest is not lib
call:  378 {*32* eax, *32* esi, *j32* ecx, *j32* edx, *32* ebx, *v* esp, *j32* edi} := CALL proc1(
                *i32* m[esp_1 - 28] := m[esp_1 - 28]
                *u32* m[esp_1 - 20] := m[esp_1 - 20]
                *v** m[esp_1 - 8] := m[esp_1 - 8]
                *u32* m[esp_1 - 4] := m[esp_1 - 4]
              )
              Reaching definitions: r24=r24{684} - 4,   r25=r26{354} + r26{354},   r26=r26{362} & (r25{358} + r25{358})
                r27=r27{351},   r28=r28{309} - 12,   r29=r29{309},   r30=r25{358} + r25{358},   r31=r31{351},
                m[r28{0} + 4]=m[r28{0} + 4]{309},   m[r28{0} + 8]=m[r28{0} + 8]{309},
                m[r28{0} + 12]=m[r28{0} + 12]{309},   m[r28{0} - 4]=m[r28{0} - 4]{309},
                m[r28{0} - 8]=m[r28{0} - 8]{309},   m[r28{0} - 12]=m[r28{0} - 12]{309},
                m[r28{0} - 16]=m[r28{0} - 16]{309},   m[r28{0} - 28]=m[r28{0} - 28]{309},
                m[r28{0} - 44]=m[r28{0} - 44]{309},   m[r28{0} - 48]=m[r28{0} - 48]{309},
                m[r28{0} - 52]=m[r28{0} - 52]{309},   m[r28{0} - 56]=m[r28{0} - 56]{309},
                m[r28{0} - 60]=m[r28{0} - 60]{309},   m[r28{0} - 64]=m[r28{0} - 64]{309},
                m[r28{0} - 4]=m[r28{0} - 4]{309},   m[r28{0} - 8]=m[r28{0} - 8]{309},
                m[r28{0} - 12]=m[r28{0} - 12]{309},   m[r28{0} - 16]=m[r28{0} - 16]{309},
                m[r28{0} - 28]=m[r28{0} - 28]{309},   m[r28{0} - 44]=m[r28{0} - 44]{309},
                m[r28{0} - 48]=m[r28{0} - 48]{309},   m[r28{0} - 52]=m[r28{0} - 52]{309},
                m[r28{0} - 56]=m[r28{0} - 56]{309},   m[r28{0} - 60]=m[r28{0} - 60]{309},
                m[r28{0} - 64]=m[r28{0} - 64]{309},   m[r28{0} - 72]=m[r28{0} - 72]{309},
                m[r28{0} - 80]=m[r28{0} - 80]{309},   <all>=<all>{309},   tmp1=r24{684},
                %flags=SUBFLAGS32( r24{684}, 4, r24{684} - 4 ),   %ZF=(r24{684} - 4) = 0,   %CF=r24{684} <u 4
              Live variables: eax,  ebx in proc main
result:    0 *32* eax := -
result:    0 *32* ebx := -
dest is not lib
call:  417 {*32* eax, *j32* esi, *j32* ecx, *j32* edx, *32* ebx, *v* esp, *j32* edi} := CALL proc1(
                *i32* m[esp_1 - 28] := m[esp_1 - 28]
                *u32* m[esp_1 - 20] := m[esp_1 - 20]
                *v** m[esp_1 - 8] := m[esp_1 - 8]
                *u32* m[esp_1 - 4] := m[esp_1 - 4]
              )
              Reaching definitions: r24=r24{692} + 4,   r25=r30{386} ^ r31{392},   r26=r26{399} | (r30{386} ^ r31{392})
                r27=r27{378},   r28=r28{309} - 12,   r29=r29{309},   r30=r26{382} + 0x14fc,   r31=r31{392},
                m[r28{0} + 4]=m[r28{0} + 4]{309},   m[r28{0} + 8]=m[r28{0} + 8]{309},
                m[r28{0} + 12]=m[r28{0} + 12]{309},   m[r28{0} - 4]=m[r28{0} - 4]{309},
                m[r28{0} - 8]=m[r28{0} - 8]{309},   m[r28{0} - 12]=m[r28{0} - 12]{309},
                m[r28{0} - 16]=m[r28{0} - 16]{309},   m[r28{0} - 28]=m[r28{0} - 28]{309},
                m[r28{0} - 44]=m[r28{0} - 44]{309},   m[r28{0} - 48]=m[r28{0} - 48]{309},
                m[r28{0} - 52]=m[r28{0} - 52]{309},   m[r28{0} - 56]=m[r28{0} - 56]{309},
                m[r28{0} - 60]=m[r28{0} - 60]{309},   m[r28{0} - 64]=m[r28{0} - 64]{309},
                m[r28{0} - 4]=m[r28{0} - 4]{309},   m[r28{0} - 8]=m[r28{0} - 8]{309},
                m[r28{0} - 12]=m[r28{0} - 12]{309},   m[r28{0} - 16]=m[r28{0} - 16]{309},
                m[r28{0} - 28]=m[r28{0} - 28]{309},   m[r28{0} - 44]=m[r28{0} - 44]{309},
                m[r28{0} - 48]=m[r28{0} - 48]{309},   m[r28{0} - 52]=m[r28{0} - 52]{309},
                m[r28{0} - 56]=m[r28{0} - 56]{309},   m[r28{0} - 60]=m[r28{0} - 60]{309},
                m[r28{0} - 64]=m[r28{0} - 64]{309},   m[r28{0} - 72]=m[r28{0} - 72]{309},
                m[r28{0} - 80]=m[r28{0} - 80]{309},   <all>=<all>{309},   tmp1=r24{692} - 2,
                %flags=SUBFLAGS32( r24{692} + 4, 6, r24{692} - 2 ),   %ZF=(r24{692} - 2) = 0,   %CF=(r24{692} + 4) <u 6
              Live variables: eax,  ebx in proc main
result:    0 *32* eax := -
result:    0 *32* ebx := -
dest is not lib
call:  479 {*32* eax, *32* esi, *32* ecx, *32* edx, *32* ebx, *v* esp, *32* edi} := CALL proc1(
                *i32* m[esp_1 - 28] := m[esp_1 - 28]
                *u32* m[esp_1 - 20] := m[esp_1 - 20]
                *v** m[esp_1 - 8] := m[esp_1 - 8]
                *u32* m[esp_1 - 4] := m[esp_1 - 4]
              )
              Reaching definitions: r24=r24{701} + 4,   r25=r25{458},   r26=r26{463},   r27=r27{417},
                r28=r28{309} - 12,   r29=r29{309},   r30=r30{436},   r31=r31{448} << (r25{450} * 8),
                m[r28{0} + 4]=m[r28{0} + 4]{309},   m[r28{0} + 8]=m[r28{0} + 8]{309},
                m[r28{0} + 12]=m[r28{0} + 12]{309},   m[r28{0} - 4]=m[r28{0} - 4]{309},
                m[r28{0} - 8]=m[r28{0} - 8]{309},   m[r28{0} - 12]=m[r28{0} - 12]{309},
                m[r28{0} - 16]=m[r28{0} - 16]{309},   m[r28{0} - 28]=m[r28{0} - 28]{309},
                m[r28{0} - 44]=m[r28{0} - 44]{309},   m[r28{0} - 48]=m[r28{0} - 48]{309},
                m[r28{0} - 52]=m[r28{0} - 52]{309},   m[r28{0} - 56]=m[r28{0} - 56]{309},
                m[r28{0} - 60]=m[r28{0} - 60]{309},   m[r28{0} - 64]=m[r28{0} - 64]{309},
                m[r28{0} - 4]=m[r28{0} - 4]{309},   m[r28{0} - 8]=m[r28{0} - 8]{309},
                m[r28{0} - 12]=m[r28{0} - 12]{309},   m[r28{0} - 16]=m[r28{0} - 16]{309},
                m[r28{0} - 28]=m[r28{0} - 28]{309},   m[r28{0} - 44]=m[r28{0} - 44]{309},
                m[r28{0} - 48]=m[r28{0} - 48]{309},   m[r28{0} - 52]=m[r28{0} - 52]{309},
                m[r28{0} - 56]=m[r28{0} - 56]{309},   m[r28{0} - 60]=m[r28{0} - 60]{309},
                m[r28{0} - 64]=m[r28{0} - 64]{309},   m[r28{0} - 72]=m[r28{0} - 72]{309},
                m[r28{0} - 80]=m[r28{0} - 80]{309},   <all>=<all>{309},   tmp1=r24{701} - 6,
                %flags=SUBFLAGS32( r24{701} + 4, 10, r24{701} - 6 ),   %ZF=(r24{701} - 6) = 0,
                %CF=(r24{701} + 4) <u 10
              Live variables: eax,  ebx,  ecx,  edi,  esi in proc main
result:    0 *32* eax := -
result:    0 *32* esi := -
result:    0 *32* ecx := -
result:    0 *32* ebx := -
result:    0 *32* edi := -
dest is not lib
call:  542 {*32* eax, *32* esi, *u32* ecx, *j32* edx, *32* ebx, *v* esp, *32* edi} := CALL proc1(
                *i32* local8 := m[esp - 28]
                *u32* m[esp - 20] := m[esp - 20]
                *v** m[esp - 8] := m[esp - 8]
                *u32* local14 := m[esp - 4]
              )
              Reaching definitions: r24=r24{716} - 2,   r25=(r25{502} + r25{502}) + 0x94b,   r26=r26{526} | r31{509},
                r27=r24{496},   r28=r28{496} - 12,   r29=r29{496},   r30=r25{502} + r25{502},   r31=r31{509},
                m[r28{0} + 4]=m[r28{0} + 4]{496},   m[r28{0} + 8]=m[r28{0} + 8]{496},
                m[r28{0} + 12]=m[r28{0} + 12]{496},   m[r28{0} - 4]=m[r28{0} - 4]{496},
                m[r28{0} - 8]=m[r28{0} - 8]{496},   m[r28{0} - 12]=m[r28{0} - 12]{496},
                m[r28{0} - 16]=m[r28{0} - 16]{496},   m[r28{0} - 28]=m[r28{0} - 28]{496},
                m[r28{0} - 44]=m[r28{0} - 44]{496},   m[r28{0} - 48]=m[r28{0} - 48]{496},
                m[r28{0} - 52]=m[r28{0} - 52]{496},   m[r28{0} - 56]=m[r28{0} - 56]{496},
                m[r28{0} - 60]=m[r28{0} - 60]{496},   m[r28{0} - 64]=m[r28{0} - 64]{496},
                m[r28{0} - 4]=m[r28{0} - 4]{496},   m[r28{0} - 8]=m[r28{0} - 8]{496},
                m[r28{0} - 12]=m[r28{0} - 12]{496},   m[r28{0} - 16]=m[r28{0} - 16]{496},
                m[r28{0} - 28]=m[r28{0} - 28]{496},   m[r28{0} - 44]=m[r28{0} - 44]{496},
                m[r28{0} - 48]=m[r28{0} - 48]{496},   m[r28{0} - 52]=m[r28{0} - 52]{496},
                m[r28{0} - 56]=m[r28{0} - 56]{496},   m[r28{0} - 60]=m[r28{0} - 60]{496},
                m[r28{0} - 64]=m[r28{0} - 64]{496},   m[r28{0} - 72]=m[r28{0} - 72]{496},
                m[r28{0} - 80]=m[r28{0} - 80]{496},   <all>=<all>{496},   tmp1=r24{716},
                %flags=SUBFLAGS32( r24{716}, 2, r24{716} - 2 ),   %ZF=(r24{716} - 2) = 0,   %CF=r24{716} <u 2
              Live variables: eax in proc main
result:    0 *32* eax := -
dest is not lib
call:  569 {*v* eax, *32* esi, *v* ecx, *v* edx, *32* ebx, *32** esp, *32** ebp, *32* edi} := CALL proc2(
                *32* m[esp - 20] := m[esp - 20]
                *u32* local0 := m[esp - 12]
              )
              Reaching definitions: r24=r24{725} + 4,   r25=r25{554},   r26=(r26{546} * 10) - r25{554},   r27=r27{542},
                r28=r28{496} - 4,   r29=r29{496},   r30=r30{542},   r31=r31{542},   m[r28{0} + 4]=m[r28{0} + 4]{496},
                m[r28{0} + 8]=m[r28{0} + 8]{496},   m[r28{0} + 12]=m[r28{0} + 12]{496},
                m[r28{0} - 4]=m[r28{0} - 4]{496},   m[r28{0} - 8]=m[r28{0} - 8]{496},
                m[r28{0} - 12]=m[r28{0} - 12]{496},   m[r28{0} - 16]=m[r28{0} - 16]{496},
                m[r28{0} - 28]=m[r28{0} - 28]{496},   m[r28{0} - 44]=m[r28{0} - 44]{496},
                m[r28{0} - 48]=m[r28{0} - 48]{496},   m[r28{0} - 52]=m[r28{0} - 52]{496},
                m[r28{0} - 56]=m[r28{0} - 56]{496},   m[r28{0} - 60]=m[r28{0} - 60]{496},
                m[r28{0} - 64]=m[r28{0} - 64]{496},   m[r28{0} - 4]=m[r28{0} - 4]{496},
                m[r28{0} - 8]=m[r28{0} - 8]{496},   m[r28{0} - 12]=m[r28{0} - 12]{496},
                m[r28{0} - 16]=m[r28{0} - 16]{496},   m[r28{0} - 28]=m[r28{0} - 28]{496},
                m[r28{0} - 44]=m[r28{0} - 44]{496},   m[r28{0} - 48]=m[r28{0} - 48]{496},
                m[r28{0} - 52]=m[r28{0} - 52]{496},   m[r28{0} - 56]=m[r28{0} - 56]{496},
                m[r28{0} - 60]=m[r28{0} - 60]{496},   m[r28{0} - 64]=m[r28{0} - 64]{496},
                m[r28{0} - 72]=m[r28{0} - 72]{496},   m[r28{0} - 80]=m[r28{0} - 80]{496},   <all>=<all>{496},
                tmp1=r24{725} - 5,   %flags=SUBFLAGS32( r24{725} + 4, 9, r24{725} - 5 ),   %ZF=(r24{725} - 5) = 0,
                %CF=(r24{725} + 4) <u 9
              Live variables: ebp in proc main
result:    0 *32** ebp := -
dest is not lib
call:   79 {*u32* eax, *u32* ecx, *v* edx} := CALL StgCreateStorageEx(
              )
              Reaching definitions: r24=r24{236} + 3,   r25=r25{28},   r26=m[r28{0} - 8]{0} * 8,   r27=m[r28{0} + 4]{0}
                r28=r28{0} - 96,   r29=r28{0} - 4,   r30=m[r28{0} + 8]{0},   r31=r24{37} + m[r28{0} + 4]{0},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 12]=m[r28{0} - 12]{53},   m[r28{0} - 16]=r25{28},
                m[r28{0} - 20]=r24{42} + m[r28{0} + 4]{0},   m[r28{0} - 32]=m[r28{0} - 32]{0},
                m[r28{0} - 36]=m[r28{0} - 36]{0},   m[r28{0} - 40]=m[r28{0} - 40]{0},
                m[r28{0} - 48]=m[r28{0} - 48]{0},   m[r28{0} - 52]=r27{0},   m[r28{0} - 56]=r30{0},
                m[r28{0} - 60]=r31{0},   m[r28{0} - 64]=0,   m[r28{0} - 68]=0,   m[r28{0} - 72]=0,   m[r28{0} - 76]=0,
                m[r28{0} - 80]=0,   m[r28{0} - 84]=0,   m[r28{0} - 88]=0,   m[r28{0} - 92]=0,   m[r28{0} - 96]=%pc,
                tmp1=r24{236} - 2,   tmpb=tmpb{0},   %flags=SUBFLAGS32( r24{236} + 3, 5, r24{236} - 2 ),
                %ZF=(r24{236} - 2) = 0,   %CF=(r24{236} + 3) <u 5
              Live variables: eax,  ecx in proc proc1
result:    0 *u32* eax := -
result:    0 *u32* ecx := -
dest is not lib
call:   22 {*32* eax, *v* ecx, *32* edx, *v* esp} := CALL GetModuleFileNameA(
                *HMODULE* local0 := 0
                *LPSTR* local1 := 0x405ac0
                *DWORD* local2 := 260
              )
              Reaching definitions: r27=r27{0},   r28=r28{0} - 96,   r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 12]=m[r28{0} - 12]{0},
                m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 36]=m[r28{0} - 36]{0},   m[r28{0} - 72]=r27{0},
                m[r28{0} - 76]=r30{0},   m[r28{0} - 80]=r31{0},   m[r28{0} - 84]=260,   m[r28{0} - 88]=0x405ac0,
                m[r28{0} - 92]=0,   m[r28{0} - 96]=%pc,   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 64, r28{0} - 68 ),   %ZF=(r28{0} - 68) = 0,   %CF=(r28{0} - 4) <u 64
              Live variables:  in proc proc2
dest is not lib
call:   38 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL lstrcpyA(
              )
              Reaching definitions: r24=r24{620} - 5,   r25=r25{22},   r26=(m[r28{0} - 8]{0} + m[r28{0} - 8]{0}) + 211,
                r27=r27{0},   r28=r28{0} - 92,   r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 12]=m[r28{0} - 12]{26},   m[r28{0} - 16]=m[r28{0} - 16]{0}
                m[r28{0} - 36]=m[r28{0} - 36]{0},   m[r28{0} - 72]=r27{0},   m[r28{0} - 76]=r30{0},
                m[r28{0} - 80]=r31{0},   m[r28{0} - 84]=0x40400c,   m[r28{0} - 88]=0x405bc4,   m[r28{0} - 92]=%pc,
                m[r28{0} - 96]=%pc,   tmp1=r24{620},   %flags=SUBFLAGS32( r24{620}, 5, r24{620} - 5 ),
                %ZF=(r24{620} - 5) = 0,   %CF=r24{620} <u 5
              Live variables:  in proc proc2
dest is not lib
call:   80 {*32* eax, *j32* ecx, *u32* edx, *v* esp} := CALL lstrcatA(
                *LPSTR* local4 := 0x405bc4
                *LPSTR* local5 := 0x405ac0
              )
              Reaching definitions: r24=r24{70},   r25=r25{61},   r26=m[r28{0} - 16]{0} + m[r28{0} - 16]{0},
                r27=r27{52},   r28=r28{0} - 100,   r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 12]=m[r28{0} - 12]{26},   m[r28{0} - 16]=r24{70},
                m[r28{0} - 36]=m[r28{0} - 36]{0},   m[r28{0} - 72]=r27{0},   m[r28{0} - 76]=r30{0},
                m[r28{0} - 80]=r31{0},   m[r28{0} - 84]=0x40400c,   m[r28{0} - 88]=0x405bc4,   m[r28{0} - 92]=0x405ac0,
                m[r28{0} - 96]=0x405bc4,   m[r28{0} - 100]=%pc,   tmp1=m[r28{0} - 16]{0},
                %flags=LOGICALFLAGS32( r24{70} ),   %ZF=LOGICALFLAGS32( r24{70} ),   %CF=LOGICALFLAGS32( r24{70} )
              Live variables:  in proc proc2
dest is not lib
call:  192 {*32* eax_4, *v* ecx, *v* edx, *v* esp} := CALL GetModuleHandleA(
              )
              Reaching definitions: r24=r24{180},   r25=m[r28{0} - 8]{0} + m[r28{0} - 8]{0},
                r26=m[r28{0} - 8]{0} + m[r28{0} - 8]{0},   r27=r24{70} * 4,   r28=r28{0} - 96,   r29=r28{0} - 4,
                r30=(r26{130} + r26{130}) + 80,   r31=r31{102},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 12]=r24{180} * 4,   m[r28{0} - 16]=r24{166},
                m[r28{0} - 36]=m[r28{0} - 36]{0},   m[r28{0} - 72]=r27{0},   m[r28{0} - 76]=r30{0},
                m[r28{0} - 80]=r31{0},   m[r28{0} - 84]=0x40400c,   m[r28{0} - 88]=0x405bc4,   m[r28{0} - 92]=0,
                m[r28{0} - 96]=%pc,   m[r28{0} - 100]=%pc,   tmp1=r24{180},
                %flags=SALFLAGS32( m[r28{0} - 12], r24{180}, 2 ),   %ZF=SALFLAGS32( m[r28{0} - 12], r24{180}, 2 ),
                %CF=SALFLAGS32( m[r28{0} - 12], r24{180}, 2 )
              Live variables: eax_4 in proc proc2
result:    0 *32* eax_4 := -
