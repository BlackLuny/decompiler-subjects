INFO  holdec.an - ### holdec 1.1 Copyright 2003-2012 Raimar Falke
INFO  holdec.an - Using ./malware_via_email/malware_0729/ia32_pe/subject.exe as executable
INFO  holdec.fG - Detected PE (Portable Executable)
INFO  holdec.ks - wrote ./malware_via_email/malware_0729/ia32_pe/subject.exe.info
INFO  holdec.fG - disassembleAndWrite: start a new loop with 1 extra block starts
INFO  holdec.fG - disassembleAndWrite: running multiline
INFO  holdec.ks - wrote ./malware_via_email/malware_0729/ia32_pe/subject.exe.info
INFO  holdec.ks - wrote ./malware_via_email/malware_0729/ia32_pe/subject.exe.info
INFO  holdec.fG - disassembleAndWrite: found no new addresses. will stop now.
INFO  holdec.ks - wrote ./malware_via_email/malware_0729/ia32_pe/subject.exe.info
INFO  holdec.ks - wrote ./malware_via_email/malware_0729/ia32_pe/subject.exe.info
INFO  holdec.fG - reading all asm lines ...
INFO  holdec.fG - ... read 1849 asm lines
WARN  holdec.w - Address 003e3000.0 is excluded by the address filter. Maybe outside text section?
INFO  holdec.an - will decompile 27 functions
WARN  holdec.ag - Referencing unknown line 003e1ea7.0
WARN  holdec.ag - Referencing unknown line 003e1f8e.0
WARN  holdec.ag - Referencing unknown line 003e1f12.0
WARN  holdec.ag - Referencing unknown line 003e1f12.0
WARN  holdec.ag - Referencing unknown line 003e1125.0
WARN  holdec.ag - Referencing unknown line 003e10b2.0
WARN  holdec.ac - Block 10 is already known to have a starting stack offset of -56 but when called from 9 it has an offset of -48
WARN  holdec.ac - Block 6 is already known to have a starting stack offset of -48 but when called from 10 it has an offset of -56
WARN  holdec.ac - Block 1 is already known to have a starting stack offset of -44 but when called from 11 it has an offset of -48
WARN  holdec.ac - Block 1 is already known to have a starting stack offset of -8 but when called from 3 it has an offset of -28
WARN  holdec.ac - Block 1 is already known to have a starting stack offset of -8 but when called from 3 it has an offset of -28
WARN  holdec.d - may result in wrong values
WARN  holdec.d -   reg_pp7 = PHI(reg_var12, reg_var10) in Block1
WARN  holdec.d -   reg_var12 = ADD(reg_pp7, -20) in Block3
WARN  holdec.ag - Referencing unknown line 003e12a7.0
WARN  holdec.ag - Referencing unknown line 003e1270.0
WARN  holdec.d - may result in wrong values
WARN  holdec.d -   reg_pp5 = PHI(reg_12_local1, reg_12_local2) in Block2
WARN  holdec.d -   reg_12_local2 = ADD(reg_pp5, 2) in Block1
WARN  holdec.ag - Referencing unknown line 003e1b30.0
WARN  holdec.ag - Referencing unknown line 003e12df.0
WARN  holdec.ag - Referencing unknown line 003e1424.0
WARN  holdec.ag - Referencing unknown line 003e1424.0
WARN  holdec.ag - Referencing unknown line 003e1000.0
WARN  holdec.ag - Referencing unknown line 003e101e.0
WARN  holdec.ag - Referencing unknown line 003e1b40.0
WARN  holdec.ag - Referencing unknown line 003e1000.0
WARN  holdec.ag - Referencing unknown line 003e1139.0
WARN  holdec.ag - Referencing unknown line 003e1cd1.0
WARN  holdec.ac - Block 10 is already known to have a starting stack offset of -52 but when called from 3 it has an offset of -68
WARN  holdec.ac - Block 10 is already known to have a starting stack offset of -68 but when called from 5 it has an offset of -84
WARN  holdec.ac - Block 10 is already known to have a starting stack offset of -84 but when called from 9 it has an offset of -112
WARN  holdec.ac - Block 1 is already known to have a starting stack offset of -12 but when called from 3 it has an offset of -28
WARN  holdec.d - may result in wrong values
WARN  holdec.d -   reg_pp5 = PHI(reg_0_local0, reg_0_local3) in Block1
WARN  holdec.d -   reg_0_local3 = LOAD(ADD(reg_pp5, 8)) in Block2
WARN  holdec.ag - Referencing unknown line 003e1dda.0
WARN  holdec.ag - Referencing unknown line 003e15fa.0
WARN  holdec.ag - Referencing unknown line 003e15fa.0
WARN  holdec.ag - Referencing unknown line 003e15fa.0
WARN  holdec.ag - Referencing unknown line 003e15b4.0
WARN  holdec.ag - Referencing unknown line 003e1de1.0
WARN  holdec.ac - Block 9 is already known to have a starting stack offset of -220 but when called from 8 it has an offset of -224
WARN  holdec.ac - Block 3 is already known to have a starting stack offset of -196 but when called from 2 it has an offset of -224
WARN  holdec.ac - Block 11 is already known to have a starting stack offset of -196 but when called from 10 it has an offset of -200
INFO  holdec.eI -   pass generate SSA took too long: 2.396sec.
WARN  holdec.ag - Referencing unknown line 003e1678.0
WARN  holdec.ag - Referencing unknown line 003e1440.0
WARN  holdec.ag - Referencing unknown line 003e1ea7.0
WARN  holdec.d - may result in wrong values
WARN  holdec.d -   reg_pp8 = PHI(reg_36_local0, reg_36_local1) in Block2
WARN  holdec.d -   reg_36_local1 = ADD(reg_pp8, 1) in Block1
WARN  holdec.ag - Referencing unknown line 003e1c09.0
WARN  holdec.ac - Block 2 is already known to have a starting stack offset of -32 but when called from 1 it has an offset of -48
ERROR holdec.ie - Caught an Exception while trying to construct regions. Will dump blocks and regions (if available).
java.lang.RuntimeException: Block 1 contains 2 default jumps.
	at holdec.af.d(Unknown Source)
	at holdec.u.a(Unknown Source)
	at holdec.ie.o(Unknown Source)
	at holdec.ie.b(Unknown Source)
	at holdec.ie.a(Unknown Source)
	at holdec.dQ.e(Unknown Source)
	at holdec.eQ.a(Unknown Source)
	at holdec.eI.a(Unknown Source)
	at holdec.dQ.a(Unknown Source)
	at holdec.fG.a(Unknown Source)
	at holdec.an.a(Unknown Source)
	at holdec.an.<init>(Unknown Source)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:532)
	at holdec.Holdec.main(Unknown Source)
WARN  holdec.ag - Referencing unknown line 003e1d70.0
WARN  holdec.ag - Referencing unknown line 003e1d70.0
WARN  holdec.ag - Referencing unknown line 003e200c.0
WARN  holdec.ag - Referencing unknown line 003e200c.0
WARN  holdec.ag - Referencing unknown line 003e200c.0
