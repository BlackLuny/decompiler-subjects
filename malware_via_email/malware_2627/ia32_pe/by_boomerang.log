ERROR: attempted to decode outside any known segment 0x410bfc
Unknown library function GetCurrentProcessId
Unknown library function CreateFileA
Unknown library function GetModuleHandleA
Unknown library function GetACP
Unknown library function GetProcessHeap
Unknown library function GetFileType
Unknown library function GetCurrentThreadId
Unknown library function VirtualProtect
Unknown library function GetVersion
finding final parameters for proc14
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 4 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 52 to local table
in proc _start adding addrExp r28{0} - 56 to local table
in proc _start adding addrExp r28{0} - 60 to local table
in proc _start adding addrExp r28{0} - 64 to local table
in proc _start adding addrExp r28{0} - 68 to local table
in proc _start adding addrExp r28{0} - 72 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 72 to local table
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 72 to local table
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 72 to local table
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 76 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffb4 existing type unsigned int but added type HANDLE
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 72 to local table
in proc _start adding addrExp r28{0} - 72 to local table
in proc _start adding addrExp r28{0} - 76 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffb4 existing type unsigned int but added type HANDLE
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28{0} - 16 to local table
TYPE ERROR: Existing type at address 0xfffffff0 is not structure or array type
in proc _start adding addrExp r28{0} - 24 to local table
TYPE ERROR: Existing type at address 0xffffffe8 is not structure or array type
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 36 to local table
TYPE ERROR: Existing type at address 0xffffffdc is not structure or array type
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 52 to local table
in proc _start adding addrExp r28{0} - 56 to local table
in proc _start adding addrExp r28{0} - 60 to local table
in proc _start adding addrExp r28{0} - 64 to local table
in proc _start adding addrExp r28{0} - 68 to local table
in proc _start adding addrExp r28{0} - 72 to local table
in proc _start adding addrExp r28{0} - 76 to local table
TYPE ERROR: Existing type at address 0xffffffb4 is not structure or array type
in proc _start adding addrExp r28{0} - 80 to local table
TYPE ERROR: Existing type at address 0xffffffb0 is not structure or array type
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28{0} - 16 to local table
TYPE ERROR: Existing type at address 0xfffffff0 is not structure or array type
in proc _start adding addrExp r28{0} - 24 to local table
TYPE ERROR: Existing type at address 0xffffffe8 is not structure or array type
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 36 to local table
TYPE ERROR: Existing type at address 0xffffffdc is not structure or array type
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 52 to local table
in proc _start adding addrExp r28{0} - 56 to local table
in proc _start adding addrExp r28{0} - 60 to local table
in proc _start adding addrExp r28{0} - 64 to local table
in proc _start adding addrExp r28{0} - 68 to local table
in proc _start adding addrExp r28{0} - 72 to local table
in proc _start adding addrExp r28{0} - 76 to local table
TYPE ERROR: Existing type at address 0xffffffb4 is not structure or array type
in proc _start adding addrExp r28{0} - 80 to local table
TYPE ERROR: Existing type at address 0xffffffb0 is not structure or array type
finding final parameters for _start
potential param r28
found new parameter r28
potential param r29
found new parameter r29
potential param m[r28{0} - 16]
found new parameter m[r28{0} - 16]
potential param m[r28{0} - 24]
found new parameter m[r28{0} - 24]
potential param m[r28{0} - 36]
found new parameter m[r28{0} - 36]
potential param m[r28{0} - 76]
found new parameter m[r28{0} - 76]
potential param m[r28{0} - 80]
found new parameter m[r28{0} - 80]
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
in proc _start adding addrExp r28{0} - 16 to local table
TYPE ERROR: Existing type at address 0xfffffff0 is not structure or array type
in proc _start adding addrExp r28{0} - 24 to local table
TYPE ERROR: Existing type at address 0xffffffe8 is not structure or array type
in proc _start adding addrExp r28{0} - 36 to local table
TYPE ERROR: Existing type at address 0xffffffdc is not structure or array type
in proc _start adding addrExp r28{0} - 76 to local table
TYPE ERROR: Existing type at address 0xffffffb4 is not structure or array type
in proc _start adding addrExp r28{0} - 80 to local table
TYPE ERROR: Existing type at address 0xffffffb0 is not structure or array type
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 52 to local table
in proc _start adding addrExp r28{0} - 56 to local table
in proc _start adding addrExp r28{0} - 60 to local table
in proc _start adding addrExp r28{0} - 64 to local table
in proc _start adding addrExp r28{0} - 68 to local table
in proc _start adding addrExp r28{0} - 72 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28{0} - 16 to local table
TYPE ERROR: Existing type at address 0xfffffff0 is not structure or array type
in proc _start adding addrExp r28{0} - 24 to local table
TYPE ERROR: Existing type at address 0xffffffe8 is not structure or array type
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 36 to local table
TYPE ERROR: Existing type at address 0xffffffdc is not structure or array type
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 52 to local table
in proc _start adding addrExp r28{0} - 56 to local table
in proc _start adding addrExp r28{0} - 60 to local table
in proc _start adding addrExp r28{0} - 64 to local table
in proc _start adding addrExp r28{0} - 68 to local table
in proc _start adding addrExp r28{0} - 72 to local table
in proc _start adding addrExp r28{0} - 76 to local table
TYPE ERROR: Existing type at address 0xffffffb4 is not structure or array type
in proc _start adding addrExp r28{0} - 80 to local table
TYPE ERROR: Existing type at address 0xffffffb0 is not structure or array type
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28{0} - 16 to local table
TYPE ERROR: Existing type at address 0xfffffff0 is not structure or array type
in proc _start adding addrExp r28{0} - 24 to local table
TYPE ERROR: Existing type at address 0xffffffe8 is not structure or array type
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 36 to local table
TYPE ERROR: Existing type at address 0xffffffdc is not structure or array type
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 52 to local table
in proc _start adding addrExp r28{0} - 56 to local table
in proc _start adding addrExp r28{0} - 60 to local table
in proc _start adding addrExp r28{0} - 64 to local table
in proc _start adding addrExp r28{0} - 68 to local table
in proc _start adding addrExp r28{0} - 72 to local table
in proc _start adding addrExp r28{0} - 76 to local table
TYPE ERROR: Existing type at address 0xffffffb4 is not structure or array type
in proc _start adding addrExp r28{0} - 80 to local table
TYPE ERROR: Existing type at address 0xffffffb0 is not structure or array type
finding final parameters for _start
potential param r28
found new parameter r28
potential param r29
found new parameter r29
potential param m[r28{0} - 16]
found new parameter m[r28{0} - 16]
potential param m[r28{0} - 24]
found new parameter m[r28{0} - 24]
potential param m[r28{0} - 36]
found new parameter m[r28{0} - 36]
potential param m[r28{0} - 76]
found new parameter m[r28{0} - 76]
potential param m[r28{0} - 80]
found new parameter m[r28{0} - 80]
local eax has type HANDLE that doesn't agree with type of define __size32 of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local eax has type __size32 that doesn't agree with type of define HANDLE of a library, why?
local eax has type HANDLE that doesn't agree with type of define __size32 of a library, why?
local eax has type __size32 that doesn't agree with type of define HANDLE of a library, why?
local eax has type HANDLE that doesn't agree with type of define __size32 of a library, why?
WARNING: CHLLCode::appendTypeIdent: declaring type void as int for param1
WARNING: CHLLCode::appendTypeIdent: declaring type void as int for param2
WARNING: CHLLCode::appendTypeIdent: declaring type void as int for param3
WARNING: CHLLCode::appendTypeIdent: declaring type void as int for param4
WARNING: CHLLCode::appendTypeIdent: declaring type void as int for param5
WARNING: CHLLCode::appendTypeIdent: declaring type void as int for param1
WARNING: CHLLCode::appendTypeIdent: declaring type void as int for param2
WARNING: CHLLCode::appendTypeIdent: declaring type void as int for param3
WARNING: CHLLCode::appendTypeIdent: declaring type void as int for param4
WARNING: CHLLCode::appendTypeIdent: declaring type void as int for param5
dest is not lib
call:   10 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetCurrentProcessId(
              )
              Reaching definitions: r28=r28{0} - 40,   r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},
                m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 24]=m[r28{0} - 24]{0},
                m[r28{0} - 36]=m[r28{0} - 36]{0},   m[r28{0} - 40]=%pc,   m[r28{0} - 76]=m[r28{0} - 76]{0},
                m[r28{0} - 80]=m[r28{0} - 80]{0},   tmp1=r28{0} - 4,   %flags=SUBFLAGS32( r28{0} - 4, 32, r28{0} - 36 )
                %ZF=(r28{0} - 36) = 0,   %CF=(r28{0} - 4) <u 32
              Live variables:  in proc _start
dest is not lib
call:   30 {*HANDLE* eax_2, *v* ecx, *v* edx, *v** esp_1} := CALL CreateFileA(
              )
              Reaching definitions: r24=r24{10},   r25=r25{10},   r26=r26{10},   r28=r28{0} - 72,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 24]=m[r28{0} - 24]{0},
                m[r28{0} - 36]=m[r28{0} - 36]{0},   m[r28{0} - 40]=0x435e7e,   m[r28{0} - 44]=0,   m[r28{0} - 48]=2,
                m[r28{0} - 52]=3,   m[r28{0} - 56]=0,   m[r28{0} - 60]=6,   m[r28{0} - 64]=0,   m[r28{0} - 68]=0x435e88
                m[r28{0} - 72]=%pc,   m[r28{0} - 76]=m[r28{0} - 76]{0},   m[r28{0} - 80]=m[r28{0} - 80]{0},
                tmp1=r28{0} - 4,   %flags=SUBFLAGS32( r28{0} - 4, 32, r28{0} - 36 ),   %ZF=(r28{0} - 36) = 0,
                %CF=(r28{0} - 4) <u 32
              Live variables: eax_2,  esp_1 in proc _start
result:    0 *HANDLE* eax_2 := -
result:    0 *v** esp_1 := -
dest is not lib
call:   38 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetCommandLineA(
              )
              Reaching definitions: r24=r24{30},   r25=r25{30},   r26=r26{30},   r28=r28{0} - 72,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 24]=m[r28{0} - 24]{0},
                m[r28{0} - 28]=r24{30},   m[r28{0} - 36]=m[r28{0} - 36]{0},   m[r28{0} - 40]=0x435e7e,
                m[r28{0} - 44]=0,   m[r28{0} - 48]=2,   m[r28{0} - 52]=3,   m[r28{0} - 56]=0,   m[r28{0} - 60]=6,
                m[r28{0} - 64]=0,   m[r28{0} - 68]=0x435e88,   m[r28{0} - 72]=%pc,   m[r28{0} - 76]=m[r28{0} - 76]{0},
                m[r28{0} - 80]=m[r28{0} - 80]{0},   tmp1=r24{30} + 1,   %flags=SUBFLAGS32( r24{30}, -1, r24{30} + 1 ),
                %ZF=(r24{30} + 1) = 0,   %CF=r24{30} <u -1
              Live variables: eax in proc _start
result:    0 *32* eax := -
dest is not lib
call:   43 {*HANDLE* eax, *v* ecx, *v* edx, *v* esp} := CALL GetModuleHandleA(
              )
              Reaching definitions: r24=r24{38},   r25=r25{38},   r26=r26{38},   r28=r28{0} - 72,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 16]=r24{38},   m[r28{0} - 24]=m[r28{0} - 24]{0},
                m[r28{0} - 28]=r24{30},   m[r28{0} - 36]=m[r28{0} - 36]{0},   m[r28{0} - 40]=0x435e7e,
                m[r28{0} - 44]=0,   m[r28{0} - 48]=2,   m[r28{0} - 52]=3,   m[r28{0} - 56]=0,   m[r28{0} - 60]=6,
                m[r28{0} - 64]=0,   m[r28{0} - 68]=0x435e88,   m[r28{0} - 72]=%pc,   m[r28{0} - 76]=m[r28{0} - 76]{0},
                m[r28{0} - 80]=m[r28{0} - 80]{0},   tmp1=r24{30} + 1,   %flags=SUBFLAGS32( r24{30}, -1, r24{30} + 1 ),
                %ZF=(r24{30} + 1) = 0,   %CF=r24{30} <u -1
              Live variables: eax in proc _start
result:    0 *HANDLE* eax := -
dest is not lib
call:   50 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetCurrentProcessId(
              )
              Reaching definitions: r24=r24{43},   r25=r25{43},   r26=r26{43},   r28=r28{0} - 76,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 16]=r24{38},   m[r28{0} - 24]=r24{43},   m[r28{0} - 28]=r24{30},
                m[r28{0} - 36]=m[r28{0} - 36]{0},   m[r28{0} - 40]=0x435e7e,   m[r28{0} - 44]=0,   m[r28{0} - 48]=2,
                m[r28{0} - 52]=3,   m[r28{0} - 56]=0,   m[r28{0} - 60]=6,   m[r28{0} - 64]=0,   m[r28{0} - 68]=0x435e88
                m[r28{0} - 72]=0x435e93,   m[r28{0} - 76]=%pc,   m[r28{0} - 80]=m[r28{0} - 80]{0},   tmp1=r24{30} + 1,
                %flags=SUBFLAGS32( r24{30}, -1, r24{30} + 1 ),   %ZF=(r24{30} + 1) = 0,   %CF=r24{30} <u -1
              Live variables:  in proc _start
dest is not lib
call:   54 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetCommandLineW(
              )
              Reaching definitions: r24=r24{50},   r25=r25{50},   r26=r26{50},   r28=r28{0} - 76,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 16]=r24{38},   m[r28{0} - 24]=r24{43},   m[r28{0} - 28]=r24{30},
                m[r28{0} - 36]=m[r28{0} - 36]{0},   m[r28{0} - 40]=0x435e7e,   m[r28{0} - 44]=0,   m[r28{0} - 48]=2,
                m[r28{0} - 52]=3,   m[r28{0} - 56]=0,   m[r28{0} - 60]=6,   m[r28{0} - 64]=0,   m[r28{0} - 68]=0x435e88
                m[r28{0} - 72]=0x435e93,   m[r28{0} - 76]=%pc,   m[r28{0} - 80]=m[r28{0} - 80]{0},   tmp1=r24{30} + 1,
                %flags=SUBFLAGS32( r24{30}, -1, r24{30} + 1 ),   %ZF=(r24{30} + 1) = 0,   %CF=r24{30} <u -1
              Live variables:  in proc _start
dest is not lib
call:   60 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetACP(
              )
              Reaching definitions: r24=r24{54},   r25=r25{54},   r26=r26{54},   r28=r28{0} - 80,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 16]=r24{38},   m[r28{0} - 24]=r24{43},   m[r28{0} - 28]=r24{30},
                m[r28{0} - 36]=m[r28{0} - 36]{0},   m[r28{0} - 40]=0x435e7e,   m[r28{0} - 44]=0,   m[r28{0} - 48]=2,
                m[r28{0} - 52]=3,   m[r28{0} - 56]=0,   m[r28{0} - 60]=6,   m[r28{0} - 64]=0,   m[r28{0} - 68]=0x435e88
                m[r28{0} - 72]=0x435e93,   m[r28{0} - 76]=r24{43},   m[r28{0} - 80]=%pc,   tmp1=r24{30} + 1,
                %flags=SUBFLAGS32( r24{30}, -1, r24{30} + 1 ),   %ZF=(r24{30} + 1) = 0,   %CF=r24{30} <u -1
              Live variables:  in proc _start
dest is not lib
call:   64 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local11 := eax
                *c** local12 := "ZwGetDevicePowerState"
              )
              Reaching definitions: r24=r24{60},   r25=r25{60},   r26=r26{60},   r28=r28{0} - 80,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 16]=r24{38},   m[r28{0} - 24]=r24{43},   m[r28{0} - 28]=r24{30},
                m[r28{0} - 36]=m[r28{0} - 36]{0},   m[r28{0} - 40]=0x435e7e,   m[r28{0} - 44]=0,   m[r28{0} - 48]=2,
                m[r28{0} - 52]=3,   m[r28{0} - 56]=0,   m[r28{0} - 60]=6,   m[r28{0} - 64]=0,   m[r28{0} - 68]=0x435e88
                m[r28{0} - 72]=0x435e93,   m[r28{0} - 76]=r24{43},   m[r28{0} - 80]=%pc,   tmp1=r24{30} + 1,
                %flags=SUBFLAGS32( r24{30}, -1, r24{30} + 1 ),   %ZF=(r24{30} + 1) = 0,   %CF=r24{30} <u -1
              Live variables: eax in proc _start
result:    0 *32* eax := -
dest is not lib
call:   69 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcessHeap(
              )
              Reaching definitions: r24=r24{64},   r25=r25{64},   r26=r26{64},   r28=r28{0} - 72,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 16]=r24{38},   m[r28{0} - 24]=r24{43},   m[r28{0} - 28]=r24{30},
                m[r28{0} - 36]=r24{64},   m[r28{0} - 40]=0x435e7e,   m[r28{0} - 44]=0,   m[r28{0} - 48]=2,
                m[r28{0} - 52]=3,   m[r28{0} - 56]=0,   m[r28{0} - 60]=6,   m[r28{0} - 64]=0,   m[r28{0} - 68]=0x435e88
                m[r28{0} - 72]=%pc,   m[r28{0} - 76]=r24{43},   m[r28{0} - 80]=%pc,   tmp1=r24{30} + 1,
                %flags=SUBFLAGS32( r24{30}, -1, r24{30} + 1 ),   %ZF=(r24{30} + 1) = 0,   %CF=r24{30} <u -1
              Live variables:  in proc _start
dest is not lib
call:   77 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL CloseHandle(
                *HANDLE* local11 := eax_2
              )
              Reaching definitions: r24=r24{69},   r25=r25{69},   r26=r26{69},   r28=r28{0} - 80,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 16]=r24{38},   m[r28{0} - 24]=r24{43},   m[r28{0} - 28]=r24{30},
                m[r28{0} - 36]=r24{64},   m[r28{0} - 40]=0x435e7e,   m[r28{0} - 44]=0,   m[r28{0} - 48]=2,
                m[r28{0} - 52]=3,   m[r28{0} - 56]=0,   m[r28{0} - 60]=6,   m[r28{0} - 64]=0,   m[r28{0} - 68]=0x435e88
                m[r28{0} - 72]=0,   m[r28{0} - 76]=r24{30},   m[r28{0} - 80]=%pc,   tmp1=r24{30} + 1,
                %flags=SUBFLAGS32( r24{30}, -1, r24{30} + 1 ),   %ZF=(r24{30} + 1) = 0,   %CF=r24{30} <u -1
              Live variables:  in proc _start
dest is not lib
call:   83 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcessHeap(
              )
              Reaching definitions: r24=r24{77},   r25=r25{77},   r26=r26{77},   r28=r28{0} - 80,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 16]=r24{38},   m[r28{0} - 24]=r24{43},   m[r28{0} - 28]=r24{30},
                m[r28{0} - 36]=r24{64},   m[r28{0} - 40]=0x435e7e,   m[r28{0} - 44]=0,   m[r28{0} - 48]=2,
                m[r28{0} - 52]=3,   m[r28{0} - 56]=0,   m[r28{0} - 60]=6,   m[r28{0} - 64]=0,   m[r28{0} - 68]=0x435e88
                m[r28{0} - 72]=0,   m[r28{0} - 76]=0,   m[r28{0} - 80]=%pc,   tmp1=r24{30} + 1,
                %flags=SUBFLAGS32( r24{30}, -1, r24{30} + 1 ),   %ZF=(r24{30} + 1) = 0,   %CF=r24{30} <u -1
              Live variables: eax,  ecx,  edx in proc _start
result:    0 *32* eax := -
result:    0 *v* ecx := -
result:    0 *v* edx := -
dest is not lib
call:  102 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcessHeap(
              )
              Reaching definitions: r24=r24{98},   r25=r25{98},   r26=r26{98},   r28=r28{98} - 4,   r29=r29{98},
                m[r28{0} - 4]=m[r28{0} - 4]{98},   m[r28{0} - 16]=m[r28{0} - 16]{98},
                m[r28{0} - 24]=m[r28{0} - 24]{98},   m[r28{0} - 28]=m[r28{0} - 28]{98},
                m[r28{0} - 36]=m[r28{0} - 36]{98},   m[r28{0} - 40]=m[r28{0} - 40]{98},
                m[r28{0} - 44]=m[r28{0} - 44]{98},   m[r28{0} - 48]=m[r28{0} - 48]{98},
                m[r28{0} - 52]=m[r28{0} - 52]{98},   m[r28{0} - 56]=m[r28{0} - 56]{98},
                m[r28{0} - 60]=m[r28{0} - 60]{98},   m[r28{0} - 64]=m[r28{0} - 64]{98},
                m[r28{0} - 68]=m[r28{0} - 68]{98},   m[r28{0} - 72]=m[r28{0} - 72]{98},
                m[r28{0} - 76]=m[r28{0} - 76]{98},   m[r28{0} - 80]=m[r28{0} - 80]{98},
                m[r28{0} - 4]=m[r28{0} - 4]{98},   m[r28{0} - 16]=m[r28{0} - 16]{98},
                m[r28{0} - 24]=m[r28{0} - 24]{98},   m[r28{0} - 28]=m[r28{0} - 28]{98},
                m[r28{0} - 36]=m[r28{0} - 36]{98},   m[r28{0} - 40]=m[r28{0} - 40]{98},
                m[r28{0} - 44]=m[r28{0} - 44]{98},   m[r28{0} - 48]=m[r28{0} - 48]{98},
                m[r28{0} - 52]=m[r28{0} - 52]{98},   m[r28{0} - 56]=m[r28{0} - 56]{98},
                m[r28{0} - 60]=m[r28{0} - 60]{98},   m[r28{0} - 64]=m[r28{0} - 64]{98},
                m[r28{0} - 68]=m[r28{0} - 68]{98},   m[r28{0} - 72]=m[r28{0} - 72]{98},
                m[r28{0} - 76]=m[r28{0} - 76]{98},   m[r28{0} - 80]=m[r28{0} - 80]{98},   <all>=<all>{98},
                tmp1=tmp1{98},   %flags=%flags{98},   %ZF=%ZF{98},   %CF=%CF{98}
              Live variables:  in proc _start
dest is not lib
call:  108 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetFileType(
              )
              Reaching definitions: r24=r24{102},   r25=r25{102},   r26=r26{102},   r28=r28{98} - 8,   r29=r29{98},
                m[r28{0} - 4]=m[r28{0} - 4]{98},   m[r28{0} - 16]=m[r28{0} - 16]{98},
                m[r28{0} - 24]=m[r28{0} - 24]{98},   m[r28{0} - 28]=m[r28{0} - 28]{98},
                m[r28{0} - 36]=m[r28{0} - 36]{98},   m[r28{0} - 40]=m[r28{0} - 40]{98},
                m[r28{0} - 44]=m[r28{0} - 44]{98},   m[r28{0} - 48]=m[r28{0} - 48]{98},
                m[r28{0} - 52]=m[r28{0} - 52]{98},   m[r28{0} - 56]=m[r28{0} - 56]{98},
                m[r28{0} - 60]=m[r28{0} - 60]{98},   m[r28{0} - 64]=m[r28{0} - 64]{98},
                m[r28{0} - 68]=m[r28{0} - 68]{98},   m[r28{0} - 72]=m[r28{0} - 72]{98},
                m[r28{0} - 76]=m[r28{0} - 76]{98},   m[r28{0} - 80]=m[r28{0} - 80]{98},
                m[r28{0} - 4]=m[r28{0} - 4]{98},   m[r28{0} - 16]=m[r28{0} - 16]{98},
                m[r28{0} - 24]=m[r28{0} - 24]{98},   m[r28{0} - 28]=m[r28{0} - 28]{98},
                m[r28{0} - 36]=m[r28{0} - 36]{98},   m[r28{0} - 40]=m[r28{0} - 40]{98},
                m[r28{0} - 44]=m[r28{0} - 44]{98},   m[r28{0} - 48]=m[r28{0} - 48]{98},
                m[r28{0} - 52]=m[r28{0} - 52]{98},   m[r28{0} - 56]=m[r28{0} - 56]{98},
                m[r28{0} - 60]=m[r28{0} - 60]{98},   m[r28{0} - 64]=m[r28{0} - 64]{98},
                m[r28{0} - 68]=m[r28{0} - 68]{98},   m[r28{0} - 72]=m[r28{0} - 72]{98},
                m[r28{0} - 76]=m[r28{0} - 76]{98},   m[r28{0} - 80]=m[r28{0} - 80]{98},   <all>=<all>{98},
                tmp1=tmp1{98},   %flags=%flags{98},   %ZF=%ZF{98},   %CF=%CF{98}
              Live variables:  in proc _start
dest is not lib
call:  115 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcessHeap(
              )
              Reaching definitions: r24=r29{98} - 16,   r25=r25{108},   r26=r26{108},   r28=r28{98} - 12,   r29=r29{98}
                m[r28{0} - 4]=m[r28{0} - 4]{98},   m[r28{0} - 16]=m[r28{0} - 16]{98},
                m[r28{0} - 24]=m[r28{0} - 24]{98},   m[r28{0} - 28]=m[r28{0} - 28]{98},
                m[r28{0} - 36]=m[r28{0} - 36]{98},   m[r28{0} - 40]=m[r28{0} - 40]{98},
                m[r28{0} - 44]=m[r28{0} - 44]{98},   m[r28{0} - 48]=m[r28{0} - 48]{98},
                m[r28{0} - 52]=m[r28{0} - 52]{98},   m[r28{0} - 56]=m[r28{0} - 56]{98},
                m[r28{0} - 60]=m[r28{0} - 60]{98},   m[r28{0} - 64]=m[r28{0} - 64]{98},
                m[r28{0} - 68]=m[r28{0} - 68]{98},   m[r28{0} - 72]=m[r28{0} - 72]{98},
                m[r28{0} - 76]=m[r28{0} - 76]{98},   m[r28{0} - 80]=m[r28{0} - 80]{98},
                m[r28{0} - 4]=m[r28{0} - 4]{98},   m[r28{0} - 16]=m[r28{0} - 16]{98},
                m[r28{0} - 24]=m[r28{0} - 24]{98},   m[r28{0} - 28]=m[r28{0} - 28]{98},
                m[r28{0} - 36]=m[r28{0} - 36]{98},   m[r28{0} - 40]=m[r28{0} - 40]{98},
                m[r28{0} - 44]=m[r28{0} - 44]{98},   m[r28{0} - 48]=m[r28{0} - 48]{98},
                m[r28{0} - 52]=m[r28{0} - 52]{98},   m[r28{0} - 56]=m[r28{0} - 56]{98},
                m[r28{0} - 60]=m[r28{0} - 60]{98},   m[r28{0} - 64]=m[r28{0} - 64]{98},
                m[r28{0} - 68]=m[r28{0} - 68]{98},   m[r28{0} - 72]=m[r28{0} - 72]{98},
                m[r28{0} - 76]=m[r28{0} - 76]{98},   m[r28{0} - 80]=m[r28{0} - 80]{98},   <all>=<all>{98},
                tmp1=tmp1{98},   %flags=%flags{98},   %ZF=%ZF{98},   %CF=%CF{98}
              Live variables:  in proc _start
dest is not lib
call:  119 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetCommandLineW(
              )
              Reaching definitions: r24=r24{115},   r25=r25{115},   r26=r26{115},   r28=r28{98} - 12,   r29=r29{98},
                m[r28{0} - 4]=m[r28{0} - 4]{98},   m[r28{0} - 16]=m[r28{0} - 16]{98},
                m[r28{0} - 24]=m[r28{0} - 24]{98},   m[r28{0} - 28]=m[r28{0} - 28]{98},
                m[r28{0} - 36]=m[r28{0} - 36]{98},   m[r28{0} - 40]=m[r28{0} - 40]{98},
                m[r28{0} - 44]=m[r28{0} - 44]{98},   m[r28{0} - 48]=m[r28{0} - 48]{98},
                m[r28{0} - 52]=m[r28{0} - 52]{98},   m[r28{0} - 56]=m[r28{0} - 56]{98},
                m[r28{0} - 60]=m[r28{0} - 60]{98},   m[r28{0} - 64]=m[r28{0} - 64]{98},
                m[r28{0} - 68]=m[r28{0} - 68]{98},   m[r28{0} - 72]=m[r28{0} - 72]{98},
                m[r28{0} - 76]=m[r28{0} - 76]{98},   m[r28{0} - 80]=m[r28{0} - 80]{98},
                m[r28{0} - 4]=m[r28{0} - 4]{98},   m[r28{0} - 16]=m[r28{0} - 16]{98},
                m[r28{0} - 24]=m[r28{0} - 24]{98},   m[r28{0} - 28]=m[r28{0} - 28]{98},
                m[r28{0} - 36]=m[r28{0} - 36]{98},   m[r28{0} - 40]=m[r28{0} - 40]{98},
                m[r28{0} - 44]=m[r28{0} - 44]{98},   m[r28{0} - 48]=m[r28{0} - 48]{98},
                m[r28{0} - 52]=m[r28{0} - 52]{98},   m[r28{0} - 56]=m[r28{0} - 56]{98},
                m[r28{0} - 60]=m[r28{0} - 60]{98},   m[r28{0} - 64]=m[r28{0} - 64]{98},
                m[r28{0} - 68]=m[r28{0} - 68]{98},   m[r28{0} - 72]=m[r28{0} - 72]{98},
                m[r28{0} - 76]=m[r28{0} - 76]{98},   m[r28{0} - 80]=m[r28{0} - 80]{98},   <all>=<all>{98},
                tmp1=tmp1{98},   %flags=%flags{98},   %ZF=%ZF{98},   %CF=%CF{98}
              Live variables:  in proc _start
dest is not lib
call:  125 {*32* eax, *v* ecx, *v* edx, *v** esp_4} := CALL GetCurrentThreadId(
              )
              Reaching definitions: r24=r24{119},   r25=r25{119},   r26=r26{119},   r28=r28{98} - 16,   r29=r29{98},
                m[r28{0} - 4]=m[r28{0} - 4]{98},   m[r28{0} - 16]=m[r28{0} - 16]{98},
                m[r28{0} - 24]=m[r28{0} - 24]{98},   m[r28{0} - 28]=m[r28{0} - 28]{98},
                m[r28{0} - 36]=m[r28{0} - 36]{98},   m[r28{0} - 40]=m[r28{0} - 40]{98},
                m[r28{0} - 44]=m[r28{0} - 44]{98},   m[r28{0} - 48]=m[r28{0} - 48]{98},
                m[r28{0} - 52]=m[r28{0} - 52]{98},   m[r28{0} - 56]=m[r28{0} - 56]{98},
                m[r28{0} - 60]=m[r28{0} - 60]{98},   m[r28{0} - 64]=m[r28{0} - 64]{98},
                m[r28{0} - 68]=m[r28{0} - 68]{98},   m[r28{0} - 72]=m[r28{0} - 72]{98},
                m[r28{0} - 76]=m[r28{0} - 76]{98},   m[r28{0} - 80]=m[r28{0} - 80]{98},
                m[r28{0} - 4]=m[r28{0} - 4]{98},   m[r28{0} - 16]=m[r28{0} - 16]{98},
                m[r28{0} - 24]=m[r28{0} - 24]{98},   m[r28{0} - 28]=m[r28{0} - 28]{98},
                m[r28{0} - 36]=m[r28{0} - 36]{98},   m[r28{0} - 40]=m[r28{0} - 40]{98},
                m[r28{0} - 44]=m[r28{0} - 44]{98},   m[r28{0} - 48]=m[r28{0} - 48]{98},
                m[r28{0} - 52]=m[r28{0} - 52]{98},   m[r28{0} - 56]=m[r28{0} - 56]{98},
                m[r28{0} - 60]=m[r28{0} - 60]{98},   m[r28{0} - 64]=m[r28{0} - 64]{98},
                m[r28{0} - 68]=m[r28{0} - 68]{98},   m[r28{0} - 72]=m[r28{0} - 72]{98},
                m[r28{0} - 76]=m[r28{0} - 76]{98},   m[r28{0} - 80]=m[r28{0} - 80]{98},   <all>=<all>{98},
                tmp1=tmp1{98},   %flags=%flags{98},   %ZF=%ZF{98},   %CF=%CF{98}
              Live variables: esp_4 in proc _start
result:    0 *v** esp_4 := -
dest is not lib
call:  139 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL VirtualProtect(
              )
              Reaching definitions: r24=r24{219},   r25=r25{220},   r26=r26{221},   r28=r28{222} - 8,   r29=r29{223},
                m[r28{0} - 4]=m[r28{0} - 4]{244},   m[r28{0} - 16]=m[r28{0} - 16]{245},
                m[r28{0} - 24]=m[r28{0} - 24]{246},   m[r28{0} - 28]=m[r28{0} - 28]{247},
                m[r28{0} - 36]=m[r28{0} - 36]{248},   m[r28{0} - 40]=m[r28{0} - 40]{249},
                m[r28{0} - 44]=m[r28{0} - 44]{250},   m[r28{0} - 48]=m[r28{0} - 48]{251},
                m[r28{0} - 52]=m[r28{0} - 52]{252},   m[r28{0} - 56]=m[r28{0} - 56]{253},
                m[r28{0} - 60]=m[r28{0} - 60]{254},   m[r28{0} - 64]=m[r28{0} - 64]{255},
                m[r28{0} - 68]=m[r28{0} - 68]{256},   m[r28{0} - 72]=m[r28{0} - 72]{257},
                m[r28{0} - 76]=m[r28{0} - 76]{258},   m[r28{0} - 80]=m[r28{0} - 80]{259},   tmp1=tmp1{224},
                %flags=%flags{225},   %ZF=%ZF{226},   %CF=%CF{227}
              Live variables:  in proc _start
dest is not lib
call:  143 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetCurrentProcessId(
              )
              Reaching definitions: r24=r24{139},   r25=r25{139},   r26=r26{139},   r28=r28{222} - 8,   r29=r29{223},
                m[r28{0} - 4]=m[r28{0} - 4]{244},   m[r28{0} - 16]=m[r28{0} - 16]{245},
                m[r28{0} - 24]=m[r28{0} - 24]{246},   m[r28{0} - 28]=m[r28{0} - 28]{247},
                m[r28{0} - 36]=m[r28{0} - 36]{248},   m[r28{0} - 40]=m[r28{0} - 40]{249},
                m[r28{0} - 44]=m[r28{0} - 44]{250},   m[r28{0} - 48]=m[r28{0} - 48]{251},
                m[r28{0} - 52]=m[r28{0} - 52]{252},   m[r28{0} - 56]=m[r28{0} - 56]{253},
                m[r28{0} - 60]=m[r28{0} - 60]{254},   m[r28{0} - 64]=m[r28{0} - 64]{255},
                m[r28{0} - 68]=m[r28{0} - 68]{256},   m[r28{0} - 72]=m[r28{0} - 72]{257},
                m[r28{0} - 76]=m[r28{0} - 76]{258},   m[r28{0} - 80]=m[r28{0} - 80]{259},   tmp1=tmp1{224},
                %flags=%flags{225},   %ZF=%ZF{226},   %CF=%CF{227}
              Live variables:  in proc _start
dest is not lib
call:  147 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetCurrentProcessId(
              )
              Reaching definitions: r24=r24{143},   r25=r25{143},   r26=r26{143},   r28=r28{222} - 8,   r29=r29{223},
                m[r28{0} - 4]=m[r28{0} - 4]{244},   m[r28{0} - 16]=m[r28{0} - 16]{245},
                m[r28{0} - 24]=m[r28{0} - 24]{246},   m[r28{0} - 28]=m[r28{0} - 28]{247},
                m[r28{0} - 36]=m[r28{0} - 36]{248},   m[r28{0} - 40]=m[r28{0} - 40]{249},
                m[r28{0} - 44]=m[r28{0} - 44]{250},   m[r28{0} - 48]=m[r28{0} - 48]{251},
                m[r28{0} - 52]=m[r28{0} - 52]{252},   m[r28{0} - 56]=m[r28{0} - 56]{253},
                m[r28{0} - 60]=m[r28{0} - 60]{254},   m[r28{0} - 64]=m[r28{0} - 64]{255},
                m[r28{0} - 68]=m[r28{0} - 68]{256},   m[r28{0} - 72]=m[r28{0} - 72]{257},
                m[r28{0} - 76]=m[r28{0} - 76]{258},   m[r28{0} - 80]=m[r28{0} - 80]{259},   tmp1=tmp1{224},
                %flags=%flags{225},   %ZF=%ZF{226},   %CF=%CF{227}
              Live variables:  in proc _start
dest is not lib
call:  153 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetACP(
              )
              Reaching definitions: r24=r24{147},   r25=r25{147},   r26=r26{147},   r28=r28{222} - 12,   r29=r29{223},
                m[r28{0} - 4]=m[r28{0} - 4]{244},   m[r28{0} - 16]=m[r28{0} - 16]{245},
                m[r28{0} - 24]=m[r28{0} - 24]{246},   m[r28{0} - 28]=m[r28{0} - 28]{247},
                m[r28{0} - 36]=m[r28{0} - 36]{248},   m[r28{0} - 40]=m[r28{0} - 40]{249},
                m[r28{0} - 44]=m[r28{0} - 44]{250},   m[r28{0} - 48]=m[r28{0} - 48]{251},
                m[r28{0} - 52]=m[r28{0} - 52]{252},   m[r28{0} - 56]=m[r28{0} - 56]{253},
                m[r28{0} - 60]=m[r28{0} - 60]{254},   m[r28{0} - 64]=m[r28{0} - 64]{255},
                m[r28{0} - 68]=m[r28{0} - 68]{256},   m[r28{0} - 72]=m[r28{0} - 72]{257},
                m[r28{0} - 76]=m[r28{0} - 76]{258},   m[r28{0} - 80]=m[r28{0} - 80]{259},   tmp1=tmp1{224},
                %flags=%flags{225},   %ZF=%ZF{226},   %CF=%CF{227}
              Live variables:  in proc _start
dest is not lib
call:  171 {*32* eax, *v* ecx, *v* edx, *v** esp_8} := CALL CreateFileA(
              )
              Reaching definitions: r24=r24{153},   r25=r25{153},   r26=r26{153},   r28=r28{222} - 40,   r29=r29{223},
                m[r28{0} - 4]=m[r28{0} - 4]{244},   m[r28{0} - 16]=m[r28{0} - 16]{245},
                m[r28{0} - 24]=m[r28{0} - 24]{246},   m[r28{0} - 28]=m[r28{0} - 28]{247},
                m[r28{0} - 36]=m[r28{0} - 36]{248},   m[r28{0} - 40]=m[r28{0} - 40]{249},
                m[r28{0} - 44]=m[r28{0} - 44]{250},   m[r28{0} - 48]=m[r28{0} - 48]{251},
                m[r28{0} - 52]=m[r28{0} - 52]{252},   m[r28{0} - 56]=m[r28{0} - 56]{253},
                m[r28{0} - 60]=m[r28{0} - 60]{254},   m[r28{0} - 64]=m[r28{0} - 64]{255},
                m[r28{0} - 68]=m[r28{0} - 68]{256},   m[r28{0} - 72]=m[r28{0} - 72]{257},
                m[r28{0} - 76]=m[r28{0} - 76]{258},   m[r28{0} - 80]=m[r28{0} - 80]{259},   tmp1=tmp1{224},
                %flags=%flags{225},   %ZF=%ZF{226},   %CF=%CF{227}
              Live variables: eax,  esp_8 in proc _start
result:    0 *32* eax := -
result:    0 *v** esp_8 := -
found seq with more than one outedge!
taken branch is first out edge
dest is not lib
call:  181 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetVersion(
              )
              Reaching definitions: r24=r24{171},   r25=r25{171},   r26=r26{171},   r28=r28{222} - 44,   r29=r29{223},
                m[r28{0} - 4]=m[r28{0} - 4]{244},   m[r28{0} - 16]=m[r28{0} - 16]{245},
                m[r28{0} - 24]=m[r28{0} - 24]{246},   m[r28{0} - 28]=m[r28{0} - 28]{247},
                m[r28{0} - 36]=m[r28{0} - 36]{248},   m[r28{0} - 40]=m[r28{0} - 40]{249},
                m[r28{0} - 44]=m[r28{0} - 44]{250},   m[r28{0} - 48]=m[r28{0} - 48]{251},
                m[r28{0} - 52]=m[r28{0} - 52]{252},   m[r28{0} - 56]=m[r28{0} - 56]{253},
                m[r28{0} - 60]=m[r28{0} - 60]{254},   m[r28{0} - 64]=m[r28{0} - 64]{255},
                m[r28{0} - 68]=m[r28{0} - 68]{256},   m[r28{0} - 72]=m[r28{0} - 72]{257},
                m[r28{0} - 76]=m[r28{0} - 76]{258},   m[r28{0} - 80]=m[r28{0} - 80]{259},   tmp1=r24{171} + 1,
                %flags=SUBFLAGS32( r24{171}, -1, r24{171} + 1 ),   %ZF=(r24{171} + 1) = 0,   %CF=r24{171} <u -1
              Live variables: eax,  ecx,  edx in proc _start
result:    0 *32* eax := -
result:    0 *v* ecx := -
result:    0 *v* edx := -
dest is not lib
call:  199 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetACP(
              )
              Reaching definitions: r24=r24{195},   r25=r25{195},   r26=r26{195},   r28=r28{195} - 4,   r29=r29{195},
                m[r28{0} - 4]=m[r28{0} - 4]{195},   m[r28{0} - 16]=m[r28{0} - 16]{195},
                m[r28{0} - 24]=m[r28{0} - 24]{195},   m[r28{0} - 28]=m[r28{0} - 28]{195},
                m[r28{0} - 36]=m[r28{0} - 36]{195},   m[r28{0} - 40]=m[r28{0} - 40]{195},
                m[r28{0} - 44]=m[r28{0} - 44]{195},   m[r28{0} - 48]=m[r28{0} - 48]{195},
                m[r28{0} - 52]=m[r28{0} - 52]{195},   m[r28{0} - 56]=m[r28{0} - 56]{195},
                m[r28{0} - 60]=m[r28{0} - 60]{195},   m[r28{0} - 64]=m[r28{0} - 64]{195},
                m[r28{0} - 68]=m[r28{0} - 68]{195},   m[r28{0} - 72]=m[r28{0} - 72]{195},
                m[r28{0} - 76]=m[r28{0} - 76]{195},   m[r28{0} - 80]=m[r28{0} - 80]{195},
                m[r28{0} - 4]=m[r28{0} - 4]{195},   m[r28{0} - 16]=m[r28{0} - 16]{195},
                m[r28{0} - 24]=m[r28{0} - 24]{195},   m[r28{0} - 28]=m[r28{0} - 28]{195},
                m[r28{0} - 36]=m[r28{0} - 36]{195},   m[r28{0} - 40]=m[r28{0} - 40]{195},
                m[r28{0} - 44]=m[r28{0} - 44]{195},   m[r28{0} - 48]=m[r28{0} - 48]{195},
                m[r28{0} - 52]=m[r28{0} - 52]{195},   m[r28{0} - 56]=m[r28{0} - 56]{195},
                m[r28{0} - 60]=m[r28{0} - 60]{195},   m[r28{0} - 64]=m[r28{0} - 64]{195},
                m[r28{0} - 68]=m[r28{0} - 68]{195},   m[r28{0} - 72]=m[r28{0} - 72]{195},
                m[r28{0} - 76]=m[r28{0} - 76]{195},   m[r28{0} - 80]=m[r28{0} - 80]{195},   <all>=<all>{195},
                tmp1=tmp1{195},   %flags=%flags{195},   %ZF=%ZF{195},   %CF=%CF{195}
              Live variables: eax,  ecx,  edx in proc _start
result:    0 *32* eax := -
result:    0 *v* ecx := -
result:    0 *v* edx := -
dest is not lib
call:  203 <all> := CALL proc14(<all>)
              Reaching definitions: r24=r24{199},   r25=r25{199},   r26=r26{199},   r28=r28{195} - 4,   r29=r29{195},
                m[r28{0} - 4]=m[esp - 4]{195},   m[r28{0} - 16]=m[esp - 16]{195},   m[r28{0} - 24]=m[esp - 24]{195},
                m[r28{0} - 28]=m[esp - 28]{195},   m[r28{0} - 36]=m[esp - 36]{195},   m[r28{0} - 40]=m[esp - 40]{195},
                m[r28{0} - 44]=m[esp - 44]{195},   m[r28{0} - 48]=m[esp - 48]{195},   m[r28{0} - 52]=m[esp - 52]{195},
                m[r28{0} - 56]=m[esp - 56]{195},   m[r28{0} - 60]=m[esp - 60]{195},   m[r28{0} - 64]=m[esp - 64]{195},
                m[r28{0} - 68]=m[esp - 68]{195},   m[r28{0} - 72]=m[esp - 72]{195},   m[r28{0} - 76]=m[esp - 76]{195},
                m[r28{0} - 80]=m[esp - 80]{195},   m[r28{0} - 4]=m[r28{0} - 4]{195},
                m[r28{0} - 16]=m[r28{0} - 16]{195},   m[r28{0} - 24]=m[r28{0} - 24]{195},
                m[r28{0} - 28]=m[r28{0} - 28]{195},   m[r28{0} - 36]=m[r28{0} - 36]{195},
                m[r28{0} - 40]=m[r28{0} - 40]{195},   m[r28{0} - 44]=m[r28{0} - 44]{195},
                m[r28{0} - 48]=m[r28{0} - 48]{195},   m[r28{0} - 52]=m[r28{0} - 52]{195},
                m[r28{0} - 56]=m[r28{0} - 56]{195},   m[r28{0} - 60]=m[r28{0} - 60]{195},
                m[r28{0} - 64]=m[r28{0} - 64]{195},   m[r28{0} - 68]=m[r28{0} - 68]{195},
                m[r28{0} - 72]=m[r28{0} - 72]{195},   m[r28{0} - 76]=m[r28{0} - 76]{195},
                m[r28{0} - 80]=m[r28{0} - 80]{195},   <all>=<all>{195},   tmp1=tmp1{195},   %flags=%flags{195},
                %ZF=%ZF{195},   %CF=%CF{195}
              Live variables:  in proc _start
dest is not lib
call:  133 {*HANDLE* eax, *v* ecx, *v* edx, *v** esp_5} := CALL GetFileType(
              )
              Reaching definitions: r24=r24{210},   r25=r25{211},   r26=r26{212},   r28=r28{213} - 12,   r29=r29{214},
                m[r28{0} - 4]=m[r28{0} - 4]{228},   m[r28{0} - 16]=m[r28{0} - 16]{229},
                m[r28{0} - 24]=m[r28{0} - 24]{230},   m[r28{0} - 28]=m[r28{0} - 28]{231},
                m[r28{0} - 36]=m[r28{0} - 36]{232},   m[r28{0} - 40]=m[r28{0} - 40]{233},
                m[r28{0} - 44]=m[r28{0} - 44]{234},   m[r28{0} - 48]=m[r28{0} - 48]{235},
                m[r28{0} - 52]=m[r28{0} - 52]{236},   m[r28{0} - 56]=m[r28{0} - 56]{237},
                m[r28{0} - 60]=m[r28{0} - 60]{238},   m[r28{0} - 64]=m[r28{0} - 64]{239},
                m[r28{0} - 68]=m[r28{0} - 68]{240},   m[r28{0} - 72]=m[r28{0} - 72]{241},
                m[r28{0} - 76]=m[r28{0} - 76]{242},   m[r28{0} - 80]=m[r28{0} - 80]{243},   tmp1=tmp1{215},
                %flags=%flags{216},   %ZF=%ZF{217},   %CF=%CF{218}
              Live variables: esp_5 in proc _start
result:    0 *v** esp_5 := -
