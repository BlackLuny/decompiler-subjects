// subject.h
// Generated by decompiling subject.exe
// using Reko decompiler version VERSION

/*
// Equivalence classes ////////////
Eq_1: (struct "Globals")
	globals_t (in globals : (ptr (struct "Globals")))
Eq_2: DWORD
	T_2 (in eax : Eq_2)
	T_11 (in eax_107 : Eq_2)
// Type Variables ////////////
globals_t: (in globals : (ptr (struct "Globals")))
  Class: Eq_1
  DataType: (ptr Eq_1)
  OrigDataType: (ptr (struct "Globals"))
T_2: (in eax : Eq_2)
  Class: Eq_2
  DataType: Eq_2
  OrigDataType: DWORD
T_3: (in esp_95 : word32)
  Class: Eq_3
  DataType: word32
  OrigDataType: word32
T_4: (in eax_96 : ptr32)
  Class: Eq_4
  DataType: ptr32
  OrigDataType: ptr32
T_5: (in SZO_97 : byte)
  Class: Eq_5
  DataType: byte
  OrigDataType: byte
T_6: (in edi_98 : word32)
  Class: Eq_6
  DataType: word32
  OrigDataType: word32
T_7: (in ebp_99 : word32)
  Class: Eq_7
  DataType: word32
  OrigDataType: word32
T_8: (in SCZO_100 : byte)
  Class: Eq_8
  DataType: byte
  OrigDataType: byte
T_9: (in shlwapi.dll!SHRegQueryInfoUSKeyA : ptr32)
  Class: Eq_9
  DataType: (ptr code)
  OrigDataType: (ptr code)
T_10: (in esp_106 : word32)
  Class: Eq_10
  DataType: word32
  OrigDataType: word32
T_11: (in eax_107 : Eq_2)
  Class: Eq_2
  DataType: Eq_2
  OrigDataType: word32
T_12: (in SZO_108 : byte)
  Class: Eq_12
  DataType: byte
  OrigDataType: byte
T_13: (in edi_109 : word32)
  Class: Eq_13
  DataType: word32
  OrigDataType: word32
T_14: (in ebp_110 : word32)
  Class: Eq_14
  DataType: word32
  OrigDataType: word32
T_15: (in SCZO_111 : byte)
  Class: Eq_15
  DataType: byte
  OrigDataType: byte
T_16: (in 0x00401749 : word32)
  Class: Eq_16
  DataType: int32
  OrigDataType: int32
T_17: (in eax_96 + 0x00401749 : word32)
  Class: Eq_17
  DataType: (ptr code)
  OrigDataType: (ptr code)
*/
typedef struct Globals {
} Eq_1;

typedef DWORD Eq_2;

