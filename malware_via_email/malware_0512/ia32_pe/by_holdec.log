INFO  holdec.an - ### holdec 1.1 Copyright 2003-2012 Raimar Falke
INFO  holdec.an - Using ./malware_via_email/malware_0512/ia32_pe/subject.exe as executable
INFO  holdec.fG - Detected PE (Portable Executable)
INFO  holdec.ks - wrote ./malware_via_email/malware_0512/ia32_pe/subject.exe.info
INFO  holdec.fG - disassembleAndWrite: start a new loop with 1 extra block starts
INFO  holdec.fG - disassembleAndWrite: running multiline
INFO  holdec.ks - wrote ./malware_via_email/malware_0512/ia32_pe/subject.exe.info
INFO  holdec.ks - wrote ./malware_via_email/malware_0512/ia32_pe/subject.exe.info
INFO  holdec.fG - disassembleAndWrite: found no new addresses. will stop now.
INFO  holdec.ks - wrote ./malware_via_email/malware_0512/ia32_pe/subject.exe.info
INFO  holdec.ks - wrote ./malware_via_email/malware_0512/ia32_pe/subject.exe.info
INFO  holdec.fG - reading all asm lines ...
INFO  holdec.fG - ... read 1460 asm lines
WARN  holdec.w - Address 003e2000.0 is excluded by the address filter. Maybe outside text section?
INFO  holdec.an - will decompile 22 functions
WARN  holdec.ag - Referencing unknown line 003e1942.0
WARN  holdec.ag - Referencing unknown line 003e1a30.0
WARN  holdec.ag - Referencing unknown line 003e19af.0
WARN  holdec.ag - Referencing unknown line 003e19af.0
WARN  holdec.ag - Referencing unknown line 003e1122.0
WARN  holdec.ag - Referencing unknown line 003e10b0.0
WARN  holdec.ac - Block 10 is already known to have a starting stack offset of -56 but when called from 9 it has an offset of -48
WARN  holdec.ac - Block 6 is already known to have a starting stack offset of -48 but when called from 10 it has an offset of -56
WARN  holdec.ac - Block 1 is already known to have a starting stack offset of -44 but when called from 11 it has an offset of -48
WARN  holdec.ac - Block 1 is already known to have a starting stack offset of -8 but when called from 3 it has an offset of -28
WARN  holdec.d - may result in wrong values
WARN  holdec.d -   reg_pp7 = PHI(reg_var12, reg_var10) in Block1
WARN  holdec.d -   reg_var12 = ADD(reg_pp7, -20) in Block3
WARN  holdec.ac - Block 1 is already known to have a starting stack offset of -8 but when called from 3 it has an offset of -28
WARN  holdec.ag - Referencing unknown line 003e12a6.0
WARN  holdec.ag - Referencing unknown line 003e1270.0
WARN  holdec.d - may result in wrong values
WARN  holdec.d -   reg_pp5 = PHI(reg_12_local1, reg_12_local2) in Block2
WARN  holdec.d -   reg_12_local2 = ADD(reg_pp5, 2) in Block1
WARN  holdec.ag - Referencing unknown line 003e15d0.0
WARN  holdec.ag - Referencing unknown line 003e12dc.0
WARN  holdec.ag - Referencing unknown line 003e141e.0
WARN  holdec.ag - Referencing unknown line 003e141e.0
WARN  holdec.ag - Referencing unknown line 003e1000.0
WARN  holdec.ag - Referencing unknown line 003e101f.0
WARN  holdec.ag - Referencing unknown line 003e15e0.0
WARN  holdec.ag - Referencing unknown line 003e1000.0
WARN  holdec.ag - Referencing unknown line 003e1136.0
WARN  holdec.ag - Referencing unknown line 003e1776.0
WARN  holdec.ac - Block 10 is already known to have a starting stack offset of -52 but when called from 3 it has an offset of -68
WARN  holdec.ac - Block 10 is already known to have a starting stack offset of -68 but when called from 5 it has an offset of -84
WARN  holdec.ac - Block 10 is already known to have a starting stack offset of -84 but when called from 9 it has an offset of -112
WARN  holdec.ag - Referencing unknown line 003e143b.0
WARN  holdec.ag - Referencing unknown line 003e1942.0
WARN  holdec.ag - Referencing unknown line 003e16ab.0
WARN  holdec.ac - Block 2 is already known to have a starting stack offset of -32 but when called from 1 it has an offset of -48
WARN  holdec.ag - Referencing unknown line 003e1810.0
WARN  holdec.ag - Referencing unknown line 003e1810.0
WARN  holdec.ag - Referencing unknown line 003e1aac.0
WARN  holdec.ag - Referencing unknown line 003e1aac.0
WARN  holdec.ag - Referencing unknown line 003e1aac.0
