INFO  holdec.an - ### holdec 1.1 Copyright 2003-2012 Raimar Falke
INFO  holdec.an - Using ./malware_via_email/malware_0989/ia32_pe/subject.exe as executable
INFO  holdec.fG - Detected PE (Portable Executable)
INFO  holdec.ks - wrote ./malware_via_email/malware_0989/ia32_pe/subject.exe.info
INFO  holdec.fG - disassembleAndWrite: start a new loop with 1 extra block starts
INFO  holdec.fG - disassembleAndWrite: running multiline
INFO  holdec.ks - wrote ./malware_via_email/malware_0989/ia32_pe/subject.exe.info
INFO  holdec.ks - wrote ./malware_via_email/malware_0989/ia32_pe/subject.exe.info
INFO  holdec.fG - disassembleAndWrite: found no new addresses. will stop now.
INFO  holdec.ks - wrote ./malware_via_email/malware_0989/ia32_pe/subject.exe.info
INFO  holdec.ks - wrote ./malware_via_email/malware_0989/ia32_pe/subject.exe.info
INFO  holdec.fG - reading all asm lines ...
INFO  holdec.fG - ... read 1516 asm lines
WARN  holdec.w - Address 003e2000.0 is excluded by the address filter. Maybe outside text section?
INFO  holdec.an - will decompile 23 functions
WARN  holdec.ag - Referencing unknown line 003e1a03.0
WARN  holdec.ag - Referencing unknown line 003e1a71.0
WARN  holdec.ag - Referencing unknown line 003e1a71.0
WARN  holdec.ag - Referencing unknown line 003e110e.0
WARN  holdec.ag - Referencing unknown line 003e10af.0
WARN  holdec.ac - Block 10 is already known to have a starting stack offset of -56 but when called from 9 it has an offset of -48
WARN  holdec.ac - Block 6 is already known to have a starting stack offset of -48 but when called from 10 it has an offset of -56
WARN  holdec.ac - Block 1 is already known to have a starting stack offset of -44 but when called from 11 it has an offset of -48
WARN  holdec.ac - Block 1 is already known to have a starting stack offset of -8 but when called from 3 it has an offset of -28
WARN  holdec.ac - Block 1 is already known to have a starting stack offset of -8 but when called from 3 it has an offset of -28
WARN  holdec.ag - Referencing unknown line 003e1286.0
WARN  holdec.ag - Referencing unknown line 003e1250.0
WARN  holdec.ag - Referencing unknown line 003e1620.0
WARN  holdec.ag - Referencing unknown line 003e12bd.0
WARN  holdec.ag - Referencing unknown line 003e12bd.0
WARN  holdec.ag - Referencing unknown line 003e1400.0
WARN  holdec.ag - Referencing unknown line 003e1400.0
WARN  holdec.ag - Referencing unknown line 003e1000.0
WARN  holdec.ag - Referencing unknown line 003e101d.0
WARN  holdec.ag - Referencing unknown line 003e1630.0
WARN  holdec.ag - Referencing unknown line 003e1000.0
WARN  holdec.ag - Referencing unknown line 003e1121.0
WARN  holdec.ag - Referencing unknown line 003e17c2.0
WARN  holdec.ac - Block 10 is already known to have a starting stack offset of -84 but when called from 3 it has an offset of -100
WARN  holdec.ac - Block 10 is already known to have a starting stack offset of -100 but when called from 5 it has an offset of -116
WARN  holdec.ac - Block 10 is already known to have a starting stack offset of -116 but when called from 9 it has an offset of -144
WARN  holdec.ag - Referencing unknown line 003e141d.0
WARN  holdec.ag - Referencing unknown line 003e1a03.0
WARN  holdec.d - may result in wrong values
WARN  holdec.d -   reg_pp8 = PHI(reg_36_local0, reg_36_local1) in Block2
WARN  holdec.d -   reg_36_local1 = ADD(reg_pp8, 1) in Block1
WARN  holdec.ag - Referencing unknown line 003e16fd.0
WARN  holdec.ac - Block 2 is already known to have a starting stack offset of -32 but when called from 1 it has an offset of -48
WARN  holdec.ac - Block 2 is already known to have a starting stack offset of -4 but when called from 1 it has an offset of -16
WARN  holdec.ag - Referencing unknown line 003e1b6b.0
WARN  holdec.ag - Referencing unknown line 003e1b6b.0
WARN  holdec.ag - Referencing unknown line 003e1b6b.0
