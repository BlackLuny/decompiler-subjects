INFO  an - ### holdec 1.1 Copyright 2003-2012 Raimar Falke
INFO  an - Using ./malware_via_email/malware_0989/ia32_pe/subject.exe as executable
read image                              : ............................................................ [ done ]
INFO  fG - Detected PE (Portable Executable)
INFO  ks - wrote ./malware_via_email/malware_0989/ia32_pe/subject.exe.info
INFO  fG - disassembleAndWrite: start a new loop with 1 extra block starts
Disassemble                             : ............................................................ [ done ]
INFO  fG - disassembleAndWrite: running multiline
INFO  ks - wrote ./malware_via_email/malware_0989/ia32_pe/subject.exe.info
Preprocessing 1283 asm lines            : ............................................................ [ done ]
INFO  ks - wrote ./malware_via_email/malware_0989/ia32_pe/subject.exe.info
INFO  fG - disassembleAndWrite: found no new addresses. will stop now.
INFO  ks - wrote ./malware_via_email/malware_0989/ia32_pe/subject.exe.info
Preprocessing 1516 asm lines            : ............................................................ [ done ]
INFO  ks - wrote ./malware_via_email/malware_0989/ia32_pe/subject.exe.info
INFO  fG - reading all asm lines ...
INFO  fG - ... read 1516 asm lines
WARN  w - Address 003e2000.0 is excluded by the address filter. Maybe outside text section?
create blocks                           : ............................................................ [ done ]
init blocks                             : ............................................................ [ done ]
Writing 23 methods to cache             : ............................................................ [ done ]
INFO  an - will decompile 23 functions
decompile F_003e1000                    : ............................................................ [ done ]
decompile F_003e101d                    : .WARN  ag - Referencing unknown line 003e1a03.0
........................................................... [ done ]
decompile F_003e10af                    : .WARN  ag - Referencing unknown line 003e1a71.0
WARN  ag - Referencing unknown line 003e1a71.0
........................................................... [ done ]
decompile F_003e110e                    : ............................................................ [ done ]
decompile F_003e1121                    : .WARN  ag - Referencing unknown line 003e110e.0
WARN  ag - Referencing unknown line 003e10af.0
........WARN  ac - Block 10 is already known to have a starting stack offset of -56 but when called from 9 it has an offset of -48
WARN  ac - Block 6 is already known to have a starting stack offset of -48 but when called from 10 it has an offset of -56
WARN  ac - Block 1 is already known to have a starting stack offset of -44 but when called from 11 it has an offset of -48
................................................... [ done ]
decompile F_003e1250                    : .........WARN  ac - Block 1 is already known to have a starting stack offset of -8 but when called from 3 it has an offset of -28
................................................... [ done ]
decompile F_003e1286                    : .........WARN  ac - Block 1 is already known to have a starting stack offset of -8 but when called from 3 it has an offset of -28
................................................... [ done ]
decompile F_003e12bd                    : .WARN  ag - Referencing unknown line 003e1286.0
WARN  ag - Referencing unknown line 003e1250.0
........................................................... [ done ]
decompile F_003e1400                    : ............................................................ [ done ]
decompile F_003e141d                    : .WARN  ag - Referencing unknown line 003e1620.0
WARN  ag - Referencing unknown line 003e12bd.0
WARN  ag - Referencing unknown line 003e12bd.0
WARN  ag - Referencing unknown line 003e1400.0
WARN  ag - Referencing unknown line 003e1400.0
WARN  ag - Referencing unknown line 003e1000.0
WARN  ag - Referencing unknown line 003e101d.0
WARN  ag - Referencing unknown line 003e1630.0
WARN  ag - Referencing unknown line 003e1000.0
WARN  ag - Referencing unknown line 003e1121.0
WARN  ag - Referencing unknown line 003e17c2.0
........WARN  ac - Block 10 is already known to have a starting stack offset of -84 but when called from 3 it has an offset of -100
WARN  ac - Block 10 is already known to have a starting stack offset of -100 but when called from 5 it has an offset of -116
WARN  ac - Block 10 is already known to have a starting stack offset of -116 but when called from 9 it has an offset of -144
................................................... [ done ]
decompile F_003e1604                    : .WARN  ag - Referencing unknown line 003e141d.0
........................................................... [ done ]
decompile F_003e1620                    : ............................................................ [ done ]
decompile F_003e1630                    : .WARN  ag - Referencing unknown line 003e1a03.0
.....................................WARN  d - may result in wrong values
WARN  d -   reg_pp8 = PHI(reg_36_local0, reg_36_local1) in Block2
WARN  d -   reg_36_local1 = ADD(reg_pp8, 1) in Block1
...................... [ done ]
decompile F_003e16fd                    : ............................................................ [ done ]
decompile F_003e17c2                    : .WARN  ag - Referencing unknown line 003e16fd.0
........WARN  ac - Block 2 is already known to have a starting stack offset of -32 but when called from 1 it has an offset of -48
................................................... [ done ]
decompile F_003e1860                    : ............................................................ [ done ]
decompile F_003e18b0                    : ............................................................ [ done ]
decompile F_003e190c                    : .........WARN  ac - Block 2 is already known to have a starting stack offset of -4 but when called from 1 it has an offset of -16
................................................... [ done ]
decompile F_003e1a03                    : ............................................................ [ done ]
decompile F_003e1a71                    : ............................................................ [ done ]
decompile F_003e1b50                    : .WARN  ag - Referencing unknown line 003e1b6b.0
........................................................... [ done ]
decompile F_003e1b6b                    : ................. failed: A non-current expression of a variable is used in block L4 in (void) STORE(ADD(reg_c0, SEGMENT2ADDR(reg_pp7)), reg_zb12): The current setter is reg_zj1 while [reg_pp7] was found. Related expressions are [reg_pp12, reg_pp8, reg_pp7, reg_zj5, reg_zj0, reg_zj2, reg_zj1]
decompile F_003e1c2e                    : .WARN  ag - Referencing unknown line 003e1b6b.0
WARN  ag - Referencing unknown line 003e1b6b.0
........................................................... [ done ]
