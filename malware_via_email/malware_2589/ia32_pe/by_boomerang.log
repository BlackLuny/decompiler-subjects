Unknown library function CreateFileW
Unknown library function GetModuleHandleA
Unknown library function GetFileType
Unknown library function GetFileSize
Unknown library function CreateFileA
Unknown library function VirtualProtect
after removing matching assigns (t[WILDSTR]).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc1 ###
in proc proc1 adding addrExp r28{0} - 4 to local table
finding final parameters for proc1
potential param r30
found new parameter r30
potential param r29
found new parameter r29
potential param r25
found new parameter r25
potential param r24
found new parameter r24
potential param r27
found new parameter r27
assgn   11 *32* %pc := m[0x4010c4]
is readonly
assgn   29 *32* %pc := m[0x4010b0]
is readonly
assgn   34 *32* %pc := m[0x4010ec]
is readonly
assgn   39 *32* %pc := m[0x4010c4]
is readonly
assgn   45 *32* %pc := m[0x4010c4]
is readonly
assgn   51 *32* %pc := m[0x401068]
is readonly
assgn   71 *32* %pc := m[0x4010b0]
is readonly
assgn   79 *32* %pc := m[0x401078]
is readonly
assgn   88 *32* %pc := m[0x4010d0]
is readonly
assgn  106 *32* %pc := m[0x4010cc]
is readonly
assgn  117 *32* %pc := m[0x401104]
is readonly
assgn  123 *32* %pc := m[0x4010d4]
is readonly
assgn  129 *32* %pc := m[0x401068]
is readonly
assgn  142 *32* %pc := m[0x4010d0]
is readonly
assgn  150 *32* %pc := m[0x401104]
is readonly
assgn  160 *32* %pc := m[0x4010d0]
is readonly
assgn  164 *32* %pc := m[0x4010d4]
is readonly
assgn  173 *32* %pc := m[0x401104]
is readonly
assgn  183 *32* %pc := m[0x401068]
is readonly
assgn  192 *32* %pc := m[0x401104]
is readonly
assgn  212 *32* %pc := m[0x4010cc]
is readonly
assgn  234 *32* %pc := m[0x4010b0]
is readonly
assgn  244 *32* %pc := m[0x4010d4]
is readonly
assgn  250 *32* %pc := m[0x4010d4]
is readonly
assgn  254 *32* %pc := m[0x4010c4]
is readonly
assgn  258 *32* %pc := m[0x4010dc]
is readonly
assgn  278 *32* %pc := m[0x4010b0]
is readonly
assgn  299 *32* %pc := m[0x4010cc]
is readonly
assgn  312 *32* %pc := m[0x4010d0]
is readonly
assgn  333 *32* %pc := m[0x4010b0]
is readonly
assgn  358 *32* %pc := m[0x4010cc]
is readonly
assgn  369 *32* %pc := m[0x401104]
is readonly
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
in proc _start adding addrExp r28{0} - 4 to local table
in proc _start adding addrExp r28{0} - 64 to local table
in proc _start adding addrExp r28{0} - 68 to local table
in proc _start adding addrExp r28{0} - 68 to local table
in proc _start adding addrExp r28{0} - 72 to local table
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 84 to local table
in proc _start adding addrExp r28{0} - 88 to local table
in proc _start adding addrExp r28{0} - 92 to local table
in proc _start adding addrExp r28{0} - 96 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 96 to local table
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 64 to local table
in proc _start adding addrExp r28{0} - 68 to local table
in proc _start adding addrExp r28{0} - 72 to local table
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 84 to local table
in proc _start adding addrExp r28{0} - 88 to local table
in proc _start adding addrExp r28{0} - 92 to local table
in proc _start adding addrExp r28{0} - 96 to local table
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 64 to local table
in proc _start adding addrExp r28{0} - 68 to local table
in proc _start adding addrExp r28{0} - 72 to local table
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 84 to local table
in proc _start adding addrExp r28{0} - 88 to local table
in proc _start adding addrExp r28{0} - 92 to local table
in proc _start adding addrExp r28{0} - 96 to local table
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 64 to local table
in proc _start adding addrExp r28{0} - 68 to local table
in proc _start adding addrExp r28{0} - 72 to local table
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 84 to local table
in proc _start adding addrExp r28{0} - 88 to local table
in proc _start adding addrExp r28{0} - 92 to local table
in proc _start adding addrExp r28{0} - 96 to local table
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 64 to local table
in proc _start adding addrExp r28{0} - 68 to local table
in proc _start adding addrExp r28{0} - 72 to local table
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 84 to local table
in proc _start adding addrExp r28{0} - 88 to local table
in proc _start adding addrExp r28{0} - 92 to local table
in proc _start adding addrExp r28{0} - 96 to local table
finding final parameters for _start
potential param r28
found new parameter r28
potential param r29
found new parameter r29
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28{0} - 64 to local table
in proc _start adding addrExp r28{0} - 68 to local table
in proc _start adding addrExp r28{0} - 72 to local table
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 84 to local table
in proc _start adding addrExp r28{0} - 88 to local table
in proc _start adding addrExp r28{0} - 92 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 96 to local table
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 64 to local table
in proc _start adding addrExp r28{0} - 68 to local table
in proc _start adding addrExp r28{0} - 72 to local table
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 84 to local table
in proc _start adding addrExp r28{0} - 88 to local table
in proc _start adding addrExp r28{0} - 92 to local table
in proc _start adding addrExp r28{0} - 96 to local table
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 64 to local table
in proc _start adding addrExp r28{0} - 68 to local table
in proc _start adding addrExp r28{0} - 72 to local table
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 84 to local table
in proc _start adding addrExp r28{0} - 88 to local table
in proc _start adding addrExp r28{0} - 92 to local table
in proc _start adding addrExp r28{0} - 96 to local table
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 64 to local table
in proc _start adding addrExp r28{0} - 68 to local table
in proc _start adding addrExp r28{0} - 72 to local table
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 84 to local table
in proc _start adding addrExp r28{0} - 88 to local table
in proc _start adding addrExp r28{0} - 92 to local table
in proc _start adding addrExp r28{0} - 96 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc1 ###
finding final parameters for _start
potential param r28
found new parameter r28
potential param r29
found new parameter r29
local esp has type void * that doesn't agree with type of define void of a library, why?
dest is not lib
call:   12 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetCommandLineA(
              )
              Reaching definitions: r28=r28{0} - 68,   r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},
                m[r28{0} - 64]=0x42f14a,   m[r28{0} - 68]=%pc,   tmp1=r28{0} - 4,
                %flags=ADDFLAGS32( r28{0} - 4, -56, r28{0} - 60 ),   %ZF=ADDFLAGS32( r28{0} - 4, -56, r28{0} - 60 ),
                %CF=ADDFLAGS32( r28{0} - 4, -56, r28{0} - 60 )
              Live variables:  in proc _start
dest is not lib
call:   30 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL CreateFileW(
              )
              Reaching definitions: r24=r24{12},   r25=r25{12},   r26=r26{12},   r28=r28{0} - 96,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 64]=0x42f14a,   m[r28{0} - 68]=0,   m[r28{0} - 72]=36,
                m[r28{0} - 76]=3,   m[r28{0} - 80]=0,   m[r28{0} - 84]=1,   m[r28{0} - 88]=0x40000000,
                m[r28{0} - 92]=0x42f132,   m[r28{0} - 96]=%pc,   tmp1=r28{0} - 4,
                %flags=ADDFLAGS32( r28{0} - 4, -56, r28{0} - 60 ),   %ZF=ADDFLAGS32( r28{0} - 4, -56, r28{0} - 60 ),
                %CF=ADDFLAGS32( r28{0} - 4, -56, r28{0} - 60 )
              Live variables: eax in proc _start
result:    0 *32* eax := -
dest is not lib
call:   35 {*32* eax, *v* ecx, *v* edx, *v** esp_1} := CALL GetModuleHandleA(
              )
              Reaching definitions: r24=r24{30},   r25=r25{30},   r26=r26{30},   r28=r28{0} - 96,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 36]=r24{30},   m[r28{0} - 64]=0x42f14a,   m[r28{0} - 68]=0,
                m[r28{0} - 72]=36,   m[r28{0} - 76]=3,   m[r28{0} - 80]=0,   m[r28{0} - 84]=1,
                m[r28{0} - 88]=0x40000000,   m[r28{0} - 92]=0x42f132,   m[r28{0} - 96]=%pc,   tmp1=r28{0} - 4,
                %flags=ADDFLAGS32( r28{0} - 4, -56, r28{0} - 60 ),   %ZF=ADDFLAGS32( r28{0} - 4, -56, r28{0} - 60 ),
                %CF=ADDFLAGS32( r28{0} - 4, -56, r28{0} - 60 )
              Live variables: eax,  esp_1 in proc _start
result:    0 *32* eax := -
result:    0 *v** esp_1 := -
dest is not lib
call:   40 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetCommandLineA(
              )
              Reaching definitions: r24=r24{381},   r25=r25{382},   r26=r26{383},   r28=r28{384} - 4,   r29=r29{385},
                m[r28{0} - 4]=m[r28{0} - 4]{417},   m[r28{0} - 36]=m[r28{0} - 36]{418},
                m[r28{0} - 64]=m[r28{0} - 64]{419},   m[r28{0} - 68]=m[r28{0} - 68]{420},
                m[r28{0} - 72]=m[r28{0} - 72]{421},   m[r28{0} - 76]=m[r28{0} - 76]{422},
                m[r28{0} - 80]=m[r28{0} - 80]{423},   m[r28{0} - 84]=m[r28{0} - 84]{424},
                m[r28{0} - 88]=m[r28{0} - 88]{425},   m[r28{0} - 92]=m[r28{0} - 92]{426},
                m[r28{0} - 96]=m[r28{0} - 96]{427},   tmp1=tmp1{386},   %flags=%flags{387},   %ZF=%ZF{388},
                %CF=%CF{389}
              Live variables:  in proc _start
dest is not lib
call:   46 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetCommandLineA(
              )
              Reaching definitions: r24=r24{40},   r25=r25{40},   r26=r26{40},   r28=r28{384} - 8,   r29=r29{385},
                m[r28{0} - 4]=m[r28{0} - 4]{417},   m[r28{0} - 36]=m[r28{0} - 36]{418},
                m[r28{0} - 64]=m[r28{0} - 64]{419},   m[r28{0} - 68]=m[r28{0} - 68]{420},
                m[r28{0} - 72]=m[r28{0} - 72]{421},   m[r28{0} - 76]=m[r28{0} - 76]{422},
                m[r28{0} - 80]=m[r28{0} - 80]{423},   m[r28{0} - 84]=m[r28{0} - 84]{424},
                m[r28{0} - 88]=m[r28{0} - 88]{425},   m[r28{0} - 92]=m[r28{0} - 92]{426},
                m[r28{0} - 96]=m[r28{0} - 96]{427},   tmp1=tmp1{386},   %flags=%flags{387},   %ZF=%ZF{388},
                %CF=%CF{389}
              Live variables:  in proc _start
dest is not lib
call:   52 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetFileType(
              )
              Reaching definitions: r24=r24{46},   r25=r25{46},   r26=r26{46},   r28=r28{384} - 12,   r29=r29{385},
                m[r28{0} - 4]=m[r28{0} - 4]{417},   m[r28{0} - 36]=m[r28{0} - 36]{418},
                m[r28{0} - 64]=m[r28{0} - 64]{419},   m[r28{0} - 68]=m[r28{0} - 68]{420},
                m[r28{0} - 72]=m[r28{0} - 72]{421},   m[r28{0} - 76]=m[r28{0} - 76]{422},
                m[r28{0} - 80]=m[r28{0} - 80]{423},   m[r28{0} - 84]=m[r28{0} - 84]{424},
                m[r28{0} - 88]=m[r28{0} - 88]{425},   m[r28{0} - 92]=m[r28{0} - 92]{426},
                m[r28{0} - 96]=m[r28{0} - 96]{427},   tmp1=tmp1{386},   %flags=%flags{387},   %ZF=%ZF{388},
                %CF=%CF{389}
              Live variables:  in proc _start
dest is not lib
call:   72 {*32* eax, *v* ecx, *v* edx, *union* esp_8} := CALL CreateFileW(
              )
              Reaching definitions: r24=r24{52},   r25=r25{52},   r26=r26{52},   r28=r28{384} - 44,   r29=r29{385},
                m[r28{0} - 4]=m[r28{0} - 4]{417},   m[r28{0} - 36]=m[r28{0} - 36]{418},
                m[r28{0} - 64]=m[r28{0} - 64]{419},   m[r28{0} - 68]=m[r28{0} - 68]{420},
                m[r28{0} - 72]=m[r28{0} - 72]{421},   m[r28{0} - 76]=m[r28{0} - 76]{422},
                m[r28{0} - 80]=m[r28{0} - 80]{423},   m[r28{0} - 84]=m[r28{0} - 84]{424},
                m[r28{0} - 88]=m[r28{0} - 88]{425},   m[r28{0} - 92]=m[r28{0} - 92]{426},
                m[r28{0} - 96]=m[r28{0} - 96]{427},   tmp1=tmp1{386},   %flags=%flags{387},   %ZF=%ZF{388},
                %CF=%CF{389}
              Live variables: eax,  esp_8 in proc _start
result:    0 *32* eax := -
result:    0 *union* esp_8 := -
dest is not lib
call:  313 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetFileSize(
              )
              Reaching definitions: r24=r24{408},   r25=r25{409},   r26=r26{410},   r28=r28{411} - 12,   r29=r29{412},
                m[r28{0} - 4]=m[r28{0} - 4]{450},   m[r28{0} - 36]=m[r28{0} - 36]{451},
                m[r28{0} - 64]=m[r28{0} - 64]{452},   m[r28{0} - 68]=m[r28{0} - 68]{453},
                m[r28{0} - 72]=m[r28{0} - 72]{454},   m[r28{0} - 76]=m[r28{0} - 76]{455},
                m[r28{0} - 80]=m[r28{0} - 80]{456},   m[r28{0} - 84]=m[r28{0} - 84]{457},
                m[r28{0} - 88]=m[r28{0} - 88]{458},   m[r28{0} - 92]=m[r28{0} - 92]{459},
                m[r28{0} - 96]=m[r28{0} - 96]{460},   tmp1=tmp1{413},   %flags=%flags{414},   %ZF=%ZF{415},
                %CF=%CF{416}
              Live variables:  in proc _start
dest is not lib
call:  334 {*32* eax, *v* ecx, *v* edx, *v** esp_10} := CALL CreateFileW(
              )
              Reaching definitions: r24=r24{313},   r25=r25{313},   r26=r26{313},   r28=r28{411} - 40,   r29=r29{412},
                m[r28{0} - 4]=m[r28{0} - 4]{450},   m[r28{0} - 36]=m[r28{0} - 36]{451},
                m[r28{0} - 64]=m[r28{0} - 64]{452},   m[r28{0} - 68]=m[r28{0} - 68]{453},
                m[r28{0} - 72]=m[r28{0} - 72]{454},   m[r28{0} - 76]=m[r28{0} - 76]{455},
                m[r28{0} - 80]=m[r28{0} - 80]{456},   m[r28{0} - 84]=m[r28{0} - 84]{457},
                m[r28{0} - 88]=m[r28{0} - 88]{458},   m[r28{0} - 92]=m[r28{0} - 92]{459},
                m[r28{0} - 96]=m[r28{0} - 96]{460},   tmp1=tmp1{314},
                %flags=SUBFLAGS32( tmp1{314}, 0xc0000005, m[r29{412} - 24] ),   %ZF=m[r29{412} - 24] = 0,
                %CF=tmp1{314} <u 0xc0000005
              Live variables: eax,  esp_10 in proc _start
result:    0 *32* eax := -
result:    0 *v** esp_10 := -
found seq with more than one outedge!
taken branch is first out edge
dest is not lib
call:  255 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetCommandLineA(
              )
              Reaching definitions: r24=r24{399},   r25=r25{400},   r26=r26{401},   r28=r28{402} - 4,   r29=r29{403},
                m[r28{0} - 4]=m[r28{0} - 4]{439},   m[r28{0} - 36]=m[r28{0} - 36]{440},
                m[r28{0} - 64]=m[r28{0} - 64]{441},   m[r28{0} - 68]=m[r28{0} - 68]{442},
                m[r28{0} - 72]=m[r28{0} - 72]{443},   m[r28{0} - 76]=m[r28{0} - 76]{444},
                m[r28{0} - 80]=m[r28{0} - 80]{445},   m[r28{0} - 84]=m[r28{0} - 84]{446},
                m[r28{0} - 88]=m[r28{0} - 88]{447},   m[r28{0} - 92]=m[r28{0} - 92]{448},
                m[r28{0} - 96]=m[r28{0} - 96]{449},   tmp1=tmp1{404},   %flags=%flags{405},   %ZF=%ZF{406},
                %CF=%CF{407}
              Live variables:  in proc _start
dest is not lib
call:  259 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL VirtualProtect(
              )
              Reaching definitions: r24=r24{255},   r25=r25{255},   r26=r26{255},   r28=r28{402} - 4,   r29=r29{403},
                m[r28{0} - 4]=m[r28{0} - 4]{439},   m[r28{0} - 36]=m[r28{0} - 36]{440},
                m[r28{0} - 64]=m[r28{0} - 64]{441},   m[r28{0} - 68]=m[r28{0} - 68]{442},
                m[r28{0} - 72]=m[r28{0} - 72]{443},   m[r28{0} - 76]=m[r28{0} - 76]{444},
                m[r28{0} - 80]=m[r28{0} - 80]{445},   m[r28{0} - 84]=m[r28{0} - 84]{446},
                m[r28{0} - 88]=m[r28{0} - 88]{447},   m[r28{0} - 92]=m[r28{0} - 92]{448},
                m[r28{0} - 96]=m[r28{0} - 96]{449},   tmp1=tmp1{404},   %flags=%flags{405},   %ZF=%ZF{406},
                %CF=%CF{407}
              Live variables:  in proc _start
dest is not lib
call:  279 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL CreateFileW(
              )
              Reaching definitions: r24=r24{259},   r25=r25{259},   r26=r26{259},   r28=r28{402} - 36,   r29=r29{403},
                m[r28{0} - 4]=m[r28{0} - 4]{439},   m[r28{0} - 36]=m[r28{0} - 36]{440},
                m[r28{0} - 64]=m[r28{0} - 64]{441},   m[r28{0} - 68]=m[r28{0} - 68]{442},
                m[r28{0} - 72]=m[r28{0} - 72]{443},   m[r28{0} - 76]=m[r28{0} - 76]{444},
                m[r28{0} - 80]=m[r28{0} - 80]{445},   m[r28{0} - 84]=m[r28{0} - 84]{446},
                m[r28{0} - 88]=m[r28{0} - 88]{447},   m[r28{0} - 92]=m[r28{0} - 92]{448},
                m[r28{0} - 96]=m[r28{0} - 96]{449},   tmp1=tmp1{404},   %flags=%flags{405},   %ZF=%ZF{406},
                %CF=%CF{407}
              Live variables: eax in proc _start
result:    0 *32* eax := -
dest is not lib
call:  300 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL CreateFileA(
              )
              Reaching definitions: r24=r24{279},   r25=r25{279},   r26=r26{279},   r28=r28{402} - 68,   r29=r29{403},
                m[r28{0} - 4]=m[r28{0} - 4]{439},   m[r28{0} - 36]=m[r28{0} - 36]{440},
                m[r28{0} - 64]=m[r28{0} - 64]{441},   m[r28{0} - 68]=m[r28{0} - 68]{442},
                m[r28{0} - 72]=m[r28{0} - 72]{443},   m[r28{0} - 76]=m[r28{0} - 76]{444},
                m[r28{0} - 80]=m[r28{0} - 80]{445},   m[r28{0} - 84]=m[r28{0} - 84]{446},
                m[r28{0} - 88]=m[r28{0} - 88]{447},   m[r28{0} - 92]=m[r28{0} - 92]{448},
                m[r28{0} - 96]=m[r28{0} - 96]{449},   tmp1=tmp1{404},   %flags=%flags{405},   %ZF=%ZF{406},
                %CF=%CF{407}
              Live variables: eax in proc _start
result:    0 *32* eax := -
dest is not lib
call:  359 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL CreateFileA(
              )
              Reaching definitions: r24=r24{334},   r25=r25{334},   r26=r26{334},   r28=r28{411} - 68,   r29=r29{412},
                m[r28{0} - 4]=m[r28{0} - 4]{450},   m[r28{0} - 36]=m[r28{0} - 36]{451},
                m[r28{0} - 64]=m[r28{0} - 64]{452},   m[r28{0} - 68]=m[r28{0} - 68]{453},
                m[r28{0} - 72]=m[r28{0} - 72]{454},   m[r28{0} - 76]=m[r28{0} - 76]{455},
                m[r28{0} - 80]=m[r28{0} - 80]{456},   m[r28{0} - 84]=m[r28{0} - 84]{457},
                m[r28{0} - 88]=m[r28{0} - 88]{458},   m[r28{0} - 92]=m[r28{0} - 92]{459},
                m[r28{0} - 96]=m[r28{0} - 96]{460},   tmp1=tmp1{339},
                %flags=ADDFLAGS32( tmp1{339}, 0x415b50, m[r29{412} - 24] ),
                %ZF=ADDFLAGS32( tmp1{339}, 0x415b50, m[r29{412} - 24] ),
                %CF=ADDFLAGS32( tmp1{339}, 0x415b50, m[r29{412} - 24] )
              Live variables: eax,  ecx,  edx in proc _start
result:    0 *32* eax := -
result:    0 *v* ecx := -
result:    0 *v* edx := -
dest is not lib
call:  370 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL CloseHandle(
                *HANDLE* m[esp_9 - 4] := m[esp_9 - 4]
              )
              Reaching definitions: r24=r24{364},   r25=r25{364},   r26=r26{364},   r28=r28{364} - 8,   r29=r29{364},
                m[r28{0} - 4]=m[r28{0} - 4]{364},   m[r28{0} - 36]=m[r28{0} - 36]{364},
                m[r28{0} - 64]=m[r28{0} - 64]{364},   m[r28{0} - 68]=m[r28{0} - 68]{364},
                m[r28{0} - 72]=m[r28{0} - 72]{364},   m[r28{0} - 76]=m[r28{0} - 76]{364},
                m[r28{0} - 80]=m[r28{0} - 80]{364},   m[r28{0} - 84]=m[r28{0} - 84]{364},
                m[r28{0} - 88]=m[r28{0} - 88]{364},   m[r28{0} - 92]=m[r28{0} - 92]{364},
                m[r28{0} - 96]=m[r28{0} - 96]{364},   m[r28{0} - 4]=m[r28{0} - 4]{364},
                m[r28{0} - 36]=m[r28{0} - 36]{364},   m[r28{0} - 64]=m[r28{0} - 64]{364},
                m[r28{0} - 68]=m[r28{0} - 68]{364},   m[r28{0} - 72]=m[r28{0} - 72]{364},
                m[r28{0} - 76]=m[r28{0} - 76]{364},   m[r28{0} - 80]=m[r28{0} - 80]{364},
                m[r28{0} - 84]=m[r28{0} - 84]{364},   m[r28{0} - 88]=m[r28{0} - 88]{364},
                m[r28{0} - 92]=m[r28{0} - 92]{364},   m[r28{0} - 96]=m[r28{0} - 96]{364},   <all>=<all>{364},
                tmp1=tmp1{364},   %flags=%flags{364},   %ZF=%ZF{364},   %CF=%CF{364}
              Live variables: eax,  ecx,  edx in proc _start
result:    0 *32* eax := -
result:    0 *v* ecx := -
result:    0 *v* edx := -
dest is not lib
call:  374 <all> := CALL proc1(<all>)
              Reaching definitions: r24=r24{370},   r25=r25{370},   r26=r26{370},   r28=r28{364} - 4,   r29=r29{364},
                m[r28{0} - 4]=m[esp - 4]{364},   m[r28{0} - 36]=m[esp - 36]{364},   m[r28{0} - 64]=m[esp - 64]{364},
                m[r28{0} - 68]=m[esp - 68]{364},   m[r28{0} - 72]=m[esp - 72]{364},   m[r28{0} - 76]=m[esp - 76]{364},
                m[r28{0} - 80]=m[esp - 80]{364},   m[r28{0} - 84]=m[esp - 84]{364},   m[r28{0} - 88]=m[esp - 88]{364},
                m[r28{0} - 92]=m[esp - 92]{364},   m[r28{0} - 96]=m[esp - 96]{364},   m[r28{0} - 4]=m[r28{0} - 4]{364},
                m[r28{0} - 36]=m[r28{0} - 36]{364},   m[r28{0} - 64]=m[r28{0} - 64]{364},
                m[r28{0} - 68]=m[r28{0} - 68]{364},   m[r28{0} - 72]=m[r28{0} - 72]{364},
                m[r28{0} - 76]=m[r28{0} - 76]{364},   m[r28{0} - 80]=m[r28{0} - 80]{364},
                m[r28{0} - 84]=m[r28{0} - 84]{364},   m[r28{0} - 88]=m[r28{0} - 88]{364},
                m[r28{0} - 92]=m[r28{0} - 92]{364},   m[r28{0} - 96]=m[r28{0} - 96]{364},   <all>=<all>{364},
                tmp1=tmp1{364},   %flags=%flags{364},   %ZF=%ZF{364},   %CF=%CF{364}
              Live variables:  in proc _start
dest is not lib
call:   80 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* m[esp_2 - 40] := m[esp_2 - 40]
                *c** m[esp_2 - 36] := m[esp_2 - 36]
              )
              Reaching definitions: r24=r24{72},   r25=r25{72},   r26=r26{72},   r28=r28{384} - 44,   r29=r29{385},
                m[r28{0} - 4]=m[r28{0} - 4]{417},   m[r28{0} - 36]=m[r28{0} - 36]{418},
                m[r28{0} - 64]=m[r28{0} - 64]{419},   m[r28{0} - 68]=m[r28{0} - 68]{420},
                m[r28{0} - 72]=m[r28{0} - 72]{421},   m[r28{0} - 76]=m[r28{0} - 76]{422},
                m[r28{0} - 80]=m[r28{0} - 80]{423},   m[r28{0} - 84]=m[r28{0} - 84]{424},
                m[r28{0} - 88]=m[r28{0} - 88]{425},   m[r28{0} - 92]=m[r28{0} - 92]{426},
                m[r28{0} - 96]=m[r28{0} - 96]{427},   tmp1=r24{72} + 1,   %flags=SUBFLAGS32( r24{72}, -1, r24{72} + 1 )
                %ZF=(r24{72} + 1) = 0,   %CF=r24{72} <u -1
              Live variables: eax in proc _start
result:    0 *32* eax := -
dest is not lib
call:   89 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetFileSize(
              )
              Reaching definitions: r24=r24{390},   r25=r25{391},   r26=r26{392},   r28=r28{393} - 4,   r29=r29{394},
                m[r28{0} - 4]=m[r28{0} - 4]{428},   m[r28{0} - 36]=m[r28{0} - 36]{429},
                m[r28{0} - 64]=m[r28{0} - 64]{430},   m[r28{0} - 68]=m[r28{0} - 68]{431},
                m[r28{0} - 72]=m[r28{0} - 72]{432},   m[r28{0} - 76]=m[r28{0} - 76]{433},
                m[r28{0} - 80]=m[r28{0} - 80]{434},   m[r28{0} - 84]=m[r28{0} - 84]{435},
                m[r28{0} - 88]=m[r28{0} - 88]{436},   m[r28{0} - 92]=m[r28{0} - 92]{437},
                m[r28{0} - 96]=m[r28{0} - 96]{438},   tmp1=tmp1{395},   %flags=%flags{396},   %ZF=%ZF{397},
                %CF=%CF{398}
              Live variables:  in proc _start
dest is not lib
call:  107 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL CreateFileA(
              )
              Reaching definitions: r24=r24{89},   r25=r25{89},   r26=r26{89},   r28=r28{393} - 32,   r29=r29{394},
                m[r28{0} - 4]=m[r28{0} - 4]{428},   m[r28{0} - 36]=m[r28{0} - 36]{429},
                m[r28{0} - 64]=m[r28{0} - 64]{430},   m[r28{0} - 68]=m[r28{0} - 68]{431},
                m[r28{0} - 72]=m[r28{0} - 72]{432},   m[r28{0} - 76]=m[r28{0} - 76]{433},
                m[r28{0} - 80]=m[r28{0} - 80]{434},   m[r28{0} - 84]=m[r28{0} - 84]{435},
                m[r28{0} - 88]=m[r28{0} - 88]{436},   m[r28{0} - 92]=m[r28{0} - 92]{437},
                m[r28{0} - 96]=m[r28{0} - 96]{438},   tmp1=tmp1{395},   %flags=%flags{396},   %ZF=%ZF{397},
                %CF=%CF{398}
              Live variables: eax in proc _start
result:    0 *32* eax := -
dest is not lib
call:  118 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL CloseHandle(
                *HANDLE* m[esp_11 - 40] := m[esp_11 - 40]
              )
              Reaching definitions: r24=r24{107},   r25=r25{107},   r26=r26{107},   r28=r28{393} - 44,   r29=r29{394},
                m[r28{0} - 4]=m[r28{0} - 4]{428},   m[r28{0} - 36]=m[r28{0} - 36]{429},
                m[r28{0} - 64]=m[r28{0} - 64]{430},   m[r28{0} - 68]=m[r28{0} - 68]{431},
                m[r28{0} - 72]=m[r28{0} - 72]{432},   m[r28{0} - 76]=m[r28{0} - 76]{433},
                m[r28{0} - 80]=m[r28{0} - 80]{434},   m[r28{0} - 84]=m[r28{0} - 84]{435},
                m[r28{0} - 88]=m[r28{0} - 88]{436},   m[r28{0} - 92]=m[r28{0} - 92]{437},
                m[r28{0} - 96]=m[r28{0} - 96]{438},   tmp1=tmp1{395},   %flags=%flags{396},   %ZF=%ZF{397},
                %CF=%CF{398}
              Live variables:  in proc _start
dest is not lib
call:  124 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetLastError(
              )
              Reaching definitions: r24=r24{118},   r25=r25{118},   r26=r26{118},   r28=r28{393} - 44,   r29=r29{394},
                m[r28{0} - 4]=m[r28{0} - 4]{428},   m[r28{0} - 36]=m[r28{0} - 36]{429},
                m[r28{0} - 64]=m[r28{0} - 64]{430},   m[r28{0} - 68]=m[r28{0} - 68]{431},
                m[r28{0} - 72]=m[r28{0} - 72]{432},   m[r28{0} - 76]=m[r28{0} - 76]{433},
                m[r28{0} - 80]=m[r28{0} - 80]{434},   m[r28{0} - 84]=m[r28{0} - 84]{435},
                m[r28{0} - 88]=m[r28{0} - 88]{436},   m[r28{0} - 92]=m[r28{0} - 92]{437},
                m[r28{0} - 96]=m[r28{0} - 96]{438},   tmp1=tmp1{395},   %flags=%flags{396},   %ZF=%ZF{397},
                %CF=%CF{398}
              Live variables:  in proc _start
dest is not lib
call:  130 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetFileType(
              )
              Reaching definitions: r24=r24{124},   r25=r25{124},   r26=r26{124},   r28=r28{393} - 48,   r29=r29{394},
                m[r28{0} - 4]=m[r28{0} - 4]{428},   m[r28{0} - 36]=m[r28{0} - 36]{429},
                m[r28{0} - 64]=m[r28{0} - 64]{430},   m[r28{0} - 68]=m[r28{0} - 68]{431},
                m[r28{0} - 72]=m[r28{0} - 72]{432},   m[r28{0} - 76]=m[r28{0} - 76]{433},
                m[r28{0} - 80]=m[r28{0} - 80]{434},   m[r28{0} - 84]=m[r28{0} - 84]{435},
                m[r28{0} - 88]=m[r28{0} - 88]{436},   m[r28{0} - 92]=m[r28{0} - 92]{437},
                m[r28{0} - 96]=m[r28{0} - 96]{438},   tmp1=tmp1{395},   %flags=%flags{396},   %ZF=%ZF{397},
                %CF=%CF{398}
              Live variables: eax,  ecx,  edx in proc _start
result:    0 *32* eax := -
result:    0 *v* ecx := -
result:    0 *v* edx := -
dest is not lib
call:  143 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetFileSize(
              )
              Reaching definitions: r24=r24{134},   r25=r25{134},   r26=r26{134},   r28=r28{134} - 12,   r29=r29{134},
                m[r28{0} - 4]=m[r28{0} - 4]{134},   m[r28{0} - 36]=m[r28{0} - 36]{134},
                m[r28{0} - 64]=m[r28{0} - 64]{134},   m[r28{0} - 68]=m[r28{0} - 68]{134},
                m[r28{0} - 72]=m[r28{0} - 72]{134},   m[r28{0} - 76]=m[r28{0} - 76]{134},
                m[r28{0} - 80]=m[r28{0} - 80]{134},   m[r28{0} - 84]=m[r28{0} - 84]{134},
                m[r28{0} - 88]=m[r28{0} - 88]{134},   m[r28{0} - 92]=m[r28{0} - 92]{134},
                m[r28{0} - 96]=m[r28{0} - 96]{134},   m[r28{0} - 4]=m[r28{0} - 4]{134},
                m[r28{0} - 36]=m[r28{0} - 36]{134},   m[r28{0} - 64]=m[r28{0} - 64]{134},
                m[r28{0} - 68]=m[r28{0} - 68]{134},   m[r28{0} - 72]=m[r28{0} - 72]{134},
                m[r28{0} - 76]=m[r28{0} - 76]{134},   m[r28{0} - 80]=m[r28{0} - 80]{134},
                m[r28{0} - 84]=m[r28{0} - 84]{134},   m[r28{0} - 88]=m[r28{0} - 88]{134},
                m[r28{0} - 92]=m[r28{0} - 92]{134},   m[r28{0} - 96]=m[r28{0} - 96]{134},   <all>=<all>{134},
                tmp1=tmp1{134},   %flags=%flags{134},   %ZF=%ZF{134},   %CF=%CF{134}
              Live variables:  in proc _start
dest is not lib
call:  151 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL CloseHandle(
                *HANDLE* m[esp_4 - 12] := m[esp_4 - 12]
              )
              Reaching definitions: r24=r24{144},   r25=r25{143},   r26=r26{143},   r28=r28{134} - 16,   r29=r29{134},
                m[r28{0} - 4]=m[r28{0} - 4]{134},   m[r28{0} - 36]=m[r28{0} - 36]{134},
                m[r28{0} - 64]=m[r28{0} - 64]{134},   m[r28{0} - 68]=m[r28{0} - 68]{134},
                m[r28{0} - 72]=m[r28{0} - 72]{134},   m[r28{0} - 76]=m[r28{0} - 76]{134},
                m[r28{0} - 80]=m[r28{0} - 80]{134},   m[r28{0} - 84]=m[r28{0} - 84]{134},
                m[r28{0} - 88]=m[r28{0} - 88]{134},   m[r28{0} - 92]=m[r28{0} - 92]{134},
                m[r28{0} - 96]=m[r28{0} - 96]{134},   m[r28{0} - 4]=m[r28{0} - 4]{134},
                m[r28{0} - 36]=m[r28{0} - 36]{134},   m[r28{0} - 64]=m[r28{0} - 64]{134},
                m[r28{0} - 68]=m[r28{0} - 68]{134},   m[r28{0} - 72]=m[r28{0} - 72]{134},
                m[r28{0} - 76]=m[r28{0} - 76]{134},   m[r28{0} - 80]=m[r28{0} - 80]{134},
                m[r28{0} - 84]=m[r28{0} - 84]{134},   m[r28{0} - 88]=m[r28{0} - 88]{134},
                m[r28{0} - 92]=m[r28{0} - 92]{134},   m[r28{0} - 96]=m[r28{0} - 96]{134},   <all>=<all>{134},
                tmp1=tmp1{134},   %flags=%flags{134},   %ZF=%ZF{134},   %CF=%CF{134}
              Live variables:  in proc _start
dest is not lib
call:  161 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetFileSize(
              )
              Reaching definitions: r24=r24{151},   r25=r25{151},   r26=r26{151},   r28=r28{134} - 20,   r29=r29{134},
                m[r28{0} - 4]=m[r28{0} - 4]{134},   m[r28{0} - 36]=m[r28{0} - 36]{134},
                m[r28{0} - 64]=m[r28{0} - 64]{134},   m[r28{0} - 68]=m[r28{0} - 68]{134},
                m[r28{0} - 72]=m[r28{0} - 72]{134},   m[r28{0} - 76]=m[r28{0} - 76]{134},
                m[r28{0} - 80]=m[r28{0} - 80]{134},   m[r28{0} - 84]=m[r28{0} - 84]{134},
                m[r28{0} - 88]=m[r28{0} - 88]{134},   m[r28{0} - 92]=m[r28{0} - 92]{134},
                m[r28{0} - 96]=m[r28{0} - 96]{134},   m[r28{0} - 4]=m[r28{0} - 4]{134},
                m[r28{0} - 36]=m[r28{0} - 36]{134},   m[r28{0} - 64]=m[r28{0} - 64]{134},
                m[r28{0} - 68]=m[r28{0} - 68]{134},   m[r28{0} - 72]=m[r28{0} - 72]{134},
                m[r28{0} - 76]=m[r28{0} - 76]{134},   m[r28{0} - 80]=m[r28{0} - 80]{134},
                m[r28{0} - 84]=m[r28{0} - 84]{134},   m[r28{0} - 88]=m[r28{0} - 88]{134},
                m[r28{0} - 92]=m[r28{0} - 92]{134},   m[r28{0} - 96]=m[r28{0} - 96]{134},   <all>=<all>{134},
                tmp1=tmp1{134},   %flags=LOGICALFLAGS32( m[r29{134} - 24] ),   %ZF=LOGICALFLAGS32( m[r29{134} - 24] ),
                %CF=LOGICALFLAGS32( m[r29{134} - 24] )
              Live variables:  in proc _start
dest is not lib
call:  165 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetLastError(
              )
              Reaching definitions: r24=r24{161},   r25=r25{161},   r26=r26{161},   r28=r28{134} - 20,   r29=r29{134},
                m[r28{0} - 4]=m[r28{0} - 4]{134},   m[r28{0} - 36]=m[r28{0} - 36]{134},
                m[r28{0} - 64]=m[r28{0} - 64]{134},   m[r28{0} - 68]=m[r28{0} - 68]{134},
                m[r28{0} - 72]=m[r28{0} - 72]{134},   m[r28{0} - 76]=m[r28{0} - 76]{134},
                m[r28{0} - 80]=m[r28{0} - 80]{134},   m[r28{0} - 84]=m[r28{0} - 84]{134},
                m[r28{0} - 88]=m[r28{0} - 88]{134},   m[r28{0} - 92]=m[r28{0} - 92]{134},
                m[r28{0} - 96]=m[r28{0} - 96]{134},   m[r28{0} - 4]=m[r28{0} - 4]{134},
                m[r28{0} - 36]=m[r28{0} - 36]{134},   m[r28{0} - 64]=m[r28{0} - 64]{134},
                m[r28{0} - 68]=m[r28{0} - 68]{134},   m[r28{0} - 72]=m[r28{0} - 72]{134},
                m[r28{0} - 76]=m[r28{0} - 76]{134},   m[r28{0} - 80]=m[r28{0} - 80]{134},
                m[r28{0} - 84]=m[r28{0} - 84]{134},   m[r28{0} - 88]=m[r28{0} - 88]{134},
                m[r28{0} - 92]=m[r28{0} - 92]{134},   m[r28{0} - 96]=m[r28{0} - 96]{134},   <all>=<all>{134},
                tmp1=tmp1{134},   %flags=LOGICALFLAGS32( m[r29{134} - 24] ),   %ZF=LOGICALFLAGS32( m[r29{134} - 24] ),
                %CF=LOGICALFLAGS32( m[r29{134} - 24] )
              Live variables:  in proc _start
dest is not lib
call:  174 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL CloseHandle(
                *HANDLE* m[esp_4 - 20] := m[esp_4 - 20]
              )
              Reaching definitions: r24=r24{165},   r25=r25{165},   r26=r26{165},   r28=r28{134} - 24,   r29=r29{134},
                m[r28{0} - 4]=m[r28{0} - 4]{134},   m[r28{0} - 36]=m[r28{0} - 36]{134},
                m[r28{0} - 64]=m[r28{0} - 64]{134},   m[r28{0} - 68]=m[r28{0} - 68]{134},
                m[r28{0} - 72]=m[r28{0} - 72]{134},   m[r28{0} - 76]=m[r28{0} - 76]{134},
                m[r28{0} - 80]=m[r28{0} - 80]{134},   m[r28{0} - 84]=m[r28{0} - 84]{134},
                m[r28{0} - 88]=m[r28{0} - 88]{134},   m[r28{0} - 92]=m[r28{0} - 92]{134},
                m[r28{0} - 96]=m[r28{0} - 96]{134},   m[r28{0} - 4]=m[r28{0} - 4]{134},
                m[r28{0} - 36]=m[r28{0} - 36]{134},   m[r28{0} - 64]=m[r28{0} - 64]{134},
                m[r28{0} - 68]=m[r28{0} - 68]{134},   m[r28{0} - 72]=m[r28{0} - 72]{134},
                m[r28{0} - 76]=m[r28{0} - 76]{134},   m[r28{0} - 80]=m[r28{0} - 80]{134},
                m[r28{0} - 84]=m[r28{0} - 84]{134},   m[r28{0} - 88]=m[r28{0} - 88]{134},
                m[r28{0} - 92]=m[r28{0} - 92]{134},   m[r28{0} - 96]=m[r28{0} - 96]{134},   <all>=<all>{134},
                tmp1=tmp1{166},   %flags=ADDFLAGS32( tmp1{166}, 0x41599b, m[r29{134} - 24] ),
                %ZF=ADDFLAGS32( tmp1{166}, 0x41599b, m[r29{134} - 24] ),
                %CF=ADDFLAGS32( tmp1{166}, 0x41599b, m[r29{134} - 24] )
              Live variables: eax,  ecx,  edx in proc _start
result:    0 *32* eax := -
result:    0 *v* ecx := -
result:    0 *v* edx := -
dest is not lib
call:  184 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetFileType(
              )
              Reaching definitions: r24=r24{178},   r25=r25{178},   r26=r26{178},   r28=r28{178} - 8,   r29=r29{178},
                m[r28{0} - 4]=m[r28{0} - 4]{178},   m[r28{0} - 36]=m[r28{0} - 36]{178},
                m[r28{0} - 64]=m[r28{0} - 64]{178},   m[r28{0} - 68]=m[r28{0} - 68]{178},
                m[r28{0} - 72]=m[r28{0} - 72]{178},   m[r28{0} - 76]=m[r28{0} - 76]{178},
                m[r28{0} - 80]=m[r28{0} - 80]{178},   m[r28{0} - 84]=m[r28{0} - 84]{178},
                m[r28{0} - 88]=m[r28{0} - 88]{178},   m[r28{0} - 92]=m[r28{0} - 92]{178},
                m[r28{0} - 96]=m[r28{0} - 96]{178},   m[r28{0} - 4]=m[r28{0} - 4]{178},
                m[r28{0} - 36]=m[r28{0} - 36]{178},   m[r28{0} - 64]=m[r28{0} - 64]{178},
                m[r28{0} - 68]=m[r28{0} - 68]{178},   m[r28{0} - 72]=m[r28{0} - 72]{178},
                m[r28{0} - 76]=m[r28{0} - 76]{178},   m[r28{0} - 80]=m[r28{0} - 80]{178},
                m[r28{0} - 84]=m[r28{0} - 84]{178},   m[r28{0} - 88]=m[r28{0} - 88]{178},
                m[r28{0} - 92]=m[r28{0} - 92]{178},   m[r28{0} - 96]=m[r28{0} - 96]{178},   <all>=<all>{178},
                tmp1=tmp1{178},   %flags=%flags{178},   %ZF=%ZF{178},   %CF=%CF{178}
              Live variables:  in proc _start
dest is not lib
call:  193 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL CloseHandle(
                *HANDLE* m[esp_5 - 12] := m[esp_5 - 12]
              )
              Reaching definitions: r24=r29{178} - 4,   r25=r25{184},   r26=r26{184},   r28=r28{178} - 16,
                r29=r29{178},   m[r28{0} - 4]=m[r28{0} - 4]{178},   m[r28{0} - 36]=m[r28{0} - 36]{178},
                m[r28{0} - 64]=m[r28{0} - 64]{178},   m[r28{0} - 68]=m[r28{0} - 68]{178},
                m[r28{0} - 72]=m[r28{0} - 72]{178},   m[r28{0} - 76]=m[r28{0} - 76]{178},
                m[r28{0} - 80]=m[r28{0} - 80]{178},   m[r28{0} - 84]=m[r28{0} - 84]{178},
                m[r28{0} - 88]=m[r28{0} - 88]{178},   m[r28{0} - 92]=m[r28{0} - 92]{178},
                m[r28{0} - 96]=m[r28{0} - 96]{178},   m[r28{0} - 4]=m[r28{0} - 4]{178},
                m[r28{0} - 36]=m[r28{0} - 36]{178},   m[r28{0} - 64]=m[r28{0} - 64]{178},
                m[r28{0} - 68]=m[r28{0} - 68]{178},   m[r28{0} - 72]=m[r28{0} - 72]{178},
                m[r28{0} - 76]=m[r28{0} - 76]{178},   m[r28{0} - 80]=m[r28{0} - 80]{178},
                m[r28{0} - 84]=m[r28{0} - 84]{178},   m[r28{0} - 88]=m[r28{0} - 88]{178},
                m[r28{0} - 92]=m[r28{0} - 92]{178},   m[r28{0} - 96]=m[r28{0} - 96]{178},   <all>=<all>{178},
                tmp1=tmp1{178},   %flags=%flags{178},   %ZF=%ZF{178},   %CF=%CF{178}
              Live variables:  in proc _start
dest is not lib
call:  213 {*32* eax, *v* ecx, *v* edx, *union* esp_11} := CALL CreateFileA(
              )
              Reaching definitions: r24=r24{193},   r25=r25{193},   r26=r26{193},   r28=r28{178} - 44,   r29=r29{178},
                m[r28{0} - 4]=m[r28{0} - 4]{178},   m[r28{0} - 36]=m[r28{0} - 36]{178},
                m[r28{0} - 64]=m[r28{0} - 64]{178},   m[r28{0} - 68]=m[r28{0} - 68]{178},
                m[r28{0} - 72]=m[r28{0} - 72]{178},   m[r28{0} - 76]=m[r28{0} - 76]{178},
                m[r28{0} - 80]=m[r28{0} - 80]{178},   m[r28{0} - 84]=m[r28{0} - 84]{178},
                m[r28{0} - 88]=m[r28{0} - 88]{178},   m[r28{0} - 92]=m[r28{0} - 92]{178},
                m[r28{0} - 96]=m[r28{0} - 96]{178},   m[r28{0} - 4]=m[r28{0} - 4]{178},
                m[r28{0} - 36]=m[r28{0} - 36]{178},   m[r28{0} - 64]=m[r28{0} - 64]{178},
                m[r28{0} - 68]=m[r28{0} - 68]{178},   m[r28{0} - 72]=m[r28{0} - 72]{178},
                m[r28{0} - 76]=m[r28{0} - 76]{178},   m[r28{0} - 80]=m[r28{0} - 80]{178},
                m[r28{0} - 84]=m[r28{0} - 84]{178},   m[r28{0} - 88]=m[r28{0} - 88]{178},
                m[r28{0} - 92]=m[r28{0} - 92]{178},   m[r28{0} - 96]=m[r28{0} - 96]{178},   <all>=<all>{178},
                tmp1=tmp1{178},   %flags=%flags{178},   %ZF=%ZF{178},   %CF=%CF{178}
              Live variables: eax,  esp_11 in proc _start
result:    0 *32* eax := -
result:    0 *union* esp_11 := -
dest is not lib
call:  235 {*32* eax, *v* ecx, *v* edx, *v** esp_2} := CALL CreateFileW(
              )
              Reaching definitions: r24=r24{213},   r25=r25{213},   r26=r26{213},   r28=r28{178} - 72,   r29=r29{178},
                m[r28{0} - 4]=m[r28{0} - 4]{178},   m[r28{0} - 36]=m[r28{0} - 36]{178},
                m[r28{0} - 64]=m[r28{0} - 64]{178},   m[r28{0} - 68]=m[r28{0} - 68]{178},
                m[r28{0} - 72]=m[r28{0} - 72]{178},   m[r28{0} - 76]=m[r28{0} - 76]{178},
                m[r28{0} - 80]=m[r28{0} - 80]{178},   m[r28{0} - 84]=m[r28{0} - 84]{178},
                m[r28{0} - 88]=m[r28{0} - 88]{178},   m[r28{0} - 92]=m[r28{0} - 92]{178},
                m[r28{0} - 96]=m[r28{0} - 96]{178},   m[r28{0} - 4]=m[r28{0} - 4]{178},
                m[r28{0} - 36]=m[r28{0} - 36]{178},   m[r28{0} - 64]=m[r28{0} - 64]{178},
                m[r28{0} - 68]=m[r28{0} - 68]{178},   m[r28{0} - 72]=m[r28{0} - 72]{178},
                m[r28{0} - 76]=m[r28{0} - 76]{178},   m[r28{0} - 80]=m[r28{0} - 80]{178},
                m[r28{0} - 84]=m[r28{0} - 84]{178},   m[r28{0} - 88]=m[r28{0} - 88]{178},
                m[r28{0} - 92]=m[r28{0} - 92]{178},   m[r28{0} - 96]=m[r28{0} - 96]{178},   <all>=<all>{178},
                tmp1=r24{213} + 1,   %flags=SUBFLAGS32( r24{213}, -1, r24{213} + 1 ),   %ZF=(r24{213} + 1) = 0,
                %CF=r24{213} <u -1
              Live variables: eax,  esp_2 in proc _start
result:    0 *32* eax := -
result:    0 *v** esp_2 := -
dest is not lib
call:  245 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetLastError(
              )
              Reaching definitions: r24=r24{235},   r25=r25{235},   r26=r26{235},   r28=r28{178} - 76,   r29=r29{178},
                m[r28{0} - 4]=m[r28{0} - 4]{178},   m[r28{0} - 36]=m[r28{0} - 36]{178},
                m[r28{0} - 64]=m[r28{0} - 64]{178},   m[r28{0} - 68]=m[r28{0} - 68]{178},
                m[r28{0} - 72]=m[r28{0} - 72]{178},   m[r28{0} - 76]=m[r28{0} - 76]{178},
                m[r28{0} - 80]=m[r28{0} - 80]{178},   m[r28{0} - 84]=m[r28{0} - 84]{178},
                m[r28{0} - 88]=m[r28{0} - 88]{178},   m[r28{0} - 92]=m[r28{0} - 92]{178},
                m[r28{0} - 96]=m[r28{0} - 96]{178},   m[r28{0} - 4]=m[r28{0} - 4]{178},
                m[r28{0} - 36]=m[r28{0} - 36]{178},   m[r28{0} - 64]=m[r28{0} - 64]{178},
                m[r28{0} - 68]=m[r28{0} - 68]{178},   m[r28{0} - 72]=m[r28{0} - 72]{178},
                m[r28{0} - 76]=m[r28{0} - 76]{178},   m[r28{0} - 80]=m[r28{0} - 80]{178},
                m[r28{0} - 84]=m[r28{0} - 84]{178},   m[r28{0} - 88]=m[r28{0} - 88]{178},
                m[r28{0} - 92]=m[r28{0} - 92]{178},   m[r28{0} - 96]=m[r28{0} - 96]{178},   <all>=<all>{178},
                tmp1=r24{235} + 1,   %flags=SUBFLAGS32( r24{235}, -1, r24{235} + 1 ),   %ZF=(r24{235} + 1) = 0,
                %CF=r24{235} <u -1
              Live variables:  in proc _start
dest is not lib
call:  251 {*32* eax, *v* ecx, *v* edx, *v** esp_6} := CALL GetLastError(
              )
              Reaching definitions: r24=r24{245},   r25=r25{245},   r26=r26{245},   r28=r28{178} - 80,   r29=r29{178},
                m[r28{0} - 4]=m[r28{0} - 4]{178},   m[r28{0} - 36]=m[r28{0} - 36]{178},
                m[r28{0} - 64]=m[r28{0} - 64]{178},   m[r28{0} - 68]=m[r28{0} - 68]{178},
                m[r28{0} - 72]=m[r28{0} - 72]{178},   m[r28{0} - 76]=m[r28{0} - 76]{178},
                m[r28{0} - 80]=m[r28{0} - 80]{178},   m[r28{0} - 84]=m[r28{0} - 84]{178},
                m[r28{0} - 88]=m[r28{0} - 88]{178},   m[r28{0} - 92]=m[r28{0} - 92]{178},
                m[r28{0} - 96]=m[r28{0} - 96]{178},   m[r28{0} - 4]=m[r28{0} - 4]{178},
                m[r28{0} - 36]=m[r28{0} - 36]{178},   m[r28{0} - 64]=m[r28{0} - 64]{178},
                m[r28{0} - 68]=m[r28{0} - 68]{178},   m[r28{0} - 72]=m[r28{0} - 72]{178},
                m[r28{0} - 76]=m[r28{0} - 76]{178},   m[r28{0} - 80]=m[r28{0} - 80]{178},
                m[r28{0} - 84]=m[r28{0} - 84]{178},   m[r28{0} - 88]=m[r28{0} - 88]{178},
                m[r28{0} - 92]=m[r28{0} - 92]{178},   m[r28{0} - 96]=m[r28{0} - 96]{178},   <all>=<all>{178},
                tmp1=r24{235} + 1,   %flags=SUBFLAGS32( r24{235}, -1, r24{235} + 1 ),   %ZF=(r24{235} + 1) = 0,
                %CF=r24{235} <u -1
              Live variables: esp_6 in proc _start
result:    0 *v** esp_6 := -
found seq with more than one outedge!
taken branch is first out edge
found seq with more than one outedge!
