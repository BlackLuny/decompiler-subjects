Unknown library function AreAnyAccessesGranted
Unknown library function VirtualProtect
assgn   15 *32* r31 := m[0x403004]
is readonly
assgn 1385 *32* %pc := m[0x403000]
is readonly
assgn 1397 *32* %pc := m[0x40300c]
is readonly
assgn 1410 *32* %pc := m[0x403010]
is readonly
assgn 1514 *32* %pc := m[0x403014]
is readonly
assgn 1545 *32* %pc := m[0x40301c]
is readonly
assgn 1559 *32* %pc := m[0x40301c]
is readonly
assgn 1591 *32* %pc := m[0x403018]
is readonly
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 20 to local table
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 32 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 48 to local table
finding final parameters for _start
potential param r27
found new parameter r27
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
local esp has type void * that doesn't agree with type of define void of a library, why?
local eax has type __size32 that doesn't agree with type of define unsigned int of a library, why?
local ecx has type void that doesn't agree with type of define unsigned int of a library, why?
local ecx has type unsigned int that doesn't agree with type of define union { unsigned int x1; void * x2; } of a library, why?
local edx has type void that doesn't agree with type of define union { unsigned int x1; void * x2; } of a library, why?
local eax has type unsigned int that doesn't agree with type of define __size32 of a library, why?
local ecx has type union { unsigned int x1; void * x2; } that doesn't agree with type of define unsigned int of a library, why?
local ecx has type unsigned int that doesn't agree with type of define void of a library, why?
local edx has type union { unsigned int x1; void * x2; } that doesn't agree with type of define void of a library, why?
dest is not lib
call: 1386 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL AreAnyAccessesGranted(
              )
              Reaching definitions: r9=truncu(32,8,r25{1373} * 9),   r24=r24{1373},   r25=r25{1373} * 9,
                r26=r26{1373},   r27=r27{1373},   r28=r28{1373} - 12,   r29=r29{1373},   r30=r30{1373} + r24{1373},
                r31=r31{1373},   m[r28{0} - 12]=m[r28{0} - 12]{1373},   m[r28{0} - 16]=m[r28{0} - 16]{1373},
                m[r28{0} - 20]=m[r28{0} - 20]{1373},   m[r28{0} - 24]=m[r28{0} - 24]{1373},
                m[r28{0} - 28]=m[r28{0} - 28]{1373},   m[r28{0} - 32]=m[r28{0} - 32]{1373},
                m[r28{0} - 36]=m[r28{0} - 36]{1373},   m[r28{0} - 40]=m[r28{0} - 40]{1373},
                m[r28{0} - 44]=m[r28{0} - 44]{1373},   m[r28{0} - 48]=m[r28{0} - 48]{1373},
                m[r28{0} - 12]=m[r28{0} - 12]{1373},   m[r28{0} - 16]=m[r28{0} - 16]{1373},
                m[r28{0} - 20]=m[r28{0} - 20]{1373},   m[r28{0} - 24]=m[r28{0} - 24]{1373},
                m[r28{0} - 28]=m[r28{0} - 28]{1373},   m[r28{0} - 32]=m[r28{0} - 32]{1373},
                m[r28{0} - 36]=m[r28{0} - 36]{1373},   m[r28{0} - 40]=m[r28{0} - 40]{1373},
                m[r28{0} - 44]=m[r28{0} - 44]{1373},   m[r28{0} - 48]=m[r28{0} - 48]{1373},   <all>=<all>{1373},
                tmp1=r30{1373},   %flags=ADDFLAGS32( r30{1373}, r24{1373}, r30{1373} + r24{1373} ),
                %ZF=ADDFLAGS32( r30{1373}, r24{1373}, r30{1373} + r24{1373} ),
                %CF=ADDFLAGS32( r30{1373}, r24{1373}, r30{1373} + r24{1373} )
              Live variables: eax in proc _start
result:    0 *32* eax := -
dest is not lib
call: 1398 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL CloseHandle(
                *HANDLE* m[esp_80 - 12] := m[esp_80 - 12]
              )
              Reaching definitions: r9=truncu(32,8,r25{1373} * 9),   r24=r24{1386},   r25=r25{1386},   r26=r26{1386},
                r27=r27{1373},   r28=r28{1373} - 16,   r29=r29{1373},   r30=r30{1594},   r31=r31{1373},
                m[r28{0} - 12]=m[r28{0} - 12]{1373},   m[r28{0} - 16]=m[r28{0} - 16]{1373},
                m[r28{0} - 20]=m[r28{0} - 20]{1373},   m[r28{0} - 24]=m[r28{0} - 24]{1373},
                m[r28{0} - 28]=m[r28{0} - 28]{1373},   m[r28{0} - 32]=m[r28{0} - 32]{1373},
                m[r28{0} - 36]=m[r28{0} - 36]{1373},   m[r28{0} - 40]=m[r28{0} - 40]{1373},
                m[r28{0} - 44]=m[r28{0} - 44]{1373},   m[r28{0} - 48]=m[r28{0} - 48]{1373},
                m[r28{0} - 12]=m[r28{0} - 12]{1373},   m[r28{0} - 16]=m[r28{0} - 16]{1373},
                m[r28{0} - 20]=m[r28{0} - 20]{1373},   m[r28{0} - 24]=m[r28{0} - 24]{1373},
                m[r28{0} - 28]=m[r28{0} - 28]{1373},   m[r28{0} - 32]=m[r28{0} - 32]{1373},
                m[r28{0} - 36]=m[r28{0} - 36]{1373},   m[r28{0} - 40]=m[r28{0} - 40]{1373},
                m[r28{0} - 44]=m[r28{0} - 44]{1373},   m[r28{0} - 48]=m[r28{0} - 48]{1373},   <all>=<all>{1373},
                tmp1=tmp1{1595},   %flags=%flags{1596},   %ZF=%ZF{1597},   %CF=%CF{1598}
              Live variables:  in proc _start
dest is not lib
call: 1411 {*u32* eax, *u32* ecx, *v* edx, *v* esp} := CALL VirtualProtect(
              )
              Reaching definitions: r9=truncu(32,8,r25{1373} * 9),   r24=r28{1373} + 8,   r25=r25{1398},
                r26=r26{1398},   r27=r27{1373},   r28=r28{1373} - 28,   r29=r29{1373},   r30=r30{1594},   r31=r31{1373}
                m[r28{0} - 12]=m[r28{0} - 12]{1373},   m[r28{0} - 16]=m[r28{0} - 16]{1373},
                m[r28{0} - 20]=m[r28{0} - 20]{1373},   m[r28{0} - 24]=m[r28{0} - 24]{1373},
                m[r28{0} - 28]=m[r28{0} - 28]{1373},   m[r28{0} - 32]=m[r28{0} - 32]{1373},
                m[r28{0} - 36]=m[r28{0} - 36]{1373},   m[r28{0} - 40]=m[r28{0} - 40]{1373},
                m[r28{0} - 44]=m[r28{0} - 44]{1373},   m[r28{0} - 48]=m[r28{0} - 48]{1373},
                m[r28{0} - 12]=m[r28{0} - 12]{1373},   m[r28{0} - 16]=m[r28{0} - 16]{1373},
                m[r28{0} - 20]=m[r28{0} - 20]{1373},   m[r28{0} - 24]=m[r28{0} - 24]{1373},
                m[r28{0} - 28]=m[r28{0} - 28]{1373},   m[r28{0} - 32]=m[r28{0} - 32]{1373},
                m[r28{0} - 36]=m[r28{0} - 36]{1373},   m[r28{0} - 40]=m[r28{0} - 40]{1373},
                m[r28{0} - 44]=m[r28{0} - 44]{1373},   m[r28{0} - 48]=m[r28{0} - 48]{1373},   <all>=<all>{1373},
                tmp1=tmp1{1595},   %flags=%flags{1596},   %ZF=%ZF{1597},   %CF=%CF{1598}
              Live variables: eax,  ecx in proc _start
result:    0 *u32* eax := -
result:    0 *u32* ecx := -
dest is not lib
call: 1515 {*union* eax_5, *union* ecx, *union* edx, *v* esp} := CALL LoadLibraryA(
                *LPCSTR* m[esp_80 - 28] := m[esp_80 - 28]
              )
              Reaching definitions: r9=r9{1646},   r24=r24{1647},   r25=r25{1648},   r26=r26{1506} + 0x401200,
                r27=r27{1650},   r28=(r28{1373} - 24) - 8,   r29=0x401200,   r30=r30{1652},   r31=r31{1653},
                m[r28{0} - 12]=m[r28{0} - 12]{1373},   m[r28{0} - 16]=m[r28{0} - 16]{1373},
                m[r28{0} - 20]=m[r28{0} - 20]{1373},   m[r28{0} - 24]=m[r28{0} - 24]{1373},
                m[r28{0} - 28]=m[r28{0} - 28]{1373},   m[r28{0} - 32]=m[r28{0} - 32]{1373},
                m[r28{0} - 36]=m[r28{0} - 36]{1373},   m[r28{0} - 40]=m[r28{0} - 40]{1373},
                m[r28{0} - 44]=m[r28{0} - 44]{1373},   m[r28{0} - 48]=m[r28{0} - 48]{1373},
                m[r28{0} - 12]=m[r28{0} - 12]{1373},   m[r28{0} - 16]=m[r28{0} - 16]{1373},
                m[r28{0} - 20]=m[r28{0} - 20]{1373},   m[r28{0} - 24]=m[r28{0} - 24]{1373},
                m[r28{0} - 28]=m[r28{0} - 28]{1373},   m[r28{0} - 32]=m[r28{0} - 32]{1373},
                m[r28{0} - 36]=m[r28{0} - 36]{1373},   m[r28{0} - 40]=m[r28{0} - 40]{1373},
                m[r28{0} - 44]=m[r28{0} - 44]{1373},   m[r28{0} - 48]=m[r28{0} - 48]{1373},   <all>=<all>{1373},
                tmp1=r26{1506},   %flags=ADDFLAGS32( r26{1506}, 0x401200, r26{1506} + 0x401200 ),
                %ZF=ADDFLAGS32( r26{1506}, 0x401200, r26{1506} + 0x401200 ),
                %CF=ADDFLAGS32( r26{1506}, 0x401200, r26{1506} + 0x401200 )
              Live variables: eax_5,  ecx in proc _start
result:    0 *union* eax_5 := -
result:    0 *union* ecx := -
dest is not lib
call: 1560 {*32* eax, *u32* ecx, *union* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* m[esp_80 - 32] := m[esp_80 - 32]
                *c** m[esp_80 - 28] := m[esp_80 - 28]
              )
              Reaching definitions: r9=truncu(32,8,r24{1660} + 0x401202),   r24=r24{1660},   r25=r24{1660} + 0x401202,
                r26=r26{1662},   r27=r24{1515},   r28=(r28{1373} - 24) - 12,   r29=0x401200,   r30=r30{1664},
                r31=r31{1665},   m[r28{0} - 12]=m[r28{0} - 12]{1373},   m[r28{0} - 16]=m[r28{0} - 16]{1373},
                m[r28{0} - 20]=m[r28{0} - 20]{1373},   m[r28{0} - 24]=m[r28{0} - 24]{1373},
                m[r28{0} - 28]=m[r28{0} - 28]{1373},   m[r28{0} - 32]=m[r28{0} - 32]{1373},
                m[r28{0} - 36]=m[r28{0} - 36]{1373},   m[r28{0} - 40]=m[r28{0} - 40]{1373},
                m[r28{0} - 44]=m[r28{0} - 44]{1373},   m[r28{0} - 48]=m[r28{0} - 48]{1373},
                m[r28{0} - 12]=m[r28{0} - 12]{1373},   m[r28{0} - 16]=m[r28{0} - 16]{1373},
                m[r28{0} - 20]=m[r28{0} - 20]{1373},   m[r28{0} - 24]=m[r28{0} - 24]{1373},
                m[r28{0} - 28]=m[r28{0} - 28]{1373},   m[r28{0} - 32]=m[r28{0} - 32]{1373},
                m[r28{0} - 36]=m[r28{0} - 36]{1373},   m[r28{0} - 40]=m[r28{0} - 40]{1373},
                m[r28{0} - 44]=m[r28{0} - 44]{1373},   m[r28{0} - 48]=m[r28{0} - 48]{1373},   <all>=<all>{1373},
                tmp1=tmp1{1666},   %flags=%flags{1667},   %ZF=%ZF{1668},   %CF=%CF{1669}
              Live variables: eax,  ecx,  edx in proc _start
result:    0 *32* eax := -
result:    0 *u32* ecx := -
result:    0 *union* edx := -
dest is not lib
call: 1546 {*32* eax, *u32* ecx, *union* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* m[esp_80 - 32] := m[esp_80 - 32]
                *c** m[esp_80 - 28] := m[esp_80 - 28]
              )
              Reaching definitions: r9=r9{1659},   r24=r24{1538},   r25=r25{1661},   r26=r26{1662},   r27=r24{1515},
                r28=(r28{1373} - 24) - 12,   r29=0x401200,   r30=r30{1664},   r31=r31{1665},
                m[r28{0} - 12]=m[r28{0} - 12]{1373},   m[r28{0} - 16]=m[r28{0} - 16]{1373},
                m[r28{0} - 20]=m[r28{0} - 20]{1373},   m[r28{0} - 24]=m[r28{0} - 24]{1373},
                m[r28{0} - 28]=m[r28{0} - 28]{1373},   m[r28{0} - 32]=m[r28{0} - 32]{1373},
                m[r28{0} - 36]=m[r28{0} - 36]{1373},   m[r28{0} - 40]=m[r28{0} - 40]{1373},
                m[r28{0} - 44]=m[r28{0} - 44]{1373},   m[r28{0} - 48]=m[r28{0} - 48]{1373},
                m[r28{0} - 12]=m[r28{0} - 12]{1373},   m[r28{0} - 16]=m[r28{0} - 16]{1373},
                m[r28{0} - 20]=m[r28{0} - 20]{1373},   m[r28{0} - 24]=m[r28{0} - 24]{1373},
                m[r28{0} - 28]=m[r28{0} - 28]{1373},   m[r28{0} - 32]=m[r28{0} - 32]{1373},
                m[r28{0} - 36]=m[r28{0} - 36]{1373},   m[r28{0} - 40]=m[r28{0} - 40]{1373},
                m[r28{0} - 44]=m[r28{0} - 44]{1373},   m[r28{0} - 48]=m[r28{0} - 48]{1373},   <all>=<all>{1373},
                tmp1=tmp1{1666},   %flags=%flags{1667},   %ZF=%ZF{1668},   %CF=%CF{1669}
              Live variables: eax,  ecx,  edx in proc _start
result:    0 *32* eax := -
result:    0 *u32* ecx := -
result:    0 *union* edx := -
dest is not lib
call: 1592 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL ExitProcess(
                *UINT* m[esp - 4] := m[esp - 4]
              )
              Reaching definitions: r9=r9{1586},   r24=r24{1586},   r25=r25{1586},   r26=r26{1586},   r27=r27{1586},
                r28=r28{1586} - 8,   r29=r29{1586},   r30=r30{1586},   r31=r31{1586},
                m[r28{0} - 12]=m[r28{0} - 12]{1586},   m[r28{0} - 16]=m[r28{0} - 16]{1586},
                m[r28{0} - 20]=m[r28{0} - 20]{1586},   m[r28{0} - 24]=m[r28{0} - 24]{1586},
                m[r28{0} - 28]=m[r28{0} - 28]{1586},   m[r28{0} - 32]=m[r28{0} - 32]{1586},
                m[r28{0} - 36]=m[r28{0} - 36]{1586},   m[r28{0} - 40]=m[r28{0} - 40]{1586},
                m[r28{0} - 44]=m[r28{0} - 44]{1586},   m[r28{0} - 48]=m[r28{0} - 48]{1586},
                m[r28{0} - 12]=m[r28{0} - 12]{1586},   m[r28{0} - 16]=m[r28{0} - 16]{1586},
                m[r28{0} - 20]=m[r28{0} - 20]{1586},   m[r28{0} - 24]=m[r28{0} - 24]{1586},
                m[r28{0} - 28]=m[r28{0} - 28]{1586},   m[r28{0} - 32]=m[r28{0} - 32]{1586},
                m[r28{0} - 36]=m[r28{0} - 36]{1586},   m[r28{0} - 40]=m[r28{0} - 40]{1586},
                m[r28{0} - 44]=m[r28{0} - 44]{1586},   m[r28{0} - 48]=m[r28{0} - 48]{1586},   <all>=<all>{1586},
                tmp1=tmp1{1586},   %flags=%flags{1586},   %ZF=%ZF{1586},   %CF=%CF{1586}
              Live variables:  in proc _start
