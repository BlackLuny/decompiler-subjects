INFO  an - ### holdec 1.1 Copyright 2003-2012 Raimar Falke
INFO  an - Using ./malware_via_email/malware_2463/ia32_pe/subject.exe as executable
read image                              : ............................................................ [ done ]
INFO  fG - Detected PE (Portable Executable)
INFO  ks - wrote ./malware_via_email/malware_2463/ia32_pe/subject.exe.info
INFO  fG - disassembleAndWrite: start a new loop with 1 extra block starts
Disassemble                             : ............................................................ [ done ]
INFO  fG - disassembleAndWrite: running multiline
INFO  ks - wrote ./malware_via_email/malware_2463/ia32_pe/subject.exe.info
Preprocessing 2096 asm lines            : ............................................................ [ done ]
INFO  ks - wrote ./malware_via_email/malware_2463/ia32_pe/subject.exe.info
INFO  fG - disassembleAndWrite: found no new addresses. will stop now.
INFO  ks - wrote ./malware_via_email/malware_2463/ia32_pe/subject.exe.info
Preprocessing 2460 asm lines            : ............................................................ [ done ]
INFO  ks - wrote ./malware_via_email/malware_2463/ia32_pe/subject.exe.info
INFO  fG - reading all asm lines ...
INFO  fG - ... read 2460 asm lines
WARN  w - Address 00403000.0 is excluded by the address filter. Maybe outside text section?
create blocks                           : ............................................................ [ done ]
init blocks                             : ............................................................ [ done ]
Writing 24 methods to cache             : ............................................................ [ done ]
INFO  an - will decompile 24 functions
decompile F_00401010                    : ...INFO  ks - wrote ./malware_via_email/malware_2463/ia32_pe/subject.exe.info
......WARN  ac - Block 6 is already known to have a starting stack offset of -88 but when called from 4 it has an offset of -104
WARN  ac - Block 9 is already known to have a starting stack offset of -124 but when called from 8 it has an offset of -64
WARN  ac - Block 22 is already known to have a starting stack offset of -144 but when called from 21 it has an offset of -124
WARN  ac - Block 29 is already known to have a starting stack offset of -152 but when called from 24 it has an offset of -160
WARN  ac - Block 29 is already known to have a starting stack offset of -160 but when called from 25 it has an offset of -188
WARN  ac - Block 17 is already known to have a starting stack offset of -124 but when called from 16 it has an offset of -128
WARN  ac - Block 2 is already known to have a starting stack offset of -64 but when called from 33 it has an offset of -188
WARN  ac - Block 34 is already known to have a starting stack offset of -64 but when called from 33 it has an offset of -188
WARN  ac - Block 29 is already known to have a starting stack offset of -188 but when called from 28 it has an offset of -144
WARN  ac - Block 15 is already known to have a starting stack offset of -148 but when called from 14 it has an offset of -192
WARN  ac - Block 33 is already known to have a starting stack offset of -188 but when called from 31 it has an offset of -144
WARN  ac - Block 16 is already known to have a starting stack offset of -128 but when called from 15 it has an offset of -200
WARN  ac - Block 31 is already known to have a starting stack offset of -144 but when called from 30 it has an offset of -188
........ failed: A non-current expression of a variable is used in block L31 in reg_a39 = LOAD(ADD(reg_pp42, SEGMENT2ADDR(reg_pp43), 20)): The current setter is reg_zi19 while [reg_pp43] was found. Related expressions are [reg_pp14, reg_pp39, reg_zi19, reg_pp22, reg_pp2, reg_pp30, reg_pp20, reg_zi1, reg_pp43, reg_zi20]
decompile F_00401241                    : .WARN  ag - Referencing unknown line 00401010.0
..INFO  ks - wrote ./malware_via_email/malware_2463/ia32_pe/subject.exe.info
......WARN  ac - Block 1 is already known to have a starting stack offset of -8 but when called from 1 it has an offset of -12
WARN  ac - Block 2 is already known to have a starting stack offset of -8 but when called from 1 it has an offset of -12
................................................... [ done ]
decompile F_00401268                    : .WARN  ag - Referencing unknown line 00401241.0
WARN  ag - Referencing unknown line 00401241.0
WARN  ag - Referencing unknown line 00401a68.0
WARN  ag - Referencing unknown line 00401a68.0
..INFO  ks - wrote ./malware_via_email/malware_2463/ia32_pe/subject.exe.info
......WARN  ac - Block 2 is already known to have a starting stack offset of -40 but when called from 2 it has an offset of -44
WARN  ac - Block 3 is already known to have a starting stack offset of -40 but when called from 2 it has an offset of -44
................................................... [ done ]
decompile F_004012d3                    : ......................................WARN  d - may result in wrong values
WARN  d -   reg_pp24 = PHI(reg_24_local2, reg_24_local0) in Block6
WARN  d -   reg_24_local2 = ADD(reg_pp24, 2) in Block8
...................... [ done ]
decompile F_00401367                    : ............................................................ [ done ]
decompile F_0040138a                    : ............................................................ [ done ]
decompile F_00401390                    : .WARN  ag - Referencing unknown line 0040159a.0
WARN  ag - Referencing unknown line 00401a68.0
..INFO  ks - wrote ./malware_via_email/malware_2463/ia32_pe/subject.exe.info
......WARN  ac - Block 9 is already known to have a starting stack offset of -40 but when called from 20 it has an offset of -56
WARN  ac - Block 10 is already known to have a starting stack offset of -40 but when called from 21 it has an offset of -88
WARN  ac - Block 10 is already known to have a starting stack offset of -88 but when called from 22 it has an offset of -40
WARN  ac - Block 9 is already known to have a starting stack offset of -56 but when called from 15 it has an offset of -40
................................................... [ done ]
decompile F_004014e5                    : .WARN  ag - Referencing unknown line 00401390.0
..INFO  ks - wrote ./malware_via_email/malware_2463/ia32_pe/subject.exe.info
......WARN  ac - Block 17 is already known to have a starting stack offset of -32 but when called from 16 it has an offset of -48
........ failed: A non-current expression of a variable is used in block L11 in reg_a13 = ADD(reg_a12, reg_pp15): The current setter is reg_d2 while [reg_pp15] was found. Related expressions are [reg_pp15, reg_d8, reg_d2, reg_d1]
decompile F_0040159a                    : .................................................ERROR ie - Caught an Exception while trying to construct regions. Will dump blocks and regions (if available).
java.lang.AssertionError: Found 0 jumps but expected one jump to block 13 in the jumps of block 12 (exit block of region 12)
	at holdec.ie.a(Unknown Source)
	at holdec.ie.a(Unknown Source)
	at holdec.ie.a(Unknown Source)
	at holdec.ie.b(Unknown Source)
	at holdec.ie.a(Unknown Source)
	at holdec.ie.f(Unknown Source)
	at holdec.ie.b(Unknown Source)
	at holdec.ie.a(Unknown Source)
	at holdec.dQ.e(Unknown Source)
	at holdec.eQ.a(Unknown Source)
	at holdec.eI.a(Unknown Source)
	at holdec.dQ.a(Unknown Source)
	at holdec.fG.a(Unknown Source)
	at holdec.an.a(Unknown Source)
	at holdec.an.<init>(Unknown Source)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:532)
	at holdec.Holdec.main(Unknown Source)
 failed: java.lang.AssertionError: Found 0 jumps but expected one jump to block 13 in the jumps of block 12 (exit block of region 12)
decompile F_004015e7                    : .WARN  ag - Referencing unknown line 0040166b.0
..INFO  ks - wrote ./malware_via_email/malware_2463/ia32_pe/subject.exe.info
......WARN  ac - Block 4 is already known to have a starting stack offset of -8 but when called from 5 it has an offset of -20
WARN  ac - Block 6 is already known to have a starting stack offset of -8 but when called from 5 it has an offset of -20
WARN  ac - Block 8 is already known to have a starting stack offset of 0 but when called from 7 it has an offset of -12
.............................WARN  d - may result in wrong values
WARN  d -   reg_pp9 = PHI(reg_var12, reg_var10) in Block4
WARN  d -   reg_var12 = ADD(reg_pp9, 20) in Block5
...........ERROR ie - Caught an Exception while trying to construct regions. Will dump blocks and regions (if available).
java.lang.AssertionError
	at holdec.iB.a(Unknown Source)
	at holdec.ie.l(Unknown Source)
	at holdec.ie.f(Unknown Source)
	at holdec.ie.b(Unknown Source)
	at holdec.ie.a(Unknown Source)
	at holdec.dQ.e(Unknown Source)
	at holdec.eQ.a(Unknown Source)
	at holdec.eI.a(Unknown Source)
	at holdec.dQ.a(Unknown Source)
	at holdec.fG.a(Unknown Source)
	at holdec.an.a(Unknown Source)
	at holdec.an.<init>(Unknown Source)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:532)
	at holdec.Holdec.main(Unknown Source)
 failed: java.lang.AssertionError
decompile F_00401639                    : ............................................................ [ done ]
decompile F_0040166b                    : .WARN  ag - Referencing unknown line 00401390.0
..INFO  ks - wrote ./malware_via_email/malware_2463/ia32_pe/subject.exe.info
......WARN  ac - Block 11 is already known to have a starting stack offset of -16 but when called from 10 it has an offset of -28
WARN  ac - Block 2 is already known to have a starting stack offset of -16 but when called from 11 it has an offset of -28
WARN  ac - Block 14 is already known to have a starting stack offset of -16 but when called from 13 it has an offset of -28
WARN  ac - Block 15 is already known to have a starting stack offset of -12 but when called from 14 it has an offset of -24
.............................WARN  d - may result in wrong values
WARN  d -   reg_pp26 = PHI(reg_var30, reg_var32) in Block7
WARN  d -   reg_var32 = ADD(reg_pp26, -12) in Block9
...................... [ done ]
decompile F_004016c9                    : ............................................................ [ done ]
decompile F_004016f7                    : .WARN  ag - Referencing unknown line 00401a43.0
..INFO  ks - wrote ./malware_via_email/malware_2463/ia32_pe/subject.exe.info
......WARN  ac - Block 4 is already known to have a starting stack offset of -16 but when called from 4 it has an offset of -20
WARN  ac - Block 6 is already known to have a starting stack offset of -12 but when called from 5 it has an offset of -16
WARN  ac - Block 7 is already known to have a starting stack offset of -8 but when called from 6 it has an offset of -12
................................................... [ done ]
decompile F_0040174b                    : ............................................................ [ done ]
decompile F_00401767                    : ............................................................ [ done ]
decompile F_00401799                    : .WARN  ag - Referencing unknown line 004018a0.0
........WARN  ac - Block 12 is already known to have a starting stack offset of -28 but when called from 14 it has an offset of -36
WARN  ac - Block 13 is already known to have a starting stack offset of -28 but when called from 20 it has an offset of -36
............ failed: A non-current expression of a variable is used in block L5 in reg_c3 = LOAD(reg_pp2): The current setter is reg_c2 while [reg_pp2] was found. Related expressions are [reg_pp2, reg_c0, reg_c2]
decompile F_0040186e                    : ............................................................ [ done ]
decompile F_004018a0                    : ...INFO  ks - wrote ./malware_via_email/malware_2463/ia32_pe/subject.exe.info
.............. failed: A non-current expression of a variable is used in block L5 in reg_d3 = UNSIGNED_EXTEND(LOAD(ADD(MULT(reg_pp7, 2), reg_d2, SEGMENT2ADDR(reg_pp5)))): The current setter is reg_a6 while [reg_pp7] was found. Related expressions are [reg_pp29, reg_a4, reg_a6, reg_a5, reg_pp7, reg_a45]
decompile F_00401a43                    : ...INFO  ks - wrote ./malware_via_email/malware_2463/ia32_pe/subject.exe.info
...................................WARN  d - may result in wrong values
WARN  d -   reg_pp6 = PHI(reg_var12, reg_var10) in Block2
WARN  d -   reg_var10 = ADD(InitValue(initial_value_of_esi), AND(LOAD(ADD(reg_pp6, 4)), 0x7fffffff), 16) in Block1
...................... [ done ]
decompile F_00401a68                    : ...INFO  ks - wrote ./malware_via_email/malware_2463/ia32_pe/subject.exe.info
......................................................... [ done ]
decompile F_00401a7e                    : .WARN  ag - Referencing unknown line 004026b4.0
WARN  ag - Referencing unknown line 00401799.0
WARN  ag - Referencing unknown line 0040138a.0
WARN  ag - Referencing unknown line 00401367.0
WARN  ag - Referencing unknown line 00401767.0
WARN  ag - Referencing unknown line 0040186e.0
WARN  ag - Referencing unknown line 00401390.0
WARN  ag - Referencing unknown line 00401639.0
WARN  ag - Referencing unknown line 00401390.0
WARN  ag - Referencing unknown line 004016c9.0
WARN  ag - Referencing unknown line 00401390.0
WARN  ag - Referencing unknown line 0040174b.0
WARN  ag - Referencing unknown line 00401390.0
WARN  ag - Referencing unknown line 00401268.0
WARN  ag - Referencing unknown line 004014e5.0
WARN  ag - Referencing unknown line 004015e7.0
WARN  ag - Referencing unknown line 004016f7.0
WARN  ag - Referencing unknown line 004012d3.0
WARN  ag - Referencing unknown line 00401390.0
WARN  ag - Referencing unknown line 004026ef.0
..INFO  ks - wrote ./malware_via_email/malware_2463/ia32_pe/subject.exe.info
......WARN  ac - Block 10 is already known to have a starting stack offset of -8 but when called from 9 it has an offset of -24
WARN  ac - Block 19 is already known to have a starting stack offset of -124 but when called from 20 it has an offset of -140
WARN  ac - Block 24 is already known to have a starting stack offset of -76 but when called from 20 it has an offset of -140
WARN  ac - Block 24 is already known to have a starting stack offset of -140 but when called from 22 it has an offset of -24
WARN  ac - Block 24 is already known to have a starting stack offset of -140 but when called from 23 it has an offset of -24
WARN  ac - Block 21 is already known to have a starting stack offset of -140 but when called from 33 it has an offset of -176
WARN  ac - Block 21 is already known to have a starting stack offset of -176 but when called from 35 it has an offset of -200
WARN  ac - Block 21 is already known to have a starting stack offset of -200 but when called from 38 it has an offset of -224
WARN  ac - Block 125 is already known to have a starting stack offset of -140 but when called from 37 it has an offset of -200
WARN  ac - Block 45 is already known to have a starting stack offset of -224 but when called from 42 it has an offset of -252
WARN  ac - Block 44 is already known to have a starting stack offset of -264 but when called from 41 it has an offset of -252
WARN  ac - Block 33 is already known to have a starting stack offset of -156 but when called from 26 it has an offset of -260
WARN  ac - Block 33 is already known to have a starting stack offset of -260 but when called from 32 it has an offset of -292
WARN  ac - Block 31 is already known to have a starting stack offset of -276 but when called from 29 it has an offset of -304
WARN  ac - Block 45 is already known to have a starting stack offset of -252 but when called from 44 it has an offset of -264
WARN  ac - Block 31 is already known to have a starting stack offset of -304 but when called from 30 it has an offset of -308
WARN  ac - Block 21 is already known to have a starting stack offset of -224 but when called from 45 it has an offset of -276
WARN  ac - Block 52 is already known to have a starting stack offset of -300 but when called from 51 it has an offset of -316
WARN  ac - Block 21 is already known to have a starting stack offset of -276 but when called from 52 it has an offset of -316
WARN  ac - Block 21 is already known to have a starting stack offset of -316 but when called from 53 it has an offset of -328
WARN  ac - Block 21 is already known to have a starting stack offset of -328 but when called from 57 it has an offset of -416
WARN  ac - Block 85 is already known to have a starting stack offset of -440 but when called from 83 it has an offset of -448
WARN  ac - Block 21 is already known to have a starting stack offset of -416 but when called from 56 it has an offset of -368
WARN  ac - Block 57 is already known to have a starting stack offset of -392 but when called from 56 it has an offset of -368
WARN  ac - Block 21 is already known to have a starting stack offset of -416 but when called from 88 it has an offset of -448
WARN  ac - Block 52 is already known to have a starting stack offset of -316 but when called from 47 it has an offset of -280
WARN  ac - Block 52 is already known to have a starting stack offset of -316 but when called from 48 it has an offset of -300
WARN  ac - Block 21 is already known to have a starting stack offset of -448 but when called from 91 it has an offset of -440
WARN  ac - Block 104 is already known to have a starting stack offset of -472 but when called from 101 it has an offset of -468
WARN  ac - Block 104 is already known to have a starting stack offset of -472 but when called from 102 it has an offset of -480
WARN  ac - Block 98 is already known to have a starting stack offset of -456 but when called from 99 it has an offset of -472
WARN  ac - Block 100 is already known to have a starting stack offset of -456 but when called from 99 it has an offset of -472
WARN  ac - Block 97 is already known to have a starting stack offset of -456 but when called from 93 it has an offset of -440
WARN  ac - Block 97 is already known to have a starting stack offset of -456 but when called from 94 it has an offset of -440
WARN  ac - Block 97 is already known to have a starting stack offset of -456 but when called from 95 it has an offset of -448
WARN  ac - Block 21 is already known to have a starting stack offset of -448 but when called from 108 it has an offset of -488
WARN  ac - Block 21 is already known to have a starting stack offset of -488 but when called from 112 it has an offset of -492
WARN  ac - Block 21 is already known to have a starting stack offset of -492 but when called from 113 it has an offset of -496
WARN  ac - Block 21 is already known to have a starting stack offset of -496 but when called from 118 it has an offset of -528
WARN  ac - Block 112 is already known to have a starting stack offset of -488 but when called from 110 it has an offset of -496
WARN  ac - Block 112 is already known to have a starting stack offset of -496 but when called from 111 it has an offset of -508
WARN  ac - Block 125 is already known to have a starting stack offset of -200 but when called from 124 it has an offset of -572
WARN  ac - Block 108 is already known to have a starting stack offset of -480 but when called from 107 it has an offset of -488
WARN  ac - Block 124 is already known to have a starting stack offset of -572 but when called from 120 it has an offset of -556
WARN  ac - Block 124 is already known to have a starting stack offset of -572 but when called from 121 it has an offset of -564
WARN  ac - Block 124 is already known to have a starting stack offset of -572 but when called from 122 it has an offset of -580
WARN  ac - Block 21 is already known to have a starting stack offset of -528 but when called from 105 it has an offset of -496
WARN  ac - Block 106 is already known to have a starting stack offset of -480 but when called from 105 it has an offset of -496
WARN  ac - Block 21 is already known to have a starting stack offset of -528 but when called from 69 it has an offset of -456
WARN  ac - Block 72 is already known to have a starting stack offset of -456 but when called from 71 it has an offset of -468
WARN  ac - Block 80 is already known to have a starting stack offset of -440 but when called from 72 it has an offset of -468
WARN  ac - Block 21 is already known to have a starting stack offset of -528 but when called from 78 it has an offset of -484
WARN  ac - Block 80 is already known to have a starting stack offset of -468 but when called from 79 it has an offset of -484
WARN  ac - Block 69 is already known to have a starting stack offset of -456 but when called from 65 it has an offset of -452
WARN  ac - Block 69 is already known to have a starting stack offset of -456 but when called from 67 it has an offset of -464
WARN  ac - Block 65 is already known to have a starting stack offset of -444 but when called from 63 it has an offset of -464
WARN  ac - Block 67 is already known to have a starting stack offset of -464 but when called from 64 it has an offset of -480
WARN  ac - Block 91 is already known to have a starting stack offset of -440 but when called from 90 it has an offset of -456
........ failed: A non-current expression of a variable is used in block L86 in (void) STORE(reg_h206, reg_pp110): The current setter is reg_b45 while [reg_pp110] was found. Related expressions are [reg_b43, reg_b44, reg_b41, reg_b42, reg_b33, reg_pp78, reg_pp104, reg_b40, reg_pp116, reg_pp85, reg_pp110, reg_b34, reg_b35, reg_b36, reg_pp90, reg_pp121, reg_b45, reg_b46, reg_pp73]
decompile F_004026b4                    : ............................................................ [ done ]
decompile F_004026ef                    : ............................................................ [ done ]
