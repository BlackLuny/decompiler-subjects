Unknown library function AddAce
Unknown library function AreAllAccessesGranted
Unknown library function VirtualProtect
assgn   27 *32* %pc := m[0x403000]
is readonly
assgn   40 *32* %pc := m[0x403004]
is readonly
assgn   51 *32* %pc := m[0x403014]
is readonly
assgn   65 *32* %pc := m[0x403020]
is readonly
assgn  176 *32* %pc := m[0x403010]
is readonly
assgn  221 *32* %pc := m[0x403028]
is readonly
assgn  250 *32* %pc := m[0x40301c]
is readonly
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 20 to local table
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 32 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 52 to local table
in proc _start adding addrExp r28{0} - 56 to local table
in proc _start adding addrExp r28{0} - 56 to local table
in proc _start adding addrExp r28{0} - 60 to local table
in proc _start adding addrExp r28{0} - 56 to local table
in proc _start adding addrExp r28{0} - 60 to local table
in proc _start adding addrExp r28{0} - 64 to local table
in proc _start adding addrExp r28{0} - 68 to local table
in proc _start adding addrExp r28{0} - 72 to local table
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 48 to local table
finding final parameters for _start
potential param r28
found new parameter r28
potential param r30
found new parameter r30
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 48 to local table
local ecx has type unsigned int that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local eax has type __size32 that doesn't agree with type of define /*signed?*/int of a library, why?
local edx has type unsigned int that doesn't agree with type of define void of a library, why?
local eax has type /*signed?*/int that doesn't agree with type of define __size32 of a library, why?
local ecx has type void that doesn't agree with type of define unsigned int of a library, why?
local edx has type void that doesn't agree with type of define unsigned int of a library, why?
local ecx_1 has type __size32 * that doesn't agree with type of define void * of a library, why?
local ecx has type unsigned int that doesn't agree with type of define union { unsigned int x3; void * x4; } of a library, why?
local ecx has type union { unsigned int x3; void * x4; } that doesn't agree with type of define void of a library, why?
local edx has type unsigned int that doesn't agree with type of define void of a library, why?
dest is not lib
call:   28 {*32* eax_1, *v* ecx, *v* esp} := CALL AddAce(
              )
              Reaching definitions: r9=r9{0},   r24=r24{0},   r27=0,   r28=r28{0} - 48,   r29=r29{0},   r30=r30{0},
                r31=r24{0} + (r31{0} * 8),   m[r28{0} - 12]=r27{0},   m[r28{0} - 16]=r29{0},   m[r28{0} - 20]=r30{0},
                m[r28{0} - 24]=r31{0},   m[r28{0} - 28]=0,   m[r28{0} - 32]=0,   m[r28{0} - 36]=0,   m[r28{0} - 40]=0,
                m[r28{0} - 44]=0,   m[r28{0} - 48]=%pc,   tmp1=r28{0},   %flags=LOGICALFLAGS32( 0 ),
                %ZF=LOGICALFLAGS32( 0 ),   %CF=LOGICALFLAGS32( 0 )
              Live variables: eax_1 in proc _start
result:    0 *32* eax_1 := -
dest is not lib
call:   41 {*j32* eax, *v* ecx, *v* edx, *v* esp} := CALL AreAllAccessesGranted(
              )
              Reaching definitions: r9=r9{0},   r24=r24{28},   r25=r25{28},   r26=r26{28} * 9,   r27=0,
                r28=r28{0} - 56,   r29=r29{0},   r30=r30{0},   r31=r24{28} + 30,   m[r28{0} - 12]=r27{0},
                m[r28{0} - 16]=r29{0},   m[r28{0} - 20]=r30{0},   m[r28{0} - 24]=r31{0},   m[r28{0} - 28]=0,
                m[r28{0} - 32]=0,   m[r28{0} - 36]=0,   m[r28{0} - 40]=0,   m[r28{0} - 44]=0,   m[r28{0} - 48]=-1,
                m[r28{0} - 52]=-1,   m[r28{0} - 56]=%pc,   tmp1=r24{28},
                %flags=ADDFLAGS32( r24{28}, 30, r24{28} + 30 ),   %ZF=ADDFLAGS32( r24{28}, 30, r24{28} + 30 ),
                %CF=ADDFLAGS32( r24{28}, 30, r24{28} + 30 )
              Live variables: eax in proc _start
result:    0 *j32* eax := -
dest is not lib
call:   52 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL CloseHandle(
                *HANDLE* local0 := 89
              )
              Reaching definitions: r9=r9{0},   r24=r24{41},   r25=r25{41},   r26=r26{41},   r27=0,   r28=r28{0} - 60,
                r29=r29{0},   r30=r30{0},   r31=r31{253},   m[r28{0} - 12]=r27{0},   m[r28{0} - 16]=r29{0},
                m[r28{0} - 20]=r30{0},   m[r28{0} - 24]=r31{0},   m[r28{0} - 28]=0,   m[r28{0} - 32]=0,
                m[r28{0} - 36]=0,   m[r28{0} - 40]=0,   m[r28{0} - 44]=0,   m[r28{0} - 48]=-1,   m[r28{0} - 52]=-1,
                m[r28{0} - 56]=89,   m[r28{0} - 60]=%pc,   tmp1=r24{41},   %flags=%flags{254},   %ZF=%ZF{255},
                %CF=%CF{256}
              Live variables:  in proc _start
dest is not lib
call:   66 {*32* eax, *u32* ecx, *u32* edx, *v** esp_1} := CALL VirtualProtect(
              )
              Reaching definitions: r0=truncu(32,16,r28{0} - 36),   r9=r9{0},   r24=r28{0} - 36,   r25=r25{52},
                r26=r26{52},   r27=0,   r28=r28{0} - 72,   r29=r29{0},   r30=r30{0},   r31=r31{253},
                m[r28{0} - 12]=r27{0},   m[r28{0} - 16]=r29{0},   m[r28{0} - 20]=r30{0},   m[r28{0} - 24]=r31{0},
                m[r28{0} - 28]=0,   m[r28{0} - 32]=0,   m[r28{0} - 36]=0,   m[r28{0} - 40]=0,   m[r28{0} - 44]=0,
                m[r28{0} - 48]=-1,   m[r28{0} - 52]=-1,   m[r28{0} - 56]=r28{0} - 36,   m[r28{0} - 60]=64,
                m[r28{0} - 64]=0x3000,   m[r28{0} - 68]=0x401000,   m[r28{0} - 72]=%pc,   tmp1=r24{41},
                %flags=%flags{254},   %ZF=%ZF{255},   %CF=%CF{256}
              Live variables: ecx,  edx,  esp_1 in proc _start
result:    0 *u32* ecx := -
result:    0 *u32* edx := -
result:    0 *v** esp_1 := -
dest is not lib
call:  177 {*v** eax_6, *v** ecx_1, *u32* edx, *v* esp} := CALL LoadLibraryA(
                *LPCSTR* m[esp_2 - 4] := m[esp_2 - 4]
              )
              Reaching definitions: r0=r0{307},   r9=r9{308},   r24=r24{309},   r25=r25{310},   r26=r26{168} + 0x401008
                r27=0x401008,   r28=r28{312} - 8,   r29=r29{313},   r30=r30{314},   r31=r31{315},
                m[r28{0} - 12]=r27{0},   m[r28{0} - 16]=r29{0},   m[r28{0} - 20]=r30{0},   m[r28{0} - 24]=r31{0},
                m[r28{0} - 28]=0,   m[r28{0} - 32]=0,   m[r28{0} - 36]=0,   m[r28{0} - 40]=0,   m[r28{0} - 44]=0,
                m[r28{0} - 48]=0x401d6c,   m[r28{0} - 52]=-1,   m[r28{0} - 56]=r28{0} - 36,   m[r28{0} - 60]=64,
                m[r28{0} - 64]=0x3000,   m[r28{0} - 68]=0x401000,   m[r28{0} - 72]=%pc,   tmp1=r26{168},
                %flags=ADDFLAGS32( r26{168}, 0x401008, r26{168} + 0x401008 ),
                %ZF=ADDFLAGS32( r26{168}, 0x401008, r26{168} + 0x401008 ),
                %CF=ADDFLAGS32( r26{168}, 0x401008, r26{168} + 0x401008 )
              Live variables: eax_6,  ecx_1,  edx in proc _start
result:    0 *v** eax_6 := -
result:    0 *v** ecx_1 := -
result:    0 *u32* edx := -
dest is not lib
call:  222 {*v** eax_6, *union* ecx, *v* esp} := CALL GetProcAddress(
                *HANDLE* m[esp_2 - 8] := m[esp_2 - 8]
                *c** m[esp_2 - 4] := m[esp_2 - 4]
              )
              Reaching definitions: r0=r0{333},   r9=r9{334},   r24=r24{335},   r25=r25{336},   r26=r26{325},
                r27=0x401008,   r28=(r28{312} - 4) - 8,   r29=r24{177},   r30=r30{327},   r31=r31{328},
                m[r28{0} - 12]=r27{0},   m[r28{0} - 16]=r29{0},   m[r28{0} - 20]=r30{0},   m[r28{0} - 24]=r31{0},
                m[r28{0} - 28]=0,   m[r28{0} - 32]=0,   m[r28{0} - 36]=0,   m[r28{0} - 40]=0,   m[r28{0} - 44]=0,
                m[r28{0} - 48]=0x401d6c,   m[r28{0} - 52]=-1,   m[r28{0} - 56]=r28{0} - 36,   m[r28{0} - 60]=64,
                m[r28{0} - 64]=0x3000,   m[r28{0} - 68]=0x401000,   m[r28{0} - 72]=%pc,   tmp1=r24{203},
                %flags=LOGICALFLAGS32( r24{203} ),   %ZF=LOGICALFLAGS32( r24{203} ),   %CF=LOGICALFLAGS32( r24{203} )
              Live variables: eax_6,  ecx in proc _start
result:    0 *v** eax_6 := -
result:    0 *union* ecx := -
dest is not lib
call:  251 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL ExitProcess(
                *UINT* m[esp - 4] := m[esp - 4]
              )
              Reaching definitions: r0=r0{245},   r9=r9{245},   r24=r24{245},   r25=r25{245},   r26=r26{245},
                r27=r27{245},   r28=r28{245} - 8,   r29=r29{245},   r30=r30{245},   r31=r31{245},
                m[r28{0} - 12]=m[r28{0} - 12]{245},   m[r28{0} - 16]=m[r28{0} - 16]{245},
                m[r28{0} - 20]=m[r28{0} - 20]{245},   m[r28{0} - 24]=m[r28{0} - 24]{245},
                m[r28{0} - 28]=m[r28{0} - 28]{245},   m[r28{0} - 32]=m[r28{0} - 32]{245},
                m[r28{0} - 36]=m[r28{0} - 36]{245},   m[r28{0} - 40]=m[r28{0} - 40]{245},
                m[r28{0} - 44]=m[r28{0} - 44]{245},   m[r28{0} - 48]=m[r28{0} - 48]{245},
                m[r28{0} - 52]=m[r28{0} - 52]{245},   m[r28{0} - 56]=m[r28{0} - 56]{245},
                m[r28{0} - 60]=m[r28{0} - 60]{245},   m[r28{0} - 64]=m[r28{0} - 64]{245},
                m[r28{0} - 68]=m[r28{0} - 68]{245},   m[r28{0} - 72]=m[r28{0} - 72]{245},
                m[r28{0} - 12]=m[r28{0} - 12]{245},   m[r28{0} - 16]=m[r28{0} - 16]{245},
                m[r28{0} - 20]=m[r28{0} - 20]{245},   m[r28{0} - 24]=m[r28{0} - 24]{245},
                m[r28{0} - 28]=m[r28{0} - 28]{245},   m[r28{0} - 32]=m[r28{0} - 32]{245},
                m[r28{0} - 36]=m[r28{0} - 36]{245},   m[r28{0} - 40]=m[r28{0} - 40]{245},
                m[r28{0} - 44]=m[r28{0} - 44]{245},   m[r28{0} - 48]=m[r28{0} - 48]{245},
                m[r28{0} - 52]=m[r28{0} - 52]{245},   m[r28{0} - 56]=m[r28{0} - 56]{245},
                m[r28{0} - 60]=m[r28{0} - 60]{245},   m[r28{0} - 64]=m[r28{0} - 64]{245},
                m[r28{0} - 68]=m[r28{0} - 68]{245},   m[r28{0} - 72]=m[r28{0} - 72]{245},   <all>=<all>{245},
                tmp1=tmp1{245},   %flags=%flags{245},   %ZF=%ZF{245},   %CF=%CF{245}
              Live variables:  in proc _start
