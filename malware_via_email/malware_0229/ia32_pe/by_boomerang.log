Unknown library function StgCreateStorageEx
Unknown library function lstrcpyA
Unknown library function GetModuleHandleA
assgn  129 *32* %pc := m[0x405400]
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc1 ###
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 8 to local table
in proc proc1 adding addrExp r28{0} - 32 to local table
in proc proc1 adding addrExp r28{0} - 36 to local table
in proc proc1 adding addrExp r28{0} - 48 to local table
in proc proc1 adding addrExp r28{0} - 52 to local table
in proc proc1 adding addrExp r28{0} - 56 to local table
in proc proc1 adding addrExp r28{0} - 4 to local table
in proc proc1 adding addrExp r28{0} - 64 to local table
in proc proc1 adding addrExp r28{0} - 68 to local table
in proc proc1 adding addrExp r28{0} - 72 to local table
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 60 to local table
in proc proc1 adding addrExp r28{0} - 20 to local table
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 32 to local table
in proc proc1 adding addrExp r28{0} - 36 to local table
in proc proc1 adding addrExp r28{0} - 36 to local table
in proc proc1 adding addrExp r28{0} - 32 to local table
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 76 to local table
in proc proc1 adding addrExp r28{0} - 80 to local table
in proc proc1 adding addrExp r28{0} - 84 to local table
in proc proc1 adding addrExp r28{0} - 88 to local table
in proc proc1 adding addrExp r28{0} - 92 to local table
in proc proc1 adding addrExp r28{0} - 96 to local table
in proc proc1 adding addrExp r28{0} - 100 to local table
in proc proc1 adding addrExp r28{0} - 104 to local table
in proc proc1 adding addrExp r28{0} - 108 to local table
in proc proc1 adding addrExp r28{0} - 44 to local table
in proc proc1 adding addrExp r28{0} - 40 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 48 to local table
in proc proc1 adding addrExp r28{0} - 52 to local table
in proc proc1 adding addrExp r28{0} - 56 to local table
in proc proc1 adding addrExp r28{0} - 56 to local table
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 56 to local table
in proc proc1 adding addrExp r28{0} - 52 to local table
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 52 to local table
in proc proc1 adding addrExp r28{0} - 56 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 48 to local table
in proc proc1 adding addrExp r28{0} - 52 to local table
in proc proc1 adding addrExp r28{0} - 56 to local table
in proc proc1 adding addrExp r28{0} - 8 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 8 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 48 to local table
in proc proc1 adding addrExp r28{0} - 52 to local table
in proc proc1 adding addrExp r28{0} - 56 to local table
finding final parameters for proc1
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} - 16]
found new parameter m[r28{0} - 16]
potential param m[r28{0} - 12]
found new parameter m[r28{0} - 12]
potential param m[r28{0} - 8]
found new parameter m[r28{0} - 8]
assgn   21 *32* %pc := m[0x405370]
assgn   39 *32* %pc := m[0x405374]
assgn   79 *32* %pc := m[0x405378]
assgn  207 *32* %pc := m[0x40537c]
assgn  305 *32* %pc := m[0x4058e4]
assgn  333 *32* m[r28 - 4] := m[0x4058d4]
assgn  337 *32* %pc := m[0x4058e8]
assgn  427 *32* m[r28 - 4] := m[0x4058d4]
assgn  431 *32* %pc := m[0x4058ec]
assgn  490 *32* m[r28 - 4] := m[0x4058d8]
assgn  494 *32* %pc := m[0x405bbc]
assgn  541 *32* m[r28 - 4] := m[0x4058d8]
assgn  545 *32* %pc := m[0x405bc0]
assgn  566 *32* m[r28 - 4] := m[0x4058d8]
assgn  570 *32* %pc := m[0x405bc4]
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc2 ###
in proc proc2 adding addrExp r28{0} - 16 to local table
in proc proc2 adding addrExp r28{0} - 8 to local table
in proc proc2 adding addrExp r28{0} - 4 to local table
in proc proc2 adding addrExp r28{0} - 48 to local table
in proc proc2 adding addrExp r28{0} - 52 to local table
in proc proc2 adding addrExp r28{0} - 56 to local table
in proc proc2 adding addrExp r28{0} - 60 to local table
in proc proc2 adding addrExp r28{0} - 64 to local table
in proc proc2 adding addrExp r28{0} - 68 to local table
in proc proc2 adding addrExp r28{0} - 72 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 60 to local table
in proc proc2 adding addrExp r28{0} - 64 to local table
in proc proc2 adding addrExp r28{0} - 68 to local table
in proc proc2 adding addrExp r28{0} - 16 to local table
in proc proc2 adding addrExp r28{0} - 16 to local table
in proc proc2 adding addrExp r28{0} - 68 to local table
in proc proc2 adding addrExp r28{0} - 72 to local table
in proc proc2 adding addrExp r28{0} - 76 to local table
in proc proc2 adding addrExp r28{0} - 8 to local table
in proc proc2 adding addrExp r28{0} - 8 to local table
in proc proc2 adding addrExp r28{0} - 16 to local table
in proc proc2 adding addrExp r28{0} - 16 to local table
in proc proc2 adding addrExp r28{0} - 16 to local table
in proc proc2 adding addrExp r28{0} - 16 to local table
in proc proc2 adding addrExp r28{0} - 68 to local table
in proc proc2 adding addrExp r28{0} - 72 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 24 to local table
in proc proc2 adding addrExp r28{0} - 16 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 72 to local table
in proc proc2 adding addrExp r28{0} - 76 to local table
in proc proc2 adding addrExp r28{0} - 80 to local table
in proc proc2 adding addrExp r28{0} - 84 to local table
in proc proc2 adding addrExp r28{0} - 88 to local table
in proc proc2 adding addrExp r28{0} - 92 to local table
in proc proc2 adding addrExp r28{0} - 96 to local table
in proc proc2 adding addrExp r28{0} - 100 to local table
in proc proc2 adding addrExp r28{0} - 104 to local table
in proc proc2 adding addrExp r28{0} - 108 to local table
in proc proc2 adding addrExp r28{0} - 112 to local table
finding final parameters for proc2
potential param r28
found new parameter r28
potential param m[r28{0} - 16]
found new parameter m[r28{0} - 16]
potential param m[r28{0} - 8]
found new parameter m[r28{0} - 8]
potential param global9
potential param global10
potential param global11
potential param global12
potential param global13
potential param global14
assgn   17 *32* %pc := m[0x405390]
assgn  260 *32* %pc := m[0x405bc8]
assgn  525 *32* %pc := m[0x405bc8]
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure main ###
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 16 to local table
in proc main adding addrExp r28{0} - 64 to local table
in proc main adding addrExp r28{0} - 60 to local table
in proc main adding addrExp r28{0} - 56 to local table
in proc main adding addrExp r28{0} - 4 to local table
in proc main adding addrExp r28{0} - 28 to local table
in proc main adding addrExp r28{0} - 32 to local table
in proc main adding addrExp r28{0} - 36 to local table
in proc main adding addrExp r28{0} - 40 to local table
in proc main adding addrExp r28{0} - 44 to local table
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 40 to local table
in proc main adding addrExp r28{0} - 44 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffd4 existing type unsigned int but added type void *
in proc main adding addrExp r28{0} - 48 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 40 to local table
in proc main adding addrExp r28{0} - 44 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffd4 existing type unsigned int but added type void *
in proc main adding addrExp r28{0} - 48 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 40 to local table
in proc main adding addrExp r28{0} - 44 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffd4 existing type unsigned int but added type void *
in proc main adding addrExp r28{0} - 48 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 40 to local table
in proc main adding addrExp r28{0} - 44 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffd4 existing type unsigned int but added type void *
in proc main adding addrExp r28{0} - 48 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 40 to local table
in proc main adding addrExp r28{0} - 44 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffd4 existing type unsigned int but added type void *
in proc main adding addrExp r28{0} - 48 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 40 to local table
in proc main adding addrExp r28{0} - 44 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffd4 existing type unsigned int but added type void *
in proc main adding addrExp r28{0} - 48 to local table
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 40 to local table
in proc main adding addrExp r28{0} - 44 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffd4 existing type unsigned int but added type void *
in proc main adding addrExp r28{0} - 48 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 40 to local table
in proc main adding addrExp r28{0} - 44 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffd4 existing type unsigned int but added type void *
in proc main adding addrExp r28{0} - 48 to local table
in proc main adding addrExp r28{0} - 16 to local table
in proc main adding addrExp r28{0} - 40 to local table
in proc main adding addrExp r28{0} - 44 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure main ###
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 16 to local table
in proc main adding addrExp r28{0} - 64 to local table
in proc main adding addrExp r28{0} - 60 to local table
in proc main adding addrExp r28{0} - 56 to local table
could not set type for unknown parameter expression m[r28{0} + 4]
could not set type for unknown parameter expression m[r28{0} + 8]
could not set type for unknown parameter expression m[r28{0} + 12]
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 12 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc1 ###
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 8 to local table
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 60 to local table
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 36 to local table
in proc proc1 adding addrExp r28{0} - 32 to local table
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 48 to local table
in proc proc1 adding addrExp r28{0} - 52 to local table
in proc proc1 adding addrExp r28{0} - 56 to local table
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 56 to local table
in proc proc1 adding addrExp r28{0} - 52 to local table
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 52 to local table
in proc proc1 adding addrExp r28{0} - 56 to local table
in proc proc1 adding addrExp r28{0} - 16 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc2 ###
in proc proc2 adding addrExp r28{0} - 16 to local table
in proc proc2 adding addrExp r28{0} - 8 to local table
in proc proc2 adding addrExp r28{0} - 16 to local table
in proc proc2 adding addrExp r28{0} - 16 to local table
in proc proc2 adding addrExp r28{0} - 16 to local table
in proc proc2 adding addrExp r28{0} - 16 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
finding final parameters for proc1
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} - 16]
found new parameter m[r28{0} - 16]
potential param m[r28{0} - 12]
found new parameter m[r28{0} - 12]
potential param m[r28{0} - 8]
found new parameter m[r28{0} - 8]
finding final parameters for proc2
potential param r28
found new parameter r28
potential param m[r28{0} - 16]
found new parameter m[r28{0} - 16]
potential param m[r28{0} - 8]
found new parameter m[r28{0} - 8]
potential param global9
potential param global10
potential param global11
potential param global12
potential param global13
potential param global14
local ecx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local edx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local eax has type /*signed?*/int that doesn't agree with type of define unsigned int of a library, why?
local ecx has type int that doesn't agree with type of define union { unsigned int x13; void * x14; } of a library, why?
local edx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local eax has type unsigned int that doesn't agree with type of define __size32 of a library, why?
local ecx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local edx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local ecx has type void that doesn't agree with type of define /*signed?*/int of a library, why?
local edx has type void that doesn't agree with type of define /*signed?*/int of a library, why?
local edx has type /*signed?*/int that doesn't agree with type of define unsigned int of a library, why?
local eax has type __size32 that doesn't agree with type of define int of a library, why?
local ecx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local edx has type unsigned int that doesn't agree with type of define void of a library, why?
dest is not lib
call:   18 {*v** eax_1, *v* ecx, *v* edx, *v* esp} := CALL LoadLibraryA(
                *LPCSTR* local6 := "kernel32.dll"
              )
              Reaching definitions: r27=r27{0},   r28=r28{0} - 44,   r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 12]=m[r28{0} - 12]{0},
                m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 28]=r27{0},   m[r28{0} - 32]=r30{0},
                m[r28{0} - 36]=r31{0},   m[r28{0} - 40]=0x40400c,   m[r28{0} - 44]=%pc,
                m[r28{0} - 56]=m[r28{0} - 56]{0},   m[r28{0} - 60]=m[r28{0} - 60]{0},
                m[r28{0} - 64]=m[r28{0} - 64]{0},   tmp1=r28{0} - 4,   %flags=SUBFLAGS32( r28{0} - 4, 20, r28{0} - 24 )
                %ZF=(r28{0} - 24) = 0,   %CF=(r28{0} - 4) <u 20
              Live variables: eax_1 in proc main
result:    0 *v** eax_1 := -
dest is not lib
call:   63 {*32* eax, *32* esi, *32* ecx, *32* edx, *v** ebx_2, *v* esp, *32* edi} := CALL proc1(
                *u32* local3 := local3
                *i32* local4 := local4
                *u32* local5 := local5
                *v** local7 := eax_1
                *u32* local8 :=  *u32*0x89aeb4be
              )
              Reaching definitions: r24=(r24{49} >> r24{46}) | r30{36},   r25=r24{46},
                r26=(m[r28{0} - 8]{0} + m[r28{0} - 8]{0}) + 234,   r27=r24{18},   r28=r28{0} - 48,   r29=r28{0} - 4,
                r30=r30{36},   r31=(m[r28{0} - 16]{0} + (m[r28{0} - 12]{0} * 2)) + 0x25cd,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=(r24{49} >> r24{46}) | r30{36},
                m[r28{0} - 12]=m[r28{0} - 12]{0},   m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 28]=r27{0},
                m[r28{0} - 32]=r30{0},   m[r28{0} - 36]=r31{0},   m[r28{0} - 40]=0x89aeb4be,   m[r28{0} - 44]=r24{18},
                m[r28{0} - 48]=%pc,   m[r28{0} - 56]=m[r28{0} - 56]{0},   m[r28{0} - 60]=m[r28{0} - 60]{0},
                m[r28{0} - 64]=m[r28{0} - 64]{0},   tmp1=r24{49},
                %flags=LOGICALFLAGS32( (r24{49} >> r24{46}) | r30{36} ),
                %ZF=LOGICALFLAGS32( (r24{49} >> r24{46}) | r30{36} ),
                %CF=LOGICALFLAGS32( (r24{49} >> r24{46}) | r30{36} )
              Live variables: eax,  ebx_2 in proc main
result:    0 *32* eax := -
result:    0 *v** ebx_2 := -
dest is not lib
call:   81 {*32* eax, *32* esi, *32* ecx, *32* edx, *v** ebx_3, *v* esp, *32* edi} := CALL proc1(
                *u32* local3 := local3
                *i32* local4 := local4
                *u32* local5 := local5
                *v** local7 := ebx_2
                *u32* local8 := 0x552086df
              )
              Reaching definitions: r24=0x78f - ((r24{49} >> r24{46}) | r30{36}),   r25=r25{63},
                r26=((r24{49} >> r24{46}) | r30{36}) + ((r24{49} >> r24{46}) | r30{36}),   r27=r27{63},
                r28=r28{0} - 48,   r29=r28{0} - 4,   r30=r30{63},   r31=r31{63},   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=(r24{49} >> r24{46}) | r30{36},   m[r28{0} - 12]=m[r28{0} - 12]{73},
                m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 28]=r27{0},   m[r28{0} - 32]=r30{0},
                m[r28{0} - 36]=r31{0},   m[r28{0} - 40]=0x552086df,   m[r28{0} - 44]=r27{63},   m[r28{0} - 48]=%pc,
                m[r28{0} - 56]=m[r28{0} - 56]{0},   m[r28{0} - 60]=m[r28{0} - 60]{0},
                m[r28{0} - 64]=m[r28{0} - 64]{0},   tmp1=0 - ((r24{49} >> r24{46}) | r30{36}),
                %flags=ADDFLAGS32( 0 - ((r24{49} >> r24{46}) | r30{36}), 0x78f, 0x78f - ((r24{49} >> r24{46}) | r30{36}) ),
                %ZF=ADDFLAGS32( 0 - ((r24{49} >> r24{46}) | r30{36}), 0x78f, 0x78f - ((r24{49} >> r24{46}) | r30{36}) )
                %CF=ADDFLAGS32( 0 - ((r24{49} >> r24{46}) | r30{36}), 0x78f, 0x78f - ((r24{49} >> r24{46}) | r30{36}) )
              Live variables: eax,  ebx_3 in proc main
result:    0 *32* eax := -
result:    0 *v** ebx_3 := -
dest is not lib
call:   93 {*32* eax, *32* esi, *32* ecx, *32* edx, *v** ebx_4, *v* esp, *32* edi} := CALL proc1(
                *u32* local3 := local3
                *i32* local4 := local4
                *u32* local5 := local5
                *v** local7 := ebx_3
                *u32* local8 := 0x32b88f54
              )
              Reaching definitions: r24=r24{81},   r25=r25{81},   r26=r26{81},   r27=r27{81},   r28=r28{0} - 48,
                r29=r28{0} - 4,   r30=r30{81},   r31=r31{81},   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=(r24{49} >> r24{46}) | r30{36},   m[r28{0} - 12]=m[r28{0} - 12]{84},
                m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 28]=r27{0},   m[r28{0} - 32]=r30{0},
                m[r28{0} - 36]=r31{0},   m[r28{0} - 40]=0x32b88f54,   m[r28{0} - 44]=r27{81},   m[r28{0} - 48]=%pc,
                m[r28{0} - 56]=m[r28{0} - 56]{0},   m[r28{0} - 60]=m[r28{0} - 60]{0},
                m[r28{0} - 64]=m[r28{0} - 64]{0},   tmp1=m[r28{0} - 12]{73},
                %flags=ADDFLAGS32( m[r28{0} - 12]{73}, 0x1844, m[r28{0} - 12] ),
                %ZF=ADDFLAGS32( m[r28{0} - 12]{73}, 0x1844, m[r28{0} - 12] ),
                %CF=ADDFLAGS32( m[r28{0} - 12]{73}, 0x1844, m[r28{0} - 12] )
              Live variables: eax,  ebx_4 in proc main
result:    0 *32* eax := -
result:    0 *v** ebx_4 := -
dest is not lib
call:  118 {*32* eax, *32* esi, *u32* ecx, *u32* edx, *v** ebx_5, *v* esp, *32* edi} := CALL proc1(
                *u32* local3 := local3
                *i32* local4 := local4
                *u32* local5 := local5
                *v** local7 := ebx_4
                *u32* local8 := 0x6583d04e
              )
              Reaching definitions: r24=(((r24{49} >> r24{46}) | r30{36}) + 0x417) | r26{103},
                r25=(m[r28{0} - 12]{84} + m[r28{0} - 12]{84}) + 0x1d01,   r26=r26{103},   r27=r27{93},
                r28=r28{0} - 48,   r29=r28{0} - 4,   r30=r30{93},   r31=r31{93},   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=(r24{49} >> r24{46}) | r30{36},
                m[r28{0} - 12]=(((r24{49} >> r24{46}) | r30{36}) + 0x417) | r26{103},
                m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 28]=r27{0},   m[r28{0} - 32]=r30{0},
                m[r28{0} - 36]=r31{0},   m[r28{0} - 40]=0x6583d04e,   m[r28{0} - 44]=r27{93},   m[r28{0} - 48]=%pc,
                m[r28{0} - 56]=m[r28{0} - 56]{0},   m[r28{0} - 60]=m[r28{0} - 60]{0},
                m[r28{0} - 64]=m[r28{0} - 64]{0},   tmp1=(r24{49} >> r24{46}) | r30{36},
                %flags=LOGICALFLAGS32( (((r24{49} >> r24{46}) | r30{36}) + 0x417) | r26{103} ),
                %ZF=LOGICALFLAGS32( (((r24{49} >> r24{46}) | r30{36}) + 0x417) | r26{103} ),
                %CF=LOGICALFLAGS32( (((r24{49} >> r24{46}) | r30{36}) + 0x417) | r26{103} )
              Live variables: eax,  ebx_5 in proc main
result:    0 *32* eax := -
result:    0 *v** ebx_5 := -
dest is not lib
call:  151 {*32* eax, *32* esi, *32* ecx, *32* edx, *v** ebx_6, *v* esp, *32* edi} := CALL proc1(
                *u32* local3 := local3
                *i32* local4 := local4
                *u32* local5 := local5
                *v** local7 := ebx_5
                *u32* local8 := 0x6583f84e
              )
              Reaching definitions: r24=r24{631} + 5,   r25=m[r28{0} - 12]{704} + m[r28{0} - 12]{704},   r26=r26{135},
                r27=r27{118},   r28=r28{0} - 48,   r29=r28{0} - 4,   r30=r30{118},   r31=r31{118},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=(r24{49} >> r24{46}) | r30{36},   m[r28{0} - 12]=r26{135},
                m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 28]=r27{0},   m[r28{0} - 32]=r30{0},
                m[r28{0} - 36]=r31{0},   m[r28{0} - 40]=0x6583f84e,   m[r28{0} - 44]=r27{118},   m[r28{0} - 48]=%pc,
                m[r28{0} - 56]=m[r28{0} - 56]{0},   m[r28{0} - 60]=m[r28{0} - 60]{0},
                m[r28{0} - 64]=m[r28{0} - 64]{0},   tmp1=r24{631} - 2,
                %flags=SUBFLAGS32( r24{631} + 5, 7, r24{631} - 2 ),   %ZF=(r24{631} - 2) = 0,   %CF=(r24{631} + 5) <u 7
              Live variables: eax,  ebx_6 in proc main
result:    0 *32* eax := -
result:    0 *v** ebx_6 := -
dest is not lib
call:  172 {*32* eax, *32* esi, *32* ecx, *32* edx, *v** ebx_7, *v* esp, *32* edi} := CALL proc1(
                *u32* local3 := local3
                *i32* local4 := local4
                *u32* local5 := local5
                *v** local7 := ebx_6
                *u32* local8 :=  *u32*0x8c778146
              )
              Reaching definitions: r24=0 - r26{159},   r25=(m[r28{0} - 16]{0} * 4) + 0x1d33,   r26=r26{159},
                r27=r27{151},   r28=r28{0} - 48,   r29=r28{0} - 4,   r30=r30{151},   r31=r31{151},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=(r24{49} >> r24{46}) | r30{36},   m[r28{0} - 12]=0 - r26{159},
                m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 28]=r27{0},   m[r28{0} - 32]=r30{0},
                m[r28{0} - 36]=r31{0},   m[r28{0} - 40]=0x8c778146,   m[r28{0} - 44]=r27{151},   m[r28{0} - 48]=%pc,
                m[r28{0} - 56]=m[r28{0} - 56]{0},   m[r28{0} - 60]=m[r28{0} - 60]{0},
                m[r28{0} - 64]=m[r28{0} - 64]{0},   tmp1=0,   %flags=SUBFLAGS32( 0, r26{159}, 0 - r26{159} ),
                %ZF=(0 - r26{159}) = 0,   %CF=0 <u r26{159}
              Live variables: eax,  ebx_7 in proc main
result:    0 *32* eax := -
result:    0 *v** ebx_7 := -
dest is not lib
call:  210 {*32* eax, *j32* esi, *i32* ecx, *j32* edx, *v** ebx_8, *v* esp, *32* edi} := CALL proc1(
                *u32* local3 := local3
                *i32* local4 := local4
                *u32* local5 := local5
                *v** local7 := ebx_7
                *u32* local8 :=  *u32*0x8822afb2
              )
              Reaching definitions: r24=(r24{196} ^ r25{190}) | r26{177},   r25=r25{190},   r26=r26{177},
                r27=r27{172},   r28=r28{0} - 48,   r29=r28{0} - 4,   r30=(((r24{49} >> r24{46}) | r30{36}) * 8) + 0xfe1
                r31=0 >> (m[r28{0} - 16]{0} + m[r28{0} - 16]{0}),   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=(r24{196} ^ r25{190}) | r26{177},   m[r28{0} - 12]=0 - r26{159},
                m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 28]=r27{0},   m[r28{0} - 32]=r30{0},
                m[r28{0} - 36]=r31{0},   m[r28{0} - 40]=0x8822afb2,   m[r28{0} - 44]=r27{172},   m[r28{0} - 48]=%pc,
                m[r28{0} - 56]=m[r28{0} - 56]{0},   m[r28{0} - 60]=m[r28{0} - 60]{0},
                m[r28{0} - 64]=m[r28{0} - 64]{0},
                tmp1=((r24{49} >> r24{46}) | r30{36}) + ((r24{49} >> r24{46}) | r30{36}),
                %flags=LOGICALFLAGS32( (r24{196} ^ r25{190}) | r26{177} ),
                %ZF=LOGICALFLAGS32( (r24{196} ^ r25{190}) | r26{177} ),
                %CF=LOGICALFLAGS32( (r24{196} ^ r25{190}) | r26{177} )
              Live variables: eax,  ebx_8 in proc main
result:    0 *32* eax := -
result:    0 *v** ebx_8 := -
dest is not lib
call:  248 {*32* eax, *32* esi, *32* ecx, *32* edx, *32* ebx_9, *v* esp, *32* edi_1} := CALL proc1(
                *u32* local3 := local3
                *i32* local4 := local4
                *u32* local5 := local5
                *v** local7 := ebx_8
                *u32* local8 := 0x3f53be5b
              )
              Reaching definitions: r24=r24{638} + 1,   r25=r26{225},   r26=r26{230} | r30{219},   r27=r27{210},
                r28=r28{0} - 48,   r29=r28{0} - 4,   r30=r30{219},   r31=(m[r28{0} - 12]{705} * 3) + 791,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=(r24{196} ^ r25{190}) | r26{177},
                m[r28{0} - 12]=r26{230} | r30{219},   m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 28]=r27{0},
                m[r28{0} - 32]=r30{0},   m[r28{0} - 36]=r31{0},   m[r28{0} - 40]=0x3f53be5b,   m[r28{0} - 44]=r27{210},
                m[r28{0} - 48]=%pc,   m[r28{0} - 56]=m[r28{0} - 56]{0},   m[r28{0} - 60]=m[r28{0} - 60]{0},
                m[r28{0} - 64]=m[r28{0} - 64]{0},   tmp1=r24{638},   %flags=SUBFLAGS32( r24{638} + 1, 1, r24{638} ),
                %ZF=r24{638} = 0,   %CF=(r24{638} + 1) <u 1
              Live variables: eax,  ebx_9,  ecx,  edi_1,  esi in proc main
result:    0 *32* eax := -
result:    0 *32* esi := -
result:    0 *32* ecx := -
result:    0 *32* ebx_9 := -
result:    0 *32* edi_1 := -
dest is not lib
call:  299 {*32* eax, *32* esi, *32* ecx, *32* edx, *32* ebx, *v* esp, *32* edi} := CALL proc1(
                *u32* m[esp_1 - 28] := m[esp_1 - 28]
                *i32* m[esp_1 - 24] := m[esp_1 - 24]
                *u32* m[esp_1 - 20] := m[esp_1 - 20]
                *v** m[esp_1 - 8] := m[esp_1 - 8]
                *u32* m[esp_1 - 4] := m[esp_1 - 4]
              )
              Reaching definitions: r24=r24{647} - 5,   r25=r26{280},   r26=(r25{271} + r25{271}) << r26{280},
                r27=r24{261},   r28=r28{261} - 12,   r29=r29{261},   r30=r25{271} + r25{271},   r31=r31{261},
                m[r28{0} + 4]=m[r28{0} + 4]{261},   m[r28{0} + 8]=m[r28{0} + 8]{261},
                m[r28{0} + 12]=m[r28{0} + 12]{261},   m[r28{0} - 4]=m[r28{0} - 4]{261},
                m[r28{0} - 8]=m[r28{0} - 8]{261},   m[r28{0} - 12]=m[r28{0} - 12]{261},
                m[r28{0} - 16]=m[r28{0} - 16]{261},   m[r28{0} - 28]=m[r28{0} - 28]{261},
                m[r28{0} - 32]=m[r28{0} - 32]{261},   m[r28{0} - 36]=m[r28{0} - 36]{261},
                m[r28{0} - 40]=m[r28{0} - 40]{261},   m[r28{0} - 44]=m[r28{0} - 44]{261},
                m[r28{0} - 48]=m[r28{0} - 48]{261},   m[r28{0} - 4]=m[r28{0} - 4]{261},
                m[r28{0} - 8]=m[r28{0} - 8]{261},   m[r28{0} - 12]=m[r28{0} - 12]{261},
                m[r28{0} - 16]=m[r28{0} - 16]{261},   m[r28{0} - 28]=m[r28{0} - 28]{261},
                m[r28{0} - 32]=m[r28{0} - 32]{261},   m[r28{0} - 36]=m[r28{0} - 36]{261},
                m[r28{0} - 40]=m[r28{0} - 40]{261},   m[r28{0} - 44]=m[r28{0} - 44]{261},
                m[r28{0} - 48]=m[r28{0} - 48]{261},   m[r28{0} - 56]=m[r28{0} - 56]{261},
                m[r28{0} - 60]=m[r28{0} - 60]{261},   m[r28{0} - 64]=m[r28{0} - 64]{261},   <all>=<all>{261},
                tmp1=r24{647},   %flags=SUBFLAGS32( r24{647}, 5, r24{647} - 5 ),   %ZF=(r24{647} - 5) = 0,
                %CF=r24{647} <u 5
              Live variables: eax,  ebx in proc main
result:    0 *32* eax := -
result:    0 *32* ebx := -
dest is not lib
call:  347 {*32* eax, *j32* esi, *j32* ecx, *j32* edx, *32* ebx, *v* esp, *j32* edi} := CALL proc1(
                *u32* m[esp_1 - 28] := m[esp_1 - 28]
                *i32* m[esp_1 - 24] := m[esp_1 - 24]
                *u32* m[esp_1 - 20] := m[esp_1 - 20]
                *v** m[esp_1 - 8] := m[esp_1 - 8]
                *u32* m[esp_1 - 4] := m[esp_1 - 4]
              )
              Reaching definitions: r24=(r24{332} + 0x163c) ^ r26{329},   r25=(0 >> r25{313}) & r31{321},
                r26=r26{329},   r27=r27{299},   r28=r28{261} - 12,   r29=r29{261},   r30=0 >> r25{313},   r31=r31{321},
                m[r28{0} + 4]=m[r28{0} + 4]{261},   m[r28{0} + 8]=m[r28{0} + 8]{261},
                m[r28{0} + 12]=m[r28{0} + 12]{261},   m[r28{0} - 4]=m[r28{0} - 4]{261},
                m[r28{0} - 8]=m[r28{0} - 8]{261},   m[r28{0} - 12]=m[r28{0} - 12]{261},
                m[r28{0} - 16]=m[r28{0} - 16]{261},   m[r28{0} - 28]=m[r28{0} - 28]{261},
                m[r28{0} - 32]=m[r28{0} - 32]{261},   m[r28{0} - 36]=m[r28{0} - 36]{261},
                m[r28{0} - 40]=m[r28{0} - 40]{261},   m[r28{0} - 44]=m[r28{0} - 44]{261},
                m[r28{0} - 48]=m[r28{0} - 48]{261},   m[r28{0} - 4]=m[r28{0} - 4]{261},
                m[r28{0} - 8]=m[r28{0} - 8]{261},   m[r28{0} - 12]=m[r28{0} - 12]{261},
                m[r28{0} - 16]=m[r28{0} - 16]{261},   m[r28{0} - 28]=m[r28{0} - 28]{261},
                m[r28{0} - 32]=m[r28{0} - 32]{261},   m[r28{0} - 36]=m[r28{0} - 36]{261},
                m[r28{0} - 40]=m[r28{0} - 40]{261},   m[r28{0} - 44]=m[r28{0} - 44]{261},
                m[r28{0} - 48]=m[r28{0} - 48]{261},   m[r28{0} - 56]=m[r28{0} - 56]{261},
                m[r28{0} - 60]=m[r28{0} - 60]{261},   m[r28{0} - 64]=m[r28{0} - 64]{261},   <all>=<all>{261},
                tmp1=r24{332},   %flags=LOGICALFLAGS32( (r24{332} + 0x163c) ^ r26{329} ),
                %ZF=LOGICALFLAGS32( (r24{332} + 0x163c) ^ r26{329} ),
                %CF=LOGICALFLAGS32( (r24{332} + 0x163c) ^ r26{329} )
              Live variables: eax,  ebx in proc main
result:    0 *32* eax := -
result:    0 *32* ebx := -
dest is not lib
call:  394 {*32* eax, *i32* esi, *j32* ecx, *j32* edx, *32* ebx, *v* esp, *32* edi} := CALL proc1(
                *u32* m[esp_1 - 28] := m[esp_1 - 28]
                *i32* m[esp_1 - 24] := m[esp_1 - 24]
                *u32* m[esp_1 - 20] := m[esp_1 - 20]
                *v** m[esp_1 - 8] := m[esp_1 - 8]
                *u32* m[esp_1 - 4] := m[esp_1 - 4]
              )
              Reaching definitions: r24=r24{655} + 2,   r25=r31{363} & r30{367},   r26=r26{376} ^ (r31{363} & r30{367})
                r27=r27{347},   r28=r28{261} - 12,   r29=r29{261},   r30=r30{367},   r31=r31{363},
                m[r28{0} + 4]=m[r28{0} + 4]{261},   m[r28{0} + 8]=m[r28{0} + 8]{261},
                m[r28{0} + 12]=m[r28{0} + 12]{261},   m[r28{0} - 4]=m[r28{0} - 4]{261},
                m[r28{0} - 8]=m[r28{0} - 8]{261},   m[r28{0} - 12]=m[r28{0} - 12]{261},
                m[r28{0} - 16]=m[r28{0} - 16]{261},   m[r28{0} - 28]=m[r28{0} - 28]{261},
                m[r28{0} - 32]=m[r28{0} - 32]{261},   m[r28{0} - 36]=m[r28{0} - 36]{261},
                m[r28{0} - 40]=m[r28{0} - 40]{261},   m[r28{0} - 44]=m[r28{0} - 44]{261},
                m[r28{0} - 48]=m[r28{0} - 48]{261},   m[r28{0} - 4]=m[r28{0} - 4]{261},
                m[r28{0} - 8]=m[r28{0} - 8]{261},   m[r28{0} - 12]=m[r28{0} - 12]{261},
                m[r28{0} - 16]=m[r28{0} - 16]{261},   m[r28{0} - 28]=m[r28{0} - 28]{261},
                m[r28{0} - 32]=m[r28{0} - 32]{261},   m[r28{0} - 36]=m[r28{0} - 36]{261},
                m[r28{0} - 40]=m[r28{0} - 40]{261},   m[r28{0} - 44]=m[r28{0} - 44]{261},
                m[r28{0} - 48]=m[r28{0} - 48]{261},   m[r28{0} - 56]=m[r28{0} - 56]{261},
                m[r28{0} - 60]=m[r28{0} - 60]{261},   m[r28{0} - 64]=m[r28{0} - 64]{261},   <all>=<all>{261},
                tmp1=r24{655} - 4,   %flags=SUBFLAGS32( r24{655} + 2, 6, r24{655} - 4 ),   %ZF=(r24{655} - 4) = 0,
                %CF=(r24{655} + 2) <u 6
              Live variables: eax,  ebx in proc main
result:    0 *32* eax := -
result:    0 *32* ebx := -
dest is not lib
call:  428 {*32* eax, *j32* esi, *32* ecx, *j32* edx, *32* ebx, *v* esp, *32* edi} := CALL proc1(
                *u32* m[esp_1 - 28] := m[esp_1 - 28]
                *i32* m[esp_1 - 24] := m[esp_1 - 24]
                *u32* m[esp_1 - 20] := m[esp_1 - 20]
                *v** m[esp_1 - 8] := m[esp_1 - 8]
                *u32* m[esp_1 - 4] := m[esp_1 - 4]
              )
              Reaching definitions: r24=r24{664} + 3,   r25=(r25{399} + r25{399}) & r30{402},   r26=r26{412},
                r27=r27{394},   r28=r28{261} - 12,   r29=r29{261},   r30=r30{402},   r31=r25{399} + 668,
                m[r28{0} + 4]=m[r28{0} + 4]{261},   m[r28{0} + 8]=m[r28{0} + 8]{261},
                m[r28{0} + 12]=m[r28{0} + 12]{261},   m[r28{0} - 4]=m[r28{0} - 4]{261},
                m[r28{0} - 8]=m[r28{0} - 8]{261},   m[r28{0} - 12]=m[r28{0} - 12]{261},
                m[r28{0} - 16]=m[r28{0} - 16]{261},   m[r28{0} - 28]=m[r28{0} - 28]{261},
                m[r28{0} - 32]=m[r28{0} - 32]{261},   m[r28{0} - 36]=m[r28{0} - 36]{261},
                m[r28{0} - 40]=m[r28{0} - 40]{261},   m[r28{0} - 44]=m[r28{0} - 44]{261},
                m[r28{0} - 48]=m[r28{0} - 48]{261},   m[r28{0} - 4]=m[r28{0} - 4]{261},
                m[r28{0} - 8]=m[r28{0} - 8]{261},   m[r28{0} - 12]=m[r28{0} - 12]{261},
                m[r28{0} - 16]=m[r28{0} - 16]{261},   m[r28{0} - 28]=m[r28{0} - 28]{261},
                m[r28{0} - 32]=m[r28{0} - 32]{261},   m[r28{0} - 36]=m[r28{0} - 36]{261},
                m[r28{0} - 40]=m[r28{0} - 40]{261},   m[r28{0} - 44]=m[r28{0} - 44]{261},
                m[r28{0} - 48]=m[r28{0} - 48]{261},   m[r28{0} - 56]=m[r28{0} - 56]{261},
                m[r28{0} - 60]=m[r28{0} - 60]{261},   m[r28{0} - 64]=m[r28{0} - 64]{261},   <all>=<all>{261},
                tmp1=r24{664} + 1,   %flags=SUBFLAGS32( r24{664} + 3, 2, r24{664} + 1 ),   %ZF=(r24{664} + 1) = 0,
                %CF=(r24{664} + 3) <u 2
              Live variables: eax,  ebx in proc main
result:    0 *32* eax := -
result:    0 *32* ebx := -
dest is not lib
call:  482 {*32* eax, *32* esi, *32* ecx, *32* edx, *32* ebx, *v* esp, *32* edi} := CALL proc1(
                *u32* m[esp_1 - 28] := m[esp_1 - 28]
                *i32* m[esp_1 - 24] := m[esp_1 - 24]
                *u32* m[esp_1 - 20] := m[esp_1 - 20]
                *v** m[esp_1 - 8] := m[esp_1 - 8]
                *u32* m[esp_1 - 4] := m[esp_1 - 4]
              )
              Reaching definitions: r24=r24{673} - 4,   r25=r25{461} + 0x20b7,   r26=r26{454} & r30{466},
                r27=r27{428},   r28=r28{261} - 12,   r29=r29{261},   r30=r30{466},   r31=r31{428},
                m[r28{0} + 4]=m[r28{0} + 4]{261},   m[r28{0} + 8]=m[r28{0} + 8]{261},
                m[r28{0} + 12]=m[r28{0} + 12]{261},   m[r28{0} - 4]=m[r28{0} - 4]{261},
                m[r28{0} - 8]=m[r28{0} - 8]{261},   m[r28{0} - 12]=m[r28{0} - 12]{261},
                m[r28{0} - 16]=m[r28{0} - 16]{261},   m[r28{0} - 28]=m[r28{0} - 28]{261},
                m[r28{0} - 32]=m[r28{0} - 32]{261},   m[r28{0} - 36]=m[r28{0} - 36]{261},
                m[r28{0} - 40]=m[r28{0} - 40]{261},   m[r28{0} - 44]=m[r28{0} - 44]{261},
                m[r28{0} - 48]=m[r28{0} - 48]{261},   m[r28{0} - 4]=m[r28{0} - 4]{261},
                m[r28{0} - 8]=m[r28{0} - 8]{261},   m[r28{0} - 12]=m[r28{0} - 12]{261},
                m[r28{0} - 16]=m[r28{0} - 16]{261},   m[r28{0} - 28]=m[r28{0} - 28]{261},
                m[r28{0} - 32]=m[r28{0} - 32]{261},   m[r28{0} - 36]=m[r28{0} - 36]{261},
                m[r28{0} - 40]=m[r28{0} - 40]{261},   m[r28{0} - 44]=m[r28{0} - 44]{261},
                m[r28{0} - 48]=m[r28{0} - 48]{261},   m[r28{0} - 56]=m[r28{0} - 56]{261},
                m[r28{0} - 60]=m[r28{0} - 60]{261},   m[r28{0} - 64]=m[r28{0} - 64]{261},   <all>=<all>{261},
                tmp1=r24{673},   %flags=SUBFLAGS32( r24{673}, 4, r24{673} - 4 ),   %ZF=(r24{673} - 4) = 0,
                %CF=r24{673} <u 4
              Live variables: eax,  ebx,  edi in proc main
result:    0 *32* eax := -
result:    0 *32* ebx := -
result:    0 *32* edi := -
dest is not lib
call:  545 {*32* eax, *32* esi, *32* ecx, *j32* edx, *j32* ebx_1, *v* esp, *32* edi} := CALL proc1(
                *u32* local13 := m[esp - 28]
                *i32* m[esp - 24] := m[esp - 24]
                *u32* m[esp - 20] := m[esp - 20]
                *v** m[esp - 8] := m[esp - 8]
                *u32* local14 := m[esp - 4]
              )
              Reaching definitions: r24=r24{681} - 1,   r25=r25{526},   r26=(r26{529} + r26{529}) + 162,   r27=r24{526}
                r28=r28{526} - 12,   r29=r29{526},   r30=r30{526},   r31=r31{526},   m[r28{0} + 4]=m[r28{0} + 4]{526},
                m[r28{0} + 8]=m[r28{0} + 8]{526},   m[r28{0} + 12]=m[r28{0} + 12]{526},
                m[r28{0} - 4]=m[r28{0} - 4]{526},   m[r28{0} - 8]=m[r28{0} - 8]{526},
                m[r28{0} - 12]=m[r28{0} - 12]{526},   m[r28{0} - 16]=m[r28{0} - 16]{526},
                m[r28{0} - 28]=m[r28{0} - 28]{526},   m[r28{0} - 32]=m[r28{0} - 32]{526},
                m[r28{0} - 36]=m[r28{0} - 36]{526},   m[r28{0} - 40]=m[r28{0} - 40]{526},
                m[r28{0} - 44]=m[r28{0} - 44]{526},   m[r28{0} - 48]=m[r28{0} - 48]{526},
                m[r28{0} - 4]=m[r28{0} - 4]{526},   m[r28{0} - 8]=m[r28{0} - 8]{526},
                m[r28{0} - 12]=m[r28{0} - 12]{526},   m[r28{0} - 16]=m[r28{0} - 16]{526},
                m[r28{0} - 28]=m[r28{0} - 28]{526},   m[r28{0} - 32]=m[r28{0} - 32]{526},
                m[r28{0} - 36]=m[r28{0} - 36]{526},   m[r28{0} - 40]=m[r28{0} - 40]{526},
                m[r28{0} - 44]=m[r28{0} - 44]{526},   m[r28{0} - 48]=m[r28{0} - 48]{526},
                m[r28{0} - 56]=m[r28{0} - 56]{526},   m[r28{0} - 60]=m[r28{0} - 60]{526},
                m[r28{0} - 64]=m[r28{0} - 64]{526},   <all>=<all>{526},   tmp1=r24{681} - 1,
                %flags=LOGICALFLAGS32( r24{681} - 1 ),   %ZF=LOGICALFLAGS32( r24{681} - 1 ),
                %CF=LOGICALFLAGS32( r24{681} - 1 )
              Live variables: eax in proc main
result:    0 *32* eax := -
dest is not lib
call:  570 {*v* eax, *j32* esi, *32* ecx, *j32* edx, *u32* ebx_1, *32** esp, *32** ebp, *32* edi} := CALL proc2(
                *u32* m[esp - 20] := m[esp - 20]
                *32* local1 := m[esp - 12]
              )
              Reaching definitions: r24=r24{687} - 3,   r25=r25{550} + r25{550},   r26=(r26{548} + 0x226b) ^ r27{555},
                r27=r27{555},   r28=r28{526} - 4,   r29=r29{526},   r30=r30{545},   r31=r31{545},
                m[r28{0} + 4]=m[r28{0} + 4]{526},   m[r28{0} + 8]=m[r28{0} + 8]{526},
                m[r28{0} + 12]=m[r28{0} + 12]{526},   m[r28{0} - 4]=m[r28{0} - 4]{526},
                m[r28{0} - 8]=m[r28{0} - 8]{526},   m[r28{0} - 12]=m[r28{0} - 12]{526},
                m[r28{0} - 16]=m[r28{0} - 16]{526},   m[r28{0} - 28]=m[r28{0} - 28]{526},
                m[r28{0} - 32]=m[r28{0} - 32]{526},   m[r28{0} - 36]=m[r28{0} - 36]{526},
                m[r28{0} - 40]=m[r28{0} - 40]{526},   m[r28{0} - 44]=m[r28{0} - 44]{526},
                m[r28{0} - 48]=m[r28{0} - 48]{526},   m[r28{0} - 4]=m[r28{0} - 4]{526},
                m[r28{0} - 8]=m[r28{0} - 8]{526},   m[r28{0} - 12]=m[r28{0} - 12]{526},
                m[r28{0} - 16]=m[r28{0} - 16]{526},   m[r28{0} - 28]=m[r28{0} - 28]{526},
                m[r28{0} - 32]=m[r28{0} - 32]{526},   m[r28{0} - 36]=m[r28{0} - 36]{526},
                m[r28{0} - 40]=m[r28{0} - 40]{526},   m[r28{0} - 44]=m[r28{0} - 44]{526},
                m[r28{0} - 48]=m[r28{0} - 48]{526},   m[r28{0} - 56]=m[r28{0} - 56]{526},
                m[r28{0} - 60]=m[r28{0} - 60]{526},   m[r28{0} - 64]=m[r28{0} - 64]{526},   <all>=<all>{526},
                tmp1=r24{687},   %flags=SUBFLAGS32( r24{687}, 3, r24{687} - 3 ),   %ZF=(r24{687} - 3) = 0,
                %CF=r24{687} <u 3
              Live variables: ebp in proc main
result:    0 *32** ebp := -
dest is not lib
call:  130 {*u32* eax, *union* ecx, *v* edx} := CALL StgCreateStorageEx(
              )
              Reaching definitions: r24=r24{268} - 2,   r25=m[r28{0} - 12]{0} * 8,   r26=r26{104},
                r27=m[r28{0} + 4]{0},   r28=r28{0} - 108,   r29=r28{0} - 4,   r30=m[r28{0} + 8]{0},   r31=r31{35},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 12]=m[r28{0} - 12]{0},   m[r28{0} - 16]=r26{104},
                m[r28{0} - 20]=r24{49} + m[r28{0} + 4]{0},   m[r28{0} - 32]=m[r28{0} - 32]{64},
                m[r28{0} - 36]=m[r28{0} - 36]{59},   m[r28{0} - 48]=m[r28{0} - 48]{0},
                m[r28{0} - 52]=m[r28{0} - 52]{0},   m[r28{0} - 56]=m[r28{0} - 56]{0},
                m[r28{0} - 60]=m[r28{0} - 60]{48},   m[r28{0} - 64]=r27{0},   m[r28{0} - 68]=r30{0},
                m[r28{0} - 72]=r31{0},   m[r28{0} - 76]=0,   m[r28{0} - 80]=0,   m[r28{0} - 84]=0,   m[r28{0} - 88]=0,
                m[r28{0} - 92]=0,   m[r28{0} - 96]=0,   m[r28{0} - 100]=0,   m[r28{0} - 104]=0,   m[r28{0} - 108]=%pc,
                tmp1=r24{268},   tmpb=tmpb{0},   %flags=SUBFLAGS32( r24{268}, 2, r24{268} - 2 ),
                %ZF=(r24{268} - 2) = 0,   %CF=r24{268} <u 2
              Live variables: eax,  ecx in proc proc1
result:    0 *u32* eax := -
result:    0 *union* ecx := -
dest is not lib
call:   22 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetModuleFileNameA(
                *HMODULE* local0 := 0
                *LPSTR* local1 := ""
                *DWORD* local2 := 260
              )
              Reaching definitions: r27=r27{0},   r28=r28{0} - 72,   r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 16]=m[r28{0} - 16]{0},
                m[r28{0} - 48]=r27{0},   m[r28{0} - 52]=r30{0},   m[r28{0} - 56]=r31{0},   m[r28{0} - 60]=260,
                m[r28{0} - 64]=0x405688,   m[r28{0} - 68]=0,   m[r28{0} - 72]=%pc,   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 40, r28{0} - 44 ),   %ZF=(r28{0} - 44) = 0,   %CF=(r28{0} - 4) <u 40
              Live variables:  in proc proc2
dest is not lib
call:   40 {*32* eax, *j32* ecx, *j32* edx, *v* esp} := CALL lstrcpyA(
              )
              Reaching definitions: r24=r24{30},   r25=r25{22},   r26=m[r28{0} - 16]{0} + m[r28{0} - 16]{0},
                r27=r27{0},   r28=r28{0} - 68,   r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 12]=r24{30},   m[r28{0} - 16]=m[r28{0} - 16]{0},
                m[r28{0} - 48]=r27{0},   m[r28{0} - 52]=r30{0},   m[r28{0} - 56]=r31{0},   m[r28{0} - 60]=0x404031,
                m[r28{0} - 64]=0x40578c,   m[r28{0} - 68]=%pc,   m[r28{0} - 72]=%pc,
                tmp1=0xfffff656 - (m[r28{0} - 16]{0} * 4),
                %flags=ADDFLAGS32( 0xfffff656 - (m[r28{0} - 16]{0} * 4), m[r28{0} - 16]{0} + m[r28{0} - 16]{0}, r24{30} ),
                %ZF=ADDFLAGS32( 0xfffff656 - (m[r28{0} - 16]{0} * 4), m[r28{0} - 16]{0} + m[r28{0} - 16]{0}, r24{30} ),
                %CF=ADDFLAGS32( 0xfffff656 - (m[r28{0} - 16]{0} * 4), m[r28{0} - 16]{0} + m[r28{0} - 16]{0}, r24{30} )
              Live variables:  in proc proc2
dest is not lib
call:   80 {*32* eax, *j32* ecx, *u32* edx, *v* esp} := CALL lstrcatA(
                *LPSTR* local4 := ""
                *LPSTR* local5 := ""
              )
              Reaching definitions: r24=r24{593} + 2,   r25=r25{59},   r26=(m[r28{0} - 16]{640} + 0x1cf7) ^ r25{59},
                r27=(m[r28{0} - 16]{640} + m[r28{0} - 16]{640}) >> r25{50},   r28=r28{0} - 76,   r29=r28{0} - 4,
                r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{0},
                m[r28{0} - 12]=r24{30},   m[r28{0} - 16]=m[r28{0} - 16]{66},   m[r28{0} - 48]=r27{0},
                m[r28{0} - 52]=r30{0},   m[r28{0} - 56]=r31{0},   m[r28{0} - 60]=0x404031,   m[r28{0} - 64]=0x40578c,
                m[r28{0} - 68]=0x405688,   m[r28{0} - 72]=0x40578c,   m[r28{0} - 76]=%pc,   tmp1=r24{593} - 3,
                %flags=SUBFLAGS32( r24{593} + 2, 5, r24{593} - 3 ),   %ZF=(r24{593} - 3) = 0,   %CF=(r24{593} + 2) <u 5
              Live variables:  in proc proc2
dest is not lib
call:  208 {*i32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetModuleHandleA(
              )
              Reaching definitions: r24=r24{200},   r25=r24{30} + r24{30},
                r26=(r24{30} + 0x1e97) + (r24{30} + 0x1e97),   r27=r27{157},   r28=r28{0} - 72,   r29=r28{0} - 4,
                r30=r30{155},   r31=r25{106} + (r24{30} * 2),   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{30} + 0x1e97,
                m[r28{0} - 12]=r24{30},   m[r28{0} - 16]=r24{200},   m[r28{0} - 48]=r27{0},   m[r28{0} - 52]=r30{0},
                m[r28{0} - 56]=r31{0},   m[r28{0} - 60]=0x404031,   m[r28{0} - 64]=0x40578c,   m[r28{0} - 68]=0,
                m[r28{0} - 72]=%pc,   m[r28{0} - 76]=%pc,   tmp1=r24{190} - ((r24{30} + 0x1e97) + (r24{30} + 0x1e97)),
                %flags=ADDFLAGS32( r24{190} - ((r24{30} + 0x1e97) + (r24{30} + 0x1e97)), 0x24a3, r24{200} ),
                %ZF=ADDFLAGS32( r24{190} - ((r24{30} + 0x1e97) + (r24{30} + 0x1e97)), 0x24a3, r24{200} ),
                %CF=ADDFLAGS32( r24{190} - ((r24{30} + 0x1e97) + (r24{30} + 0x1e97)), 0x24a3, r24{200} )
              Live variables: eax in proc proc2
result:    0 *i32* eax := -
