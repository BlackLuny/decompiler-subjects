Unknown library function GetStartupInfoA
Unknown library function GetModuleHandleA
Unknown library function lstrcmpA
Unknown library function CreateMutexA
Unknown library function CreateThread
Unknown library function CreateFileA
Unknown library function lstrlenA
Unknown library function AllocateAndInitializeSid
Unknown library function CheckTokenMembership
Unknown library function FreeSid
Unknown library function GetCurrentProcess
Unknown library function IsDebuggerPresent
Unknown library function GetEnvironmentVariableA
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc1 ###
in proc proc1 adding addrExp r28{0} - 4 to local table
in proc proc1 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc1 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc1 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
finding final parameters for proc1
potential param r28
found new parameter r28
potential param r30
found new parameter r30
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
assgn    8 *32* m[r28 - 4] := m[0x4065e0]
assgn   12 *32* %pc := m[0x404050]
is readonly
after removing matching assigns (%pc).
in proc proc22 adding addrExp r28{0} - 4 to local table
in proc proc22 adding addrExp r28{0} - 8 to local table
in proc proc22 adding addrExp r28{0} - 12 to local table
in proc proc22 adding addrExp r28{0} - 16 to local table
in proc proc22 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type LPVOID does not resolve to compound or array
in proc proc22 adding addrExp r28{0} - 8 to local table
in proc proc22 adding addrExp r28{0} - 12 to local table
in proc proc22 adding addrExp r28{0} - 16 to local table
in proc proc22 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type LPVOID does not resolve to compound or array
in proc proc22 adding addrExp r28{0} - 8 to local table
in proc proc22 adding addrExp r28{0} - 12 to local table
in proc proc22 adding addrExp r28{0} - 16 to local table
finding final parameters for proc22
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r24
found new parameter r24
potential param r25
found new parameter r25
potential param r26
found new parameter r26
after removing matching assigns (%pc).
in proc proc5 adding addrExp r28{0} - 12 to local table
in proc proc5 adding addrExp r28{0} - 16 to local table
in proc proc5 adding addrExp r28{0} - 20 to local table
in proc proc5 adding addrExp r28{0} - 24 to local table
in proc proc5 adding addrExp r28{0} - 4 to local table
in proc proc5 adding addrExp r28{0} - 8 to local table
in proc proc5 adding addrExp r28{0} - 8 to local table
in proc proc5 adding addrExp r28{0} - 8 to local table
in proc proc5 adding addrExp r28{0} - 12 to local table
in proc proc5 adding addrExp r28{0} - 16 to local table
in proc proc5 adding addrExp r28{0} - 20 to local table
in proc proc5 adding addrExp r28{0} - 24 to local table
in proc proc5 adding addrExp r28{0} - 12 to local table
in proc proc5 adding addrExp r28{0} - 16 to local table
in proc proc5 adding addrExp r28{0} - 20 to local table
in proc proc5 adding addrExp r28{0} - 24 to local table
finding final parameters for proc5
potential param r28
found new parameter r28
potential param r24
found new parameter r24
potential param r25
found new parameter r25
potential param r26
found new parameter r26
assgn   12 *32* m[r28 - 4] := m[0x4065e0]
assgn   16 *32* %pc := m[0x404058]
is readonly
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
in proc proc6 adding addrExp r28{0} - 4 to local table
in proc proc6 adding addrExp r28{0} - 8 to local table
in proc proc6 adding addrExp r28{0} - 12 to local table
in proc proc6 adding addrExp r28{0} - 16 to local table
finding final parameters for proc6
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
assgn   21 *32* tmp2 := m[0x4060f8]
after removing matching assigns (%pc).
WARNING: size 0x20 meet with long long; allowing temporarily
WARNING: size 0x20 meet with long long; allowing temporarily
WARNING: size 0x20 meet with long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
WARNING: size 0x20 meet with long long; allowing temporarily
WARNING: size 0x20 meet with long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
WARNING: size 0x20 meet with long long; allowing temporarily
WARNING: size 0x20 meet with long long; allowing temporarily
WARNING: size 0x20 meet with long long; allowing temporarily
WARNING: size 0x20 meet with long long; allowing temporarily
WARNING: size 0x20 meet with long long; allowing temporarily
WARNING: size 0x20 meet with long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
WARNING: size 0x20 meet with long long; allowing temporarily
WARNING: size 0x20 meet with long long; allowing temporarily
WARNING: size 0x20 meet with long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
WARNING: size 0x20 meet with long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
WARNING: size 0x20 meet with long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
WARNING: size 0x20 meet with long long; allowing temporarily
WARNING: size 0x20 meet with long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc29 ###
in proc proc29 adding addrExp r28{0} - 4 to local table
in proc proc29 adding addrExp r28{0} - 8 to local table
in proc proc29 adding addrExp r28{0} - 8 to local table
TYPE ERROR: Existing type at address 0xfffffff8 is not structure or array type
in proc proc29 adding addrExp r28{0} - 8 to local table
TYPE ERROR: Existing type at address 0xfffffff8 is not structure or array type
in proc proc29 adding addrExp r28{0} - 8 to local table
TYPE ERROR: Existing type at address 0xfffffff8 is not structure or array type
finding final parameters for proc29
potential param r28
found new parameter r28
potential param r24
found new parameter r24
potential param r26
found new parameter r26
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
in proc proc7 adding addrExp r28{0} - 4 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
finding final parameters for proc7
potential param r24
found new parameter r24
potential param r26
found new parameter r26
assgn   39 *32* %pc := m[0x404000]
is readonly
assgn   69 *32* %pc := m[0x404004]
is readonly
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc8 ###
in proc proc8 adding addrExp r28{0} - 12 to local table
in proc proc8 adding addrExp r28{0} - 8 to local table
in proc proc8 adding addrExp r28{0} - 72 to local table
in proc proc8 adding addrExp r28{0} - 76 to local table
in proc proc8 adding addrExp r28{0} - 80 to local table
in proc proc8 adding addrExp r28{0} - 84 to local table
in proc proc8 adding addrExp r28{0} - 4 to local table
in proc proc8 adding addrExp r28{0} - 20 to local table
in proc proc8 adding addrExp r28{0} - 19 to local table
in proc proc8 adding addrExp r28{0} - 18 to local table
in proc proc8 adding addrExp r28{0} - 17 to local table
in proc proc8 adding addrExp r28{0} - 16 to local table
in proc proc8 adding addrExp r28{0} - 15 to local table
in proc proc8 adding addrExp r28{0} - 24 to local table
in proc proc8 adding addrExp r28{0} - 28 to local table
in proc proc8 adding addrExp r28{0} - 32 to local table
in proc proc8 adding addrExp r28{0} - 36 to local table
in proc proc8 adding addrExp r28{0} - 40 to local table
in proc proc8 adding addrExp r28{0} - 44 to local table
in proc proc8 adding addrExp r28{0} - 48 to local table
in proc proc8 adding addrExp r28{0} - 52 to local table
in proc proc8 adding addrExp r28{0} - 56 to local table
in proc proc8 adding addrExp r28{0} - 60 to local table
in proc proc8 adding addrExp r28{0} - 64 to local table
in proc proc8 adding addrExp r28{0} - 68 to local table
in proc proc8 adding addrExp r28{0} - 8 to local table
in proc proc8 adding addrExp r28{0} - 68 to local table
in proc proc8 adding addrExp r28{0} - 72 to local table
in proc proc8 adding addrExp r28{0} - 76 to local table
in proc proc8 adding addrExp r28{0} - 80 to local table
in proc proc8 adding addrExp r28{0} - 8 to local table
in proc proc8 adding addrExp r28{0} - 8 to local table
in proc proc8 adding addrExp r28{0} - 80 to local table
in proc proc8 adding addrExp r28{0} - 84 to local table
in proc proc8 adding addrExp r28{0} - 8 to local table
in proc proc8 adding addrExp r28{0} - 68 to local table
in proc proc8 adding addrExp r28{0} - 72 to local table
in proc proc8 adding addrExp r28{0} - 76 to local table
in proc proc8 adding addrExp r28{0} - 80 to local table
in proc proc8 adding addrExp r28{0} - 84 to local table
finding final parameters for proc8
potential param r28
found new parameter r28
assgn   22 *32* %pc := m[0x406120]
assgn   57 *32* %pc := m[0x406124]
assgn   67 *32* %pc := m[0x406128]
assgn   77 *32* %pc := m[0x406128]
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc9 ###
in proc proc9 adding addrExp r28{0} - 4 to local table
in proc proc9 adding addrExp r28{0} - 16 to local table
in proc proc9 adding addrExp r28{0} - 20 to local table
in proc proc9 adding addrExp r28{0} - 28 to local table
in proc proc9 adding addrExp r28{0} - 32 to local table
in proc proc9 adding addrExp r28{0} - 36 to local table
in proc proc9 adding addrExp r28{0} - 40 to local table
in proc proc9 adding addrExp r28{0} - 44 to local table
in proc proc9 adding addrExp r28{0} - 48 to local table
in proc proc9 adding addrExp r28{0} - 4 to local table
in proc proc9 adding addrExp r28{0} - 16 to local table
TYPE ERROR: Existing type at address 0xfffffff0 is not structure or array type
in proc proc9 adding addrExp r28{0} - 20 to local table
TYPE ERROR: Existing type at address 0xffffffec is not structure or array type
in proc proc9 adding addrExp r28{0} - 28 to local table
TYPE ERROR: Existing type at address 0xffffffe4 is not structure or array type
in proc proc9 adding addrExp r28{0} - 32 to local table
TYPE ERROR: Existing type at address 0xffffffe0 is not structure or array type
in proc proc9 adding addrExp r28{0} - 36 to local table
TYPE ERROR: Existing type at address 0xffffffdc is not structure or array type
in proc proc9 adding addrExp r28{0} - 40 to local table
TYPE ERROR: Existing type at address 0xffffffd8 is not structure or array type
in proc proc9 adding addrExp r28{0} - 44 to local table
TYPE ERROR: Existing type at address 0xffffffd4 is not structure or array type
in proc proc9 adding addrExp r28{0} - 48 to local table
TYPE ERROR: Existing type at address 0xffffffd0 is not structure or array type
finding final parameters for proc9
potential param r28
found new parameter r28
potential param global75
potential param global76
potential param global77
assgn    9 *32* r24 := m[0x406110]
assgn   14 *32* %pc := m[0x40406c]
is readonly
assgn   29 *32* %pc := m[0x404048]
is readonly
assgn   44 *32* %pc := m[0x404044]
is readonly
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc10 ###
in proc proc10 adding addrExp r28{0} - 4 to local table
in proc proc10 adding addrExp r28{0} - 16 to local table
in proc proc10 adding addrExp r28{0} - 20 to local table
in proc proc10 adding addrExp r28{0} - 24 to local table
in proc proc10 adding addrExp r28{0} - 12 to local table
in proc proc10 adding addrExp r28{0} - 8 to local table
in proc proc10 adding addrExp r28{0} - 16 to local table
in proc proc10 adding addrExp r28{0} - 20 to local table
in proc proc10 adding addrExp r28{0} - 24 to local table
in proc proc10 adding addrExp r28{0} - 28 to local table
in proc proc10 adding addrExp r28{0} - 32 to local table
in proc proc10 adding addrExp r28{0} - 32 to local table
in proc proc10 adding addrExp r28{0} - 36 to local table
finding final parameters for proc10
potential param r28
found new parameter r28
assgn    6 *32* r24 := m[0x406548]
after removing matching assigns (%pc).
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc15 ###
in proc proc15 adding addrExp r28{0} - 12 to local table
in proc proc15 adding addrExp r28{0} - 4 to local table
in proc proc15 adding addrExp r28{0} - 8 to local table
in proc proc15 adding addrExp r28{0} - 12 to local table
in proc proc15 adding addrExp r28{0} - 12 to local table
finding final parameters for proc15
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param r27
found new parameter r27
potential param r9
found new parameter r9
potential param r25
found new parameter r25
potential param r11
found new parameter r11
assgn   37 *32* %pc := m[0x406120]
assgn   59 *32* %pc := m[0x406124]
assgn   69 *32* %pc := m[0x406128]
assgn   89 *32* %pc := m[0x406128]
assgn  107 *32* %pc := m[0x406120]
assgn  129 *32* %pc := m[0x406124]
assgn  139 *32* %pc := m[0x406128]
assgn  159 *32* %pc := m[0x406128]
after removing matching assigns (%pc).
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc11 ###
in proc proc11 adding addrExp r28{0} - 4 to local table
in proc proc11 adding addrExp r28{0} - 12 to local table
in proc proc11 adding addrExp r28{0} - 24 to local table
in proc proc11 adding addrExp r28{0} - 28 to local table
in proc proc11 adding addrExp r28{0} - 20 to local table
in proc proc11 adding addrExp r28{0} - 8 to local table
in proc proc11 adding addrExp r28{0} - 16 to local table
in proc proc11 adding addrExp r28{0} - 24 to local table
in proc proc11 adding addrExp r28{0} - 28 to local table
in proc proc11 adding addrExp r28{0} - 32 to local table
in proc proc11 adding addrExp r28{0} - 36 to local table
in proc proc11 adding addrExp r28{0} - 40 to local table
in proc proc11 adding addrExp r28{0} - 44 to local table
in proc proc11 adding addrExp r28{0} - 4 to local table
in proc proc11 adding addrExp r28{0} - 8 to local table
TYPE ERROR: Existing type at address 0xfffffff8 is not structure or array type
in proc proc11 adding addrExp r28{0} - 12 to local table
TYPE ERROR: Existing type at address 0xfffffff4 is not structure or array type
in proc proc11 adding addrExp r28{0} - 16 to local table
TYPE ERROR: Existing type at address 0xfffffff0 is not structure or array type
in proc proc11 adding addrExp r28{0} - 20 to local table
TYPE ERROR: Existing type at address 0xffffffec is not structure or array type
in proc proc11 adding addrExp r28{0} - 24 to local table
TYPE ERROR: Existing type at address 0xffffffe8 is not structure or array type
in proc proc11 adding addrExp r28{0} - 28 to local table
TYPE ERROR: Existing type at address 0xffffffe4 is not structure or array type
in proc proc11 adding addrExp r28{0} - 32 to local table
TYPE ERROR: Existing type at address 0xffffffe0 is not structure or array type
in proc proc11 adding addrExp r28{0} - 36 to local table
TYPE ERROR: Existing type at address 0xffffffdc is not structure or array type
in proc proc11 adding addrExp r28{0} - 40 to local table
TYPE ERROR: Existing type at address 0xffffffd8 is not structure or array type
in proc proc11 adding addrExp r28{0} - 44 to local table
TYPE ERROR: Existing type at address 0xffffffd4 is not structure or array type
in proc proc11 adding addrExp r28{0} - 24 to local table
in proc proc11 adding addrExp r28{0} - 28 to local table
in proc proc11 adding addrExp r28{0} - 32 to local table
in proc proc11 adding addrExp r28{0} - 36 to local table
in proc proc11 adding addrExp r28{0} - 40 to local table
in proc proc11 adding addrExp r28{0} - 44 to local table
in proc proc11 adding addrExp r28{0} - 4 to local table
in proc proc11 adding addrExp r28{0} - 8 to local table
TYPE ERROR: Existing type at address 0xfffffff8 is not structure or array type
in proc proc11 adding addrExp r28{0} - 12 to local table
TYPE ERROR: Existing type at address 0xfffffff4 is not structure or array type
in proc proc11 adding addrExp r28{0} - 16 to local table
TYPE ERROR: Existing type at address 0xfffffff0 is not structure or array type
in proc proc11 adding addrExp r28{0} - 20 to local table
TYPE ERROR: Existing type at address 0xffffffec is not structure or array type
in proc proc11 adding addrExp r28{0} - 24 to local table
TYPE ERROR: Existing type at address 0xffffffe8 is not structure or array type
in proc proc11 adding addrExp r28{0} - 28 to local table
TYPE ERROR: Existing type at address 0xffffffe4 is not structure or array type
in proc proc11 adding addrExp r28{0} - 32 to local table
TYPE ERROR: Existing type at address 0xffffffe0 is not structure or array type
in proc proc11 adding addrExp r28{0} - 36 to local table
TYPE ERROR: Existing type at address 0xffffffdc is not structure or array type
in proc proc11 adding addrExp r28{0} - 40 to local table
TYPE ERROR: Existing type at address 0xffffffd8 is not structure or array type
in proc proc11 adding addrExp r28{0} - 44 to local table
TYPE ERROR: Existing type at address 0xffffffd4 is not structure or array type
in proc proc11 adding addrExp r28{0} - 4 to local table
in proc proc11 adding addrExp r28{0} - 8 to local table
TYPE ERROR: Existing type at address 0xfffffff8 is not structure or array type
in proc proc11 adding addrExp r28{0} - 12 to local table
TYPE ERROR: Existing type at address 0xfffffff4 is not structure or array type
in proc proc11 adding addrExp r28{0} - 16 to local table
TYPE ERROR: Existing type at address 0xfffffff0 is not structure or array type
in proc proc11 adding addrExp r28{0} - 20 to local table
TYPE ERROR: Existing type at address 0xffffffec is not structure or array type
in proc proc11 adding addrExp r28{0} - 24 to local table
TYPE ERROR: Existing type at address 0xffffffe8 is not structure or array type
in proc proc11 adding addrExp r28{0} - 28 to local table
TYPE ERROR: Existing type at address 0xffffffe4 is not structure or array type
in proc proc11 adding addrExp r28{0} - 32 to local table
TYPE ERROR: Existing type at address 0xffffffe0 is not structure or array type
in proc proc11 adding addrExp r28{0} - 36 to local table
TYPE ERROR: Existing type at address 0xffffffdc is not structure or array type
in proc proc11 adding addrExp r28{0} - 40 to local table
TYPE ERROR: Existing type at address 0xffffffd8 is not structure or array type
in proc proc11 adding addrExp r28{0} - 44 to local table
TYPE ERROR: Existing type at address 0xffffffd4 is not structure or array type
finding final parameters for proc11
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param global75
potential param global76
potential param global77
potential param r27
found new parameter r27
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
in proc proc12 adding addrExp r28{0} - 4 to local table
finding final parameters for proc12
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
after removing matching assigns (%pc).
WARNING: size 0x20 meet with /*signed?*/long long; allowing temporarily
WARNING: size 0x20 meet with /*signed?*/long long; allowing temporarily
WARNING: size 0x20 meet with long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
WARNING: size 0x20 meet with long long; allowing temporarily
WARNING: size 0x20 meet with long long; allowing temporarily
WARNING: size 0x20 meet with /*signed?*/long long; allowing temporarily
WARNING: size 0x20 meet with long long; allowing temporarily
WARNING: size 0x20 meet with long long; allowing temporarily
WARNING: size 0x20 meet with long long; allowing temporarily
WARNING: size 0x20 meet with long long; allowing temporarily
WARNING: size 0x20 meet with long long; allowing temporarily
WARNING: size 0x20 meet with long long; allowing temporarily
WARNING: size 0x20 meet with long long; allowing temporarily
WARNING: size 0x20 meet with long long; allowing temporarily
WARNING: size 0x20 meet with long long; allowing temporarily
WARNING: size 0x20 meet with long long; allowing temporarily
WARNING: size 0x20 meet with long long; allowing temporarily
WARNING: size 0x20 meet with long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
WARNING: size 0x20 meet with long long; allowing temporarily
WARNING: size 0x20 meet with long long; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc20 ###
in proc proc20 adding addrExp r28{0} - 24 to local table
in proc proc20 adding addrExp r28{0} - 12 to local table
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 16 to local table
TYPE ERROR: at address 0xfffffff0, overlapping type long long does not resolve to compound or array
in proc proc20 adding addrExp r28{0} - 20 to local table
TYPE ERROR: Existing type at address 0xffffffe8 is not structure or array type
in proc proc20 adding addrExp r28{0} - 4 to local table
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 16 to local table
TYPE ERROR: at address 0xfffffff0, overlapping type long long does not resolve to compound or array
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 16 to local table
TYPE ERROR: at address 0xfffffff0, overlapping type long long does not resolve to compound or array
in proc proc20 adding addrExp r28{0} - 24 to local table
in proc proc20 adding addrExp r28{0} - 24 to local table
in proc proc20 adding addrExp r28{0} - 24 to local table
in proc proc20 adding addrExp r28{0} - 24 to local table
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 16 to local table
TYPE ERROR: at address 0xfffffff0, overlapping type long long does not resolve to compound or array
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 20 to local table
TYPE ERROR: Existing type at address 0xffffffe8 is not structure or array type
in proc proc20 adding addrExp r28{0} - 8 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffff8 existing type unsigned char * but added type /*signed?*/int
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 12 to local table
in proc proc20 adding addrExp r28{0} - 20 to local table
TYPE ERROR: Existing type at address 0xffffffe8 is not structure or array type
in proc proc20 adding addrExp r28{0} - 12 to local table
in proc proc20 adding addrExp r28{0} - 20 to local table
TYPE ERROR: Existing type at address 0xffffffe8 is not structure or array type
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 12 to local table
in proc proc20 adding addrExp r28{0} - 16 to local table
TYPE ERROR: at address 0xfffffff0, overlapping type long long does not resolve to compound or array
in proc proc20 adding addrExp r28{0} - 20 to local table
TYPE ERROR: Existing type at address 0xffffffe8 is not structure or array type
in proc proc20 adding addrExp r28{0} - 24 to local table
finding final parameters for proc20
potential param r28
found new parameter r28
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r10
found new parameter r10
potential param r25
found new parameter r25
potential param r26
found new parameter r26
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc24 ###
in proc proc24 adding addrExp r28{0} - 4 to local table
in proc proc24 adding addrExp r28{0} - 8 to local table
in proc proc24 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc24 adding addrExp r28{0} - 8 to local table
in proc proc24 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc24 adding addrExp r28{0} - 8 to local table
finding final parameters for proc24
potential param r28
found new parameter r28
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param r27
found new parameter r27
potential param r3
found new parameter r3
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r0
found new parameter r0
potential param r11
found new parameter r11
potential param r15
found new parameter r15
potential param r26
found new parameter r26
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc25 ###
in proc proc25 adding addrExp r28{0} - 4 to local table
in proc proc25 adding addrExp r28{0} - 8 to local table
finding final parameters for proc25
potential param r28
found new parameter r28
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param r10
found new parameter r10
potential param r25
found new parameter r25
assgn    9 *32* r24 := m[0x406108]
assgn   14 *32* %pc := m[0x40406c]
is readonly
assgn   19 *32* r25 := m[0x406108]
assgn   24 *32* %pc := m[0x40406c]
is readonly
assgn   29 *32* r26 := m[0x406108]
assgn   34 *32* %pc := m[0x40406c]
is readonly
assgn   39 *32* r24 := m[0x406108]
assgn   44 *32* %pc := m[0x40406c]
is readonly
after removing matching assigns (%pc).
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc13 ###
in proc proc13 adding addrExp r28{0} - 4 to local table
in proc proc13 adding addrExp r28{0} - 80 to local table
in proc proc13 adding addrExp r28{0} - 84 to local table
in proc proc13 adding addrExp r28{0} - 88 to local table
in proc proc13 adding addrExp r28{0} - 8 to local table
in proc proc13 adding addrExp r28{0} - 80 to local table
in proc proc13 adding addrExp r28{0} - 84 to local table
in proc proc13 adding addrExp r28{0} - 88 to local table
in proc proc13 adding addrExp r28{0} - 32 to local table
in proc proc13 adding addrExp r28{0} - 80 to local table
in proc proc13 adding addrExp r28{0} - 84 to local table
in proc proc13 adding addrExp r28{0} - 88 to local table
in proc proc13 adding addrExp r28{0} - 20 to local table
in proc proc13 adding addrExp r28{0} - 80 to local table
in proc proc13 adding addrExp r28{0} - 84 to local table
in proc proc13 adding addrExp r28{0} - 88 to local table
in proc proc13 adding addrExp r28{0} - 28 to local table
in proc proc13 adding addrExp r28{0} - 36 to local table
in proc proc13 adding addrExp r28{0} - 16 to local table
in proc proc13 adding addrExp r28{0} - 36 to local table
in proc proc13 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc13 adding addrExp r28{0} - 8 to local table
in proc proc13 adding addrExp r28{0} - 16 to local table
in proc proc13 adding addrExp r28{0} - 20 to local table
in proc proc13 adding addrExp r28{0} - 28 to local table
in proc proc13 adding addrExp r28{0} - 32 to local table
in proc proc13 adding addrExp r28{0} - 36 to local table
in proc proc13 adding addrExp r28{0} - 80 to local table
in proc proc13 adding addrExp r28{0} - 84 to local table
in proc proc13 adding addrExp r28{0} - 88 to local table
in proc proc13 adding addrExp r28{0} - 4 to local table
in proc proc13 adding addrExp r28{0} - 8 to local table
TYPE ERROR: Existing type at address 0xfffffff8 is not structure or array type
in proc proc13 adding addrExp r28{0} - 16 to local table
TYPE ERROR: Existing type at address 0xfffffff0 is not structure or array type
in proc proc13 adding addrExp r28{0} - 20 to local table
TYPE ERROR: Existing type at address 0xffffffec is not structure or array type
in proc proc13 adding addrExp r28{0} - 28 to local table
TYPE ERROR: Existing type at address 0xffffffe4 is not structure or array type
in proc proc13 adding addrExp r28{0} - 32 to local table
TYPE ERROR: Existing type at address 0xffffffe0 is not structure or array type
in proc proc13 adding addrExp r28{0} - 36 to local table
TYPE ERROR: Existing type at address 0xffffffdc is not structure or array type
in proc proc13 adding addrExp r28{0} - 80 to local table
TYPE ERROR: Existing type at address 0xffffffb0 is not structure or array type
in proc proc13 adding addrExp r28{0} - 84 to local table
TYPE ERROR: Existing type at address 0xffffffac is not structure or array type
in proc proc13 adding addrExp r28{0} - 88 to local table
TYPE ERROR: Existing type at address 0xffffffa8 is not structure or array type
in proc proc13 adding addrExp r28{0} - 4 to local table
in proc proc13 adding addrExp r28{0} - 8 to local table
TYPE ERROR: Existing type at address 0xfffffff8 is not structure or array type
in proc proc13 adding addrExp r28{0} - 16 to local table
TYPE ERROR: Existing type at address 0xfffffff0 is not structure or array type
in proc proc13 adding addrExp r28{0} - 20 to local table
TYPE ERROR: Existing type at address 0xffffffec is not structure or array type
in proc proc13 adding addrExp r28{0} - 28 to local table
TYPE ERROR: Existing type at address 0xffffffe4 is not structure or array type
in proc proc13 adding addrExp r28{0} - 32 to local table
TYPE ERROR: Existing type at address 0xffffffe0 is not structure or array type
in proc proc13 adding addrExp r28{0} - 36 to local table
TYPE ERROR: Existing type at address 0xffffffdc is not structure or array type
in proc proc13 adding addrExp r28{0} - 80 to local table
TYPE ERROR: Existing type at address 0xffffffb0 is not structure or array type
in proc proc13 adding addrExp r28{0} - 84 to local table
TYPE ERROR: Existing type at address 0xffffffac is not structure or array type
in proc proc13 adding addrExp r28{0} - 88 to local table
TYPE ERROR: Existing type at address 0xffffffa8 is not structure or array type
in proc proc13 adding addrExp r28{0} - 4 to local table
in proc proc13 adding addrExp r28{0} - 8 to local table
TYPE ERROR: Existing type at address 0xfffffff8 is not structure or array type
in proc proc13 adding addrExp r28{0} - 16 to local table
TYPE ERROR: Existing type at address 0xfffffff0 is not structure or array type
in proc proc13 adding addrExp r28{0} - 20 to local table
TYPE ERROR: Existing type at address 0xffffffec is not structure or array type
in proc proc13 adding addrExp r28{0} - 28 to local table
TYPE ERROR: Existing type at address 0xffffffe4 is not structure or array type
in proc proc13 adding addrExp r28{0} - 32 to local table
TYPE ERROR: Existing type at address 0xffffffe0 is not structure or array type
in proc proc13 adding addrExp r28{0} - 36 to local table
TYPE ERROR: Existing type at address 0xffffffdc is not structure or array type
in proc proc13 adding addrExp r28{0} - 80 to local table
TYPE ERROR: Existing type at address 0xffffffb0 is not structure or array type
in proc proc13 adding addrExp r28{0} - 84 to local table
TYPE ERROR: Existing type at address 0xffffffac is not structure or array type
in proc proc13 adding addrExp r28{0} - 88 to local table
TYPE ERROR: Existing type at address 0xffffffa8 is not structure or array type
finding final parameters for proc13
potential param r28
found new parameter r28
potential param r0
found new parameter r0
potential param r3
found new parameter r3
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r15
found new parameter r15
potential param r27
found new parameter r27
after removing matching assigns (%pc).
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned char; allowing temporarily
WARNING: size 0x20 meet with /*signed?*/char; allowing temporarily
WARNING: size 0x20 meet with /*signed?*/char; allowing temporarily
WARNING: size 0x20 meet with unsigned char; allowing temporarily
WARNING: size 0x20 meet with /*signed?*/char; allowing temporarily
WARNING: size 0x20 meet with /*signed?*/char; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc14 ###
in proc proc14 adding addrExp r28{0} - 0x40c to local table
in proc proc14 adding addrExp r28{0} - 4 to local table
in proc proc14 adding addrExp r28{0} - 0x418 to local table
in proc proc14 adding addrExp r28{0} - 0x414 to local table
in proc proc14 adding addrExp r28{0} - 8 to local table
in proc proc14 adding addrExp r28{0} - 8 to local table
in proc proc14 adding addrExp r28{0} - 8 to local table
in proc proc14 adding addrExp r28{0} - 8 to local table
in proc proc14 adding addrExp r28{0} - 8 to local table
in proc proc14 adding addrExp r28{0} - 8 to local table
in proc proc14 adding addrExp r28{0} - 0x40c to local table
in proc proc14 adding addrExp r28{0} - 0x414 to local table
in proc proc14 adding addrExp r28{0} - 0x414 to local table
in proc proc14 adding addrExp r28{0} - 0x40c to local table
in proc proc14 adding addrExp r28{0} - 0x410 to local table
in proc proc14 adding addrExp r28{0} - 0x410 to local table
in proc proc14 adding addrExp r28{0} - 8 to local table
in proc proc14 adding addrExp r28{0} - 0x40c to local table
in proc proc14 adding addrExp r28{0} - 0x410 to local table
in proc proc14 adding addrExp r28{0} - 0x414 to local table
in proc proc14 adding addrExp r28{0} - 8 to local table
in proc proc14 adding addrExp r28{0} - 0x414 to local table
in proc proc14 adding addrExp r28{0} - 0x40c to local table
finding final parameters for proc14
potential param r28
found new parameter r28
potential param r10
found new parameter r10
potential param r26
found new parameter r26
potential param r9
found new parameter r9
potential param m[r28{0} + 16]
found new parameter m[r28{0} + 16]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
assgn   10 *32* r24 := m[0]
after removing matching assigns (t[WILDSTR]).
in proc proc16 adding addrExp r28{0} - 4 to local table
in proc proc16 adding addrExp r28{0} - 8 to local table
in proc proc16 adding addrExp r28{0} - 12 to local table
in proc proc16 adding addrExp r28{0} - 16 to local table
in proc proc16 adding addrExp r28{0} - 20 to local table
in proc proc16 adding addrExp r28{0} - 36 to local table
in proc proc16 adding addrExp r28{0} - 40 to local table
in proc proc16 adding addrExp r28{0} - 44 to local table
in proc proc16 adding addrExp r28{0} - 28 to local table
in proc proc16 adding addrExp r28{0} - 8 to local table
finding final parameters for proc16
potential param r28
found new parameter r28
assgn   10 *32* r24 := m[0]
after removing matching assigns (t[WILDSTR]).
in proc proc17 adding addrExp r28{0} - 4 to local table
in proc proc17 adding addrExp r28{0} - 8 to local table
in proc proc17 adding addrExp r28{0} - 12 to local table
in proc proc17 adding addrExp r28{0} - 16 to local table
in proc proc17 adding addrExp r28{0} - 20 to local table
in proc proc17 adding addrExp r28{0} - 40 to local table
in proc proc17 adding addrExp r28{0} - 44 to local table
in proc proc17 adding addrExp r28{0} - 48 to local table
in proc proc17 adding addrExp r28{0} - 28 to local table
in proc proc17 adding addrExp r28{0} - 8 to local table
in proc proc17 adding addrExp r28{0} - 52 to local table
finding final parameters for proc17
potential param r28
found new parameter r28
assgn   15 *32* %pc := m[0x404054]
is readonly
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
in proc proc21 adding addrExp r28{0} - 4 to local table
in proc proc21 adding addrExp r28{0} - 8 to local table
in proc proc21 adding addrExp r28{0} - 12 to local table
in proc proc21 adding addrExp r28{0} - 16 to local table
in proc proc21 adding addrExp r28{0} - 20 to local table
in proc proc21 adding addrExp r28{0} - 24 to local table
finding final parameters for proc21
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
assgn   13 *32* %pc := m[0x404030]
is readonly
assgn   18 *32* tmp1 := m[0x406104]
assgn   21 *32* tmp1 := m[0x405438]
assgn   33 *32* %pc := m[0x40612c]
assgn   45 *32* %pc := m[0x40612c]
assgn   47 *32* r26 := m[0x405540]
assgn   52 *32* %pc := m[0x404068]
is readonly
assgn   56 *32* r24 := m[0x405540]
assgn   70 *32* %pc := m[0x406130]
assgn   77 *32* %pc := m[0x406128]
assgn   86 *32* %pc := m[0x404030]
is readonly
assgn  122 *32* %pc := m[0x404024]
is readonly
assgn  124 *32* tmp1 := m[0x406104]
assgn  127 *32* tmp1 := m[0x405438]
assgn  140 *32* %pc := m[0x40612c]
assgn  153 *32* %pc := m[0x40612c]
assgn  155 *32* r25 := m[0x405540]
assgn  160 *32* %pc := m[0x404068]
is readonly
assgn  164 *32* r26 := m[0x405540]
assgn  178 *32* %pc := m[0x406130]
assgn  185 *32* %pc := m[0x406128]
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc27 ###
in proc proc27 adding addrExp r28{0} - 12 to local table
in proc proc27 adding addrExp r28{0} - 20 to local table
in proc proc27 adding addrExp r28{0} - 48 to local table
in proc proc27 adding addrExp r28{0} - 52 to local table
in proc proc27 adding addrExp r28{0} - 44 to local table
in proc proc27 adding addrExp r28{0} - 4 to local table
in proc proc27 adding addrExp r28{0} - 24 to local table
in proc proc27 adding addrExp r28{0} - 28 to local table
in proc proc27 adding addrExp r28{0} - 32 to local table
in proc proc27 adding addrExp r28{0} - 32 to local table
in proc proc27 adding addrExp r28{0} - 36 to local table
in proc proc27 adding addrExp r28{0} - 40 to local table
in proc proc27 adding addrExp r28{0} - 44 to local table
in proc proc27 adding addrExp r28{0} - 32 to local table
in proc proc27 adding addrExp r28{0} - 36 to local table
in proc proc27 adding addrExp r28{0} - 40 to local table
in proc proc27 adding addrExp r28{0} - 44 to local table
in proc proc27 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc27 adding addrExp r28{0} - 12 to local table
in proc proc27 adding addrExp r28{0} - 20 to local table
in proc proc27 adding addrExp r28{0} - 24 to local table
in proc proc27 adding addrExp r28{0} - 28 to local table
in proc proc27 adding addrExp r28{0} - 32 to local table
in proc proc27 adding addrExp r28{0} - 36 to local table
in proc proc27 adding addrExp r28{0} - 40 to local table
in proc proc27 adding addrExp r28{0} - 44 to local table
TYPE ERROR: Existing type at address 0xffffffd4 is not structure or array type
in proc proc27 adding addrExp r28{0} - 48 to local table
in proc proc27 adding addrExp r28{0} - 52 to local table
in proc proc27 adding addrExp r28{0} - 32 to local table
in proc proc27 adding addrExp r28{0} - 36 to local table
in proc proc27 adding addrExp r28{0} - 40 to local table
in proc proc27 adding addrExp r28{0} - 40 to local table
in proc proc27 adding addrExp r28{0} - 44 to local table
in proc proc27 adding addrExp r28{0} - 20 to local table
in proc proc27 adding addrExp r28{0} - 12 to local table
in proc proc27 adding addrExp r28{0} - 40 to local table
in proc proc27 adding addrExp r28{0} - 44 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffd4 existing type unsigned int but added type __size8 *
in proc proc27 adding addrExp r28{0} - 48 to local table
size 0x20 meet with size 0x8!
in proc proc27 adding addrExp r28{0} - 40 to local table
in proc proc27 adding addrExp r28{0} - 44 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffd4 existing type unsigned int but added type __size8 *
in proc proc27 adding addrExp r28{0} - 48 to local table
in proc proc27 adding addrExp r28{0} - 40 to local table
in proc proc27 adding addrExp r28{0} - 44 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffd4 existing type unsigned int but added type __size8 *
in proc proc27 adding addrExp r28{0} - 48 to local table
in proc proc27 adding addrExp r28{0} - 52 to local table
in proc proc27 adding addrExp r28{0} - 40 to local table
in proc proc27 adding addrExp r28{0} - 44 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffd4 existing type unsigned int but added type __size8 *
in proc proc27 adding addrExp r28{0} - 48 to local table
in proc proc27 adding addrExp r28{0} - 52 to local table
in proc proc27 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc27 adding addrExp r28{0} - 12 to local table
TYPE ERROR: Existing type at address 0xfffffff4 is not structure or array type
in proc proc27 adding addrExp r28{0} - 20 to local table
TYPE ERROR: Existing type at address 0xffffffec is not structure or array type
in proc proc27 adding addrExp r28{0} - 24 to local table
in proc proc27 adding addrExp r28{0} - 28 to local table
in proc proc27 adding addrExp r28{0} - 32 to local table
in proc proc27 adding addrExp r28{0} - 36 to local table
in proc proc27 adding addrExp r28{0} - 40 to local table
in proc proc27 adding addrExp r28{0} - 44 to local table
TYPE ERROR: Existing type at address 0xffffffd4 is not structure or array type
in proc proc27 adding addrExp r28{0} - 48 to local table
TYPE ERROR: Existing type at address 0xffffffd0 is not structure or array type
in proc proc27 adding addrExp r28{0} - 52 to local table
TYPE ERROR: Existing type at address 0xffffffcc is not structure or array type
in proc proc27 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc27 adding addrExp r28{0} - 12 to local table
TYPE ERROR: Existing type at address 0xfffffff4 is not structure or array type
in proc proc27 adding addrExp r28{0} - 20 to local table
TYPE ERROR: Existing type at address 0xffffffec is not structure or array type
in proc proc27 adding addrExp r28{0} - 24 to local table
in proc proc27 adding addrExp r28{0} - 28 to local table
in proc proc27 adding addrExp r28{0} - 32 to local table
in proc proc27 adding addrExp r28{0} - 36 to local table
in proc proc27 adding addrExp r28{0} - 40 to local table
in proc proc27 adding addrExp r28{0} - 44 to local table
TYPE ERROR: Existing type at address 0xffffffd4 is not structure or array type
in proc proc27 adding addrExp r28{0} - 48 to local table
TYPE ERROR: Existing type at address 0xffffffd0 is not structure or array type
in proc proc27 adding addrExp r28{0} - 52 to local table
TYPE ERROR: Existing type at address 0xffffffcc is not structure or array type
finding final parameters for proc27
potential param global158
potential param r8
found new parameter r8
potential param global159
potential param global77
after removing matching assigns (%pc).
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc31 ###
in proc proc31 adding addrExp r28{0} - 12 to local table
in proc proc31 adding addrExp r28{0} - 4 to local table
in proc proc31 adding addrExp r28{0} - 8 to local table
in proc proc31 adding addrExp r28{0} - 12 to local table
in proc proc31 adding addrExp r28{0} - 12 to local table
in proc proc31 adding addrExp r28{0} - 12 to local table
in proc proc31 adding addrExp r28{0} - 12 to local table
in proc proc31 adding addrExp r28{0} - 12 to local table
in proc proc31 adding addrExp r28{0} - 12 to local table
finding final parameters for proc31
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r25
found new parameter r25
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param r10
found new parameter r10
potential param r26
found new parameter r26
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} - 12]
found new parameter m[r28{0} - 12]
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
in proc proc30 adding addrExp r28{0} - 28 to local table
in proc proc30 adding addrExp r28{0} - 4 to local table
in proc proc30 adding addrExp r28{0} - 8 to local table
in proc proc30 adding addrExp r28{0} - 12 to local table
in proc proc30 adding addrExp r28{0} - 16 to local table
finding final parameters for proc30
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} - 28]
found new parameter m[r28{0} - 28]
potential param r10
found new parameter r10
potential param r25
found new parameter r25
potential param r26
found new parameter r26
assgn    9 *32* r24 := m[0x406118]
assgn   14 *32* %pc := m[0x40406c]
is readonly
after removing matching assigns (%pc).
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc26 ###
in proc proc26 adding addrExp r28{0} - 88 to local table
in proc proc26 adding addrExp r28{0} - 8 to local table
in proc proc26 adding addrExp r28{0} - 12 to local table
in proc proc26 adding addrExp r28{0} - 16 to local table
in proc proc26 adding addrExp r28{0} - 20 to local table
in proc proc26 adding addrExp r28{0} - 28 to local table
in proc proc26 adding addrExp r28{0} - 32 to local table
in proc proc26 adding addrExp r28{0} - 40 to local table
in proc proc26 adding addrExp r28{0} - 44 to local table
in proc proc26 adding addrExp r28{0} - 48 to local table
in proc proc26 adding addrExp r28{0} - 52 to local table
in proc proc26 adding addrExp r28{0} - 68 to local table
in proc proc26 adding addrExp r28{0} - 72 to local table
in proc proc26 adding addrExp r28{0} - 4 to local table
in proc proc26 adding addrExp r28{0} - 56 to local table
in proc proc26 adding addrExp r28{0} - 60 to local table
in proc proc26 adding addrExp r28{0} - 64 to local table
in proc proc26 adding addrExp r28{0} - 24 to local table
in proc proc26 adding addrExp r28{0} - 36 to local table
in proc proc26 adding addrExp r28{0} - 56 to local table
in proc proc26 adding addrExp r28{0} - 60 to local table
in proc proc26 adding addrExp r28{0} - 64 to local table
size 0x20 meet with size 0x8!
in proc proc26 adding addrExp r28{0} - 36 to local table
in proc proc26 adding addrExp r28{0} - 56 to local table
in proc proc26 adding addrExp r28{0} - 60 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffc4 existing type HANDLE but added type unsigned int
in proc proc26 adding addrExp r28{0} - 40 to local table
in proc proc26 adding addrExp r28{0} - 16 to local table
in proc proc26 adding addrExp r28{0} - 56 to local table
in proc proc26 adding addrExp r28{0} - 60 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffc4 existing type HANDLE but added type unsigned int
in proc proc26 adding addrExp r28{0} - 44 to local table
in proc proc26 adding addrExp r28{0} - 32 to local table
in proc proc26 adding addrExp r28{0} - 56 to local table
in proc proc26 adding addrExp r28{0} - 60 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffc4 existing type HANDLE but added type unsigned int
in proc proc26 adding addrExp r28{0} - 48 to local table
in proc proc26 adding addrExp r28{0} - 28 to local table
in proc proc26 adding addrExp r28{0} - 56 to local table
in proc proc26 adding addrExp r28{0} - 60 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffc4 existing type HANDLE but added type unsigned int
in proc proc26 adding addrExp r28{0} - 52 to local table
in proc proc26 adding addrExp r28{0} - 12 to local table
in proc proc26 adding addrExp r28{0} - 56 to local table
in proc proc26 adding addrExp r28{0} - 60 to local table
in proc proc26 adding addrExp r28{0} - 64 to local table
in proc proc26 adding addrExp r28{0} - 56 to local table
in proc proc26 adding addrExp r28{0} - 60 to local table
in proc proc26 adding addrExp r28{0} - 64 to local table
in proc proc26 adding addrExp r28{0} - 36 to local table
in proc proc26 adding addrExp r28{0} - 56 to local table
in proc proc26 adding addrExp r28{0} - 60 to local table
in proc proc26 adding addrExp r28{0} - 64 to local table
in proc proc26 adding addrExp r28{0} - 56 to local table
in proc proc26 adding addrExp r28{0} - 60 to local table
in proc proc26 adding addrExp r28{0} - 64 to local table
in proc proc26 adding addrExp r28{0} - 36 to local table
in proc proc26 adding addrExp r28{0} - 56 to local table
in proc proc26 adding addrExp r28{0} - 60 to local table
in proc proc26 adding addrExp r28{0} - 64 to local table
in proc proc26 adding addrExp r28{0} - 56 to local table
in proc proc26 adding addrExp r28{0} - 60 to local table
in proc proc26 adding addrExp r28{0} - 64 to local table
in proc proc26 adding addrExp r28{0} - 36 to local table
in proc proc26 adding addrExp r28{0} - 56 to local table
in proc proc26 adding addrExp r28{0} - 60 to local table
in proc proc26 adding addrExp r28{0} - 64 to local table
in proc proc26 adding addrExp r28{0} - 20 to local table
in proc proc26 adding addrExp r28{0} - 8 to local table
in proc proc26 adding addrExp r28{0} - 56 to local table
in proc proc26 adding addrExp r28{0} - 60 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffc4 existing type HANDLE but added type unsigned int
in proc proc26 adding addrExp r28{0} - 20 to local table
in proc proc26 adding addrExp r28{0} - 56 to local table
in proc proc26 adding addrExp r28{0} - 60 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffc4 existing type HANDLE but added type unsigned int
in proc proc26 adding addrExp r28{0} - 8 to local table
in proc proc26 adding addrExp r28{0} - 56 to local table
in proc proc26 adding addrExp r28{0} - 60 to local table
in proc proc26 adding addrExp r28{0} - 64 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffc0 existing type unsigned int but added type __size8 *
in proc proc26 adding addrExp r28{0} - 68 to local table
in proc proc26 adding addrExp r28{0} - 72 to local table
in proc proc26 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc26 adding addrExp r28{0} - 8 to local table
TYPE ERROR: Existing type at address 0xfffffff8 is not structure or array type
in proc proc26 adding addrExp r28{0} - 12 to local table
TYPE ERROR: Existing type at address 0xfffffff4 is not structure or array type
in proc proc26 adding addrExp r28{0} - 16 to local table
TYPE ERROR: Existing type at address 0xfffffff0 is not structure or array type
in proc proc26 adding addrExp r28{0} - 20 to local table
TYPE ERROR: Existing type at address 0xffffffec is not structure or array type
in proc proc26 adding addrExp r28{0} - 24 to local table
in proc proc26 adding addrExp r28{0} - 28 to local table
TYPE ERROR: Existing type at address 0xffffffe4 is not structure or array type
in proc proc26 adding addrExp r28{0} - 32 to local table
TYPE ERROR: Existing type at address 0xffffffe0 is not structure or array type
in proc proc26 adding addrExp r28{0} - 36 to local table
in proc proc26 adding addrExp r28{0} - 40 to local table
TYPE ERROR: Existing type at address 0xffffffd8 is not structure or array type
in proc proc26 adding addrExp r28{0} - 44 to local table
TYPE ERROR: Existing type at address 0xffffffd4 is not structure or array type
in proc proc26 adding addrExp r28{0} - 48 to local table
TYPE ERROR: Existing type at address 0xffffffd0 is not structure or array type
in proc proc26 adding addrExp r28{0} - 52 to local table
TYPE ERROR: Existing type at address 0xffffffcc is not structure or array type
in proc proc26 adding addrExp r28{0} - 56 to local table
in proc proc26 adding addrExp r28{0} - 60 to local table
in proc proc26 adding addrExp r28{0} - 64 to local table
in proc proc26 adding addrExp r28{0} - 68 to local table
TYPE ERROR: Existing type at address 0xffffffbc is not structure or array type
in proc proc26 adding addrExp r28{0} - 72 to local table
TYPE ERROR: Existing type at address 0xffffffb8 is not structure or array type
finding final parameters for proc26
potential param r28
found new parameter r28
potential param r9
found new parameter r9
potential param r11
found new parameter r11
potential param r27
found new parameter r27
potential param m[r28{0} - 88]
found new parameter m[r28{0} - 88]
potential param r10
found new parameter r10
assgn    9 *32* r24 := m[0x406108]
assgn   14 *32* %pc := m[0x40406c]
is readonly
assgn   19 *32* r25 := m[0x406108]
assgn   24 *32* %pc := m[0x40406c]
is readonly
assgn   29 *32* r26 := m[0x406108]
assgn   34 *32* %pc := m[0x40406c]
is readonly
assgn   43 *32* %pc := m[0x404030]
is readonly
assgn   54 *32* %pc := m[0x404030]
is readonly
assgn   62 *32* tmp1 := m[0x406104]
assgn   65 *32* tmp1 := m[0x405438]
assgn   74 *32* %pc := m[0x404030]
is readonly
assgn   90 *32* r24 := m[0x405540]
assgn  107 *32* %pc := m[0x404030]
is readonly
assgn  123 *32* r25 := m[0x405540]
assgn  135 *32* r26 := m[0x405540]
assgn  140 *32* %pc := m[0x404024]
is readonly
assgn  149 *32* %pc := m[0x404030]
is readonly
assgn  165 *32* r24 := m[0x405540]
assgn  187 *32* r25 := m[0x405540]
assgn  209 *32* r26 := m[0x405540]
assgn  221 *32* r24 := m[0x405540]
assgn  226 *32* %pc := m[0x404024]
is readonly
assgn  230 *32* r25 := m[0x405540]
assgn  235 *32* %pc := m[0x404024]
is readonly
assgn  237 *32* r26 := m[0x405540]
assgn  245 *32* %pc := m[0x404030]
is readonly
assgn  256 *32* %pc := m[0x404030]
is readonly
assgn  263 *32* r25 := m[0x405540]
assgn  276 *32* r24 := m[0x405540]
assgn  292 *32* %pc := m[0x404030]
is readonly
assgn  299 *32* r26 := m[0x405540]
assgn  312 *32* %pc := m[0x404030]
is readonly
assgn  326 *32* r24 := m[0x405540]
after removing matching assigns (%pc).
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc19 ###
in proc proc19 adding addrExp r28{0} - 32 to local table
in proc proc19 adding addrExp r28{0} - 36 to local table
in proc proc19 adding addrExp r28{0} - 4 to local table
in proc proc19 adding addrExp r28{0} - 20 to local table
in proc proc19 adding addrExp r28{0} - 24 to local table
in proc proc19 adding addrExp r28{0} - 28 to local table
in proc proc19 adding addrExp r28{0} - 16 to local table
in proc proc19 adding addrExp r28{0} - 20 to local table
in proc proc19 adding addrExp r28{0} - 24 to local table
in proc proc19 adding addrExp r28{0} - 28 to local table
in proc proc19 adding addrExp r28{0} - 8 to local table
in proc proc19 adding addrExp r28{0} - 20 to local table
in proc proc19 adding addrExp r28{0} - 24 to local table
in proc proc19 adding addrExp r28{0} - 28 to local table
in proc proc19 adding addrExp r28{0} - 12 to local table
in proc proc19 adding addrExp r28{0} - 20 to local table
in proc proc19 adding addrExp r28{0} - 24 to local table
in proc proc19 adding addrExp r28{0} - 28 to local table
in proc proc19 adding addrExp r28{0} - 28 to local table
in proc proc19 adding addrExp r28{0} - 32 to local table
in proc proc19 adding addrExp r28{0} - 36 to local table
in proc proc19 adding addrExp r28{0} - 28 to local table
in proc proc19 adding addrExp r28{0} - 32 to local table
in proc proc19 adding addrExp r28{0} - 36 to local table
size 0x20 meet with size 0x8!
in proc proc19 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc19 adding addrExp r28{0} - 8 to local table
in proc proc19 adding addrExp r28{0} - 12 to local table
in proc proc19 adding addrExp r28{0} - 16 to local table
in proc proc19 adding addrExp r28{0} - 20 to local table
in proc proc19 adding addrExp r28{0} - 24 to local table
in proc proc19 adding addrExp r28{0} - 28 to local table
in proc proc19 adding addrExp r28{0} - 32 to local table
in proc proc19 adding addrExp r28{0} - 36 to local table
in proc proc19 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc19 adding addrExp r28{0} - 8 to local table
in proc proc19 adding addrExp r28{0} - 12 to local table
in proc proc19 adding addrExp r28{0} - 16 to local table
in proc proc19 adding addrExp r28{0} - 20 to local table
in proc proc19 adding addrExp r28{0} - 24 to local table
in proc proc19 adding addrExp r28{0} - 28 to local table
in proc proc19 adding addrExp r28{0} - 32 to local table
in proc proc19 adding addrExp r28{0} - 36 to local table
in proc proc19 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc19 adding addrExp r28{0} - 8 to local table
in proc proc19 adding addrExp r28{0} - 12 to local table
in proc proc19 adding addrExp r28{0} - 16 to local table
in proc proc19 adding addrExp r28{0} - 20 to local table
in proc proc19 adding addrExp r28{0} - 24 to local table
in proc proc19 adding addrExp r28{0} - 28 to local table
in proc proc19 adding addrExp r28{0} - 32 to local table
in proc proc19 adding addrExp r28{0} - 36 to local table
finding final parameters for proc19
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r27
found new parameter r27
potential param r8
found new parameter r8
potential param r30
found new parameter r30
potential param r31
found new parameter r31
assgn    8 *32* %pc := m[0x404040]
is readonly
assgn   17 *32* %pc := m[0x404040]
is readonly
assgn   26 *32* %pc := m[0x404040]
is readonly
assgn   35 *32* %pc := m[0x404040]
is readonly
assgn   44 *32* %pc := m[0x404040]
is readonly
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
in proc proc18 adding addrExp r28{0} - 16 to local table
in proc proc18 adding addrExp r28{0} - 20 to local table
in proc proc18 adding addrExp r28{0} - 24 to local table
in proc proc18 adding addrExp r28{0} - 28 to local table
in proc proc18 adding addrExp r28{0} - 4 to local table
in proc proc18 adding addrExp r28{0} - 8 to local table
in proc proc18 adding addrExp r28{0} - 12 to local table
in proc proc18 adding addrExp r28{0} - 12 to local table
in proc proc18 adding addrExp r28{0} - 16 to local table
in proc proc18 adding addrExp r28{0} - 16 to local table
in proc proc18 adding addrExp r28{0} - 20 to local table
in proc proc18 adding addrExp r28{0} - 20 to local table
in proc proc18 adding addrExp r28{0} - 24 to local table
in proc proc18 adding addrExp r28{0} - 24 to local table
in proc proc18 adding addrExp r28{0} - 28 to local table
in proc proc18 adding addrExp r28{0} - 12 to local table
in proc proc18 adding addrExp r28{0} - 16 to local table
in proc proc18 adding addrExp r28{0} - 20 to local table
in proc proc18 adding addrExp r28{0} - 24 to local table
in proc proc18 adding addrExp r28{0} - 28 to local table
in proc proc18 adding addrExp r28{0} - 12 to local table
in proc proc18 adding addrExp r28{0} - 16 to local table
in proc proc18 adding addrExp r28{0} - 20 to local table
in proc proc18 adding addrExp r28{0} - 24 to local table
in proc proc18 adding addrExp r28{0} - 28 to local table
finding final parameters for proc18
potential param r28
found new parameter r28
assgn   51 *32* r25 := m[0x406108]
assgn   56 *32* %pc := m[0x40406c]
is readonly
assgn   61 *32* r26 := m[0x406108]
assgn   66 *32* %pc := m[0x40406c]
is readonly
assgn   71 *32* r24 := m[0x406110]
assgn   76 *32* %pc := m[0x40406c]
is readonly
assgn   81 *32* r25 := m[0x406110]
assgn   86 *32* %pc := m[0x40406c]
is readonly
assgn   91 *32* r26 := m[0x406110]
assgn   96 *32* %pc := m[0x40406c]
is readonly
assgn  101 *32* r24 := m[0x406110]
assgn  106 *32* %pc := m[0x40406c]
is readonly
assgn  111 *32* r25 := m[0x406110]
assgn  116 *32* %pc := m[0x40406c]
is readonly
assgn  124 *32* %pc := m[0x404068]
is readonly
assgn  136 *32* %pc := m[0x404024]
is readonly
assgn  146 *32* %pc := m[0x404024]
is readonly
after removing matching assigns (%pc).
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc23 ###
in proc proc23 adding addrExp r28{0} - 804 to local table
in proc proc23 adding addrExp r28{0} - 8 to local table
in proc proc23 adding addrExp r28{0} - 12 to local table
in proc proc23 adding addrExp r28{0} - 732 to local table
in proc proc23 adding addrExp r28{0} - 808 to local table
in proc proc23 adding addrExp r28{0} - 812 to local table
in proc proc23 adding addrExp r28{0} - 816 to local table
in proc proc23 adding addrExp r28{0} - 848 to local table
in proc proc23 adding addrExp r28{0} - 852 to local table
in proc proc23 adding addrExp r28{0} - 872 to local table
in proc proc23 adding addrExp r28{0} - 876 to local table
in proc proc23 adding addrExp r28{0} - 880 to local table
in proc proc23 adding addrExp r28{0} - 884 to local table
in proc proc23 adding addrExp r28{0} - 888 to local table
in proc proc23 adding addrExp r28{0} - 892 to local table
in proc proc23 adding addrExp r28{0} - 896 to local table
in proc proc23 adding addrExp r28{0} - 900 to local table
in proc proc23 adding addrExp r28{0} - 4 to local table
in proc proc23 adding addrExp r28{0} - 856 to local table
in proc proc23 adding addrExp r28{0} - 860 to local table
in proc proc23 adding addrExp r28{0} - 864 to local table
in proc proc23 adding addrExp r28{0} - 868 to local table
in proc proc23 adding addrExp r28{0} - 804 to local table
in proc proc23 adding addrExp r28{0} - 728 to local table
in proc proc23 adding addrExp r28{0} - 828 to local table
in proc proc23 adding addrExp r28{0} - 848 to local table
in proc proc23 adding addrExp r28{0} - 856 to local table
in proc proc23 adding addrExp r28{0} - 860 to local table
in proc proc23 adding addrExp r28{0} - 864 to local table
in proc proc23 adding addrExp r28{0} - 852 to local table
in proc proc23 adding addrExp r28{0} - 856 to local table
in proc proc23 adding addrExp r28{0} - 860 to local table
in proc proc23 adding addrExp r28{0} - 864 to local table
in proc proc23 adding addrExp r28{0} - 816 to local table
in proc proc23 adding addrExp r28{0} - 856 to local table
in proc proc23 adding addrExp r28{0} - 860 to local table
in proc proc23 adding addrExp r28{0} - 864 to local table
in proc proc23 adding addrExp r28{0} - 8 to local table
in proc proc23 adding addrExp r28{0} - 856 to local table
in proc proc23 adding addrExp r28{0} - 860 to local table
in proc proc23 adding addrExp r28{0} - 864 to local table
in proc proc23 adding addrExp r28{0} - 812 to local table
in proc proc23 adding addrExp r28{0} - 856 to local table
in proc proc23 adding addrExp r28{0} - 860 to local table
in proc proc23 adding addrExp r28{0} - 864 to local table
in proc proc23 adding addrExp r28{0} - 732 to local table
in proc proc23 adding addrExp r28{0} - 856 to local table
in proc proc23 adding addrExp r28{0} - 860 to local table
in proc proc23 adding addrExp r28{0} - 864 to local table
in proc proc23 adding addrExp r28{0} - 12 to local table
in proc proc23 adding addrExp r28{0} - 856 to local table
in proc proc23 adding addrExp r28{0} - 860 to local table
in proc proc23 adding addrExp r28{0} - 864 to local table
in proc proc23 adding addrExp r28{0} - 808 to local table
in proc proc23 adding addrExp r28{0} - 856 to local table
in proc proc23 adding addrExp r28{0} - 860 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffca4 existing type HANDLE but added type unsigned int
in proc proc23 adding addrExp r28{0} - 860 to local table
in proc proc23 adding addrExp r28{0} - 864 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffca0 existing type unsigned int but added type LPSTR
in proc proc23 adding addrExp r28{0} - 868 to local table
in proc proc23 adding addrExp r28{0} - 860 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffca4 existing type HANDLE but added type unsigned int
in proc proc23 adding addrExp r28{0} - 864 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffca0 existing type unsigned int but added type LPSTR
in proc proc23 adding addrExp r28{0} - 868 to local table
in proc proc23 adding addrExp r28{0} - 860 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffca4 existing type HANDLE but added type unsigned int
in proc proc23 adding addrExp r28{0} - 864 to local table
in proc proc23 adding addrExp r28{0} - 868 to local table
in proc proc23 adding addrExp r28{0} - 860 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffca4 existing type HANDLE but added type /*signed?*/int
in proc proc23 adding addrExp r28{0} - 864 to local table
in proc proc23 adding addrExp r28{0} - 868 to local table
in proc proc23 adding addrExp r28{0} - 872 to local table
in proc proc23 adding addrExp r28{0} - 876 to local table
in proc proc23 adding addrExp r28{0} - 880 to local table
in proc proc23 adding addrExp r28{0} - 884 to local table
in proc proc23 adding addrExp r28{0} - 888 to local table
in proc proc23 adding addrExp r28{0} - 892 to local table
in proc proc23 adding addrExp r28{0} - 896 to local table
in proc proc23 adding addrExp r28{0} - 900 to local table
in proc proc23 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc23 adding addrExp r28{0} - 8 to local table
TYPE ERROR: Existing type at address 0xfffffff8 is not structure or array type
in proc proc23 adding addrExp r28{0} - 12 to local table
TYPE ERROR: Existing type at address 0xfffffff4 is not structure or array type
in proc proc23 adding addrExp r28{0} - 728 to local table
in proc proc23 adding addrExp r28{0} - 732 to local table
TYPE ERROR: Existing type at address 0xfffffd24 is not structure or array type
in proc proc23 adding addrExp r28{0} - 804 to local table
in proc proc23 adding addrExp r28{0} - 808 to local table
TYPE ERROR: Existing type at address 0xfffffcd8 is not structure or array type
in proc proc23 adding addrExp r28{0} - 812 to local table
TYPE ERROR: Existing type at address 0xfffffcd4 is not structure or array type
in proc proc23 adding addrExp r28{0} - 816 to local table
TYPE ERROR: Existing type at address 0xfffffcd0 is not structure or array type
in proc proc23 adding addrExp r28{0} - 828 to local table
in proc proc23 adding addrExp r28{0} - 848 to local table
in proc proc23 adding addrExp r28{0} - 852 to local table
TYPE ERROR: Existing type at address 0xfffffcac is not structure or array type
in proc proc23 adding addrExp r28{0} - 856 to local table
in proc proc23 adding addrExp r28{0} - 860 to local table
in proc proc23 adding addrExp r28{0} - 864 to local table
in proc proc23 adding addrExp r28{0} - 868 to local table
in proc proc23 adding addrExp r28{0} - 872 to local table
TYPE ERROR: Existing type at address 0xfffffc98 is not structure or array type
in proc proc23 adding addrExp r28{0} - 876 to local table
TYPE ERROR: Existing type at address 0xfffffc94 is not structure or array type
in proc proc23 adding addrExp r28{0} - 880 to local table
TYPE ERROR: Existing type at address 0xfffffc90 is not structure or array type
in proc proc23 adding addrExp r28{0} - 884 to local table
TYPE ERROR: Existing type at address 0xfffffc8c is not structure or array type
in proc proc23 adding addrExp r28{0} - 888 to local table
TYPE ERROR: Existing type at address 0xfffffc88 is not structure or array type
in proc proc23 adding addrExp r28{0} - 892 to local table
TYPE ERROR: Existing type at address 0xfffffc84 is not structure or array type
in proc proc23 adding addrExp r28{0} - 896 to local table
TYPE ERROR: Existing type at address 0xfffffc80 is not structure or array type
in proc proc23 adding addrExp r28{0} - 900 to local table
TYPE ERROR: Existing type at address 0xfffffc7c is not structure or array type
in proc proc23 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc23 adding addrExp r28{0} - 8 to local table
TYPE ERROR: Existing type at address 0xfffffff8 is not structure or array type
in proc proc23 adding addrExp r28{0} - 12 to local table
TYPE ERROR: Existing type at address 0xfffffff4 is not structure or array type
in proc proc23 adding addrExp r28{0} - 728 to local table
in proc proc23 adding addrExp r28{0} - 732 to local table
TYPE ERROR: Existing type at address 0xfffffd24 is not structure or array type
in proc proc23 adding addrExp r28{0} - 804 to local table
in proc proc23 adding addrExp r28{0} - 808 to local table
TYPE ERROR: Existing type at address 0xfffffcd8 is not structure or array type
in proc proc23 adding addrExp r28{0} - 812 to local table
TYPE ERROR: Existing type at address 0xfffffcd4 is not structure or array type
in proc proc23 adding addrExp r28{0} - 816 to local table
TYPE ERROR: Existing type at address 0xfffffcd0 is not structure or array type
in proc proc23 adding addrExp r28{0} - 828 to local table
in proc proc23 adding addrExp r28{0} - 848 to local table
in proc proc23 adding addrExp r28{0} - 852 to local table
TYPE ERROR: Existing type at address 0xfffffcac is not structure or array type
in proc proc23 adding addrExp r28{0} - 856 to local table
in proc proc23 adding addrExp r28{0} - 860 to local table
in proc proc23 adding addrExp r28{0} - 864 to local table
in proc proc23 adding addrExp r28{0} - 868 to local table
in proc proc23 adding addrExp r28{0} - 872 to local table
TYPE ERROR: Existing type at address 0xfffffc98 is not structure or array type
in proc proc23 adding addrExp r28{0} - 876 to local table
TYPE ERROR: Existing type at address 0xfffffc94 is not structure or array type
in proc proc23 adding addrExp r28{0} - 880 to local table
TYPE ERROR: Existing type at address 0xfffffc90 is not structure or array type
in proc proc23 adding addrExp r28{0} - 884 to local table
TYPE ERROR: Existing type at address 0xfffffc8c is not structure or array type
in proc proc23 adding addrExp r28{0} - 888 to local table
TYPE ERROR: Existing type at address 0xfffffc88 is not structure or array type
in proc proc23 adding addrExp r28{0} - 892 to local table
TYPE ERROR: Existing type at address 0xfffffc84 is not structure or array type
in proc proc23 adding addrExp r28{0} - 896 to local table
TYPE ERROR: Existing type at address 0xfffffc80 is not structure or array type
in proc proc23 adding addrExp r28{0} - 900 to local table
TYPE ERROR: Existing type at address 0xfffffc7c is not structure or array type
finding final parameters for proc23
potential param r28
found new parameter r28
potential param m[r28{0} - 804]
found new parameter m[r28{0} - 804]
potential param r0
found new parameter r0
potential param r3
found new parameter r3
potential param r11
found new parameter r11
potential param r15
found new parameter r15
potential param r26
found new parameter r26
potential param r27
found new parameter r27
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r2
found new parameter r2
assgn   61 *32* %pc := m[0x40403c]
is readonly
assgn   68 *32* %pc := m[0x40403c]
is readonly
assgn   75 *32* %pc := m[0x40403c]
is readonly
assgn   82 *32* %pc := m[0x40403c]
is readonly
assgn   89 *32* %pc := m[0x40403c]
is readonly
assgn   96 *32* %pc := m[0x40403c]
is readonly
assgn  101 *32* r24 := m[0x40610c]
assgn  106 *32* %pc := m[0x40406c]
is readonly
assgn  111 *32* r25 := m[0x40610c]
assgn  116 *32* %pc := m[0x40406c]
is readonly
assgn  121 *32* r26 := m[0x40610c]
assgn  126 *32* %pc := m[0x40406c]
is readonly
assgn  131 *32* r24 := m[0x40610c]
assgn  136 *32* %pc := m[0x40406c]
is readonly
assgn  141 *32* r25 := m[0x40610c]
assgn  146 *32* %pc := m[0x40406c]
is readonly
assgn  151 *32* r26 := m[0x40611c]
assgn  156 *32* %pc := m[0x40406c]
is readonly
assgn  172 *32* r24 := m[0]
assgn  190 *32* r26 := m[0x4060fc]
assgn  197 *32* %pc := m[0x404034]
is readonly
assgn  210 *32* r24 := m[0x4060f4]
assgn  220 *32* tmp1 := m[0x4060f4]
assgn  234 *32* r25 := m[0x4060f4]
assgn  270 *32* r24 := m[0x4060f8]
assgn  814 *32* %pc := m[0x404030]
is readonly
assgn  933 *32* %pc := m[0x404030]
is readonly
assgn 1038 *32* %pc := m[0x40402c]
is readonly
assgn 1042 *32* %pc := m[0x404028]
is readonly
assgn 1056 *32* %pc := m[0x404030]
is readonly
assgn 1084 *32* %pc := m[0x404030]
is readonly
assgn 1099 *32* r26 := m[0x4060fc]
assgn 1111 *32* r24 := m[0x4060fc]
assgn 1133 *32* tmp1 := m[0x406104]
assgn 1136 *32* tmp1 := m[0x405438]
assgn 1145 *32* %pc := m[0x404030]
is readonly
assgn 1150 *32* r26 := m[0x4060fc]
assgn 1170 *32* %pc := m[0x404030]
is readonly
assgn 1175 *32* r25 := m[0x4060f4]
assgn 1217 *32* %pc := m[0x404024]
is readonly
assgn 1226 *32* %pc := m[0x404024]
is readonly
assgn 1229 *32* r24 := m[0x4060fc]
assgn 1249 *32* %pc := m[0x404030]
is readonly
assgn 1268 *32* %pc := m[0x404020]
is readonly
assgn 1353 *32* %pc := m[0x404024]
is readonly
assgn 1373 *32* %pc := m[0x404030]
is readonly
assgn 1393 *32* %pc := m[0x404030]
is readonly
assgn 1398 *32* tmp1 := m[0x406100]
assgn 1422 *32* r24 := m[0x4060f8]
assgn 1466 *32* %pc := m[0x404030]
is readonly
assgn 1499 *32* %pc := m[0x404024]
is readonly
assgn 1509 *32* %pc := m[0x404024]
is readonly
assgn 1518 *32* %pc := m[0x404024]
is readonly
assgn 1527 *32* %pc := m[0x404024]
is readonly
assgn 1536 *32* %pc := m[0x404024]
is readonly
assgn 1554 *32* %pc := m[0x404024]
is readonly
assgn 1573 *32* %pc := m[0x40401c]
is readonly
assgn 1596 *32* %pc := m[0x404018]
is readonly
assgn 1603 *32* %pc := m[0x404014]
is readonly
assgn 1620 *32* %pc := m[0x406134]
assgn 1670 *32* %pc := m[0x404010]
is readonly
after removing matching assigns (%pc).
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc2 ###
in proc proc2 adding addrExp r28{0} - 4 to local table
in proc proc2 adding addrExp r28{0} - 104 to local table
in proc proc2 adding addrExp r28{0} - 108 to local table
in proc proc2 adding addrExp r28{0} - 112 to local table
in proc proc2 adding addrExp r28{0} - 116 to local table
in proc proc2 adding addrExp r28{0} - 116 to local table
in proc proc2 adding addrExp r28{0} - 120 to local table
in proc proc2 adding addrExp r28{0} - 72 to local table
in proc proc2 adding addrExp r28{0} - 116 to local table
in proc proc2 adding addrExp r28{0} - 120 to local table
in proc proc2 adding addrExp r28{0} - 76 to local table
integer size 0x40 meet with SizeType size 0x20!
in proc proc2 adding addrExp r28{0} - 116 to local table
in proc proc2 adding addrExp r28{0} - 120 to local table
in proc proc2 adding addrExp r28{0} - 80 to local table
in proc proc2 adding addrExp r28{0} - 116 to local table
in proc proc2 adding addrExp r28{0} - 116 to local table
in proc proc2 adding addrExp r28{0} - 120 to local table
in proc proc2 adding addrExp r28{0} - 116 to local table
in proc proc2 adding addrExp r28{0} - 120 to local table
in proc proc2 adding addrExp r28{0} - 116 to local table
in proc proc2 adding addrExp r28{0} - 120 to local table
in proc proc2 adding addrExp r28{0} - 116 to local table
in proc proc2 adding addrExp r28{0} - 120 to local table
in proc proc2 adding addrExp r28{0} - 116 to local table
in proc proc2 adding addrExp r28{0} - 120 to local table
in proc proc2 adding addrExp r28{0} - 116 to local table
in proc proc2 adding addrExp r28{0} - 120 to local table
in proc proc2 adding addrExp r28{0} - 116 to local table
in proc proc2 adding addrExp r28{0} - 120 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffff88 existing type unsigned int but added type HANDLE
in proc proc2 adding addrExp r28{0} - 124 to local table
in proc proc2 adding addrExp r28{0} - 116 to local table
in proc proc2 adding addrExp r28{0} - 120 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffff88 existing type unsigned int but added type HANDLE
in proc proc2 adding addrExp r28{0} - 124 to local table
in proc proc2 adding addrExp r28{0} - 116 to local table
in proc proc2 adding addrExp r28{0} - 120 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffff88 existing type unsigned int but added type HANDLE
in proc proc2 adding addrExp r28{0} - 124 to local table
in proc proc2 adding addrExp r28{0} - 116 to local table
in proc proc2 adding addrExp r28{0} - 120 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffff88 existing type unsigned int but added type HANDLE
in proc proc2 adding addrExp r28{0} - 124 to local table
in proc proc2 adding addrExp r28{0} - 116 to local table
in proc proc2 adding addrExp r28{0} - 120 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffff88 existing type unsigned int but added type HANDLE
in proc proc2 adding addrExp r28{0} - 124 to local table
in proc proc2 adding addrExp r28{0} - 116 to local table
in proc proc2 adding addrExp r28{0} - 120 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffff88 existing type unsigned int but added type HANDLE
in proc proc2 adding addrExp r28{0} - 124 to local table
in proc proc2 adding addrExp r28{0} - 116 to local table
in proc proc2 adding addrExp r28{0} - 116 to local table
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28{0} - 72 to local table
in proc proc2 adding addrExp r28{0} - 76 to local table
in proc proc2 adding addrExp r28{0} - 80 to local table
in proc proc2 adding addrExp r28{0} - 104 to local table
in proc proc2 adding addrExp r28{0} - 108 to local table
in proc proc2 adding addrExp r28{0} - 112 to local table
in proc proc2 adding addrExp r28{0} - 116 to local table
in proc proc2 adding addrExp r28{0} - 120 to local table
TYPE ERROR: Existing type at address 0xffffff88 is not structure or array type
in proc proc2 adding addrExp r28{0} - 124 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 to local table
integer size 0x40 meet with SizeType size 0x20!
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
integer size 0x40 meet with SizeType size 0x20!
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
integer size 0x40 meet with SizeType size 0x20!
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
integer size 0x40 meet with SizeType size 0x20!
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
integer size 0x40 meet with SizeType size 0x20!
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28{0} - 72 to local table
in proc proc2 adding addrExp r28{0} - 76 to local table
in proc proc2 adding addrExp r28{0} - 80 to local table
in proc proc2 adding addrExp r28{0} - 104 to local table
in proc proc2 adding addrExp r28{0} - 108 to local table
in proc proc2 adding addrExp r28{0} - 112 to local table
in proc proc2 adding addrExp r28{0} - 116 to local table
in proc proc2 adding addrExp r28{0} - 120 to local table
TYPE ERROR: Existing type at address 0xffffff88 is not structure or array type
in proc proc2 adding addrExp r28{0} - 124 to local table
finding final parameters for proc2
potential param r27
found new parameter r27
potential param r24
found new parameter r24
potential param r25
found new parameter r25
potential param r26
found new parameter r26
potential param r0
found new parameter r0
potential param r3
found new parameter r3
potential param r10
found new parameter r10
potential param r15
found new parameter r15
assgn    2 *32* tmp1 := m[0x40654c]
assgn    5 *32* r24 := m[0x40654c]
assgn   10 *32* tmp1 := m[0x40654c]
after removing matching assigns (%pc).
finding final parameters for proc4
potential param r24
found new parameter r24
potential param r28
found new parameter r28
assgn   32 *32* %pc := m[0x404038]
is readonly
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
in proc proc3 adding addrExp r28{0} - 4 to local table
finding final parameters for proc3
potential param r24
found new parameter r24
potential param r30
found new parameter r30
assgn    7 *32* r24 := m[0x4065e4]
assgn   42 *32* %pc := m[0x404038]
is readonly
assgn   62 *32* %pc := m[0x404060]
is readonly
assgn  120 *32* %pc := m[0x40405c]
is readonly
assgn  153 *32* %pc := m[0x404040]
is readonly
after removing matching assigns (%pc).
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 4 to local table
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28{0} - 76 to local table
TYPE ERROR: Existing type at address 0xffffffb4 is not structure or array type
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28{0} - 76 to local table
TYPE ERROR: Existing type at address 0xffffffb4 is not structure or array type
finding final parameters for _start
potential param r28
found new parameter r28
potential param r30
found new parameter r30
potential param r0
found new parameter r0
potential param r3
found new parameter r3
potential param r10
found new parameter r10
potential param r15
found new parameter r15
potential param r27
found new parameter r27
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc1 ###
in proc proc1 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc1 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc1 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc2 ###
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc4 ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc5 ###
in proc proc5 adding addrExp r28{0} - 8 to local table
in proc proc5 adding addrExp r28{0} - 8 to local table
in proc proc5 adding addrExp r28{0} - 8 to local table
in proc proc6 adding addrExp r28{0} - 12 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc9 ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc10 ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc11 ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc13 ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc14 ###
in proc proc14 adding addrExp r28{0} - 0x414 to local table
in proc proc14 adding addrExp r28{0} - 8 to local table
in proc proc14 adding addrExp r28{0} - 8 to local table
in proc proc14 adding addrExp r28{0} - 8 to local table
in proc proc14 adding addrExp r28{0} - 8 to local table
in proc proc14 adding addrExp r28{0} - 8 to local table
in proc proc14 adding addrExp r28{0} - 8 to local table
in proc proc14 adding addrExp r28{0} - 0x414 to local table
in proc proc14 adding addrExp r28{0} - 0x414 to local table
in proc proc14 adding addrExp r28{0} - 0x410 to local table
in proc proc14 adding addrExp r28{0} - 0x410 to local table
in proc proc14 adding addrExp r28{0} - 8 to local table
in proc proc14 adding addrExp r28{0} - 0x410 to local table
in proc proc14 adding addrExp r28{0} - 0x414 to local table
in proc proc14 adding addrExp r28{0} - 8 to local table
in proc proc14 adding addrExp r28{0} - 0x414 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc15 ###
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc19 ###
size 0x20 meet with size 0x8!
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc20 ###
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 16 to local table
TYPE ERROR: at address 0xfffffff0, overlapping type long long does not resolve to compound or array
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 16 to local table
TYPE ERROR: at address 0xfffffff0, overlapping type long long does not resolve to compound or array
in proc proc20 adding addrExp r28{0} - 24 to local table
in proc proc20 adding addrExp r28{0} - 24 to local table
in proc proc20 adding addrExp r28{0} - 24 to local table
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 16 to local table
TYPE ERROR: at address 0xfffffff0, overlapping type long long does not resolve to compound or array
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 20 to local table
TYPE ERROR: Existing type at address 0xffffffe8 is not structure or array type
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 20 to local table
TYPE ERROR: Existing type at address 0xffffffe8 is not structure or array type
in proc proc20 adding addrExp r28{0} - 20 to local table
TYPE ERROR: Existing type at address 0xffffffe8 is not structure or array type
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc22 adding addrExp r28{0} - 12 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc23 ###
in proc proc23 adding addrExp r28{0} - 804 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc24 ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc25 ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc26 ###
in proc proc26 adding addrExp r28{0} - 88 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc27 ###
size 0x20 meet with size 0x8!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc29 ###
in proc proc29 adding addrExp r28{0} - 8 to local table
TYPE ERROR: Existing type at address 0xfffffff8 is not structure or array type
in proc proc29 adding addrExp r28{0} - 8 to local table
TYPE ERROR: Existing type at address 0xfffffff8 is not structure or array type
in proc proc29 adding addrExp r28{0} - 8 to local table
TYPE ERROR: Existing type at address 0xfffffff8 is not structure or array type
in proc proc30 adding addrExp r28{0} - 28 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc31 ###
in proc proc31 adding addrExp r28{0} - 12 to local table
in proc proc31 adding addrExp r28{0} - 12 to local table
in proc proc31 adding addrExp r28{0} - 12 to local table
in proc proc31 adding addrExp r28{0} - 12 to local table
in proc proc31 adding addrExp r28{0} - 12 to local table
in proc proc31 adding addrExp r28{0} - 12 to local table
finding final parameters for proc4
potential param r28
found new parameter r28
finding final parameters for proc3
potential param r30
found new parameter r30
finding final parameters for proc5
potential param r28
found new parameter r28
potential param r24
found new parameter r24
finding final parameters for proc2
potential param r27
found new parameter r27
potential param r24
found new parameter r24
potential param r0
found new parameter r0
potential param r3
found new parameter r3
potential param r10
found new parameter r10
potential param r15
found new parameter r15
finding final parameters for proc7
potential param r24
found new parameter r24
potential param r26
found new parameter r26
finding final parameters for proc2
potential param r27
found new parameter r27
potential param r24
found new parameter r24
potential param r0
found new parameter r0
potential param r3
found new parameter r3
potential param r10
found new parameter r10
potential param r15
found new parameter r15
finding final parameters for proc8
finding final parameters for proc2
potential param r27
found new parameter r27
potential param r24
found new parameter r24
potential param r0
found new parameter r0
potential param r3
found new parameter r3
potential param r10
found new parameter r10
potential param r15
found new parameter r15
finding final parameters for proc9
potential param r28
found new parameter r28
potential param global75
potential param global76
potential param global77
finding final parameters for proc2
potential param r27
found new parameter r27
potential param r24
found new parameter r24
potential param r0
found new parameter r0
potential param r3
found new parameter r3
potential param r10
found new parameter r10
potential param r15
found new parameter r15
finding final parameters for proc10
potential param r28
found new parameter r28
finding final parameters for proc2
potential param r27
found new parameter r27
potential param r24
found new parameter r24
potential param r0
found new parameter r0
potential param r3
found new parameter r3
potential param r10
found new parameter r10
potential param r15
found new parameter r15
finding final parameters for proc11
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param global75
potential param global76
potential param global77
potential param r27
found new parameter r27
finding final parameters for proc2
potential param r27
found new parameter r27
potential param r24
found new parameter r24
potential param r0
found new parameter r0
potential param r3
found new parameter r3
potential param r10
found new parameter r10
potential param r15
found new parameter r15
finding final parameters for proc12
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
finding final parameters for proc2
potential param r27
found new parameter r27
potential param r24
found new parameter r24
potential param r0
found new parameter r0
potential param r3
found new parameter r3
potential param r10
found new parameter r10
potential param r15
found new parameter r15
finding final parameters for proc19
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r27
found new parameter r27
potential param r8
found new parameter r8
potential param r30
found new parameter r30
potential param r31
found new parameter r31
finding final parameters for proc26
potential param r28
found new parameter r28
potential param r9
found new parameter r9
potential param r11
found new parameter r11
potential param r27
found new parameter r27
potential param m[r28{0} - 88]
found new parameter m[r28{0} - 88]
potential param r10
found new parameter r10
finding final parameters for proc27
potential param global158
potential param r8
found new parameter r8
potential param global159
potential param global77
finding final parameters for proc13
potential param r28
found new parameter r28
potential param r0
found new parameter r0
potential param r3
found new parameter r3
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r15
found new parameter r15
potential param r27
found new parameter r27
finding final parameters for proc2
potential param r27
found new parameter r27
potential param r24
found new parameter r24
potential param r0
found new parameter r0
potential param r3
found new parameter r3
potential param r10
found new parameter r10
potential param r15
found new parameter r15
finding final parameters for proc14
potential param r28
found new parameter r28
potential param r10
found new parameter r10
potential param r9
found new parameter r9
potential param m[r28{0} + 16]
found new parameter m[r28{0} + 16]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for proc2
potential param r27
found new parameter r27
potential param r24
found new parameter r24
potential param r0
found new parameter r0
potential param r3
found new parameter r3
potential param r10
found new parameter r10
potential param r15
found new parameter r15
finding final parameters for proc18
finding final parameters for proc2
potential param r27
found new parameter r27
potential param r24
found new parameter r24
potential param r0
found new parameter r0
potential param r3
found new parameter r3
potential param r10
found new parameter r10
potential param r15
found new parameter r15
finding final parameters for proc19
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r27
found new parameter r27
finding final parameters for proc2
potential param r27
found new parameter r27
potential param r24
found new parameter r24
potential param r0
found new parameter r0
potential param r3
found new parameter r3
potential param r10
found new parameter r10
potential param r15
found new parameter r15
finding final parameters for proc20
potential param r28
found new parameter r28
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r10
found new parameter r10
potential param r25
found new parameter r25
finding final parameters for proc2
potential param r27
found new parameter r27
potential param r24
found new parameter r24
potential param r0
found new parameter r0
potential param r3
found new parameter r3
potential param r10
found new parameter r10
potential param r15
found new parameter r15
finding final parameters for proc13
potential param r28
found new parameter r28
potential param r0
found new parameter r0
potential param r3
found new parameter r3
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r15
found new parameter r15
potential param r27
found new parameter r27
finding final parameters for proc21
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for proc2
potential param r27
found new parameter r27
potential param r24
found new parameter r24
potential param r0
found new parameter r0
potential param r3
found new parameter r3
potential param r10
found new parameter r10
potential param r15
found new parameter r15
finding final parameters for proc19
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r27
found new parameter r27
finding final parameters for proc22
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for proc2
potential param r27
found new parameter r27
potential param r24
found new parameter r24
potential param r0
found new parameter r0
potential param r3
found new parameter r3
potential param r10
found new parameter r10
potential param r15
found new parameter r15
finding final parameters for proc5
potential param r28
found new parameter r28
finding final parameters for proc13
potential param r28
found new parameter r28
potential param r0
found new parameter r0
potential param r3
found new parameter r3
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r15
found new parameter r15
potential param r27
found new parameter r27
finding final parameters for proc2
potential param r27
found new parameter r27
potential param r0
found new parameter r0
potential param r3
found new parameter r3
potential param r10
found new parameter r10
potential param r15
found new parameter r15
finding final parameters for _start
potential param r28
found new parameter r28
potential param r30
found new parameter r30
potential param r0
found new parameter r0
potential param r3
found new parameter r3
potential param r10
found new parameter r10
potential param r15
found new parameter r15
potential param r27
found new parameter r27
finding final parameters for proc23
potential param r28
found new parameter r28
potential param m[r28{0} - 804]
found new parameter m[r28{0} - 804]
potential param r0
found new parameter r0
potential param r3
found new parameter r3
potential param r11
found new parameter r11
potential param r15
found new parameter r15
potential param r26
found new parameter r26
potential param r27
found new parameter r27
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r2
found new parameter r2
finding final parameters for proc2
potential param r27
found new parameter r27
potential param r0
found new parameter r0
potential param r3
found new parameter r3
potential param r10
found new parameter r10
potential param r15
found new parameter r15
finding final parameters for proc24
potential param r28
found new parameter r28
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param r27
found new parameter r27
potential param r3
found new parameter r3
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r0
found new parameter r0
potential param r11
found new parameter r11
potential param r15
found new parameter r15
finding final parameters for proc13
potential param r28
found new parameter r28
potential param r0
found new parameter r0
potential param r3
found new parameter r3
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r15
found new parameter r15
potential param r27
found new parameter r27
finding final parameters for proc23
potential param r28
found new parameter r28
potential param m[r28{0} - 804]
found new parameter m[r28{0} - 804]
potential param r0
found new parameter r0
potential param r3
found new parameter r3
potential param r11
found new parameter r11
potential param r15
found new parameter r15
potential param r27
found new parameter r27
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r2
found new parameter r2
finding final parameters for proc25
potential param r28
found new parameter r28
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param r10
found new parameter r10
finding final parameters for proc13
potential param r28
found new parameter r28
potential param r0
found new parameter r0
potential param r3
found new parameter r3
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r15
found new parameter r15
potential param r27
found new parameter r27
finding final parameters for proc26
potential param r28
found new parameter r28
potential param r9
found new parameter r9
potential param r11
found new parameter r11
potential param r27
found new parameter r27
potential param m[r28{0} - 88]
found new parameter m[r28{0} - 88]
potential param r10
found new parameter r10
finding final parameters for proc19
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r27
found new parameter r27
finding final parameters for proc15
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param r27
found new parameter r27
potential param r9
found new parameter r9
potential param r25
found new parameter r25
potential param r11
found new parameter r11
finding final parameters for proc2
potential param r27
found new parameter r27
potential param r0
found new parameter r0
potential param r3
found new parameter r3
potential param r10
found new parameter r10
potential param r15
found new parameter r15
finding final parameters for proc11
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param global75
potential param global76
potential param global77
potential param r27
found new parameter r27
finding final parameters for proc26
potential param r28
found new parameter r28
potential param r9
found new parameter r9
potential param r11
found new parameter r11
potential param r27
found new parameter r27
potential param m[r28{0} - 88]
found new parameter m[r28{0} - 88]
potential param r10
found new parameter r10
finding final parameters for proc27
potential param global158
potential param r8
found new parameter r8
potential param global159
potential param global77
finding final parameters for proc19
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r27
found new parameter r27
finding final parameters for proc29
potential param r28
found new parameter r28
potential param r24
found new parameter r24
potential param r26
found new parameter r26
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for proc7
potential param r24
found new parameter r24
potential param r26
found new parameter r26
finding final parameters for proc30
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} - 28]
found new parameter m[r28{0} - 28]
potential param r10
found new parameter r10
potential param r25
found new parameter r25
potential param r26
found new parameter r26
finding final parameters for proc26
potential param r28
found new parameter r28
potential param r9
found new parameter r9
potential param r11
found new parameter r11
potential param r27
found new parameter r27
potential param m[r28{0} - 88]
found new parameter m[r28{0} - 88]
potential param r10
found new parameter r10
finding final parameters for proc31
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r25
found new parameter r25
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param r10
found new parameter r10
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} - 12]
found new parameter m[r28{0} - 12]
finding final parameters for proc30
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} - 28]
found new parameter m[r28{0} - 28]
potential param r10
found new parameter r10
potential param r25
found new parameter r25
local ecx has type HANDLE that doesn't agree with type of define void of a library, why?
local edx has type unsigned char * that doesn't agree with type of define void of a library, why?
local esp has type __size32 that doesn't agree with type of define void of a library, why?
local eax has type __size32 that doesn't agree with type of define /*signed?*/int of a library, why?
local ecx has type void that doesn't agree with type of define /*signed?*/int of a library, why?
local edx has type void that doesn't agree with type of define __size32 of a library, why?
local edx has type __size32 that doesn't agree with type of define void * of a library, why?
local eax has type /*signed?*/int that doesn't agree with type of define __size32 of a library, why?
local ecx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local edx has type void * that doesn't agree with type of define void of a library, why?
local ecx has type void that doesn't agree with type of define /*signed?*/int of a library, why?
local edx has type void that doesn't agree with type of define __size32 of a library, why?
local esp has type void that doesn't agree with type of define void * of a library, why?
local ecx has type /*signed?*/int that doesn't agree with type of define __size32 of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local ecx has type __size32 that doesn't agree with type of define void of a library, why?
local edx has type __size32 that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local ecx has type __size32 that doesn't agree with type of define void of a library, why?
local edx has type __size32 that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local eax has type __size32 that doesn't agree with type of define /*signed?*/int of a library, why?
local eax has type /*signed?*/int that doesn't agree with type of define __size32 of a library, why?
local ecx has type void that doesn't agree with type of define __size32 of a library, why?
local edx has type void that doesn't agree with type of define __size32 of a library, why?
local eax has type DWORD that doesn't agree with type of define __size32 of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local esp has type unsigned int that doesn't agree with type of define void of a library, why?
local eax has type HANDLE that doesn't agree with type of define __size32 of a library, why?
local ecx has type void that doesn't agree with type of define __size32 of a library, why?
local edx has type void that doesn't agree with type of define __size32 of a library, why?
local eax has type HANDLE that doesn't agree with type of define __size32 of a library, why?
local ecx has type HANDLE that doesn't agree with type of define void of a library, why?
local edx has type HANDLE that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local ecx has type void that doesn't agree with type of define __size32 of a library, why?
local ecx has type HANDLE that doesn't agree with type of define void of a library, why?
local edx has type HANDLE that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local eax has type HANDLE that doesn't agree with type of define __size32 of a library, why?
local ecx has type void that doesn't agree with type of define __size32 of a library, why?
local edx has type void that doesn't agree with type of define __size32 of a library, why?
local ecx has type __size32 that doesn't agree with type of define void of a library, why?
local edx has type __size32 that doesn't agree with type of define void of a library, why?
local ecx has type void that doesn't agree with type of define __size32 of a library, why?
local edx has type void that doesn't agree with type of define __size32 of a library, why?
local ecx has type __size32 that doesn't agree with type of define void of a library, why?
local edx has type __size32 that doesn't agree with type of define void of a library, why?
local ecx has type void that doesn't agree with type of define __size32 of a library, why?
local edx has type void that doesn't agree with type of define __size32 of a library, why?
local esp has type void that doesn't agree with type of define void * of a library, why?
local ecx has type __size32 that doesn't agree with type of define void of a library, why?
local edx has type __size32 that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local ecx has type void that doesn't agree with type of define __size32 of a library, why?
local edx has type void that doesn't agree with type of define __size32 of a library, why?
local esp has type void that doesn't agree with type of define void * of a library, why?
local ecx has type __size32 that doesn't agree with type of define void of a library, why?
local edx has type __size32 that doesn't agree with type of define void of a library, why?
local esp has type __size32 that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local ecx has type HANDLE that doesn't agree with type of define void of a library, why?
local edx has type __size32 * that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local eax has type /*signed?*/int that doesn't agree with type of define __size32 of a library, why?
local eax has type __size32 that doesn't agree with type of define int of a library, why?
local ecx has type void that doesn't agree with type of define __size32 of a library, why?
local edx has type void that doesn't agree with type of define __size32 of a library, why?
local eax has type int that doesn't agree with type of define __size32 of a library, why?
local ecx has type __size32 that doesn't agree with type of define void of a library, why?
local edx has type __size32 that doesn't agree with type of define void of a library, why?
local eax has type __size32 that doesn't agree with type of define int of a library, why?
local ecx has type void that doesn't agree with type of define __size32 of a library, why?
local edx has type void that doesn't agree with type of define __size32 of a library, why?
local edx has type __size8 * that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local ecx has type void that doesn't agree with type of define __size32 of a library, why?
local edx has type void that doesn't agree with type of define __size32 of a library, why?
local esp has type void that doesn't agree with type of define __size32 of a library, why?
local ecx has type __size32 that doesn't agree with type of define void of a library, why?
local edx has type __size32 that doesn't agree with type of define void of a library, why?
local esp has type __size32 that doesn't agree with type of define void of a library, why?
dest is not lib
call:   16 {*32* eax, *32* ecx, *32* edx, *v* esp} := CALL proc5(
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{0},   r10=r10{0},   r11=r11{0},   r15=r15{0},
                r24=r24{0},   r25=r25{0},   r26=r26{0},   r27=r27{0},   r28=r28{0} - 116,   r29=r28{0} - 4,
                r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 104]=r27{0},   m[r28{0} - 108]=r30{0},
                m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 96, r28{0} - 100 ),   %ZF=(r28{0} - 100) = 0,   %CF=(r28{0} - 4) <u 96
              Live variables:  in proc proc2
dest is not lib
call:   22 {*32* eax_1, *v* ecx, *v* edx, *v* esp} := CALL proc6(
                *DWORD* local0 := 261
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{0},   r10=r10{0},   r11=r11{0},   r15=r15{0},
                r24=r24{16},   r25=r25{16},   r26=r26{16},   r27=r27{0},   r28=r28{0} - 120,   r29=r28{0} - 4,
                r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 104]=r27{0},   m[r28{0} - 108]=r30{0},
                m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=261,   m[r28{0} - 120]=%pc,   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 96, r28{0} - 100 ),   %ZF=(r28{0} - 100) = 0,   %CF=(r28{0} - 4) <u 96
              Live variables: eax_1 in proc proc2
result:    0 *32* eax_1 := -
dest is not lib
call:   34 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL proc6(
                *DWORD* local0 := 261
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{0},   r10=r10{0},   r11=r11{0},   r15=r15{0},
                r24=r24{22},   r25=r25{22},   r26=r26{22},   r27=r27{0},   r28=r28{0} - 120,   r29=r28{0} - 4,
                r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 72]=r24{22},   m[r28{0} - 104]=r27{0},
                m[r28{0} - 108]=r30{0},   m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=261,   m[r28{0} - 120]=%pc,
                tmp1=(r28{0} - 120) + 4,   %flags=ADDFLAGS32( r28{0} - 116, 4, r28{0} - 112 ),
                %ZF=ADDFLAGS32( r28{0} - 116, 4, r28{0} - 112 ),   %CF=ADDFLAGS32( r28{0} - 116, 4, r28{0} - 112 )
              Live variables: eax in proc proc2
result:    0 *32* eax := -
dest is not lib
call:   46 {*u8** eax, *v* ecx, *v* edx, *v* esp} := CALL proc6(
                *DWORD* local0 := 261
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{0},   r10=r10{0},   r11=r11{0},   r15=r15{0},
                r24=r24{34},   r25=r24{34},   r26=r26{34},   r27=r27{0},   r28=r28{0} - 120,   r29=r28{0} - 4,
                r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 72]=r24{22},   m[r28{0} - 76]=r24{34},
                m[r28{0} - 104]=r27{0},   m[r28{0} - 108]=r30{0},   m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=261,
                m[r28{0} - 120]=%pc,   tmp1=(r28{0} - 120) + 4,   %flags=ADDFLAGS32( r28{0} - 116, 4, r28{0} - 112 ),
                %ZF=ADDFLAGS32( r28{0} - 116, 4, r28{0} - 112 ),   %CF=ADDFLAGS32( r28{0} - 116, 4, r28{0} - 112 )
              Live variables: eax in proc proc2
result:    0 *u8** eax := -
dest is not lib
call:   56 {*32* eax, *u32* cl, *32* edx, *v* esp} := CALL proc7(
                *u8** eax := eax
                *u8** edx := eax
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{0},   r10=r10{0},   r11=r11{0},   r15=r15{0},
                r24=r24{46},   r25=r25{46},   r26=r24{46},   r27=r27{0},   r28=(r28{0} - 120) + 4,   r29=r28{0} - 4,
                r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 72]=r24{22},   m[r28{0} - 76]=r24{34},
                m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},   m[r28{0} - 108]=r30{0},   m[r28{0} - 112]=r31{0},
                m[r28{0} - 116]=%pc,   m[r28{0} - 120]=%pc,   tmp1=(r28{0} - 120) + 4,
                %flags=ADDFLAGS32( r28{0} - 116, 4, r28{0} - 112 ),   %ZF=ADDFLAGS32( r28{0} - 116, 4, r28{0} - 112 ),
                %CF=ADDFLAGS32( r28{0} - 116, 4, r28{0} - 112 )
              Live variables:  in proc proc2
dest is not lib
call:   62 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL LoadLibraryA(
                *LPCSTR* local1 := "R>U{Zj:5"
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{0},   r9=r9{56},   r10=r10{0},   r11=r11{0},
                r15=r15{0},   r24=r24{56},   r25=r25{46},   r26=r26{56},   r27=r27{0},   r28=r28{0} - 120,
                r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 72]=r24{22},
                m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},   m[r28{0} - 108]=r30{0},
                m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=0x40503c,   m[r28{0} - 120]=%pc,   tmp1=(r28{0} - 120) + 4,
                %flags=ADDFLAGS32( r28{0} - 116, 4, r28{0} - 112 ),   %ZF=ADDFLAGS32( r28{0} - 116, 4, r28{0} - 112 ),
                %CF=ADDFLAGS32( r28{0} - 116, 4, r28{0} - 112 )
              Live variables: eax in proc proc2
result:    0 *32* eax := -
dest is not lib
call:   69 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL LoadLibraryA(
                *LPCSTR* local1 := "X+P{Zj:5"
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{0},   r9=r9{56},   r10=r10{0},   r11=r11{0},
                r15=r15{0},   r24=r24{62},   r25=r25{62},   r26=r26{62},   r27=r27{0},   r28=r28{0} - 120,
                r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 72]=r24{22},
                m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},   m[r28{0} - 108]=r30{0},
                m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=0x40504c,   m[r28{0} - 120]=%pc,   tmp1=(r28{0} - 120) + 4,
                %flags=ADDFLAGS32( r28{0} - 116, 4, r28{0} - 112 ),   %ZF=ADDFLAGS32( r28{0} - 116, 4, r28{0} - 112 ),
                %CF=ADDFLAGS32( r28{0} - 116, 4, r28{0} - 112 )
              Live variables: eax in proc proc2
result:    0 *32* eax := -
dest is not lib
call:   76 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL LoadLibraryA(
                *LPCSTR* local1 := "W7,(^"
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{0},   r9=r9{56},   r10=r10{0},   r11=r11{0},
                r15=r15{0},   r24=r24{69},   r25=r25{69},   r26=r26{69},   r27=r27{0},   r28=r28{0} - 120,
                r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 72]=r24{22},
                m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},   m[r28{0} - 108]=r30{0},
                m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=0x405030,   m[r28{0} - 120]=%pc,   tmp1=(r28{0} - 120) + 4,
                %flags=ADDFLAGS32( r28{0} - 116, 4, r28{0} - 112 ),   %ZF=ADDFLAGS32( r28{0} - 116, 4, r28{0} - 112 ),
                %CF=ADDFLAGS32( r28{0} - 116, 4, r28{0} - 112 )
              Live variables: eax in proc proc2
result:    0 *32* eax := -
dest is not lib
call:   83 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL LoadLibraryA(
                *LPCSTR* local1 := "N5\<F 2rz
/\+=Fp"
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{0},   r9=r9{56},   r10=r10{0},   r11=r11{0},
                r15=r15{0},   r24=r24{76},   r25=r25{76},   r26=r26{76},   r27=r27{0},   r28=r28{0} - 120,
                r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 72]=r24{22},
                m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},   m[r28{0} - 108]=r30{0},
                m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=0x40505c,   m[r28{0} - 120]=%pc,   tmp1=(r28{0} - 120) + 4,
                %flags=ADDFLAGS32( r28{0} - 116, 4, r28{0} - 112 ),   %ZF=ADDFLAGS32( r28{0} - 116, 4, r28{0} - 112 ),
                %CF=ADDFLAGS32( r28{0} - 116, 4, r28{0} - 112 )
              Live variables: eax in proc proc2
result:    0 *32* eax := -
dest is not lib
call:   90 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL LoadLibraryA(
                *LPCSTR* local1 := "Lhf(2y"
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{0},   r9=r9{56},   r10=r10{0},   r11=r11{0},
                r15=r15{0},   r24=r24{83},   r25=r25{83},   r26=r26{83},   r27=r27{0},   r28=r28{0} - 120,
                r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 72]=r24{22},
                m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},   m[r28{0} - 108]=r30{0},
                m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=0x405260,   m[r28{0} - 120]=%pc,   tmp1=(r28{0} - 120) + 4,
                %flags=ADDFLAGS32( r28{0} - 116, 4, r28{0} - 112 ),   %ZF=ADDFLAGS32( r28{0} - 116, 4, r28{0} - 112 ),
                %CF=ADDFLAGS32( r28{0} - 116, 4, r28{0} - 112 )
              Live variables: eax in proc proc2
result:    0 *32* eax := -
dest is not lib
call:   97 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL LoadLibraryA(
                *LPCSTR* local1 := "J7
zF 2rk-+\&#!'<
tW"
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{0},   r9=r9{56},   r10=r10{0},   r11=r11{0},
                r15=r15{0},   r24=r24{90},   r25=r25{90},   r26=r26{90},   r27=r27{0},   r28=r28{0} - 120,
                r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 72]=r24{22},
                m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},   m[r28{0} - 108]=r30{0},
                m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=0x40526c,   m[r28{0} - 120]=%pc,   tmp1=(r28{0} - 120) + 4,
                %flags=ADDFLAGS32( r28{0} - 116, 4, r28{0} - 112 ),   %ZF=ADDFLAGS32( r28{0} - 116, 4, r28{0} - 112 ),
                %CF=ADDFLAGS32( r28{0} - 116, 4, r28{0} - 112 )
              Live variables: eax in proc proc2
result:    0 *32* eax := -
dest is not lib
call:  107 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local2 := eax
                *c** local1 := "k-+\&#!'<
tW"
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{0},   r9=r9{56},   r10=r10{0},   r11=r11{0},
                r15=r15{0},   r24=r24{101},   r25=r25{97},   r26=r26{97},   r27=r27{0},   r28=r28{0} - 124,
                r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 72]=r24{22},
                m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},   m[r28{0} - 108]=r30{0},
                m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=0x405278,   m[r28{0} - 120]=r24{101},   m[r28{0} - 124]=%pc,
                tmp1=(r28{0} - 120) + 4,   %flags=ADDFLAGS32( r28{0} - 116, 4, r28{0} - 112 ),
                %ZF=ADDFLAGS32( r28{0} - 116, 4, r28{0} - 112 ),   %CF=ADDFLAGS32( r28{0} - 116, 4, r28{0} - 112 )
              Live variables: eax in proc proc2
result:    0 *32* eax := -
dest is not lib
call:  117 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local2 := ecx
                *c** local1 := "k3.\:?P~>"
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{0},   r9=r9{56},   r10=r10{0},   r11=r11{0},
                r15=r15{0},   r24=r24{107},   r25=r25{111},   r26=r26{107},   r27=r27{0},   r28=r28{0} - 124,
                r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 72]=r24{22},
                m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},   m[r28{0} - 108]=r30{0},
                m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=0x405288,   m[r28{0} - 120]=r25{111},   m[r28{0} - 124]=%pc,
                tmp1=(r28{0} - 120) + 4,   %flags=ADDFLAGS32( r28{0} - 116, 4, r28{0} - 112 ),
                %ZF=ADDFLAGS32( r28{0} - 116, 4, r28{0} - 112 ),   %CF=ADDFLAGS32( r28{0} - 116, 4, r28{0} - 112 )
              Live variables: eax in proc proc2
result:    0 *32* eax := -
dest is not lib
call:  127 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local2 := edx
                *c** local1 := "k!7V;;"
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{0},   r9=r9{56},   r10=r10{0},   r11=r11{0},
                r15=r15{0},   r24=r24{117},   r25=r25{117},   r26=r26{121},   r27=r27{0},   r28=r28{0} - 124,
                r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 72]=r24{22},
                m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},   m[r28{0} - 108]=r30{0},
                m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=0x4052bc,   m[r28{0} - 120]=r26{121},   m[r28{0} - 124]=%pc,
                tmp1=(r28{0} - 120) + 4,   %flags=ADDFLAGS32( r28{0} - 116, 4, r28{0} - 112 ),
                %ZF=ADDFLAGS32( r28{0} - 116, 4, r28{0} - 112 ),   %CF=ADDFLAGS32( r28{0} - 116, 4, r28{0} - 112 )
              Live variables: eax in proc proc2
result:    0 *32* eax := -
dest is not lib
call:  137 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local2 := eax
                *c** local1 := "k!)\)!tW"
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{0},   r9=r9{56},   r10=r10{0},   r11=r11{0},
                r15=r15{0},   r24=r24{131},   r25=r25{127},   r26=r26{127},   r27=r27{0},   r28=r28{0} - 124,
                r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 72]=r24{22},
                m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},   m[r28{0} - 108]=r30{0},
                m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=0x40529c,   m[r28{0} - 120]=r24{131},   m[r28{0} - 124]=%pc,
                tmp1=(r28{0} - 120) + 4,   %flags=ADDFLAGS32( r28{0} - 116, 4, r28{0} - 112 ),
                %ZF=ADDFLAGS32( r28{0} - 116, 4, r28{0} - 112 ),   %CF=ADDFLAGS32( r28{0} - 116, 4, r28{0} - 112 )
              Live variables: eax in proc proc2
result:    0 *32* eax := -
dest is not lib
call:  147 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local2 := ecx
                *c** local1 := "k1>M	(+7Mp"
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{0},   r9=r9{56},   r10=r10{0},   r11=r11{0},
                r15=r15{0},   r24=r24{137},   r25=r25{141},   r26=r26{137},   r27=r27{0},   r28=r28{0} - 124,
                r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 72]=r24{22},
                m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},   m[r28{0} - 108]=r30{0},
                m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=0x4052ac,   m[r28{0} - 120]=r25{141},   m[r28{0} - 124]=%pc,
                tmp1=(r28{0} - 120) + 4,   %flags=ADDFLAGS32( r28{0} - 116, 4, r28{0} - 112 ),
                %ZF=ADDFLAGS32( r28{0} - 116, 4, r28{0} - 112 ),   %CF=ADDFLAGS32( r28{0} - 116, 4, r28{0} - 112 )
              Live variables: eax in proc proc2
result:    0 *32* eax := -
dest is not lib
call:  157 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local2 := edx_2
                *c** local1 := "j7|0'+tW"
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{0},   r9=r9{56},   r10=r10{0},   r11=r11{0},
                r15=r15{0},   r24=r24{147},   r25=r25{147},   r26=r26{151},   r27=r27{0},   r28=r28{0} - 124,
                r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 72]=r24{22},
                m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},   m[r28{0} - 108]=r30{0},
                m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=0x4052c8,   m[r28{0} - 120]=r26{151},   m[r28{0} - 124]=%pc,
                tmp1=(r28{0} - 120) + 4,   %flags=ADDFLAGS32( r28{0} - 116, 4, r28{0} - 112 ),
                %ZF=ADDFLAGS32( r28{0} - 116, 4, r28{0} - 112 ),   %CF=ADDFLAGS32( r28{0} - 116, 4, r28{0} - 112 )
              Live variables: eax in proc proc2
result:    0 *32* eax := -
dest is not lib
call:  162 {*32* eax, *32* ecx, *v* edx, *v* esp} := CALL proc8(
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{0},   r9=r9{56},   r10=r10{0},   r11=r11{0},
                r15=r15{0},   r24=r24{157},   r25=r25{157},   r26=r26{157},   r27=r27{0},   r28=r28{0} - 116,
                r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 72]=r24{22},
                m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},   m[r28{0} - 108]=r30{0},
                m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},   m[r28{0} - 124]=%pc,
                tmp1=(r28{0} - 120) + 4,   %flags=ADDFLAGS32( r28{0} - 116, 4, r28{0} - 112 ),
                %ZF=ADDFLAGS32( r28{0} - 116, 4, r28{0} - 112 ),   %CF=ADDFLAGS32( r28{0} - 116, 4, r28{0} - 112 )
              Live variables: eax in proc proc2
result:    0 *32* eax := -
dest is not lib
call:  167 {*32* eax, *32* ecx, *32* edx, *v** esp, *v** ebp_1} := CALL proc9(
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{0},   r9=r9{56},   r10=r10{0},   r11=r11{0},
                r15=r15{0},   r24=r24{162},   r25=r25{162},   r26=r26{162},   r27=r27{0},   r28=r28{0} - 116,
                r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 72]=r24{22},
                m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},   m[r28{0} - 108]=r30{0},
                m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},   m[r28{0} - 124]=%pc,
                tmp1=(r28{0} - 120) + 4,   %flags=ADDFLAGS32( r28{0} - 116, 4, r28{0} - 112 ),
                %ZF=ADDFLAGS32( r28{0} - 116, 4, r28{0} - 112 ),   %CF=ADDFLAGS32( r28{0} - 116, 4, r28{0} - 112 )
              Live variables: eax,  ebp_1,  esp in proc proc2
result:    0 *32* eax := -
result:    0 *v** esp := -
result:    0 *v** ebp_1 := -
dest is not lib
call:  181 {*32* eax, *j32* ecx, *32* edx, *v** esp, *v** ebp} := CALL proc10(
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{0},   r9=r9{56},   r10=r10{0},   r11=r11{0},
                r15=r15{0},   r24=r24{176},   r25=r25{174},   r26=r26{167},   r27=r27{0},   r28=r28{167} - 4,
                r29=r29{167},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 72]=r24{22},
                m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},   m[r28{0} - 108]=r30{0},
                m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},   m[r28{0} - 124]=%pc,
                tmp1=(r28{0} - 120) + 4,   %flags=ADDFLAGS32( r28{0} - 116, 4, r28{0} - 112 ),
                %ZF=ADDFLAGS32( r28{0} - 116, 4, r28{0} - 112 ),   %CF=ADDFLAGS32( r28{0} - 116, 4, r28{0} - 112 )
              Live variables: eax,  esp in proc proc2
result:    0 *32* eax := -
result:    0 *v** esp := -
dest is not lib
call:  198 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetModuleFileNameA(
                *HMODULE* m[esp - 12] := m[esp - 12]
                *LPSTR* m[esp - 8] := m[esp - 8]
                *DWORD* local10 := m[esp - 4]
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{0},   r9=r9{56},   r10=r10{0},   r11=r11{0},
                r15=r15{0},   r24=r24{181},   r25=r25{181},   r26=r26{190},   r27=r27{0},   r28=r28{181} - 16,
                r29=r29{181},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 72]=r24{22},
                m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},   m[r28{0} - 108]=r30{0},
                m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},   m[r28{0} - 124]=%pc,
                tmp1=r24{181},   %flags=LOGICALFLAGS32( r24{181} ),   %ZF=LOGICALFLAGS32( r24{181} ),
                %CF=LOGICALFLAGS32( r24{181} )
              Live variables:  in proc proc2
dest is not lib
call:  204 {*union* eax, *8* al, *u32* cl, *8* bl, *32* ecx, *32* edx, *union** esp_1, *v** ebp_2} := CALL proc11(
                *j32* local10 := m[esp - 4]
                *32* ebx := param5
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{0},   r9=r9{56},   r10=r10{0},   r11=r11{0},
                r15=r15{0},   r24=r24{198},   r25=r25{198},   r26=r26{198},   r27=r27{0},   r28=r28{181} - 8,
                r29=r29{181},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 72]=r24{22},
                m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},   m[r28{0} - 108]=r30{0},
                m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},   m[r28{0} - 124]=%pc,
                tmp1=r24{181},   %flags=LOGICALFLAGS32( r24{181} ),   %ZF=LOGICALFLAGS32( r24{181} ),
                %CF=LOGICALFLAGS32( r24{181} )
              Live variables: bl,  cl,  eax,  ebp_2,  esp_1 in proc proc2
result:    0 *union* eax := -
result:    0 *u32* cl := -
result:    0 *8* bl := -
result:    0 *union** esp_1 := -
result:    0 *v** ebp_2 := -
dest is not lib
call:  216 {*32* eax, *8* al, *32* ecx, *32* edx, *v* esp} := CALL proc12(
                *8** m[esp_1 - 4] := m[esp_1 - 4]
                *union* m[esp_1] := m[esp_1]
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{204},   r9=r9{204},   r10=r10{0},   r11=r11{204},
                r15=r15{0},   r24=global244,   r25=r25{204},   r26=r26{204},   r27=r27{0},   r28=r28{204} - 8,
                r29=r29{204},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 72]=r24{22},
                m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},   m[r28{0} - 108]=r30{0},
                m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},   m[r28{0} - 124]=%pc,
                tmp1=r28{204},   %flags=ADDFLAGS32( r28{204}, 4, r28{204} + 4 ),
                %ZF=ADDFLAGS32( r28{204}, 4, r28{204} + 4 ),   %CF=ADDFLAGS32( r28{204}, 4, r28{204} + 4 )
              Live variables:  in proc proc2
dest is not lib
call:  228 {*8** eax, *8* al, *u32* cl, *8* bl, *32* ecx, *32* edx, *8*** esp, *v** ebp_3} := CALL proc11(
                *32* ebx := param5
                *union* m[esp_1] := m[esp_1]
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{216},   r9=r9{204},   r10=r10{0},   r11=r11{204},
                r15=r15{0},   r24=r24{216},   r25=r25{216},   r26=r26{216},   r27=r27{0},   r28=(r28{204} - 8) + 4,
                r29=r29{204},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 72]=r24{22},
                m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},   m[r28{0} - 108]=r30{0},
                m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},   m[r28{0} - 124]=%pc,
                tmp1=global244,   %flags=SUBFLAGS32( m[0x4060f4], 0, global244 ),   %ZF=global244 = 0,
                %CF=m[0x4060f4] <u 0
              Live variables: bl,  cl,  eax,  ebp_3,  esp in proc proc2
result:    0 *8** eax := -
result:    0 *u32* cl := -
result:    0 *8* bl := -
result:    0 *8*** esp := -
result:    0 *v** ebp_3 := -
dest is not lib
call:  240 {*32* eax, *8* al, *32* ecx, *32* edx, *v* esp} := CALL proc12(
                *8** local10 := m[esp - 4]
                *8** m[esp] := m[esp]
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{228},   r9=r9{228},   r10=r10{0},   r11=r11{228},
                r15=r15{0},   r24=r24{228},   r25=global244,   r26=r26{228},   r27=r27{0},   r28=r28{228} - 8,
                r29=r29{228},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 72]=r24{22},
                m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},   m[r28{0} - 108]=r30{0},
                m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},   m[r28{0} - 124]=%pc,
                tmp1=r28{228},   %flags=ADDFLAGS32( r28{228}, 4, r28{228} + 4 ),
                %ZF=ADDFLAGS32( r28{228}, 4, r28{228} + 4 ),   %CF=ADDFLAGS32( r28{228}, 4, r28{228} + 4 )
              Live variables:  in proc proc2
dest is not lib
call:  256 {*32* eax, *16* ax, *16* bx, *8* al, *u8* dl, *j8* bl, *8* bh, *j32* ecx, *32* edx, *union** esp, *v** ebp_4} := CALL proc13(
                *16* ax := param1
                *16* bx := param2
                *u8* dl := param3
                *8* bl := bl
                *8* bh := param4
                *32* ebx := param5
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{1686},   r9=r9{1687},   r10=r10{0},   r11=r11{1688},
                r15=r15{0},   r24=r24{1689},   r25=r25{1690},   r26=r29{1693} - 56,   r27=r27{0},   r28=r28{1692} - 12,
                r29=r29{1693},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 72]=r24{22},
                m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},   m[r28{0} - 108]=r30{0},
                m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},   m[r28{0} - 124]=%pc,
                tmp1=tmp1{1694},   %flags=%flags{1695},   %ZF=%ZF{1696},   %CF=%CF{1697}
              Live variables: ax,  bh,  bl,  bx,  dl,  eax,  ebp_4,  esp in proc proc2
result:    0 *32* eax := -
result:    0 *16* ax := -
result:    0 *16* bx := -
result:    0 *u8* dl := -
result:    0 *j8* bl := -
result:    0 *8* bh := -
result:    0 *union** esp := -
result:    0 *v** ebp_4 := -
dest is not lib
call:  284 {*32* eax, *8* al, *u32* cl, *u8* dl, *j32* ecx, *32* edx, *v* esp} := CALL proc14(
                *v** m[esp - 8] := m[esp - 8]
                *32* local10 := m[esp - 4]
                *u64* m[esp + 4] := m[esp + 4]
                *u32* cl := cl
                *u8* dl := dl
                *union* m[esp] := m[esp]
              )
              Reaching definitions: r0=r0{256},   r3=r3{256},   r8=r8{256},   r9=r9{1687},   r10=r10{256},
                r11=r11{256},   r15=r15{256},   r24=global12,   r25=r25{273},   r26=r26{278},   r27=r27{0},
                r28=r28{256} - 12,   r29=r29{256},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 72]=r24{22},   m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},
                m[r28{0} - 108]=r30{0},   m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},
                m[r28{0} - 124]=%pc,   tmp1=tmp1{264},   %flags=SUBFLAGS32( m[r29{256} - 56], 0, tmp1{264} ),
                %ZF=tmp1{264} = 0,   %CF=m[r29{256} - 56] <u 0
              Live variables: cl,  dl,  eax,  ecx in proc proc2
result:    0 *32* eax := -
result:    0 *u32* cl := -
result:    0 *u8* dl := -
result:    0 *j32* ecx := -
dest is not lib
call:  307 {*32* eax, *8* al, *u32* cl, *j8* bl, *j32* ecx, *32* edx, *v* esp} := CALL proc15(
                *u32** m[esp + 4] := m[esp + 4]
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param5
                *union* m[esp] := m[esp]
              )
              Reaching definitions: r0=r0{256},   r3=r3{256},   r8=r8{284},   r9=r9{284},   r10=r10{284},
                r11=r11{256},   r15=r15{256},   r24=r24{301},   r25=r25{284},   r26=r26{284},   r27=r27{0},
                r28=r28{256} - 4,   r29=r29{256},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 72]=r24{22},   m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},
                m[r28{0} - 108]=r30{0},   m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},
                m[r28{0} - 124]=%pc,   tmp1=tmp1{292},   %flags=SUBFLAGS32( m[r29{256} - 56], 0, tmp1{292} ),
                %ZF=tmp1{292} = 0,   %CF=m[r29{256} - 56] <u 0
              Live variables: bl,  cl,  eax in proc proc2
result:    0 *32* eax := -
result:    0 *u32* cl := -
result:    0 *j8* bl := -
dest is not lib
call:  326 {*32* eax, *8* al, *j32* ecx, *32* edx, *v* esp} := CALL proc12(
                *8** m[esp + 4] := m[esp + 4]
                *union* m[esp] := m[esp]
              )
              Reaching definitions: r0=r0{256},   r3=r3{256},   r8=r8{307},   r9=r9{307},   r10=r10{284},
                r11=r11{307},   r15=r15{256},   r24=r24{307},   r25=r25{318},   r26=r26{307},   r27=r27{0},
                r28=r28{256} - 4,   r29=r29{256},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 72]=r24{22},   m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},
                m[r28{0} - 108]=r30{0},   m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},
                m[r28{0} - 124]=%pc,   tmp1=tmp1{312},   %flags=SUBFLAGS32( m[r29{256} - 52], 0, tmp1{312} ),
                %ZF=tmp1{312} = 0,   %CF=m[r29{256} - 52] <u 0
              Live variables: ecx in proc proc2
result:    0 *j32* ecx := -
dest is not lib
call:  337 {*32* eax, *8* al, *u32* cl, *j8* bl, *32* ecx, *32* edx, *v* esp} := CALL proc15(
                *u32** m[esp + 4] := m[esp + 4]
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param5
                *union* m[esp] := m[esp]
              )
              Reaching definitions: r0=r0{256},   r3=r3{256},   r8=r8{326},   r9=r9{307},   r10=r10{284},
                r11=r11{307},   r15=r15{256},   r24=r24{326},   r25=r25{326},   r26=r26{326},   r27=r27{0},
                r28=r28{256} - 4,   r29=r29{256},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 72]=r24{22},   m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},
                m[r28{0} - 108]=r30{0},   m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},
                m[r28{0} - 124]=%pc,   tmp1=(r28{256} - 4) + 4,   %flags=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),
                %ZF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),   %CF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 )
              Live variables: bl,  cl,  eax in proc proc2
result:    0 *32* eax := -
result:    0 *u32* cl := -
result:    0 *j8* bl := -
dest is not lib
call:  350 {*32* eax, *8* al, *j32* ecx, *32* edx, *v* esp} := CALL proc12(
                *8** m[esp + 4] := m[esp + 4]
                *union* m[esp] := m[esp]
              )
              Reaching definitions: r0=r0{256},   r3=r3{256},   r8=r8{337},   r9=r9{337},   r10=r10{284},
                r11=r11{337},   r15=r15{256},   r24=r24{337},   r25=r25{337},   r26=r26{342},   r27=r27{0},
                r28=r28{256} - 4,   r29=r29{256},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 72]=r24{22},   m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},
                m[r28{0} - 108]=r30{0},   m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},
                m[r28{0} - 124]=%pc,   tmp1=(r28{256} - 4) + 4,   %flags=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),
                %ZF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),   %CF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 )
              Live variables: ecx in proc proc2
result:    0 *j32* ecx := -
dest is not lib
call:  361 {*32* eax, *8* al, *u32* cl, *j8* bl, *32* ecx, *32* edx, *v* esp} := CALL proc15(
                *u32** m[esp + 4] := m[esp + 4]
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param5
                *union* m[esp] := m[esp]
              )
              Reaching definitions: r0=r0{256},   r3=r3{256},   r8=r8{350},   r9=r9{337},   r10=r10{284},
                r11=r11{337},   r15=r15{256},   r24=r24{350},   r25=r25{350},   r26=r26{350},   r27=r27{0},
                r28=r28{256} - 4,   r29=r29{256},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 72]=r24{22},   m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},
                m[r28{0} - 108]=r30{0},   m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},
                m[r28{0} - 124]=%pc,   tmp1=(r28{256} - 4) + 4,   %flags=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),
                %ZF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),   %CF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 )
              Live variables: bl,  cl,  eax in proc proc2
result:    0 *32* eax := -
result:    0 *u32* cl := -
result:    0 *j8* bl := -
dest is not lib
call:  374 {*32* eax, *8* al, *j32* ecx, *32* edx, *v* esp} := CALL proc12(
                *8** m[esp + 4] := m[esp + 4]
                *union* m[esp] := m[esp]
              )
              Reaching definitions: r0=r0{256},   r3=r3{256},   r8=r8{361},   r9=r9{361},   r10=r10{284},
                r11=r11{361},   r15=r15{256},   r24=r24{366},   r25=r25{361},   r26=r26{361},   r27=r27{0},
                r28=r28{256} - 4,   r29=r29{256},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 72]=r24{22},   m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},
                m[r28{0} - 108]=r30{0},   m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},
                m[r28{0} - 124]=%pc,   tmp1=(r28{256} - 4) + 4,   %flags=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),
                %ZF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),   %CF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 )
              Live variables: ecx in proc proc2
result:    0 *j32* ecx := -
dest is not lib
call:  385 {*32* eax, *8* al, *u32* cl, *j8* bl, *32* ecx, *32* edx, *v* esp} := CALL proc15(
                *u32** m[esp + 4] := m[esp + 4]
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param5
                *union* m[esp] := m[esp]
              )
              Reaching definitions: r0=r0{256},   r3=r3{256},   r8=r8{374},   r9=r9{361},   r10=r10{284},
                r11=r11{361},   r15=r15{256},   r24=r24{374},   r25=r25{374},   r26=r26{374},   r27=r27{0},
                r28=r28{256} - 4,   r29=r29{256},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 72]=r24{22},   m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},
                m[r28{0} - 108]=r30{0},   m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},
                m[r28{0} - 124]=%pc,   tmp1=(r28{256} - 4) + 4,   %flags=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),
                %ZF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),   %CF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 )
              Live variables: bl,  cl,  eax in proc proc2
result:    0 *32* eax := -
result:    0 *u32* cl := -
result:    0 *j8* bl := -
dest is not lib
call:  398 {*32* eax, *8* al, *j32* ecx, *32* edx, *v* esp} := CALL proc12(
                *8** m[esp + 4] := m[esp + 4]
                *union* m[esp] := m[esp]
              )
              Reaching definitions: r0=r0{256},   r3=r3{256},   r8=r8{385},   r9=r9{385},   r10=r10{284},
                r11=r11{385},   r15=r15{256},   r24=r24{385},   r25=r25{390},   r26=r26{385},   r27=r27{0},
                r28=r28{256} - 4,   r29=r29{256},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 72]=r24{22},   m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},
                m[r28{0} - 108]=r30{0},   m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},
                m[r28{0} - 124]=%pc,   tmp1=(r28{256} - 4) + 4,   %flags=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),
                %ZF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),   %CF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 )
              Live variables: ecx in proc proc2
result:    0 *j32* ecx := -
dest is not lib
call:  409 {*32* eax, *8* al, *u32* cl, *j8* bl, *32* ecx, *32* edx, *v* esp} := CALL proc15(
                *u32** m[esp + 4] := m[esp + 4]
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param5
                *union* m[esp] := m[esp]
              )
              Reaching definitions: r0=r0{256},   r3=r3{256},   r8=r8{398},   r9=r9{385},   r10=r10{284},
                r11=r11{385},   r15=r15{256},   r24=r24{398},   r25=r25{398},   r26=r26{398},   r27=r27{0},
                r28=r28{256} - 4,   r29=r29{256},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 72]=r24{22},   m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},
                m[r28{0} - 108]=r30{0},   m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},
                m[r28{0} - 124]=%pc,   tmp1=(r28{256} - 4) + 4,   %flags=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),
                %ZF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),   %CF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 )
              Live variables: bl,  cl,  eax in proc proc2
result:    0 *32* eax := -
result:    0 *u32* cl := -
result:    0 *j8* bl := -
dest is not lib
call:  422 {*32* eax, *8* al, *j32* ecx, *32* edx, *v* esp} := CALL proc12(
                *8** m[esp + 4] := m[esp + 4]
                *union* m[esp] := m[esp]
              )
              Reaching definitions: r0=r0{256},   r3=r3{256},   r8=r8{409},   r9=r9{409},   r10=r10{284},
                r11=r11{409},   r15=r15{256},   r24=r24{409},   r25=r25{409},   r26=r26{414},   r27=r27{0},
                r28=r28{256} - 4,   r29=r29{256},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 72]=r24{22},   m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},
                m[r28{0} - 108]=r30{0},   m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},
                m[r28{0} - 124]=%pc,   tmp1=(r28{256} - 4) + 4,   %flags=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),
                %ZF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),   %CF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 )
              Live variables: ecx in proc proc2
result:    0 *j32* ecx := -
dest is not lib
call:  433 {*32* eax, *8* al, *u32* cl, *j8* bl, *32* ecx, *32* edx, *v* esp} := CALL proc15(
                *u32** m[esp + 4] := m[esp + 4]
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param5
                *union* m[esp] := m[esp]
              )
              Reaching definitions: r0=r0{256},   r3=r3{256},   r8=r8{422},   r9=r9{409},   r10=r10{284},
                r11=r11{409},   r15=r15{256},   r24=r24{422},   r25=r25{422},   r26=r26{422},   r27=r27{0},
                r28=r28{256} - 4,   r29=r29{256},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 72]=r24{22},   m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},
                m[r28{0} - 108]=r30{0},   m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},
                m[r28{0} - 124]=%pc,   tmp1=(r28{256} - 4) + 4,   %flags=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),
                %ZF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),   %CF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 )
              Live variables: bl,  cl,  eax in proc proc2
result:    0 *32* eax := -
result:    0 *u32* cl := -
result:    0 *j8* bl := -
dest is not lib
call:  446 {*32* eax, *8* al, *j32* ecx, *32* edx, *v* esp} := CALL proc12(
                *8** m[esp + 4] := m[esp + 4]
                *union* m[esp] := m[esp]
              )
              Reaching definitions: r0=r0{256},   r3=r3{256},   r8=r8{433},   r9=r9{433},   r10=r10{284},
                r11=r11{433},   r15=r15{256},   r24=r24{438},   r25=r25{433},   r26=r26{433},   r27=r27{0},
                r28=r28{256} - 4,   r29=r29{256},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 72]=r24{22},   m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},
                m[r28{0} - 108]=r30{0},   m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},
                m[r28{0} - 124]=%pc,   tmp1=(r28{256} - 4) + 4,   %flags=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),
                %ZF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),   %CF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 )
              Live variables: ecx in proc proc2
result:    0 *j32* ecx := -
dest is not lib
call:  457 {*32* eax, *8* al, *u32* cl, *j8* bl, *32* ecx, *32* edx, *v* esp} := CALL proc15(
                *u32** m[esp + 4] := m[esp + 4]
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param5
                *union* m[esp] := m[esp]
              )
              Reaching definitions: r0=r0{256},   r3=r3{256},   r8=r8{446},   r9=r9{433},   r10=r10{284},
                r11=r11{433},   r15=r15{256},   r24=r24{446},   r25=r25{446},   r26=r26{446},   r27=r27{0},
                r28=r28{256} - 4,   r29=r29{256},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 72]=r24{22},   m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},
                m[r28{0} - 108]=r30{0},   m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},
                m[r28{0} - 124]=%pc,   tmp1=(r28{256} - 4) + 4,   %flags=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),
                %ZF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),   %CF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 )
              Live variables: bl,  cl,  eax in proc proc2
result:    0 *32* eax := -
result:    0 *u32* cl := -
result:    0 *j8* bl := -
dest is not lib
call:  470 {*32* eax, *8* al, *j32* ecx, *32* edx, *v* esp} := CALL proc12(
                *8** m[esp + 4] := m[esp + 4]
                *union* m[esp] := m[esp]
              )
              Reaching definitions: r0=r0{256},   r3=r3{256},   r8=r8{457},   r9=r9{457},   r10=r10{284},
                r11=r11{457},   r15=r15{256},   r24=r24{457},   r25=r25{462},   r26=r26{457},   r27=r27{0},
                r28=r28{256} - 4,   r29=r29{256},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 72]=r24{22},   m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},
                m[r28{0} - 108]=r30{0},   m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},
                m[r28{0} - 124]=%pc,   tmp1=(r28{256} - 4) + 4,   %flags=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),
                %ZF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),   %CF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 )
              Live variables: ecx in proc proc2
result:    0 *j32* ecx := -
dest is not lib
call:  481 {*32* eax, *8* al, *u32* cl, *j8* bl, *32* ecx, *32* edx, *v* esp} := CALL proc15(
                *u32** m[esp + 4] := m[esp + 4]
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param5
                *union* m[esp] := m[esp]
              )
              Reaching definitions: r0=r0{256},   r3=r3{256},   r8=r8{470},   r9=r9{457},   r10=r10{284},
                r11=r11{457},   r15=r15{256},   r24=r24{470},   r25=r25{470},   r26=r26{470},   r27=r27{0},
                r28=r28{256} - 4,   r29=r29{256},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 72]=r24{22},   m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},
                m[r28{0} - 108]=r30{0},   m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},
                m[r28{0} - 124]=%pc,   tmp1=(r28{256} - 4) + 4,   %flags=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),
                %ZF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),   %CF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 )
              Live variables: bl,  cl,  eax in proc proc2
result:    0 *32* eax := -
result:    0 *u32* cl := -
result:    0 *j8* bl := -
dest is not lib
call:  494 {*32* eax, *8* al, *j32* ecx, *32* edx, *v* esp} := CALL proc12(
                *8** m[esp + 4] := m[esp + 4]
                *union* m[esp] := m[esp]
              )
              Reaching definitions: r0=r0{256},   r3=r3{256},   r8=r8{481},   r9=r9{481},   r10=r10{284},
                r11=r11{481},   r15=r15{256},   r24=r24{481},   r25=r25{481},   r26=r26{486},   r27=r27{0},
                r28=r28{256} - 4,   r29=r29{256},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 72]=r24{22},   m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},
                m[r28{0} - 108]=r30{0},   m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},
                m[r28{0} - 124]=%pc,   tmp1=(r28{256} - 4) + 4,   %flags=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),
                %ZF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),   %CF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 )
              Live variables: ecx in proc proc2
result:    0 *j32* ecx := -
dest is not lib
call:  505 {*32* eax, *8* al, *u32* cl, *j8* bl, *32* ecx, *32* edx, *v* esp} := CALL proc15(
                *u32** m[esp + 4] := m[esp + 4]
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param5
                *union* m[esp] := m[esp]
              )
              Reaching definitions: r0=r0{256},   r3=r3{256},   r8=r8{494},   r9=r9{481},   r10=r10{284},
                r11=r11{481},   r15=r15{256},   r24=r24{494},   r25=r25{494},   r26=r26{494},   r27=r27{0},
                r28=r28{256} - 4,   r29=r29{256},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 72]=r24{22},   m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},
                m[r28{0} - 108]=r30{0},   m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},
                m[r28{0} - 124]=%pc,   tmp1=(r28{256} - 4) + 4,   %flags=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),
                %ZF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),   %CF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 )
              Live variables: bl,  cl,  eax in proc proc2
result:    0 *32* eax := -
result:    0 *u32* cl := -
result:    0 *j8* bl := -
dest is not lib
call:  518 {*32* eax, *8* al, *j32* ecx, *32* edx, *v* esp} := CALL proc12(
                *8** m[esp + 4] := m[esp + 4]
                *union* m[esp] := m[esp]
              )
              Reaching definitions: r0=r0{256},   r3=r3{256},   r8=r8{505},   r9=r9{505},   r10=r10{284},
                r11=r11{505},   r15=r15{256},   r24=r24{510},   r25=r25{505},   r26=r26{505},   r27=r27{0},
                r28=r28{256} - 4,   r29=r29{256},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 72]=r24{22},   m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},
                m[r28{0} - 108]=r30{0},   m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},
                m[r28{0} - 124]=%pc,   tmp1=(r28{256} - 4) + 4,   %flags=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),
                %ZF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),   %CF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 )
              Live variables: ecx in proc proc2
result:    0 *j32* ecx := -
dest is not lib
call:  529 {*32* eax, *8* al, *u32* cl, *j8* bl, *32* ecx, *32* edx, *v* esp} := CALL proc15(
                *u32** m[esp + 4] := m[esp + 4]
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param5
                *union* m[esp] := m[esp]
              )
              Reaching definitions: r0=r0{256},   r3=r3{256},   r8=r8{518},   r9=r9{505},   r10=r10{284},
                r11=r11{505},   r15=r15{256},   r24=r24{518},   r25=r25{518},   r26=r26{518},   r27=r27{0},
                r28=r28{256} - 4,   r29=r29{256},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 72]=r24{22},   m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},
                m[r28{0} - 108]=r30{0},   m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},
                m[r28{0} - 124]=%pc,   tmp1=(r28{256} - 4) + 4,   %flags=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),
                %ZF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),   %CF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 )
              Live variables: bl,  cl,  eax in proc proc2
result:    0 *32* eax := -
result:    0 *u32* cl := -
result:    0 *j8* bl := -
dest is not lib
call:  542 {*32* eax, *8* al, *j32* ecx, *32* edx, *v* esp} := CALL proc12(
                *8** m[esp + 4] := m[esp + 4]
                *union* m[esp] := m[esp]
              )
              Reaching definitions: r0=r0{256},   r3=r3{256},   r8=r8{529},   r9=r9{529},   r10=r10{284},
                r11=r11{529},   r15=r15{256},   r24=r24{529},   r25=r25{534},   r26=r26{529},   r27=r27{0},
                r28=r28{256} - 4,   r29=r29{256},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 72]=r24{22},   m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},
                m[r28{0} - 108]=r30{0},   m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},
                m[r28{0} - 124]=%pc,   tmp1=(r28{256} - 4) + 4,   %flags=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),
                %ZF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),   %CF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 )
              Live variables: ecx in proc proc2
result:    0 *j32* ecx := -
dest is not lib
call:  553 {*32* eax, *8* al, *u32* cl, *j8* bl, *32* ecx, *32* edx, *v* esp} := CALL proc15(
                *u32** m[esp + 4] := m[esp + 4]
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param5
                *union* m[esp] := m[esp]
              )
              Reaching definitions: r0=r0{256},   r3=r3{256},   r8=r8{542},   r9=r9{529},   r10=r10{284},
                r11=r11{529},   r15=r15{256},   r24=r24{542},   r25=r25{542},   r26=r26{542},   r27=r27{0},
                r28=r28{256} - 4,   r29=r29{256},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 72]=r24{22},   m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},
                m[r28{0} - 108]=r30{0},   m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},
                m[r28{0} - 124]=%pc,   tmp1=(r28{256} - 4) + 4,   %flags=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),
                %ZF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),   %CF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 )
              Live variables: bl,  cl,  eax in proc proc2
result:    0 *32* eax := -
result:    0 *u32* cl := -
result:    0 *j8* bl := -
dest is not lib
call:  566 {*32* eax, *8* al, *j32* ecx, *32* edx, *v* esp} := CALL proc12(
                *8** m[esp + 4] := m[esp + 4]
                *union* m[esp] := m[esp]
              )
              Reaching definitions: r0=r0{256},   r3=r3{256},   r8=r8{553},   r9=r9{553},   r10=r10{284},
                r11=r11{553},   r15=r15{256},   r24=r24{553},   r25=r25{553},   r26=r26{558},   r27=r27{0},
                r28=r28{256} - 4,   r29=r29{256},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 72]=r24{22},   m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},
                m[r28{0} - 108]=r30{0},   m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},
                m[r28{0} - 124]=%pc,   tmp1=(r28{256} - 4) + 4,   %flags=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),
                %ZF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),   %CF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 )
              Live variables: ecx in proc proc2
result:    0 *j32* ecx := -
dest is not lib
call:  577 {*32* eax, *8* al, *u32* cl, *j8* bl, *32* ecx, *32* edx, *v* esp} := CALL proc15(
                *u32** m[esp + 4] := m[esp + 4]
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param5
                *union* m[esp] := m[esp]
              )
              Reaching definitions: r0=r0{256},   r3=r3{256},   r8=r8{566},   r9=r9{553},   r10=r10{284},
                r11=r11{553},   r15=r15{256},   r24=r24{566},   r25=r25{566},   r26=r26{566},   r27=r27{0},
                r28=r28{256} - 4,   r29=r29{256},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 72]=r24{22},   m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},
                m[r28{0} - 108]=r30{0},   m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},
                m[r28{0} - 124]=%pc,   tmp1=(r28{256} - 4) + 4,   %flags=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),
                %ZF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),   %CF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 )
              Live variables: bl,  cl,  eax in proc proc2
result:    0 *32* eax := -
result:    0 *u32* cl := -
result:    0 *j8* bl := -
dest is not lib
call:  590 {*32* eax, *8* al, *j32* ecx, *32* edx, *v* esp} := CALL proc12(
                *8** m[esp + 4] := m[esp + 4]
                *union* m[esp] := m[esp]
              )
              Reaching definitions: r0=r0{256},   r3=r3{256},   r8=r8{577},   r9=r9{577},   r10=r10{284},
                r11=r11{577},   r15=r15{256},   r24=r24{582},   r25=r25{577},   r26=r26{577},   r27=r27{0},
                r28=r28{256} - 4,   r29=r29{256},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 72]=r24{22},   m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},
                m[r28{0} - 108]=r30{0},   m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},
                m[r28{0} - 124]=%pc,   tmp1=(r28{256} - 4) + 4,   %flags=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),
                %ZF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),   %CF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 )
              Live variables: ecx in proc proc2
result:    0 *j32* ecx := -
dest is not lib
call:  601 {*32* eax, *8* al, *u32* cl, *j8* bl, *32* ecx, *32* edx, *v* esp} := CALL proc15(
                *u32** m[esp + 4] := m[esp + 4]
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param5
                *union* m[esp] := m[esp]
              )
              Reaching definitions: r0=r0{256},   r3=r3{256},   r8=r8{590},   r9=r9{577},   r10=r10{284},
                r11=r11{577},   r15=r15{256},   r24=r24{590},   r25=r25{590},   r26=r26{590},   r27=r27{0},
                r28=r28{256} - 4,   r29=r29{256},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 72]=r24{22},   m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},
                m[r28{0} - 108]=r30{0},   m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},
                m[r28{0} - 124]=%pc,   tmp1=(r28{256} - 4) + 4,   %flags=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),
                %ZF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),   %CF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 )
              Live variables: bl,  cl,  eax in proc proc2
result:    0 *32* eax := -
result:    0 *u32* cl := -
result:    0 *j8* bl := -
dest is not lib
call:  614 {*32* eax, *8* al, *j32* ecx, *32* edx, *v* esp} := CALL proc12(
                *8** m[esp + 4] := m[esp + 4]
                *union* m[esp] := m[esp]
              )
              Reaching definitions: r0=r0{256},   r3=r3{256},   r8=r8{601},   r9=r9{601},   r10=r10{284},
                r11=r11{601},   r15=r15{256},   r24=r24{601},   r25=r25{606},   r26=r26{601},   r27=r27{0},
                r28=r28{256} - 4,   r29=r29{256},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 72]=r24{22},   m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},
                m[r28{0} - 108]=r30{0},   m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},
                m[r28{0} - 124]=%pc,   tmp1=(r28{256} - 4) + 4,   %flags=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),
                %ZF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),   %CF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 )
              Live variables: ecx in proc proc2
result:    0 *j32* ecx := -
dest is not lib
call:  625 {*32* eax, *8* al, *u32* cl, *j8* bl, *32* ecx, *32* edx, *v* esp} := CALL proc15(
                *u32** m[esp + 4] := m[esp + 4]
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param5
                *union* m[esp] := m[esp]
              )
              Reaching definitions: r0=r0{256},   r3=r3{256},   r8=r8{614},   r9=r9{601},   r10=r10{284},
                r11=r11{601},   r15=r15{256},   r24=r24{614},   r25=r25{614},   r26=r26{614},   r27=r27{0},
                r28=r28{256} - 4,   r29=r29{256},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 72]=r24{22},   m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},
                m[r28{0} - 108]=r30{0},   m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},
                m[r28{0} - 124]=%pc,   tmp1=(r28{256} - 4) + 4,   %flags=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),
                %ZF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),   %CF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 )
              Live variables: bl,  cl,  eax in proc proc2
result:    0 *32* eax := -
result:    0 *u32* cl := -
result:    0 *j8* bl := -
dest is not lib
call:  638 {*32* eax, *8* al, *j32* ecx, *32* edx, *v* esp} := CALL proc12(
                *8** m[esp + 4] := m[esp + 4]
                *union* m[esp] := m[esp]
              )
              Reaching definitions: r0=r0{256},   r3=r3{256},   r8=r8{625},   r9=r9{625},   r10=r10{284},
                r11=r11{625},   r15=r15{256},   r24=r24{625},   r25=r25{625},   r26=r26{630},   r27=r27{0},
                r28=r28{256} - 4,   r29=r29{256},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 72]=r24{22},   m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},
                m[r28{0} - 108]=r30{0},   m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},
                m[r28{0} - 124]=%pc,   tmp1=(r28{256} - 4) + 4,   %flags=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),
                %ZF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),   %CF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 )
              Live variables: ecx in proc proc2
result:    0 *j32* ecx := -
dest is not lib
call:  649 {*32* eax, *8* al, *u32* cl, *j8* bl, *32* ecx, *32* edx, *v* esp} := CALL proc15(
                *u32** m[esp + 4] := m[esp + 4]
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param5
                *union* m[esp] := m[esp]
              )
              Reaching definitions: r0=r0{256},   r3=r3{256},   r8=r8{638},   r9=r9{625},   r10=r10{284},
                r11=r11{625},   r15=r15{256},   r24=r24{638},   r25=r25{638},   r26=r26{638},   r27=r27{0},
                r28=r28{256} - 4,   r29=r29{256},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 72]=r24{22},   m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},
                m[r28{0} - 108]=r30{0},   m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},
                m[r28{0} - 124]=%pc,   tmp1=(r28{256} - 4) + 4,   %flags=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),
                %ZF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),   %CF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 )
              Live variables: bl,  cl,  eax in proc proc2
result:    0 *32* eax := -
result:    0 *u32* cl := -
result:    0 *j8* bl := -
dest is not lib
call:  662 {*32* eax, *8* al, *j32* ecx, *32* edx, *v* esp} := CALL proc12(
                *8** m[esp + 4] := m[esp + 4]
                *union* m[esp] := m[esp]
              )
              Reaching definitions: r0=r0{256},   r3=r3{256},   r8=r8{649},   r9=r9{649},   r10=r10{284},
                r11=r11{649},   r15=r15{256},   r24=r24{654},   r25=r25{649},   r26=r26{649},   r27=r27{0},
                r28=r28{256} - 4,   r29=r29{256},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 72]=r24{22},   m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},
                m[r28{0} - 108]=r30{0},   m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},
                m[r28{0} - 124]=%pc,   tmp1=(r28{256} - 4) + 4,   %flags=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),
                %ZF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),   %CF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 )
              Live variables: ecx in proc proc2
result:    0 *j32* ecx := -
dest is not lib
call:  673 {*32* eax, *8* al, *u32* cl, *j8* bl, *32* ecx, *32* edx, *v* esp} := CALL proc15(
                *u32** m[esp + 4] := m[esp + 4]
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param5
                *union* m[esp] := m[esp]
              )
              Reaching definitions: r0=r0{256},   r3=r3{256},   r8=r8{662},   r9=r9{649},   r10=r10{284},
                r11=r11{649},   r15=r15{256},   r24=r24{662},   r25=r25{662},   r26=r26{662},   r27=r27{0},
                r28=r28{256} - 4,   r29=r29{256},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 72]=r24{22},   m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},
                m[r28{0} - 108]=r30{0},   m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},
                m[r28{0} - 124]=%pc,   tmp1=(r28{256} - 4) + 4,   %flags=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),
                %ZF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),   %CF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 )
              Live variables: bl,  cl,  eax in proc proc2
result:    0 *32* eax := -
result:    0 *u32* cl := -
result:    0 *j8* bl := -
dest is not lib
call:  686 {*32* eax, *8* al, *j32* ecx, *32* edx, *v* esp} := CALL proc12(
                *8** m[esp + 4] := m[esp + 4]
                *union* m[esp] := m[esp]
              )
              Reaching definitions: r0=r0{256},   r3=r3{256},   r8=r8{673},   r9=r9{673},   r10=r10{284},
                r11=r11{673},   r15=r15{256},   r24=r24{673},   r25=r25{678},   r26=r26{673},   r27=r27{0},
                r28=r28{256} - 4,   r29=r29{256},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 72]=r24{22},   m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},
                m[r28{0} - 108]=r30{0},   m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},
                m[r28{0} - 124]=%pc,   tmp1=(r28{256} - 4) + 4,   %flags=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),
                %ZF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),   %CF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 )
              Live variables: ecx in proc proc2
result:    0 *j32* ecx := -
dest is not lib
call:  697 {*32* eax, *8* al, *u32* cl, *j8* bl, *32* ecx, *32* edx, *v* esp} := CALL proc15(
                *u32** m[esp + 4] := m[esp + 4]
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param5
                *union* m[esp] := m[esp]
              )
              Reaching definitions: r0=r0{256},   r3=r3{256},   r8=r8{686},   r9=r9{673},   r10=r10{284},
                r11=r11{673},   r15=r15{256},   r24=r24{686},   r25=r25{686},   r26=r26{686},   r27=r27{0},
                r28=r28{256} - 4,   r29=r29{256},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 72]=r24{22},   m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},
                m[r28{0} - 108]=r30{0},   m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},
                m[r28{0} - 124]=%pc,   tmp1=(r28{256} - 4) + 4,   %flags=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),
                %ZF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),   %CF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 )
              Live variables: bl,  cl,  eax in proc proc2
result:    0 *32* eax := -
result:    0 *u32* cl := -
result:    0 *j8* bl := -
dest is not lib
call:  710 {*32* eax, *8* al, *j32* ecx, *32* edx, *v* esp} := CALL proc12(
                *8** m[esp + 4] := m[esp + 4]
                *union* m[esp] := m[esp]
              )
              Reaching definitions: r0=r0{256},   r3=r3{256},   r8=r8{697},   r9=r9{697},   r10=r10{284},
                r11=r11{697},   r15=r15{256},   r24=r24{697},   r25=r25{697},   r26=r26{702},   r27=r27{0},
                r28=r28{256} - 4,   r29=r29{256},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 72]=r24{22},   m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},
                m[r28{0} - 108]=r30{0},   m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},
                m[r28{0} - 124]=%pc,   tmp1=(r28{256} - 4) + 4,   %flags=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),
                %ZF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),   %CF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 )
              Live variables: ecx in proc proc2
result:    0 *j32* ecx := -
dest is not lib
call:  721 {*32* eax, *8* al, *u32* cl, *j8* bl, *32* ecx, *32* edx, *v* esp} := CALL proc15(
                *u32** m[esp + 4] := m[esp + 4]
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param5
                *union* m[esp] := m[esp]
              )
              Reaching definitions: r0=r0{256},   r3=r3{256},   r8=r8{710},   r9=r9{697},   r10=r10{284},
                r11=r11{697},   r15=r15{256},   r24=r24{710},   r25=r25{710},   r26=r26{710},   r27=r27{0},
                r28=r28{256} - 4,   r29=r29{256},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 72]=r24{22},   m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},
                m[r28{0} - 108]=r30{0},   m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},
                m[r28{0} - 124]=%pc,   tmp1=(r28{256} - 4) + 4,   %flags=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),
                %ZF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),   %CF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 )
              Live variables: bl,  cl,  eax in proc proc2
result:    0 *32* eax := -
result:    0 *u32* cl := -
result:    0 *j8* bl := -
dest is not lib
call:  734 {*32* eax, *8* al, *j32* ecx, *32* edx, *v* esp} := CALL proc12(
                *8** m[esp + 4] := m[esp + 4]
                *union* m[esp] := m[esp]
              )
              Reaching definitions: r0=r0{256},   r3=r3{256},   r8=r8{721},   r9=r9{721},   r10=r10{284},
                r11=r11{721},   r15=r15{256},   r24=r24{726},   r25=r25{721},   r26=r26{721},   r27=r27{0},
                r28=r28{256} - 4,   r29=r29{256},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 72]=r24{22},   m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},
                m[r28{0} - 108]=r30{0},   m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},
                m[r28{0} - 124]=%pc,   tmp1=(r28{256} - 4) + 4,   %flags=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),
                %ZF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),   %CF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 )
              Live variables: ecx in proc proc2
result:    0 *j32* ecx := -
dest is not lib
call:  745 {*32* eax, *8* al, *u32* cl, *j8* bl, *32* ecx, *32* edx, *v* esp} := CALL proc15(
                *u32** m[esp + 4] := m[esp + 4]
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param5
                *union* m[esp] := m[esp]
              )
              Reaching definitions: r0=r0{256},   r3=r3{256},   r8=r8{734},   r9=r9{721},   r10=r10{284},
                r11=r11{721},   r15=r15{256},   r24=r24{734},   r25=r25{734},   r26=r26{734},   r27=r27{0},
                r28=r28{256} - 4,   r29=r29{256},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 72]=r24{22},   m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},
                m[r28{0} - 108]=r30{0},   m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},
                m[r28{0} - 124]=%pc,   tmp1=(r28{256} - 4) + 4,   %flags=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),
                %ZF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),   %CF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 )
              Live variables: bl,  cl,  eax in proc proc2
result:    0 *32* eax := -
result:    0 *u32* cl := -
result:    0 *j8* bl := -
dest is not lib
call:  758 {*j32* eax, *8* al, *j32* ecx, *v** edx, *v* esp} := CALL proc12(
                *8** m[esp + 4] := m[esp + 4]
                *union* m[esp] := m[esp]
              )
              Reaching definitions: r0=r0{256},   r3=r3{256},   r8=r8{745},   r9=r9{745},   r10=r10{284},
                r11=r11{745},   r15=r15{256},   r24=r24{745},   r25=r25{750},   r26=r26{745},   r27=r27{0},
                r28=r28{256} - 4,   r29=r29{256},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 72]=r24{22},   m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},
                m[r28{0} - 108]=r30{0},   m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},
                m[r28{0} - 124]=%pc,   tmp1=(r28{256} - 4) + 4,   %flags=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),
                %ZF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 ),   %CF=ADDFLAGS32( r28{256}, 8, r28{256} + 8 )
              Live variables: al,  ecx in proc proc2
result:    0 *8* al := -
result:    0 *j32* ecx := -
dest is not lib
call:  779 {*32* eax, *8* al, *u32* cl, *j8* bl, *32* ecx, *32* edx, *v* esp} := CALL proc15(
                *8** m[esp - 8] := m[esp - 8]
                *u32** local10 := m[esp - 4]
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param5
              )
              Reaching definitions: r0=r0{256},   r3=r3{256},   r8=r8{1717},   r9=r9{1718},   r10=r10{284},
                r11=r11{1719},   r15=r15{256},   r24=r24{1720},   r25=r25{1721},   r26=r26{1722},   r27=r27{0},
                r28=r28{1723} - 12,   r29=r29{256},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 72]=r24{22},   m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},
                m[r28{0} - 108]=r30{0},   m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},
                m[r28{0} - 124]=%pc,   tmp1=tmp1{769},   %flags=SUBFLAGS32( m[r29{256} - 44], 5, tmp1{769} ),
                %ZF=tmp1{769} = 0,   %CF=m[r29{256} - 44] <u 5
              Live variables: bl,  cl,  eax in proc proc2
result:    0 *32* eax := -
result:    0 *u32* cl := -
result:    0 *j8* bl := -
dest is not lib
call:  798 {*32* eax, *8* al, *32* ecx, *32* edx, *v* esp} := CALL proc12(
                *8** m[esp - 8] := m[esp - 8]
                *8** local10 := m[esp - 4]
              )
              Reaching definitions: r0=r0{256},   r3=r3{256},   r8=r8{779},   r9=r9{779},   r10=r10{284},
                r11=r11{779},   r15=r15{256},   r24=r24{784},   r25=(r25{787} *! 9) + 0x40587f,   r26=r26{779},
                r27=r27{0},   r28=r28{1723} - 12,   r29=r29{256},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 72]=r24{22},   m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},
                m[r28{0} - 108]=r30{0},   m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},
                m[r28{0} - 124]=%pc,   tmp1=r25{787} *! 9,
                %flags=ADDFLAGS32( r25{787} *! 9, 0x40587f, (r25{787} *! 9) + 0x40587f ),
                %ZF=ADDFLAGS32( r25{787} *! 9, 0x40587f, (r25{787} *! 9) + 0x40587f ),
                %CF=ADDFLAGS32( r25{787} *! 9, 0x40587f, (r25{787} *! 9) + 0x40587f )
              Live variables: al in proc proc2
result:    0 *8* al := -
dest is not lib
call:  815 {*j32* eax, *j32* ecx, *32* edx, *v* esp} := CALL lstrcmpA(
              )
              Reaching definitions: r0=r0{256},   r3=r3{256},   r8=r8{798},   r9=r9{779},   r10=r10{284},
                r11=r11{779},   r15=r15{256},   r24=r24{798},   r25=r25{798},   r26=(r26{804} *! 9) + 0x40587f,
                r27=r27{0},   r28=r28{1723} - 12,   r29=r29{256},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 72]=r24{22},   m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},
                m[r28{0} - 108]=r30{0},   m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},
                m[r28{0} - 124]=%pc,   tmp1=r26{804} *! 9,
                %flags=ADDFLAGS32( r26{804} *! 9, 0x40587f, (r26{804} *! 9) + 0x40587f ),
                %ZF=ADDFLAGS32( r26{804} *! 9, 0x40587f, (r26{804} *! 9) + 0x40587f ),
                %CF=ADDFLAGS32( r26{804} *! 9, 0x40587f, (r26{804} *! 9) + 0x40587f )
              Live variables: eax,  ecx in proc proc2
result:    0 *j32* eax := -
result:    0 *j32* ecx := -
dest is not lib
call:  827 {*32* eax, *8* al, *u32* cl, *j8* bl, *32* ecx, *32* edx, *v* esp} := CALL proc15(
                *8** m[esp - 16] := m[esp - 16]
                *u32** m[esp - 12] := m[esp - 12]
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param5
              )
              Reaching definitions: r0=r0{256},   r3=r3{256},   r8=r8{798},   r9=r9{779},   r10=r10{284},
                r11=r11{779},   r15=r15{256},   r24=r24{815},   r25=r25{815},   r26=r26{815},   r27=r27{0},
                r28=r28{1723} - 20,   r29=r29{256},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 72]=r24{22},   m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},
                m[r28{0} - 108]=r30{0},   m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},
                m[r28{0} - 124]=%pc,   tmp1=r24{815},   %flags=LOGICALFLAGS32( r24{815} ),
                %ZF=LOGICALFLAGS32( r24{815} ),   %CF=LOGICALFLAGS32( r24{815} )
              Live variables: bl,  cl,  eax in proc proc2
result:    0 *32* eax := -
result:    0 *u32* cl := -
result:    0 *j8* bl := -
dest is not lib
call:  846 {*32* eax, *8* al, *j32* ecx, *32* edx, *v* esp} := CALL proc12(
                *8** m[esp - 16] := m[esp - 16]
                *8** m[esp - 12] := m[esp - 12]
              )
              Reaching definitions: r0=r0{256},   r3=r3{256},   r8=r8{827},   r9=r9{827},   r10=r10{284},
                r11=r11{827},   r15=r15{256},   r24=r24{832},   r25=(r25{835} *! 9) + 0x405881,   r26=r26{827},
                r27=r27{0},   r28=r28{1723} - 20,   r29=r29{256},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 72]=r24{22},   m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},
                m[r28{0} - 108]=r30{0},   m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},
                m[r28{0} - 124]=%pc,   tmp1=r25{835} *! 9,
                %flags=ADDFLAGS32( r25{835} *! 9, 0x405881, (r25{835} *! 9) + 0x405881 ),
                %ZF=ADDFLAGS32( r25{835} *! 9, 0x405881, (r25{835} *! 9) + 0x405881 ),
                %CF=ADDFLAGS32( r25{835} *! 9, 0x405881, (r25{835} *! 9) + 0x405881 )
              Live variables: ecx in proc proc2
result:    0 *j32* ecx := -
dest is not lib
call:  857 {*32* eax, *8* al, *u32* cl, *j8* bl, *32* ecx, *32* edx, *v* esp} := CALL proc15(
                *8** m[esp - 16] := m[esp - 16]
                *u32** m[esp - 12] := m[esp - 12]
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param5
              )
              Reaching definitions: r0=r0{256},   r3=r3{256},   r8=r8{846},   r9=r9{827},   r10=r10{284},
                r11=r11{827},   r15=r15{256},   r24=r24{846},   r25=r25{846},   r26=r26{846},   r27=r27{0},
                r28=r28{1723} - 20,   r29=r29{256},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 72]=r24{22},   m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},
                m[r28{0} - 108]=r30{0},   m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},
                m[r28{0} - 124]=%pc,   tmp1=(r28{1723} - 20) + 4,
                %flags=ADDFLAGS32( r28{1723} - 16, 8, r28{1723} - 8 ),
                %ZF=ADDFLAGS32( r28{1723} - 16, 8, r28{1723} - 8 ),
                %CF=ADDFLAGS32( r28{1723} - 16, 8, r28{1723} - 8 )
              Live variables: bl,  cl,  eax in proc proc2
result:    0 *32* eax := -
result:    0 *u32* cl := -
result:    0 *j8* bl := -
dest is not lib
call:  876 {*j32* eax, *8* al, *j32* ecx, *32* edx, *v* esp} := CALL proc12(
                *8** m[esp - 16] := m[esp - 16]
                *8** m[esp - 12] := m[esp - 12]
              )
              Reaching definitions: r0=r0{256},   r3=r3{256},   r8=r8{857},   r9=r9{857},   r10=r10{284},
                r11=r11{857},   r15=r15{256},   r24=(r24{865} *! 9) + 0x405883,   r25=r25{857},   r26=r26{862},
                r27=r27{0},   r28=r28{1723} - 20,   r29=r29{256},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 72]=r24{22},   m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},
                m[r28{0} - 108]=r30{0},   m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},
                m[r28{0} - 124]=%pc,   tmp1=r24{865} *! 9,
                %flags=ADDFLAGS32( r24{865} *! 9, 0x405883, (r24{865} *! 9) + 0x405883 ),
                %ZF=ADDFLAGS32( r24{865} *! 9, 0x405883, (r24{865} *! 9) + 0x405883 ),
                %CF=ADDFLAGS32( r24{865} *! 9, 0x405883, (r24{865} *! 9) + 0x405883 )
              Live variables: al,  ecx in proc proc2
result:    0 *8* al := -
result:    0 *j32* ecx := -
dest is not lib
call:  898 {*32* eax, *8* al, *u32* cl, *j8* bl, *32* ecx, *32* edx, *v* esp} := CALL proc15(
                *8** m[esp - 8] := m[esp - 8]
                *u32** local10 := m[esp - 4]
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param5
              )
              Reaching definitions: r0=r0{256},   r3=r3{256},   r8=r8{1739},   r9=r9{1740},   r10=r10{284},
                r11=r11{1741},   r15=r15{256},   r24=r24{1742},   r25=r25{1743},   r26=r26{1744},   r27=r27{0},
                r28=r28{1745} - 12,   r29=r29{256},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 72]=r24{22},   m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},
                m[r28{0} - 108]=r30{0},   m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},
                m[r28{0} - 124]=%pc,   tmp1=tmp1{888},   %flags=SUBFLAGS32( m[r29{256} - 44], 5, tmp1{888} ),
                %ZF=tmp1{888} = 0,   %CF=m[r29{256} - 44] <u 5
              Live variables: bl,  cl,  eax in proc proc2
result:    0 *32* eax := -
result:    0 *u32* cl := -
result:    0 *j8* bl := -
dest is not lib
call:  917 {*32* eax, *8* al, *32* ecx, *32* edx, *v* esp} := CALL proc12(
                *8** m[esp - 8] := m[esp - 8]
                *8** local10 := m[esp - 4]
              )
              Reaching definitions: r0=r0{256},   r3=r3{256},   r8=r8{898},   r9=r9{898},   r10=r10{284},
                r11=r11{898},   r15=r15{256},   r24=(r24{906} *! 424) + 0x4058ac,   r25=r25{898},   r26=r26{903},
                r27=r27{0},   r28=r28{1745} - 12,   r29=r29{256},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 72]=r24{22},   m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},
                m[r28{0} - 108]=r30{0},   m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},
                m[r28{0} - 124]=%pc,   tmp1=r24{906} *! 424,
                %flags=ADDFLAGS32( r24{906} *! 424, 0x4058ac, (r24{906} *! 424) + 0x4058ac ),
                %ZF=ADDFLAGS32( r24{906} *! 424, 0x4058ac, (r24{906} *! 424) + 0x4058ac ),
                %CF=ADDFLAGS32( r24{906} *! 424, 0x4058ac, (r24{906} *! 424) + 0x4058ac )
              Live variables: al in proc proc2
result:    0 *8* al := -
dest is not lib
call:  934 {*j32* eax, *j32* ecx, *v** edx, *v* esp} := CALL lstrcmpA(
              )
              Reaching definitions: r0=r0{256},   r3=r3{256},   r8=r8{917},   r9=r9{898},   r10=r10{284},
                r11=r11{898},   r15=r15{256},   r24=r24{917},   r25=(r25{923} *! 424) + 0x4058ac,   r26=r26{917},
                r27=r27{0},   r28=r28{1745} - 12,   r29=r29{256},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 72]=r24{22},   m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},
                m[r28{0} - 108]=r30{0},   m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},
                m[r28{0} - 124]=%pc,   tmp1=r25{923} *! 424,
                %flags=ADDFLAGS32( r25{923} *! 424, 0x4058ac, (r25{923} *! 424) + 0x4058ac ),
                %ZF=ADDFLAGS32( r25{923} *! 424, 0x4058ac, (r25{923} *! 424) + 0x4058ac ),
                %CF=ADDFLAGS32( r25{923} *! 424, 0x4058ac, (r25{923} *! 424) + 0x4058ac )
              Live variables: eax,  ecx in proc proc2
result:    0 *j32* eax := -
result:    0 *j32* ecx := -
dest is not lib
call:  946 {*32* eax, *8* al, *u32* cl, *j8* bl, *32* ecx, *32* edx, *v* esp} := CALL proc15(
                *8** m[esp - 16] := m[esp - 16]
                *u32** m[esp - 12] := m[esp - 12]
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param5
              )
              Reaching definitions: r0=r0{256},   r3=r3{256},   r8=r8{917},   r9=r9{898},   r10=r10{284},
                r11=r11{898},   r15=r15{256},   r24=r24{934},   r25=r25{934},   r26=r26{934},   r27=r27{0},
                r28=r28{1745} - 20,   r29=r29{256},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 72]=r24{22},   m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},
                m[r28{0} - 108]=r30{0},   m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},
                m[r28{0} - 124]=%pc,   tmp1=r24{934},   %flags=LOGICALFLAGS32( r24{934} ),
                %ZF=LOGICALFLAGS32( r24{934} ),   %CF=LOGICALFLAGS32( r24{934} )
              Live variables: bl,  cl,  eax in proc proc2
result:    0 *32* eax := -
result:    0 *u32* cl := -
result:    0 *j8* bl := -
dest is not lib
call:  965 {*32* eax, *8* al, *j32* ecx, *32* edx, *v* esp} := CALL proc12(
                *8** m[esp - 16] := m[esp - 16]
                *8** m[esp - 12] := m[esp - 12]
              )
              Reaching definitions: r0=r0{256},   r3=r3{256},   r8=r8{946},   r9=r9{946},   r10=r10{284},
                r11=r11{946},   r15=r15{256},   r24=(r24{954} *! 424) + 0x405924,   r25=r25{946},   r26=r26{951},
                r27=r27{0},   r28=r28{1745} - 20,   r29=r29{256},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 72]=r24{22},   m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},
                m[r28{0} - 108]=r30{0},   m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},
                m[r28{0} - 124]=%pc,   tmp1=r24{954} *! 424,
                %flags=ADDFLAGS32( r24{954} *! 424, 0x405924, (r24{954} *! 424) + 0x405924 ),
                %ZF=ADDFLAGS32( r24{954} *! 424, 0x405924, (r24{954} *! 424) + 0x405924 ),
                %CF=ADDFLAGS32( r24{954} *! 424, 0x405924, (r24{954} *! 424) + 0x405924 )
              Live variables: ecx in proc proc2
result:    0 *j32* ecx := -
dest is not lib
call:  976 {*32* eax, *8* al, *u32* cl, *j8* bl, *32* ecx, *32* edx, *v* esp} := CALL proc15(
                *8** m[esp - 16] := m[esp - 16]
                *u32** m[esp - 12] := m[esp - 12]
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param5
              )
              Reaching definitions: r0=r0{256},   r3=r3{256},   r8=r8{965},   r9=r9{946},   r10=r10{284},
                r11=r11{946},   r15=r15{256},   r24=r24{965},   r25=r25{965},   r26=r26{965},   r27=r27{0},
                r28=r28{1745} - 20,   r29=r29{256},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 72]=r24{22},   m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},
                m[r28{0} - 108]=r30{0},   m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},
                m[r28{0} - 124]=%pc,   tmp1=(r28{1745} - 20) + 4,
                %flags=ADDFLAGS32( r28{1745} - 16, 8, r28{1745} - 8 ),
                %ZF=ADDFLAGS32( r28{1745} - 16, 8, r28{1745} - 8 ),
                %CF=ADDFLAGS32( r28{1745} - 16, 8, r28{1745} - 8 )
              Live variables: bl,  cl,  eax in proc proc2
result:    0 *32* eax := -
result:    0 *u32* cl := -
result:    0 *j8* bl := -
dest is not lib
call:  995 {*32* eax, *8* al, *j32* ecx, *32* edx, *v* esp} := CALL proc12(
                *8** m[esp - 16] := m[esp - 16]
                *8** m[esp - 12] := m[esp - 12]
              )
              Reaching definitions: r0=r0{256},   r3=r3{256},   r8=r8{976},   r9=r9{976},   r10=r10{284},
                r11=r11{976},   r15=r15{256},   r24=r24{976},   r25=r25{981},   r26=(r26{984} *! 424) + 0x40594d,
                r27=r27{0},   r28=r28{1745} - 20,   r29=r29{256},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 72]=r24{22},   m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},
                m[r28{0} - 108]=r30{0},   m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},
                m[r28{0} - 124]=%pc,   tmp1=r26{984} *! 424,
                %flags=ADDFLAGS32( r26{984} *! 424, 0x40594d, (r26{984} *! 424) + 0x40594d ),
                %ZF=ADDFLAGS32( r26{984} *! 424, 0x40594d, (r26{984} *! 424) + 0x40594d ),
                %CF=ADDFLAGS32( r26{984} *! 424, 0x40594d, (r26{984} *! 424) + 0x40594d )
              Live variables: ecx in proc proc2
result:    0 *j32* ecx := -
dest is not lib
call: 1006 {*32* eax, *8* al, *u32* cl, *j8* bl, *32* ecx, *32* edx, *v* esp} := CALL proc15(
                *8** m[esp - 16] := m[esp - 16]
                *u32** m[esp - 12] := m[esp - 12]
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param5
              )
              Reaching definitions: r0=r0{256},   r3=r3{256},   r8=r8{995},   r9=r9{976},   r10=r10{284},
                r11=r11{976},   r15=r15{256},   r24=r24{995},   r25=r25{995},   r26=r26{995},   r27=r27{0},
                r28=r28{1745} - 20,   r29=r29{256},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 72]=r24{22},   m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},
                m[r28{0} - 108]=r30{0},   m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},
                m[r28{0} - 124]=%pc,   tmp1=(r28{1745} - 20) + 4,
                %flags=ADDFLAGS32( r28{1745} - 16, 8, r28{1745} - 8 ),
                %ZF=ADDFLAGS32( r28{1745} - 16, 8, r28{1745} - 8 ),
                %CF=ADDFLAGS32( r28{1745} - 16, 8, r28{1745} - 8 )
              Live variables: bl,  cl,  eax in proc proc2
result:    0 *32* eax := -
result:    0 *u32* cl := -
result:    0 *j8* bl := -
dest is not lib
call: 1025 {*j32* eax, *8* al, *j32* ecx, *v** edx, *v* esp} := CALL proc12(
                *8** m[esp - 16] := m[esp - 16]
                *8** m[esp - 12] := m[esp - 12]
              )
              Reaching definitions: r0=r0{256},   r3=r3{256},   r8=r8{1006},   r9=r9{1006},   r10=r10{284},
                r11=r11{1006},   r15=r15{256},   r24=r24{1011},   r25=(r25{1014} *! 424) + 0x405a52,   r26=r26{1006},
                r27=r27{0},   r28=r28{1745} - 20,   r29=r29{256},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 72]=r24{22},   m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},
                m[r28{0} - 108]=r30{0},   m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},
                m[r28{0} - 124]=%pc,   tmp1=r25{1014} *! 424,
                %flags=ADDFLAGS32( r25{1014} *! 424, 0x405a52, (r25{1014} *! 424) + 0x405a52 ),
                %ZF=ADDFLAGS32( r25{1014} *! 424, 0x405a52, (r25{1014} *! 424) + 0x405a52 ),
                %CF=ADDFLAGS32( r25{1014} *! 424, 0x405a52, (r25{1014} *! 424) + 0x405a52 )
              Live variables: al in proc proc2
result:    0 *8* al := -
dest is not lib
call: 1039 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL CreateMutexA(
              )
              Reaching definitions: r0=r0{256},   r3=r3{256},   r8=r8{1739},   r9=r9{1740},   r10=r10{284},
                r11=r11{1741},   r15=r15{256},   r24=r24{1742},   r25=r25{1743},   r26=r26{1744},   r27=r27{0},
                r28=r28{1745} - 16,   r29=r29{256},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 72]=r24{22},   m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},
                m[r28{0} - 108]=r30{0},   m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},
                m[r28{0} - 124]=%pc,   tmp1=tmp1{888},   %flags=SUBFLAGS32( m[r29{256} - 44], 5, tmp1{888} ),
                %ZF=tmp1{888} = 0,   %CF=m[r29{256} - 44] <u 5
              Live variables:  in proc proc2
dest is not lib
call: 1043 {*32* eax, *j32* ecx, *32* edx, *v** esp} := CALL GetLastError(
              )
              Reaching definitions: r0=r0{256},   r3=r3{256},   r8=r8{1739},   r9=r9{1740},   r10=r10{284},
                r11=r11{1741},   r15=r15{256},   r24=r24{1039},   r25=r25{1039},   r26=r26{1039},   r27=r27{0},
                r28=r28{1745} - 16,   r29=r29{256},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 72]=r24{22},   m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},
                m[r28{0} - 108]=r30{0},   m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},
                m[r28{0} - 124]=%pc,   tmp1=tmp1{888},   %flags=SUBFLAGS32( m[r29{256} - 44], 5, tmp1{888} ),
                %ZF=tmp1{888} = 0,   %CF=m[r29{256} - 44] <u 5
              Live variables: eax in proc proc2
result:    0 *32* eax := -
dest is not lib
call: 1057 {*32* eax, *32* ecx, *32* edx, *v* esp} := CALL lstrcmpA(
              )
              Reaching definitions: r0=r0{256},   r3=r3{256},   r8=r8{1739},   r9=r9{1740},   r10=r10{284},
                r11=r11{1741},   r15=r15{256},   r24=r24{1043},   r25=r25{1043},   r26=r26{1043},   r27=r27{0},
                r28=r28{1745} - 24,   r29=r29{256},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 72]=r24{22},   m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},
                m[r28{0} - 108]=r30{0},   m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},
                m[r28{0} - 124]=%pc,   tmp1=r24{1043} - 183,   %flags=SUBFLAGS32( r24{1043}, 183, r24{1043} - 183 ),
                %ZF=(r24{1043} - 183) = 0,   %CF=r24{1043} <u 183
              Live variables: eax,  ecx,  edx in proc proc2
result:    0 *32* eax := -
result:    0 *32* ecx := -
result:    0 *32* edx := -
dest is not lib
call: 1064 <all> := CALL proc16(<all>)
              Reaching definitions: r0=r0{256},   r3=r3{256},   r8=r8{1739},   r9=r9{1740},   r10=r10{284},
                r11=r11{1741},   r15=r15{256},   r24=r24{1057},   r25=r25{1057},   r26=r26{1057},   r27=r27{0},
                r28=r28{1745} - 24,   r29=r29{256},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 72]=r24{22},   m[r28{0} - 76]=r24{34},   m[r28{0} - 80]=r24{46},   m[r28{0} - 104]=r27{0},
                m[r28{0} - 108]=r30{0},   m[r28{0} - 112]=r31{0},   m[r28{0} - 116]=%pc,   m[r28{0} - 120]=r26{151},
                m[r28{0} - 124]=%pc,   tmp1=r24{1057},   %flags=LOGICALFLAGS32( eax ),   %ZF=LOGICALFLAGS32( eax ),
                %CF=LOGICALFLAGS32( eax )
              Live variables:  in proc proc2
dest is not lib
call: 1085 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL lstrcmpA(
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1105 {*32* eax, *32* esi, *8* al, *8* r9, *8* dl, *8* bl, *v* ecx, *v* edx, *v* esp, *32* ebp, *32* edi} := CALL proc19(
                *32* m[r28 + 4] := m[r28 + 4]
                *u32* cl := r9
                *u8* dl := r10
                *j8* bl := r11
                *32* ebx := r27
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1117 {*32* eax, *8* al, *32* ecx, *32* edx, *v* esp} := CALL proc12(
                *8** m[r28 + 4] := m[r28 + 4]
                *8** m[r28 + 8] := m[r28 + 8]
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1126 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL proc6(
                *DWORD* m[r28 + 4] := m[r28 + 4]
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1238 {*32* eax, *8* al, *32* ecx, *32* edx, *v* esp} := CALL proc12(
                *8** m[r28 + 4] := m[r28 + 4]
                *8** m[r28 + 8] := m[r28 + 8]
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1146 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL lstrcmpA(
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1171 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL lstrcmpA(
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1194 {*v* eax, *32* esi, *v* ecx, *v* edx, *v* esp, *32* edi} := CALL proc21(
                *32* m[r28 + 4] := m[r28 + 4]
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1206 {*32* eax, *8* al, *32* ecx, *32* edx, *v* esp} := CALL proc12(
                *8** m[r28 + 4] := m[r28 + 4]
                *8** m[r28 + 8] := m[r28 + 8]
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1218 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL lstrcatA(
                *LPSTR* m[r28 + 4] := m[r28 + 4]
                *LPSTR* m[r28 + 8] := m[r28 + 8]
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1227 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL lstrcatA(
                *LPSTR* m[r28 + 4] := m[r28 + 4]
                *LPSTR* m[r28 + 8] := m[r28 + 8]
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1184 {*32* eax, *8* al, *32* ecx, *32* edx, *v* esp} := CALL proc12(
                *8** m[r28 + 4] := m[r28 + 4]
                *8** m[r28 + 8] := m[r28 + 8]
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1159 {*32* eax, *8* al, *32* ecx, *32* edx, *v* esp} := CALL proc12(
                *8** m[r28 + 4] := m[r28 + 4]
                *8** m[r28 + 8] := m[r28 + 8]
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1250 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL lstrcmpA(
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1269 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL CreateThread(
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1276 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL proc6(
                *DWORD* m[r28 + 4] := m[r28 + 4]
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1288 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL proc6(
                *DWORD* m[r28 + 4] := m[r28 + 4]
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1314 {*32* eax, *8* al, *32* ecx, *32* edx, *v* esp} := CALL proc12(
                *8** m[r28 + 4] := m[r28 + 4]
                *8** m[r28 + 8] := m[r28 + 8]
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1323 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL proc6(
                *DWORD* m[r28 + 4] := m[r28 + 4]
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1341 {*32* eax, *8* al, *8* dl, *32* ecx, *32* edx, *v* esp} := CALL proc20(
                *i64* m[r28 + 4] := m[r28 + 4]
                *8** m[r28 + 8] := m[r28 + 8]
                *i64* m[r28 + 12] := m[r28 + 12]
                *u8* dl := r10
                *8** ecx := r25
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1354 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL lstrcatA(
                *LPSTR* m[r28 + 4] := m[r28 + 4]
                *LPSTR* m[r28 + 8] := m[r28 + 8]
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1374 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL lstrcmpA(
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1394 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL lstrcmpA(
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1410 {*32* eax, *16* ax, *16* bx, *8* al, *8* dl, *8* bl, *8* bh, *v* ecx, *v* edx, *v* esp, *32* ebp} := CALL proc13(
                *16* ax := r0
                *16* bx := r3
                *u8* dl := r10
                *8* bl := r11
                *8* bh := r15
                *32* ebx := r27
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1436 {*32* eax, *8* al, *8* r9, *8* dl, *32* ecx, *32* edx, *v* esp} := CALL proc14(
                *v** m[r28 + 4] := m[r28 + 4]
                *32* m[r28 + 8] := m[r28 + 8]
                *u32* m[r28 + 12] := m[r28 + 12]
                *u64* m[r28 + 16] := m[r28 + 16]
                *u32* cl := r9
                *u8* dl := r10
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1467 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL lstrcmpA(
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1476 {*v* eax, *32* esi, *v* ecx, *v* edx, *v* esp, *32* edi} := CALL proc21(
                *32* m[r28 + 4] := m[r28 + 4]
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1488 {*32* eax, *8* al, *32* ecx, *32* edx, *v* esp} := CALL proc12(
                *8** m[r28 + 4] := m[r28 + 4]
                *8** m[r28 + 8] := m[r28 + 8]
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1500 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL lstrcatA(
                *LPSTR* m[r28 + 4] := m[r28 + 4]
                *LPSTR* m[r28 + 8] := m[r28 + 8]
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1510 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL lstrcatA(
                *LPSTR* m[r28 + 4] := m[r28 + 4]
                *LPSTR* m[r28 + 8] := m[r28 + 8]
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1519 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL lstrcatA(
                *LPSTR* m[r28 + 4] := m[r28 + 4]
                *LPSTR* m[r28 + 8] := m[r28 + 8]
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1528 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL lstrcatA(
                *LPSTR* m[r28 + 4] := m[r28 + 4]
                *LPSTR* m[r28 + 8] := m[r28 + 8]
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1537 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL lstrcatA(
                *LPSTR* m[r28 + 4] := m[r28 + 4]
                *LPSTR* m[r28 + 8] := m[r28 + 8]
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1555 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL lstrcatA(
                *LPSTR* m[r28 + 4] := m[r28 + 4]
                *LPSTR* m[r28 + 8] := m[r28 + 8]
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1574 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL CreateFileA(
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1597 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL WriteFile(
                *HANDLE* m[r28 + 4] := m[r28 + 4]
                *LPCVOID* m[r28 + 8] := m[r28 + 8]
                *DWORD* m[r28 + 12] := m[r28 + 12]
                *LPDWORD* m[r28 + 16] := m[r28 + 16]
                *LPOVERLAPPED* m[r28 + 20] := m[r28 + 20]
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1604 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL CloseHandle(
                *HANDLE* m[r28 + 4] := m[r28 + 4]
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1655 {*v* eax, *v* ecx, *v* edx, *v* esp} := CALL proc22(
                *LPVOID* m[r28 + 4] := m[r28 + 4]
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1635 {*32* eax, *16* ax, *16* bx, *8* al, *8* bl, *8* bh, *32* ecx, *32* edx, *v* esp, *32* ebp} := CALL proc23(
                *j32* m[r28 - 804] := m[r28 - 804]
                *LPSTR* m[r28 + 4] := m[r28 + 4]
                *16** m[r28 + 8] := m[r28 + 8]
                *32* m[r28 + 12] := m[r28 + 12]
                *u16* ax := r0
                *16* dx := r2
                *j16* bx := r3
                *j8* bl := r11
                *u32* bh := r15
                *32* ebx := r27
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1671 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL WaitForSingleObject(
                *HANDLE* m[r28 + 4] := m[r28 + 4]
                *DWORD* m[r28 + 8] := m[r28 + 8]
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1092 {*v* eax, *v* ecx, *v* edx, *v* esp, *32* ebp} := CALL proc18(
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call:    4 {*32* r24, *v** esp} := CALL proc4(
              )
              Reaching definitions: r24=r24{0},   r28=r28{0} - 4,   r30=r30{0},   m[r28{0} - 4]=%pc
              Live variables: esp in proc proc3
result:    0 *v** esp := -
dest is not lib
call:   14 {*32* r24, *32* esi, *v** esp} := CALL proc1(
                *32** m[esp - 12] := m[esp - 12]
                *32* esi := param1
              )
              Reaching definitions: r24=r24{4},   r28=r28{4} - 16,   r30=r30{0},   m[r28{0} - 4]=%pc
              Live variables: esi,  esp in proc proc3
result:    0 *32* esi := -
result:    0 *v** esp := -
dest is not lib
call:   24 {*32* r24, *32* esi, *32* esp} := CALL proc1(
                *32** m[esp - 12] := m[esp - 12]
                *32* esi := esi
              )
              Reaching definitions: r24=r24{14},   r28=r28{14} - 16,   r30=r30{14},   m[r28{0} - 4]=%pc
              Live variables: esp in proc proc3
result:    0 *32* esp := -
dest is not lib
call:   33 {*32* r24, *v* r25, *v* r26, *v* esp} := CALL ExitProcess(
                *UINT* m[esp + 20] := m[esp + 20]
              )
              Reaching definitions: r24=r24{24},   r28=r28{24} + 16,   r30=r30{24},   m[r28{0} - 4]=%pc,   tmp1=r28{24}
                %flags=ADDFLAGS32( r28{24}, 24, r28{24} + 24 ),   %ZF=ADDFLAGS32( r28{24}, 24, r28{24} + 24 ),
                %CF=ADDFLAGS32( r28{24}, 24, r28{24} + 24 )
              Live variables:  in proc proc3
dest is not lib
call:   43 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL ExitProcess(
                *UINT* m[esp] := m[esp]
              )
              Reaching definitions: r0=r0{255},   r3=r3{256},   r8=r8{191},   r9=r9{192},   r10=r10{257},
                r15=r15{258},   r24=r24{193},   r25=r25{194},   r26=r26{195},   r27=r27{259},   r28=r28{196} - 4,
                r29=r29{197},   r30=r30{198},   m[r28{0} - 4]=m[r28{0} - 4]{248},   m[r28{0} - 76]=m[r28{0} - 76]{249},
                tmp1=tmp1{199},   tmpb=tmpb{200},   %flags=%flags{201},   %ZF=%ZF{202},   %CF=%CF{203}
              Live variables:  in proc _start
dest is not lib
call:   31 {*32* eax, *32* esi, *32** esp} := CALL proc1(
                *32** m[esp_1 - 12] := m[esp_1 - 12]
                *32* esi := param6
              )
              Reaching definitions: r0=r0{250},   r3=r3{251},   r8=r8{178},   r9=r9{0},   r10=r10{252},   r15=r15{253},
                r24=r24{180},   r25=r25{0},   r26=r26{0},   r27=r27{254},   r28=r28{183} - 16,   r29=r29{184},
                r30=r30{0},   m[r28{0} - 4]=m[r28{0} - 4]{246},   m[r28{0} - 76]=m[r28{0} - 76]{247},   tmp1=tmp1{186},
                tmpb=tmpb{0},   %flags=%flags{188},   %ZF=%ZF{189},   %CF=%CF{190}
              Live variables: eax,  esi,  esp in proc _start
result:    0 *32* eax := -
result:    0 *32* esi := -
result:    0 *32** esp := -
dest is not lib
call:   56 {*32* eax, *32* esi, *union** esp} := CALL proc1(
                *32** local1 := m[esp - 4]
                *32* esi := esi
              )
              Reaching definitions: r0=r0{250},   r3=r3{251},   r8=r8{178},   r9=r9{0},   r10=r10{252},   r15=r15{253},
                r24=r24{31},   r25=r25{0},   r26=r26{0},   r27=r27{254},   r28=r28{31} - 8,   r29=r29{184},
                r30=r30{31},   m[r28{0} - 4]=m[r28{0} - 4]{246},   m[r28{0} - 76]=m[r28{0} - 76]{247},   tmp1=r24{31},
                tmpb=tmpb{0},   %flags=LOGICALFLAGS32( r24{31} ),   %ZF=LOGICALFLAGS32( r24{31} ),
                %CF=LOGICALFLAGS32( r24{31} )
              Live variables: esp in proc _start
result:    0 *union** esp := -
dest is not lib
call:   63 {*j32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetCommandLineA(
              )
              Reaching definitions: r0=r0{250},   r3=r3{251},   r8=r8{178},   r9=r9{0},   r10=r10{252},   r15=r15{253},
                r24=r24{56},   r25=r25{0},   r26=r26{0},   r27=r27{254},   r28=r28{56} + 8,   r29=r29{184},
                r30=r30{56},   m[r28{0} - 4]=m[r28{0} - 4]{246},   m[r28{0} - 76]=m[r28{0} - 76]{247},   tmp1=r28{56},
                tmpb=tmpb{0},   %flags=ADDFLAGS32( r28{56}, 12, r28{56} + 12 ),
                %ZF=ADDFLAGS32( r28{56}, 12, r28{56} + 12 ),   %CF=ADDFLAGS32( r28{56}, 12, r28{56} + 12 )
              Live variables: eax in proc _start
result:    0 *j32* eax := -
dest is not lib
call:  121 {*j32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetStartupInfoA(
              )
              Reaching definitions: r0=r0{250},   r3=r3{251},   r8=truncu(32,8,r29{184} - 68),   r9=r9{231},
                r10=r10{252},   r15=r15{253},   r24=r29{184} - 68,   r25=r25{63},   r26=r26{63},   r27=r27{254},
                r28=r28{56} + 4,   r29=r29{184},   r30=r30{233},   m[r28{0} - 4]=m[r28{0} - 4]{246},
                m[r28{0} - 76]=m[r28{0} - 76]{247},   tmp1=tmp1{234},   tmpb=tmpb{239},
                %flags=LOGICALFLAGS32( m[r29{184} - 24] ),   %ZF=LOGICALFLAGS32( m[r29{184} - 24] ),
                %CF=LOGICALFLAGS32( m[r29{184} - 24] )
              Live variables:  in proc _start
dest is not lib
call:  154 {*32* eax, *32* ecx, *32* edx, *v* esp} := CALL GetModuleHandleA(
              )
              Reaching definitions: r0=r0{250},   r3=r3{251},   r8=r8{243},   r9=r9{231},   r10=r10{252},
                r15=r15{253},   r24=r24{244},   r25=r25{121},   r26=r26{121},   r27=r27{254},   r28=(r28{56} + 8) - 20,
                r29=r29{184},   r30=r30{233},   m[r28{0} - 4]=m[r28{0} - 4]{246},   m[r28{0} - 76]=m[r28{0} - 76]{247},
                tmp1=r24{121} - 0x54524357,   tmpb=tmpb{132},   %flags=LOGICALFLAGS8( tmpb{132} ),
                %ZF=LOGICALFLAGS8( tmpb{132} ),   %CF=LOGICALFLAGS8( tmpb{132} )
              Live variables: eax in proc _start
result:    0 *32* eax := -
dest is not lib
call:  160 CALL proc2(
                *16* ax := param1
                *16* bx := param2
                *u8* dl := param3
                *8* bh := param4
                *32* ebx := param5
              )
              Reaching definitions: r0=r0{250},   r3=r3{251},   r8=r8{243},   r9=r9{231},   r10=r10{252},
                r15=r15{253},   r24=r24{154},   r25=r25{154},   r26=r26{154},   r27=r27{254},   r28=(r28{56} + 8) - 24,
                r29=r29{184},   r30=r30{233},   m[r28{0} - 4]=m[r28{0} - 4]{246},   m[r28{0} - 76]=m[r28{0} - 76]{247},
                tmp1=r24{121} - 0x54524357,   tmpb=tmpb{132},   %flags=LOGICALFLAGS8( tmpb{132} ),
                %ZF=LOGICALFLAGS8( tmpb{132} ),   %CF=LOGICALFLAGS8( tmpb{132} )
              Live variables:  in proc _start
dest is not lib
call:  166 CALL proc3(
                *union* esi := esi
              )
              Reaching definitions: r0=r0{250},   r3=r3{251},   r8=r8{243},   r9=r9{231},   r10=r10{252},
                r15=r15{253},   r24=r24{154},   r25=r25{154},   r26=r26{154},   r27=r27{254},   r28=(r28{56} + 8) - 32,
                r29=r29{184},   r30=r30{233},   m[r28{0} - 4]=m[r28{0} - 4]{246},   m[r28{0} - 76]=m[r28{0} - 76]{247},
                tmp1=r24{121} - 0x54524357,   tmpb=tmpb{132},   %flags=LOGICALFLAGS8( tmpb{132} ),
                %ZF=LOGICALFLAGS8( tmpb{132} ),   %CF=LOGICALFLAGS8( tmpb{132} )
              Live variables:  in proc _start
dest is not lib
call:   26 {*v* r24, *32* r25, *32* r26} := CALL proc22(
                *32** local1 := a[0x3833]
              )
              Reaching definitions: r24=r24{39},   r25=r28{0} - 12,   r26=r28{0} - 12,   r28=(r28{0} - 16) - 8,
                r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{47},   m[r28{0} - 12]=0x3833,
                m[r28{0} - 16]=r28{0} - 12,   m[r28{0} - 20]=r28{0} - 12,   m[r28{0} - 24]=%pc,
                tmp1=m[r28{0} - 8]{47} - 0x4c4b40,
                %flags=SUBFLAGS32( m[(r28{0} - 4) - 4], 0x4c4b40, m[r28{0} - 8]{47} - 0x4c4b40 ),
                %ZF=(m[r28{0} - 8]{47} - 0x4c4b40) = 0,   %CF=m[(r28{0} - 4) - 4] <u 0x4c4b40
              Live variables:  in proc proc5
dest is not lib
call:   17 {*32* eax, *32* ecx, *32* edx} := CALL HeapAlloc(
                *HANDLE* local0 := local0
                *DWORD* local1 := 0
                *DWORD* local2 := eax
              )
              Reaching definitions: r24=r24{21},   r28=r28{0} - 16,   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} - 4]=r24{21},   m[r28{0} - 8]=0,   m[r28{0} - 12]=m[r28{0} - 12]{12},   m[r28{0} - 16]=%pc,
                tmp1=tmp1{22},   %flags=%flags{23},   %ZF=%ZF{24},   %CF=%CF{25}
              Live variables: eax,  ecx,  edx in proc proc6
result:    0 *32* eax := -
result:    0 *32* ecx := -
result:    0 *32* edx := -
dest is not lib
call:   11 {*32* eax, *8* r9, *u8** edx} := CALL proc29(
                *v** local0 := 0x405068
                *i64* local1 := 14
                *32* eax := param1
                *u8** edx := param2
              )
              Reaching definitions: r24=r24{0},   r26=r26{0},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=14,   m[r28{0} - 12]=0x405068,   m[r28{0} - 16]=%pc
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:   22 {*32* eax, *8* r9, *u8** edx} := CALL proc29(
                *v** local0 := 0x405078
                *i64* local1 := 20
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{11},   r24=r24{11},   r26=r26{11},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=20,   m[r28{0} - 12]=0x405078,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:   33 {*32* eax, *8* r9, *u8** edx} := CALL proc29(
                *v** local0 := 0x405090
                *i64* local1 := 20
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{22},   r24=r24{22},   r26=r26{22},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=20,   m[r28{0} - 12]=0x405090,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:   44 {*32* eax, *8* r9, *u8** edx} := CALL proc29(
                *v** local0 := 0x4050a8
                *i64* local1 := 18
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{33},   r24=r24{33},   r26=r26{33},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=18,   m[r28{0} - 12]=0x4050a8,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:   55 {*32* eax, *8* r9, *u8** edx} := CALL proc29(
                *v** local0 := 0x4050bc
                *i64* local1 := 18
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{44},   r24=r24{44},   r26=r26{44},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=18,   m[r28{0} - 12]=0x4050bc,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:   66 {*32* eax, *8* r9, *u8** edx} := CALL proc29(
                *v** local0 := 0x4050d0
                *i64* local1 := 14
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{55},   r24=r24{55},   r26=r26{55},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=14,   m[r28{0} - 12]=0x4050d0,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:   77 {*32* eax, *8* r9, *u8** edx} := CALL proc29(
                *v** local0 := 0x4050fc
                *i64* local1 := 14
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{66},   r24=r24{66},   r26=r26{66},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=14,   m[r28{0} - 12]=0x4050fc,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:   88 {*32* eax, *8* r9, *u8** edx} := CALL proc29(
                *v** local0 := 0x40510c
                *i64* local1 := 13
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{77},   r24=r24{77},   r26=r26{77},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=13,   m[r28{0} - 12]=0x40510c,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:   99 {*32* eax, *8* r9, *u8** edx} := CALL proc29(
                *v** local0 := 0x40511c
                *i64* local1 := 14
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{88},   r24=r24{88},   r26=r26{88},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=14,   m[r28{0} - 12]=0x40511c,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  110 {*32* eax, *8* r9, *u8** edx} := CALL proc29(
                *v** local0 := 0x40512c
                *i64* local1 := 12
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{99},   r24=r24{99},   r26=r26{99},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=12,   m[r28{0} - 12]=0x40512c,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  121 {*32* eax, *8* r9, *u8** edx} := CALL proc29(
                *v** local0 := 0x40513c
                *i64* local1 := 12
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{110},   r24=r24{110},   r26=r26{110},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=12,   m[r28{0} - 12]=0x40513c,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  132 {*32* eax, *8* r9, *u8** edx} := CALL proc29(
                *v** local0 := 0x405278
                *i64* local1 := 13
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{121},   r24=r24{121},   r26=r26{121},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=13,   m[r28{0} - 12]=0x405278,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  143 {*32* eax, *8* r9, *u8** edx} := CALL proc29(
                *v** local0 := 0x405288
                *i64* local1 := 16
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{132},   r24=r24{132},   r26=r26{132},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=16,   m[r28{0} - 12]=0x405288,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  154 {*32* eax, *8* r9, *u8** edx} := CALL proc29(
                *v** local0 := 0x4052e4
                *i64* local1 := 23
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{143},   r24=r24{143},   r26=r26{143},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=23,   m[r28{0} - 12]=0x4052e4,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  165 {*32* eax, *8* r9, *u8** edx} := CALL proc29(
                *v** local0 := 0x40529c
                *i64* local1 := 13
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{154},   r24=r24{154},   r26=r26{154},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=13,   m[r28{0} - 12]=0x40529c,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  176 {*32* eax, *8* r9, *u8** edx} := CALL proc29(
                *v** local0 := 0x4052ac
                *i64* local1 := 14
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{165},   r24=r24{165},   r26=r26{165},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=14,   m[r28{0} - 12]=0x4052ac,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  187 {*32* eax, *8* r9, *u8** edx} := CALL proc29(
                *v** local0 := 0x4052bc
                *i64* local1 := 11
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{176},   r24=r24{176},   r26=r26{176},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=11,   m[r28{0} - 12]=0x4052bc,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  198 {*32* eax, *8* r9, *u8** edx} := CALL proc29(
                *v** local0 := 0x4052fc
                *i64* local1 := 45
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{187},   r24=r24{187},   r26=r26{187},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=45,   m[r28{0} - 12]=0x4052fc,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  209 {*32* eax, *8* r9, *u8** edx} := CALL proc29(
                *v** local0 := 0x40532c
                *i64* local1 := 53
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{198},   r24=r24{198},   r26=r26{198},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=53,   m[r28{0} - 12]=0x40532c,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  220 {*32* eax, *8* r9, *u8** edx} := CALL proc29(
                *v** local0 := 0x405378
                *i64* local1 := 10
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{209},   r24=r24{209},   r26=r26{209},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=10,   m[r28{0} - 12]=0x405378,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  231 {*32* eax, *8* r9, *u8** edx} := CALL proc29(
                *v** local0 := 0x405384
                *i64* local1 := 9
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{220},   r24=r24{220},   r26=r26{220},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=9,   m[r28{0} - 12]=0x405384,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  242 {*32* eax, *8* r9, *u8** edx} := CALL proc29(
                *v** local0 := 0x4053b0
                *i64* local1 := 11
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{231},   r24=r24{231},   r26=r26{231},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=11,   m[r28{0} - 12]=0x4053b0,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  253 {*32* eax, *8* r9, *u8** edx} := CALL proc29(
                *v** local0 := 0x4053bc
                *i64* local1 := 9
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{242},   r24=r24{242},   r26=r26{242},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=9,   m[r28{0} - 12]=0x4053bc,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  264 {*32* eax, *8* r9, *u8** edx} := CALL proc29(
                *v** local0 := 0x4053c8
                *i64* local1 := 18
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{253},   r24=r24{253},   r26=r26{253},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=18,   m[r28{0} - 12]=0x4053c8,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  275 {*32* eax, *8* r9, *u8** edx} := CALL proc29(
                *v** local0 := 0x4050e0
                *i64* local1 := 25
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{264},   r24=r24{264},   r26=r26{264},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=25,   m[r28{0} - 12]=0x4050e0,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  286 {*32* eax, *8* r9, *u8** edx} := CALL proc29(
                *v** local0 := 0x4051dc
                *i64* local1 := 13
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{275},   r24=r24{275},   r26=r26{275},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=13,   m[r28{0} - 12]=0x4051dc,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  297 {*32* eax, *8* r9, *u8** edx} := CALL proc29(
                *v** local0 := 0x4051ec
                *i64* local1 := 16
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{286},   r24=r24{286},   r26=r26{286},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=16,   m[r28{0} - 12]=0x4051ec,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  308 {*32* eax, *8* r9, *u8** edx} := CALL proc29(
                *v** local0 := 0x405200
                *i64* local1 := 16
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{297},   r24=r24{297},   r26=r26{297},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=16,   m[r28{0} - 12]=0x405200,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  319 {*32* eax, *8* r9, *u8** edx} := CALL proc29(
                *v** local0 := 0x405214
                *i64* local1 := 19
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{308},   r24=r24{308},   r26=r26{308},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=19,   m[r28{0} - 12]=0x405214,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  330 {*32* eax, *8* r9, *u8** edx} := CALL proc29(
                *v** local0 := 0x40503c
                *i64* local1 := 12
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{319},   r24=r24{319},   r26=r26{319},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=12,   m[r28{0} - 12]=0x40503c,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  341 {*32* eax, *8* r9, *u8** edx} := CALL proc29(
                *v** local0 := 0x40504c
                *i64* local1 := 12
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{330},   r24=r24{330},   r26=r26{330},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=12,   m[r28{0} - 12]=0x40504c,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  352 {*32* eax, *8* r9, *u8** edx} := CALL proc29(
                *v** local0 := 0x405030
                *i64* local1 := 9
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{341},   r24=r24{341},   r26=r26{341},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=9,   m[r28{0} - 12]=0x405030,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  363 {*32* eax, *8* r9, *u8** edx} := CALL proc29(
                *v** local0 := 0x40505c
                *i64* local1 := 11
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{352},   r24=r24{352},   r26=r26{352},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=11,   m[r28{0} - 12]=0x40505c,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  374 {*32* eax, *8* r9, *u8** edx} := CALL proc29(
                *v** local0 := 0x405260
                *i64* local1 := 10
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{363},   r24=r24{363},   r26=r26{363},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=10,   m[r28{0} - 12]=0x405260,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  385 {*32* eax, *8* r9, *u8** edx} := CALL proc29(
                *v** local0 := 0x4053a4
                *i64* local1 := 8
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{374},   r24=r24{374},   r26=r26{374},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=8,   m[r28{0} - 12]=0x4053a4,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  396 {*32* eax, *8* r9, *u8** edx} := CALL proc29(
                *v** local0 := 0x4053dc
                *i64* local1 := 16
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{385},   r24=r24{385},   r26=r26{385},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=16,   m[r28{0} - 12]=0x4053dc,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  407 {*32* eax, *8* r9, *u8** edx} := CALL proc29(
                *v** local0 := 0x4052d8
                *i64* local1 := 11
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{396},   r24=r24{396},   r26=r26{396},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=11,   m[r28{0} - 12]=0x4052d8,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  418 {*32* eax, *8* r9, *u8** edx} := CALL proc29(
                *v** local0 := 0x40526c
                *i64* local1 := 11
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{407},   r24=r24{407},   r26=r26{407},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=11,   m[r28{0} - 12]=0x40526c,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  429 {*32* eax, *8* r9, *u8** edx} := CALL proc29(
                *v** local0 := 0x4052c8
                *i64* local1 := 13
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{418},   r24=r24{418},   r26=r26{418},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=13,   m[r28{0} - 12]=0x4052c8,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  440 {*32* eax, *8* r9, *u8** edx} := CALL proc29(
                *v** local0 := 0x405364
                *i64* local1 := 3
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{429},   r24=r24{429},   r26=r26{429},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=3,   m[r28{0} - 12]=0x405364,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  451 {*32* eax, *8* r9, *u8** edx} := CALL proc29(
                *v** local0 := 0x405368
                *i64* local1 := 3
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{440},   r24=r24{440},   r26=r26{440},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=3,   m[r28{0} - 12]=0x405368,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  462 {*32* eax, *8* r9, *u8** edx} := CALL proc29(
                *v** local0 := 0x40536c
                *i64* local1 := 3
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{451},   r24=r24{451},   r26=r26{451},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=3,   m[r28{0} - 12]=0x40536c,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  473 {*32* eax, *8* r9, *u8** edx} := CALL proc29(
                *v** local0 := 0x405370
                *i64* local1 := 2
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{462},   r24=r24{462},   r26=r26{462},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=2,   m[r28{0} - 12]=0x405370,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  484 {*32* eax, *8* r9, *u8** edx} := CALL proc29(
                *v** local0 := 0x405374
                *i64* local1 := 2
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{473},   r24=r24{473},   r26=r26{473},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=2,   m[r28{0} - 12]=0x405374,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  495 {*32* eax, *8* r9, *u8** edx} := CALL proc29(
                *v** local0 := 0x405398
                *i64* local1 := 3
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{484},   r24=r24{484},   r26=r26{484},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=3,   m[r28{0} - 12]=0x405398,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  506 {*32* eax, *8* r9, *u8** edx} := CALL proc29(
                *v** local0 := 0x405390
                *i64* local1 := 7
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{495},   r24=r24{495},   r26=r26{495},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=7,   m[r28{0} - 12]=0x405390,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  517 {*32* eax, *8* r9, *u8** edx} := CALL proc29(
                *v** local0 := 0x40539c
                *i64* local1 := 4
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{506},   r24=r24{506},   r26=r26{506},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=4,   m[r28{0} - 12]=0x40539c,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  528 {*32* eax, *8* r9, *u8** edx} := CALL proc29(
                *v** local0 := 0x4053f0
                *i64* local1 := 57
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{517},   r24=r24{517},   r26=r26{517},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=57,   m[r28{0} - 12]=0x4053f0,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  539 {*32* eax, *8* r9, *u8** edx} := CALL proc29(
                *v** local0 := 0x40542c
                *i64* local1 := 9
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{528},   r24=r24{528},   r26=r26{528},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=9,   m[r28{0} - 12]=0x40542c,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  550 {*32* eax, *8* r9, *u8** edx} := CALL proc29(
                *v** local0 := 0x40519c
                *i64* local1 := 11
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{539},   r24=r24{539},   r26=r26{539},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=11,   m[r28{0} - 12]=0x40519c,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  561 {*32* eax, *8* r9, *u8** edx} := CALL proc29(
                *v** local0 := 0x4051a8
                *i64* local1 := 11
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{550},   r24=r24{550},   r26=r26{550},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=11,   m[r28{0} - 12]=0x4051a8,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  572 {*32* eax, *8* r9, *u8** edx} := CALL proc29(
                *v** local0 := 0x4051b4
                *i64* local1 := 11
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{561},   r24=r24{561},   r26=r26{561},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=11,   m[r28{0} - 12]=0x4051b4,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  583 {*32* eax, *8* r9, *u8** edx} := CALL proc29(
                *v** local0 := 0x4051c0
                *i64* local1 := 13
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{572},   r24=r24{572},   r26=r26{572},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=13,   m[r28{0} - 12]=0x4051c0,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  594 {*32* eax, *8* r9, *u8** edx} := CALL proc29(
                *v** local0 := 0x4051d0
                *i64* local1 := 11
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{583},   r24=r24{583},   r26=r26{583},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=11,   m[r28{0} - 12]=0x4051d0,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  605 {*32* eax, *8* r9, *u8** edx} := CALL proc29(
                *v** local0 := 0x40514c
                *i64* local1 := 64
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{594},   r24=r24{594},   r26=r26{594},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=64,   m[r28{0} - 12]=0x40514c,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  616 {*32* eax, *8* r9, *32* edx} := CALL proc29(
                *v** local0 := 0x405190
                *i64* local1 := 8
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{605},   r24=r24{605},   r26=r26{605},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=8,   m[r28{0} - 12]=0x405190,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables:  in proc proc7
dest is not lib
call:   40 {*32* eax, *32* r25, *32* r26, *v* r28} := CALL AllocateAndInitializeSid(
              )
              Reaching definitions: r24=r28{0} - 12,   r25=r28{0} - 20,   r28=r28{0} - 68,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 12]=m[r28{0} - 12]{0},
                m[r28{0} - 15]=5,   m[r28{0} - 16]=0,   m[r28{0} - 17]=0,   m[r28{0} - 18]=0,   m[r28{0} - 19]=0,
                m[r28{0} - 20]=0,   m[r28{0} - 24]=r28{0} - 12,   m[r28{0} - 28]=0,   m[r28{0} - 32]=0,
                m[r28{0} - 36]=0,   m[r28{0} - 40]=0,   m[r28{0} - 44]=0,   m[r28{0} - 48]=0,   m[r28{0} - 52]=544,
                m[r28{0} - 56]=32,   m[r28{0} - 60]=2,   m[r28{0} - 64]=r28{0} - 20,   m[r28{0} - 68]=%pc,
                m[r28{0} - 72]=m[r28{0} - 72]{0},   m[r28{0} - 76]=m[r28{0} - 76]{0},
                m[r28{0} - 80]=m[r28{0} - 80]{0},   m[r28{0} - 84]=m[r28{0} - 84]{0},   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 16, r28{0} - 20 ),   %ZF=(r28{0} - 20) = 0,   %CF=(r28{0} - 4) <u 16
              Live variables: eax in proc proc8
result:    0 *32* eax := -
dest is not lib
call:   59 {*32* eax, *v* r25, *v* r26, *v* r28} := CALL CheckTokenMembership(
              )
              Reaching definitions: r24=m[r28{0} - 12]{0},   r25=r25{40},   r26=r28{0} - 8,   r28=r28{0} - 80,
                r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=0,   m[r28{0} - 12]=m[r28{0} - 12]{0},
                m[r28{0} - 15]=5,   m[r28{0} - 16]=0,   m[r28{0} - 17]=0,   m[r28{0} - 18]=0,   m[r28{0} - 19]=0,
                m[r28{0} - 20]=0,   m[r28{0} - 24]=r28{0} - 12,   m[r28{0} - 28]=0,   m[r28{0} - 32]=0,
                m[r28{0} - 36]=0,   m[r28{0} - 40]=0,   m[r28{0} - 44]=0,   m[r28{0} - 48]=0,   m[r28{0} - 52]=544,
                m[r28{0} - 56]=32,   m[r28{0} - 60]=2,   m[r28{0} - 64]=r28{0} - 20,   m[r28{0} - 68]=r28{0} - 8,
                m[r28{0} - 72]=m[r28{0} - 12]{0},   m[r28{0} - 76]=0,   m[r28{0} - 80]=%pc,
                m[r28{0} - 84]=m[r28{0} - 84]{0},   tmp1=r24{40},   %flags=LOGICALFLAGS32( r24{40} ),
                %ZF=LOGICALFLAGS32( r24{40} ),   %CF=LOGICALFLAGS32( r24{40} )
              Live variables: eax in proc proc8
result:    0 *32* eax := -
dest is not lib
call:   70 {*32* eax, *32* r25, *32* r26, *v* r28} := CALL FreeSid(
              )
              Reaching definitions: r24=r24{59},   r25=m[r28{0} - 12]{0},   r26=r26{59},   r28=r28{0} - 84,
                r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=0,   m[r28{0} - 12]=m[r28{0} - 12]{0},
                m[r28{0} - 15]=5,   m[r28{0} - 16]=0,   m[r28{0} - 17]=0,   m[r28{0} - 18]=0,   m[r28{0} - 19]=0,
                m[r28{0} - 20]=0,   m[r28{0} - 24]=r28{0} - 12,   m[r28{0} - 28]=0,   m[r28{0} - 32]=0,
                m[r28{0} - 36]=0,   m[r28{0} - 40]=0,   m[r28{0} - 44]=0,   m[r28{0} - 48]=0,   m[r28{0} - 52]=544,
                m[r28{0} - 56]=32,   m[r28{0} - 60]=2,   m[r28{0} - 64]=r28{0} - 20,   m[r28{0} - 68]=r28{0} - 8,
                m[r28{0} - 72]=m[r28{0} - 12]{0},   m[r28{0} - 76]=0,   m[r28{0} - 80]=m[r28{0} - 12]{0},
                m[r28{0} - 84]=%pc,   tmp1=r24{59},   %flags=LOGICALFLAGS32( r24{59} ),   %ZF=LOGICALFLAGS32( r24{59} )
                %CF=LOGICALFLAGS32( r24{59} )
              Live variables:  in proc proc8
dest is not lib
call:   15 {*32* eax_1, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local0 := eax
                *c** local1 := "w2>K1!*8"
              )
              Reaching definitions: r24=r24{9},   r28=r28{0} - 24,   r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},
                m[r28{0} - 16]=0x4050e0,   m[r28{0} - 20]=r24{9},   m[r28{0} - 24]=%pc,   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 8, r28{0} - 12 ),   %ZF=(r28{0} - 12) = 0,   %CF=(r28{0} - 4) <u 8
              Live variables: eax_1 in proc proc10
result:    0 *32* eax_1 := -
dest is not lib
call:   30 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetCurrentProcess(
              )
              Reaching definitions: r24=r24{15},   r25=r28{0} - 8,   r26=r26{15},   r28=r28{0} - 32,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=0,   m[r28{0} - 12]=r24{15},   m[r28{0} - 16]=0,
                m[r28{0} - 20]=4,   m[r28{0} - 24]=r28{0} - 8,   m[r28{0} - 28]=7,   m[r28{0} - 32]=%pc,
                tmp1=r28{0} - 4,   %flags=SUBFLAGS32( r28{0} - 4, 8, r28{0} - 12 ),   %ZF=(r28{0} - 12) = 0,
                %CF=(r28{0} - 4) <u 8
              Live variables: eax,  ecx,  edx in proc proc10
result:    0 *32* eax := -
result:    0 *v* ecx := -
result:    0 *v* edx := -
dest is not lib
call:   45 {*32* eax, *32* ecx, *32* edx, *v* esp} := CALL IsDebuggerPresent(
              )
              Reaching definitions: r24=r24{36},   r25=r25{36},   r26=r26{36},   r28=r28{36} - 4,   r29=r29{36},
                m[r28{0} - 4]=m[r28{0} - 4]{36},   m[r28{0} - 8]=m[r28{0} - 8]{36},   m[r28{0} - 12]=m[r28{0} - 12]{36}
                m[r28{0} - 16]=m[r28{0} - 16]{36},   m[r28{0} - 20]=m[r28{0} - 20]{36},
                m[r28{0} - 24]=m[r28{0} - 24]{36},   m[r28{0} - 28]=m[r28{0} - 28]{36},
                m[r28{0} - 32]=m[r28{0} - 32]{36},   m[r28{0} - 36]=m[r28{0} - 36]{36},
                m[r28{0} - 4]=m[r28{0} - 4]{36},   m[r28{0} - 8]=m[r28{0} - 8]{36},   m[r28{0} - 12]=m[r28{0} - 12]{36}
                m[r28{0} - 16]=m[r28{0} - 16]{36},   m[r28{0} - 20]=m[r28{0} - 20]{36},
                m[r28{0} - 24]=m[r28{0} - 24]{36},   m[r28{0} - 28]=m[r28{0} - 28]{36},
                m[r28{0} - 32]=m[r28{0} - 32]{36},   m[r28{0} - 36]=m[r28{0} - 36]{36},   <all>=<all>{36},
                tmp1=tmp1{37},   %flags=SUBFLAGS32( m[r29{36} - 4], 0, tmp1{37} ),   %ZF=tmp1{37} = 0,
                %CF=m[r29{36} - 4] <u 0
              Live variables: eax in proc proc10
result:    0 *32* eax := -
dest is not lib
call:   13 {*32* eax, *32* ecx, *32* edx, *v* esp} := CALL proc6(
                *DWORD* local0 := 0x438
              )
              Reaching definitions: r27=r27{0},   r28=r28{0} - 28,   r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 12]=0,   m[r28{0} - 24]=0x438,   m[r28{0} - 28]=%pc,
                tmp1=r28{0} - 4,   %flags=SUBFLAGS32( r28{0} - 4, 16, r28{0} - 20 ),   %ZF=(r28{0} - 20) = 0,
                %CF=(r28{0} - 4) <u 16
              Live variables: eax,  ecx,  edx in proc proc11
result:    0 *32* eax := -
result:    0 *32* ecx := -
result:    0 *32* edx := -
dest is not lib
call:  149 {*32* eax, *8* al, *8* cl, *8* bl, *32* ecx, *32* edx, *v* esp} := CALL proc15(
                *8** local9 := m[esp - 8]
                *u32** local10 := m[esp - 4]
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param2
              )
              Reaching definitions: r8=r8{140},   r9=r9{140},   r11=r11{140},   r24=r24{140},   r25=r25{143},
                r26=r26{140},   r27=r27{140},   r28=r28{140} - 12,   r29=r29{140},   m[r28{0} + 4]=m[r28{0} + 4]{140},
                m[r28{0} - 4]=m[r28{0} - 4]{140},   m[r28{0} - 8]=m[r28{0} - 8]{140},
                m[r28{0} - 12]=m[r28{0} - 12]{140},   m[r28{0} - 16]=m[r28{0} - 16]{140},
                m[r28{0} - 20]=m[r28{0} - 20]{140},   m[r28{0} - 24]=m[r28{0} - 24]{140},
                m[r28{0} - 28]=m[r28{0} - 28]{140},   m[r28{0} - 32]=m[r28{0} - 32]{140},
                m[r28{0} - 36]=m[r28{0} - 36]{140},   m[r28{0} - 40]=m[r28{0} - 40]{140},
                m[r28{0} - 44]=m[r28{0} - 44]{140},   m[r28{0} - 4]=m[r28{0} - 4]{140},
                m[r28{0} - 8]=m[r28{0} - 8]{140},   m[r28{0} - 12]=m[r28{0} - 12]{140},
                m[r28{0} - 16]=m[r28{0} - 16]{140},   m[r28{0} - 20]=m[r28{0} - 20]{140},
                m[r28{0} - 24]=m[r28{0} - 24]{140},   m[r28{0} - 28]=m[r28{0} - 28]{140},
                m[r28{0} - 32]=m[r28{0} - 32]{140},   m[r28{0} - 36]=m[r28{0} - 36]{140},
                m[r28{0} - 40]=m[r28{0} - 40]{140},   m[r28{0} - 44]=m[r28{0} - 44]{140},   <all>=<all>{140},
                tmp1=tmp1{140},   %flags=%flags{140},   %ZF=%ZF{140},   %CF=%CF{140}
              Live variables: bl,  cl,  eax in proc proc11
result:    0 *32* eax := -
result:    0 *8* cl := -
result:    0 *8* bl := -
dest is not lib
call:   79 {*32* eax, *8* al, *8* cl, *8* bl, *32* ecx, *32* edx, *v* esp} := CALL proc15(
                *8** local9 := m[esp - 8]
                *u32** local10 := m[esp - 4]
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param2
              )
              Reaching definitions: r8=r8{70},   r9=r9{70},   r11=r11{70},   r24=r24{73},   r25=r25{70},   r26=r26{70},
                r27=r27{70},   r28=r28{70} - 12,   r29=r29{70},   m[r28{0} + 4]=m[r28{0} + 4]{70},
                m[r28{0} - 4]=m[r28{0} - 4]{70},   m[r28{0} - 8]=m[r28{0} - 8]{70},   m[r28{0} - 12]=m[r28{0} - 12]{70}
                m[r28{0} - 16]=m[r28{0} - 16]{70},   m[r28{0} - 20]=m[r28{0} - 20]{70},
                m[r28{0} - 24]=m[r28{0} - 24]{70},   m[r28{0} - 28]=m[r28{0} - 28]{70},
                m[r28{0} - 32]=m[r28{0} - 32]{70},   m[r28{0} - 36]=m[r28{0} - 36]{70},
                m[r28{0} - 40]=m[r28{0} - 40]{70},   m[r28{0} - 44]=m[r28{0} - 44]{70},
                m[r28{0} - 4]=m[r28{0} - 4]{70},   m[r28{0} - 8]=m[r28{0} - 8]{70},   m[r28{0} - 12]=m[r28{0} - 12]{70}
                m[r28{0} - 16]=m[r28{0} - 16]{70},   m[r28{0} - 20]=m[r28{0} - 20]{70},
                m[r28{0} - 24]=m[r28{0} - 24]{70},   m[r28{0} - 28]=m[r28{0} - 28]{70},
                m[r28{0} - 32]=m[r28{0} - 32]{70},   m[r28{0} - 36]=m[r28{0} - 36]{70},
                m[r28{0} - 40]=m[r28{0} - 40]{70},   m[r28{0} - 44]=m[r28{0} - 44]{70},   <all>=<all>{70},
                tmp1=tmp1{70},   %flags=%flags{70},   %ZF=%ZF{70},   %CF=%CF{70}
              Live variables: bl,  cl,  eax in proc proc11
result:    0 *32* eax := -
result:    0 *8* cl := -
result:    0 *8* bl := -
dest is not lib
call:   15 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local0 := eax
                *c** local1 := "	\;1,tW"
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{0},   r10=r10{0},   r11=r11{0},   r15=r15{0},
                r24=r24{9},   r27=r27{0},   r28=r28{0} - 88,   r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},
                m[r28{0} - 80]=0x40510c,   m[r28{0} - 84]=r24{9},   m[r28{0} - 88]=%pc,   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 72, r28{0} - 76 ),   %ZF=(r28{0} - 76) = 0,   %CF=(r28{0} - 4) <u 72
              Live variables:  in proc proc13
dest is not lib
call:   25 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local0 := ecx
                *c** local1 := "j4_71"
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{0},   r10=r10{0},   r11=r11{0},   r15=r15{0},
                r24=r24{15},   r25=r25{19},   r26=r26{15},   r27=r27{0},   r28=r28{0} - 88,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{15},   m[r28{0} - 80]=0x40511c,   m[r28{0} - 84]=r25{19},
                m[r28{0} - 88]=%pc,   tmp1=r28{0} - 4,   %flags=SUBFLAGS32( r28{0} - 4, 72, r28{0} - 76 ),
                %ZF=(r28{0} - 76) = 0,   %CF=(r28{0} - 4) <u 72
              Live variables:  in proc proc13
dest is not lib
call:   35 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local0 := edx
                *c** local1 := "u	\;1,5"
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{0},   r10=r10{0},   r11=r11{0},   r15=r15{0},
                r24=r24{25},   r25=r25{25},   r26=r26{29},   r27=r27{0},   r28=r28{0} - 88,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{15},   m[r28{0} - 32]=r24{25},   m[r28{0} - 80]=0x40512c,
                m[r28{0} - 84]=r26{29},   m[r28{0} - 88]=%pc,   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 72, r28{0} - 76 ),   %ZF=(r28{0} - 76) = 0,   %CF=(r28{0} - 4) <u 72
              Live variables:  in proc proc13
dest is not lib
call:   45 {*32* eax, *32* ecx, *v* edx, *v** esp_1} := CALL GetProcAddress(
                *HANDLE* local0 := eax
                *c** local1 := "u"
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{0},   r10=r10{0},   r11=r11{0},   r15=r15{0},
                r24=r24{39},   r25=r25{35},   r26=r26{35},   r27=r27{0},   r28=r28{0} - 88,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{15},   m[r28{0} - 20]=r24{35},   m[r28{0} - 32]=r24{25},
                m[r28{0} - 80]=0x40513c,   m[r28{0} - 84]=r24{39},   m[r28{0} - 88]=%pc,   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 72, r28{0} - 76 ),   %ZF=(r28{0} - 76) = 0,   %CF=(r28{0} - 4) <u 72
              Live variables: esp_1 in proc proc13
result:    0 *v** esp_1 := -
dest is not lib
call:   61 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL proc6(
                *DWORD* m[esp_11 - 4] := m[esp_11 - 4]
              )
              Reaching definitions: r0=r0{304},   r3=r3{305},   r8=r8{306},   r10=r10{307},   r11=r11{308},
                r15=r15{309},   r24=r24{310},   r25=r25{311},   r26=r26{312},   r27=r27{404},   r28=r28{313} - 8,
                r29=r29{314},   m[r28{0} - 4]=m[r28{0} - 4]{364},   m[r28{0} - 8]=m[r28{0} - 8]{365},
                m[r28{0} - 16]=m[r28{0} - 16]{366},   m[r28{0} - 20]=m[r28{0} - 20]{367},
                m[r28{0} - 28]=m[r28{0} - 28]{368},   m[r28{0} - 32]=m[r28{0} - 32]{369},
                m[r28{0} - 36]=m[r28{0} - 36]{370},   m[r28{0} - 80]=m[r28{0} - 80]{371},
                m[r28{0} - 84]=m[r28{0} - 84]{372},   m[r28{0} - 88]=m[r28{0} - 88]{373},   tmp1=tmp1{315},
                %flags=%flags{316},   %ZF=%ZF{317},   %CF=%CF{318}
              Live variables: eax in proc proc13
result:    0 *32* eax := -
dest is not lib
call:   79 {*32* eax, *8* al, *8* dl, *32* ecx, *32* edx, *v* esp} := CALL proc20(
                *i64* m[esp_11 - 12] := m[esp_11 - 12]
                *8** m[esp_11 - 8] := m[esp_11 - 8]
                *i64* m[esp_11 - 4] := m[esp_11 - 4]
                *u8* dl := param3
                *8** ecx := ecx
              )
              Reaching definitions: r0=r0{304},   r3=r3{305},   r8=r8{306},   r10=r10{307},   r11=r11{308},
                r15=r15{309},   r24=r24{70},   r25=r25{73},   r26=r26{66},   r27=r27{404},   r28=r28{313} - 16,
                r29=r29{314},   m[r28{0} - 4]=m[r28{0} - 4]{364},   m[r28{0} - 8]=m[r28{0} - 8]{365},
                m[r28{0} - 16]=m[r28{0} - 16]{366},   m[r28{0} - 20]=m[r28{0} - 20]{367},
                m[r28{0} - 28]=m[r28{0} - 28]{368},   m[r28{0} - 32]=m[r28{0} - 32]{369},
                m[r28{0} - 36]=m[r28{0} - 36]{370},   m[r28{0} - 80]=m[r28{0} - 80]{371},
                m[r28{0} - 84]=m[r28{0} - 84]{372},   m[r28{0} - 88]=m[r28{0} - 88]{373},   tmp1=(r28{313} - 8) + 4,
                %flags=ADDFLAGS32( r28{313} - 4, 4, r28{313} ),   %ZF=ADDFLAGS32( r28{313} - 4, 4, r28{313} ),
                %CF=ADDFLAGS32( r28{313} - 4, 4, r28{313} )
              Live variables: al,  dl,  ecx in proc proc13
result:    0 *8* al := -
result:    0 *8* dl := -
result:    0 *32* ecx := -
dest is not lib
call:  124 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL proc22(
                *LPVOID* m[esp_3 - 4] := m[esp_3 - 4]
              )
              Reaching definitions: r0=r0{108},   r3=r3{108},   r8=r8{108},   r10=r10{108},   r11=r11{108},
                r15=r15{108},   r24=r24{116},   r25=r25{118},   r26=r26{114},   r27=r27{108},   r28=r28{108} - 8,
                r29=r29{108},   m[r28{0} - 4]=m[r28{0} - 4]{108},   m[r28{0} - 8]=m[r28{0} - 8]{108},
                m[r28{0} - 16]=m[r28{0} - 16]{108},   m[r28{0} - 20]=m[r28{0} - 20]{108},
                m[r28{0} - 28]=m[r28{0} - 28]{108},   m[r28{0} - 32]=m[r28{0} - 32]{108},
                m[r28{0} - 36]=m[r28{0} - 36]{108},   m[r28{0} - 80]=m[r28{0} - 80]{108},
                m[r28{0} - 84]=m[r28{0} - 84]{108},   m[r28{0} - 88]=m[r28{0} - 88]{108},
                m[r28{0} - 4]=m[r28{0} - 4]{108},   m[r28{0} - 8]=m[r28{0} - 8]{108},
                m[r28{0} - 16]=m[r28{0} - 16]{108},   m[r28{0} - 20]=m[r28{0} - 20]{108},
                m[r28{0} - 28]=m[r28{0} - 28]{108},   m[r28{0} - 32]=m[r28{0} - 32]{108},
                m[r28{0} - 36]=m[r28{0} - 36]{108},   m[r28{0} - 80]=m[r28{0} - 80]{108},
                m[r28{0} - 84]=m[r28{0} - 84]{108},   m[r28{0} - 88]=m[r28{0} - 88]{108},   <all>=<all>{108},
                tmp1=r25{110},   %flags=ADDFLAGS32( r25{110}, r24{108}, r25{110} + r24{108} ),
                %ZF=ADDFLAGS32( r25{110}, r24{108}, r25{110} + r24{108} ),
                %CF=ADDFLAGS32( r25{110}, r24{108}, r25{110} + r24{108} )
              Live variables:  in proc proc13
dest is not lib
call:  146 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL proc6(
                *DWORD* m[esp_2 - 4] := m[esp_2 - 4]
              )
              Reaching definitions: r0=r0{94},   r3=r3{94},   r8=r8{94},   r10=r10{94},   r11=r11{94},   r15=r15{94},
                r24=r24{136},   r25=r25{137} + 1,   r26=r26{129},   r27=r27{94},   r28=r28{94} - 8,   r29=r29{94},
                m[r28{0} - 4]=m[r28{0} - 4]{94},   m[r28{0} - 8]=m[r28{0} - 8]{94},   m[r28{0} - 16]=m[r28{0} - 16]{94}
                m[r28{0} - 20]=m[r28{0} - 20]{94},   m[r28{0} - 28]=m[r28{0} - 28]{94},
                m[r28{0} - 32]=m[r28{0} - 32]{94},   m[r28{0} - 36]=m[r28{0} - 36]{94},
                m[r28{0} - 80]=m[r28{0} - 80]{94},   m[r28{0} - 84]=m[r28{0} - 84]{94},
                m[r28{0} - 88]=m[r28{0} - 88]{94},   m[r28{0} - 4]=m[r28{0} - 4]{94},   m[r28{0} - 8]=m[r28{0} - 8]{94}
                m[r28{0} - 16]=m[r28{0} - 16]{94},   m[r28{0} - 20]=m[r28{0} - 20]{94},
                m[r28{0} - 28]=m[r28{0} - 28]{94},   m[r28{0} - 32]=m[r28{0} - 32]{94},
                m[r28{0} - 36]=m[r28{0} - 36]{94},   m[r28{0} - 80]=m[r28{0} - 80]{94},
                m[r28{0} - 84]=m[r28{0} - 84]{94},   m[r28{0} - 88]=m[r28{0} - 88]{94},   <all>=<all>{94},
                tmp1=r25{137},   %flags=ADDFLAGS32( r25{137}, 1, r25{137} + 1 ),
                %ZF=ADDFLAGS32( r25{137}, 1, r25{137} + 1 ),   %CF=ADDFLAGS32( r25{137}, 1, r25{137} + 1 )
              Live variables: eax in proc proc13
result:    0 *32* eax := -
dest is not lib
call:  168 {*32* eax, *u16* ax, *j16* bx, *8* al, *j8* bl, *u32* bh, *32* ecx, *32* edx, *v* esp} := CALL proc24(
                *j32** m[esp_2 - 12] := m[esp_2 - 12]
                *u32* m[esp_2 - 8] := m[esp_2 - 8]
                *u32* m[esp_2 - 4] := m[esp_2 - 4]
                *u16* ax := ax
                *j16* bx := bx
                *j8* bl := bl
                *u32* bh := bh
                *32* ebx := param6
              )
              Reaching definitions: r0=r0{94},   r3=r3{94},   r8=r8{94},   r10=r10{94},   r11=r11{94},   r15=r15{94},
                r24=r24{153},   r25=r25{154} + 1,   r26=r26{162},   r27=r27{94},   r28=r28{94} - 16,   r29=r29{94},
                m[r28{0} - 4]=m[r28{0} - 4]{94},   m[r28{0} - 8]=m[r28{0} - 8]{94},   m[r28{0} - 16]=m[r28{0} - 16]{94}
                m[r28{0} - 20]=m[r28{0} - 20]{94},   m[r28{0} - 28]=m[r28{0} - 28]{94},
                m[r28{0} - 32]=m[r28{0} - 32]{94},   m[r28{0} - 36]=m[r28{0} - 36]{94},
                m[r28{0} - 80]=m[r28{0} - 80]{94},   m[r28{0} - 84]=m[r28{0} - 84]{94},
                m[r28{0} - 88]=m[r28{0} - 88]{94},   m[r28{0} - 4]=m[r28{0} - 4]{94},   m[r28{0} - 8]=m[r28{0} - 8]{94}
                m[r28{0} - 16]=m[r28{0} - 16]{94},   m[r28{0} - 20]=m[r28{0} - 20]{94},
                m[r28{0} - 28]=m[r28{0} - 28]{94},   m[r28{0} - 32]=m[r28{0} - 32]{94},
                m[r28{0} - 36]=m[r28{0} - 36]{94},   m[r28{0} - 80]=m[r28{0} - 80]{94},
                m[r28{0} - 84]=m[r28{0} - 84]{94},   m[r28{0} - 88]=m[r28{0} - 88]{94},   <all>=<all>{94},
                tmp1=r25{154},   %flags=ADDFLAGS32( r25{154}, 1, r25{154} + 1 ),
                %ZF=ADDFLAGS32( r25{154}, 1, r25{154} + 1 ),   %CF=ADDFLAGS32( r25{154}, 1, r25{154} + 1 )
              Live variables: ax,  bh,  bl,  bx in proc proc13
result:    0 *u16* ax := -
result:    0 *j16* bx := -
result:    0 *j8* bl := -
result:    0 *u32* bh := -
dest is not lib
call:  185 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL proc6(
                *DWORD* m[esp_12 - 4] := m[esp_12 - 4]
              )
              Reaching definitions: r0=r0{319},   r3=r3{320},   r8=r8{321},   r10=r10{322},   r11=r11{323},
                r15=r15{324},   r24=r24{325},   r25=r25{326},   r26=r26{327},   r27=r27{405},   r28=r28{328} - 8,
                r29=r29{329},   m[r28{0} - 4]=m[r28{0} - 4]{94},   m[r28{0} - 8]=m[r28{0} - 8]{94},
                m[r28{0} - 16]=m[r28{0} - 16]{94},   m[r28{0} - 20]=m[r28{0} - 20]{94},
                m[r28{0} - 28]=m[r28{0} - 28]{94},   m[r28{0} - 32]=m[r28{0} - 32]{94},
                m[r28{0} - 36]=m[r28{0} - 36]{94},   m[r28{0} - 80]=m[r28{0} - 80]{94},
                m[r28{0} - 84]=m[r28{0} - 84]{94},   m[r28{0} - 88]=m[r28{0} - 88]{94},
                m[r28{0} - 4]=m[r28{0} - 4]{374},   m[r28{0} - 8]=m[r28{0} - 8]{375},
                m[r28{0} - 16]=m[r28{0} - 16]{376},   m[r28{0} - 20]=m[r28{0} - 20]{377},
                m[r28{0} - 28]=m[r28{0} - 28]{378},   m[r28{0} - 32]=m[r28{0} - 32]{379},
                m[r28{0} - 36]=m[r28{0} - 36]{380},   m[r28{0} - 80]=m[r28{0} - 80]{381},
                m[r28{0} - 84]=m[r28{0} - 84]{382},   m[r28{0} - 88]=m[r28{0} - 88]{383},   <all>=<all>{94},
                tmp1=tmp1{330},   %flags=%flags{331},   %ZF=%ZF{332},   %CF=%CF{333}
              Live variables: eax in proc proc13
result:    0 *32* eax := -
dest is not lib
call:  203 {*32* eax, *8* al, *8* dl, *32* ecx, *32* edx, *v* esp} := CALL proc20(
                *i64* m[esp_12 - 12] := m[esp_12 - 12]
                *8** m[esp_12 - 8] := m[esp_12 - 8]
                *i64* m[esp_12 - 4] := m[esp_12 - 4]
                *u8* dl := dl
                *8** ecx := ecx
              )
              Reaching definitions: r0=r0{319},   r3=r3{320},   r8=r8{321},   r10=r10{322},   r11=r11{323},
                r15=r15{324},   r24=r24{197},   r25=r25{190},   r26=r26{194},   r27=r27{405},   r28=r28{328} - 16,
                r29=r29{329},   m[r28{0} - 4]=m[r28{0} - 4]{94},   m[r28{0} - 8]=m[r28{0} - 8]{94},
                m[r28{0} - 16]=m[r28{0} - 16]{94},   m[r28{0} - 20]=m[r28{0} - 20]{94},
                m[r28{0} - 28]=m[r28{0} - 28]{94},   m[r28{0} - 32]=m[r28{0} - 32]{94},
                m[r28{0} - 36]=m[r28{0} - 36]{94},   m[r28{0} - 80]=m[r28{0} - 80]{94},
                m[r28{0} - 84]=m[r28{0} - 84]{94},   m[r28{0} - 88]=m[r28{0} - 88]{94},
                m[r28{0} - 4]=m[r28{0} - 4]{374},   m[r28{0} - 8]=m[r28{0} - 8]{375},
                m[r28{0} - 16]=m[r28{0} - 16]{376},   m[r28{0} - 20]=m[r28{0} - 20]{377},
                m[r28{0} - 28]=m[r28{0} - 28]{378},   m[r28{0} - 32]=m[r28{0} - 32]{379},
                m[r28{0} - 36]=m[r28{0} - 36]{380},   m[r28{0} - 80]=m[r28{0} - 80]{381},
                m[r28{0} - 84]=m[r28{0} - 84]{382},   m[r28{0} - 88]=m[r28{0} - 88]{383},   <all>=<all>{94},
                tmp1=(r28{328} - 8) + 4,   %flags=ADDFLAGS32( r28{328} - 4, 4, r28{328} ),
                %ZF=ADDFLAGS32( r28{328} - 4, 4, r28{328} ),   %CF=ADDFLAGS32( r28{328} - 4, 4, r28{328} )
              Live variables: al,  dl,  eax in proc proc13
result:    0 *32* eax := -
result:    0 *8* al := -
result:    0 *8* dl := -
dest is not lib
call:  275 {*32* eax, *u8* dl, *32* ecx, *v* esp} := CALL proc25(
                *j32* m[esp_9 - 12] := m[esp_9 - 12]
                *union* m[esp_9 - 8] := m[esp_9 - 8]
                *u32* m[esp_9 - 4] := m[esp_9 - 4]
                *u8* dl := dl
              )
              Reaching definitions: r0=r0{254},   r3=r3{254},   r8=r8{254},   r10=r10{254},   r11=r11{254},
                r15=r15{254},   r24=r24{260},   r25=r25{263},   r26=r26{268},   r27=r27{254},   r28=r28{254} - 16,
                r29=r29{254},   m[r28{0} - 4]=m[r28{0} - 4]{254},   m[r28{0} - 8]=m[r28{0} - 8]{254},
                m[r28{0} - 16]=m[r28{0} - 16]{254},   m[r28{0} - 20]=m[r28{0} - 20]{254},
                m[r28{0} - 28]=m[r28{0} - 28]{254},   m[r28{0} - 32]=m[r28{0} - 32]{254},
                m[r28{0} - 36]=m[r28{0} - 36]{254},   m[r28{0} - 80]=m[r28{0} - 80]{254},
                m[r28{0} - 84]=m[r28{0} - 84]{254},   m[r28{0} - 88]=m[r28{0} - 88]{254},
                m[r28{0} - 4]=m[r28{0} - 4]{254},   m[r28{0} - 8]=m[r28{0} - 8]{254},
                m[r28{0} - 16]=m[r28{0} - 16]{254},   m[r28{0} - 20]=m[r28{0} - 20]{254},
                m[r28{0} - 28]=m[r28{0} - 28]{254},   m[r28{0} - 32]=m[r28{0} - 32]{254},
                m[r28{0} - 36]=m[r28{0} - 36]{254},   m[r28{0} - 80]=m[r28{0} - 80]{254},
                m[r28{0} - 84]=m[r28{0} - 84]{254},   m[r28{0} - 88]=m[r28{0} - 88]{254},   <all>=<all>{254},
                tmp1=r26{266},   %flags=ADDFLAGS32( r26{266}, m[r29{254} - 8], r26{268} ),
                %ZF=ADDFLAGS32( r26{266}, m[r29{254} - 8], r26{268} ),
                %CF=ADDFLAGS32( r26{266}, m[r29{254} - 8], r26{268} )
              Live variables: dl in proc proc13
result:    0 *u8* dl := -
dest is not lib
call:  292 {*v* eax, *32* ecx, *32* edx, *v* esp} := CALL proc22(
                *LPVOID* m[esp_9 - 4] := m[esp_9 - 4]
              )
              Reaching definitions: r0=r0{254},   r3=r3{254},   r8=r8{254},   r10=r10{275},   r11=r11{254},
                r15=r15{254},   r24=r24{281},   r25=r25{284},   r26=r26{286},   r27=r27{254},   r28=r28{254} - 8,
                r29=r29{254},   m[r28{0} - 4]=m[r28{0} - 4]{254},   m[r28{0} - 8]=m[r28{0} - 8]{254},
                m[r28{0} - 16]=m[r28{0} - 16]{254},   m[r28{0} - 20]=m[r28{0} - 20]{254},
                m[r28{0} - 28]=m[r28{0} - 28]{254},   m[r28{0} - 32]=m[r28{0} - 32]{254},
                m[r28{0} - 36]=m[r28{0} - 36]{254},   m[r28{0} - 80]=m[r28{0} - 80]{254},
                m[r28{0} - 84]=m[r28{0} - 84]{254},   m[r28{0} - 88]=m[r28{0} - 88]{254},
                m[r28{0} - 4]=m[r28{0} - 4]{254},   m[r28{0} - 8]=m[r28{0} - 8]{254},
                m[r28{0} - 16]=m[r28{0} - 16]{254},   m[r28{0} - 20]=m[r28{0} - 20]{254},
                m[r28{0} - 28]=m[r28{0} - 28]{254},   m[r28{0} - 32]=m[r28{0} - 32]{254},
                m[r28{0} - 36]=m[r28{0} - 36]{254},   m[r28{0} - 80]=m[r28{0} - 80]{254},
                m[r28{0} - 84]=m[r28{0} - 84]{254},   m[r28{0} - 88]=m[r28{0} - 88]{254},   <all>=<all>{254},
                tmp1=r24{279},   %flags=ADDFLAGS32( r24{279}, m[r29{254} - 44], r24{281} ),
                %ZF=ADDFLAGS32( r24{279}, m[r29{254} - 44], r24{281} ),
                %CF=ADDFLAGS32( r24{279}, m[r29{254} - 44], r24{281} )
              Live variables:  in proc proc13
dest is not lib
call:    9 {*32* eax, *32* r25, *32* r26, *32** r28} := CALL GetModuleHandleA(
              )
              Reaching definitions: r28=r28{0} - 12,   r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=0x40519c
                m[r28{0} - 12]=%pc,   m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 20]=m[r28{0} - 20]{0},
                m[r28{0} - 24]=m[r28{0} - 24]{0},   m[r28{0} - 28]=m[r28{0} - 28]{0}
              Live variables: eax in proc proc18
result:    0 *32* eax := -
dest is not lib
call:   18 {*32* eax, *32* r25, *32* r26, *32** r28} := CALL GetModuleHandleA(
              )
              Reaching definitions: r24=r24{9},   r25=r25{9},   r26=r26{9},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=0x40519c,   m[r28{0} - 12]=0x4051a8,   m[r28{0} - 16]=%pc,
                m[r28{0} - 20]=m[r28{0} - 20]{0},   m[r28{0} - 24]=m[r28{0} - 24]{0},
                m[r28{0} - 28]=m[r28{0} - 28]{0},   tmp1=r24{9},   %flags=LOGICALFLAGS32( r24{9} ),
                %ZF=LOGICALFLAGS32( r24{9} ),   %CF=LOGICALFLAGS32( r24{9} )
              Live variables: eax in proc proc18
result:    0 *32* eax := -
dest is not lib
call:   27 {*32* eax, *32* r25, *32* r26, *32** r28} := CALL GetModuleHandleA(
              )
              Reaching definitions: r24=r24{18},   r25=r25{18},   r26=r26{18},   r28=r28{0} - 20,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=0x40519c,   m[r28{0} - 12]=0x4051a8,   m[r28{0} - 16]=0x4051b4,
                m[r28{0} - 20]=%pc,   m[r28{0} - 24]=m[r28{0} - 24]{0},   m[r28{0} - 28]=m[r28{0} - 28]{0},
                tmp1=r24{18},   %flags=LOGICALFLAGS32( r24{18} ),   %ZF=LOGICALFLAGS32( r24{18} ),
                %CF=LOGICALFLAGS32( r24{18} )
              Live variables: eax in proc proc18
result:    0 *32* eax := -
dest is not lib
call:   36 {*32* eax, *32* r25, *32* r26, *32** r28} := CALL GetModuleHandleA(
              )
              Reaching definitions: r24=r24{27},   r25=r25{27},   r26=r26{27},   r28=r28{0} - 24,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=0x40519c,   m[r28{0} - 12]=0x4051a8,   m[r28{0} - 16]=0x4051b4,
                m[r28{0} - 20]=0x4051c0,   m[r28{0} - 24]=%pc,   m[r28{0} - 28]=m[r28{0} - 28]{0},   tmp1=r24{27},
                %flags=LOGICALFLAGS32( r24{27} ),   %ZF=LOGICALFLAGS32( r24{27} ),   %CF=LOGICALFLAGS32( r24{27} )
              Live variables: eax in proc proc18
result:    0 *32* eax := -
dest is not lib
call:   45 {*32* eax, *32* r25, *32* r26, *32** r28} := CALL GetModuleHandleA(
              )
              Reaching definitions: r24=r24{36},   r25=r25{36},   r26=r26{36},   r28=r28{0} - 28,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=0x40519c,   m[r28{0} - 12]=0x4051a8,   m[r28{0} - 16]=0x4051b4,
                m[r28{0} - 20]=0x4051c0,   m[r28{0} - 24]=0x4051d0,   m[r28{0} - 28]=%pc,   tmp1=r24{36},
                %flags=LOGICALFLAGS32( r24{36} ),   %ZF=LOGICALFLAGS32( r24{36} ),   %CF=LOGICALFLAGS32( r24{36} )
              Live variables: eax in proc proc18
result:    0 *32* eax := -
dest is not lib
call:   15 {*32* eax_1, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local0 := eax
                *c** local1 := "tP$&8rzP$^"
              )
              Reaching definitions: r8=r8{0},   r9=r9{0},   r10=r10{0},   r11=r11{0},   r24=r24{9},   r27=r27{0},
                r28=r28{0} - 28,   r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 20]=0x4053b0,   m[r28{0} - 24]=r24{9},   m[r28{0} - 28]=%pc,
                m[r28{0} - 32]=m[r28{0} - 32]{0},   m[r28{0} - 36]=m[r28{0} - 36]{0},   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 12, r28{0} - 16 ),   %ZF=(r28{0} - 16) = 0,   %CF=(r28{0} - 4) <u 12
              Live variables: eax_1 in proc proc19
result:    0 *32* eax_1 := -
dest is not lib
call:   25 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local0 := ecx
                *c** local1 := "zP$^"
              )
              Reaching definitions: r8=r8{0},   r9=r9{0},   r10=r10{0},   r11=r11{0},   r24=r24{15},   r25=r25{19},
                r26=r26{15},   r27=r27{0},   r28=r28{0} - 28,   r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 16]=r24{15},
                m[r28{0} - 20]=0x4053bc,   m[r28{0} - 24]=r25{19},   m[r28{0} - 28]=%pc,
                m[r28{0} - 32]=m[r28{0} - 32]{0},   m[r28{0} - 36]=m[r28{0} - 36]{0},   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 12, r28{0} - 16 ),   %ZF=(r28{0} - 16) = 0,   %CF=(r28{0} - 4) <u 12
              Live variables: eax in proc proc19
result:    0 *32* eax := -
dest is not lib
call:   35 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local0 := edx
                *c** local1 := "j$2U-)0*W"ZMw"
              )
              Reaching definitions: r8=r8{0},   r9=r9{0},   r10=r10{0},   r11=r11{0},   r24=r24{25},   r25=r25{25},
                r26=r26{29},   r27=r27{0},   r28=r28{0} - 28,   r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{25},
                m[r28{0} - 16]=r24{15},   m[r28{0} - 20]=0x4053c8,   m[r28{0} - 24]=r26{29},   m[r28{0} - 28]=%pc,
                m[r28{0} - 32]=m[r28{0} - 32]{0},   m[r28{0} - 36]=m[r28{0} - 36]{0},   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 12, r28{0} - 16 ),   %ZF=(r28{0} - 16) = 0,   %CF=(r28{0} - 4) <u 12
              Live variables: eax in proc proc19
result:    0 *32* eax := -
dest is not lib
call:   44 {*32* eax, *32* ecx, *32* edx, *v** esp_1} := CALL lstrcmpA(
              )
              Reaching definitions: r8=r8{0},   r9=r9{0},   r10=r10{0},   r11=r11{0},   r24=r24{35},   r25=r25{35},
                r26=r26{35},   r27=r27{0},   r28=r28{0} - 28,   r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{25},
                m[r28{0} - 12]=r24{35},   m[r28{0} - 16]=r24{15},   m[r28{0} - 20]=0x4054f8,   m[r28{0} - 24]=0x4055c1,
                m[r28{0} - 28]=%pc,   m[r28{0} - 32]=m[r28{0} - 32]{0},   m[r28{0} - 36]=m[r28{0} - 36]{0},
                tmp1=r28{0} - 4,   %flags=SUBFLAGS32( r28{0} - 4, 12, r28{0} - 16 ),   %ZF=(r28{0} - 16) = 0,
                %CF=(r28{0} - 4) <u 12
              Live variables: eax,  esp_1 in proc proc19
result:    0 *32* eax := -
result:    0 *v** esp_1 := -
dest is not lib
call:  203 {*8** eax, *32* esi, *v* ecx, *v* edx, *8*** esp_5, *32* edi} := CALL proc21(
                *32* m[esp_17 - 4] := m[esp_17 - 4]
              )
              Reaching definitions: r8=r8{0},   r9=r9{0},   r10=r10{0},   r11=r11{0},   r24=r24{336},   r25=r25{337},
                r26=r26{338},   r27=r27{0},   r28=r28{339} - 8,   r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{25},
                m[r28{0} - 12]=r24{35},   m[r28{0} - 16]=r24{15},   m[r28{0} - 20]=0x4054f8,   m[r28{0} - 24]=0x4055c1,
                m[r28{0} - 28]=m[r28{0} - 28]{424},   m[r28{0} - 32]=m[r28{0} - 32]{425},
                m[r28{0} - 36]=m[r28{0} - 36]{426},   tmp1=tmp1{355},   %flags=%flags{356},   %ZF=%ZF{357},
                %CF=%CF{358}
              Live variables: eax,  edi,  esi,  esp_5 in proc proc19
result:    0 *8** eax := -
result:    0 *32* esi := -
result:    0 *8*** esp_5 := -
result:    0 *32* edi := -
dest is not lib
call:  215 {*32* eax, *8* al, *32* ecx, *32* edx, *v* esp} := CALL proc12(
                *8** m[esp_5 - 4] := m[esp_5 - 4]
                *8** m[esp_5] := m[esp_5]
              )
              Reaching definitions: r8=r8{0},   r9=r9{0},   r10=r10{0},   r11=r11{0},   r24=r24{203},   r25=r25{203},
                r26=global167,   r27=r27{0},   r28=r28{203} - 8,   r29=r28{0} - 4,   r30=r30{203},   r31=r31{203},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{25},
                m[r28{0} - 12]=r24{35},   m[r28{0} - 16]=r24{15},   m[r28{0} - 20]=0x4054f8,   m[r28{0} - 24]=0x4055c1,
                m[r28{0} - 28]=m[r28{0} - 28]{424},   m[r28{0} - 32]=m[r28{0} - 32]{425},
                m[r28{0} - 36]=m[r28{0} - 36]{426},   tmp1=r28{203},   %flags=ADDFLAGS32( r28{203}, 4, r28{203} + 4 ),
                %ZF=ADDFLAGS32( r28{203}, 4, r28{203} + 4 ),   %CF=ADDFLAGS32( r28{203}, 4, r28{203} + 4 )
              Live variables: al in proc proc19
result:    0 *8* al := -
dest is not lib
call:   75 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL lstrcmpA(
              )
              Reaching definitions: r8=r8{0},   r9=r9{0},   r10=r10{0},   r11=r11{0},   r24=r24{336},   r25=r25{337},
                r26=r26{338},   r27=r27{0},   r28=r28{339} - 12,   r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{25},
                m[r28{0} - 12]=r24{35},   m[r28{0} - 16]=r24{15},   m[r28{0} - 20]=0x4054f8,   m[r28{0} - 24]=0x4055c1,
                m[r28{0} - 28]=m[r28{0} - 28]{424},   m[r28{0} - 32]=m[r28{0} - 32]{425},
                m[r28{0} - 36]=m[r28{0} - 36]{426},   tmp1=global165,   %flags=SUBFLAGS32( m[0x405438], 0, global165 ),
                %ZF=global165 = 0,   %CF=m[0x405438] <u 0
              Live variables: eax in proc proc19
result:    0 *32* eax := -
dest is not lib
call:  108 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL lstrcmpA(
              )
              Reaching definitions: r8=r8{0},   r9=r9{0},   r10=r10{0},   r11=r11{0},   r24=r24{75},   r25=r25{75},
                r26=r26{75},   r27=r27{0},   r28=r28{339} - 20,   r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{25},
                m[r28{0} - 12]=r24{35},   m[r28{0} - 16]=r24{15},   m[r28{0} - 20]=0x4054f8,   m[r28{0} - 24]=0x4055c1,
                m[r28{0} - 28]=m[r28{0} - 28]{424},   m[r28{0} - 32]=m[r28{0} - 32]{425},
                m[r28{0} - 36]=m[r28{0} - 36]{426},   tmp1=r24{75},   %flags=LOGICALFLAGS32( r24{75} ),
                %ZF=LOGICALFLAGS32( r24{75} ),   %CF=LOGICALFLAGS32( r24{75} )
              Live variables: eax in proc proc19
result:    0 *32* eax := -
dest is not lib
call:  150 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL lstrcmpA(
              )
              Reaching definitions: r8=r8{0},   r9=r9{0},   r10=r10{0},   r11=r11{0},   r24=r24{108},   r25=r25{108},
                r26=r26{108},   r27=r27{0},   r28=r28{339} - 28,   r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{25},
                m[r28{0} - 12]=r24{35},   m[r28{0} - 16]=r24{15},   m[r28{0} - 20]=0x4054f8,   m[r28{0} - 24]=0x4055c1,
                m[r28{0} - 28]=m[r28{0} - 28]{424},   m[r28{0} - 32]=m[r28{0} - 32]{425},
                m[r28{0} - 36]=m[r28{0} - 36]{426},   tmp1=r24{108},   %flags=LOGICALFLAGS32( r24{108} ),
                %ZF=LOGICALFLAGS32( r24{108} ),   %CF=LOGICALFLAGS32( r24{108} )
              Live variables: eax in proc proc19
result:    0 *32* eax := -
dest is not lib
call:  181 {*8** eax, *32* esi, *v* ecx, *v* edx, *8*** esp_15, *32* edi} := CALL proc21(
                *32* m[esp_17 - 28] := m[esp_17 - 28]
              )
              Reaching definitions: r8=r8{0},   r9=r9{0},   r10=r10{0},   r11=r11{0},   r24=r24{150},   r25=r25{150},
                r26=r26{150},   r27=r27{0},   r28=r28{339} - 32,   r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{25},
                m[r28{0} - 12]=r24{35},   m[r28{0} - 16]=r24{15},   m[r28{0} - 20]=0x4054f8,   m[r28{0} - 24]=0x4055c1,
                m[r28{0} - 28]=m[r28{0} - 28]{424},   m[r28{0} - 32]=m[r28{0} - 32]{425},
                m[r28{0} - 36]=m[r28{0} - 36]{426},   tmp1=r24{150},   %flags=LOGICALFLAGS32( r24{150} ),
                %ZF=LOGICALFLAGS32( r24{150} ),   %CF=LOGICALFLAGS32( r24{150} )
              Live variables: eax,  edi,  esi,  esp_15 in proc proc19
result:    0 *8** eax := -
result:    0 *32* esi := -
result:    0 *8*** esp_15 := -
result:    0 *32* edi := -
dest is not lib
call:  193 {*32* eax, *8* al, *32* ecx, *32* edx, *v* esp} := CALL proc12(
                *8** m[esp_15 - 4] := m[esp_15 - 4]
                *8** m[esp_15] := m[esp_15]
              )
              Reaching definitions: r8=r8{0},   r9=r9{0},   r10=r10{0},   r11=r11{0},   r24=r24{181},   r25=global167,
                r26=r26{181},   r27=r27{0},   r28=r28{181} - 8,   r29=r28{0} - 4,   r30=r30{181},   r31=r31{181},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{25},
                m[r28{0} - 12]=r24{35},   m[r28{0} - 16]=r24{15},   m[r28{0} - 20]=0x4054f8,   m[r28{0} - 24]=0x4055c1,
                m[r28{0} - 28]=m[r28{0} - 28]{424},   m[r28{0} - 32]=m[r28{0} - 32]{425},
                m[r28{0} - 36]=m[r28{0} - 36]{426},   tmp1=r28{181},   %flags=ADDFLAGS32( r28{181}, 4, r28{181} + 4 ),
                %ZF=ADDFLAGS32( r28{181}, 4, r28{181} + 4 ),   %CF=ADDFLAGS32( r28{181}, 4, r28{181} + 4 )
              Live variables: al in proc proc19
result:    0 *8* al := -
dest is not lib
call:  159 {*8** eax, *32* esi, *v* ecx, *v* edx, *8*** esp_13, *32* edi} := CALL proc21(
                *32* m[esp_17 - 28] := m[esp_17 - 28]
              )
              Reaching definitions: r8=r8{0},   r9=r9{0},   r10=r10{0},   r11=r11{0},   r24=r24{150},   r25=r25{150},
                r26=r26{150},   r27=r27{0},   r28=r28{339} - 32,   r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{25},
                m[r28{0} - 12]=r24{35},   m[r28{0} - 16]=r24{15},   m[r28{0} - 20]=0x4054f8,   m[r28{0} - 24]=0x4055c1,
                m[r28{0} - 28]=m[r28{0} - 28]{424},   m[r28{0} - 32]=m[r28{0} - 32]{425},
                m[r28{0} - 36]=m[r28{0} - 36]{426},   tmp1=r24{150},   %flags=LOGICALFLAGS32( r24{150} ),
                %ZF=LOGICALFLAGS32( r24{150} ),   %CF=LOGICALFLAGS32( r24{150} )
              Live variables: eax,  edi,  esi,  esp_13 in proc proc19
result:    0 *8** eax := -
result:    0 *32* esi := -
result:    0 *8*** esp_13 := -
result:    0 *32* edi := -
dest is not lib
call:  171 {*32* eax, *8* al, *32* ecx, *32* edx, *v* esp} := CALL proc12(
                *8** m[esp_13 - 4] := m[esp_13 - 4]
                *8** m[esp_13] := m[esp_13]
              )
              Reaching definitions: r8=r8{0},   r9=r9{0},   r10=r10{0},   r11=r11{0},   r24=global167,   r25=r25{159},
                r26=r26{159},   r27=r27{0},   r28=r28{159} - 8,   r29=r28{0} - 4,   r30=r30{159},   r31=r31{159},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{25},
                m[r28{0} - 12]=r24{35},   m[r28{0} - 16]=r24{15},   m[r28{0} - 20]=0x4054f8,   m[r28{0} - 24]=0x4055c1,
                m[r28{0} - 28]=m[r28{0} - 28]{424},   m[r28{0} - 32]=m[r28{0} - 32]{425},
                m[r28{0} - 36]=m[r28{0} - 36]{426},   tmp1=r28{159},   %flags=ADDFLAGS32( r28{159}, 4, r28{159} + 4 ),
                %ZF=ADDFLAGS32( r28{159}, 4, r28{159} + 4 ),   %CF=ADDFLAGS32( r28{159}, 4, r28{159} + 4 )
              Live variables: al in proc proc19
result:    0 *8* al := -
dest is not lib
call:  117 {*8** eax, *32* esi, *v* ecx, *v* edx, *8*** esp_8, *32* edi} := CALL proc21(
                *32* m[esp_17 - 20] := m[esp_17 - 20]
              )
              Reaching definitions: r8=r8{0},   r9=r9{0},   r10=r10{0},   r11=r11{0},   r24=r24{108},   r25=r25{108},
                r26=r26{108},   r27=r27{0},   r28=r28{339} - 24,   r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{25},
                m[r28{0} - 12]=r24{35},   m[r28{0} - 16]=r24{15},   m[r28{0} - 20]=0x4054f8,   m[r28{0} - 24]=0x4055c1,
                m[r28{0} - 28]=m[r28{0} - 28]{424},   m[r28{0} - 32]=m[r28{0} - 32]{425},
                m[r28{0} - 36]=m[r28{0} - 36]{426},   tmp1=r24{108},   %flags=LOGICALFLAGS32( r24{108} ),
                %ZF=LOGICALFLAGS32( r24{108} ),   %CF=LOGICALFLAGS32( r24{108} )
              Live variables: eax,  edi,  esi,  esp_8 in proc proc19
result:    0 *8** eax := -
result:    0 *32* esi := -
result:    0 *8*** esp_8 := -
result:    0 *32* edi := -
dest is not lib
call:  129 {*32* eax, *8* al, *32* ecx, *32* edx, *v* esp} := CALL proc12(
                *8** m[esp_8 - 4] := m[esp_8 - 4]
                *8** m[esp_8] := m[esp_8]
              )
              Reaching definitions: r8=r8{0},   r9=r9{0},   r10=r10{0},   r11=r11{0},   r24=r24{117},   r25=global167,
                r26=r26{117},   r27=r27{0},   r28=r28{117} - 8,   r29=r28{0} - 4,   r30=r30{117},   r31=r31{117},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{25},
                m[r28{0} - 12]=r24{35},   m[r28{0} - 16]=r24{15},   m[r28{0} - 20]=0x4054f8,   m[r28{0} - 24]=0x4055c1,
                m[r28{0} - 28]=m[r28{0} - 28]{424},   m[r28{0} - 32]=m[r28{0} - 32]{425},
                m[r28{0} - 36]=m[r28{0} - 36]{426},   tmp1=r28{117},   %flags=ADDFLAGS32( r28{117}, 4, r28{117} + 4 ),
                %ZF=ADDFLAGS32( r28{117}, 4, r28{117} + 4 ),   %CF=ADDFLAGS32( r28{117}, 4, r28{117} + 4 )
              Live variables: al in proc proc19
result:    0 *8* al := -
dest is not lib
call:  141 {*32* eax, *32* ecx, *32* edx, *v** esp_9} := CALL lstrcatA(
                *LPSTR* m[esp_8 - 4] := m[esp_8 - 4]
                *8** m[esp_8] := m[esp_8]
              )
              Reaching definitions: r8=r8{129},   r9=r9{0},   r10=r10{0},   r11=r11{0},   r24=r24{129},   r25=r25{129},
                r26=global167,   r27=r27{0},   r28=r28{117} - 8,   r29=r28{0} - 4,   r30=r30{117},   r31=r31{117},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{25},
                m[r28{0} - 12]=r24{35},   m[r28{0} - 16]=r24{15},   m[r28{0} - 20]=0x4054f8,   m[r28{0} - 24]=0x4055c1,
                m[r28{0} - 28]=m[r28{0} - 28]{424},   m[r28{0} - 32]=m[r28{0} - 32]{425},
                m[r28{0} - 36]=m[r28{0} - 36]{426},   tmp1=(r28{117} - 8) + 4,
                %flags=ADDFLAGS32( r28{117} - 4, 8, r28{117} + 4 ),   %ZF=ADDFLAGS32( r28{117} - 4, 8, r28{117} + 4 ),
                %CF=ADDFLAGS32( r28{117} - 4, 8, r28{117} + 4 )
              Live variables: esp_9 in proc proc19
result:    0 *v** esp_9 := -
dest is not lib
call:   84 {*8** eax, *32* esi, *v* ecx, *v* edx, *8*** esp_3, *32* edi} := CALL proc21(
                *32* m[esp_17 - 12] := m[esp_17 - 12]
              )
              Reaching definitions: r8=r8{0},   r9=r9{0},   r10=r10{0},   r11=r11{0},   r24=r24{75},   r25=r25{75},
                r26=r26{75},   r27=r27{0},   r28=r28{339} - 16,   r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{25},
                m[r28{0} - 12]=r24{35},   m[r28{0} - 16]=r24{15},   m[r28{0} - 20]=0x4054f8,   m[r28{0} - 24]=0x4055c1,
                m[r28{0} - 28]=m[r28{0} - 28]{424},   m[r28{0} - 32]=m[r28{0} - 32]{425},
                m[r28{0} - 36]=m[r28{0} - 36]{426},   tmp1=r24{75},   %flags=LOGICALFLAGS32( r24{75} ),
                %ZF=LOGICALFLAGS32( r24{75} ),   %CF=LOGICALFLAGS32( r24{75} )
              Live variables: eax,  edi,  esi,  esp_3 in proc proc19
result:    0 *8** eax := -
result:    0 *32* esi := -
result:    0 *8*** esp_3 := -
result:    0 *32* edi := -
dest is not lib
call:   96 {*32* eax, *8* al, *32* ecx, *32* edx, *v* esp} := CALL proc12(
                *8** m[esp_3 - 4] := m[esp_3 - 4]
                *8** m[esp_3] := m[esp_3]
              )
              Reaching definitions: r8=r8{0},   r9=r9{0},   r10=r10{0},   r11=r11{0},   r24=global167,   r25=r25{84},
                r26=r26{84},   r27=r27{0},   r28=r28{84} - 8,   r29=r28{0} - 4,   r30=r30{84},   r31=r31{84},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{25},
                m[r28{0} - 12]=r24{35},   m[r28{0} - 16]=r24{15},   m[r28{0} - 20]=0x4054f8,   m[r28{0} - 24]=0x4055c1,
                m[r28{0} - 28]=m[r28{0} - 28]{424},   m[r28{0} - 32]=m[r28{0} - 32]{425},
                m[r28{0} - 36]=m[r28{0} - 36]{426},   tmp1=r28{84},   %flags=ADDFLAGS32( r28{84}, 4, r28{84} + 4 ),
                %ZF=ADDFLAGS32( r28{84}, 4, r28{84} + 4 ),   %CF=ADDFLAGS32( r28{84}, 4, r28{84} + 4 )
              Live variables: al in proc proc19
result:    0 *8* al := -
dest is not lib
call:  227 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL lstrcatA(
                *LPSTR* m[esp_18 - 8] := m[esp_18 - 8]
                *LPSTR* m[esp_18 - 4] := m[esp_18 - 4]
              )
              Reaching definitions: r8=r8{359},   r9=r9{0},   r10=r10{0},   r11=r11{0},   r24=global167,   r25=r25{361}
                r26=r26{362},   r27=r27{0},   r28=r28{363} - 12,   r29=r28{0} - 4,   r30=r30{364},   r31=r31{365},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{25},
                m[r28{0} - 12]=r24{35},   m[r28{0} - 16]=r24{15},   m[r28{0} - 20]=0x4054f8,   m[r28{0} - 24]=0x4055c1,
                m[r28{0} - 28]=m[r28{0} - 28]{424},   m[r28{0} - 32]=m[r28{0} - 32]{425},
                m[r28{0} - 36]=m[r28{0} - 36]{426},   tmp1=tmp1{366},   %flags=%flags{367},   %ZF=%ZF{368},
                %CF=%CF{369}
              Live variables:  in proc proc19
dest is not lib
call:  236 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL lstrcatA(
                *LPSTR* m[esp_18 - 8] := m[esp_18 - 8]
                *LPSTR* m[esp_18 - 4] := m[esp_18 - 4]
              )
              Reaching definitions: r8=r8{359},   r9=r9{0},   r10=r10{0},   r11=r11{0},   r24=r24{227},   r25=global167
                r26=r26{227},   r27=r27{0},   r28=r28{363} - 12,   r29=r28{0} - 4,   r30=r30{364},   r31=r31{365},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{25},
                m[r28{0} - 12]=r24{35},   m[r28{0} - 16]=r24{15},   m[r28{0} - 20]=0x4054f8,   m[r28{0} - 24]=0x4055c1,
                m[r28{0} - 28]=m[r28{0} - 28]{424},   m[r28{0} - 32]=m[r28{0} - 32]{425},
                m[r28{0} - 36]=m[r28{0} - 36]{426},   tmp1=tmp1{366},   %flags=%flags{367},   %ZF=%ZF{368},
                %CF=%CF{369}
              Live variables:  in proc proc19
dest is not lib
call:  246 {*32* eax, *32* ecx, *32* edx, *v** esp} := CALL lstrcmpA(
              )
              Reaching definitions: r8=r8{359},   r9=r9{0},   r10=r10{0},   r11=r11{0},   r24=m[r28{0} + 4]{0},
                r25=r25{236},   r26=global167,   r27=r27{0},   r28=r28{363} - 12,   r29=r28{0} - 4,   r30=r30{364},
                r31=r31{365},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{25},
                m[r28{0} - 12]=r24{35},   m[r28{0} - 16]=r24{15},   m[r28{0} - 20]=0x4054f8,   m[r28{0} - 24]=0x4055c1,
                m[r28{0} - 28]=m[r28{0} - 28]{424},   m[r28{0} - 32]=m[r28{0} - 32]{425},
                m[r28{0} - 36]=m[r28{0} - 36]{426},   tmp1=tmp1{366},   %flags=%flags{367},   %ZF=%ZF{368},
                %CF=%CF{369}
              Live variables: eax in proc proc19
result:    0 *32* eax := -
dest is not lib
call:  257 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL lstrcmpA(
              )
              Reaching definitions: r8=r8{359},   r9=r9{0},   r10=r10{0},   r11=r11{0},   r24=r24{246},   r25=r25{246},
                r26=r26{246},   r27=r27{0},   r28=r28{363} - 20,   r29=r28{0} - 4,   r30=r30{364},   r31=r31{365},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{25},
                m[r28{0} - 12]=r24{35},   m[r28{0} - 16]=r24{15},   m[r28{0} - 20]=0x4054f8,   m[r28{0} - 24]=0x4055c1,
                m[r28{0} - 28]=m[r28{0} - 28]{424},   m[r28{0} - 32]=m[r28{0} - 32]{425},
                m[r28{0} - 36]=m[r28{0} - 36]{426},   tmp1=r24{246},   %flags=LOGICALFLAGS32( r24{246} ),
                %ZF=LOGICALFLAGS32( r24{246} ),   %CF=LOGICALFLAGS32( r24{246} )
              Live variables: eax,  edx in proc proc19
result:    0 *32* eax := -
result:    0 *v* edx := -
dest is not lib
call:  293 {*32* eax, *32* ecx, *32* edx, *v** esp} := CALL lstrcmpA(
              )
              Reaching definitions: r8=r8{370},   r9=r9{0},   r10=r10{0},   r11=r11{0},   r24=r24{374},   r25=r25{375},
                r26=r26{376},   r27=r27{454},   r28=r28{377} - 12,   r29=r29{378},   r30=r30{379},   r31=r31{380},
                m[r28{0} + 4]=m[r28{0} + 4]{455},   m[r28{0} - 4]=m[r28{0} - 4]{427},
                m[r28{0} - 8]=m[r28{0} - 8]{428},   m[r28{0} - 12]=m[r28{0} - 12]{429},
                m[r28{0} - 16]=m[r28{0} - 16]{430},   m[r28{0} - 20]=m[r28{0} - 20]{431},
                m[r28{0} - 24]=m[r28{0} - 24]{432},   m[r28{0} - 28]=m[r28{0} - 28]{433},
                m[r28{0} - 32]=m[r28{0} - 32]{434},   m[r28{0} - 36]=m[r28{0} - 36]{435},   tmp1=tmp1{381},
                %flags=%flags{382},   %ZF=%ZF{383},   %CF=%CF{384}
              Live variables: eax,  ecx,  esp in proc proc19
result:    0 *32* eax := -
result:    0 *32* ecx := -
result:    0 *v** esp := -
dest is not lib
call:  313 {*32* eax, *v* ecx, *v* edx, *v** esp} := CALL lstrcmpA(
              )
              Reaching definitions: r8=r8{385},   r9=r9{386},   r10=r10{387},   r11=r11{388},   r24=r24{389},
                r25=r25{390},   r26=r26{391},   r27=r27{456},   r28=r28{392} - 12,   r29=r29{393},   r30=r30{394},
                r31=r31{395},   m[r28{0} + 4]=m[r28{0} + 4]{457},   m[r28{0} - 4]=m[r28{0} - 4]{436},
                m[r28{0} - 8]=m[r28{0} - 8]{437},   m[r28{0} - 12]=m[r28{0} - 12]{438},
                m[r28{0} - 16]=m[r28{0} - 16]{439},   m[r28{0} - 20]=m[r28{0} - 20]{440},
                m[r28{0} - 24]=m[r28{0} - 24]{441},   m[r28{0} - 28]=m[r28{0} - 28]{442},
                m[r28{0} - 32]=m[r28{0} - 32]{443},   m[r28{0} - 36]=m[r28{0} - 36]{444},   tmp1=tmp1{396},
                %flags=%flags{397},   %ZF=%ZF{398},   %CF=%CF{399}
              Live variables: eax,  esp in proc proc19
result:    0 *32* eax := -
result:    0 *v** esp := -
dest is not lib
call:  320 {*32* eax, *8* al, *u32* cl, *u8* dl, *j8* bl, *v* ecx, *v* edx, *v** esp, *32* ebp} := CALL proc26(
                *32* m[esp_12 - 100] := m[esp_12 - 100]
                *u32* cl := cl
                *u8* dl := dl
                *j8* bl := bl
                *32* ebx := param5
              )
              Reaching definitions: r8=r8{385},   r9=r9{386},   r10=r10{387},   r11=r11{388},   r24=r24{313},
                r25=r25{313},   r26=r26{313},   r27=r27{456},   r28=r28{392} - 12,   r29=r29{393},   r30=r30{394},
                r31=r31{395},   m[r28{0} + 4]=m[r28{0} + 4]{457},   m[r28{0} - 4]=m[r28{0} - 4]{436},
                m[r28{0} - 8]=m[r28{0} - 8]{437},   m[r28{0} - 12]=m[r28{0} - 12]{438},
                m[r28{0} - 16]=m[r28{0} - 16]{439},   m[r28{0} - 20]=m[r28{0} - 20]{440},
                m[r28{0} - 24]=m[r28{0} - 24]{441},   m[r28{0} - 28]=m[r28{0} - 28]{442},
                m[r28{0} - 32]=m[r28{0} - 32]{443},   m[r28{0} - 36]=m[r28{0} - 36]{444},   tmp1=r24{313},
                %flags=LOGICALFLAGS32( r24{313} ),   %ZF=LOGICALFLAGS32( r24{313} ),   %CF=LOGICALFLAGS32( r24{313} )
              Live variables: al,  esp in proc proc19
result:    0 *8* al := -
result:    0 *v** esp := -
dest is not lib
call:  324 {*v* eax, *8* al, *32* ecx, *32* edx, *v** esp, *32** ebp} := CALL proc27(
                *8* al := al
              )
              Reaching definitions: r8=r8{400},   r9=r9{401},   r10=r10{402},   r11=r11{403},   r24=r24{404},
                r25=r25{405},   r26=r26{406},   r27=r27{456},   r28=r28{407} - 4,   r29=r29{408},   r30=r30{394},
                r31=r31{395},   m[r28{0} + 4]=m[r28{0} + 4]{457},   m[r28{0} - 4]=m[r28{0} - 4]{436},
                m[r28{0} - 8]=m[r28{0} - 8]{437},   m[r28{0} - 12]=m[r28{0} - 12]{438},
                m[r28{0} - 16]=m[r28{0} - 16]{439},   m[r28{0} - 20]=m[r28{0} - 20]{440},
                m[r28{0} - 24]=m[r28{0} - 24]{441},   m[r28{0} - 28]=m[r28{0} - 28]{442},
                m[r28{0} - 32]=m[r28{0} - 32]{443},   m[r28{0} - 36]=m[r28{0} - 36]{444},   tmp1=r24{313},
                %flags=LOGICALFLAGS32( r24{313} ),   %ZF=LOGICALFLAGS32( r24{313} ),   %CF=LOGICALFLAGS32( r24{313} )
              Live variables:  in proc proc19
dest is not lib
call:   55 {*32* eax, *32* ecx, *32* edx, *v** esp_2} := CALL lstrcmpA(
              )
              Reaching definitions: r8=r8{0},   r9=r9{0},   r10=r10{0},   r11=r11{0},   r24=r24{44},   r25=r25{44},
                r26=r26{44},   r27=r27{0},   r28=r28{0} - 36,   r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{25},
                m[r28{0} - 12]=r24{35},   m[r28{0} - 16]=r24{15},   m[r28{0} - 20]=0x4054f8,   m[r28{0} - 24]=0x4055c1,
                m[r28{0} - 28]=0x4054fc,   m[r28{0} - 32]=0x4055c1,   m[r28{0} - 36]=%pc,   tmp1=r24{44},
                %flags=LOGICALFLAGS32( r24{44} ),   %ZF=LOGICALFLAGS32( r24{44} ),   %CF=LOGICALFLAGS32( r24{44} )
              Live variables: eax,  esp_2 in proc proc19
result:    0 *32* eax := -
result:    0 *v** esp_2 := -
dest is not lib
call:   16 {*u32* eax, *32* r25, *32* r26} := CALL GetEnvironmentVariableA(
              )
              Reaching definitions: r28=r28{0} - 24,   r30=0x400,   r31=0x406148,   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} - 4]=r30{0},   m[r28{0} - 8]=r31{0},   m[r28{0} - 12]=0x400,   m[r28{0} - 16]=0x406148,
                m[r28{0} - 20]=m[r28{0} + 4]{0},   m[r28{0} - 24]=%pc
              Live variables: eax in proc proc21
result:    0 *u32* eax := -
dest is not lib
call:   13 {*32* r24, *32* r25, *32* r26} := CALL HeapFree(
                *HANDLE* local0 := local0
                *DWORD* local1 := 0
                *LPVOID* local2 := param1
              )
              Reaching definitions: r24=r24{0},   r25=r25{0},   r26=r26{0},   r28=r28{0} - 16,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=m[r28{0} + 4]{0},   m[r28{0} - 8]=0,
                m[r28{0} - 12]=m[r28{0} - 12]{8},   m[r28{0} - 16]=%pc,   tmp1=m[r28{0} + 4]{0},
                %flags=SUBFLAGS32( m[r28{0} + 4], 0, m[r28{0} + 4]{0} ),   %ZF=m[r28{0} + 4]{0} = 0,
                %CF=m[r28{0} + 4] <u 0
              Live variables:  in proc proc22
dest is not lib
call:   17 {*v* eax, *16* ax, *16* bx, *8* al, *8* bl, *8* bh_1, *32* ecx, *32* edx, *v* esp} := CALL proc24(
                *j32** local0 := a[param1]
                *u32* local1 := 0
                *u32* local2 := 68
                *u16* ax := param5
                *j16* bx := param7
                *j8* bl := param8
                *u32* bh := param9
                *32* ebx := param10
              )
              Reaching definitions: r0=r0{0},   r2=r2{0},   r3=r3{0},   r11=r11{0},   r15=r15{0},   r24=r28{0} - 804,
                r26=r26{0},   r27=r27{0},   r28=r28{0} - 868,   r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 12]=m[r28{0} - 12]{0},
                m[r28{0} - 732]=m[r28{0} - 732]{0},   m[r28{0} - 804]=m[r28{0} - 804]{0},
                m[r28{0} - 808]=m[r28{0} - 808]{0},   m[r28{0} - 812]=m[r28{0} - 812]{0},
                m[r28{0} - 816]=m[r28{0} - 816]{0},   m[r28{0} - 848]=m[r28{0} - 848]{0},
                m[r28{0} - 852]=m[r28{0} - 852]{0},   m[r28{0} - 856]=68,   m[r28{0} - 860]=0,
                m[r28{0} - 864]=r28{0} - 804,   m[r28{0} - 868]=%pc,   m[r28{0} - 872]=m[r28{0} - 872]{0},
                m[r28{0} - 876]=m[r28{0} - 876]{0},   m[r28{0} - 880]=m[r28{0} - 880]{0},
                m[r28{0} - 884]=m[r28{0} - 884]{0},   m[r28{0} - 888]=m[r28{0} - 888]{0},
                m[r28{0} - 892]=m[r28{0} - 892]{0},   m[r28{0} - 896]=m[r28{0} - 896]{0},
                m[r28{0} - 900]=m[r28{0} - 900]{0},   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 848, r28{0} - 852 ),   %ZF=(r28{0} - 852) = 0,   %CF=(r28{0} - 4) <u 848
              Live variables: al,  bh_1,  bl,  bx in proc proc23
result:    0 *16* bx := -
result:    0 *8* al := -
result:    0 *8* bl := -
result:    0 *8* bh_1 := -
dest is not lib
call:   57 {*32* eax_2, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local3 := ecx
                *c** local4 := "z
/\+=Fp"
              )
              Reaching definitions: r0=r0{28},   r2=r2{0},   r3=r3{17},   r8=r8{17},   r11=r11{17},   r15=r15{17},
                r24=r26{39},   r25=r25{51},   r26=r26{39},   r27=r27{0},   r28=(r28{0} - 868) + 4,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 12]=m[r28{0} - 12]{0},
                m[r28{0} - 728]=0x10007,   m[r28{0} - 732]=m[r28{0} - 732]{0},   m[r28{0} - 804]=68,
                m[r28{0} - 808]=m[r28{0} - 808]{0},   m[r28{0} - 812]=m[r28{0} - 812]{0},
                m[r28{0} - 816]=m[r28{0} - 816]{0},   m[r28{0} - 828]=m[r28{0} + 8]{0},   m[r28{0} - 848]=r26{39},
                m[r28{0} - 852]=m[r28{0} - 852]{0},   m[r28{0} - 856]=0x405068,   m[r28{0} - 860]=r25{51},
                m[r28{0} - 864]=%pc,   m[r28{0} - 868]=%pc,   m[r28{0} - 872]=m[r28{0} - 872]{0},
                m[r28{0} - 876]=m[r28{0} - 876]{0},   m[r28{0} - 880]=m[r28{0} - 880]{0},
                m[r28{0} - 884]=m[r28{0} - 884]{0},   m[r28{0} - 888]=m[r28{0} - 888]{0},
                m[r28{0} - 892]=m[r28{0} - 892]{0},   m[r28{0} - 896]=m[r28{0} - 896]{0},
                m[r28{0} - 900]=m[r28{0} - 900]{0},   tmp1=tmp1{43},
                %flags=SUBFLAGS32( m[r26{39}], 0x4550, tmp1{43} ),   %ZF=tmp1{43} = 0,   %CF=m[r26{39}] <u 0x4550
              Live variables: eax_2 in proc proc23
result:    0 *32* eax_2 := -
dest is not lib
call:   67 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local3 := edx
                *c** local4 := "o.X$)(2p/p"
              )
              Reaching definitions: r0=r0{28},   r2=r2{0},   r3=r3{17},   r8=r8{17},   r11=r11{17},   r15=r15{17},
                r24=r24{57},   r25=r25{57},   r26=r26{61},   r27=r27{0},   r28=r28{0} - 864,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 12]=m[r28{0} - 12]{0},
                m[r28{0} - 728]=0x10007,   m[r28{0} - 732]=m[r28{0} - 732]{0},   m[r28{0} - 804]=68,
                m[r28{0} - 808]=m[r28{0} - 808]{0},   m[r28{0} - 812]=m[r28{0} - 812]{0},
                m[r28{0} - 816]=m[r28{0} - 816]{0},   m[r28{0} - 828]=m[r28{0} + 8]{0},   m[r28{0} - 848]=r26{39},
                m[r28{0} - 852]=r24{57},   m[r28{0} - 856]=0x4050fc,   m[r28{0} - 860]=r26{61},   m[r28{0} - 864]=%pc,
                m[r28{0} - 868]=%pc,   m[r28{0} - 872]=m[r28{0} - 872]{0},   m[r28{0} - 876]=m[r28{0} - 876]{0},
                m[r28{0} - 880]=m[r28{0} - 880]{0},   m[r28{0} - 884]=m[r28{0} - 884]{0},
                m[r28{0} - 888]=m[r28{0} - 888]{0},   m[r28{0} - 892]=m[r28{0} - 892]{0},
                m[r28{0} - 896]=m[r28{0} - 896]{0},   m[r28{0} - 900]=m[r28{0} - 900]{0},   tmp1=tmp1{43},
                %flags=SUBFLAGS32( m[r26{39}], 0x4550, tmp1{43} ),   %ZF=tmp1{43} = 0,   %CF=m[r26{39}] <u 0x4550
              Live variables: eax in proc proc23
result:    0 *32* eax := -
dest is not lib
call:   77 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local3 := eax
                *c** local4 := "w66X8>-;=S\J70b"
              )
              Reaching definitions: r0=r0{28},   r2=r2{0},   r3=r3{17},   r8=r8{17},   r11=r11{17},   r15=r15{17},
                r24=r24{71},   r25=r25{67},   r26=r26{67},   r27=r27{0},   r28=r28{0} - 864,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 12]=m[r28{0} - 12]{0},
                m[r28{0} - 728]=0x10007,   m[r28{0} - 732]=m[r28{0} - 732]{0},   m[r28{0} - 804]=68,
                m[r28{0} - 808]=m[r28{0} - 808]{0},   m[r28{0} - 812]=m[r28{0} - 812]{0},   m[r28{0} - 816]=r24{67},
                m[r28{0} - 828]=m[r28{0} + 8]{0},   m[r28{0} - 848]=r26{39},   m[r28{0} - 852]=r24{57},
                m[r28{0} - 856]=0x405078,   m[r28{0} - 860]=r24{71},   m[r28{0} - 864]=%pc,   m[r28{0} - 868]=%pc,
                m[r28{0} - 872]=m[r28{0} - 872]{0},   m[r28{0} - 876]=m[r28{0} - 876]{0},
                m[r28{0} - 880]=m[r28{0} - 880]{0},   m[r28{0} - 884]=m[r28{0} - 884]{0},
                m[r28{0} - 888]=m[r28{0} - 888]{0},   m[r28{0} - 892]=m[r28{0} - 892]{0},
                m[r28{0} - 896]=m[r28{0} - 896]{0},   m[r28{0} - 900]=m[r28{0} - 900]{0},   tmp1=tmp1{43},
                %flags=SUBFLAGS32( m[r26{39}], 0x4550, tmp1{43} ),   %ZF=tmp1{43} = 0,   %CF=m[r26{39}] <u 0x4550
              Live variables: eax in proc proc23
result:    0 *32* eax := -
dest is not lib
call:   87 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local3 := ecx
                *c** local4 := "w42M->-,T;=ZS1'b"
              )
              Reaching definitions: r0=r0{28},   r2=r2{0},   r3=r3{17},   r8=r8{17},   r11=r11{17},   r15=r15{17},
                r24=r24{77},   r25=r25{81},   r26=r26{77},   r27=r27{0},   r28=r28{0} - 864,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{77},   m[r28{0} - 12]=m[r28{0} - 12]{0},
                m[r28{0} - 728]=0x10007,   m[r28{0} - 732]=m[r28{0} - 732]{0},   m[r28{0} - 804]=68,
                m[r28{0} - 808]=m[r28{0} - 808]{0},   m[r28{0} - 812]=m[r28{0} - 812]{0},   m[r28{0} - 816]=r24{67},
                m[r28{0} - 828]=m[r28{0} + 8]{0},   m[r28{0} - 848]=r26{39},   m[r28{0} - 852]=r24{57},
                m[r28{0} - 856]=0x405090,   m[r28{0} - 860]=r25{81},   m[r28{0} - 864]=%pc,   m[r28{0} - 868]=%pc,
                m[r28{0} - 872]=m[r28{0} - 872]{0},   m[r28{0} - 876]=m[r28{0} - 876]{0},
                m[r28{0} - 880]=m[r28{0} - 880]{0},   m[r28{0} - 884]=m[r28{0} - 884]{0},
                m[r28{0} - 888]=m[r28{0} - 888]{0},   m[r28{0} - 892]=m[r28{0} - 892]{0},
                m[r28{0} - 896]=m[r28{0} - 896]{0},   m[r28{0} - 900]=m[r28{0} - 900]{0},   tmp1=tmp1{43},
                %flags=SUBFLAGS32( m[r26{39}], 0x4550, tmp1{43} ),   %ZF=tmp1{43} = 0,   %CF=m[r26{39}] <u 0x4550
              Live variables: eax in proc proc23
result:    0 *32* eax := -
dest is not lib
call:   97 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local3 := edx
                *c** local4 := "w$/z'0;a?Z_:w"
              )
              Reaching definitions: r0=r0{28},   r2=r2{0},   r3=r3{17},   r8=r8{17},   r11=r11{17},   r15=r15{17},
                r24=r24{87},   r25=r25{87},   r26=r26{91},   r27=r27{0},   r28=r28{0} - 864,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{77},   m[r28{0} - 12]=m[r28{0} - 12]{0},
                m[r28{0} - 728]=0x10007,   m[r28{0} - 732]=m[r28{0} - 732]{0},   m[r28{0} - 804]=68,
                m[r28{0} - 808]=m[r28{0} - 808]{0},   m[r28{0} - 812]=r24{87},   m[r28{0} - 816]=r24{67},
                m[r28{0} - 828]=m[r28{0} + 8]{0},   m[r28{0} - 848]=r26{39},   m[r28{0} - 852]=r24{57},
                m[r28{0} - 856]=0x4050a8,   m[r28{0} - 860]=r26{91},   m[r28{0} - 864]=%pc,   m[r28{0} - 868]=%pc,
                m[r28{0} - 872]=m[r28{0} - 872]{0},   m[r28{0} - 876]=m[r28{0} - 876]{0},
                m[r28{0} - 880]=m[r28{0} - 880]{0},   m[r28{0} - 884]=m[r28{0} - 884]{0},
                m[r28{0} - 888]=m[r28{0} - 888]{0},   m[r28{0} - 892]=m[r28{0} - 892]{0},
                m[r28{0} - 896]=m[r28{0} - 896]{0},   m[r28{0} - 900]=m[r28{0} - 900]{0},   tmp1=tmp1{43},
                %flags=SUBFLAGS32( m[r26{39}], 0x4550, tmp1{43} ),   %ZF=tmp1{43} = 0,   %CF=m[r26{39}] <u 0x4550
              Live variables: eax in proc proc23
result:    0 *32* eax := -
dest is not lib
call:  107 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local3 := eax
                *c** local4 := "w0/z'0;a?Z_:w"
              )
              Reaching definitions: r0=r0{28},   r2=r2{0},   r3=r3{17},   r8=r8{17},   r11=r11{17},   r15=r15{17},
                r24=r24{101},   r25=r25{97},   r26=r26{97},   r27=r27{0},   r28=r28{0} - 864,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{77},   m[r28{0} - 12]=m[r28{0} - 12]{0},
                m[r28{0} - 728]=0x10007,   m[r28{0} - 732]=r24{97},   m[r28{0} - 804]=68,
                m[r28{0} - 808]=m[r28{0} - 808]{0},   m[r28{0} - 812]=r24{87},   m[r28{0} - 816]=r24{67},
                m[r28{0} - 828]=m[r28{0} + 8]{0},   m[r28{0} - 848]=r26{39},   m[r28{0} - 852]=r24{57},
                m[r28{0} - 856]=0x4050bc,   m[r28{0} - 860]=r24{101},   m[r28{0} - 864]=%pc,   m[r28{0} - 868]=%pc,
                m[r28{0} - 872]=m[r28{0} - 872]{0},   m[r28{0} - 876]=m[r28{0} - 876]{0},
                m[r28{0} - 880]=m[r28{0} - 880]{0},   m[r28{0} - 884]=m[r28{0} - 884]{0},
                m[r28{0} - 888]=m[r28{0} - 888]{0},   m[r28{0} - 892]=m[r28{0} - 892]{0},
                m[r28{0} - 896]=m[r28{0} - 896]{0},   m[r28{0} - 900]=m[r28{0} - 900]{0},   tmp1=tmp1{43},
                %flags=SUBFLAGS32( m[r26{39}], 0x4550, tmp1{43} ),   %ZF=tmp1{43} = 0,   %CF=m[r26{39}] <u 0x4550
              Live variables: eax in proc proc23
result:    0 *32* eax := -
dest is not lib
call:  117 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local3 := ecx
                *c** local4 := "w1(L%6T3p"
              )
              Reaching definitions: r0=r0{28},   r2=r2{0},   r3=r3{17},   r8=r8{17},   r11=r11{17},   r15=r15{17},
                r24=r24{107},   r25=r25{111},   r26=r26{107},   r27=r27{0},   r28=r28{0} - 864,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{77},   m[r28{0} - 12]=r24{107},   m[r28{0} - 728]=0x10007,
                m[r28{0} - 732]=r24{97},   m[r28{0} - 804]=68,   m[r28{0} - 808]=m[r28{0} - 808]{0},
                m[r28{0} - 812]=r24{87},   m[r28{0} - 816]=r24{67},   m[r28{0} - 828]=m[r28{0} + 8]{0},
                m[r28{0} - 848]=r26{39},   m[r28{0} - 852]=r24{57},   m[r28{0} - 856]=0x4050d0,
                m[r28{0} - 860]=r25{111},   m[r28{0} - 864]=%pc,   m[r28{0} - 868]=%pc,
                m[r28{0} - 872]=m[r28{0} - 872]{0},   m[r28{0} - 876]=m[r28{0} - 876]{0},
                m[r28{0} - 880]=m[r28{0} - 880]{0},   m[r28{0} - 884]=m[r28{0} - 884]{0},
                m[r28{0} - 888]=m[r28{0} - 888]{0},   m[r28{0} - 892]=m[r28{0} - 892]{0},
                m[r28{0} - 896]=m[r28{0} - 896]{0},   m[r28{0} - 900]=m[r28{0} - 900]{0},   tmp1=tmp1{43},
                %flags=SUBFLAGS32( m[r26{39}], 0x4550, tmp1{43} ),   %ZF=tmp1{43} = 0,   %CF=m[r26{39}] <u 0x4550
              Live variables: eax in proc proc23
result:    0 *32* eax := -
dest is not lib
call:  125 {*i32* eax, *32* ecx, *32* edx, *v* esp} := CALL lstrlenA(
              )
              Reaching definitions: r0=r0{28},   r2=r2{0},   r3=r3{17},   r8=r8{17},   r11=r11{17},   r15=r15{17},
                r24=r24{117},   r25=r25{117},   r26=m[r28{0} + 12]{0},   r27=r27{0},   r28=r28{0} - 860,
                r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},
                m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{77},
                m[r28{0} - 12]=r24{107},   m[r28{0} - 728]=0x10007,   m[r28{0} - 732]=r24{97},   m[r28{0} - 804]=68,
                m[r28{0} - 808]=r24{117},   m[r28{0} - 812]=r24{87},   m[r28{0} - 816]=r24{67},
                m[r28{0} - 828]=m[r28{0} + 8]{0},   m[r28{0} - 848]=r26{39},   m[r28{0} - 852]=r24{57},
                m[r28{0} - 856]=m[r28{0} + 12]{0},   m[r28{0} - 860]=%pc,   m[r28{0} - 864]=%pc,   m[r28{0} - 868]=%pc,
                m[r28{0} - 872]=m[r28{0} - 872]{0},   m[r28{0} - 876]=m[r28{0} - 876]{0},
                m[r28{0} - 880]=m[r28{0} - 880]{0},   m[r28{0} - 884]=m[r28{0} - 884]{0},
                m[r28{0} - 888]=m[r28{0} - 888]{0},   m[r28{0} - 892]=m[r28{0} - 892]{0},
                m[r28{0} - 896]=m[r28{0} - 896]{0},   m[r28{0} - 900]=m[r28{0} - 900]{0},   tmp1=tmp1{43},
                %flags=SUBFLAGS32( m[r26{39}], 0x4550, tmp1{43} ),   %ZF=tmp1{43} = 0,   %CF=m[r26{39}] <u 0x4550
              Live variables: eax in proc proc23
result:    0 *i32* eax := -
dest is not lib
call:  137 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL lstrcatA(
                *LPSTR* local0 := param2
                *LPSTR* local3 := " "
              )
              Reaching definitions: r0=r0{28},   r2=r2{0},   r3=r3{17},   r8=r8{17},   r11=r11{17},   r15=r15{17},
                r24=m[r28{0} + 4]{0},   r25=r25{125},   r26=r26{125},   r27=r27{0},   r28=r28{0} - 868,
                r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},
                m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{77},
                m[r28{0} - 12]=r24{107},   m[r28{0} - 728]=0x10007,   m[r28{0} - 732]=r24{97},   m[r28{0} - 804]=68,
                m[r28{0} - 808]=r24{117},   m[r28{0} - 812]=r24{87},   m[r28{0} - 816]=r24{67},
                m[r28{0} - 828]=m[r28{0} + 8]{0},   m[r28{0} - 848]=r26{39},   m[r28{0} - 852]=r24{57},
                m[r28{0} - 856]=m[r28{0} + 12]{0},   m[r28{0} - 860]=0x4054d4,   m[r28{0} - 864]=m[r28{0} + 4]{0},
                m[r28{0} - 868]=%pc,   m[r28{0} - 872]=m[r28{0} - 872]{0},   m[r28{0} - 876]=m[r28{0} - 876]{0},
                m[r28{0} - 880]=m[r28{0} - 880]{0},   m[r28{0} - 884]=m[r28{0} - 884]{0},
                m[r28{0} - 888]=m[r28{0} - 888]{0},   m[r28{0} - 892]=m[r28{0} - 892]{0},
                m[r28{0} - 896]=m[r28{0} - 896]{0},   m[r28{0} - 900]=m[r28{0} - 900]{0},   tmp1=r24{125},
                %flags=LOGICALFLAGS32( r24{125} ),   %ZF=LOGICALFLAGS32( r24{125} ),   %CF=LOGICALFLAGS32( r24{125} )
              Live variables:  in proc proc23
dest is not lib
call:  147 {*i32* eax, *32* ecx, *32* edx, *v* esp} := CALL lstrcatA(
                *LPSTR* local0 := param2
                *union* local1 := param4
              )
              Reaching definitions: r0=r0{28},   r2=r2{0},   r3=r3{17},   r8=r8{17},   r11=r11{17},   r15=r15{17},
                r24=r24{137},   r25=m[r28{0} + 12]{0},   r26=m[r28{0} + 4]{0},   r27=r27{0},   r28=r28{0} - 868,
                r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},
                m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{77},
                m[r28{0} - 12]=r24{107},   m[r28{0} - 728]=0x10007,   m[r28{0} - 732]=r24{97},   m[r28{0} - 804]=68,
                m[r28{0} - 808]=r24{117},   m[r28{0} - 812]=r24{87},   m[r28{0} - 816]=r24{67},
                m[r28{0} - 828]=m[r28{0} + 8]{0},   m[r28{0} - 848]=r26{39},   m[r28{0} - 852]=r24{57},
                m[r28{0} - 856]=m[r28{0} + 12]{0},   m[r28{0} - 860]=m[r28{0} + 12]{0},
                m[r28{0} - 864]=m[r28{0} + 4]{0},   m[r28{0} - 868]=%pc,   m[r28{0} - 872]=m[r28{0} - 872]{0},
                m[r28{0} - 876]=m[r28{0} - 876]{0},   m[r28{0} - 880]=m[r28{0} - 880]{0},
                m[r28{0} - 884]=m[r28{0} - 884]{0},   m[r28{0} - 888]=m[r28{0} - 888]{0},
                m[r28{0} - 892]=m[r28{0} - 892]{0},   m[r28{0} - 896]=m[r28{0} - 896]{0},
                m[r28{0} - 900]=m[r28{0} - 900]{0},   tmp1=r24{125},   %flags=LOGICALFLAGS32( r24{125} ),
                %ZF=LOGICALFLAGS32( r24{125} ),   %CF=LOGICALFLAGS32( r24{125} )
              Live variables:  in proc proc23
dest is not lib
call:   15 {*32* eax_1, *j32* ecx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local0 := eax
                *c** local1 := "t:^-*+&8rQJ (2%E2c]13W5j7%6x-G8PX*+	WZNF$BAD'W5)J!*+[W"
              )
              Reaching definitions: r9=r9{0},   r10=r10{0},   r11=r11{0},   r24=r24{9},   r27=r27{0},   r28=r28{0} - 64
                r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{0},
                m[r28{0} - 12]=m[r28{0} - 12]{0},   m[r28{0} - 16]=m[r28{0} - 16]{0},
                m[r28{0} - 20]=m[r28{0} - 20]{0},   m[r28{0} - 28]=m[r28{0} - 28]{0},
                m[r28{0} - 32]=m[r28{0} - 32]{0},   m[r28{0} - 40]=m[r28{0} - 40]{0},
                m[r28{0} - 44]=m[r28{0} - 44]{0},   m[r28{0} - 48]=m[r28{0} - 48]{0},
                m[r28{0} - 52]=m[r28{0} - 52]{0},   m[r28{0} - 56]=0x4052d8,   m[r28{0} - 60]=r24{9},
                m[r28{0} - 64]=%pc,   m[r28{0} - 68]=m[r28{0} - 68]{0},   m[r28{0} - 72]=m[r28{0} - 72]{0},
                m[r28{0} - 88]=m[r28{0} - 88]{0},   tmp1=r28{0} - 4,   %flags=SUBFLAGS32( r28{0} - 4, 48, r28{0} - 52 )
                %ZF=(r28{0} - 52) = 0,   %CF=(r28{0} - 4) <u 48
              Live variables: eax_1,  ecx in proc proc26
result:    0 *32* eax_1 := -
result:    0 *j32* ecx := -
dest is not lib
call:   25 {*8** eax, *8* al, *u32* cl, *j8* bl, *32* ecx, *v* esp} := CALL proc15(
                *8** local0 := 0x40570e
                *u32** local1 := 0x4054e0
                *u32* cl := param2
                *j8* bl := param4
                *j32* ecx := ecx
                *32* ebx := param5
              )
              Reaching definitions: r9=r9{0},   r10=r10{0},   r11=r11{0},   r24=r24{15},   r25=r25{15},   r26=r26{15},
                r27=r27{0},   r28=r28{0} - 64,   r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 12]=m[r28{0} - 12]{0},   m[r28{0} - 16]=m[r28{0} - 16]{0},
                m[r28{0} - 20]=m[r28{0} - 20]{0},   m[r28{0} - 24]=r24{15},   m[r28{0} - 28]=m[r28{0} - 28]{0},
                m[r28{0} - 32]=m[r28{0} - 32]{0},   m[r28{0} - 36]=0,   m[r28{0} - 40]=m[r28{0} - 40]{0},
                m[r28{0} - 44]=m[r28{0} - 44]{0},   m[r28{0} - 48]=m[r28{0} - 48]{0},
                m[r28{0} - 52]=m[r28{0} - 52]{0},   m[r28{0} - 56]=0x4054e0,   m[r28{0} - 60]=0x40570e,
                m[r28{0} - 64]=%pc,   m[r28{0} - 68]=m[r28{0} - 68]{0},   m[r28{0} - 72]=m[r28{0} - 72]{0},
                m[r28{0} - 88]=m[r28{0} - 88]{0},   tmp1=r28{0} - 4,   %flags=SUBFLAGS32( r28{0} - 4, 48, r28{0} - 52 )
                %ZF=(r28{0} - 52) = 0,   %CF=(r28{0} - 4) <u 48
              Live variables: al,  bl,  cl,  eax in proc proc26
result:    0 *8** eax := -
result:    0 *8* al := -
result:    0 *u32* cl := -
result:    0 *j8* bl := -
dest is not lib
call:   39 {*8** eax, *v* ecx, *v* esp} := CALL proc6(
                *DWORD* local2 := 10
              )
              Reaching definitions: r8=r8{25},   r9=r9{25},   r10=r10{0},   r11=r11{25},   r24=r24{25},   r25=r25{25},
                r26=r26{25},   r27=r27{0},   r28=(r28{0} - 64) + 4,   r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 12]=m[r28{0} - 12]{0},   m[r28{0} - 16]=m[r28{0} - 16]{0},
                m[r28{0} - 20]=m[r28{0} - 20]{0},   m[r28{0} - 24]=r24{15},   m[r28{0} - 28]=m[r28{0} - 28]{0},
                m[r28{0} - 32]=m[r28{0} - 32]{0},   m[r28{0} - 36]=r24{25},   m[r28{0} - 40]=m[r28{0} - 40]{0},
                m[r28{0} - 44]=m[r28{0} - 44]{0},   m[r28{0} - 48]=m[r28{0} - 48]{0},
                m[r28{0} - 52]=m[r28{0} - 52]{0},   m[r28{0} - 56]=10,   m[r28{0} - 60]=%pc,   m[r28{0} - 64]=%pc,
                m[r28{0} - 68]=m[r28{0} - 68]{0},   m[r28{0} - 72]=m[r28{0} - 72]{0},
                m[r28{0} - 88]=m[r28{0} - 88]{0},   tmp1=r24{25},
                %flags=SUBFLAGS32( m[(r28{0} - 4) - 32], 0, r24{25} ),   %ZF=r24{25} = 0,
                %CF=m[(r28{0} - 4) - 32] <u 0
              Live variables: eax in proc proc26
result:    0 *8** eax := -
dest is not lib
call:   51 {*8** eax, *v* ecx, *v* esp} := CALL proc6(
                *DWORD* local2 := 10
              )
              Reaching definitions: r8=r8{25},   r9=r9{25},   r10=r10{0},   r11=r11{25},   r24=r24{39},   r25=r24{39},
                r26=r26{39},   r27=r27{0},   r28=r28{0} - 60,   r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 12]=m[r28{0} - 12]{0},   m[r28{0} - 16]=r24{39},
                m[r28{0} - 20]=m[r28{0} - 20]{0},   m[r28{0} - 24]=r24{15},   m[r28{0} - 28]=m[r28{0} - 28]{0},
                m[r28{0} - 32]=m[r28{0} - 32]{0},   m[r28{0} - 36]=r24{25},   m[r28{0} - 40]=r24{39},
                m[r28{0} - 44]=m[r28{0} - 44]{0},   m[r28{0} - 48]=m[r28{0} - 48]{0},
                m[r28{0} - 52]=m[r28{0} - 52]{0},   m[r28{0} - 56]=10,   m[r28{0} - 60]=%pc,   m[r28{0} - 64]=%pc,
                m[r28{0} - 68]=m[r28{0} - 68]{0},   m[r28{0} - 72]=m[r28{0} - 72]{0},
                m[r28{0} - 88]=m[r28{0} - 88]{0},   tmp1=((r28{0} - 64) + 4) + 4,
                %flags=ADDFLAGS32( r28{0} - 56, 4, r28{0} - 52 ),   %ZF=ADDFLAGS32( r28{0} - 56, 4, r28{0} - 52 ),
                %CF=ADDFLAGS32( r28{0} - 56, 4, r28{0} - 52 )
              Live variables: eax in proc proc26
result:    0 *8** eax := -
dest is not lib
call:   63 {*8** eax, *v* ecx, *v* esp} := CALL proc6(
                *DWORD* local2 := 40
              )
              Reaching definitions: r8=r8{25},   r9=r9{25},   r10=r10{0},   r11=r11{25},   r24=r24{51},   r25=r25{51},
                r26=r24{51},   r27=r27{0},   r28=r28{0} - 60,   r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 12]=m[r28{0} - 12]{0},   m[r28{0} - 16]=r24{39},
                m[r28{0} - 20]=m[r28{0} - 20]{0},   m[r28{0} - 24]=r24{15},   m[r28{0} - 28]=m[r28{0} - 28]{0},
                m[r28{0} - 32]=r24{51},   m[r28{0} - 36]=r24{25},   m[r28{0} - 40]=r24{39},   m[r28{0} - 44]=r24{51},
                m[r28{0} - 48]=m[r28{0} - 48]{0},   m[r28{0} - 52]=m[r28{0} - 52]{0},   m[r28{0} - 56]=40,
                m[r28{0} - 60]=%pc,   m[r28{0} - 64]=%pc,   m[r28{0} - 68]=m[r28{0} - 68]{0},
                m[r28{0} - 72]=m[r28{0} - 72]{0},   m[r28{0} - 88]=m[r28{0} - 88]{0},   tmp1=(r28{0} - 60) + 4,
                %flags=ADDFLAGS32( r28{0} - 56, 4, r28{0} - 52 ),   %ZF=ADDFLAGS32( r28{0} - 56, 4, r28{0} - 52 ),
                %CF=ADDFLAGS32( r28{0} - 56, 4, r28{0} - 52 )
              Live variables: eax in proc proc26
result:    0 *8** eax := -
dest is not lib
call:   75 {*8** eax, *v* ecx, *v* esp} := CALL proc6(
                *DWORD* local2 := 255
              )
              Reaching definitions: r8=r8{25},   r9=r9{25},   r10=r10{0},   r11=r11{25},   r24=r24{63},   r25=r25{63},
                r26=r26{63},   r27=r27{0},   r28=r28{0} - 60,   r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 12]=m[r28{0} - 12]{0},   m[r28{0} - 16]=r24{39},
                m[r28{0} - 20]=m[r28{0} - 20]{0},   m[r28{0} - 24]=r24{15},   m[r28{0} - 28]=r24{63},
                m[r28{0} - 32]=r24{51},   m[r28{0} - 36]=r24{25},   m[r28{0} - 40]=r24{39},   m[r28{0} - 44]=r24{51},
                m[r28{0} - 48]=r24{63},   m[r28{0} - 52]=m[r28{0} - 52]{0},   m[r28{0} - 56]=255,   m[r28{0} - 60]=%pc,
                m[r28{0} - 64]=%pc,   m[r28{0} - 68]=m[r28{0} - 68]{0},   m[r28{0} - 72]=m[r28{0} - 72]{0},
                m[r28{0} - 88]=m[r28{0} - 88]{0},   tmp1=(r28{0} - 60) + 4,
                %flags=ADDFLAGS32( r28{0} - 56, 4, r28{0} - 52 ),   %ZF=ADDFLAGS32( r28{0} - 56, 4, r28{0} - 52 ),
                %CF=ADDFLAGS32( r28{0} - 56, 4, r28{0} - 52 )
              Live variables: eax in proc proc26
result:    0 *8** eax := -
dest is not lib
call:   91 {*32* eax, *8* al, *j32* ecx, *v* esp} := CALL proc12(
                *8** local0 := eax
                *8** local1 := eax
              )
              Reaching definitions: r8=r8{25},   r9=r9{25},   r10=r10{0},   r11=r11{25},   r24=r24{39},   r25=r24{75},
                r26=r24{25},   r27=r27{0},   r28=r28{0} - 64,   r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 12]=r24{75},   m[r28{0} - 16]=r24{39},
                m[r28{0} - 20]=m[r28{0} - 20]{0},   m[r28{0} - 24]=r24{15},   m[r28{0} - 28]=r24{63},
                m[r28{0} - 32]=r24{51},   m[r28{0} - 36]=r24{25},   m[r28{0} - 40]=r24{39},   m[r28{0} - 44]=r24{51},
                m[r28{0} - 48]=r24{63},   m[r28{0} - 52]=r24{75},   m[r28{0} - 56]=r24{25},   m[r28{0} - 60]=r24{39},
                m[r28{0} - 64]=%pc,   m[r28{0} - 68]=m[r28{0} - 68]{0},   m[r28{0} - 72]=m[r28{0} - 72]{0},
                m[r28{0} - 88]=m[r28{0} - 88]{0},   tmp1=(r28{0} - 60) + 4,
                %flags=ADDFLAGS32( r28{0} - 56, 4, r28{0} - 52 ),   %ZF=ADDFLAGS32( r28{0} - 56, 4, r28{0} - 52 ),
                %CF=ADDFLAGS32( r28{0} - 56, 4, r28{0} - 52 )
              Live variables: ecx in proc proc26
result:    0 *j32* ecx := -
dest is not lib
call:  102 {*8** eax, *8* al, *u32* cl, *j8* bl, *32* ecx, *v* esp} := CALL proc15(
                *8** local0 := 0
                *u32** local1 := 0x4054e4
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param5
              )
              Reaching definitions: r8=r8{91},   r9=r9{25},   r10=r10{0},   r11=r11{25},   r24=r24{91},   r25=r25{91},
                r26=r26{91},   r27=r27{0},   r28=r28{0} - 64,   r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 12]=r24{75},   m[r28{0} - 16]=r24{39},
                m[r28{0} - 20]=m[r28{0} - 20]{0},   m[r28{0} - 24]=r24{15},   m[r28{0} - 28]=r24{63},
                m[r28{0} - 32]=r24{51},   m[r28{0} - 36]=r24{25},   m[r28{0} - 40]=r24{39},   m[r28{0} - 44]=r24{51},
                m[r28{0} - 48]=r24{63},   m[r28{0} - 52]=r24{75},   m[r28{0} - 56]=0x4054e4,   m[r28{0} - 60]=0,
                m[r28{0} - 64]=%pc,   m[r28{0} - 68]=m[r28{0} - 68]{0},   m[r28{0} - 72]=m[r28{0} - 72]{0},
                m[r28{0} - 88]=m[r28{0} - 88]{0},   tmp1=(r28{0} - 64) + 4,
                %flags=ADDFLAGS32( r28{0} - 60, 8, r28{0} - 52 ),   %ZF=ADDFLAGS32( r28{0} - 60, 8, r28{0} - 52 ),
                %CF=ADDFLAGS32( r28{0} - 60, 8, r28{0} - 52 )
              Live variables: bl,  cl,  eax in proc proc26
result:    0 *8** eax := -
result:    0 *u32* cl := -
result:    0 *j8* bl := -
dest is not lib
call:  116 {*32* eax, *8* al, *j32* ecx, *v* esp} := CALL proc12(
                *8** local0 := eax
                *8** local1 := eax
              )
              Reaching definitions: r8=r8{102},   r9=r9{102},   r10=r10{0},   r11=r11{102},   r24=r24{102},
                r25=r24{102},   r26=r24{51},   r27=r27{0},   r28=r28{0} - 64,   r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 12]=r24{75},   m[r28{0} - 16]=r24{39},
                m[r28{0} - 20]=m[r28{0} - 20]{0},   m[r28{0} - 24]=r24{15},   m[r28{0} - 28]=r24{63},
                m[r28{0} - 32]=r24{51},   m[r28{0} - 36]=r24{102},   m[r28{0} - 40]=r24{39},   m[r28{0} - 44]=r24{51},
                m[r28{0} - 48]=r24{63},   m[r28{0} - 52]=r24{75},   m[r28{0} - 56]=r24{102},   m[r28{0} - 60]=r24{51},
                m[r28{0} - 64]=%pc,   m[r28{0} - 68]=m[r28{0} - 68]{0},   m[r28{0} - 72]=m[r28{0} - 72]{0},
                m[r28{0} - 88]=m[r28{0} - 88]{0},   tmp1=(r28{0} - 64) + 4,
                %flags=ADDFLAGS32( r28{0} - 60, 8, r28{0} - 52 ),   %ZF=ADDFLAGS32( r28{0} - 60, 8, r28{0} - 52 ),
                %CF=ADDFLAGS32( r28{0} - 60, 8, r28{0} - 52 )
              Live variables: ecx in proc proc26
result:    0 *j32* ecx := -
dest is not lib
call:  127 {*8** eax, *8* al, *u32* cl, *j8* bl, *32* ecx, *v* esp} := CALL proc15(
                *8** local0 := 0
                *u32** local1 := 0x4054e8
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param5
              )
              Reaching definitions: r8=r8{116},   r9=r9{102},   r10=r10{0},   r11=r11{102},   r24=r24{116},
                r25=r25{116},   r26=r26{116},   r27=r27{0},   r28=r28{0} - 64,   r29=r28{0} - 4,   m[r28{0} - 4]=r29{0}
                m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 12]=r24{75},   m[r28{0} - 16]=r24{39},
                m[r28{0} - 20]=m[r28{0} - 20]{0},   m[r28{0} - 24]=r24{15},   m[r28{0} - 28]=r24{63},
                m[r28{0} - 32]=r24{51},   m[r28{0} - 36]=r24{102},   m[r28{0} - 40]=r24{39},   m[r28{0} - 44]=r24{51},
                m[r28{0} - 48]=r24{63},   m[r28{0} - 52]=r24{75},   m[r28{0} - 56]=0x4054e8,   m[r28{0} - 60]=0,
                m[r28{0} - 64]=%pc,   m[r28{0} - 68]=m[r28{0} - 68]{0},   m[r28{0} - 72]=m[r28{0} - 72]{0},
                m[r28{0} - 88]=m[r28{0} - 88]{0},   tmp1=(r28{0} - 64) + 4,
                %flags=ADDFLAGS32( r28{0} - 60, 8, r28{0} - 52 ),   %ZF=ADDFLAGS32( r28{0} - 60, 8, r28{0} - 52 ),
                %CF=ADDFLAGS32( r28{0} - 60, 8, r28{0} - 52 )
              Live variables: bl,  cl,  eax in proc proc26
result:    0 *8** eax := -
result:    0 *u32* cl := -
result:    0 *j8* bl := -
dest is not lib
call:  141 {*32* eax, *8* al, *j32* ecx, *v* esp} := CALL proc12(
                *8** local0 := eax
                *8** local1 := eax
              )
              Reaching definitions: r8=r8{127},   r9=r9{127},   r10=r10{0},   r11=r11{127},   r24=r24{127},
                r25=r24{63},   r26=r26{127},   r27=r27{0},   r28=r28{0} - 64,   r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 12]=r24{75},   m[r28{0} - 16]=r24{39},
                m[r28{0} - 20]=m[r28{0} - 20]{0},   m[r28{0} - 24]=r24{15},   m[r28{0} - 28]=r24{63},
                m[r28{0} - 32]=r24{51},   m[r28{0} - 36]=r24{127},   m[r28{0} - 40]=r24{39},   m[r28{0} - 44]=r24{51},
                m[r28{0} - 48]=r24{63},   m[r28{0} - 52]=r24{75},   m[r28{0} - 56]=r24{127},   m[r28{0} - 60]=r24{63},
                m[r28{0} - 64]=%pc,   m[r28{0} - 68]=m[r28{0} - 68]{0},   m[r28{0} - 72]=m[r28{0} - 72]{0},
                m[r28{0} - 88]=m[r28{0} - 88]{0},   tmp1=(r28{0} - 64) + 4,
                %flags=ADDFLAGS32( r28{0} - 60, 8, r28{0} - 52 ),   %ZF=ADDFLAGS32( r28{0} - 60, 8, r28{0} - 52 ),
                %CF=ADDFLAGS32( r28{0} - 60, 8, r28{0} - 52 )
              Live variables: ecx in proc proc26
result:    0 *j32* ecx := -
dest is not lib
call:  152 {*8** eax, *8* al, *8* cl_1, *8* bl, *32* ecx, *v* esp} := CALL proc15(
                *8** local0 := 0
                *u32** local1 := 0x4054ec
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param5
              )
              Reaching definitions: r8=r8{141},   r9=r9{127},   r10=r10{0},   r11=r11{127},   r24=r24{141},
                r25=r25{141},   r26=r26{141},   r27=r27{0},   r28=r28{0} - 64,   r29=r28{0} - 4,   m[r28{0} - 4]=r29{0}
                m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 12]=r24{75},   m[r28{0} - 16]=r24{39},
                m[r28{0} - 20]=m[r28{0} - 20]{0},   m[r28{0} - 24]=r24{15},   m[r28{0} - 28]=r24{63},
                m[r28{0} - 32]=r24{51},   m[r28{0} - 36]=r24{127},   m[r28{0} - 40]=r24{39},   m[r28{0} - 44]=r24{51},
                m[r28{0} - 48]=r24{63},   m[r28{0} - 52]=r24{75},   m[r28{0} - 56]=0x4054ec,   m[r28{0} - 60]=0,
                m[r28{0} - 64]=%pc,   m[r28{0} - 68]=m[r28{0} - 68]{0},   m[r28{0} - 72]=m[r28{0} - 72]{0},
                m[r28{0} - 88]=m[r28{0} - 88]{0},   tmp1=(r28{0} - 64) + 4,
                %flags=ADDFLAGS32( r28{0} - 60, 8, r28{0} - 52 ),   %ZF=ADDFLAGS32( r28{0} - 60, 8, r28{0} - 52 ),
                %CF=ADDFLAGS32( r28{0} - 60, 8, r28{0} - 52 )
              Live variables: bl,  eax in proc proc26
result:    0 *8** eax := -
result:    0 *8* bl := -
dest is not lib
call:  166 {*32* eax, *8* al, *32* ecx, *v* esp} := CALL proc12(
                *8** local0 := eax
                *8** local1 := eax
              )
              Reaching definitions: r8=r8{152},   r9=r9{152},   r10=r10{0},   r11=r11{152},   r24=r24{75},
                r25=r25{152},   r26=r24{152},   r27=r27{0},   r28=r28{0} - 64,   r29=r28{0} - 4,   m[r28{0} - 4]=r29{0}
                m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 12]=r24{75},   m[r28{0} - 16]=r24{39},
                m[r28{0} - 20]=m[r28{0} - 20]{0},   m[r28{0} - 24]=r24{15},   m[r28{0} - 28]=r24{63},
                m[r28{0} - 32]=r24{51},   m[r28{0} - 36]=r24{152},   m[r28{0} - 40]=r24{39},   m[r28{0} - 44]=r24{51},
                m[r28{0} - 48]=r24{63},   m[r28{0} - 52]=r24{75},   m[r28{0} - 56]=r24{152},   m[r28{0} - 60]=r24{75},
                m[r28{0} - 64]=%pc,   m[r28{0} - 68]=m[r28{0} - 68]{0},   m[r28{0} - 72]=m[r28{0} - 72]{0},
                m[r28{0} - 88]=m[r28{0} - 88]{0},   tmp1=(r28{0} - 64) + 4,
                %flags=ADDFLAGS32( r28{0} - 60, 8, r28{0} - 52 ),   %ZF=ADDFLAGS32( r28{0} - 60, 8, r28{0} - 52 ),
                %CF=ADDFLAGS32( r28{0} - 60, 8, r28{0} - 52 )
              Live variables: al,  edx in proc proc26
result:    0 *8* al := -
dest is not lib
call:  178 {*32* eax, *8* cl_1, *u8* dl, *j32* ecx, *v* esp} := CALL proc30(
                *32* local3 := param1
                *8** local1 := eax
                *u8* dl := param3
                *union* ecx := eax
              )
              Reaching definitions: r8=r8{166},   r9=r9{152},   r10=r10{0},   r11=r11{152},   r24=r24{166},
                r25=r24{39},   r26=r26{166},   r27=r27{0},   r28=(r28{0} - 64) + 4,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=0,   m[r28{0} - 12]=r24{75},   m[r28{0} - 16]=r24{39},
                m[r28{0} - 20]=0,   m[r28{0} - 24]=r24{15},   m[r28{0} - 28]=r24{63},   m[r28{0} - 32]=r24{51},
                m[r28{0} - 36]=r24{152},   m[r28{0} - 40]=r24{39},   m[r28{0} - 44]=r24{51},   m[r28{0} - 48]=r24{63},
                m[r28{0} - 52]=r24{75},   m[r28{0} - 56]=r24{39},   m[r28{0} - 60]=%pc,   m[r28{0} - 64]=%pc,
                m[r28{0} - 68]=m[r28{0} - 68]{0},   m[r28{0} - 72]=m[r28{0} - 72]{0},
                m[r28{0} - 88]=m[r28{0} - 88]{0},   tmp1=(r28{0} - 64) + 4,
                %flags=ADDFLAGS32( r28{0} - 60, 8, r28{0} - 52 ),   %ZF=ADDFLAGS32( r28{0} - 60, 8, r28{0} - 52 ),
                %CF=ADDFLAGS32( r28{0} - 60, 8, r28{0} - 52 )
              Live variables: dl,  eax,  ecx in proc proc26
result:    0 *32* eax := -
result:    0 *u8* dl := -
result:    0 *j32* ecx := -
dest is not lib
call:  189 {*32* eax, *8* cl_1, *8* dl, *32* ecx, *v* esp} := CALL proc30(
                *32* local3 := param1
                *8** local1 := eax
                *u8* dl := dl
                *j32* ecx := ecx
              )
              Reaching definitions: r8=r8{166},   r9=r9{178},   r10=r10{178},   r11=r11{152},   r24=r24{178},
                r25=r25{178},   r26=r24{51},   r27=r27{0},   r28=r28{0} - 60,   r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=0,   m[r28{0} - 12]=r24{75},   m[r28{0} - 16]=r24{39},   m[r28{0} - 20]=r24{178},
                m[r28{0} - 24]=r24{15},   m[r28{0} - 28]=r24{63},   m[r28{0} - 32]=r24{51},   m[r28{0} - 36]=r24{152},
                m[r28{0} - 40]=r24{39},   m[r28{0} - 44]=r24{51},   m[r28{0} - 48]=r24{63},   m[r28{0} - 52]=r24{75},
                m[r28{0} - 56]=r24{51},   m[r28{0} - 60]=%pc,   m[r28{0} - 64]=%pc,   m[r28{0} - 68]=m[r28{0} - 68]{0},
                m[r28{0} - 72]=m[r28{0} - 72]{0},   m[r28{0} - 88]=m[r28{0} - 88]{0},   tmp1=((r28{0} - 64) + 4) + 4,
                %flags=ADDFLAGS32( r28{0} - 56, 4, r28{0} - 52 ),   %ZF=ADDFLAGS32( r28{0} - 56, 4, r28{0} - 52 ),
                %CF=ADDFLAGS32( r28{0} - 56, 4, r28{0} - 52 )
              Live variables: cl_1,  dl,  eax in proc proc26
result:    0 *32* eax := -
result:    0 *8* cl_1 := -
result:    0 *8* dl := -
dest is not lib
call:   14 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL lstrcmpA(
              )
              Reaching definitions: r8=r8{0},   r28=r28{0} - 32,   r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=m[r28{0} - 12]{0},   m[r28{0} - 20]=m[r28{0} - 20]{0},   m[r28{0} - 24]=0x4054f0,
                m[r28{0} - 28]=0x405548,   m[r28{0} - 32]=%pc,   m[r28{0} - 44]=m[r28{0} - 44]{0},
                m[r28{0} - 48]=m[r28{0} - 48]{0},   m[r28{0} - 52]=m[r28{0} - 52]{0},   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 16, r28{0} - 20 ),   %ZF=(r28{0} - 20) = 0,   %CF=(r28{0} - 4) <u 16
              Live variables: eax,  ecx,  edx in proc proc27
result:    0 *32* eax := -
result:    0 *v* ecx := -
result:    0 *v* edx := -
dest is not lib
call:   87 {*32* eax, *32* ecx, *32* edx, *32* esp} := CALL lstrcmpA(
              )
              Reaching definitions: r8=r8{0},   r24=r24{14},   r25=r25{14},   r26=r26{14},   r28=r28{0} - 40,
                r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},   m[r28{0} - 12]=m[r28{0} - 12]{0},
                m[r28{0} - 20]=m[r28{0} - 20]{0},   m[r28{0} - 24]=0x4054f0,   m[r28{0} - 28]=0x405548,
                m[r28{0} - 32]=0x4054f4,   m[r28{0} - 36]=0x405571,   m[r28{0} - 40]=%pc,
                m[r28{0} - 44]=m[r28{0} - 44]{0},   m[r28{0} - 48]=m[r28{0} - 48]{0},
                m[r28{0} - 52]=m[r28{0} - 52]{0},   tmp1=r24{14},   %flags=LOGICALFLAGS32( r24{14} ),
                %ZF=LOGICALFLAGS32( r24{14} ),   %CF=LOGICALFLAGS32( r24{14} )
              Live variables: eax in proc proc27
result:    0 *32* eax := -
dest is not lib
call:   96 {*8** eax, *v* ecx, *v* edx, *v* esp} := CALL proc6(
                *DWORD* local3 := 261
              )
              Reaching definitions: r8=r8{0},   r24=r24{87},   r25=r25{87},   r26=r26{87},   r28=r28{0} - 44,
                r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},   m[r28{0} - 12]=m[r28{0} - 12]{0},
                m[r28{0} - 20]=m[r28{0} - 20]{0},   m[r28{0} - 24]=0x4054f0,   m[r28{0} - 28]=0x405548,
                m[r28{0} - 32]=0x4054f4,   m[r28{0} - 36]=0x405571,   m[r28{0} - 40]=261,   m[r28{0} - 44]=%pc,
                m[r28{0} - 48]=m[r28{0} - 48]{0},   m[r28{0} - 52]=m[r28{0} - 52]{0},   tmp1=r24{87},
                %flags=LOGICALFLAGS32( r24{87} ),   %ZF=LOGICALFLAGS32( r24{87} ),   %CF=LOGICALFLAGS32( r24{87} )
              Live variables: eax in proc proc27
result:    0 *8** eax := -
dest is not lib
call:  111 {*32* eax, *8* al, *32* ecx, *32* edx, *v* esp} := CALL proc12(
                *8** local11 := eax
                *8** local3 := 0x40532c
              )
              Reaching definitions: r8=r8{0},   r24=r24{96},   r25=r24{96},   r26=r26{96},   r28=r28{0} - 48,
                r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},   m[r28{0} - 12]=r24{96},   m[r28{0} - 20]=r24{96},
                m[r28{0} - 24]=0x4054f0,   m[r28{0} - 28]=0x405548,   m[r28{0} - 32]=0x4054f4,
                m[r28{0} - 36]=0x405571,   m[r28{0} - 40]=0x40532c,   m[r28{0} - 44]=r24{96},   m[r28{0} - 48]=%pc,
                m[r28{0} - 52]=m[r28{0} - 52]{0},   tmp1=(r28{0} - 44) + 4,
                %flags=ADDFLAGS32( r28{0} - 40, 4, r28{0} - 36 ),   %ZF=ADDFLAGS32( r28{0} - 40, 4, r28{0} - 36 ),
                %CF=ADDFLAGS32( r28{0} - 40, 4, r28{0} - 36 )
              Live variables: al in proc proc27
result:    0 *8* al := -
dest is not lib
call:  123 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL lstrcatA(
                *8** local11 := eax
                *LPSTR* local3 := ""
              )
              Reaching definitions: r8=r8{111},   r24=r24{111},   r25=r25{111},   r26=r24{96},   r28=r28{0} - 48,
                r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},   m[r28{0} - 12]=r24{96},   m[r28{0} - 20]=r24{96},
                m[r28{0} - 24]=0x4054f0,   m[r28{0} - 28]=0x405548,   m[r28{0} - 32]=0x4054f4,
                m[r28{0} - 36]=0x405571,   m[r28{0} - 40]=0x405571,   m[r28{0} - 44]=r24{96},   m[r28{0} - 48]=%pc,
                m[r28{0} - 52]=m[r28{0} - 52]{0},   tmp1=(r28{0} - 48) + 4,
                %flags=ADDFLAGS32( r28{0} - 44, 8, r28{0} - 36 ),   %ZF=ADDFLAGS32( r28{0} - 44, 8, r28{0} - 36 ),
                %CF=ADDFLAGS32( r28{0} - 44, 8, r28{0} - 36 )
              Live variables: ecx,  edx in proc proc27
result:    0 *v* ecx := -
result:    0 *v* edx := -
dest is not lib
call:  161 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL lstrlenA(
              )
              Reaching definitions: r8=r8{211},   r24=r24{212},   r25=global167,   r26=r26{214},   r28=r28{215} - 8,
                r29=r29{216},   m[r28{0} - 4]=m[r28{0} - 4]{242},   m[r28{0} - 12]=m[r28{0} - 12]{243},
                m[r28{0} - 20]=m[r28{0} - 20]{244},   m[r28{0} - 24]=m[r28{0} - 24]{245},
                m[r28{0} - 28]=m[r28{0} - 28]{246},   m[r28{0} - 32]=m[r28{0} - 32]{247},
                m[r28{0} - 36]=m[r28{0} - 36]{248},   m[r28{0} - 40]=m[r28{0} - 40]{249},
                m[r28{0} - 44]=m[r28{0} - 44]{250},   m[r28{0} - 48]=m[r28{0} - 48]{251},
                m[r28{0} - 52]=m[r28{0} - 52]{252},   tmp1=tmp1{217},   %flags=%flags{218},   %ZF=%ZF{219},
                %CF=%CF{220}
              Live variables: eax,  ecx in proc proc27
result:    0 *32* eax := -
result:    0 *v* ecx := -
dest is not lib
call:   53 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL lstrlenA(
              )
              Reaching definitions: r8=r8{0},   r24=r24{198},   r25=r25{199},   r26=global167,   r28=r28{201} - 8,
                r29=r29{202},   m[r28{0} - 4]=m[r28{0} - 4]{231},   m[r28{0} - 12]=m[r28{0} - 12]{0},
                m[r28{0} - 20]=m[r28{0} - 20]{0},   m[r28{0} - 24]=m[r28{0} - 24]{234},
                m[r28{0} - 28]=m[r28{0} - 28]{235},   m[r28{0} - 32]=m[r28{0} - 32]{236},
                m[r28{0} - 36]=m[r28{0} - 36]{237},   m[r28{0} - 40]=m[r28{0} - 40]{238},
                m[r28{0} - 44]=m[r28{0} - 44]{239},   m[r28{0} - 48]=m[r28{0} - 48]{0},
                m[r28{0} - 52]=m[r28{0} - 52]{0},   tmp1=tmp1{203},   %flags=%flags{204},   %ZF=%ZF{205},
                %CF=%CF{206}
              Live variables: eax,  edx in proc proc27
result:    0 *32* eax := -
result:    0 *v* edx := -
dest is not lib
call:   10 {*32* eax, *8* cl, *8* dl, *32* ecx, *32* r26} := CALL proc31(
                *32* local0 := param1
                *u8** local1 := param2
                *u32*** local2 := 0
                *u32* local3 := 10
                *u8* dl := param3
                *j32* ecx := param4
              )
              Reaching definitions: r10=r10{0},   r25=r25{0},   r26=r26{0},   r28=r28{0} - 16,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=10,   m[r28{0} - 8]=0,
                m[r28{0} - 12]=m[r28{0} + 4]{0},   m[r28{0} - 16]=%pc,   m[r28{0} - 28]=m[r28{0} - 28]{0}
              Live variables: cl,  dl,  eax,  ecx in proc proc30
result:    0 *32* eax := -
result:    0 *8* cl := -
result:    0 *8* dl := -
result:    0 *32* ecx := -
