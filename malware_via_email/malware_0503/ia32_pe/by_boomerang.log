Unknown library function SafeArraySetRecordInfo
COMPUTED JUMP at 0x131010e2, pDest = m[r25]
Unknown library function GetACP
Unknown library function GetModuleHandleA
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc1 ###
in proc proc1 adding addrExp r28{0} - 5 to local table
in proc proc1 adding addrExp r28{0} - 4 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 5 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 5 to local table
in proc proc1 adding addrExp r28{0} - 5 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
finding final parameters for proc1
potential param r28
found new parameter r28
potential param m[r28{0} + 16]
found new parameter m[r28{0} + 16]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 20]
found new parameter m[r28{0} + 20]
potential param r2
found new parameter r2
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 24]
found new parameter m[r28{0} + 24]
assgn   22 *32* %pc := m[0x13111094]
is readonly
assgn   48 *32* %pc := m[0x131110a8]
is readonly
assgn  156 *32* %pc := m[0x131110ac]
is readonly
assgn  283 *32* %pc := m[0x131110a4]
is readonly
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 604 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 568 to local table
in proc _start adding addrExp r28{0} - 4 to local table
in proc _start adding addrExp r28{0} - 804 to local table
in proc _start adding addrExp r28{0} - 808 to local table
in proc _start adding addrExp r28{0} - 812 to local table
in proc _start adding addrExp r28{0} - 816 to local table
in proc _start adding addrExp r28{0} - 820 to local table
in proc _start adding addrExp r28{0} - 824 to local table
in proc _start adding addrExp r28{0} - 824 to local table
in proc _start adding addrExp r28{0} - 608 to local table
in proc _start adding addrExp r28{0} - 608 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffda0 existing type /*signed?*/int but added type void *
in proc _start adding addrExp r28{0} - 564 to local table
in proc _start adding addrExp r28{0} - 824 to local table
in proc _start adding addrExp r28{0} - 563 to local table
in proc _start adding addrExp r28{0} - 562 to local table
in proc _start adding addrExp r28{0} - 561 to local table
in proc _start adding addrExp r28{0} - 560 to local table
in proc _start adding addrExp r28{0} - 576 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 824 to local table
in proc _start adding addrExp r28{0} - 828 to local table
in proc _start adding addrExp r28{0} - 832 to local table
in proc _start adding addrExp r28{0} - 836 to local table
in proc _start adding addrExp r28{0} - 840 to local table
in proc _start adding addrExp r28{0} - 844 to local table
in proc _start adding addrExp r28{0} - 848 to local table
in proc _start adding addrExp r28{0} - 600 to local table
in proc _start adding addrExp r28{0} - 824 to local table
in proc _start adding addrExp r28{0} - 828 to local table
in proc _start adding addrExp r28{0} - 832 to local table
in proc _start adding addrExp r28{0} - 836 to local table
in proc _start adding addrExp r28{0} - 840 to local table
in proc _start adding addrExp r28{0} - 844 to local table
in proc _start adding addrExp r28{0} - 848 to local table
in proc _start adding addrExp r28{0} - 20 to local table
in proc _start adding addrExp r28{0} - 824 to local table
in proc _start adding addrExp r28{0} - 828 to local table
in proc _start adding addrExp r28{0} - 832 to local table
in proc _start adding addrExp r28{0} - 836 to local table
in proc _start adding addrExp r28{0} - 840 to local table
in proc _start adding addrExp r28{0} - 844 to local table
in proc _start adding addrExp r28{0} - 848 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 824 to local table
in proc _start adding addrExp r28{0} - 828 to local table
in proc _start adding addrExp r28{0} - 32 to local table
in proc _start adding addrExp r28{0} - 596 to local table
in proc _start adding addrExp r28{0} - 592 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 828 to local table
in proc _start adding addrExp r28{0} - 832 to local table
in proc _start adding addrExp r28{0} - 836 to local table
in proc _start adding addrExp r28{0} - 840 to local table
in proc _start adding addrExp r28{0} - 844 to local table
in proc _start adding addrExp r28{0} - 848 to local table
in proc _start adding addrExp r28{0} - 852 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 592 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 584 to local table
in proc _start adding addrExp r28{0} - 828 to local table
in proc _start adding addrExp r28{0} - 832 to local table
in proc _start adding addrExp r28{0} - 836 to local table
in proc _start adding addrExp r28{0} - 840 to local table
in proc _start adding addrExp r28{0} - 844 to local table
in proc _start adding addrExp r28{0} - 848 to local table
in proc _start adding addrExp r28{0} - 852 to local table
in proc _start adding addrExp r28{0} - 592 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 828 to local table
in proc _start adding addrExp r28{0} - 832 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffcc0 existing type /*signed?*/int but added type void *
in proc _start adding addrExp r28{0} - 836 to local table
in proc _start adding addrExp r28{0} - 840 to local table
in proc _start adding addrExp r28{0} - 844 to local table
in proc _start adding addrExp r28{0} - 572 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 580 to local table
in proc _start adding addrExp r28{0} - 612 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 580 to local table
in proc _start adding addrExp r28{0} - 584 to local table
in proc _start adding addrExp r28{0} - 592 to local table
in proc _start adding addrExp r28{0} - 612 to local table
in proc _start adding addrExp r28{0} - 828 to local table
in proc _start adding addrExp r28{0} - 832 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffcc0 existing type /*signed?*/int but added type void *
in proc _start adding addrExp r28{0} - 836 to local table
in proc _start adding addrExp r28{0} - 840 to local table
in proc _start adding addrExp r28{0} - 844 to local table
in proc _start adding addrExp r28{0} - 848 to local table
in proc _start adding addrExp r28{0} - 852 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 828 to local table
in proc _start adding addrExp r28{0} - 832 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffcc0 existing type /*signed?*/int but added type void *
in proc _start adding addrExp r28{0} - 836 to local table
in proc _start adding addrExp r28{0} - 840 to local table
in proc _start adding addrExp r28{0} - 844 to local table
in proc _start adding addrExp r28{0} - 848 to local table
in proc _start adding addrExp r28{0} - 852 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 592 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 584 to local table
in proc _start adding addrExp r28{0} - 828 to local table
in proc _start adding addrExp r28{0} - 832 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffcc0 existing type /*signed?*/int but added type void *
in proc _start adding addrExp r28{0} - 836 to local table
in proc _start adding addrExp r28{0} - 840 to local table
in proc _start adding addrExp r28{0} - 844 to local table
in proc _start adding addrExp r28{0} - 848 to local table
in proc _start adding addrExp r28{0} - 852 to local table
in proc _start adding addrExp r28{0} - 592 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 612 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 584 to local table
in proc _start adding addrExp r28{0} - 592 to local table
in proc _start adding addrExp r28{0} - 612 to local table
in proc _start adding addrExp r28{0} - 828 to local table
in proc _start adding addrExp r28{0} - 832 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffcc0 existing type /*signed?*/int but added type void *
in proc _start adding addrExp r28{0} - 836 to local table
in proc _start adding addrExp r28{0} - 840 to local table
in proc _start adding addrExp r28{0} - 844 to local table
in proc _start adding addrExp r28{0} - 848 to local table
in proc _start adding addrExp r28{0} - 852 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 612 to local table
in proc _start adding addrExp r28{0} - 580 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 828 to local table
in proc _start adding addrExp r28{0} - 832 to local table
in proc _start adding addrExp r28{0} - 836 to local table
in proc _start adding addrExp r28{0} - 840 to local table
in proc _start adding addrExp r28{0} - 844 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffcb4 existing type unsigned int but added type unsigned char *
in proc _start adding addrExp r28{0} - 848 to local table
in proc _start adding addrExp r28{0} - 852 to local table
in proc _start adding addrExp r28{0} - 588 to local table
in proc _start adding addrExp r28{0} - 616 to local table
in proc _start adding addrExp r28{0} - 828 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffcc4 existing type unsigned int but added type void *
in proc _start adding addrExp r28{0} - 832 to local table
in proc _start adding addrExp r28{0} - 836 to local table
in proc _start adding addrExp r28{0} - 840 to local table
in proc _start adding addrExp r28{0} - 844 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffcb4 existing type unsigned int but added type unsigned char *
in proc _start adding addrExp r28{0} - 848 to local table
in proc _start adding addrExp r28{0} - 852 to local table
finding final parameters for _start
potential param r28
found new parameter r28
potential param m[r28{0} - 16]
found new parameter m[r28{0} - 16]
potential param r2
found new parameter r2
potential param m[r28{0} - 604]
found new parameter m[r28{0} - 604]
potential param m[r28{0} - 28]
found new parameter m[r28{0} - 28]
potential param m[r28{0} - 568]
found new parameter m[r28{0} - 568]
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc1 ###
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 5 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 604 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 568 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 584 to local table
in proc _start adding addrExp r28{0} - 848 to local table
in proc _start adding addrExp r28{0} - 852 to local table
in proc _start adding addrExp r28{0} - 592 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 828 to local table
in proc _start adding addrExp r28{0} - 832 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffcc0 existing type /*signed?*/int but added type void *
in proc _start adding addrExp r28{0} - 836 to local table
in proc _start adding addrExp r28{0} - 840 to local table
in proc _start adding addrExp r28{0} - 844 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 580 to local table
in proc _start adding addrExp r28{0} - 612 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 580 to local table
in proc _start adding addrExp r28{0} - 584 to local table
in proc _start adding addrExp r28{0} - 592 to local table
in proc _start adding addrExp r28{0} - 612 to local table
in proc _start adding addrExp r28{0} - 828 to local table
in proc _start adding addrExp r28{0} - 832 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffcc0 existing type /*signed?*/int but added type void *
in proc _start adding addrExp r28{0} - 836 to local table
in proc _start adding addrExp r28{0} - 840 to local table
in proc _start adding addrExp r28{0} - 844 to local table
in proc _start adding addrExp r28{0} - 848 to local table
in proc _start adding addrExp r28{0} - 852 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 592 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 584 to local table
in proc _start adding addrExp r28{0} - 828 to local table
in proc _start adding addrExp r28{0} - 832 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffcc0 existing type /*signed?*/int but added type void *
in proc _start adding addrExp r28{0} - 836 to local table
in proc _start adding addrExp r28{0} - 840 to local table
in proc _start adding addrExp r28{0} - 844 to local table
in proc _start adding addrExp r28{0} - 848 to local table
in proc _start adding addrExp r28{0} - 852 to local table
in proc _start adding addrExp r28{0} - 592 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 612 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 584 to local table
in proc _start adding addrExp r28{0} - 592 to local table
in proc _start adding addrExp r28{0} - 612 to local table
in proc _start adding addrExp r28{0} - 828 to local table
in proc _start adding addrExp r28{0} - 832 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffcc0 existing type /*signed?*/int but added type void *
in proc _start adding addrExp r28{0} - 836 to local table
in proc _start adding addrExp r28{0} - 840 to local table
in proc _start adding addrExp r28{0} - 844 to local table
in proc _start adding addrExp r28{0} - 848 to local table
in proc _start adding addrExp r28{0} - 852 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 612 to local table
in proc _start adding addrExp r28{0} - 580 to local table
finding final parameters for proc1
potential param r28
found new parameter r28
potential param m[r28{0} + 16]
found new parameter m[r28{0} + 16]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 20]
found new parameter m[r28{0} + 20]
potential param r2
found new parameter r2
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 24]
found new parameter m[r28{0} + 24]
finding final parameters for _start
potential param r28
found new parameter r28
potential param m[r28{0} - 16]
found new parameter m[r28{0} - 16]
potential param r2
found new parameter r2
potential param m[r28{0} - 604]
found new parameter m[r28{0} - 604]
potential param m[r28{0} - 28]
found new parameter m[r28{0} - 28]
potential param m[r28{0} - 568]
found new parameter m[r28{0} - 568]
finding final parameters for _start
potential param r28
found new parameter r28
potential param m[r28{0} - 16]
found new parameter m[r28{0} - 16]
potential param r2
found new parameter r2
potential param m[r28{0} - 604]
found new parameter m[r28{0} - 604]
potential param m[r28{0} - 28]
found new parameter m[r28{0} - 28]
potential param m[r28{0} - 568]
found new parameter m[r28{0} - 568]
local edx has type __size32 that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local ecx has type __size32 that doesn't agree with type of define void of a library, why?
local eax has type __size32 that doesn't agree with type of define unsigned char * of a library, why?
dest is not lib
call:   23 {*32* eax_1, *32* ecx, *v* edx, *v* esp} := CALL SafeArraySetRecordInfo(
              )
              Reaching definitions: r2=r2{0},   r24=0x370f057,   r28=r28{0} - 824,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 28]=m[r28{0} - 28]{0},
                m[r28{0} - 568]=m[r28{0} - 568]{0},   m[r28{0} - 604]=m[r28{0} - 604]{0},   m[r28{0} - 804]=0x3634037,
                m[r28{0} - 808]=0x347791f,   m[r28{0} - 812]=0x29038f,   m[r28{0} - 816]=0x93474,   m[r28{0} - 820]=0,
                m[r28{0} - 824]=%pc,   tmp1=r28{0} - 4,   %flags=LOGICALFLAGS32( 0x370f057 ),
                %ZF=LOGICALFLAGS32( 0x370f057 ),   %CF=LOGICALFLAGS32( 0x370f057 )
              Live variables: eax_1,  ecx in proc _start
result:    0 *32* eax_1 := -
result:    0 *32* ecx := -
dest is not lib
call:   49 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetACP(
              )
              Reaching definitions: r2=r2{0},   r24=0,   r25=r25{23},   r26=r26{23},   r27=r24{23} - 87,
                r28=r28{0} - 824,   r29=r28{0} - 4,   r30=0,   m[r28{0} - 4]=r29{0},   m[r28{0} - 16]=m[r28{0} - 16]{0}
                m[r28{0} - 28]=m[r28{0} - 28]{0},   m[r28{0} - 564]=94,   m[r28{0} - 568]=m[r28{0} - 568]{0},
                m[r28{0} - 604]=m[r28{0} - 604]{0},   m[r28{0} - 608]=r28{0},   m[r28{0} - 804]=0x3634037,
                m[r28{0} - 808]=0x347791f,   m[r28{0} - 812]=0x29038f,   m[r28{0} - 816]=0x93474,   m[r28{0} - 820]=0,
                m[r28{0} - 824]=%pc,   tmp1=r28{0} - 4,   %flags=ADDFLAGS32( r28{0} - 4, 4, m[r28{0} - 608] ),
                %ZF=ADDFLAGS32( r28{0} - 4, 4, m[r28{0} - 608] ),   %CF=ADDFLAGS32( r28{0} - 4, 4, m[r28{0} - 608] )
              Live variables:  in proc _start
dest is not lib
call:   79 {*32* eax, *16* ax, *16* cx, *i16* dx, *8* al, *8* cl, *32* ecx, *32* edx, *v* esp} := CALL proc1(
                *32** local0 := a[global4]
                *32** local1 := a[global4]
                *32* local2 := 4
                *32** local3 := a[param4]
                *u32* local4 := 0
                *8** local5 := a[94]
                *i16* dx := param5
              )
              Reaching definitions: r2=r2{0},   r10=truncu(32,8,r28{0} - 40),   r24=r28{0} - 16,   r25=r28{0} - 40,
                r26=r28{0} - 40,   r27=r24{23} - 87,   r28=r28{0} - 848,   r29=r28{0} - 4,   r30=0,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 28]=m[r28{0} - 28]{0},
                m[r28{0} - 40]=global4,   m[r28{0} - 560]=45,   m[r28{0} - 561]=4,   m[r28{0} - 562]=-1,
                m[r28{0} - 563]=106,   m[r28{0} - 564]=94,   m[r28{0} - 568]=m[r28{0} - 568]{0},
                m[r28{0} - 576]=0x13102000,   m[r28{0} - 604]=m[r28{0} - 604]{0},   m[r28{0} - 608]=r28{0},
                m[r28{0} - 804]=0x3634037,   m[r28{0} - 808]=0x347791f,   m[r28{0} - 812]=0x29038f,
                m[r28{0} - 816]=0x93474,   m[r28{0} - 820]=0,   m[r28{0} - 824]=r28{0} - 564,   m[r28{0} - 828]=0,
                m[r28{0} - 832]=r28{0} - 16,   m[r28{0} - 836]=4,   m[r28{0} - 840]=r28{0} - 40,
                m[r28{0} - 844]=r28{0} - 40,   m[r28{0} - 848]=%pc,   tmp1=r28{0} - 4,
                %flags=ADDFLAGS32( r28{0} - 4, 4, m[r28{0} - 608] ),   %ZF=ADDFLAGS32( r28{0} - 4, 4, m[r28{0} - 608] )
                %CF=ADDFLAGS32( r28{0} - 4, 4, m[r28{0} - 608] )
              Live variables: dx in proc _start
result:    0 *i16* dx := -
dest is not lib
call:  111 {*32* eax, *16* ax, *16* cx, *i16* dx, *8* al, *8* cl, *32* ecx, *32* edx, *v* esp} := CALL proc1(
                *32** local0 := a[param1]
                *u32** local1 := a[global6]
                *32* local2 := 4
                *32** local3 := a[param4]
                *u32* local4 := 4
                *8** local5 := a[94]
                *i16* dx := dx
              )
              Reaching definitions: r0=r0{79},   r1=r1{79},   r2=r2{79},   r8=r8{79},   r9=r9{79},
                r10=truncu(32,8,r28{0} - 604),   r24=r28{0} - 16,   r25=r28{0} - 600,   r26=r28{0} - 604,
                r27=r24{23} - 87,   r28=r28{0} - 848,   r29=r28{0} - 4,   r30=0,   m[r28{0} - 4]=r29{0},
                m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 28]=m[r28{0} - 28]{0},   m[r28{0} - 40]=global4,
                m[r28{0} - 560]=45,   m[r28{0} - 561]=4,   m[r28{0} - 562]=-1,   m[r28{0} - 563]=106,
                m[r28{0} - 564]=94,   m[r28{0} - 568]=m[r28{0} - 568]{0},   m[r28{0} - 576]=0x13102000,
                m[r28{0} - 600]=global6,   m[r28{0} - 604]=m[r28{0} - 604]{0},   m[r28{0} - 608]=r28{0},
                m[r28{0} - 804]=0x3634037,   m[r28{0} - 808]=0x347791f,   m[r28{0} - 812]=0x29038f,
                m[r28{0} - 816]=0x93474,   m[r28{0} - 820]=0,   m[r28{0} - 824]=r28{0} - 564,   m[r28{0} - 828]=4,
                m[r28{0} - 832]=r28{0} - 16,   m[r28{0} - 836]=4,   m[r28{0} - 840]=r28{0} - 600,
                m[r28{0} - 844]=r28{0} - 604,   m[r28{0} - 848]=%pc,   tmp1=r28{0} - 600,
                %flags=SUBFLAGS32( r28{0} - 600, 4, r28{0} - 604 ),   %ZF=(r28{0} - 604) = 0,   %CF=(r28{0} - 600) <u 4
              Live variables: dx in proc _start
result:    0 *i16* dx := -
dest is not lib
call:  143 {*32* eax, *16* ax, *16* cx, *i16* dx, *8* al, *8* cl, *32* ecx, *32* edx, *v* esp} := CALL proc1(
                *32** local0 := a[param3]
                *u32** local1 := a[global7]
                *32* local2 := 4
                *32** local3 := a[param4]
                *u32* local4 := 8
                *8** local5 := a[94]
                *i16* dx := dx
              )
              Reaching definitions: r0=r0{111},   r1=r1{111},   r2=r2{111},   r8=r8{111},   r9=r9{111},
                r10=truncu(32,8,r28{0} - 28),   r24=r28{0} - 16,   r25=r28{0} - 20,   r26=r28{0} - 28,
                r27=r24{23} - 87,   r28=r28{0} - 848,   r29=r28{0} - 4,   r30=0,   m[r28{0} - 4]=r29{0},
                m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 20]=global7,   m[r28{0} - 28]=m[r28{0} - 28]{0},
                m[r28{0} - 40]=global4,   m[r28{0} - 560]=45,   m[r28{0} - 561]=4,   m[r28{0} - 562]=-1,
                m[r28{0} - 563]=106,   m[r28{0} - 564]=94,   m[r28{0} - 568]=m[r28{0} - 568]{0},
                m[r28{0} - 576]=0x13102000,   m[r28{0} - 600]=global6,   m[r28{0} - 604]=m[r28{0} - 604]{0},
                m[r28{0} - 608]=r28{0},   m[r28{0} - 804]=0x3634037,   m[r28{0} - 808]=0x347791f,
                m[r28{0} - 812]=0x29038f,   m[r28{0} - 816]=0x93474,   m[r28{0} - 820]=0,
                m[r28{0} - 824]=r28{0} - 564,   m[r28{0} - 828]=8,   m[r28{0} - 832]=r28{0} - 16,   m[r28{0} - 836]=4,
                m[r28{0} - 840]=r28{0} - 20,   m[r28{0} - 844]=r28{0} - 28,   m[r28{0} - 848]=%pc,   tmp1=r28{0} - 20,
                %flags=SUBFLAGS32( r28{0} - 20, 8, r28{0} - 28 ),   %ZF=(r28{0} - 28) = 0,   %CF=(r28{0} - 20) <u 8
              Live variables: dx in proc _start
result:    0 *i16* dx := -
dest is not lib
call:  157 {*32* eax_2, *v* ecx, *v* edx, *v* esp} := CALL GetModuleHandleA(
              )
              Reaching definitions: r0=r0{143},   r1=r1{143},   r2=r2{143},   r8=r8{143},   r9=r9{143},
                r10=truncu(32,8,r28{0} - 28),   r24=0x13102000 + 12,   r25=r25{143},   r26=r26{143},   r27=r24{23} - 87
                r28=r28{0} - 828,   r29=r28{0} - 4,   r30=0,   m[r28{0} - 4]=r29{0},   m[r28{0} - 16]=m[r28{0} - 16]{0}
                m[r28{0} - 20]=global7,   m[r28{0} - 28]=m[r28{0} - 28]{0},   m[r28{0} - 36]=0x1310200c,
                m[r28{0} - 40]=global4,   m[r28{0} - 560]=45,   m[r28{0} - 561]=4,   m[r28{0} - 562]=-1,
                m[r28{0} - 563]=106,   m[r28{0} - 564]=94,   m[r28{0} - 568]=m[r28{0} - 568]{0},
                m[r28{0} - 576]=0x13102000,   m[r28{0} - 600]=global6,   m[r28{0} - 604]=m[r28{0} - 604]{0},
                m[r28{0} - 608]=r28{0},   m[r28{0} - 804]=0x3634037,   m[r28{0} - 808]=0x347791f,
                m[r28{0} - 812]=0x29038f,   m[r28{0} - 816]=0x93474,   m[r28{0} - 820]=0,   m[r28{0} - 824]=0,
                m[r28{0} - 828]=%pc,   m[r28{0} - 832]=r28{0} - 16,   m[r28{0} - 836]=4,   m[r28{0} - 840]=r28{0} - 20,
                m[r28{0} - 844]=r28{0} - 28,   m[r28{0} - 848]=%pc,   tmp1=0x13102000,
                %flags=ADDFLAGS32( 0x13102000, 12, 0x13102000 + 12 ),
                %ZF=ADDFLAGS32( 0x13102000, 12, 0x13102000 + 12 ),   %CF=ADDFLAGS32( 0x13102000, 12, 0x13102000 + 12 )
              Live variables: eax_2 in proc _start
result:    0 *32* eax_2 := -
dest is not lib
call:  195 {*32* eax, *16* ax, *16* cx, *i16* dx, *8* al, *8* cl, *32* ecx, *32* edx, *v* esp} := CALL proc1(
                *32** local6 := a[global4]
                *32** local0 := a[global8]
                *32* local1 := 4
                *32** local2 := a[param4]
                *u32* local7 := 12
                *8** local8 := a[94]
                *i16* dx := dx
              )
              Reaching definitions: r0=r0{143},   r1=r1{143},   r2=r2{143},   r8=r8{143},   r9=r9{143},
                r10=truncu(32,8,r28{0} - 40),   r24=r28{0} - 16,   r25=r28{0} - 28,   r26=r28{0} - 40,
                r27=r24{23} - 87,   r28=r28{0} - 852,   r29=r28{0} - 4,   r30=0,   m[r28{0} - 4]=r29{0},
                m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 20]=global7,   m[r28{0} - 28]=global8,
                m[r28{0} - 32]=r24{157},   m[r28{0} - 36]=0x1310200c,   m[r28{0} - 40]=global4,   m[r28{0} - 560]=45,
                m[r28{0} - 561]=4,   m[r28{0} - 562]=-1,   m[r28{0} - 563]=106,   m[r28{0} - 564]=94,
                m[r28{0} - 568]=m[r28{0} - 568]{0},   m[r28{0} - 576]=0x13102000,   m[r28{0} - 592]=12,
                m[r28{0} - 596]=r24{157} + 0x1000,   m[r28{0} - 600]=global6,   m[r28{0} - 604]=m[r28{0} - 604]{0},
                m[r28{0} - 608]=r28{0},   m[r28{0} - 804]=0x3634037,   m[r28{0} - 808]=0x347791f,
                m[r28{0} - 812]=0x29038f,   m[r28{0} - 816]=0x93474,   m[r28{0} - 820]=0,   m[r28{0} - 824]=0,
                m[r28{0} - 828]=r28{0} - 564,   m[r28{0} - 832]=12,   m[r28{0} - 836]=r28{0} - 16,   m[r28{0} - 840]=4,
                m[r28{0} - 844]=r28{0} - 28,   m[r28{0} - 848]=r28{0} - 40,   m[r28{0} - 852]=%pc,   tmp1=r28{0} - 28,
                %flags=SUBFLAGS32( r28{0} - 28, m[r28{0} - 592], r28{0} - 40 ),   %ZF=(r28{0} - 40) = 0,
                %CF=(r28{0} - 28) <u m[r28{0} - 592]
              Live variables: dx in proc _start
result:    0 *i16* dx := -
dest is not lib
call:  244 {*32* eax, *16* ax, *16* cx, *i16* dx, *8* al, *8* cl, *32* ecx, *32* edx, *v* esp} := CALL proc1(
                *u32** local6 := a[global6]
                *j32** local0 := a[global9]
                *32* local1 := 4
                *32** local2 := a[param4]
                *u32* local7 := 16
                *8** local8 := a[94]
                *i16* dx := dx
              )
              Reaching definitions: r0=r0{195},   r1=r1{195},   r2=r2{195},   r8=r8{195},   r9=r9{195},
                r10=truncu(32,8,r28{0} - 584),   r24=r28{0} - 600,   r25=r28{0} - 16,   r26=r28{0} - 584,
                r27=r24{23} - 87,   r28=r28{0} - 852,   r29=r28{0} - 4,   r30=0,   m[r28{0} - 4]=r29{0},
                m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 20]=global7,   m[r28{0} - 28]=global8 + r24{157},
                m[r28{0} - 32]=r24{157},   m[r28{0} - 36]=0x13102010,   m[r28{0} - 40]=global4,   m[r28{0} - 560]=45,
                m[r28{0} - 561]=4,   m[r28{0} - 562]=-1,   m[r28{0} - 563]=106,   m[r28{0} - 564]=94,
                m[r28{0} - 568]=m[r28{0} - 568]{0},   m[r28{0} - 576]=0x13102000,   m[r28{0} - 584]=global9,
                m[r28{0} - 592]=16,   m[r28{0} - 596]=r24{157} + 0x1000,   m[r28{0} - 600]=global6,
                m[r28{0} - 604]=m[r28{0} - 604]{0},   m[r28{0} - 608]=r28{0},   m[r28{0} - 804]=0x3634037,
                m[r28{0} - 808]=0x347791f,   m[r28{0} - 812]=0x29038f,   m[r28{0} - 816]=0x93474,   m[r28{0} - 820]=0,
                m[r28{0} - 824]=0,   m[r28{0} - 828]=r28{0} - 564,   m[r28{0} - 832]=16,   m[r28{0} - 836]=r28{0} - 16,
                m[r28{0} - 840]=4,   m[r28{0} - 844]=r28{0} - 584,   m[r28{0} - 848]=r28{0} - 600,
                m[r28{0} - 852]=%pc,   tmp1=r28{0} - 584,
                %flags=SUBFLAGS32( r28{0} - 584, m[r28{0} - 592], r28{0} - 600 ),   %ZF=(r28{0} - 600) = 0,
                %CF=(r28{0} - 584) <u m[r28{0} - 592]
              Live variables: al,  ax,  cl,  cx,  dx in proc _start
result:    0 *16* ax := -
result:    0 *16* cx := -
result:    0 *i16* dx := -
result:    0 *8* al := -
result:    0 *8* cl := -
dest is not lib
call:  284 {*u8** eax, *v* ecx, *v* edx, *v* esp} := CALL VirtualAlloc(
                *LPVOID* local1 := 0
                *DWORD* local2 := edx + global4
                *DWORD* local7 := 0x3000
                *DWORD* local4 := 64
              )
              Reaching definitions: r0=r0{244},   r1=r1{244},   r2=r2{244},   r8=r8{244},   r9=r9{244},
                r10=truncu(32,8,r26{270} + global4),   r24=global7,   r25=(global7 * 8) + 12,   r26=r26{270} + global4,
                r27=r24{23} - 87,   r28=r28{0} - 844,   r29=r28{0} - 4,   r30=0,   m[r28{0} - 4]=r29{0},
                m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 20]=global7,   m[r28{0} - 28]=global8 + r24{157},
                m[r28{0} - 32]=r24{157},   m[r28{0} - 36]=0x13102014,   m[r28{0} - 40]=global4,
                m[r28{0} - 44]=(global7 * 8) + 12,   m[r28{0} - 560]=45,   m[r28{0} - 561]=4,   m[r28{0} - 562]=-1,
                m[r28{0} - 563]=106,   m[r28{0} - 564]=94,   m[r28{0} - 568]=m[r28{0} - 568]{0},
                m[r28{0} - 576]=0x13102000,   m[r28{0} - 584]=global9,   m[r28{0} - 592]=20,
                m[r28{0} - 596]=r24{157} + 0x1000,   m[r28{0} - 600]=global6,   m[r28{0} - 604]=m[r28{0} - 604]{0},
                m[r28{0} - 608]=r28{0},   m[r28{0} - 804]=0x3634037,   m[r28{0} - 808]=0x347791f,
                m[r28{0} - 812]=0x29038f,   m[r28{0} - 816]=0x93474,   m[r28{0} - 820]=0,   m[r28{0} - 824]=0,
                m[r28{0} - 828]=64,   m[r28{0} - 832]=0x3000,   m[r28{0} - 836]=r26{270} + global4,   m[r28{0} - 840]=0
                m[r28{0} - 844]=%pc,   m[r28{0} - 848]=r28{0} - 600,   m[r28{0} - 852]=%pc,   tmp1=r26{270},
                %flags=ADDFLAGS32( r26{270}, m[r28{0} - 40], r26{270} + global4 ),
                %ZF=ADDFLAGS32( r26{270}, m[r28{0} - 40], r26{270} + global4 ),
                %CF=ADDFLAGS32( r26{270}, m[r28{0} - 40], r26{270} + global4 )
              Live variables: eax in proc _start
result:    0 *u8** eax := -
dest is not lib
call:  472 {*32* eax, *16* ax, *16* cx, *16* dx, *8* al, *8* cl, *32* ecx, *32* edx, *v* esp} := CALL proc1(
                *32** local6 := r24
                *u8** local0 := eax
                *u32* local21 := global6
                *32** local2 := a[param2]
                *u32* local7 := (global7 * 8) + 12
                *8** local8 := a[94]
                *i16* dx := dx
              )
              Reaching definitions: r0=r0{520},   r1=r1{521},   r2=r2{522},   r8=r8{523},   r9=r9{524},
                r10=truncu(32,8,r24{284}),   r24=r24{465},   r25=global6,   r26=r24{284},   r27=r24{23} - 87,
                r28=r28{0} - 852,   r29=r28{0} - 4,   r30=0,   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 8]{556} + 1,   m[r28{0} - 12]=m[r28{0} - 12]{557},
                m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 20]=global7,   m[r28{0} - 24]=m[r28{0} - 24]{558},
                m[r28{0} - 28]=m[r28{0} - 28]{559},   m[r28{0} - 32]=r24{157},   m[r28{0} - 36]=m[r28{0} - 36]{560},
                m[r28{0} - 40]=global4,   m[r28{0} - 44]=(global7 * 8) + 12,   m[r28{0} - 560]=45,   m[r28{0} - 561]=4,
                m[r28{0} - 562]=-1,   m[r28{0} - 563]=106,   m[r28{0} - 564]=94,   m[r28{0} - 568]=m[r28{0} - 568]{0},
                m[r28{0} - 572]=r24{284},   m[r28{0} - 576]=0x13102000,   m[r28{0} - 580]=m[r28{0} - 580]{561},
                m[r28{0} - 584]=m[r28{0} - 584]{562},   m[r28{0} - 592]=m[r28{0} - 592]{563},
                m[r28{0} - 596]=r24{157} + 0x1000,   m[r28{0} - 600]=global6,   m[r28{0} - 604]=m[r28{0} - 604]{0},
                m[r28{0} - 608]=r28{0},   m[r28{0} - 612]=m[r28{0} - 612]{564},   m[r28{0} - 804]=0x3634037,
                m[r28{0} - 808]=0x347791f,   m[r28{0} - 812]=0x29038f,   m[r28{0} - 816]=0x93474,   m[r28{0} - 820]=0,
                m[r28{0} - 824]=0,   m[r28{0} - 828]=r28{0} - 564,   m[r28{0} - 832]=(global7 * 8) + 12,
                m[r28{0} - 836]=r28{0} - 568,   m[r28{0} - 840]=global6,   m[r28{0} - 844]=r24{284},
                m[r28{0} - 848]=r24{465},   m[r28{0} - 852]=%pc,   tmp1=r24{284},
                %flags=SUBFLAGS32( r24{284}, m[r28{0} - 44], r24{465} ),   %ZF=r24{465} = 0,
                %CF=r24{284} <u m[r28{0} - 44]
              Live variables: al,  ax,  cl,  cx,  dx in proc _start
result:    0 *16* ax := -
result:    0 *16* cx := -
result:    0 *16* dx := -
result:    0 *8* al := -
result:    0 *8* cl := -
dest is not lib
call:  346 {*32* eax, *16* ax, *16* cx, *i16* dx, *8* al, *8* cl, *32* ecx, *32* edx, *v* esp} := CALL proc1(
                *union* local6 := ecx
                *32** local0 := a[edx_1]
                *32* local1 := 4
                *32** local2 := a[param4]
                *union* local3 := local12
                *8** local8 := a[94]
                *i16* dx := dx
              )
              Reaching definitions: r0=r0{520},   r1=r1{521},   r2=r2{522},   r8=r8{523},   r9=r9{524},
                r10=truncu(32,8,r28{0} - 16),   r24=r28{0} - 28,   r25=r25{339},   r26=r28{0} - 16,   r27=r24{23} - 87,
                r28=r28{0} - 852,   r29=r28{0} - 4,   r30=0,   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{312}
                m[r28{0} - 12]=m[r28{0} - 12]{557},   m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 20]=global7,
                m[r28{0} - 24]=m[r28{0} - 24]{558},   m[r28{0} - 28]=r26{319},   m[r28{0} - 32]=r24{157},
                m[r28{0} - 36]=m[r28{0} - 36]{560},   m[r28{0} - 40]=global4,   m[r28{0} - 44]=(global7 * 8) + 12,
                m[r28{0} - 560]=45,   m[r28{0} - 561]=4,   m[r28{0} - 562]=-1,   m[r28{0} - 563]=106,
                m[r28{0} - 564]=94,   m[r28{0} - 568]=m[r28{0} - 568]{0},   m[r28{0} - 572]=r24{284},
                m[r28{0} - 576]=0x13102000,   m[r28{0} - 580]=m[r28{0} - 580]{561},
                m[r28{0} - 584]=m[r28{0} - 584]{562},   m[r28{0} - 592]=m[r28{0} - 592]{563},
                m[r28{0} - 596]=r24{157} + 0x1000,   m[r28{0} - 600]=global6,   m[r28{0} - 604]=m[r28{0} - 604]{0},
                m[r28{0} - 608]=r28{0},   m[r28{0} - 612]=m[r28{0} - 612]{564},   m[r28{0} - 804]=0x3634037,
                m[r28{0} - 808]=0x347791f,   m[r28{0} - 812]=0x29038f,   m[r28{0} - 816]=0x93474,   m[r28{0} - 820]=0,
                m[r28{0} - 824]=0,   m[r28{0} - 828]=r28{0} - 564,   m[r28{0} - 832]=m[r28{0} - 592]{563},
                m[r28{0} - 836]=r28{0} - 16,   m[r28{0} - 840]=4,   m[r28{0} - 844]=r28{0} - 28,
                m[r28{0} - 848]=r25{339},   m[r28{0} - 852]=%pc,   tmp1=r28{0} - 28,
                %flags=SUBFLAGS32( r28{0} - 28, m[r28{0} - 592], r25{339} ),   %ZF=r25{339} = 0,
                %CF=(r28{0} - 28) <u m[r28{0} - 592]
              Live variables: dx in proc _start
result:    0 *i16* dx := -
dest is not lib
call:  397 {*32* eax, *16* ax, *16* cx, *i16* dx, *8* al, *8* cl, *32* ecx, *32* edx, *v* esp} := CALL proc1(
                *union* local6 := edx
                *j32** local0 := a[r24]
                *32* local1 := 4
                *32** local2 := a[param4]
                *union* local3 := local12
                *8** local8 := a[94]
                *i16* dx := dx
              )
              Reaching definitions: r0=r0{346},   r1=r1{346},   r2=r2{346},   r8=r8{346},   r9=r9{346},
                r10=truncu(32,8,r26{389}),   r24=r28{0} - 16,   r25=r28{0} - 584,   r26=r26{389},   r27=r24{23} - 87,
                r28=r28{0} - 852,   r29=r28{0} - 4,   r30=0,   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{312}
                m[r28{0} - 12]=m[r28{0} - 12]{557},   m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 20]=global7,
                m[r28{0} - 24]=m[r28{0} - 24]{558},   m[r28{0} - 28]=r26{319} + r24{157},   m[r28{0} - 32]=r24{157},
                m[r28{0} - 36]=m[r28{0} - 36]{366},   m[r28{0} - 40]=global4,   m[r28{0} - 44]=(global7 * 8) + 12,
                m[r28{0} - 560]=45,   m[r28{0} - 561]=4,   m[r28{0} - 562]=-1,   m[r28{0} - 563]=106,
                m[r28{0} - 564]=94,   m[r28{0} - 568]=m[r28{0} - 568]{0},   m[r28{0} - 572]=r24{284},
                m[r28{0} - 576]=0x13102000,   m[r28{0} - 580]=m[r28{0} - 580]{561},   m[r28{0} - 584]=r24{369},
                m[r28{0} - 592]=m[r28{0} - 592]{361},   m[r28{0} - 596]=r24{157} + 0x1000,   m[r28{0} - 600]=global6,
                m[r28{0} - 604]=m[r28{0} - 604]{0},   m[r28{0} - 608]=r28{0},   m[r28{0} - 612]=m[r28{0} - 612]{564},
                m[r28{0} - 804]=0x3634037,   m[r28{0} - 808]=0x347791f,   m[r28{0} - 812]=0x29038f,
                m[r28{0} - 816]=0x93474,   m[r28{0} - 820]=0,   m[r28{0} - 824]=0,   m[r28{0} - 828]=r28{0} - 564,
                m[r28{0} - 832]=m[r28{0} - 592]{361},   m[r28{0} - 836]=r28{0} - 16,   m[r28{0} - 840]=4,
                m[r28{0} - 844]=r28{0} - 584,   m[r28{0} - 848]=r26{389},   m[r28{0} - 852]=%pc,   tmp1=r28{0} - 584,
                %flags=SUBFLAGS32( r28{0} - 584, m[r28{0} - 592], r26{389} ),   %ZF=r26{389} = 0,
                %CF=(r28{0} - 584) <u m[r28{0} - 592]
              Live variables: al,  ax,  cl,  cx,  dx in proc _start
result:    0 *16* ax := -
result:    0 *16* cx := -
result:    0 *i16* dx := -
result:    0 *8* al := -
result:    0 *8* cl := -
