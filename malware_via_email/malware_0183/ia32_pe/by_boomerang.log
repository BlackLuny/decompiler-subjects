Unknown library function HeapCreate
Unknown library function CreateThread
Unknown library function GetThreadContext
Unknown library function SetThreadContext
Unknown library function ResumeThread
Unknown library function SuspendThread
assgn    4 *32* r24 := m[0]
assgn   26 *32* %pc := m[0x401004]
is readonly
assgn   31 *32* m[r28 - 4] := m[0x402404]
assgn   35 *32* %pc := m[0x401004]
is readonly
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc1 ###
in proc proc1 adding addrExp r28{0} - 4 to local table
in proc proc1 adding addrExp r28{0} - 8 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 8 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffff4 existing type /*signed?*/int but added type HANDLE
in proc proc1 adding addrExp r28{0} - 16 to local table
finding final parameters for proc1
potential param r28
found new parameter r28
assgn   15 *32* %pc := m[0x401000]
is readonly
assgn   20 *32* %pc := m[0x40240c]
assgn   27 *32* m[r28 - 4] := m[0x4023fc]
assgn   31 *32* %pc := m[0x401008]
is readonly
assgn   36 *32* m[r28 - 4] := m[0x4023fc]
assgn   40 *32* %pc := m[0x40101c]
is readonly
assgn   42 *32* m[r28 - 4] := m[0x4023fc]
assgn   46 *32* %pc := m[0x401018]
is readonly
assgn   48 *32* m[r28 - 4] := m[0x4023f8]
assgn   52 *32* %pc := m[0x401020]
is readonly
after removing matching assigns (%pc).
in proc proc2 adding addrExp r28{0} - 4 to local table
in proc proc2 adding addrExp r28{0} - 8 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 16 to local table
in proc proc2 adding addrExp r28{0} - 20 to local table
in proc proc2 adding addrExp r28{0} - 24 to local table
in proc proc2 adding addrExp r28{0} - 28 to local table
in proc proc2 adding addrExp r28{0} - 28 to local table
finding final parameters for proc2
potential param global6
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc5 ###
in proc proc5 adding addrExp r28{0} - 4 to local table
in proc proc5 adding addrExp r28{0} - 8 to local table
in proc proc5 adding addrExp r28{0} - 12 to local table
finding final parameters for proc5
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
assgn    8 *32* r24 := m[0x4023c0]
assgn   29 *32* %pc := m[0x401010]
is readonly
assgn   32 *32* m[r28 - 4] := m[0x4023d0]
assgn   40 *32* %pc := m[0x40100c]
is readonly
assgn   47 *32* m[r28 - 4] := m[0x4023d0]
assgn   51 *32* m[r28 - 4] := m[0x4023c8]
assgn   57 *32* r31 := m[0x4023c8]
assgn   58 *32* r25 := m[0x4023d0]
assgn   69 *32* tmp1 := m[0x4023c8]
after removing matching assigns (%pc).
in proc proc3 adding addrExp r28{0} - 4 to local table
in proc proc3 adding addrExp r28{0} - 8 to local table
in proc proc3 adding addrExp r28{0} - 12 to local table
in proc proc3 adding addrExp r28{0} - 16 to local table
in proc proc3 adding addrExp r28{0} - 20 to local table
in proc proc3 adding addrExp r28{0} - 24 to local table
in proc proc3 adding addrExp r28{0} - 28 to local table
in proc proc3 adding addrExp r28{0} - 28 to local table
in proc proc3 adding addrExp r28{0} - 32 to local table
in proc proc3 adding addrExp r28{0} - 36 to local table
in proc proc3 adding addrExp r28{0} - 40 to local table
in proc proc3 adding addrExp r28{0} - 28 to local table
in proc proc3 adding addrExp r28{0} - 32 to local table
in proc proc3 adding addrExp r28{0} - 36 to local table
in proc proc3 adding addrExp r28{0} - 40 to local table
finding final parameters for proc3
potential param r28
found new parameter r28
assgn    3 *32* r27 := m[0x4023d8]
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc6 ###
in proc proc6 adding addrExp r28{0} - 4 to local table
in proc proc6 adding addrExp r28{0} - 8 to local table
finding final parameters for proc6
assgn   11 *32* m[r28 - 4] := m[0x4023c4]
assgn   15 *32* m[r28 - 4] := m[0x4023c8]
assgn   30 *32* m[r28 - 4] := m[0x4023e0]
assgn   82 *32* tmp1 := m[0x4023c4]
after removing matching assigns (%pc).
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc7 ###
in proc proc7 adding addrExp r28{0} - 4 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
finding final parameters for proc7
in proc proc8 adding addrExp r28{0} - 4 to local table
finding final parameters for proc8
in proc proc9 adding addrExp r28{0} - 4 to local table
finding final parameters for proc9
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
size 0x20 meet with size 0x8!
finding final parameters for proc10
assgn   11 *8* r8 := m[0x402414]
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
in proc proc11 adding addrExp r28{0} - 4 to local table
size 0x20 meet with size 0x8!
size 0x20 meet with size 0x8!
WARNING: size 0x20 meet with unsigned char; allowing temporarily
integer size 0x8 meet with SizeType size 0x20!
finding final parameters for proc11
assgn    1 *32* r26 := m[0x4023dc]
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
finding final parameters for proc13
assgn    3 *32* r24 := m[0x4023dc]
assgn    4 *32* r27 := m[0x4023d8]
assgn   33 *32* tmp1 := m[0x4023dc]
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with /*signed?*/long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc12 ###
in proc proc12 adding addrExp r28{0} - 4 to local table
integer size 0x20 meet with SizeType size 0x8!
in proc proc12 adding addrExp r28{0} - 8 to local table
finding final parameters for proc12
assgn   20 *32* %pc := m[0x401010]
is readonly
assgn   31 *32* %pc := m[0x40100c]
is readonly
assgn   42 *32* %pc := m[0x401010]
is readonly
assgn   53 *32* %pc := m[0x40100c]
is readonly
assgn   83 *32* r26 := m[0x4023d4]
assgn   95 *32* r27 := m[0x4023dc]
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc4 ###
in proc proc4 adding addrExp r28{0} - 4 to local table
in proc proc4 adding addrExp r28{0} - 24 to local table
in proc proc4 adding addrExp r28{0} - 28 to local table
in proc proc4 adding addrExp r28{0} - 32 to local table
in proc proc4 adding addrExp r28{0} - 36 to local table
in proc proc4 adding addrExp r28{0} - 40 to local table
in proc proc4 adding addrExp r28{0} - 40 to local table
in proc proc4 adding addrExp r28{0} - 44 to local table
in proc proc4 adding addrExp r28{0} - 48 to local table
in proc proc4 adding addrExp r28{0} - 52 to local table
in proc proc4 adding addrExp r28{0} - 40 to local table
in proc proc4 adding addrExp r28{0} - 44 to local table
in proc proc4 adding addrExp r28{0} - 48 to local table
in proc proc4 adding addrExp r28{0} - 52 to local table
in proc proc4 adding addrExp r28{0} - 52 to local table
in proc proc4 adding addrExp r28{0} - 56 to local table
in proc proc4 adding addrExp r28{0} - 60 to local table
in proc proc4 adding addrExp r28{0} - 64 to local table
in proc proc4 adding addrExp r28{0} - 52 to local table
in proc proc4 adding addrExp r28{0} - 52 to local table
in proc proc4 adding addrExp r28{0} - 52 to local table
in proc proc4 adding addrExp r28{0} - 12 to local table
in proc proc4 adding addrExp r28{0} - 52 to local table
in proc proc4 adding addrExp r28{0} - 56 to local table
in proc proc4 adding addrExp r28 to local table
in proc proc4 adding addrExp r28 to local table
in proc proc4 adding addrExp r28 to local table
in proc proc4 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc4 adding addrExp r28 to local table
in proc proc4 adding addrExp r28 to local table
in proc proc4 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc4 adding addrExp r28 to local table
in proc proc4 adding addrExp r28 to local table
in proc proc4 adding addrExp r28 to local table
in proc proc4 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc4 adding addrExp r28 to local table
in proc proc4 adding addrExp r28 to local table
in proc proc4 adding addrExp r28 to local table
finding final parameters for proc4
potential param r28
found new parameter r28
after removing matching assigns (%pc).
in proc _start adding addrExp r28{0} - 4 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type unsigned int does not resolve to compound or array
finding final parameters for _start
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc1 ###
in proc proc1 adding addrExp r28{0} - 12 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffff4 existing type /*signed?*/int but added type HANDLE
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc3 ###
in proc proc3 adding addrExp r28{0} - 36 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc4 ###
in proc proc4 adding addrExp r28 to local table
in proc proc4 adding addrExp r28 to local table
in proc proc4 adding addrExp r28 to local table
in proc proc4 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc4 adding addrExp r28 to local table
in proc proc4 adding addrExp r28 to local table
in proc proc4 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc4 adding addrExp r28 to local table
in proc proc4 adding addrExp r28 to local table
in proc proc4 adding addrExp r28 to local table
in proc proc4 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc4 adding addrExp r28 to local table
in proc proc4 adding addrExp r28 to local table
in proc proc4 adding addrExp r28 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc5 ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc6 ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc7 ###
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc12 ###
integer size 0x20 meet with SizeType size 0x8!
finding final parameters for proc1
potential param r28
found new parameter r28
finding final parameters for _start
finding final parameters for proc2
potential param global6
finding final parameters for _start
finding final parameters for _start
finding final parameters for proc3
potential param r28
found new parameter r28
finding final parameters for _start
finding final parameters for proc5
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
finding final parameters for proc3
potential param r28
found new parameter r28
finding final parameters for proc6
finding final parameters for proc4
potential param r28
found new parameter r28
finding final parameters for proc10
finding final parameters for proc4
potential param r28
found new parameter r28
finding final parameters for proc11
finding final parameters for proc4
potential param r28
found new parameter r28
finding final parameters for proc12
finding final parameters for proc4
potential param r28
found new parameter r28
finding final parameters for proc13
finding final parameters for proc12
local esp has type void * that doesn't agree with type of define void of a library, why?
local esp has type __size32 that doesn't agree with type of define void of a library, why?
local ecx has type void that doesn't agree with type of define __size32 of a library, why?
local edx has type void that doesn't agree with type of define __size32 of a library, why?
local ecx has type unsigned int that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local eax has type HANDLE that doesn't agree with type of define __size32 of a library, why?
local ecx has type __size32 that doesn't agree with type of define void of a library, why?
local edx has type __size32 that doesn't agree with type of define void of a library, why?
local esp has type __size32 that doesn't agree with type of define void of a library, why?
local eax has type HANDLE that doesn't agree with type of define __size32 of a library, why?
dest is not lib
call:   27 {*32* eax, *v* r25, *v* r26} := CALL GetProcAddress(
                *union* local0 := eax_1 - 0x10000
                *c** local1 := "LoadLibraryA"
              )
              Reaching definitions: r24=r24{44} - 0x10000,   r25=0x401408,   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=0x401408,   m[r28{0} - 12]=r24{44} - 0x10000,
                m[r28{0} - 16]=%pc,   tmp1=0x401407,   tmph=tmph{11},   %flags=LOGICALFLAGS32( 0x401408 ),
                %ZF=LOGICALFLAGS32( 0x401408 ),   %CF=LOGICALFLAGS32( 0x401408 )
              Live variables: eax in proc proc1
result:    0 *32* eax := -
dest is not lib
call:   36 {*32* eax, *32* r25, *32* r26} := CALL GetProcAddress(
                *HANDLE* local0 := local0
                *c** local1 := "GetCurrentThread"
              )
              Reaching definitions: r24=r24{27},   r25=r25{27},   r26=r26{27},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=0x401415,   m[r28{0} - 12]=m[r28{0} - 12]{31},
                m[r28{0} - 16]=%pc,   tmp1=0x401407,   tmph=tmph{11},   %flags=LOGICALFLAGS32( 0x401408 ),
                %ZF=LOGICALFLAGS32( 0x401408 ),   %CF=LOGICALFLAGS32( 0x401408 )
              Live variables: eax in proc proc1
result:    0 *32* eax := -
dest is not lib
call:   16 {*32* eax, *v* ecx, *v* edx} := CALL CreateThread(
              )
              Reaching definitions: r28=r28{0} - 28,   m[r28{0} - 4]=0,   m[r28{0} - 8]=4,   m[r28{0} - 12]=0,
                m[r28{0} - 16]=0x4013d9,   m[r28{0} - 20]=0,   m[r28{0} - 24]=0,   m[r28{0} - 28]=%pc
              Live variables: eax,  ecx,  edx in proc proc2
result:    0 *32* eax := -
result:    0 *v* ecx := -
result:    0 *v* edx := -
dest is not lib
call:   32 {*32* eax, *v* ecx, *v* edx} := CALL GetThreadContext(
              )
              Reaching definitions: r24=r24{21},   r25=r25{21},   r26=r26{21},   r28=r28{21} - 12,   r30=0x402000,
                m[r28{0} - 4]=m[r28{0} - 4]{21},   m[r28{0} - 8]=m[r28{0} - 8]{21},   m[r28{0} - 12]=m[r28{0} - 12]{21}
                m[r28{0} - 16]=m[r28{0} - 16]{21},   m[r28{0} - 20]=m[r28{0} - 20]{21},
                m[r28{0} - 24]=m[r28{0} - 24]{21},   m[r28{0} - 28]=m[r28{0} - 28]{21},
                m[r28{0} - 4]=m[r28{0} - 4]{21},   m[r28{0} - 8]=m[r28{0} - 8]{21},   m[r28{0} - 12]=m[r28{0} - 12]{21}
                m[r28{0} - 16]=m[r28{0} - 16]{21},   m[r28{0} - 20]=m[r28{0} - 20]{21},
                m[r28{0} - 24]=m[r28{0} - 24]{21},   m[r28{0} - 28]=m[r28{0} - 28]{21},   <all>=<all>{21}
              Live variables:  in proc proc2
dest is not lib
call:   41 {*32* eax, *v* ecx, *v* edx} := CALL SetThreadContext(
              )
              Reaching definitions: r24=r24{32},   r25=r25{32},   r26=r26{32},   r28=r28{21} - 20,   r30=0x402000,
                m[r28{0} - 4]=m[r28{0} - 4]{21},   m[r28{0} - 8]=m[r28{0} - 8]{21},   m[r28{0} - 12]=m[r28{0} - 12]{21}
                m[r28{0} - 16]=m[r28{0} - 16]{21},   m[r28{0} - 20]=m[r28{0} - 20]{21},
                m[r28{0} - 24]=m[r28{0} - 24]{21},   m[r28{0} - 28]=m[r28{0} - 28]{21},
                m[r28{0} - 4]=m[r28{0} - 4]{21},   m[r28{0} - 8]=m[r28{0} - 8]{21},   m[r28{0} - 12]=m[r28{0} - 12]{21}
                m[r28{0} - 16]=m[r28{0} - 16]{21},   m[r28{0} - 20]=m[r28{0} - 20]{21},
                m[r28{0} - 24]=m[r28{0} - 24]{21},   m[r28{0} - 28]=m[r28{0} - 28]{21},   <all>=<all>{21}
              Live variables:  in proc proc2
dest is not lib
call:   47 {*32* eax, *v* ecx, *v* edx} := CALL ResumeThread(
              )
              Reaching definitions: r24=r24{41},   r25=r25{41},   r26=r26{41},   r28=r28{21} - 24,   r30=0x402000,
                m[r28{0} - 4]=m[r28{0} - 4]{21},   m[r28{0} - 8]=m[r28{0} - 8]{21},   m[r28{0} - 12]=m[r28{0} - 12]{21}
                m[r28{0} - 16]=m[r28{0} - 16]{21},   m[r28{0} - 20]=m[r28{0} - 20]{21},
                m[r28{0} - 24]=m[r28{0} - 24]{21},   m[r28{0} - 28]=m[r28{0} - 28]{21},
                m[r28{0} - 4]=m[r28{0} - 4]{21},   m[r28{0} - 8]=m[r28{0} - 8]{21},   m[r28{0} - 12]=m[r28{0} - 12]{21}
                m[r28{0} - 16]=m[r28{0} - 16]{21},   m[r28{0} - 20]=m[r28{0} - 20]{21},
                m[r28{0} - 24]=m[r28{0} - 24]{21},   m[r28{0} - 28]=m[r28{0} - 28]{21},   <all>=<all>{21}
              Live variables:  in proc proc2
dest is not lib
call:   53 {*32* eax, *32* ecx, *32* edx} := CALL SuspendThread(
              )
              Reaching definitions: r24=r24{47},   r25=r25{47},   r26=r26{47},   r28=r28{21} - 28,   r30=0x402000,
                m[r28{0} - 4]=m[r28{0} - 4]{21},   m[r28{0} - 8]=m[r28{0} - 8]{21},   m[r28{0} - 12]=m[r28{0} - 12]{21}
                m[r28{0} - 16]=m[r28{0} - 16]{21},   m[r28{0} - 20]=m[r28{0} - 20]{21},
                m[r28{0} - 24]=m[r28{0} - 24]{21},   m[r28{0} - 28]=m[r28{0} - 28]{21},
                m[r28{0} - 4]=m[r28{0} - 4]{21},   m[r28{0} - 8]=m[r28{0} - 8]{21},   m[r28{0} - 12]=m[r28{0} - 12]{21}
                m[r28{0} - 16]=m[r28{0} - 16]{21},   m[r28{0} - 20]=m[r28{0} - 20]{21},
                m[r28{0} - 24]=m[r28{0} - 24]{21},   m[r28{0} - 28]=m[r28{0} - 28]{21},   <all>=<all>{21}
              Live variables:  in proc proc2
dest is not lib
call:   30 {*HANDLE* eax, *v* ecx, *v* r26} := CALL HeapCreate(
              )
              Reaching definitions: r24=global15 + 0x4000,   r25=0,   r28=r28{0} - 28,   r29=r28{0} - 4,
                r30=global15 + 0x4088,   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r31{0},
                m[r28{0} - 12]=r30{0},   m[r28{0} - 16]=0,   m[r28{0} - 20]=0,   m[r28{0} - 24]=1,   m[r28{0} - 28]=%pc
                tmp1=r25{13},   tmpb=tmpb{0},   %flags=LOGICALFLAGS32( 0 ),   %ZF=LOGICALFLAGS32( 0 ),
                %CF=LOGICALFLAGS32( 0 )
              Live variables: eax in proc proc3
result:    0 *HANDLE* eax := -
dest is not lib
call:   41 {*32* eax, *v* ecx, *32* r26} := CALL HeapAlloc(
                *HANDLE* local0 := eax
                *DWORD* local1 := 8
                *DWORD* local2 := global16
              )
              Reaching definitions: r24=r24{30},   r25=r25{30},   r26=r26{30},   r28=r28{0} - 40,   r29=r28{0} - 4,
                r30=global15 + 0x4088,   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r31{0},
                m[r28{0} - 12]=r30{0},   m[r28{0} - 16]=0,   m[r28{0} - 20]=0,   m[r28{0} - 24]=1,
                m[r28{0} - 28]=global16,   m[r28{0} - 32]=8,   m[r28{0} - 36]=r24{30},   m[r28{0} - 40]=%pc,
                tmp1=r25{13},   tmpb=tmpb{0},   %flags=LOGICALFLAGS32( 0 ),   %ZF=LOGICALFLAGS32( 0 ),
                %CF=LOGICALFLAGS32( 0 )
              Live variables: eax in proc proc3
result:    0 *32* eax := -
dest is not lib
call:   56 *32* ecx := CALL proc5(
                *8** local0 := local0
                *8** local3 := global15 + 0x4088
                *32* local2 := global16
              )
              Reaching definitions: r24=r24{41} + global16,   r25=r25{41},   r26=r26{41},   r28=r28{0} - 40,
                r29=r28{0} - 4,   r30=global15 + 0x4088,   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r31{0},
                m[r28{0} - 12]=r30{0},   m[r28{0} - 16]=0,   m[r28{0} - 20]=0,   m[r28{0} - 24]=1,
                m[r28{0} - 28]=global16,   m[r28{0} - 32]=global15 + 0x4088,   m[r28{0} - 36]=m[r28{0} - 36]{51},
                m[r28{0} - 40]=%pc,   tmp1=r24{41},   tmpb=tmpb{0},
                %flags=ADDFLAGS32( r24{41}, m[0x4023d0], r24{41} + global16 ),
                %ZF=ADDFLAGS32( r24{41}, m[0x4023d0], r24{41} + global16 ),
                %CF=ADDFLAGS32( r24{41}, m[0x4023d0], r24{41} + global16 )
              Live variables:  in proc proc3
dest is not lib
call:   21 {*HANDLE* eax, *v* ecx, *v* edx, *v* esp} := CALL HeapCreate(
              )
              Reaching definitions: r24=0,   r27=0,   r28=r28{0} - 40,   r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},
                m[r28{0} - 24]=r27{0},   m[r28{0} - 28]=0,   m[r28{0} - 32]=0,   m[r28{0} - 36]=1,   m[r28{0} - 40]=%pc
                tmp1=r28{0} - 4,   %flags=LOGICALFLAGS32( 0 ),   %ZF=LOGICALFLAGS32( 0 ),   %CF=LOGICALFLAGS32( 0 )
              Live variables: eax in proc proc4
result:    0 *HANDLE* eax := -
dest is not lib
call:   32 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL HeapAlloc(
                *HANDLE* local0 := eax
                *DWORD* local1 := 8
                *DWORD* local2 := 0xea60
              )
              Reaching definitions: r24=r24{21},   r25=r25{21},   r26=r26{21},   r27=0,   r28=r28{0} - 52,
                r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},   m[r28{0} - 24]=r27{0},   m[r28{0} - 28]=0,   m[r28{0} - 32]=0
                m[r28{0} - 36]=1,   m[r28{0} - 40]=0xea60,   m[r28{0} - 44]=8,   m[r28{0} - 48]=r24{21},
                m[r28{0} - 52]=%pc,   tmp1=r28{0} - 4,   %flags=LOGICALFLAGS32( 0 ),   %ZF=LOGICALFLAGS32( 0 ),
                %CF=LOGICALFLAGS32( 0 )
              Live variables: eax in proc proc4
result:    0 *32* eax := -
dest is not lib
call:   43 {*HANDLE* eax_1, *v* ecx, *v* edx, *v* esp} := CALL HeapCreate(
              )
              Reaching definitions: r24=r24{32},   r25=r25{32},   r26=r26{32},   r27=0,   r28=r28{0} - 52,
                r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},   m[r28{0} - 24]=r27{0},   m[r28{0} - 28]=0,   m[r28{0} - 32]=0
                m[r28{0} - 36]=1,   m[r28{0} - 40]=0,   m[r28{0} - 44]=0,   m[r28{0} - 48]=1,   m[r28{0} - 52]=%pc,
                tmp1=r28{0} - 4,   %flags=LOGICALFLAGS32( 0 ),   %ZF=LOGICALFLAGS32( 0 ),   %CF=LOGICALFLAGS32( 0 )
              Live variables: eax_1 in proc proc4
result:    0 *HANDLE* eax_1 := -
dest is not lib
call:   54 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL HeapAlloc(
                *HANDLE* local3 := eax_1
                *DWORD* local4 := 8
                *DWORD* local5 := 0xc35000
              )
              Reaching definitions: r24=r24{43},   r25=r25{43},   r26=r26{43},   r27=0,   r28=r28{0} - 64,
                r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},   m[r28{0} - 24]=r27{0},   m[r28{0} - 28]=0,   m[r28{0} - 32]=0
                m[r28{0} - 36]=1,   m[r28{0} - 40]=0,   m[r28{0} - 44]=0,   m[r28{0} - 48]=1,   m[r28{0} - 52]=0xc35000
                m[r28{0} - 56]=8,   m[r28{0} - 60]=r24{43},   m[r28{0} - 64]=%pc,   tmp1=r28{0} - 4,
                %flags=LOGICALFLAGS32( 0 ),   %ZF=LOGICALFLAGS32( 0 ),   %CF=LOGICALFLAGS32( 0 )
              Live variables: eax in proc proc4
result:    0 *32* eax := -
dest is not lib
call:   59 {*8* cl, *8* ch, *32* ecx, *v* esp} := CALL proc6(
              )
              Reaching definitions: r24=r24{54},   r25=r25{54},   r26=r26{54},   r27=0,   r28=r28{0} - 52,
                r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},   m[r28{0} - 24]=r27{0},   m[r28{0} - 28]=0,   m[r28{0} - 32]=0
                m[r28{0} - 36]=1,   m[r28{0} - 40]=0,   m[r28{0} - 44]=0,   m[r28{0} - 48]=1,   m[r28{0} - 52]=%pc,
                m[r28{0} - 56]=8,   m[r28{0} - 60]=r24{43},   m[r28{0} - 64]=%pc,   tmp1=r28{0} - 4,
                %flags=LOGICALFLAGS32( 0 ),   %ZF=LOGICALFLAGS32( 0 ),   %CF=LOGICALFLAGS32( 0 )
              Live variables: ch in proc proc4
result:    0 *8* ch := -
dest is not lib
call:   67 {*32* eax, *8* cl, *8* dl, *32* ecx, *32* edx, *v* esp} := CALL proc7(
              )
              Reaching definitions: r9=r9{59},   r13=r13{59},   r24=r24{54},   r25=r25{59},   r26=r26{54},   r27=0,
                r28=r28{0} - 52,   r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},   m[r28{0} - 24]=r27{0},   m[r28{0} - 28]=0,
                m[r28{0} - 32]=0,   m[r28{0} - 36]=1,   m[r28{0} - 40]=0,   m[r28{0} - 44]=0,   m[r28{0} - 48]=1,
                m[r28{0} - 52]=%pc,   m[r28{0} - 56]=8,   m[r28{0} - 60]=r24{43},   m[r28{0} - 64]=%pc,
                tmp1=r28{0} - 4,   %flags=LOGICALFLAGS32( 0 ),   %ZF=LOGICALFLAGS32( 0 ),   %CF=LOGICALFLAGS32( 0 )
              Live variables: cl,  dl,  eax,  ecx,  edx in proc proc4
result:    0 *32* eax := -
result:    0 *8* cl := -
result:    0 *8* dl := -
result:    0 *32* ecx := -
result:    0 *32* edx := -
dest is not lib
call:   74 <all> := CALL proc8(<all>)
              Reaching definitions: r9=r9{67},   r10=r10{67},   r13=r13{59},   r24=r24{67},   r25=r25{67},
                r26=r26{67},   r27=0,   r28=r28{0} - 56,   r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=r24{67},   m[r28{0} - 24]=r27{0},   m[r28{0} - 28]=0,   m[r28{0} - 32]=0,
                m[r28{0} - 36]=1,   m[r28{0} - 40]=0,   m[r28{0} - 44]=0,   m[r28{0} - 48]=1,   m[r28{0} - 52]=r24{67},
                m[r28{0} - 56]=%pc,   m[r28{0} - 60]=r24{43},   m[r28{0} - 64]=%pc,   tmp1=r28{0} - 4,
                %flags=LOGICALFLAGS32( 0 ),   %ZF=LOGICALFLAGS32( 0 ),   %CF=LOGICALFLAGS32( 0 )
              Live variables:  in proc proc4
dest is not lib
call:   10 {*32* r24, *32* r25, *v* r26} := CALL proc1(
              )
              Reaching definitions: r24=0x400000,   r28=r28{0} - 8,   m[r28{0} - 4]=0x400000,   m[r28{0} - 8]=%pc,
                %flags=LOGICALFLAGS32( 0x400000 ),   %ZF=LOGICALFLAGS32( 0x400000 ),   %CF=LOGICALFLAGS32( 0x400000 )
              Live variables:  in proc _start
dest is not lib
call:   16 {*v* r24, *32* r30, *v* r25, *v* r26} := CALL proc2(
              )
              Reaching definitions: r24=0x400000,   r25=r25{10},   r26=r26{10},   r28=(r28{0} - 8) + 4,
                m[r28{0} - 4]=%pc,   m[r28{0} - 8]=%pc,   %flags=LOGICALFLAGS32( 0x400000 ),
                %ZF=LOGICALFLAGS32( 0x400000 ),   %CF=LOGICALFLAGS32( 0x400000 )
              Live variables: esp in proc _start
dest is not lib
call:   20 {*32* r24, *32* r30, *32* r25, *32* r26, *32* r31} := CALL proc3(
              )
              Reaching definitions: r24=r24{16},   r25=r25{16},   r26=r26{16},   r28=r28{16} - 4,   r30=r30{16},
                m[r28{0} - 4]=%pc,   m[r28{0} - 8]=%pc,   %flags=LOGICALFLAGS32( 0x400000 ),
                %ZF=LOGICALFLAGS32( 0x400000 ),   %CF=LOGICALFLAGS32( 0x400000 )
              Live variables:  in proc _start
dest is not lib
call:   27 CALL proc4(
              )
              Reaching definitions: r24=r24{20},   r25=r25{20},   r26=r26{20},   r28=r28{16} - 8,   r30=r30{20},
                r31=r31{20},   m[r28{0} - 4]=%pc,   m[r28{0} - 8]=%pc,   %flags=LOGICALFLAGS32( 0x400000 ),
                %ZF=LOGICALFLAGS32( 0x400000 ),   %CF=LOGICALFLAGS32( 0x400000 )
              Live variables:  in proc _start
dest is not lib
call:   39 {*32* r26, *v* r28} := CALL proc13(
              )
              Reaching definitions: r9=r9{49},   r24=zfill(32,64,global23) * 160,   r25=r25{50},
                r26=(zfill(32,64,global23) * 160) >> 32,   r27=r27{13} + 1,   r28=r28{0} - 8,   r30=r30{51},
                r31=r31{52},   m[r28{0} - 4]=r27{0},   m[r28{0} - 8]=%pc,   tmp1=tmp1{33},
                tmpl=zfill(32,64,global23) * 160,   %flags=LOGICALFLAGS32( m[0x4023dc] ),
                %ZF=LOGICALFLAGS32( m[0x4023dc] ),   %CF=LOGICALFLAGS32( m[0x4023dc] )
              Live variables:  in proc proc12
