INFO  an - ### holdec 1.1 Copyright 2003-2012 Raimar Falke
INFO  an - Using ./malware_via_email/malware_0511/ia32_pe/subject.exe as executable
read image                              : ............................................................ [ done ]
INFO  fG - Detected PE (Portable Executable)
INFO  ks - wrote ./malware_via_email/malware_0511/ia32_pe/subject.exe.info
INFO  fG - disassembleAndWrite: start a new loop with 1 extra block starts
Disassemble                             : ............................................................ [ done ]
INFO  fG - disassembleAndWrite: running multiline
INFO  ks - wrote ./malware_via_email/malware_0511/ia32_pe/subject.exe.info
Preprocessing 1218 asm lines            : ............................................................ [ done ]
INFO  ks - wrote ./malware_via_email/malware_0511/ia32_pe/subject.exe.info
INFO  fG - disassembleAndWrite: found no new addresses. will stop now.
INFO  ks - wrote ./malware_via_email/malware_0511/ia32_pe/subject.exe.info
Preprocessing 1444 asm lines            : ............................................................ [ done ]
INFO  ks - wrote ./malware_via_email/malware_0511/ia32_pe/subject.exe.info
INFO  fG - reading all asm lines ...
INFO  fG - ... read 1444 asm lines
WARN  w - Address 003e2000.0 is excluded by the address filter. Maybe outside text section?
create blocks                           : ............................................................ [ done ]
init blocks                             : ............................................................ [ done ]
Writing 22 methods to cache             : ............................................................ [ done ]
INFO  an - will decompile 22 functions
decompile F_003e1000                    : ............................................................ [ done ]
decompile F_003e101c                    : .WARN  ag - Referencing unknown line 003e1944.0
........................................................... [ done ]
decompile F_003e10b3                    : .WARN  ag - Referencing unknown line 003e1a34.0
WARN  ag - Referencing unknown line 003e19b0.0
WARN  ag - Referencing unknown line 003e19b0.0
........................................................... [ done ]
decompile F_003e1125                    : ............................................................ [ done ]
decompile F_003e1138                    : .WARN  ag - Referencing unknown line 003e1125.0
WARN  ag - Referencing unknown line 003e10b3.0
........WARN  ac - Block 10 is already known to have a starting stack offset of -56 but when called from 9 it has an offset of -48
WARN  ac - Block 6 is already known to have a starting stack offset of -48 but when called from 10 it has an offset of -56
WARN  ac - Block 1 is already known to have a starting stack offset of -44 but when called from 11 it has an offset of -48
................................................... [ done ]
decompile F_003e1260                    : .........WARN  ac - Block 1 is already known to have a starting stack offset of -8 but when called from 3 it has an offset of -28
.............................WARN  d - may result in wrong values
WARN  d -   reg_pp7 = PHI(reg_var12, reg_var10) in Block1
WARN  d -   reg_var12 = ADD(reg_pp7, -20) in Block3
...................... [ done ]
decompile F_003e1297                    : .........WARN  ac - Block 1 is already known to have a starting stack offset of -8 but when called from 3 it has an offset of -28
.............................WARN  d - may result in wrong values
WARN  d -   reg_pp7 = PHI(reg_var12, reg_var10) in Block1
WARN  d -   reg_var12 = ADD(reg_pp7, -20) in Block3
...................... [ done ]
decompile F_003e12ce                    : .WARN  ag - Referencing unknown line 003e1297.0
WARN  ag - Referencing unknown line 003e1260.0
........................................................... [ done ]
decompile F_003e1415                    : ............................................................ [ done ]
decompile F_003e1432                    : .WARN  ag - Referencing unknown line 003e15d0.0
WARN  ag - Referencing unknown line 003e12ce.0
WARN  ag - Referencing unknown line 003e1415.0
WARN  ag - Referencing unknown line 003e1415.0
WARN  ag - Referencing unknown line 003e1000.0
WARN  ag - Referencing unknown line 003e101c.0
WARN  ag - Referencing unknown line 003e15e0.0
WARN  ag - Referencing unknown line 003e1000.0
WARN  ag - Referencing unknown line 003e1138.0
WARN  ag - Referencing unknown line 003e1778.0
........WARN  ac - Block 10 is already known to have a starting stack offset of -52 but when called from 3 it has an offset of -68
WARN  ac - Block 10 is already known to have a starting stack offset of -68 but when called from 5 it has an offset of -84
WARN  ac - Block 10 is already known to have a starting stack offset of -84 but when called from 9 it has an offset of -112
................................................... [ done ]
decompile F_003e15b6                    : .WARN  ag - Referencing unknown line 003e1432.0
........................................................... [ done ]
decompile F_003e15d0                    : ............................................................ [ done ]
decompile F_003e15e0                    : .WARN  ag - Referencing unknown line 003e1944.0
........................................................... [ done ]
decompile F_003e16ae                    : ............................................................ [ done ]
decompile F_003e1778                    : .WARN  ag - Referencing unknown line 003e16ae.0
........WARN  ac - Block 2 is already known to have a starting stack offset of -32 but when called from 1 it has an offset of -48
................................................... [ done ]
decompile F_003e1810                    : ............................................................ [ done ]
decompile F_003e1944                    : ............................................................ [ done ]
decompile F_003e19b0                    : ............................................................ [ done ]
decompile F_003e1a34                    : .WARN  ag - Referencing unknown line 003e1810.0
WARN  ag - Referencing unknown line 003e1810.0
........................................................... [ done ]
decompile F_003e1a90                    : .WARN  ag - Referencing unknown line 003e1aac.0
........................................................... [ done ]
decompile F_003e1aac                    : ................. failed: A non-current expression of a variable is used in block L4 in (void) STORE(ADD(reg_c0, SEGMENT2ADDR(reg_pp8)), reg_zb12): The current setter is reg_zj1 while [reg_pp8] was found. Related expressions are [reg_pp9, reg_pp8, reg_pp13, reg_zj5, reg_zj0, reg_zj2, reg_zj1]
decompile F_003e1b6b                    : .WARN  ag - Referencing unknown line 003e1aac.0
WARN  ag - Referencing unknown line 003e1aac.0
........................................................... [ done ]
