// subject.h
// Generated on TIMESTAMP by decompiling malware_via_email/malware_0684/ia32_pe/subject.exe
// using Decompiler version VERSION

/*
// Equivalence classes ////////////
Eq_1: (struct "Globals")
	globals_t (in globals : (ptr (struct "Globals")))
Eq_2: (fn void (word32))
	T_2 (in fn0040146B : ptr32)
	T_3 (in signature of fn0040146B : void)
Eq_7: (struct "Eq_7" (FFFFFF99 word32 dwFFFFFF99))
	T_7 (in edi : (ptr Eq_7))
// Type Variables ////////////
globals_t: (in globals : (ptr (struct "Globals")))
  Class: Eq_1
  DataType: (ptr Eq_1)
  OrigDataType: (ptr (struct "Globals"))
T_2: (in fn0040146B : ptr32)
  Class: Eq_2
  DataType: (ptr Eq_2)
  OrigDataType: (ptr (fn T_6 (T_5)))
T_3: (in signature of fn0040146B : void)
  Class: Eq_2
  DataType: (ptr Eq_2)
  OrigDataType: 
T_4: (in dwArg00 : word32)
  Class: Eq_4
  DataType: word32
  OrigDataType: word32
T_5: (in dwLoc08 : word32)
  Class: Eq_4
  DataType: word32
  OrigDataType: word32
T_6: (in fn0040146B(dwLoc08) : void)
  Class: Eq_6
  DataType: void
  OrigDataType: void
T_7: (in edi : (ptr Eq_7))
  Class: Eq_7
  DataType: (ptr Eq_7)
  OrigDataType: (ptr (struct (FFFFFF99 T_10 tFFFFFF99)))
T_8: (in 0x00000067 : word32)
  Class: Eq_8
  DataType: word32
  OrigDataType: word32
T_9: (in edi - 0x00000067 : word32)
  Class: Eq_9
  DataType: word32
  OrigDataType: word32
T_10: (in Mem0[edi - 0x00000067:word32] : word32)
  Class: Eq_10
  DataType: word32
  OrigDataType: word32
T_11: (in eax : word32)
  Class: Eq_11
  DataType: word32
  OrigDataType: word32
T_12: (in edi->dwFFFFFF99 + eax : word32)
  Class: Eq_10
  DataType: word32
  OrigDataType: word32
T_13: (in 0x00000067 : word32)
  Class: Eq_13
  DataType: word32
  OrigDataType: word32
T_14: (in edi - 0x00000067 : word32)
  Class: Eq_14
  DataType: word32
  OrigDataType: word32
T_15: (in Mem23[edi - 0x00000067:word32] : word32)
  Class: Eq_10
  DataType: word32
  OrigDataType: word32
*/
typedef struct Globals {
} Eq_1;

typedef void (Eq_2)(word32);

typedef struct Eq_7 {
	word32 dwFFFFFF99;	// FFFFFF99
} Eq_7;

