Unknown library function StrStrIA
Unknown library function AddUsersToEncryptedFile
Unknown library function AreAllAccessesGranted
Unknown library function VirtualProtect
assgn   21 *32* %pc := m[0x403020]
is readonly
assgn   32 *32* %pc := m[0x403004]
is readonly
assgn   46 *32* %pc := m[0x403000]
is readonly
assgn   63 *32* %pc := m[0x403010]
is readonly
assgn  183 *32* %pc := m[0x403014]
is readonly
assgn  220 *32* %pc := m[0x403018]
is readonly
assgn  232 *32* %pc := m[0x403018]
is readonly
assgn  263 *32* %pc := m[0x40300c]
is readonly
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 52 to local table
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 84 to local table
in proc _start adding addrExp r28{0} - 88 to local table
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 32 to local table
in proc _start adding addrExp r28{0} - 20 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 52 to local table
in proc _start adding addrExp r28{0} - 20 to local table
TYPE ERROR: Existing type at address 0xffffffec is not structure or array type
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 32 to local table
in proc _start adding addrExp r28{0} - 36 to local table
TYPE ERROR: Existing type at address 0xffffffdc is not structure or array type
in proc _start adding addrExp r28{0} - 40 to local table
TYPE ERROR: Existing type at address 0xffffffd8 is not structure or array type
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 52 to local table
in proc _start adding addrExp r28{0} - 52 to local table
in proc _start adding addrExp r28{0} - 56 to local table
in proc _start adding addrExp r28{0} - 60 to local table
in proc _start adding addrExp r28{0} - 60 to local table
in proc _start adding addrExp r28{0} - 64 to local table
in proc _start adding addrExp r28{0} - 68 to local table
in proc _start adding addrExp r28{0} - 72 to local table
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 60 to local table
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 60 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 52 to local table
in proc _start adding addrExp r28{0} - 52 to local table
in proc _start adding addrExp r28{0} - 52 to local table
in proc _start adding addrExp r28{0} - 52 to local table
in proc _start adding addrExp r28{0} - 52 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffcc existing type unsigned int but added type __size32 *
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 52 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffcc existing type unsigned int but added type __size32 *
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 84 to local table
in proc _start adding addrExp r28{0} - 88 to local table
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 84 to local table
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 84 to local table
in proc _start adding addrExp r28{0} - 88 to local table
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 84 to local table
in proc _start adding addrExp r28{0} - 88 to local table
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 84 to local table
in proc _start adding addrExp r28{0} - 88 to local table
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 84 to local table
in proc _start adding addrExp r28{0} - 88 to local table
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 84 to local table
in proc _start adding addrExp r28{0} - 88 to local table
in proc _start adding addrExp r28{0} - 52 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffcc existing type unsigned int but added type __size32 *
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 52 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffcc existing type unsigned int but added type __size32 *
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 84 to local table
in proc _start adding addrExp r28{0} - 88 to local table
in proc _start adding addrExp r28{0} - 80 to local table
finding final parameters for _start
potential param r28
found new parameter r28
potential param m[r28{0} - 88]
found new parameter m[r28{0} - 88]
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
in proc _start adding addrExp r28{0} - 88 to local table
in proc _start adding addrExp r28{0} - 52 to local table
in proc _start adding addrExp r28{0} - 52 to local table
in proc _start adding addrExp r28{0} - 52 to local table
in proc _start adding addrExp r28{0} - 52 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffcc existing type unsigned int but added type __size32 *
in proc _start adding addrExp r28{0} - 52 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffcc existing type unsigned int but added type __size32 *
in proc _start adding addrExp r28{0} - 88 to local table
in proc _start adding addrExp r28{0} - 88 to local table
in proc _start adding addrExp r28{0} - 88 to local table
in proc _start adding addrExp r28{0} - 52 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffcc existing type unsigned int but added type __size32 *
local ecx has type unsigned int that doesn't agree with type of define void of a library, why?
local edx has type unsigned int that doesn't agree with type of define void of a library, why?
local esp has type unsigned int that doesn't agree with type of define void of a library, why?
local esp has type void that doesn't agree with type of define /*signed?*/int of a library, why?
local eax has type unsigned int that doesn't agree with type of define __size32 of a library, why?
local esp has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local eax has type __size32 that doesn't agree with type of define unsigned int of a library, why?
local edx has type void that doesn't agree with type of define unsigned int of a library, why?
local edx_1 has type __size32 * that doesn't agree with type of define void * of a library, why?
local eax has type unsigned int that doesn't agree with type of define __size32 of a library, why?
local ecx has type void that doesn't agree with type of define void * of a library, why?
local ecx has type void * that doesn't agree with type of define void of a library, why?
local edx has type unsigned int that doesn't agree with type of define void of a library, why?
dest is not lib
call:   22 {*u32* eax, *v* ecx, *v* edx, *v* esp} := CALL StrStrIA(
              )
              Reaching definitions: r10=r10{0},   r26=r26{0},   r27=32,   r28=r28{0} - 44,   r29=r29{0},
                r30=r26{0} + (r30{0} * 2),   r31=0,   m[r28{0} - 20]=232,   m[r28{0} - 24]=r27{0},
                m[r28{0} - 28]=r30{0},   m[r28{0} - 32]=r31{0},   m[r28{0} - 36]=0,   m[r28{0} - 40]=0x403028,
                m[r28{0} - 44]=%pc,   m[r28{0} - 48]=m[r28{0} - 48]{0},   m[r28{0} - 52]=m[r28{0} - 52]{0},
                m[r28{0} - 80]=m[r28{0} - 80]{0},   m[r28{0} - 84]=m[r28{0} - 84]{0},
                m[r28{0} - 88]=m[r28{0} - 88]{0},   tmp1=r28{0},   %flags=LOGICALFLAGS32( 0 ),
                %ZF=LOGICALFLAGS32( 0 ),   %CF=LOGICALFLAGS32( 0 )
              Live variables: eax in proc _start
result:    0 *u32* eax := -
dest is not lib
call:   33 {*u32* eax, *v* ecx, *v* edx, *j32* esp} := CALL AddUsersToEncryptedFile(
              )
              Reaching definitions: r10=r10{0},   r24=r24{22},   r25=r25{22},   r26=r26{22},   r27=32,
                r28=r28{0} - 52,   r29=r29{0},   r30=r26{0} + (r30{0} * 2),   r31=0,   m[r28{0} - 20]=232,
                m[r28{0} - 24]=r27{0},   m[r28{0} - 28]=r30{0},   m[r28{0} - 32]=r31{0},   m[r28{0} - 36]=0,
                m[r28{0} - 40]=0x403028,   m[r28{0} - 44]=r24{22},   m[r28{0} - 48]=r24{22},   m[r28{0} - 52]=%pc,
                m[r28{0} - 80]=m[r28{0} - 80]{0},   m[r28{0} - 84]=m[r28{0} - 84]{0},
                m[r28{0} - 88]=m[r28{0} - 88]{0},   tmp1=r24{22},   %flags=LOGICALFLAGS32( r24{22} ),
                %ZF=LOGICALFLAGS32( r24{22} ),   %CF=LOGICALFLAGS32( r24{22} )
              Live variables: eax in proc _start
result:    0 *u32* eax := -
dest is not lib
call:   47 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL AreAllAccessesGranted(
              )
              Reaching definitions: r10=r10{0},   r24=r24{33},   r25=r25{33},   r26=r26{33},   r27=32,
                r28=r28{0} - 60,   r29=r29{0},   r30=r26{0} + (r30{0} * 2),   r31=0,   m[r28{0} - 20]=232,
                m[r28{0} - 24]=r27{0},   m[r28{0} - 28]=r30{0},   m[r28{0} - 32]=r31{0},   m[r28{0} - 36]=0,
                m[r28{0} - 40]=0x403028,   m[r28{0} - 44]=r24{22},   m[r28{0} - 48]=r24{22},   m[r28{0} - 52]=-1,
                m[r28{0} - 56]=-1,   m[r28{0} - 60]=%pc,   m[r28{0} - 80]=m[r28{0} - 80]{0},
                m[r28{0} - 84]=m[r28{0} - 84]{0},   m[r28{0} - 88]=m[r28{0} - 88]{0},   tmp1=r24{33},
                %flags=LOGICALFLAGS32( r24{33} ),   %ZF=LOGICALFLAGS32( r24{33} ),   %CF=LOGICALFLAGS32( r24{33} )
              Live variables: eax in proc _start
result:    0 *32* eax := -
dest is not lib
call:   64 {*u32* eax, *v* ecx, *u32* edx, *v* esp} := CALL VirtualProtect(
              )
              Reaching definitions: r10=r10{0},   r24=r28{0} - 40,   r25=r25{47},   r26=r26{47},   r27=r27{287},
                r28=r28{0} - 76,   r29=r29{0},   r30=r26{0} + (r30{0} * 2),   r31=0,   m[r28{0} - 20]=232,
                m[r28{0} - 24]=r27{0},   m[r28{0} - 28]=r30{0},   m[r28{0} - 32]=r31{0},   m[r28{0} - 36]=0,
                m[r28{0} - 40]=0x403028,   m[r28{0} - 44]=r24{22},   m[r28{0} - 48]=r24{22},   m[r28{0} - 52]=-1,
                m[r28{0} - 56]=-1,   m[r28{0} - 60]=r28{0} - 40,   m[r28{0} - 64]=64,   m[r28{0} - 68]=0x3000,
                m[r28{0} - 72]=0x401000,   m[r28{0} - 76]=%pc,   m[r28{0} - 80]=m[r28{0} - 80]{0},
                m[r28{0} - 84]=m[r28{0} - 84]{0},   m[r28{0} - 88]=m[r28{0} - 88]{0},   tmp1=r24{47},
                %flags=LOGICALFLAGS32( r24{47} ),   %ZF=LOGICALFLAGS32( r24{47} ),   %CF=LOGICALFLAGS32( r24{47} )
              Live variables: eax,  edx in proc _start
result:    0 *u32* eax := -
result:    0 *u32* edx := -
dest is not lib
call:  184 {*u32* eax_4, *v* ecx, *v** edx_1, *v* esp} := CALL LoadLibraryA(
                *union* local3 := eax + edi_11
              )
              Reaching definitions: r10=r10{342},   r24=r24{175} + r31{350},   r25=r25{344},   r26=r26{345},
                r27=r27{346},   r28=(r28{0} - 76) - 8,   r29=r29{348},   r30=r30{349},   r31=r31{350},
                m[r28{0} - 20]=232,   m[r28{0} - 24]=r27{0},   m[r28{0} - 28]=r30{0},   m[r28{0} - 32]=r31{0},
                m[r28{0} - 36]=0,   m[r28{0} - 40]=0x403028,   m[r28{0} - 44]=0x401358,
                m[r28{0} - 48]=m[r28{0} - 48]{412},   m[r28{0} - 52]=m[r28{0} - 52]{413},   m[r28{0} - 56]=-1,
                m[r28{0} - 60]=r28{0} - 40,   m[r28{0} - 64]=64,   m[r28{0} - 68]=0x3000,   m[r28{0} - 72]=0x401000,
                m[r28{0} - 76]=r29{0},   m[r28{0} - 80]=r24{175} + r31{350},   m[r28{0} - 84]=%pc,
                m[r28{0} - 88]=m[r28{0} - 88]{416},   tmp1=r24{175},
                %flags=ADDFLAGS32( r24{175}, r31{350}, r24{175} + r31{350} ),
                %ZF=ADDFLAGS32( r24{175}, r31{350}, r24{175} + r31{350} ),
                %CF=ADDFLAGS32( r24{175}, r31{350}, r24{175} + r31{350} )
              Live variables: eax_4,  edx_1 in proc _start
result:    0 *u32* eax_4 := -
result:    0 *v** edx_1 := -
dest is not lib
call:  233 {*32* eax, *v** ecx, *v** edx_1, *v* esp} := CALL GetProcAddress(
                *union* local4 := eax_4
                *c** local3 := (eax_3 + edi_9) + 2
              )
              Reaching definitions: r10=r10{356},   r24=(r24{357} + r31{364}) + 2,   r25=r24{184},   r26=r26{359},
                r27=r27{360},   r28=(r28{0} - 76) - 12,   r29=r29{362},   r30=r30{363},   r31=r31{364},
                m[r28{0} - 20]=232,   m[r28{0} - 24]=r27{0},   m[r28{0} - 28]=r30{0},   m[r28{0} - 32]=r31{0},
                m[r28{0} - 36]=0,   m[r28{0} - 40]=0x403028,   m[r28{0} - 44]=0x401358,   m[r28{0} - 48]=r24{184},
                m[r28{0} - 52]=m[r28{0} - 52]{413},   m[r28{0} - 56]=-1,   m[r28{0} - 60]=r28{0} - 40,
                m[r28{0} - 64]=64,   m[r28{0} - 68]=0x3000,   m[r28{0} - 72]=0x401000,   m[r28{0} - 76]=r29{0},
                m[r28{0} - 80]=(r24{357} + r31{364}) + 2,   m[r28{0} - 84]=r24{184},   m[r28{0} - 88]=%pc,
                tmp1=r24{357},   %flags=LOGICALFLAGS32( r24{357} ),   %ZF=LOGICALFLAGS32( r24{357} ),
                %CF=LOGICALFLAGS32( r24{357} )
              Live variables: eax,  edx_1 in proc _start
result:    0 *32* eax := -
result:    0 *v** edx_1 := -
dest is not lib
call:  221 {*32* eax, *v** ecx, *v** edx_1, *v* esp} := CALL GetProcAddress(
                *union* local4 := eax_4
                *union* local3 := edx
              )
              Reaching definitions: r10=truncu(32,8,r26{212}),   r24=r24{357},   r25=r24{184},   r26=r26{212},
                r27=r27{360},   r28=(r28{0} - 76) - 12,   r29=r29{362},   r30=r30{363},   r31=r31{364},
                m[r28{0} - 20]=232,   m[r28{0} - 24]=r27{0},   m[r28{0} - 28]=r30{0},   m[r28{0} - 32]=r31{0},
                m[r28{0} - 36]=0,   m[r28{0} - 40]=0x403028,   m[r28{0} - 44]=0x401358,   m[r28{0} - 48]=r24{184},
                m[r28{0} - 52]=m[r28{0} - 52]{413},   m[r28{0} - 56]=-1,   m[r28{0} - 60]=r28{0} - 40,
                m[r28{0} - 64]=64,   m[r28{0} - 68]=0x3000,   m[r28{0} - 72]=0x401000,   m[r28{0} - 76]=r29{0},
                m[r28{0} - 80]=r26{212},   m[r28{0} - 84]=r24{184},   m[r28{0} - 88]=%pc,   tmp1=r24{357},
                %flags=LOGICALFLAGS32( r24{357} ),   %ZF=LOGICALFLAGS32( r24{357} ),   %CF=LOGICALFLAGS32( r24{357} )
              Live variables: eax,  edx_1 in proc _start
result:    0 *32* eax := -
result:    0 *v** edx_1 := -
dest is not lib
call:  264 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL ExitProcess(
                *UINT* m[esp - 4] := m[esp - 4]
              )
              Reaching definitions: r10=r10{258},   r24=r24{258},   r25=r25{258},   r26=r26{258},   r27=r27{258},
                r28=r28{258} - 8,   r29=r29{258},   r30=r30{258},   r31=r31{258},   m[r28{0} - 20]=m[r28{0} - 20]{258},
                m[r28{0} - 24]=m[r28{0} - 24]{258},   m[r28{0} - 28]=m[r28{0} - 28]{258},
                m[r28{0} - 32]=m[r28{0} - 32]{258},   m[r28{0} - 36]=m[r28{0} - 36]{258},
                m[r28{0} - 40]=m[r28{0} - 40]{258},   m[r28{0} - 44]=m[r28{0} - 44]{258},
                m[r28{0} - 48]=m[r28{0} - 48]{258},   m[r28{0} - 52]=m[r28{0} - 52]{258},
                m[r28{0} - 56]=m[r28{0} - 56]{258},   m[r28{0} - 60]=m[r28{0} - 60]{258},
                m[r28{0} - 64]=m[r28{0} - 64]{258},   m[r28{0} - 68]=m[r28{0} - 68]{258},
                m[r28{0} - 72]=m[r28{0} - 72]{258},   m[r28{0} - 76]=m[r28{0} - 76]{258},
                m[r28{0} - 80]=m[r28{0} - 80]{258},   m[r28{0} - 84]=m[r28{0} - 84]{258},
                m[r28{0} - 88]=m[r28{0} - 88]{258},   m[r28{0} - 20]=m[r28{0} - 20]{258},
                m[r28{0} - 24]=m[r28{0} - 24]{258},   m[r28{0} - 28]=m[r28{0} - 28]{258},
                m[r28{0} - 32]=m[r28{0} - 32]{258},   m[r28{0} - 36]=m[r28{0} - 36]{258},
                m[r28{0} - 40]=m[r28{0} - 40]{258},   m[r28{0} - 44]=m[r28{0} - 44]{258},
                m[r28{0} - 48]=m[r28{0} - 48]{258},   m[r28{0} - 52]=m[r28{0} - 52]{258},
                m[r28{0} - 56]=m[r28{0} - 56]{258},   m[r28{0} - 60]=m[r28{0} - 60]{258},
                m[r28{0} - 64]=m[r28{0} - 64]{258},   m[r28{0} - 68]=m[r28{0} - 68]{258},
                m[r28{0} - 72]=m[r28{0} - 72]{258},   m[r28{0} - 76]=m[r28{0} - 76]{258},
                m[r28{0} - 80]=m[r28{0} - 80]{258},   m[r28{0} - 84]=m[r28{0} - 84]{258},
                m[r28{0} - 88]=m[r28{0} - 88]{258},   <all>=<all>{258},   tmp1=tmp1{258},   %flags=%flags{258},
                %ZF=%ZF{258},   %CF=%CF{258}
              Live variables:  in proc _start
