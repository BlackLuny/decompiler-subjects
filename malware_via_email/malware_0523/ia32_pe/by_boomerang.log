in proc proc2 adding addrExp r28{0} to local table
finding final parameters for proc2
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc3 ###
in proc proc3 adding addrExp r28{0} to local table
in proc proc3 adding addrExp r28{0} to local table
finding final parameters for proc3
potential param r30
found new parameter r30
potential param r24
found new parameter r24
potential param r27
found new parameter r27
potential param r26
found new parameter r26
potential param r25
found new parameter r25
potential param r29
found new parameter r29
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc1 ###
in proc proc1 adding addrExp r28{0} to local table
in proc proc1 adding addrExp r28{0} to local table
finding final parameters for proc1
after removing matching assigns (%pc).
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 4 to local table
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
finding final parameters for _start
WARNING: size 0x8 meet with unsigned int; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
WARNING: size 0x8 meet with unsigned int; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc1 ###
found seq with more than one outedge!
taken branch is first out edge
dest is not lib
call:   67 <all> := CALL proc1(<all>)
              Reaching definitions: r9=r9{0},   r11=truncu(32,8,ebx - 1),   r13=r13{0},   r14=r9{0},   r24=r24{0},
                r25=r25{0},   r26=(edx & 0xffff00ff) | (cl * 256),   r27=r27{52} - 1,   r28=r28{0} - 8,
                r29=r28{0} - 4,   r30=r30{37} - (r25{0} + r25{0}),   r31=r26{47},
                m[r28{0} + 0x33938e59]=m[esp + 0x33938e59]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=%pc,
                tmp1=r27{52},   %flags=LOGICALFLAGS32( ebx - 1 ),   %ZF=LOGICALFLAGS32( ebx - 1 ),
                %CF=LOGICALFLAGS32( ebx - 1 )
              Live variables:  in proc _start
found seq with more than one outedge!
taken branch is first out edge
found seq with more than one outedge!
taken branch is first out edge
found seq with more than one outedge!
taken branch is first out edge
dest is not lib
call:   33 <all> := CALL proc3(<all>)
              Reaching definitions: r8=r8{0},   r9=r9{0},   r10=truncu(32,8,edx),   r11=truncu(32,8,ebx),   r12=r12{0},
                r13=r13{0},   r14=r14{11},   r15=ebx@15:8,   r24=r24{227},   r25=r25{0},
                r26=(edx & 0xffff00ff) | (dh * 256),   r27=r27{23},   r28=r28{0},   r29=r29{0},
                r30=(((r30{0} + 1) | r24{227}) - (((((((r27{224} & 0xffff00ff) | (((r15{0} - r12{0})*8* - r9{0})*8* * 256)) + 1)@31:8) | zfill(8,32,(truncu(32,8,((r27{224} & 0xffff00ff) | (((r15{0} - r12{0})*8* - r9{0})*8* * 256)) + 1) ^ r12{0})*8*)) & 0xffff00ff) | 0x7800)) + 1,
                r31=r24{227} - 1,   m[r28{0}]=%pc,   tmp1=r24{227},
                tmpb=(truncu(32,8,((r27{224} & 0xffff00ff) | (((r15{0} - r12{0})*8* - r9{0})*8* * 256)) + 1) ^ r12{0})*8*,
                %flags=LOGICALFLAGS32( eax - 1 ),   %ZF=LOGICALFLAGS32( eax - 1 ),   %CF=LOGICALFLAGS32( eax - 1 )
              Live variables:  in proc proc1
found seq with more than one outedge!
taken branch is first out edge
found seq with more than one outedge!
taken branch is first out edge
dest is not lib
call:  140 <all> := CALL proc2(<all>)
              Reaching definitions: r8=truncu(32,8,edx_1),   r9=truncu(32,8,edx_1 - 0x1e34a593),
                r10=truncu(32,8,0 ^ (edx_1 - 0x1e34a593)),   r11=truncu(32,8,esi_1 ^ (edx_1 - 0x1e34a593)),
                r12=edx_1@15:8,   r13=(edx_1 - 0x1e34a593)@15:8,   r14=(0 ^ (edx_1 - 0x1e34a593))@15:8,
                r15=(esi_1 ^ (edx_1 - 0x1e34a593))@15:8,   r24=r26{110},   r25=r26{110} - 0x1e34a593,
                r26=0 ^ (edx_1 - 0x1e34a593),   r27=esi_1 ^ (edx_1 - 0x1e34a593),   r28=r29{0},   r29=r29{220},
                r30=r30{105},
                r31=(((edi + ebx) - ((((((((edx@31:8) | -15) & 0xffff00ff) | ((0 - (edx@15:8)) * 256)) & 0xffff00ff) | (al * 256)) & 0xffff00ff) | (ch * 256))) - 1) | ((ebx - ((((((((edx@31:8) | -15) & 0xffff00ff) | ((0 - (edx@15:8)) * 256)) & 0xffff00ff) | (al * 256)) & 0xffff00ff) | (ch * 256))) | (((edi + ebx) - ((((((((edx@31:8) | -15) & 0xffff00ff) | ((0 - (edx@15:8)) * 256)) & 0xffff00ff) | (al * 256)) & 0xffff00ff) | (ch * 256))) - 1)),
                m[r28{0}]=r26{0},   tmp1=0xe1cb5a6d,   tmpb=r8{0},   %flags=LOGICALFLAGS32( 0 ^ (edx_1 - 0x1e34a593) ),
                %ZF=LOGICALFLAGS32( 0 ^ (edx_1 - 0x1e34a593) ),   %CF=LOGICALFLAGS32( 0 ^ (edx_1 - 0x1e34a593) )
              Live variables:  in proc proc1
found seq with more than one outedge!
taken branch is first out edge
dest is not lib
call:   40 <all> := CALL proc2(<all>)
              Reaching definitions: r24=r26{24},   r25=r25{0} + r26{24},   r26=0 ^ (param2 + edx),
                r27=esi ^ (param2 + edx),   r28=r29{0},   r29=r29{67},   r30=r30{19},
                r31=(((param2 ^ (param4 - param3)) + param4) - (param3 + param3)) | (((param4 - (param3 + param3)) + 1) | (((param2 ^ (param4 - param3)) + param4) - (param3 + param3))),
                m[r28{0}]=r30{0},   tmp1=r25{0},   %flags=LOGICALFLAGS32( 0 ^ (param2 + edx) ),
                %ZF=LOGICALFLAGS32( 0 ^ (param2 + edx) ),   %CF=LOGICALFLAGS32( 0 ^ (param2 + edx) )
              Live variables:  in proc proc3
