Unknown library function GetVersion
after removing matching assigns (%pc).
in proc proc1 adding addrExp r28{0} - 4 to local table
finding final parameters for proc1
potential param r28
found new parameter r28
potential param r26
found new parameter r26
assgn    5 *32* %pc := m[0x403008]
is readonly
assgn    9 *32* %pc := m[0x403008]
is readonly
assgn   13 *32* %pc := m[0x403008]
is readonly
assgn   17 *32* %pc := m[0x403008]
is readonly
assgn   21 *32* %pc := m[0x403008]
is readonly
assgn   25 *32* %pc := m[0x403008]
is readonly
assgn   29 *32* %pc := m[0x403008]
is readonly
assgn   33 *32* %pc := m[0x403008]
is readonly
assgn   37 *32* %pc := m[0x403008]
is readonly
assgn   41 *32* %pc := m[0x403008]
is readonly
assgn   45 *32* %pc := m[0x403008]
is readonly
assgn   49 *32* %pc := m[0x403008]
is readonly
assgn   53 *32* %pc := m[0x403008]
is readonly
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
in proc _start adding addrExp r28{0} - 4 to local table
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type unsigned int does not resolve to compound or array
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type unsigned int does not resolve to compound or array
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type unsigned int does not resolve to compound or array
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type unsigned int does not resolve to compound or array
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type unsigned int does not resolve to compound or array
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type unsigned int does not resolve to compound or array
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type unsigned int does not resolve to compound or array
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type unsigned int does not resolve to compound or array
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type unsigned int does not resolve to compound or array
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type unsigned int does not resolve to compound or array
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type unsigned int does not resolve to compound or array
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type unsigned int does not resolve to compound or array
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type unsigned int does not resolve to compound or array
finding final parameters for _start
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for proc1
potential param r28
found new parameter r28
potential param r26
found new parameter r26
finding final parameters for _start
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
local edx has type __size32 that doesn't agree with type of define void of a library, why?
local esp has type __size32 that doesn't agree with type of define void of a library, why?
local edx has type void that doesn't agree with type of define __size32 of a library, why?
dest is not lib
call:    6 {*32* r24, *v* r25, *v* edx} := CALL GetVersion(
              )
              Reaching definitions: r25=r25{0} | 0x92650275,   r28=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} - 4]=%pc,   %flags=LOGICALFLAGS32( r25{0} | 0x92650275 ),
                %ZF=LOGICALFLAGS32( r25{0} | 0x92650275 ),   %CF=LOGICALFLAGS32( r25{0} | 0x92650275 )
              Live variables:  in proc _start
dest is not lib
call:   10 {*32* r24, *v* r25, *v* edx} := CALL GetVersion(
              )
              Reaching definitions: r24=r24{6},   r25=r25{6},   r26=r26{6},   r28=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=%pc,   %flags=LOGICALFLAGS32( r25{0} | 0x92650275 ),
                %ZF=LOGICALFLAGS32( r25{0} | 0x92650275 ),   %CF=LOGICALFLAGS32( r25{0} | 0x92650275 )
              Live variables:  in proc _start
dest is not lib
call:   14 {*32* r24, *v* r25, *v* edx} := CALL GetVersion(
              )
              Reaching definitions: r24=r24{10},   r25=r25{10},   r26=r26{10},   r28=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=%pc,   %flags=LOGICALFLAGS32( r25{0} | 0x92650275 ),
                %ZF=LOGICALFLAGS32( r25{0} | 0x92650275 ),   %CF=LOGICALFLAGS32( r25{0} | 0x92650275 )
              Live variables:  in proc _start
dest is not lib
call:   18 {*32* r24, *v* r25, *v* edx} := CALL GetVersion(
              )
              Reaching definitions: r24=r24{14},   r25=r25{14},   r26=r26{14},   r28=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=%pc,   %flags=LOGICALFLAGS32( r25{0} | 0x92650275 ),
                %ZF=LOGICALFLAGS32( r25{0} | 0x92650275 ),   %CF=LOGICALFLAGS32( r25{0} | 0x92650275 )
              Live variables:  in proc _start
dest is not lib
call:   22 {*32* r24, *v* r25, *v* edx} := CALL GetVersion(
              )
              Reaching definitions: r24=r24{18},   r25=r25{18},   r26=r26{18},   r28=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=%pc,   %flags=LOGICALFLAGS32( r25{0} | 0x92650275 ),
                %ZF=LOGICALFLAGS32( r25{0} | 0x92650275 ),   %CF=LOGICALFLAGS32( r25{0} | 0x92650275 )
              Live variables:  in proc _start
dest is not lib
call:   26 {*32* r24, *v* r25, *v* edx} := CALL GetVersion(
              )
              Reaching definitions: r24=r24{22},   r25=r25{22},   r26=r26{22},   r28=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=%pc,   %flags=LOGICALFLAGS32( r25{0} | 0x92650275 ),
                %ZF=LOGICALFLAGS32( r25{0} | 0x92650275 ),   %CF=LOGICALFLAGS32( r25{0} | 0x92650275 )
              Live variables:  in proc _start
dest is not lib
call:   30 {*32* r24, *v* r25, *v* edx} := CALL GetVersion(
              )
              Reaching definitions: r24=r24{26},   r25=r25{26},   r26=r26{26},   r28=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=%pc,   %flags=LOGICALFLAGS32( r25{0} | 0x92650275 ),
                %ZF=LOGICALFLAGS32( r25{0} | 0x92650275 ),   %CF=LOGICALFLAGS32( r25{0} | 0x92650275 )
              Live variables:  in proc _start
dest is not lib
call:   34 {*32* r24, *v* r25, *v* edx} := CALL GetVersion(
              )
              Reaching definitions: r24=r24{30},   r25=r25{30},   r26=r26{30},   r28=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=%pc,   %flags=LOGICALFLAGS32( r25{0} | 0x92650275 ),
                %ZF=LOGICALFLAGS32( r25{0} | 0x92650275 ),   %CF=LOGICALFLAGS32( r25{0} | 0x92650275 )
              Live variables:  in proc _start
dest is not lib
call:   38 {*32* r24, *v* r25, *v* edx} := CALL GetVersion(
              )
              Reaching definitions: r24=r24{34},   r25=r25{34},   r26=r26{34},   r28=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=%pc,   %flags=LOGICALFLAGS32( r25{0} | 0x92650275 ),
                %ZF=LOGICALFLAGS32( r25{0} | 0x92650275 ),   %CF=LOGICALFLAGS32( r25{0} | 0x92650275 )
              Live variables:  in proc _start
dest is not lib
call:   42 {*32* r24, *v* r25, *v* edx} := CALL GetVersion(
              )
              Reaching definitions: r24=r24{38},   r25=r25{38},   r26=r26{38},   r28=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=%pc,   %flags=LOGICALFLAGS32( r25{0} | 0x92650275 ),
                %ZF=LOGICALFLAGS32( r25{0} | 0x92650275 ),   %CF=LOGICALFLAGS32( r25{0} | 0x92650275 )
              Live variables:  in proc _start
dest is not lib
call:   46 {*32* r24, *v* r25, *v* edx} := CALL GetVersion(
              )
              Reaching definitions: r24=r24{42},   r25=r25{42},   r26=r26{42},   r28=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=%pc,   %flags=LOGICALFLAGS32( r25{0} | 0x92650275 ),
                %ZF=LOGICALFLAGS32( r25{0} | 0x92650275 ),   %CF=LOGICALFLAGS32( r25{0} | 0x92650275 )
              Live variables:  in proc _start
dest is not lib
call:   50 {*32* r24, *v* r25, *v* edx} := CALL GetVersion(
              )
              Reaching definitions: r24=r24{46},   r25=r25{46},   r26=r26{46},   r28=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=%pc,   %flags=LOGICALFLAGS32( r25{0} | 0x92650275 ),
                %ZF=LOGICALFLAGS32( r25{0} | 0x92650275 ),   %CF=LOGICALFLAGS32( r25{0} | 0x92650275 )
              Live variables:  in proc _start
dest is not lib
call:   54 {*32* r24, *32* r25, *32* edx} := CALL GetVersion(
              )
              Reaching definitions: r24=r24{50},   r25=r25{50},   r26=r26{50},   r28=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=%pc,   %flags=LOGICALFLAGS32( r25{0} | 0x92650275 ),
                %ZF=LOGICALFLAGS32( r25{0} | 0x92650275 ),   %CF=LOGICALFLAGS32( r25{0} | 0x92650275 )
              Live variables: edx in proc _start
result:    0 *32* edx := -
dest is not lib
call:   61 *32* r24 := CALL proc1(
                *32* edx := edx
              )
              Reaching definitions: r24=r24{54},   r25=r25{54} + 0x38562594,   r26=r26{54},   r28=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=%pc,   tmp1=r25{54},
                %flags=ADDFLAGS32( r25{54}, 0x38562594, r25{54} + 0x38562594 ),
                %ZF=ADDFLAGS32( r25{54}, 0x38562594, r25{54} + 0x38562594 ),
                %CF=ADDFLAGS32( r25{54}, 0x38562594, r25{54} + 0x38562594 )
              Live variables:  in proc _start
