Unknown library function AreAnyAccessesGranted
assgn   15 *32* r31 := m[0x403004]
is readonly
assgn  499 *32* %pc := m[0x403000]
is readonly
assgn  625 *32* %pc := m[0x403010]
is readonly
assgn  627 *32* r30 := m[0x40300c]
is readonly
assgn  678 *32* %pc := m[0x403018]
is readonly
assgn  694 *32* %pc := m[0x403018]
is readonly
assgn  727 *32* %pc := m[0x403014]
is readonly
after removing matching assigns (%pc).
WARNING: size 0x10 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x10 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x10 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x10 meet with /*signed?*/int; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 20 to local table
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 32 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 52 to local table
in proc _start adding addrExp r28{0} - 16 to local table
TYPE ERROR: Existing type at address 0xfffffff0 is not structure or array type
in proc _start adding addrExp r28{0} - 20 to local table
TYPE ERROR: Existing type at address 0xffffffec is not structure or array type
in proc _start adding addrExp r28{0} - 24 to local table
TYPE ERROR: Existing type at address 0xffffffe8 is not structure or array type
in proc _start adding addrExp r28{0} - 28 to local table
TYPE ERROR: Existing type at address 0xffffffe4 is not structure or array type
in proc _start adding addrExp r28{0} - 32 to local table
TYPE ERROR: Existing type at address 0xffffffe0 is not structure or array type
in proc _start adding addrExp r28{0} - 36 to local table
TYPE ERROR: Existing type at address 0xffffffdc is not structure or array type
in proc _start adding addrExp r28{0} - 40 to local table
TYPE ERROR: Existing type at address 0xffffffd8 is not structure or array type
in proc _start adding addrExp r28{0} - 44 to local table
TYPE ERROR: Existing type at address 0xffffffd4 is not structure or array type
in proc _start adding addrExp r28{0} - 48 to local table
TYPE ERROR: Existing type at address 0xffffffd0 is not structure or array type
in proc _start adding addrExp r28{0} - 52 to local table
TYPE ERROR: Existing type at address 0xffffffcc is not structure or array type
in proc _start adding addrExp r28{0} - 16 to local table
TYPE ERROR: Existing type at address 0xfffffff0 is not structure or array type
in proc _start adding addrExp r28{0} - 20 to local table
TYPE ERROR: Existing type at address 0xffffffec is not structure or array type
in proc _start adding addrExp r28{0} - 24 to local table
TYPE ERROR: Existing type at address 0xffffffe8 is not structure or array type
in proc _start adding addrExp r28{0} - 28 to local table
TYPE ERROR: Existing type at address 0xffffffe4 is not structure or array type
in proc _start adding addrExp r28{0} - 32 to local table
TYPE ERROR: Existing type at address 0xffffffe0 is not structure or array type
in proc _start adding addrExp r28{0} - 36 to local table
TYPE ERROR: Existing type at address 0xffffffdc is not structure or array type
in proc _start adding addrExp r28{0} - 40 to local table
TYPE ERROR: Existing type at address 0xffffffd8 is not structure or array type
in proc _start adding addrExp r28{0} - 44 to local table
TYPE ERROR: Existing type at address 0xffffffd4 is not structure or array type
in proc _start adding addrExp r28{0} - 48 to local table
TYPE ERROR: Existing type at address 0xffffffd0 is not structure or array type
in proc _start adding addrExp r28{0} - 52 to local table
TYPE ERROR: Existing type at address 0xffffffcc is not structure or array type
finding final parameters for _start
potential param r26
found new parameter r26
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
local eax has type __size32 that doesn't agree with type of define unsigned int of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local eax has type unsigned int that doesn't agree with type of define __size32 of a library, why?
local edx has type unsigned int that doesn't agree with type of define void of a library, why?
local edx has type void that doesn't agree with type of define unsigned int of a library, why?
local eax has type __size32 that doesn't agree with type of define unsigned int of a library, why?
local ecx has type void that doesn't agree with type of define unsigned int of a library, why?
local eax has type unsigned int that doesn't agree with type of define __size32 of a library, why?
local ecx has type unsigned int that doesn't agree with type of define void of a library, why?
local edx has type unsigned int that doesn't agree with type of define void of a library, why?
dest is not lib
call:  500 {*u32* eax, *v* ecx, *u32* edx, *v* esp} := CALL AreAnyAccessesGranted(
              )
              Reaching definitions: r0=r0{489},   r8=r8{489},   r24=r24{489},   r25=r25{489},   r26=r26{489},
                r27=r27{489},   r28=r28{489} - 12,   r29=r29{489},   r30=r30{489} + r24{489},   r31=r31{489},
                m[r28{0} - 16]=m[r28{0} - 16]{489},   m[r28{0} - 20]=m[r28{0} - 20]{489},
                m[r28{0} - 24]=m[r28{0} - 24]{489},   m[r28{0} - 28]=m[r28{0} - 28]{489},
                m[r28{0} - 32]=m[r28{0} - 32]{489},   m[r28{0} - 36]=m[r28{0} - 36]{489},
                m[r28{0} - 40]=m[r28{0} - 40]{489},   m[r28{0} - 44]=m[r28{0} - 44]{489},
                m[r28{0} - 48]=m[r28{0} - 48]{489},   m[r28{0} - 52]=m[r28{0} - 52]{489},
                m[r28{0} - 16]=m[r28{0} - 16]{489},   m[r28{0} - 20]=m[r28{0} - 20]{489},
                m[r28{0} - 24]=m[r28{0} - 24]{489},   m[r28{0} - 28]=m[r28{0} - 28]{489},
                m[r28{0} - 32]=m[r28{0} - 32]{489},   m[r28{0} - 36]=m[r28{0} - 36]{489},
                m[r28{0} - 40]=m[r28{0} - 40]{489},   m[r28{0} - 44]=m[r28{0} - 44]{489},
                m[r28{0} - 48]=m[r28{0} - 48]{489},   m[r28{0} - 52]=m[r28{0} - 52]{489},   <all>=<all>{489},
                tmp1=r30{489},   tmph=tmph{489},   %flags=ADDFLAGS32( r30{489}, r24{489}, r30{489} + r24{489} ),
                %ZF=ADDFLAGS32( r30{489}, r24{489}, r30{489} + r24{489} ),
                %CF=ADDFLAGS32( r30{489}, r24{489}, r30{489} + r24{489} )
              Live variables: eax in proc _start
result:    0 *u32* eax := -
dest is not lib
call:  626 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL LoadLibraryA(
                *LPCSTR* m[esp_32 - 4] := m[esp_32 - 4]
              )
              Reaching definitions: r0=r0{790},   r8=r8{791},   r24=r24{792},   r25=r25{617} + r31{799},   r26=r26{794}
                r27=r27{795},   r28=r28{796} - 8,   r29=r29{797},   r30=r30{798},   r31=r31{799},
                m[r28{0} - 16]=m[r28{0} - 16]{489},   m[r28{0} - 20]=m[r28{0} - 20]{489},
                m[r28{0} - 24]=m[r28{0} - 24]{489},   m[r28{0} - 28]=m[r28{0} - 28]{489},
                m[r28{0} - 32]=m[r28{0} - 32]{489},   m[r28{0} - 36]=m[r28{0} - 36]{489},
                m[r28{0} - 40]=m[r28{0} - 40]{489},   m[r28{0} - 44]=m[r28{0} - 44]{489},
                m[r28{0} - 48]=m[r28{0} - 48]{489},   m[r28{0} - 52]=m[r28{0} - 52]{489},
                m[r28{0} - 16]=m[r28{0} - 16]{869},   m[r28{0} - 20]=m[r28{0} - 20]{870},
                m[r28{0} - 24]=m[r28{0} - 24]{871},   m[r28{0} - 28]=m[r28{0} - 28]{872},
                m[r28{0} - 32]=m[r28{0} - 32]{873},   m[r28{0} - 36]=m[r28{0} - 36]{874},
                m[r28{0} - 40]=m[r28{0} - 40]{875},   m[r28{0} - 44]=m[r28{0} - 44]{876},
                m[r28{0} - 48]=m[r28{0} - 48]{877},   m[r28{0} - 52]=m[r28{0} - 52]{878},   <all>=<all>{489},
                tmp1=r25{617},   tmph=tmph{801},   %flags=ADDFLAGS32( r25{617}, r31{799}, r25{617} + r31{799} ),
                %ZF=ADDFLAGS32( r25{617}, r31{799}, r25{617} + r31{799} ),
                %CF=ADDFLAGS32( r25{617}, r31{799}, r25{617} + r31{799} )
              Live variables: eax,  ecx,  edx in proc _start
result:    0 *32* eax := -
result:    0 *v* ecx := -
result:    0 *v* edx := -
dest is not lib
call:  695 {*u32* eax, *u32* ecx, *u32* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* m[esp_31 - 8] := m[esp_31 - 8]
                *c** m[esp_31 - 4] := m[esp_31 - 4]
              )
              Reaching definitions: r0=truncu(32,16,r24{662}),   r8=truncu(32,8,r24{662}),   r24=r24{662},
                r25=(r24{662} + r31{815}) + 2,   r26=r26{686},   r27=r27{811},   r28=r28{641} - 12,   r29=r29{813},
                r30=r26{810} + (r30{814} * 2),   r31=r31{815},   m[r28{0} - 16]=m[r28{0} - 16]{641},
                m[r28{0} - 20]=m[r28{0} - 20]{641},   m[r28{0} - 24]=m[r28{0} - 24]{641},
                m[r28{0} - 28]=m[r28{0} - 28]{641},   m[r28{0} - 32]=m[r28{0} - 32]{641},
                m[r28{0} - 36]=m[r28{0} - 36]{641},   m[r28{0} - 40]=m[r28{0} - 40]{641},
                m[r28{0} - 44]=m[r28{0} - 44]{641},   m[r28{0} - 48]=m[r28{0} - 48]{641},
                m[r28{0} - 52]=m[r28{0} - 52]{641},   m[r28{0} - 16]=m[r28{0} - 16]{641},
                m[r28{0} - 20]=m[r28{0} - 20]{641},   m[r28{0} - 24]=m[r28{0} - 24]{641},
                m[r28{0} - 28]=m[r28{0} - 28]{641},   m[r28{0} - 32]=m[r28{0} - 32]{641},
                m[r28{0} - 36]=m[r28{0} - 36]{641},   m[r28{0} - 40]=m[r28{0} - 40]{641},
                m[r28{0} - 44]=m[r28{0} - 44]{641},   m[r28{0} - 48]=m[r28{0} - 48]{641},
                m[r28{0} - 52]=m[r28{0} - 52]{641},   <all>=<all>{641},   tmp1=r24{662},   tmph=tmph{641},
                %flags=LOGICALFLAGS32( r24{662} ),   %ZF=LOGICALFLAGS32( r24{662} ),   %CF=LOGICALFLAGS32( r24{662} )
              Live variables: eax,  ecx,  edx in proc _start
result:    0 *u32* eax := -
result:    0 *u32* ecx := -
result:    0 *u32* edx := -
dest is not lib
call:  679 {*u32* eax_5, *v* ecx, *u32* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* m[esp_31 - 8] := m[esp_31 - 8]
                *c** m[esp_31 - 4] := m[esp_31 - 4]
              )
              Reaching definitions: r0=truncu(32,16,r24{669}),   r8=truncu(32,8,r24{669}),   r24=r24{669},
                r25=r25{809},   r26=zfill(16,32,truncu(32,16,r24{662})),   r27=r27{811},   r28=r28{641} - 12,
                r29=r29{813},   r30=r26{810} + (r30{814} * 2),   r31=r31{815},   m[r28{0} - 16]=m[r28{0} - 16]{641},
                m[r28{0} - 20]=m[r28{0} - 20]{641},   m[r28{0} - 24]=m[r28{0} - 24]{641},
                m[r28{0} - 28]=m[r28{0} - 28]{641},   m[r28{0} - 32]=m[r28{0} - 32]{641},
                m[r28{0} - 36]=m[r28{0} - 36]{641},   m[r28{0} - 40]=m[r28{0} - 40]{641},
                m[r28{0} - 44]=m[r28{0} - 44]{641},   m[r28{0} - 48]=m[r28{0} - 48]{641},
                m[r28{0} - 52]=m[r28{0} - 52]{641},   m[r28{0} - 16]=m[r28{0} - 16]{641},
                m[r28{0} - 20]=m[r28{0} - 20]{641},   m[r28{0} - 24]=m[r28{0} - 24]{641},
                m[r28{0} - 28]=m[r28{0} - 28]{641},   m[r28{0} - 32]=m[r28{0} - 32]{641},
                m[r28{0} - 36]=m[r28{0} - 36]{641},   m[r28{0} - 40]=m[r28{0} - 40]{641},
                m[r28{0} - 44]=m[r28{0} - 44]{641},   m[r28{0} - 48]=m[r28{0} - 48]{641},
                m[r28{0} - 52]=m[r28{0} - 52]{641},   <all>=<all>{641},   tmp1=r24{662},   tmph=tmph{641},
                %flags=LOGICALFLAGS32( r24{662} ),   %ZF=LOGICALFLAGS32( r24{662} ),   %CF=LOGICALFLAGS32( r24{662} )
              Live variables: eax_5,  edx in proc _start
result:    0 *u32* eax_5 := -
result:    0 *u32* edx := -
dest is not lib
call:  728 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL ExitProcess(
                *UINT* m[esp - 4] := m[esp - 4]
              )
              Reaching definitions: r0=r0{722},   r8=r8{722},   r24=r24{722},   r25=r25{722},   r26=r26{722},
                r27=r27{722},   r28=r28{722} - 8,   r29=r29{722},   r30=r30{722},   r31=r31{722},
                m[r28{0} - 16]=m[r28{0} - 16]{722},   m[r28{0} - 20]=m[r28{0} - 20]{722},
                m[r28{0} - 24]=m[r28{0} - 24]{722},   m[r28{0} - 28]=m[r28{0} - 28]{722},
                m[r28{0} - 32]=m[r28{0} - 32]{722},   m[r28{0} - 36]=m[r28{0} - 36]{722},
                m[r28{0} - 40]=m[r28{0} - 40]{722},   m[r28{0} - 44]=m[r28{0} - 44]{722},
                m[r28{0} - 48]=m[r28{0} - 48]{722},   m[r28{0} - 52]=m[r28{0} - 52]{722},
                m[r28{0} - 16]=m[r28{0} - 16]{722},   m[r28{0} - 20]=m[r28{0} - 20]{722},
                m[r28{0} - 24]=m[r28{0} - 24]{722},   m[r28{0} - 28]=m[r28{0} - 28]{722},
                m[r28{0} - 32]=m[r28{0} - 32]{722},   m[r28{0} - 36]=m[r28{0} - 36]{722},
                m[r28{0} - 40]=m[r28{0} - 40]{722},   m[r28{0} - 44]=m[r28{0} - 44]{722},
                m[r28{0} - 48]=m[r28{0} - 48]{722},   m[r28{0} - 52]=m[r28{0} - 52]{722},   <all>=<all>{722},
                tmp1=tmp1{722},   tmph=tmph{722},   %flags=%flags{722},   %ZF=%ZF{722},   %CF=%CF{722}
              Live variables:  in proc _start
