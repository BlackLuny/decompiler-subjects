Unknown library function StrChrA
Unknown library function AreAllAccessesGranted
Unknown library function VirtualProtect
assgn   14 *32* %pc := m[0x40405c]
is readonly
assgn   42 *32* %pc := m[0x40404c]
is readonly
assgn   48 *32* %pc := m[0x40403c]
is readonly
assgn   75 *32* %pc := m[0x404000]
is readonly
assgn   94 *32* %pc := m[0x404014]
is readonly
assgn  215 *32* %pc := m[0x40404c]
is readonly
assgn  254 *32* %pc := m[0x40403c]
is readonly
assgn  265 *32* %pc := m[0x40403c]
is readonly
assgn  299 *32* %pc := m[0x404050]
is readonly
after removing matching assigns (%pc).
WARNING: size 0x10 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x10 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x10 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x10 meet with /*signed?*/int; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
in proc _start adding addrExp r28{0} - 20 to local table
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 32 to local table
in proc _start adding addrExp r28{0} - 20 to local table
in proc _start adding addrExp r28{0} - 24 to local table
TYPE ERROR: Existing type at address 0xffffffe8 is not structure or array type
in proc _start adding addrExp r28{0} - 28 to local table
TYPE ERROR: Existing type at address 0xffffffe4 is not structure or array type
in proc _start adding addrExp r28{0} - 32 to local table
in proc _start adding addrExp r28{0} - 32 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 52 to local table
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 52 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 52 to local table
in proc _start adding addrExp r28{0} - 56 to local table
in proc _start adding addrExp r28{0} - 60 to local table
in proc _start adding addrExp r28{0} - 64 to local table
finding final parameters for _start
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
local esp has type void * that doesn't agree with type of define void of a library, why?
local eax has type __size32 that doesn't agree with type of define HANDLE of a library, why?
local eax has type HANDLE that doesn't agree with type of define __size32 of a library, why?
local eax has type __size32 that doesn't agree with type of define /*signed?*/int of a library, why?
local eax has type /*signed?*/int that doesn't agree with type of define __size32 of a library, why?
local ecx has type void that doesn't agree with type of define unsigned int of a library, why?
local edx has type void that doesn't agree with type of define unsigned int of a library, why?
local eax has type __size32 that doesn't agree with type of define unsigned int of a library, why?
local ecx has type unsigned int that doesn't agree with type of define void of a library, why?
local edx has type unsigned int that doesn't agree with type of define union { unsigned int x1; void * x2; } of a library, why?
local eax has type unsigned int that doesn't agree with type of define __size32 of a library, why?
local ecx has type void that doesn't agree with type of define void * of a library, why?
local ecx has type void * that doesn't agree with type of define void of a library, why?
local edx has type union { unsigned int x1; void * x2; } that doesn't agree with type of define void of a library, why?
dest is not lib
call:   15 {*32* eax_1, *v* ecx, *v* edx, *v* esp} := CALL StrChrA(
              )
              Reaching definitions: r27=r27{0},   r28=r28{0} - 32,   r29=r29{0},   r30=0,   r31=r31{0},
                m[r28{0} - 20]=r30{0},   m[r28{0} - 24]=0,   m[r28{0} - 28]=0x404064,   m[r28{0} - 32]=%pc,
                tmp1=r28{0},   %flags=LOGICALFLAGS32( 0 ),   %ZF=LOGICALFLAGS32( 0 ),   %CF=LOGICALFLAGS32( 0 )
              Live variables: eax_1 in proc _start
result:    0 *32* eax_1 := -
dest is not lib
call:   43 {*HANDLE* eax, *v* ecx, *v* edx, *v* esp} := CALL LoadLibraryA(
                *LPCSTR* local0 := "advapi32.dll"
              )
              Reaching definitions: r24=r24{15},   r25=r25{15},   r26=r26{15},   r27=r27{0},   r28=r28{0} - 52,
                r29=r29{0},   r30=0,   r31=r31{0},   m[r28{0} - 20]=r30{0},   m[r28{0} - 24]=0,
                m[r28{0} - 28]=0x404064,   m[r28{0} - 32]=r27{0},   m[r28{0} - 36]=r29{0},   m[r28{0} - 40]=r31{0},
                m[r28{0} - 44]=0x40406c,   m[r28{0} - 48]=0x404074,   m[r28{0} - 52]=%pc,   tmp1=r24{15},
                %flags=LOGICALFLAGS32( r24{15} ),   %ZF=LOGICALFLAGS32( r24{15} ),   %CF=LOGICALFLAGS32( r24{15} )
              Live variables: eax in proc _start
result:    0 *HANDLE* eax := -
dest is not lib
call:   49 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local0 := eax
                *c** local1 := "AddAce"
              )
              Reaching definitions: r24=r24{43},   r25=r25{43},   r26=r26{43},   r27=r27{0},   r28=r28{0} - 52,
                r29=r29{0},   r30=0,   r31=r31{0},   m[r28{0} - 20]=r30{0},   m[r28{0} - 24]=0,
                m[r28{0} - 28]=0x404064,   m[r28{0} - 32]=r27{0},   m[r28{0} - 36]=r29{0},   m[r28{0} - 40]=r31{0},
                m[r28{0} - 44]=0x40406c,   m[r28{0} - 48]=r24{43},   m[r28{0} - 52]=%pc,   tmp1=r24{15},
                %flags=LOGICALFLAGS32( r24{15} ),   %ZF=LOGICALFLAGS32( r24{15} ),   %CF=LOGICALFLAGS32( r24{15} )
              Live variables: eax,  ecx,  edx in proc _start
result:    0 *32* eax := -
result:    0 *v* ecx := -
result:    0 *v* edx := -
dest is not lib
call:   76 {*j32* eax, *v* ecx, *v* edx, *v* esp} := CALL AreAllAccessesGranted(
              )
              Reaching definitions: r0=r0{63},   r9=r9{63},   r24=r24{63},   r25=r25{63},   r26=r26{63},
                r27=r31{63} + (r27{63} * 2),   r28=r28{63} - 12,   r29=r24{63} + 28,   r30=r30{63},   r31=r31{63},
                m[r28{0} - 20]=m[r28{0} - 20]{63},   m[r28{0} - 24]=m[r28{0} - 24]{63},
                m[r28{0} - 28]=m[r28{0} - 28]{63},   m[r28{0} - 32]=m[r28{0} - 32]{63},
                m[r28{0} - 36]=m[r28{0} - 36]{63},   m[r28{0} - 40]=m[r28{0} - 40]{63},
                m[r28{0} - 44]=m[r28{0} - 44]{63},   m[r28{0} - 48]=m[r28{0} - 48]{63},
                m[r28{0} - 52]=m[r28{0} - 52]{63},   m[r28{0} - 56]=m[r28{0} - 56]{63},
                m[r28{0} - 60]=m[r28{0} - 60]{63},   m[r28{0} - 64]=m[r28{0} - 64]{63},
                m[r28{0} - 20]=m[r28{0} - 20]{63},   m[r28{0} - 24]=m[r28{0} - 24]{63},
                m[r28{0} - 28]=m[r28{0} - 28]{63},   m[r28{0} - 32]=m[r28{0} - 32]{63},
                m[r28{0} - 36]=m[r28{0} - 36]{63},   m[r28{0} - 40]=m[r28{0} - 40]{63},
                m[r28{0} - 44]=m[r28{0} - 44]{63},   m[r28{0} - 48]=m[r28{0} - 48]{63},
                m[r28{0} - 52]=m[r28{0} - 52]{63},   m[r28{0} - 56]=m[r28{0} - 56]{63},
                m[r28{0} - 60]=m[r28{0} - 60]{63},   m[r28{0} - 64]=m[r28{0} - 64]{63},   <all>=<all>{63},
                tmp1=r24{63},   tmph=tmph{63},   %flags=ADDFLAGS32( r24{63}, 28, r24{63} + 28 ),
                %ZF=ADDFLAGS32( r24{63}, 28, r24{63} + 28 ),   %CF=ADDFLAGS32( r24{63}, 28, r24{63} + 28 )
              Live variables: eax in proc _start
result:    0 *j32* eax := -
dest is not lib
call:   95 {*32* eax, *u32* ecx, *u32* edx, *v* esp} := CALL VirtualProtect(
              )
              Reaching definitions: r0=truncu(32,16,r28{63} + 8),   r9=r9{63},   r24=r28{63} + 8,   r25=r25{76},
                r26=r26{76},   r27=r31{63} + (r27{63} * 2),   r28=r28{63} - 28,   r29=r29{312},   r30=r30{63},
                r31=r31{63},   m[r28{0} - 20]=m[r28{0} - 20]{63},   m[r28{0} - 24]=m[r28{0} - 24]{63},
                m[r28{0} - 28]=m[r28{0} - 28]{63},   m[r28{0} - 32]=m[r28{0} - 32]{63},
                m[r28{0} - 36]=m[r28{0} - 36]{63},   m[r28{0} - 40]=m[r28{0} - 40]{63},
                m[r28{0} - 44]=m[r28{0} - 44]{63},   m[r28{0} - 48]=m[r28{0} - 48]{63},
                m[r28{0} - 52]=m[r28{0} - 52]{63},   m[r28{0} - 56]=m[r28{0} - 56]{63},
                m[r28{0} - 60]=m[r28{0} - 60]{63},   m[r28{0} - 64]=m[r28{0} - 64]{63},
                m[r28{0} - 20]=m[r28{0} - 20]{63},   m[r28{0} - 24]=m[r28{0} - 24]{63},
                m[r28{0} - 28]=m[r28{0} - 28]{63},   m[r28{0} - 32]=m[r28{0} - 32]{63},
                m[r28{0} - 36]=m[r28{0} - 36]{63},   m[r28{0} - 40]=m[r28{0} - 40]{63},
                m[r28{0} - 44]=m[r28{0} - 44]{63},   m[r28{0} - 48]=m[r28{0} - 48]{63},
                m[r28{0} - 52]=m[r28{0} - 52]{63},   m[r28{0} - 56]=m[r28{0} - 56]{63},
                m[r28{0} - 60]=m[r28{0} - 60]{63},   m[r28{0} - 64]=m[r28{0} - 64]{63},   <all>=<all>{63},
                tmp1=r24{76},   tmph=tmph{63},   %flags=%flags{313},   %ZF=%ZF{314},   %CF=%CF{315}
              Live variables: ecx,  edx in proc _start
result:    0 *u32* ecx := -
result:    0 *u32* edx := -
dest is not lib
call:  216 {*u32* eax, *v* ecx, *union* edx, *v* esp} := CALL LoadLibraryA(
                *LPCSTR* m[esp_1 - 28] := m[esp_1 - 28]
              )
              Reaching definitions: r0=r0{374},   r9=r9{375},   r24=r24{376},   r25=r25{377},   r26=r26{207} + r31{383}
                r27=r27{379},   r28=(r28{63} - 24) - 8,   r29=r29{381},   r30=r30{382},   r31=r31{383},
                m[r28{0} - 20]=m[r28{0} - 20]{63},   m[r28{0} - 24]=m[r28{0} - 24]{63},
                m[r28{0} - 28]=m[r28{0} - 28]{63},   m[r28{0} - 32]=m[r28{0} - 32]{63},
                m[r28{0} - 36]=m[r28{0} - 36]{63},   m[r28{0} - 40]=m[r28{0} - 40]{63},
                m[r28{0} - 44]=m[r28{0} - 44]{63},   m[r28{0} - 48]=m[r28{0} - 48]{63},
                m[r28{0} - 52]=m[r28{0} - 52]{63},   m[r28{0} - 56]=m[r28{0} - 56]{63},
                m[r28{0} - 60]=m[r28{0} - 60]{63},   m[r28{0} - 64]=m[r28{0} - 64]{63},
                m[r28{0} - 20]=m[r28{0} - 20]{63},   m[r28{0} - 24]=m[r28{0} - 24]{63},
                m[r28{0} - 28]=m[r28{0} - 28]{63},   m[r28{0} - 32]=m[r28{0} - 32]{63},
                m[r28{0} - 36]=m[r28{0} - 36]{63},   m[r28{0} - 40]=m[r28{0} - 40]{63},
                m[r28{0} - 44]=m[r28{0} - 44]{63},   m[r28{0} - 48]=m[r28{0} - 48]{63},
                m[r28{0} - 52]=m[r28{0} - 52]{63},   m[r28{0} - 56]=m[r28{0} - 56]{63},
                m[r28{0} - 60]=m[r28{0} - 60]{63},   m[r28{0} - 64]=m[r28{0} - 64]{63},   <all>=<all>{63},
                tmp1=r26{207},   tmph=tmph{370},   %flags=ADDFLAGS32( r26{207}, r31{383}, r26{207} + r31{383} ),
                %ZF=ADDFLAGS32( r26{207}, r31{383}, r26{207} + r31{383} ),
                %CF=ADDFLAGS32( r26{207}, r31{383}, r26{207} + r31{383} )
              Live variables: eax,  edx in proc _start
result:    0 *u32* eax := -
result:    0 *union* edx := -
dest is not lib
call:  266 {*32* eax, *v** ecx, *union* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* m[esp_1 - 32] := m[esp_1 - 32]
                *c** m[esp_1 - 28] := m[esp_1 - 28]
              )
              Reaching definitions: r0=r0{389},   r9=r9{390},   r24=r24{391},   r25=r25{392},
                r26=(r24{391} + r31{398}) + 2,   r27=r27{394},   r28=(r28{63} - 24) - 12,   r29=r29{396},
                r30=r30{397},   r31=r31{398},   m[r28{0} - 20]=m[r28{0} - 20]{63},   m[r28{0} - 24]=m[r28{0} - 24]{63},
                m[r28{0} - 28]=m[r28{0} - 28]{63},   m[r28{0} - 32]=m[r28{0} - 32]{63},
                m[r28{0} - 36]=m[r28{0} - 36]{63},   m[r28{0} - 40]=m[r28{0} - 40]{63},
                m[r28{0} - 44]=m[r28{0} - 44]{63},   m[r28{0} - 48]=m[r28{0} - 48]{63},
                m[r28{0} - 52]=m[r28{0} - 52]{63},   m[r28{0} - 56]=m[r28{0} - 56]{63},
                m[r28{0} - 60]=m[r28{0} - 60]{63},   m[r28{0} - 64]=m[r28{0} - 64]{63},
                m[r28{0} - 20]=m[r28{0} - 20]{63},   m[r28{0} - 24]=m[r28{0} - 24]{63},
                m[r28{0} - 28]=m[r28{0} - 28]{63},   m[r28{0} - 32]=m[r28{0} - 32]{63},
                m[r28{0} - 36]=m[r28{0} - 36]{63},   m[r28{0} - 40]=m[r28{0} - 40]{63},
                m[r28{0} - 44]=m[r28{0} - 44]{63},   m[r28{0} - 48]=m[r28{0} - 48]{63},
                m[r28{0} - 52]=m[r28{0} - 52]{63},   m[r28{0} - 56]=m[r28{0} - 56]{63},
                m[r28{0} - 60]=m[r28{0} - 60]{63},   m[r28{0} - 64]=m[r28{0} - 64]{63},   <all>=<all>{63},
                tmp1=r24{391},   tmph=tmph{370},   %flags=LOGICALFLAGS32( r24{391} ),   %ZF=LOGICALFLAGS32( r24{391} ),
                %CF=LOGICALFLAGS32( r24{391} )
              Live variables: eax,  ecx,  edx in proc _start
result:    0 *32* eax := -
result:    0 *v** ecx := -
result:    0 *union* edx := -
dest is not lib
call:  255 {*32* eax, *v** ecx, *union* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* m[esp_1 - 32] := m[esp_1 - 32]
                *c** m[esp_1 - 28] := m[esp_1 - 28]
              )
              Reaching definitions: r0=truncu(32,16,r24{246}),   r9=r9{390},   r24=r24{246},   r25=r25{392},
                r26=r26{393},   r27=r27{394},   r28=(r28{63} - 24) - 12,   r29=r29{396},   r30=r30{397},   r31=r31{398}
                m[r28{0} - 20]=m[r28{0} - 20]{63},   m[r28{0} - 24]=m[r28{0} - 24]{63},
                m[r28{0} - 28]=m[r28{0} - 28]{63},   m[r28{0} - 32]=m[r28{0} - 32]{63},
                m[r28{0} - 36]=m[r28{0} - 36]{63},   m[r28{0} - 40]=m[r28{0} - 40]{63},
                m[r28{0} - 44]=m[r28{0} - 44]{63},   m[r28{0} - 48]=m[r28{0} - 48]{63},
                m[r28{0} - 52]=m[r28{0} - 52]{63},   m[r28{0} - 56]=m[r28{0} - 56]{63},
                m[r28{0} - 60]=m[r28{0} - 60]{63},   m[r28{0} - 64]=m[r28{0} - 64]{63},
                m[r28{0} - 20]=m[r28{0} - 20]{63},   m[r28{0} - 24]=m[r28{0} - 24]{63},
                m[r28{0} - 28]=m[r28{0} - 28]{63},   m[r28{0} - 32]=m[r28{0} - 32]{63},
                m[r28{0} - 36]=m[r28{0} - 36]{63},   m[r28{0} - 40]=m[r28{0} - 40]{63},
                m[r28{0} - 44]=m[r28{0} - 44]{63},   m[r28{0} - 48]=m[r28{0} - 48]{63},
                m[r28{0} - 52]=m[r28{0} - 52]{63},   m[r28{0} - 56]=m[r28{0} - 56]{63},
                m[r28{0} - 60]=m[r28{0} - 60]{63},   m[r28{0} - 64]=m[r28{0} - 64]{63},   <all>=<all>{63},
                tmp1=r24{391},   tmph=tmph{370},   %flags=LOGICALFLAGS32( r24{391} ),   %ZF=LOGICALFLAGS32( r24{391} ),
                %CF=LOGICALFLAGS32( r24{391} )
              Live variables: eax,  ecx,  edx in proc _start
result:    0 *32* eax := -
result:    0 *v** ecx := -
result:    0 *union* edx := -
dest is not lib
call:  300 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL ExitProcess(
                *UINT* m[esp - 4] := m[esp - 4]
              )
              Reaching definitions: r0=r0{294},   r9=r9{294},   r24=r24{294},   r25=r25{294},   r26=r26{294},
                r27=r27{294},   r28=r28{294} - 8,   r29=r29{294},   r30=r30{294},   r31=r31{294},
                m[r28{0} - 20]=m[r28{0} - 20]{294},   m[r28{0} - 24]=m[r28{0} - 24]{294},
                m[r28{0} - 28]=m[r28{0} - 28]{294},   m[r28{0} - 32]=m[r28{0} - 32]{294},
                m[r28{0} - 36]=m[r28{0} - 36]{294},   m[r28{0} - 40]=m[r28{0} - 40]{294},
                m[r28{0} - 44]=m[r28{0} - 44]{294},   m[r28{0} - 48]=m[r28{0} - 48]{294},
                m[r28{0} - 52]=m[r28{0} - 52]{294},   m[r28{0} - 56]=m[r28{0} - 56]{294},
                m[r28{0} - 60]=m[r28{0} - 60]{294},   m[r28{0} - 64]=m[r28{0} - 64]{294},
                m[r28{0} - 20]=m[r28{0} - 20]{294},   m[r28{0} - 24]=m[r28{0} - 24]{294},
                m[r28{0} - 28]=m[r28{0} - 28]{294},   m[r28{0} - 32]=m[r28{0} - 32]{294},
                m[r28{0} - 36]=m[r28{0} - 36]{294},   m[r28{0} - 40]=m[r28{0} - 40]{294},
                m[r28{0} - 44]=m[r28{0} - 44]{294},   m[r28{0} - 48]=m[r28{0} - 48]{294},
                m[r28{0} - 52]=m[r28{0} - 52]{294},   m[r28{0} - 56]=m[r28{0} - 56]{294},
                m[r28{0} - 60]=m[r28{0} - 60]{294},   m[r28{0} - 64]=m[r28{0} - 64]{294},   <all>=<all>{294},
                tmp1=tmp1{294},   tmph=tmph{294},   %flags=%flags{294},   %ZF=%ZF{294},   %CF=%CF{294}
              Live variables:  in proc _start
