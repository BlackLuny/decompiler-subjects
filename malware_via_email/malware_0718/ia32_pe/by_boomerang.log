Unknown library function GetModuleHandleA
Unknown library function RegOpenKeyA
COMPUTED JUMP at 0x40127a, pDest = m[0x406358]
Unknown library function UnmapViewOfFile
Unknown library function MapViewOfFileEx
COMPUTED JUMP at 0x4017ac, pDest = r26
Unknown library function lstrcpyA
assgn   18 *32* %pc := m[0x401008]
is readonly
after removing matching assigns (%pc).
in proc proc1 adding addrExp r28{0} - 4 to local table
in proc proc1 adding addrExp r28{0} - 8 to local table
in proc proc1 adding addrExp r28{0} - 8 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 20 to local table
in proc proc1 adding addrExp r28{0} - 24 to local table
in proc proc1 adding addrExp r28{0} - 28 to local table
in proc proc1 adding addrExp r28{0} - 8 to local table
finding final parameters for proc1
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
assgn   16 *32* %pc := m[0x401018]
is readonly
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
in proc proc8 adding addrExp r28{0} - 12 to local table
in proc proc8 adding addrExp r28{0} - 20 to local table
in proc proc8 adding addrExp r28{0} - 4 to local table
in proc proc8 adding addrExp r28{0} - 8 to local table
in proc proc8 adding addrExp r28{0} - 16 to local table
in proc proc8 adding addrExp r28{0} - 136 to local table
in proc proc8 adding addrExp r28{0} - 140 to local table
in proc proc8 adding addrExp r28{0} - 144 to local table
in proc proc8 adding addrExp r28{0} - 8 to local table
in proc proc8 adding addrExp r28{0} - 12 to local table
in proc proc8 adding addrExp r28{0} - 16 to local table
in proc proc8 adding addrExp r28{0} - 20 to local table
in proc proc8 adding addrExp r28{0} - 12 to local table
in proc proc8 adding addrExp r28{0} - 20 to local table
in proc proc8 adding addrExp r28{0} - 8 to local table
in proc proc8 adding addrExp r28{0} - 16 to local table
finding final parameters for proc8
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
assgn   20 *32* %pc := m[0x401018]
is readonly
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc2 ###
in proc proc2 adding addrExp r28{0} - 5 to local table
in proc proc2 adding addrExp r28{0} - 28 to local table
in proc proc2 adding addrExp r28{0} - 164 to local table
in proc proc2 adding addrExp r28{0} - 168 to local table
in proc proc2 adding addrExp r28{0} - 16 to local table
in proc proc2 adding addrExp r28{0} - 32 to local table
in proc proc2 adding addrExp r28{0} - 4 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 17 to local table
in proc proc2 adding addrExp r28{0} - 152 to local table
in proc proc2 adding addrExp r28{0} - 156 to local table
in proc proc2 adding addrExp r28{0} - 160 to local table
in proc proc2 adding addrExp r28{0} - 24 to local table
in proc proc2 adding addrExp r28{0} - 5 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 24 to local table
in proc proc2 adding addrExp r28{0} - 28 to local table
in proc proc2 adding addrExp r28{0} - 160 to local table
in proc proc2 adding addrExp r28{0} - 164 to local table
in proc proc2 adding addrExp r28{0} - 168 to local table
in proc proc2 adding addrExp r28{0} - 5 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 24 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 160 to local table
in proc proc2 adding addrExp r28{0} - 164 to local table
in proc proc2 adding addrExp r28{0} - 168 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 160 to local table
in proc proc2 adding addrExp r28{0} - 164 to local table
in proc proc2 adding addrExp r28{0} - 168 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 28 to local table
in proc proc2 adding addrExp r28{0} - 28 to local table
in proc proc2 adding addrExp r28{0} - 24 to local table
in proc proc2 adding addrExp r28{0} - 28 to local table
in proc proc2 adding addrExp r28{0} - 24 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 24 to local table
in proc proc2 adding addrExp r28{0} - 28 to local table
in proc proc2 adding addrExp r28{0} - 160 to local table
in proc proc2 adding addrExp r28{0} - 164 to local table
in proc proc2 adding addrExp r28{0} - 168 to local table
in proc proc2 adding addrExp r28{0} - 24 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 24 to local table
in proc proc2 adding addrExp r28{0} - 28 to local table
in proc proc2 adding addrExp r28{0} - 160 to local table
in proc proc2 adding addrExp r28{0} - 164 to local table
in proc proc2 adding addrExp r28{0} - 168 to local table
finding final parameters for proc2
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} - 28]
found new parameter m[r28{0} - 28]
potential param m[r28{0} - 164]
found new parameter m[r28{0} - 164]
potential param m[r28{0} - 168]
found new parameter m[r28{0} - 168]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} - 16]
found new parameter m[r28{0} - 16]
potential param m[r28{0} - 32]
found new parameter m[r28{0} - 32]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
assgn    6 *32* r24 := m[0x40633c]
assgn   11 *32* r25 := m[0x40633c]
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc5 ###
in proc proc5 adding addrExp r28{0} - 4 to local table
finding final parameters for proc5
potential param r28
found new parameter r28
potential param r24
found new parameter r24
potential param r26
found new parameter r26
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
assgn   23 *32* %pc := m[0x401024]
is readonly
assgn   29 *32* %pc := m[0x401010]
is readonly
assgn   47 *32* tmp1 := m[0x406334]
assgn   59 *32* r26 := m[0x406334]
assgn   69 *32* r24 := m[0x406334]
assgn  123 *32* r26 := m[0x406334]
assgn  142 *32* r30 := m[0x406334]
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc3 ###
in proc proc3 adding addrExp r28{0} - 4 to local table
in proc proc3 adding addrExp r28{0} - 40 to local table
in proc proc3 adding addrExp r28{0} - 36 to local table
in proc proc3 adding addrExp r28{0} - 20 to local table
in proc proc3 adding addrExp r28{0} - 44 to local table
in proc proc3 adding addrExp r28{0} - 48 to local table
in proc proc3 adding addrExp r28{0} - 52 to local table
in proc proc3 adding addrExp r28{0} - 52 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffcc existing type unsigned int but added type HANDLE
in proc proc3 adding addrExp r28{0} - 56 to local table
in proc proc3 adding addrExp r28{0} - 24 to local table
in proc proc3 adding addrExp r28{0} - 48 to local table
in proc proc3 adding addrExp r28{0} - 52 to local table
in proc proc3 adding addrExp r28{0} - 56 to local table
in proc proc3 adding addrExp r28{0} - 60 to local table
in proc proc3 adding addrExp r28{0} - 64 to local table
finding final parameters for proc3
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
assgn   14 *32* %pc := m[0x401010]
is readonly
after removing matching assigns (%pc).
in proc proc6 adding addrExp r28{0} - 4 to local table
in proc proc6 adding addrExp r28{0} - 8 to local table
in proc proc6 adding addrExp r28{0} - 12 to local table
in proc proc6 adding addrExp r28{0} - 16 to local table
in proc proc6 adding addrExp r28{0} - 20 to local table
in proc proc6 adding addrExp r28{0} - 8 to local table
finding final parameters for proc6
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
assgn    5 *32* r26 := m[0x406350]
after removing matching assigns (%pc).
in proc proc7 adding addrExp r28{0} - 4 to local table
finding final parameters for proc7
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
assgn   11 *32* %pc := m[0x401024]
is readonly
assgn   21 *32* %pc := m[0x401010]
is readonly
assgn   31 *32* %pc := m[0x401010]
is readonly
assgn   41 *32* %pc := m[0x401010]
is readonly
assgn   51 *32* %pc := m[0x401010]
is readonly
assgn   61 *32* %pc := m[0x401010]
is readonly
assgn   71 *32* %pc := m[0x401010]
is readonly
assgn  366 *32* tmp1 := m[0x406334]
assgn  375 *32* %pc := m[0x401014]
is readonly
assgn  390 *32* %pc := m[0x40101c]
is readonly
assgn  415 *32* %pc := m[0x40100c]
is readonly
assgn  418 *32* tmp1 := m[0x406334]
assgn  435 *32* %pc := m[0x401008]
is readonly
assgn  443 *32* %pc := m[0x401020]
is readonly
assgn  452 *32* r24 := m[0x406334]
assgn  462 *32* r25 := m[0x406334]
assgn  473 *32* r24 := m[0x406334]
assgn  479 *32* r26 := m[0x406358]
after removing matching assigns (%pc).
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc4 ###
in proc proc4 adding addrExp r28{0} - 4 to local table
in proc proc4 adding addrExp r28{0} - 96 to local table
in proc proc4 adding addrExp r28{0} - 100 to local table
in proc proc4 adding addrExp r28{0} - 84 to local table
in proc proc4 adding addrExp r28{0} - 100 to local table
in proc proc4 adding addrExp r28{0} - 104 to local table
in proc proc4 adding addrExp r28{0} - 108 to local table
in proc proc4 adding addrExp r28{0} - 24 to local table
in proc proc4 adding addrExp r28{0} - 100 to local table
in proc proc4 adding addrExp r28{0} - 104 to local table
in proc proc4 adding addrExp r28{0} - 108 to local table
in proc proc4 adding addrExp r28{0} - 64 to local table
in proc proc4 adding addrExp r28{0} - 100 to local table
in proc proc4 adding addrExp r28{0} - 104 to local table
in proc proc4 adding addrExp r28{0} - 108 to local table
in proc proc4 adding addrExp r28{0} - 8 to local table
in proc proc4 adding addrExp r28{0} - 100 to local table
in proc proc4 adding addrExp r28{0} - 104 to local table
in proc proc4 adding addrExp r28{0} - 108 to local table
in proc proc4 adding addrExp r28{0} - 72 to local table
in proc proc4 adding addrExp r28{0} - 100 to local table
in proc proc4 adding addrExp r28{0} - 104 to local table
in proc proc4 adding addrExp r28{0} - 108 to local table
in proc proc4 adding addrExp r28{0} - 40 to local table
in proc proc4 adding addrExp r28{0} - 100 to local table
in proc proc4 adding addrExp r28{0} - 104 to local table
in proc proc4 adding addrExp r28{0} - 108 to local table
in proc proc4 adding addrExp r28{0} - 20 to local table
in proc proc4 adding addrExp r28{0} - 88 to local table
in proc proc4 adding addrExp r28{0} - 68 to local table
in proc proc4 adding addrExp r28{0} - 48 to local table
in proc proc4 adding addrExp r28{0} - 100 to local table
in proc proc4 adding addrExp r28{0} - 104 to local table
in proc proc4 adding addrExp r28{0} - 108 to local table
in proc proc4 adding addrExp r28{0} - 112 to local table
in proc proc4 adding addrExp r28{0} - 116 to local table
in proc proc4 adding addrExp r28{0} - 4 to local table
in proc proc4 adding addrExp r28{0} - 8 to local table
TYPE ERROR: Existing type at address 0xfffffff8 is not structure or array type
in proc proc4 adding addrExp r28{0} - 20 to local table
TYPE ERROR: Existing type at address 0xffffffec is not structure or array type
in proc proc4 adding addrExp r28{0} - 24 to local table
TYPE ERROR: Existing type at address 0xffffffe8 is not structure or array type
in proc proc4 adding addrExp r28{0} - 40 to local table
TYPE ERROR: Existing type at address 0xffffffd8 is not structure or array type
in proc proc4 adding addrExp r28{0} - 48 to local table
TYPE ERROR: Existing type at address 0xffffffd0 is not structure or array type
in proc proc4 adding addrExp r28{0} - 64 to local table
TYPE ERROR: Existing type at address 0xffffffc0 is not structure or array type
in proc proc4 adding addrExp r28{0} - 68 to local table
TYPE ERROR: Existing type at address 0xffffffbc is not structure or array type
in proc proc4 adding addrExp r28{0} - 72 to local table
TYPE ERROR: Existing type at address 0xffffffb8 is not structure or array type
in proc proc4 adding addrExp r28{0} - 84 to local table
TYPE ERROR: Existing type at address 0xffffffac is not structure or array type
in proc proc4 adding addrExp r28{0} - 88 to local table
TYPE ERROR: Existing type at address 0xffffffa8 is not structure or array type
in proc proc4 adding addrExp r28{0} - 96 to local table
TYPE ERROR: Existing type at address 0xffffffa0 is not structure or array type
in proc proc4 adding addrExp r28{0} - 100 to local table
TYPE ERROR: Existing type at address 0xffffff9c is not structure or array type
in proc proc4 adding addrExp r28{0} - 104 to local table
TYPE ERROR: Existing type at address 0xffffff98 is not structure or array type
in proc proc4 adding addrExp r28{0} - 108 to local table
TYPE ERROR: Existing type at address 0xffffff94 is not structure or array type
in proc proc4 adding addrExp r28{0} - 112 to local table
TYPE ERROR: Existing type at address 0xffffff90 is not structure or array type
in proc proc4 adding addrExp r28{0} - 116 to local table
TYPE ERROR: Existing type at address 0xffffff8c is not structure or array type
finding final parameters for proc4
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
assgn   45 *32* %pc := m[0x401024]
is readonly
assgn   57 *32* %pc := m[0x401000]
is readonly
assgn  130 *32* r24 := m[0x40634c]
assgn  176 *32* r25 := m[0x40634c]
assgn  183 *32* r31 := m[0x406340]
assgn  184 *32* r27 := m[0x406348]
assgn  185 *32* r28 := m[0x406344]
assgn  186 *32* r30 := m[0x406338]
after removing matching assigns (%pc).
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 252 to local table
in proc _start adding addrExp r28{0} - 248 to local table
in proc _start adding addrExp r28{0} - 116 to local table
in proc _start adding addrExp r28{0} - 112 to local table
in proc _start adding addrExp r28{0} - 100 to local table
in proc _start adding addrExp r28{0} - 4 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 52 to local table
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 56 to local table
in proc _start adding addrExp r28{0} - 60 to local table
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 60 to local table
in proc _start adding addrExp r28{0} - 64 to local table
in proc _start adding addrExp r28{0} - 68 to local table
in proc _start adding addrExp r28{0} - 72 to local table
in proc _start adding addrExp r28{0} - 20 to local table
in proc _start adding addrExp r28{0} - 32 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 72 to local table
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 72 to local table
in proc _start adding addrExp r28{0} - 76 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffb4 existing type unsigned int but added type void *
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 84 to local table
WARNING: size 0x20 meet with unsigned char; allowing temporarily
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 72 to local table
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 80 to local table
finding final parameters for _start
potential param r28
found new parameter r28
potential param r27
found new parameter r27
potential param r30
found new parameter r30
potential param r31
found new parameter r31
potential param m[r28{0} - 252]
found new parameter m[r28{0} - 252]
potential param m[r28{0} - 248]
found new parameter m[r28{0} - 248]
potential param m[r28{0} - 116]
found new parameter m[r28{0} - 116]
potential param m[r28{0} - 112]
found new parameter m[r28{0} - 112]
potential param m[r28{0} - 100]
found new parameter m[r28{0} - 100]
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
in proc _start adding addrExp r28{0} - 252 to local table
in proc _start adding addrExp r28{0} - 248 to local table
in proc _start adding addrExp r28{0} - 116 to local table
in proc _start adding addrExp r28{0} - 112 to local table
in proc _start adding addrExp r28{0} - 100 to local table
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 40 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc2 ###
in proc proc2 adding addrExp r28{0} - 28 to local table
in proc proc2 adding addrExp r28{0} - 164 to local table
in proc proc2 adding addrExp r28{0} - 168 to local table
in proc proc2 adding addrExp r28{0} - 16 to local table
in proc proc2 adding addrExp r28{0} - 32 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 160 to local table
in proc proc2 adding addrExp r28{0} - 24 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 24 to local table
in proc proc2 adding addrExp r28{0} - 28 to local table
in proc proc2 adding addrExp r28{0} - 160 to local table
in proc proc2 adding addrExp r28{0} - 164 to local table
in proc proc2 adding addrExp r28{0} - 168 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 24 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 160 to local table
in proc proc2 adding addrExp r28{0} - 164 to local table
in proc proc2 adding addrExp r28{0} - 168 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 28 to local table
in proc proc2 adding addrExp r28{0} - 28 to local table
in proc proc2 adding addrExp r28{0} - 24 to local table
in proc proc2 adding addrExp r28{0} - 28 to local table
in proc proc2 adding addrExp r28{0} - 24 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 24 to local table
in proc proc2 adding addrExp r28{0} - 28 to local table
in proc proc2 adding addrExp r28{0} - 160 to local table
in proc proc2 adding addrExp r28{0} - 164 to local table
in proc proc2 adding addrExp r28{0} - 168 to local table
in proc proc2 adding addrExp r28{0} - 24 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 24 to local table
in proc proc2 adding addrExp r28{0} - 28 to local table
in proc proc2 adding addrExp r28{0} - 160 to local table
in proc proc2 adding addrExp r28{0} - 164 to local table
in proc proc2 adding addrExp r28{0} - 168 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc3 ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc4 ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc5 ###
in proc proc8 adding addrExp r28{0} - 8 to local table
in proc proc8 adding addrExp r28{0} - 16 to local table
in proc proc8 adding addrExp r28{0} - 8 to local table
in proc proc8 adding addrExp r28{0} - 16 to local table
in proc proc8 adding addrExp r28{0} - 20 to local table
in proc proc8 adding addrExp r28{0} - 8 to local table
in proc proc8 adding addrExp r28{0} - 16 to local table
finding final parameters for proc1
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for _start
potential param r28
found new parameter r28
potential param r27
found new parameter r27
potential param r30
found new parameter r30
potential param r31
found new parameter r31
potential param m[r28{0} - 252]
found new parameter m[r28{0} - 252]
potential param m[r28{0} - 248]
found new parameter m[r28{0} - 248]
potential param m[r28{0} - 116]
found new parameter m[r28{0} - 116]
potential param m[r28{0} - 112]
found new parameter m[r28{0} - 112]
potential param m[r28{0} - 100]
found new parameter m[r28{0} - 100]
finding final parameters for proc2
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} - 28]
found new parameter m[r28{0} - 28]
potential param m[r28{0} - 164]
found new parameter m[r28{0} - 164]
potential param m[r28{0} - 168]
found new parameter m[r28{0} - 168]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} - 16]
found new parameter m[r28{0} - 16]
potential param m[r28{0} - 32]
found new parameter m[r28{0} - 32]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
finding final parameters for _start
potential param r28
found new parameter r28
potential param r27
found new parameter r27
potential param r30
found new parameter r30
potential param r31
found new parameter r31
potential param m[r28{0} - 252]
found new parameter m[r28{0} - 252]
potential param m[r28{0} - 248]
found new parameter m[r28{0} - 248]
potential param m[r28{0} - 116]
found new parameter m[r28{0} - 116]
potential param m[r28{0} - 112]
found new parameter m[r28{0} - 112]
potential param m[r28{0} - 100]
found new parameter m[r28{0} - 100]
finding final parameters for proc3
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
finding final parameters for _start
potential param r28
found new parameter r28
potential param r27
found new parameter r27
potential param r30
found new parameter r30
potential param r31
found new parameter r31
potential param m[r28{0} - 252]
found new parameter m[r28{0} - 252]
potential param m[r28{0} - 248]
found new parameter m[r28{0} - 248]
potential param m[r28{0} - 116]
found new parameter m[r28{0} - 116]
potential param m[r28{0} - 112]
found new parameter m[r28{0} - 112]
potential param m[r28{0} - 100]
found new parameter m[r28{0} - 100]
finding final parameters for proc4
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for _start
potential param r28
found new parameter r28
potential param r27
found new parameter r27
potential param r30
found new parameter r30
potential param r31
found new parameter r31
potential param m[r28{0} - 252]
found new parameter m[r28{0} - 252]
potential param m[r28{0} - 248]
found new parameter m[r28{0} - 248]
potential param m[r28{0} - 116]
found new parameter m[r28{0} - 116]
potential param m[r28{0} - 112]
found new parameter m[r28{0} - 112]
potential param m[r28{0} - 100]
found new parameter m[r28{0} - 100]
finding final parameters for proc5
potential param r28
found new parameter r28
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
finding final parameters for proc3
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
finding final parameters for proc4
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for proc6
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for proc4
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for proc7
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for proc4
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for proc8
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for proc2
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} - 28]
found new parameter m[r28{0} - 28]
potential param m[r28{0} - 164]
found new parameter m[r28{0} - 164]
potential param m[r28{0} - 168]
found new parameter m[r28{0} - 168]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} - 16]
found new parameter m[r28{0} - 16]
potential param m[r28{0} - 32]
found new parameter m[r28{0} - 32]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
local ecx has type DWORD that doesn't agree with type of define void of a library, why?
local edx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local esp has type __size32 that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local ecx has type __size32 that doesn't agree with type of define void of a library, why?
local edx has type __size32 that doesn't agree with type of define void of a library, why?
local esp has type __size32 that doesn't agree with type of define void of a library, why?
local eax has type HANDLE that doesn't agree with type of define __size32 of a library, why?
local edx has type void that doesn't agree with type of define __size32 of a library, why?
local ecx has type unsigned int that doesn't agree with type of define void of a library, why?
local edx has type __size32 that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local eax has type HANDLE that doesn't agree with type of define __size32 of a library, why?
local ecx has type void that doesn't agree with type of define __size32 of a library, why?
local edx has type void that doesn't agree with type of define __size32 of a library, why?
local esp has type void that doesn't agree with type of define void * of a library, why?
local ecx has type __size32 that doesn't agree with type of define void of a library, why?
local edx has type __size32 that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local esp has type __size32 that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
found seq with more than one outedge!
taken branch is first out edge
found seq with more than one outedge!
taken branch is first out edge
dest is not lib
call:   46 {*32* eax_2, *v* ecx, *v* edx, *v* esp} := CALL GetModuleHandleA(
              )
              Reaching definitions: r24=0,   r25=r25{195},   r26=r26{200},   r27=r27{0},   r28=r28{0} - 60,
                r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 24]=m[r28{0} - 24]{229},   m[r28{0} - 28]=m[r28{0} - 28]{230},
                m[r28{0} - 40]=m[r28{0} - 40]{0},   m[r28{0} - 44]=r27{0},   m[r28{0} - 48]=r30{0},
                m[r28{0} - 52]=r31{0},   m[r28{0} - 56]=0,   m[r28{0} - 60]=%pc,   m[r28{0} - 100]=m[r28{0} - 100]{0},
                m[r28{0} - 112]=m[r28{0} - 112]{0},   m[r28{0} - 116]=m[r28{0} - 116]{0},
                m[r28{0} - 248]=m[r28{0} - 248]{0},   m[r28{0} - 252]=m[r28{0} - 252]{0},
                tmp1=m[r28{0} - 28]{230} - 1,   %flags=SUBFLAGS32( m[(r28{0} - 4) - 24], 1, m[r28{0} - 28]{230} - 1 ),
                %ZF=(m[r28{0} - 28]{230} - 1) = 0,   %CF=m[(r28{0} - 4) - 24] <u 1
              Live variables: eax_2 in proc _start
result:    0 *32* eax_2 := -
dest is not lib
call:   58 {*u32* eax, *v* ecx, *v* edx, *v* esp} := CALL RegOpenKeyA(
              )
              Reaching definitions: r24=r28{0} - 12,   r25=r25{46},   r26=r26{46},   r27=r27{0},   r28=r28{0} - 72,
                r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 16]=r24{46},
                m[r28{0} - 24]=m[r28{0} - 24]{229},   m[r28{0} - 28]=m[r28{0} - 28]{230},
                m[r28{0} - 40]=m[r28{0} - 40]{0},   m[r28{0} - 44]=r27{0},   m[r28{0} - 48]=r30{0},
                m[r28{0} - 52]=r31{0},   m[r28{0} - 56]=0,   m[r28{0} - 60]=r28{0} - 12,   m[r28{0} - 64]=0x406280,
                m[r28{0} - 68]=0x80000000,   m[r28{0} - 72]=%pc,   m[r28{0} - 100]=m[r28{0} - 100]{0},
                m[r28{0} - 112]=m[r28{0} - 112]{0},   m[r28{0} - 116]=m[r28{0} - 116]{0},
                m[r28{0} - 248]=m[r28{0} - 248]{0},   m[r28{0} - 252]=m[r28{0} - 252]{0},
                tmp1=m[r28{0} - 28]{230} - 1,   %flags=SUBFLAGS32( m[r28{0} - 28], 1, m[r28{0} - 28]{230} - 1 ),
                %ZF=(m[r28{0} - 28]{230} - 1) = 0,   %CF=m[r28{0} - 28] <u 1
              Live variables: eax in proc _start
result:    0 *u32* eax := -
found seq with more than one outedge!
taken branch is first out edge
found seq with more than one outedge!
taken branch is first out edge
dest is not lib
call:  122 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL proc1(
                *DWORD* local4 := global64
              )
              Reaching definitions: r24=m[r28{0} - 8]{231},   r25=global64,   r26=r26{211},   r27=r27{0},
                r28=r28{0} - 76,   r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 8]{231},   m[r28{0} - 16]=r24{46},   m[r28{0} - 20]=0x402001,
                m[r28{0} - 24]=m[r28{0} - 24]{229},   m[r28{0} - 28]=m[r28{0} - 28]{230},   m[r28{0} - 32]=global63,
                m[r28{0} - 36]=global64,   m[r28{0} - 40]=m[r28{0} - 40]{232},   m[r28{0} - 44]=r27{0},
                m[r28{0} - 48]=r30{0},   m[r28{0} - 52]=r31{0},   m[r28{0} - 56]=0,   m[r28{0} - 60]=r28{0} - 12,
                m[r28{0} - 64]=0x406280,   m[r28{0} - 68]=0x80000000,   m[r28{0} - 72]=global64,   m[r28{0} - 76]=%pc,
                m[r28{0} - 100]=m[r28{0} - 100]{0},   m[r28{0} - 112]=m[r28{0} - 112]{0},
                m[r28{0} - 116]=m[r28{0} - 116]{0},   m[r28{0} - 248]=m[r28{0} - 248]{0},
                m[r28{0} - 252]=m[r28{0} - 252]{0},   tmp1=tmp1{80},
                %flags=SUBFLAGS32( m[r28{0} - 8]{231}, m[r28{0} - 32], tmp1{80} ),   %ZF=tmp1{80} = 0,
                %CF=m[r28{0} - 8]{231} <u m[r28{0} - 32]
              Live variables: eax in proc _start
result:    0 *32* eax := -
dest is not lib
call:  142 {*32* eax, *8* r9, *8* r10, *v* ecx, *32* edx, *v* esp} := CALL proc2(
                *u32* local5 := param1
                *j32* local6 := param2
                *u32* local7 := param3
                *u32* local8 := param4
                *u32* local9 := param5
                *u8** local10 := 0x402009
                *v** local11 := eax_1
                *u32* local4 := global63
              )
              Reaching definitions: r24=r24{130},   r25=0x402001 + 8,   r26=global63,   r27=r27{0},   r28=r28{0} - 84,
                r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{231},
                m[r28{0} - 16]=r24{46},   m[r28{0} - 20]=0x402001,   m[r28{0} - 24]=m[r28{0} - 24]{229},
                m[r28{0} - 28]=m[r28{0} - 28]{230},   m[r28{0} - 32]=global63,   m[r28{0} - 36]=global64,
                m[r28{0} - 40]=m[r28{0} - 40]{232},   m[r28{0} - 44]=r27{0},   m[r28{0} - 48]=r30{0},
                m[r28{0} - 52]=r31{0},   m[r28{0} - 56]=0,   m[r28{0} - 60]=r28{0} - 12,   m[r28{0} - 64]=0x406280,
                m[r28{0} - 68]=0x80000000,   m[r28{0} - 72]=global63,   m[r28{0} - 76]=r24{130},
                m[r28{0} - 80]=0x402009,   m[r28{0} - 84]=%pc,   m[r28{0} - 100]=m[r28{0} - 100]{0},
                m[r28{0} - 112]=m[r28{0} - 112]{0},   m[r28{0} - 116]=m[r28{0} - 116]{0},
                m[r28{0} - 248]=m[r28{0} - 248]{0},   m[r28{0} - 252]=m[r28{0} - 252]{0},   tmp1=0x402001,
                %flags=ADDFLAGS32( 0x402001, 8, 0x402001 + 8 ),   %ZF=ADDFLAGS32( 0x402001, 8, 0x402001 + 8 ),
                %CF=ADDFLAGS32( 0x402001, 8, 0x402001 + 8 )
              Live variables:  in proc _start
dest is not lib
call:  172 {*32* eax, *32* r30, *8* r9, *32* ecx, *32* edx, *u32** esp, *32* r29} := CALL proc3(
                *32* local4 := eax_2
              )
              Reaching definitions: r9=r9{142},   r10=r10{142},   r24=0x401253 - r24{46},   r25=0x401253,   r26=r24{46}
                r27=r27{0},   r28=(r28{0} - 84) + 4,   r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=0x401253,   m[r28{0} - 16]=r24{46},   m[r28{0} - 20]=0x402001,
                m[r28{0} - 24]=m[r28{0} - 24]{229},   m[r28{0} - 28]=m[r28{0} - 28]{230},   m[r28{0} - 32]=global63,
                m[r28{0} - 36]=global64,   m[r28{0} - 40]=m[r28{0} - 40]{232},   m[r28{0} - 44]=r27{0},
                m[r28{0} - 48]=r30{0},   m[r28{0} - 52]=r31{0},   m[r28{0} - 56]=0,   m[r28{0} - 60]=r28{0} - 12,
                m[r28{0} - 64]=0x406280,   m[r28{0} - 68]=0x80000000,   m[r28{0} - 72]=r24{46},
                m[r28{0} - 76]=0x401253 - r24{46},   m[r28{0} - 80]=%pc,   m[r28{0} - 84]=%pc,
                m[r28{0} - 100]=m[r28{0} - 100]{0},   m[r28{0} - 112]=m[r28{0} - 112]{0},
                m[r28{0} - 116]=m[r28{0} - 116]{0},   m[r28{0} - 248]=m[r28{0} - 248]{0},
                m[r28{0} - 252]=m[r28{0} - 252]{0},   tmp1=0x401253,
                %flags=SUBFLAGS32( 0x401253, m[(r28{0} - 4) - 12], 0x401253 - r24{46} ),   %ZF=(0x401253 - r24{46}) = 0
                %CF=0x401253 <u m[(r28{0} - 4) - 12]
              Live variables: esp in proc _start
result:    0 *u32** esp := -
dest is not lib
call:  182 {*v* eax, *8* r9, *v* ecx, *v* edx, *v* esp, *32* r29} := CALL proc4(
                *32* m[esp + 4] := m[esp + 4]
              )
              Reaching definitions: r9=r9{172},   r10=r10{142},   r24=r24{172},   r25=global72,   r26=r26{172},
                r27=r27{0},   r28=r28{172},   r29=r29{172},   r30=r30{172},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=0x401253,   m[r28{0} - 16]=r24{46},   m[r28{0} - 20]=0x402001,
                m[r28{0} - 24]=m[r28{0} - 24]{229},   m[r28{0} - 28]=m[r28{0} - 28]{230},   m[r28{0} - 32]=global63,
                m[r28{0} - 36]=global64,   m[r28{0} - 40]=m[r28{0} - 40]{232},   m[r28{0} - 44]=r27{0},
                m[r28{0} - 48]=r30{0},   m[r28{0} - 52]=r31{0},   m[r28{0} - 56]=0,   m[r28{0} - 60]=r28{0} - 12,
                m[r28{0} - 64]=0x406280,   m[r28{0} - 68]=0x80000000,   m[r28{0} - 72]=r24{46},
                m[r28{0} - 76]=0x401253 - r24{46},   m[r28{0} - 80]=%pc,   m[r28{0} - 84]=%pc,
                m[r28{0} - 100]=m[r28{0} - 100]{0},   m[r28{0} - 112]=m[r28{0} - 112]{0},
                m[r28{0} - 116]=m[r28{0} - 116]{0},   m[r28{0} - 248]=m[r28{0} - 248]{0},
                m[r28{0} - 252]=m[r28{0} - 252]{0},   tmp1=r28{172},   %flags=ADDFLAGS32( r28{172}, 8, r28{172} + 8 ),
                %ZF=ADDFLAGS32( r28{172}, 8, r28{172} + 8 ),   %CF=ADDFLAGS32( r28{172}, 8, r28{172} + 8 )
              Live variables:  in proc _start
found seq with more than one outedge!
taken branch is first out edge
dest is not lib
call:   19 {*32* eax, *32* r25, *32* r26} := CALL VirtualAlloc(
                *LPVOID* local0 := 0
                *DWORD* local1 := param1
                *DWORD* local2 := 0x3000
                *DWORD* local3 := 4
              )
              Reaching definitions: r24=m[r28{0} + 4]{0},   r25=r25{0},   r28=r28{0} - 28,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=1,   m[r28{0} - 12]=4,
                m[r28{0} - 16]=0x3000,   m[r28{0} - 20]=m[r28{0} + 4]{0},   m[r28{0} - 24]=0,   m[r28{0} - 28]=%pc
              Live variables: eax in proc proc1
result:    0 *32* eax := -
dest is not lib
call:   21 {*u32* eax_1, *j32* edx_1, *v* esp} := CALL lstrcpyA(
              )
              Reaching definitions: r9=r9{9},   r10=truncu(32,8,r28{0} - 148),   r24=m[r28{0} + 4]{0},
                r25=(r25{0}@31:8) | zfill(8,32,r9{9}),   r26=r28{0} - 148,   r28=r28{0} - 160,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 5]=m[r28{0} - 5]{0},   m[r28{0} - 12]=1,
                m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 17]=r9{9},   m[r28{0} - 28]=m[r28{0} - 28]{0},
                m[r28{0} - 32]=m[r28{0} - 32]{0},   m[r28{0} - 152]=0x406328,   m[r28{0} - 156]=r28{0} - 148,
                m[r28{0} - 160]=%pc,   m[r28{0} - 164]=m[r28{0} - 164]{0},   m[r28{0} - 168]=m[r28{0} - 168]{0},
                tmp1=r28{0} - 4,   %flags=SUBFLAGS32( r28{0} - 4, 144, r28{0} - 148 ),   %ZF=(r28{0} - 148) = 0,
                %CF=(r28{0} - 4) <u 144
              Live variables:  in proc proc2
dest is not lib
call:   89 {*u32* eax_1, *v* ecx, *v* edx, *v* esp} := CALL proc8(
                *u32** local4 := a[param5]
                *u8** local6 := edx
              )
              Reaching definitions: r9=truncu(32,8,zfill(8,32,r9{9})),   r10=truncu(32,8,r26{78}),   r24=r28{0} - 16,
                r25=zfill(8,32,r9{9}),   r26=r26{78},   r28=r28{0} - 168,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 5]=r9{27},   m[r28{0} - 12]=m[r28{0} - 12]{36},
                m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 17]=r9{9},   m[r28{0} - 24]=m[r28{0} - 24]{220},
                m[r28{0} - 28]=m[r28{0} - 28]{221},   m[r28{0} - 32]=m[r28{0} - 32]{0},   m[r28{0} - 152]=0x406328,
                m[r28{0} - 156]=r28{0} - 148,   m[r28{0} - 160]=r26{78},   m[r28{0} - 164]=r28{0} - 16,
                m[r28{0} - 168]=%pc,   tmp1=m[r28{0} + 4]{0},
                %flags=ADDFLAGS32( m[r28{0} + 4]{0}, m[r28{0} - 12], r26{78} ),
                %ZF=ADDFLAGS32( m[r28{0} + 4]{0}, m[r28{0} - 12], r26{78} ),
                %CF=ADDFLAGS32( m[r28{0} + 4]{0}, m[r28{0} - 12], r26{78} )
              Live variables: eax_1 in proc proc2
result:    0 *u32* eax_1 := -
dest is not lib
call:  112 {*u32* eax_1, *v** ecx, *j32* edx_1, *v* esp} := CALL proc8(
                *u32** local4 := a[param3]
                *u8** local6 := ecx
              )
              Reaching definitions: r9=truncu(32,8,r25{100}),   r10=truncu(32,8,r28{0} - 32),   r24=r24{94},
                r25=r25{100},   r26=r28{0} - 32,   r28=r28{0} - 168,   r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0}
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 5]=r9{27},   m[r28{0} - 12]=r24{94},   m[r28{0} - 16]=m[r28{0} - 16]{0},
                m[r28{0} - 17]=r9{9},   m[r28{0} - 24]=m[r28{0} - 24]{220},   m[r28{0} - 28]=m[r28{0} - 28]{221},
                m[r28{0} - 32]=m[r28{0} - 32]{0},   m[r28{0} - 152]=0x406328,   m[r28{0} - 156]=r28{0} - 148,
                m[r28{0} - 160]=r25{100},   m[r28{0} - 164]=r28{0} - 32,   m[r28{0} - 168]=%pc,   tmp1=m[r28{0} + 4]{0}
                %flags=ADDFLAGS32( m[r28{0} + 4]{0}, m[r28{0} - 12], r25{100} ),
                %ZF=ADDFLAGS32( m[r28{0} + 4]{0}, m[r28{0} - 12], r25{100} ),
                %CF=ADDFLAGS32( m[r28{0} + 4]{0}, m[r28{0} - 12], r25{100} )
              Live variables: eax_1 in proc proc2
result:    0 *u32* eax_1 := -
dest is not lib
call:   24 {*HANDLE* eax, *v* ecx, *v* edx, *v* esp} := CALL GetModuleHandleA(
              )
              Reaching definitions: r24=m[r28{0} + 8]{0},   r25=m[r28{0} + 8]{0},   r26=r26{14},   r28=r28{0} - 52,
                r29=r28{0} - 4,   r30=r30{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 20]=r26{14},   m[r28{0} - 36]=m[r28{0} + 8]{0},   m[r28{0} - 40]=r30{0},
                m[r28{0} - 44]=0x4062f8,   m[r28{0} - 48]=0x406308,   m[r28{0} - 52]=%pc,   tmp1=m[r28{0} + 8]{0},
                %flags=ADDFLAGS32( m[r28{0} + 8]{0}, m[m[r28{0} + 8]{0} + 60], r26{14} ),
                %ZF=ADDFLAGS32( m[r28{0} + 8]{0}, m[m[r28{0} + 8]{0} + 60], r26{14} ),
                %CF=ADDFLAGS32( m[r28{0} + 8]{0}, m[m[r28{0} + 8]{0} + 60], r26{14} )
              Live variables: eax in proc proc3
result:    0 *HANDLE* eax := -
dest is not lib
call:   30 {*32* eax, *v* ecx, *32* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local0 := eax
                *c** local1 := "kernel32.dll"
              )
              Reaching definitions: r24=r24{24},   r25=r25{24},   r26=r26{24},   r28=r28{0} - 56,   r29=r28{0} - 4,
                r30=r30{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 20]=r26{14},
                m[r28{0} - 36]=m[r28{0} + 8]{0},   m[r28{0} - 40]=r30{0},   m[r28{0} - 44]=0x4062f8,
                m[r28{0} - 48]=0x406308,   m[r28{0} - 52]=r24{24},   m[r28{0} - 56]=%pc,   tmp1=m[r28{0} + 8]{0},
                %flags=ADDFLAGS32( m[r28{0} + 8]{0}, m[m[r28{0} + 8]{0} + 60], r26{14} ),
                %ZF=ADDFLAGS32( m[r28{0} + 8]{0}, m[m[r28{0} + 8]{0} + 60], r26{14} ),
                %CF=ADDFLAGS32( m[r28{0} + 8]{0}, m[m[r28{0} + 8]{0} + 60], r26{14} )
              Live variables: eax,  edx in proc proc3
result:    0 *32* eax := -
result:    0 *32* edx := -
dest is not lib
call:   65 {*32* eax, *8* r9, *32* ecx, *32* edx, *v* esp} := CALL proc5(
                *32* m[esp - 12] := m[esp - 12]
                *32* m[esp - 8] := m[esp - 8]
                *i32* local10 := m[esp - 4]
              )
              Reaching definitions: r9=r9{45},   r24=r24{53},   r25=r25{56},   r26=r26{59},   r28=r28{45} - 16,
                r29=r29{45},   r30=r30{45},   m[r28{0} + 8]=m[r28{0} + 8]{45},   m[r28{0} - 4]=m[r28{0} - 4]{45},
                m[r28{0} - 20]=m[r28{0} - 20]{45},   m[r28{0} - 24]=m[r28{0} - 24]{45},
                m[r28{0} - 36]=m[r28{0} - 36]{45},   m[r28{0} - 40]=m[r28{0} - 40]{45},
                m[r28{0} - 44]=m[r28{0} - 44]{45},   m[r28{0} - 48]=m[r28{0} - 48]{45},
                m[r28{0} - 52]=m[r28{0} - 52]{45},   m[r28{0} - 56]=m[r28{0} - 56]{45},
                m[r28{0} - 60]=m[r28{0} - 60]{45},   m[r28{0} - 64]=m[r28{0} - 64]{45},
                m[r28{0} - 4]=m[r28{0} - 4]{45},   m[r28{0} - 20]=m[r28{0} - 20]{45},
                m[r28{0} - 24]=m[r28{0} - 24]{45},   m[r28{0} - 36]=m[r28{0} - 36]{45},
                m[r28{0} - 40]=m[r28{0} - 40]{45},   m[r28{0} - 44]=m[r28{0} - 44]{45},
                m[r28{0} - 48]=m[r28{0} - 48]{45},   m[r28{0} - 52]=m[r28{0} - 52]{45},
                m[r28{0} - 56]=m[r28{0} - 56]{45},   m[r28{0} - 60]=m[r28{0} - 60]{45},
                m[r28{0} - 64]=m[r28{0} - 64]{45},   <all>=<all>{45},   tmp1=global17,
                %flags=SUBFLAGS32( m[0x406334], 0, global17 ),   %ZF=global17 = 0,   %CF=m[0x406334] <u 0
              Live variables:  in proc proc3
dest is not lib
call:   12 {*HANDLE* eax_2, *v* ecx, *v* edx, *v* esp} := CALL GetModuleHandleA(
              )
              Reaching definitions: r28=r28{0} - 100,   r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 96]=0x406288,   m[r28{0} - 100]=%pc,   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 88, r28{0} - 92 ),   %ZF=(r28{0} - 92) = 0,   %CF=(r28{0} - 4) <u 88
              Live variables: eax_2 in proc proc4
result:    0 *HANDLE* eax_2 := -
dest is not lib
call:   22 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local0 := eax_2
                *c** local1 := "MapViewOfFileEx"
              )
              Reaching definitions: r24=r24{12},   r25=r25{12},   r26=r26{12},   r28=r28{0} - 108,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 84]=r24{12},
                m[r28{0} - 96]=0x406288,   m[r28{0} - 100]=0x406298,   m[r28{0} - 104]=r24{12},   m[r28{0} - 108]=%pc,
                tmp1=r28{0} - 4,   %flags=SUBFLAGS32( r28{0} - 4, 88, r28{0} - 92 ),   %ZF=(r28{0} - 92) = 0,
                %CF=(r28{0} - 4) <u 88
              Live variables: eax in proc proc4
result:    0 *32* eax := -
dest is not lib
call:   32 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local0 := eax_2
                *c** local1 := "UnmapViewOfFile"
              )
              Reaching definitions: r24=r24{22},   r25=r24{12},   r26=r26{22},   r28=r28{0} - 108,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 24]=r24{22},
                m[r28{0} - 84]=r24{12},   m[r28{0} - 96]=0x406288,   m[r28{0} - 100]=0x4062a8,
                m[r28{0} - 104]=r24{12},   m[r28{0} - 108]=%pc,   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 88, r28{0} - 92 ),   %ZF=(r28{0} - 92) = 0,   %CF=(r28{0} - 4) <u 88
              Live variables: eax in proc proc4
result:    0 *32* eax := -
dest is not lib
call:   42 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local0 := eax_2
                *c** local1 := "CreateFileMappingA"
              )
              Reaching definitions: r24=r24{32},   r25=r25{32},   r26=r24{12},   r28=r28{0} - 108,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 24]=r24{22},
                m[r28{0} - 64]=r24{32},   m[r28{0} - 84]=r24{12},   m[r28{0} - 96]=0x406288,   m[r28{0} - 100]=0x4062b8
                m[r28{0} - 104]=r24{12},   m[r28{0} - 108]=%pc,   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 88, r28{0} - 92 ),   %ZF=(r28{0} - 92) = 0,   %CF=(r28{0} - 4) <u 88
              Live variables: eax in proc proc4
result:    0 *32* eax := -
dest is not lib
call:   52 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local0 := eax_2
                *c** local1 := "VirtualAlloc"
              )
              Reaching definitions: r24=r24{12},   r25=r25{42},   r26=r26{42},   r28=r28{0} - 108,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{42},
                m[r28{0} - 24]=r24{22},   m[r28{0} - 64]=r24{32},   m[r28{0} - 84]=r24{12},   m[r28{0} - 96]=0x406288,
                m[r28{0} - 100]=0x4062cc,   m[r28{0} - 104]=r24{12},   m[r28{0} - 108]=%pc,   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 88, r28{0} - 92 ),   %ZF=(r28{0} - 92) = 0,   %CF=(r28{0} - 4) <u 88
              Live variables: eax in proc proc4
result:    0 *32* eax := -
dest is not lib
call:   62 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local0 := eax_2
                *c** local1 := "LoadLibraryA"
              )
              Reaching definitions: r24=r24{52},   r25=r24{12},   r26=r26{52},   r28=r28{0} - 108,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{42},
                m[r28{0} - 24]=r24{22},   m[r28{0} - 64]=r24{32},   m[r28{0} - 72]=r24{52},   m[r28{0} - 84]=r24{12},
                m[r28{0} - 96]=0x406288,   m[r28{0} - 100]=0x4062dc,   m[r28{0} - 104]=r24{12},   m[r28{0} - 108]=%pc,
                tmp1=r28{0} - 4,   %flags=SUBFLAGS32( r28{0} - 4, 88, r28{0} - 92 ),   %ZF=(r28{0} - 92) = 0,
                %CF=(r28{0} - 4) <u 88
              Live variables: eax in proc proc4
result:    0 *32* eax := -
dest is not lib
call:   72 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local0 := eax_2
                *c** local1 := "VirtualFree"
              )
              Reaching definitions: r24=r24{62},   r25=r25{62},   r26=r24{12},   r28=r28{0} - 108,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{42},
                m[r28{0} - 24]=r24{22},   m[r28{0} - 40]=r24{62},   m[r28{0} - 64]=r24{32},   m[r28{0} - 72]=r24{52},
                m[r28{0} - 84]=r24{12},   m[r28{0} - 96]=0x406288,   m[r28{0} - 100]=0x4062ec,
                m[r28{0} - 104]=r24{12},   m[r28{0} - 108]=%pc,   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 88, r28{0} - 92 ),   %ZF=(r28{0} - 92) = 0,   %CF=(r28{0} - 4) <u 88
              Live variables: eax in proc proc4
result:    0 *32* eax := -
dest is not lib
call:  120 {*u32* eax, *8* cl, *32* ecx, *32* edx, *v* esp} := CALL proc5(
                *32* m[esp_1 - 12] := m[esp_1 - 12]
                *32* m[esp_1 - 8] := m[esp_1 - 8]
                *i32* m[esp_1 - 4] := m[esp_1 - 4]
              )
              Reaching definitions: r9=r9{100},   r24=r24{114},   r25=(r25{103} + (r24{105} *! 40)) + 312,
                r26=r26{111},   r28=r28{100} - 16,   r29=r29{100},   m[r28{0} + 4]=m[r28{0} + 4]{100},
                m[r28{0} - 4]=m[r28{0} - 4]{100},   m[r28{0} - 8]=m[r28{0} - 8]{100},
                m[r28{0} - 20]=m[r28{0} - 20]{100},   m[r28{0} - 24]=m[r28{0} - 24]{100},
                m[r28{0} - 40]=m[r28{0} - 40]{100},   m[r28{0} - 48]=m[r28{0} - 48]{100},
                m[r28{0} - 64]=m[r28{0} - 64]{100},   m[r28{0} - 68]=m[r28{0} - 68]{100},
                m[r28{0} - 72]=m[r28{0} - 72]{100},   m[r28{0} - 84]=m[r28{0} - 84]{100},
                m[r28{0} - 88]=m[r28{0} - 88]{100},   m[r28{0} - 96]=m[r28{0} - 96]{100},
                m[r28{0} - 100]=m[r28{0} - 100]{100},   m[r28{0} - 104]=m[r28{0} - 104]{100},
                m[r28{0} - 108]=m[r28{0} - 108]{100},   m[r28{0} - 112]=m[r28{0} - 112]{100},
                m[r28{0} - 116]=m[r28{0} - 116]{100},   m[r28{0} - 4]=m[r28{0} - 4]{100},
                m[r28{0} - 8]=m[r28{0} - 8]{100},   m[r28{0} - 20]=m[r28{0} - 20]{100},
                m[r28{0} - 24]=m[r28{0} - 24]{100},   m[r28{0} - 40]=m[r28{0} - 40]{100},
                m[r28{0} - 48]=m[r28{0} - 48]{100},   m[r28{0} - 64]=m[r28{0} - 64]{100},
                m[r28{0} - 68]=m[r28{0} - 68]{100},   m[r28{0} - 72]=m[r28{0} - 72]{100},
                m[r28{0} - 84]=m[r28{0} - 84]{100},   m[r28{0} - 88]=m[r28{0} - 88]{100},
                m[r28{0} - 96]=m[r28{0} - 96]{100},   m[r28{0} - 100]=m[r28{0} - 100]{100},
                m[r28{0} - 104]=m[r28{0} - 104]{100},   m[r28{0} - 108]=m[r28{0} - 108]{100},
                m[r28{0} - 112]=m[r28{0} - 112]{100},   m[r28{0} - 116]=m[r28{0} - 116]{100},   <all>=<all>{100},
                tmp1=tmp1{100},   tmp2=tmp2{100},   tmpl=tmpl{100},   %flags=IMULTFLAGS32( r24{105} *! 40 ),
                %ZF=IMULTFLAGS32( r24{105} *! 40 ),   %CF=IMULTFLAGS32( r24{105} *! 40 )
              Live variables: cl in proc proc4
result:    0 *8* cl := -
dest is not lib
call:  178 {*u32* eax, *8* cl, *32* ecx, *32* edx, *v* esp} := CALL proc5(
                *32* m[esp_1 - 12] := m[esp_1 - 12]
                *32* m[esp_1 - 8] := m[esp_1 - 8]
                *i32* m[esp_1 - 4] := m[esp_1 - 4]
              )
              Reaching definitions: r9=r9{488},   r24=r24{171},   r25=r25{164},   r26=r26{168},   r28=r28{100} - 16,
                r29=r29{100},   m[r28{0} + 4]=m[r28{0} + 4]{100},   m[r28{0} - 4]=m[r28{0} - 4]{100},
                m[r28{0} - 8]=m[r28{0} - 8]{100},   m[r28{0} - 20]=m[r28{0} - 20]{100},
                m[r28{0} - 24]=m[r28{0} - 24]{100},   m[r28{0} - 40]=m[r28{0} - 40]{100},
                m[r28{0} - 48]=m[r28{0} - 48]{100},   m[r28{0} - 64]=m[r28{0} - 64]{100},
                m[r28{0} - 68]=m[r28{0} - 68]{100},   m[r28{0} - 72]=m[r28{0} - 72]{100},
                m[r28{0} - 84]=m[r28{0} - 84]{100},   m[r28{0} - 88]=m[r28{0} - 88]{100},
                m[r28{0} - 96]=m[r28{0} - 96]{100},   m[r28{0} - 100]=m[r28{0} - 100]{100},
                m[r28{0} - 104]=m[r28{0} - 104]{100},   m[r28{0} - 108]=m[r28{0} - 108]{100},
                m[r28{0} - 112]=m[r28{0} - 112]{100},   m[r28{0} - 116]=m[r28{0} - 116]{100},
                m[r28{0} - 4]=m[r28{0} - 4]{100},   m[r28{0} - 8]=m[r28{0} - 8]{100},
                m[r28{0} - 20]=m[r28{0} - 20]{100},   m[r28{0} - 24]=m[r28{0} - 24]{100},
                m[r28{0} - 40]=m[r28{0} - 40]{100},   m[r28{0} - 48]=m[r28{0} - 48]{100},
                m[r28{0} - 64]=m[r28{0} - 64]{100},   m[r28{0} - 68]=m[r28{0} - 68]{100},
                m[r28{0} - 72]=m[r28{0} - 72]{100},   m[r28{0} - 84]=m[r28{0} - 84]{100},
                m[r28{0} - 88]=m[r28{0} - 88]{100},   m[r28{0} - 96]=m[r28{0} - 96]{100},
                m[r28{0} - 100]=m[r28{0} - 100]{100},   m[r28{0} - 104]=m[r28{0} - 104]{100},
                m[r28{0} - 108]=m[r28{0} - 108]{100},   m[r28{0} - 112]=m[r28{0} - 112]{100},
                m[r28{0} - 116]=m[r28{0} - 116]{100},   <all>=<all>{100},   tmp1=r24{169},   tmp2=tmp2{153},
                tmpl=tmpl{152},   %flags=ADDFLAGS32( r24{169}, m[r26{168} + 12], r24{171} ),
                %ZF=ADDFLAGS32( r24{169}, m[r26{168} + 12], r24{171} ),
                %CF=ADDFLAGS32( r24{169}, m[r26{168} + 12], r24{171} )
              Live variables: cl in proc proc4
result:    0 *8* cl := -
dest is not lib
call:  316 {*32** eax, *32** ecx, *v* edx, *v* esp} := CALL proc6(
                *HANDLE* m[esp_3 - 8] := m[esp_3 - 8]
                *c** m[esp_3 - 4] := m[esp_3 - 4]
              )
              Reaching definitions: r9=r9{235},   r24=(r25{305} + r26{306}) + 2,   r25=r25{310},   r26=r26{306},
                r28=r28{235} - 12,   r29=r29{235},   m[r28{0} + 4]=m[r28{0} + 4]{235},
                m[r28{0} - 4]=m[r28{0} - 4]{235},   m[r28{0} - 8]=m[r28{0} - 8]{235},
                m[r28{0} - 20]=m[r28{0} - 20]{235},   m[r28{0} - 24]=m[r28{0} - 24]{235},
                m[r28{0} - 40]=m[r28{0} - 40]{235},   m[r28{0} - 48]=m[r28{0} - 48]{235},
                m[r28{0} - 64]=m[r28{0} - 64]{235},   m[r28{0} - 68]=m[r28{0} - 68]{235},
                m[r28{0} - 72]=m[r28{0} - 72]{235},   m[r28{0} - 84]=m[r28{0} - 84]{235},
                m[r28{0} - 88]=m[r28{0} - 88]{235},   m[r28{0} - 96]=m[r28{0} - 96]{235},
                m[r28{0} - 100]=m[r28{0} - 100]{235},   m[r28{0} - 104]=m[r28{0} - 104]{235},
                m[r28{0} - 108]=m[r28{0} - 108]{235},   m[r28{0} - 112]=m[r28{0} - 112]{235},
                m[r28{0} - 116]=m[r28{0} - 116]{235},   m[r28{0} - 4]=m[r28{0} - 4]{235},
                m[r28{0} - 8]=m[r28{0} - 8]{235},   m[r28{0} - 20]=m[r28{0} - 20]{235},
                m[r28{0} - 24]=m[r28{0} - 24]{235},   m[r28{0} - 40]=m[r28{0} - 40]{235},
                m[r28{0} - 48]=m[r28{0} - 48]{235},   m[r28{0} - 64]=m[r28{0} - 64]{235},
                m[r28{0} - 68]=m[r28{0} - 68]{235},   m[r28{0} - 72]=m[r28{0} - 72]{235},
                m[r28{0} - 84]=m[r28{0} - 84]{235},   m[r28{0} - 88]=m[r28{0} - 88]{235},
                m[r28{0} - 96]=m[r28{0} - 96]{235},   m[r28{0} - 100]=m[r28{0} - 100]{235},
                m[r28{0} - 104]=m[r28{0} - 104]{235},   m[r28{0} - 108]=m[r28{0} - 108]{235},
                m[r28{0} - 112]=m[r28{0} - 112]{235},   m[r28{0} - 116]=m[r28{0} - 116]{235},   <all>=<all>{235},
                tmp1=tmp1{277},   tmp2=tmp2{235},   tmpl=tmpl{235},   %flags=LOGICALFLAGS32( r25{281} & 0x80000000 ),
                %ZF=LOGICALFLAGS32( r25{281} & 0x80000000 ),   %CF=LOGICALFLAGS32( r25{281} & 0x80000000 )
              Live variables: eax in proc proc4
result:    0 *32** eax := -
dest is not lib
call:  297 {*32** eax, *32** ecx, *v* edx, *v* esp} := CALL proc6(
                *HANDLE* m[esp_3 - 8] := m[esp_3 - 8]
                *c** m[esp_3 - 4] := m[esp_3 - 4]
              )
              Reaching definitions: r9=r9{235},   r24=r24{286} & 0x7fffffff,   r25=r25{291},   r26=r26{285},
                r28=r28{235} - 12,   r29=r29{235},   m[r28{0} + 4]=m[r28{0} + 4]{235},
                m[r28{0} - 4]=m[r28{0} - 4]{235},   m[r28{0} - 8]=m[r28{0} - 8]{235},
                m[r28{0} - 20]=m[r28{0} - 20]{235},   m[r28{0} - 24]=m[r28{0} - 24]{235},
                m[r28{0} - 40]=m[r28{0} - 40]{235},   m[r28{0} - 48]=m[r28{0} - 48]{235},
                m[r28{0} - 64]=m[r28{0} - 64]{235},   m[r28{0} - 68]=m[r28{0} - 68]{235},
                m[r28{0} - 72]=m[r28{0} - 72]{235},   m[r28{0} - 84]=m[r28{0} - 84]{235},
                m[r28{0} - 88]=m[r28{0} - 88]{235},   m[r28{0} - 96]=m[r28{0} - 96]{235},
                m[r28{0} - 100]=m[r28{0} - 100]{235},   m[r28{0} - 104]=m[r28{0} - 104]{235},
                m[r28{0} - 108]=m[r28{0} - 108]{235},   m[r28{0} - 112]=m[r28{0} - 112]{235},
                m[r28{0} - 116]=m[r28{0} - 116]{235},   m[r28{0} - 4]=m[r28{0} - 4]{235},
                m[r28{0} - 8]=m[r28{0} - 8]{235},   m[r28{0} - 20]=m[r28{0} - 20]{235},
                m[r28{0} - 24]=m[r28{0} - 24]{235},   m[r28{0} - 40]=m[r28{0} - 40]{235},
                m[r28{0} - 48]=m[r28{0} - 48]{235},   m[r28{0} - 64]=m[r28{0} - 64]{235},
                m[r28{0} - 68]=m[r28{0} - 68]{235},   m[r28{0} - 72]=m[r28{0} - 72]{235},
                m[r28{0} - 84]=m[r28{0} - 84]{235},   m[r28{0} - 88]=m[r28{0} - 88]{235},
                m[r28{0} - 96]=m[r28{0} - 96]{235},   m[r28{0} - 100]=m[r28{0} - 100]{235},
                m[r28{0} - 104]=m[r28{0} - 104]{235},   m[r28{0} - 108]=m[r28{0} - 108]{235},
                m[r28{0} - 112]=m[r28{0} - 112]{235},   m[r28{0} - 116]=m[r28{0} - 116]{235},   <all>=<all>{235},
                tmp1=tmp1{277},   tmp2=tmp2{235},   tmpl=tmpl{235},   %flags=LOGICALFLAGS32( r24{286} & 0x7fffffff ),
                %ZF=LOGICALFLAGS32( r24{286} & 0x7fffffff ),   %CF=LOGICALFLAGS32( r24{286} & 0x7fffffff )
              Live variables: eax in proc proc4
result:    0 *32** eax := -
dest is not lib
call:  444 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL CloseHandle(
                *HANDLE* m[esp_4 - 4] := m[esp_4 - 4]
              )
              Reaching definitions: r9=r9{364},   r24=r24{556},   r25=r25{557},   r26=r26{438},   r28=r28{559} - 8,
                r29=r29{364},   m[r28{0} + 4]=m[r28{0} + 4]{364},   m[r28{0} - 4]=m[r28{0} - 4]{364},
                m[r28{0} - 8]=m[r28{0} - 8]{364},   m[r28{0} - 20]=m[r28{0} - 20]{364},
                m[r28{0} - 24]=m[r28{0} - 24]{364},   m[r28{0} - 40]=m[r28{0} - 40]{364},
                m[r28{0} - 48]=m[r28{0} - 48]{364},   m[r28{0} - 64]=m[r28{0} - 64]{364},
                m[r28{0} - 68]=m[r28{0} - 68]{364},   m[r28{0} - 72]=m[r28{0} - 72]{364},
                m[r28{0} - 84]=m[r28{0} - 84]{364},   m[r28{0} - 88]=m[r28{0} - 88]{364},
                m[r28{0} - 96]=m[r28{0} - 96]{364},   m[r28{0} - 100]=m[r28{0} - 100]{364},
                m[r28{0} - 104]=m[r28{0} - 104]{364},   m[r28{0} - 108]=m[r28{0} - 108]{364},
                m[r28{0} - 112]=m[r28{0} - 112]{364},   m[r28{0} - 116]=m[r28{0} - 116]{364},
                m[r28{0} - 4]=m[r28{0} - 4]{364},   m[r28{0} - 8]=m[r28{0} - 8]{364},
                m[r28{0} - 20]=m[r28{0} - 20]{364},   m[r28{0} - 24]=m[r28{0} - 24]{364},
                m[r28{0} - 40]=m[r28{0} - 40]{364},   m[r28{0} - 48]=m[r28{0} - 48]{364},
                m[r28{0} - 64]=m[r28{0} - 64]{364},   m[r28{0} - 68]=m[r28{0} - 68]{364},
                m[r28{0} - 72]=m[r28{0} - 72]{364},   m[r28{0} - 84]=m[r28{0} - 84]{364},
                m[r28{0} - 88]=m[r28{0} - 88]{364},   m[r28{0} - 96]=m[r28{0} - 96]{364},
                m[r28{0} - 100]=m[r28{0} - 100]{364},   m[r28{0} - 104]=m[r28{0} - 104]{364},
                m[r28{0} - 108]=m[r28{0} - 108]{364},   m[r28{0} - 112]=m[r28{0} - 112]{364},
                m[r28{0} - 116]=m[r28{0} - 116]{364},   <all>=<all>{364},   tmp1=tmp1{560},   tmp2=tmp2{364},
                tmpl=tmpl{364},   %flags=%flags{561},   %ZF=%ZF{562},   %CF=%CF{563}
              Live variables:  in proc proc4
dest is not lib
call:  458 {*32* eax, *8* cl, *32* ecx, *32* edx, *v* esp} := CALL proc5(
                *32* m[esp_4 - 12] := m[esp_4 - 12]
                *32* m[esp_4 - 8] := m[esp_4 - 8]
                *i32* m[esp_4 - 4] := m[esp_4 - 4]
              )
              Reaching definitions: r9=r9{364},   r24=global17,   r25=r25{446},   r26=r26{449},   r28=r28{559} - 16,
                r29=r29{364},   m[r28{0} + 4]=m[r28{0} + 4]{364},   m[r28{0} - 4]=m[r28{0} - 4]{364},
                m[r28{0} - 8]=m[r28{0} - 8]{364},   m[r28{0} - 20]=m[r28{0} - 20]{364},
                m[r28{0} - 24]=m[r28{0} - 24]{364},   m[r28{0} - 40]=m[r28{0} - 40]{364},
                m[r28{0} - 48]=m[r28{0} - 48]{364},   m[r28{0} - 64]=m[r28{0} - 64]{364},
                m[r28{0} - 68]=m[r28{0} - 68]{364},   m[r28{0} - 72]=m[r28{0} - 72]{364},
                m[r28{0} - 84]=m[r28{0} - 84]{364},   m[r28{0} - 88]=m[r28{0} - 88]{364},
                m[r28{0} - 96]=m[r28{0} - 96]{364},   m[r28{0} - 100]=m[r28{0} - 100]{364},
                m[r28{0} - 104]=m[r28{0} - 104]{364},   m[r28{0} - 108]=m[r28{0} - 108]{364},
                m[r28{0} - 112]=m[r28{0} - 112]{364},   m[r28{0} - 116]=m[r28{0} - 116]{364},
                m[r28{0} - 4]=m[r28{0} - 4]{364},   m[r28{0} - 8]=m[r28{0} - 8]{364},
                m[r28{0} - 20]=m[r28{0} - 20]{364},   m[r28{0} - 24]=m[r28{0} - 24]{364},
                m[r28{0} - 40]=m[r28{0} - 40]{364},   m[r28{0} - 48]=m[r28{0} - 48]{364},
                m[r28{0} - 64]=m[r28{0} - 64]{364},   m[r28{0} - 68]=m[r28{0} - 68]{364},
                m[r28{0} - 72]=m[r28{0} - 72]{364},   m[r28{0} - 84]=m[r28{0} - 84]{364},
                m[r28{0} - 88]=m[r28{0} - 88]{364},   m[r28{0} - 96]=m[r28{0} - 96]{364},
                m[r28{0} - 100]=m[r28{0} - 100]{364},   m[r28{0} - 104]=m[r28{0} - 104]{364},
                m[r28{0} - 108]=m[r28{0} - 108]{364},   m[r28{0} - 112]=m[r28{0} - 112]{364},
                m[r28{0} - 116]=m[r28{0} - 116]{364},   <all>=<all>{364},   tmp1=tmp1{560},   tmp2=tmp2{364},
                tmpl=tmpl{364},   %flags=%flags{561},   %ZF=%ZF{562},   %CF=%CF{563}
              Live variables:  in proc proc4
dest is not lib
call:  468 {*32* eax, *32* ecx, *32* edx, *v* esp} := CALL proc7(
                *32* m[esp_4 - 4] := m[esp_4 - 4]
              )
              Reaching definitions: r9=r9{458},   r24=r24{458},   r25=global17,   r26=r26{458},   r28=r28{559} - 8,
                r29=r29{364},   m[r28{0} + 4]=m[r28{0} + 4]{364},   m[r28{0} - 4]=m[r28{0} - 4]{364},
                m[r28{0} - 8]=m[r28{0} - 8]{364},   m[r28{0} - 20]=m[r28{0} - 20]{364},
                m[r28{0} - 24]=m[r28{0} - 24]{364},   m[r28{0} - 40]=m[r28{0} - 40]{364},
                m[r28{0} - 48]=m[r28{0} - 48]{364},   m[r28{0} - 64]=m[r28{0} - 64]{364},
                m[r28{0} - 68]=m[r28{0} - 68]{364},   m[r28{0} - 72]=m[r28{0} - 72]{364},
                m[r28{0} - 84]=m[r28{0} - 84]{364},   m[r28{0} - 88]=m[r28{0} - 88]{364},
                m[r28{0} - 96]=m[r28{0} - 96]{364},   m[r28{0} - 100]=m[r28{0} - 100]{364},
                m[r28{0} - 104]=m[r28{0} - 104]{364},   m[r28{0} - 108]=m[r28{0} - 108]{364},
                m[r28{0} - 112]=m[r28{0} - 112]{364},   m[r28{0} - 116]=m[r28{0} - 116]{364},
                m[r28{0} - 4]=m[r28{0} - 4]{364},   m[r28{0} - 8]=m[r28{0} - 8]{364},
                m[r28{0} - 20]=m[r28{0} - 20]{364},   m[r28{0} - 24]=m[r28{0} - 24]{364},
                m[r28{0} - 40]=m[r28{0} - 40]{364},   m[r28{0} - 48]=m[r28{0} - 48]{364},
                m[r28{0} - 64]=m[r28{0} - 64]{364},   m[r28{0} - 68]=m[r28{0} - 68]{364},
                m[r28{0} - 72]=m[r28{0} - 72]{364},   m[r28{0} - 84]=m[r28{0} - 84]{364},
                m[r28{0} - 88]=m[r28{0} - 88]{364},   m[r28{0} - 96]=m[r28{0} - 96]{364},
                m[r28{0} - 100]=m[r28{0} - 100]{364},   m[r28{0} - 104]=m[r28{0} - 104]{364},
                m[r28{0} - 108]=m[r28{0} - 108]{364},   m[r28{0} - 112]=m[r28{0} - 112]{364},
                m[r28{0} - 116]=m[r28{0} - 116]{364},   <all>=<all>{364},   tmp1=(r28{559} - 16) + 4,   tmp2=tmp2{364},
                tmpl=tmpl{364},   %flags=ADDFLAGS32( r28{559} - 12, 12, r28{559} ),
                %ZF=ADDFLAGS32( r28{559} - 12, 12, r28{559} ),   %CF=ADDFLAGS32( r28{559} - 12, 12, r28{559} )
              Live variables:  in proc proc4
dest is not lib
call:  376 {*32* eax, *32* ecx, *32* edx, *v* esp} := CALL UnmapViewOfFile(
              )
              Reaching definitions: r9=r9{364},   r24=r24{369},   r25=r25{370},   r26=r26{364},   r28=r28{364} - 8,
                r29=r29{364},   m[r28{0} + 4]=m[r28{0} + 4]{364},   m[r28{0} - 4]=m[r28{0} - 4]{364},
                m[r28{0} - 8]=m[r28{0} - 8]{364},   m[r28{0} - 20]=m[r28{0} - 20]{364},
                m[r28{0} - 24]=m[r28{0} - 24]{364},   m[r28{0} - 40]=m[r28{0} - 40]{364},
                m[r28{0} - 48]=m[r28{0} - 48]{364},   m[r28{0} - 64]=m[r28{0} - 64]{364},
                m[r28{0} - 68]=m[r28{0} - 68]{364},   m[r28{0} - 72]=m[r28{0} - 72]{364},
                m[r28{0} - 84]=m[r28{0} - 84]{364},   m[r28{0} - 88]=m[r28{0} - 88]{364},
                m[r28{0} - 96]=m[r28{0} - 96]{364},   m[r28{0} - 100]=m[r28{0} - 100]{364},
                m[r28{0} - 104]=m[r28{0} - 104]{364},   m[r28{0} - 108]=m[r28{0} - 108]{364},
                m[r28{0} - 112]=m[r28{0} - 112]{364},   m[r28{0} - 116]=m[r28{0} - 116]{364},
                m[r28{0} - 4]=m[r28{0} - 4]{364},   m[r28{0} - 8]=m[r28{0} - 8]{364},
                m[r28{0} - 20]=m[r28{0} - 20]{364},   m[r28{0} - 24]=m[r28{0} - 24]{364},
                m[r28{0} - 40]=m[r28{0} - 40]{364},   m[r28{0} - 48]=m[r28{0} - 48]{364},
                m[r28{0} - 64]=m[r28{0} - 64]{364},   m[r28{0} - 68]=m[r28{0} - 68]{364},
                m[r28{0} - 72]=m[r28{0} - 72]{364},   m[r28{0} - 84]=m[r28{0} - 84]{364},
                m[r28{0} - 88]=m[r28{0} - 88]{364},   m[r28{0} - 96]=m[r28{0} - 96]{364},
                m[r28{0} - 100]=m[r28{0} - 100]{364},   m[r28{0} - 104]=m[r28{0} - 104]{364},
                m[r28{0} - 108]=m[r28{0} - 108]{364},   m[r28{0} - 112]=m[r28{0} - 112]{364},
                m[r28{0} - 116]=m[r28{0} - 116]{364},   <all>=<all>{364},   tmp1=global17,   tmp2=tmp2{364},
                tmpl=tmpl{364},   %flags=SUBFLAGS32( m[0x406334], 0, global17 ),   %ZF=global17 = 0,
                %CF=m[0x406334] <u 0
              Live variables: eax in proc proc4
result:    0 *32* eax := -
dest is not lib
call:  416 {*32* eax, *32* ecx, *32* edx, *v** esp_4} := CALL MapViewOfFileEx(
              )
              Reaching definitions: r9=r9{364},   r24=r24{410},   r25=r25{398},   r26=r26{399},   r28=r28{364} - 32,
                r29=r29{364},   m[r28{0} + 4]=m[r28{0} + 4]{364},   m[r28{0} - 4]=m[r28{0} - 4]{364},
                m[r28{0} - 8]=m[r28{0} - 8]{364},   m[r28{0} - 20]=m[r28{0} - 20]{364},
                m[r28{0} - 24]=m[r28{0} - 24]{364},   m[r28{0} - 40]=m[r28{0} - 40]{364},
                m[r28{0} - 48]=m[r28{0} - 48]{364},   m[r28{0} - 64]=m[r28{0} - 64]{364},
                m[r28{0} - 68]=m[r28{0} - 68]{364},   m[r28{0} - 72]=m[r28{0} - 72]{364},
                m[r28{0} - 84]=m[r28{0} - 84]{364},   m[r28{0} - 88]=m[r28{0} - 88]{364},
                m[r28{0} - 96]=m[r28{0} - 96]{364},   m[r28{0} - 100]=m[r28{0} - 100]{364},
                m[r28{0} - 104]=m[r28{0} - 104]{364},   m[r28{0} - 108]=m[r28{0} - 108]{364},
                m[r28{0} - 112]=m[r28{0} - 112]{364},   m[r28{0} - 116]=m[r28{0} - 116]{364},
                m[r28{0} - 4]=m[r28{0} - 4]{364},   m[r28{0} - 8]=m[r28{0} - 8]{364},
                m[r28{0} - 20]=m[r28{0} - 20]{364},   m[r28{0} - 24]=m[r28{0} - 24]{364},
                m[r28{0} - 40]=m[r28{0} - 40]{364},   m[r28{0} - 48]=m[r28{0} - 48]{364},
                m[r28{0} - 64]=m[r28{0} - 64]{364},   m[r28{0} - 68]=m[r28{0} - 68]{364},
                m[r28{0} - 72]=m[r28{0} - 72]{364},   m[r28{0} - 84]=m[r28{0} - 84]{364},
                m[r28{0} - 88]=m[r28{0} - 88]{364},   m[r28{0} - 96]=m[r28{0} - 96]{364},
                m[r28{0} - 100]=m[r28{0} - 100]{364},   m[r28{0} - 104]=m[r28{0} - 104]{364},
                m[r28{0} - 108]=m[r28{0} - 108]{364},   m[r28{0} - 112]=m[r28{0} - 112]{364},
                m[r28{0} - 116]=m[r28{0} - 116]{364},   <all>=<all>{364},   tmp1=tmp1{552},   tmp2=tmp2{364},
                tmpl=tmpl{364},   %flags=%flags{553},   %ZF=%ZF{554},   %CF=%CF{555}
              Live variables: eax,  esp_4 in proc proc4
result:    0 *32* eax := -
result:    0 *v** esp_4 := -
dest is not lib
call:  436 {*32* eax, *32* ecx, *32* edx, *v** esp_4} := CALL VirtualAlloc(
                *LPVOID* m[esp_4 - 44] := m[esp_4 - 44]
                *DWORD* m[esp_4 - 40] := m[esp_4 - 40]
                *DWORD* m[esp_4 - 36] := m[esp_4 - 36]
                *DWORD* m[esp_4 - 32] := m[esp_4 - 32]
              )
              Reaching definitions: r9=r9{364},   r24=r24{429},   r25=r25{430},   r26=r26{426},   r28=r28{364} - 48,
                r29=r29{364},   m[r28{0} + 4]=m[r28{0} + 4]{364},   m[r28{0} - 4]=m[r28{0} - 4]{364},
                m[r28{0} - 8]=m[r28{0} - 8]{364},   m[r28{0} - 20]=m[r28{0} - 20]{364},
                m[r28{0} - 24]=m[r28{0} - 24]{364},   m[r28{0} - 40]=m[r28{0} - 40]{364},
                m[r28{0} - 48]=m[r28{0} - 48]{364},   m[r28{0} - 64]=m[r28{0} - 64]{364},
                m[r28{0} - 68]=m[r28{0} - 68]{364},   m[r28{0} - 72]=m[r28{0} - 72]{364},
                m[r28{0} - 84]=m[r28{0} - 84]{364},   m[r28{0} - 88]=m[r28{0} - 88]{364},
                m[r28{0} - 96]=m[r28{0} - 96]{364},   m[r28{0} - 100]=m[r28{0} - 100]{364},
                m[r28{0} - 104]=m[r28{0} - 104]{364},   m[r28{0} - 108]=m[r28{0} - 108]{364},
                m[r28{0} - 112]=m[r28{0} - 112]{364},   m[r28{0} - 116]=m[r28{0} - 116]{364},
                m[r28{0} - 4]=m[r28{0} - 4]{364},   m[r28{0} - 8]=m[r28{0} - 8]{364},
                m[r28{0} - 20]=m[r28{0} - 20]{364},   m[r28{0} - 24]=m[r28{0} - 24]{364},
                m[r28{0} - 40]=m[r28{0} - 40]{364},   m[r28{0} - 48]=m[r28{0} - 48]{364},
                m[r28{0} - 64]=m[r28{0} - 64]{364},   m[r28{0} - 68]=m[r28{0} - 68]{364},
                m[r28{0} - 72]=m[r28{0} - 72]{364},   m[r28{0} - 84]=m[r28{0} - 84]{364},
                m[r28{0} - 88]=m[r28{0} - 88]{364},   m[r28{0} - 96]=m[r28{0} - 96]{364},
                m[r28{0} - 100]=m[r28{0} - 100]{364},   m[r28{0} - 104]=m[r28{0} - 104]{364},
                m[r28{0} - 108]=m[r28{0} - 108]{364},   m[r28{0} - 112]=m[r28{0} - 112]{364},
                m[r28{0} - 116]=m[r28{0} - 116]{364},   <all>=<all>{364},   tmp1=global17,   tmp2=tmp2{364},
                tmpl=tmpl{364},   %flags=SUBFLAGS32( m[0x406334], 0, global17 ),   %ZF=global17 = 0,
                %CF=m[0x406334] <u 0
              Live variables: eax,  esp_4 in proc proc4
result:    0 *32* eax := -
result:    0 *v** esp_4 := -
dest is not lib
call:  391 {*32* eax, *32* ecx, *32* edx, *v** esp} := CALL VirtualFree(
                *v** m[esp_4 - 16] := m[esp_4 - 16]
                *i32* m[esp_4 - 12] := m[esp_4 - 12]
                *j32* m[esp_4 - 8] := m[esp_4 - 8]
              )
              Reaching definitions: r9=r9{364},   r24=r24{385},   r25=r25{376},   r26=r26{384},   r28=r28{364} - 20,
                r29=r29{364},   m[r28{0} + 4]=m[r28{0} + 4]{364},   m[r28{0} - 4]=m[r28{0} - 4]{364},
                m[r28{0} - 8]=m[r28{0} - 8]{364},   m[r28{0} - 20]=m[r28{0} - 20]{364},
                m[r28{0} - 24]=m[r28{0} - 24]{364},   m[r28{0} - 40]=m[r28{0} - 40]{364},
                m[r28{0} - 48]=m[r28{0} - 48]{364},   m[r28{0} - 64]=m[r28{0} - 64]{364},
                m[r28{0} - 68]=m[r28{0} - 68]{364},   m[r28{0} - 72]=m[r28{0} - 72]{364},
                m[r28{0} - 84]=m[r28{0} - 84]{364},   m[r28{0} - 88]=m[r28{0} - 88]{364},
                m[r28{0} - 96]=m[r28{0} - 96]{364},   m[r28{0} - 100]=m[r28{0} - 100]{364},
                m[r28{0} - 104]=m[r28{0} - 104]{364},   m[r28{0} - 108]=m[r28{0} - 108]{364},
                m[r28{0} - 112]=m[r28{0} - 112]{364},   m[r28{0} - 116]=m[r28{0} - 116]{364},
                m[r28{0} - 4]=m[r28{0} - 4]{364},   m[r28{0} - 8]=m[r28{0} - 8]{364},
                m[r28{0} - 20]=m[r28{0} - 20]{364},   m[r28{0} - 24]=m[r28{0} - 24]{364},
                m[r28{0} - 40]=m[r28{0} - 40]{364},   m[r28{0} - 48]=m[r28{0} - 48]{364},
                m[r28{0} - 64]=m[r28{0} - 64]{364},   m[r28{0} - 68]=m[r28{0} - 68]{364},
                m[r28{0} - 72]=m[r28{0} - 72]{364},   m[r28{0} - 84]=m[r28{0} - 84]{364},
                m[r28{0} - 88]=m[r28{0} - 88]{364},   m[r28{0} - 96]=m[r28{0} - 96]{364},
                m[r28{0} - 100]=m[r28{0} - 100]{364},   m[r28{0} - 104]=m[r28{0} - 104]{364},
                m[r28{0} - 108]=m[r28{0} - 108]{364},   m[r28{0} - 112]=m[r28{0} - 112]{364},
                m[r28{0} - 116]=m[r28{0} - 116]{364},   <all>=<all>{364},   tmp1=r24{376},   tmp2=tmp2{364},
                tmpl=tmpl{364},   %flags=LOGICALFLAGS32( r24{376} ),   %ZF=LOGICALFLAGS32( r24{376} ),
                %CF=LOGICALFLAGS32( r24{376} )
              Live variables: eax in proc proc4
result:    0 *32* eax := -
dest is not lib
call:   15 {*32* eax, *32* r25, *32* r26} := CALL GetProcAddress(
                *HANDLE* local0 := param1
                *c** local1 := param2
              )
              Reaching definitions: r24=m[r28{0} + 8]{0},   r25=m[r28{0} + 4]{0},   r28=r28{0} - 20,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=r25{0},   m[r28{0} - 12]=m[r28{0} + 8]{0},   m[r28{0} - 16]=m[r28{0} + 4]{0},
                m[r28{0} - 20]=%pc
              Live variables: eax in proc proc6
result:    0 *32* eax := -
dest is not lib
call:   17 {*j32* r25, *u32* edx} := CALL lstrcpyA(
              )
              Reaching definitions: r24=r28{0} - 132,   r28=r28{0} - 144,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=0,   m[r28{0} - 12]=m[r28{0} - 12]{0},   m[r28{0} - 16]=0,
                m[r28{0} - 20]=m[r28{0} - 20]{0},   m[r28{0} - 136]=0x406318,   m[r28{0} - 140]=r28{0} - 132,
                m[r28{0} - 144]=%pc,   tmp1=r28{0} - 4,   %flags=SUBFLAGS32( r28{0} - 4, 128, r28{0} - 132 ),
                %ZF=(r28{0} - 132) = 0,   %CF=(r28{0} - 4) <u 128
              Live variables:  in proc proc8
