Unknown library function GetModuleHandleA
Unknown library function SetScrollInfo
Unknown library function SetScrollPos
Unknown library function CreateMenu
Unknown library function GetDC
Unknown library function ModifyMenuA
Unknown library function TerminateThread
Unknown library function CreateThread
Unknown library function ResumeThread
Unknown library function GetCurrentProcess
Unknown library function TerminateProcess
Unknown library function HeapCreate
Unknown library function GlobalAlloc
Unknown library function GlobalFree
Unknown library function MoveToEx
Unknown library function LineTo
Unknown library function Polyline
Unknown library function ReleaseDC
Unknown library function CreatePen
Unknown library function CreateCompatibleDC
Unknown library function DeleteDC
Unknown library function CreateEventA
Unknown library function SetEvent
Unknown library function GetForegroundWindow
assgn    3 *32* r24 := m[0]
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
in proc proc1 adding addrExp r28{0} to local table
in proc proc1 adding addrExp r28{0} - 4 to local table
in proc proc1 adding addrExp r28{0} - 8 to local table
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} to local table
finding final parameters for proc1
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param r27
found new parameter r27
potential param r30
found new parameter r30
potential param r31
found new parameter r31
potential param m[r28{0}]
found new parameter m[r28{0}]
after removing matching assigns (%pc).
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc22 ###
in proc proc22 adding addrExp r28{0} - 4 to local table
in proc proc22 adding addrExp r28{0} - 32 to local table
in proc proc22 adding addrExp r28{0} - 36 to local table
in proc proc22 adding addrExp r28{0} - 28 to local table
in proc proc22 adding addrExp r28{0} - 20 to local table
in proc proc22 adding addrExp r28{0} - 24 to local table
in proc proc22 adding addrExp r28{0} - 16 to local table
in proc proc22 adding addrExp r28{0} - 16 to local table
in proc proc22 adding addrExp r28{0} - 16 to local table
in proc proc22 adding addrExp r28{0} - 8 to local table
in proc proc22 adding addrExp r28{0} - 12 to local table
in proc proc22 adding addrExp r28{0} - 8 to local table
in proc proc22 adding addrExp r28{0} - 12 to local table
in proc proc22 adding addrExp r28{0} - 8 to local table
in proc proc22 adding addrExp r28{0} - 8 to local table
in proc proc22 adding addrExp r28{0} - 12 to local table
in proc proc22 adding addrExp r28{0} - 8 to local table
in proc proc22 adding addrExp r28{0} - 12 to local table
finding final parameters for proc22
potential param r28
found new parameter r28
potential param r31
found new parameter r31
potential param r27
found new parameter r27
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc2 ###
in proc proc2 adding addrExp r28{0} - 8 to local table
in proc proc2 adding addrExp r28{0} - 9 to local table
in proc proc2 adding addrExp r28{0} - 10 to local table
in proc proc2 adding addrExp r28{0} - 11 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 13 to local table
in proc proc2 adding addrExp r28{0} - 14 to local table
in proc proc2 adding addrExp r28{0} - 15 to local table
in proc proc2 adding addrExp r28{0} - 16 to local table
in proc proc2 adding addrExp r28{0} - 17 to local table
in proc proc2 adding addrExp r28{0} - 18 to local table
in proc proc2 adding addrExp r28{0} - 19 to local table
in proc proc2 adding addrExp r28{0} - 20 to local table
in proc proc2 adding addrExp r28{0} - 24 to local table
in proc proc2 adding addrExp r28{0} - 28 to local table
in proc proc2 adding addrExp r28{0} - 32 to local table
in proc proc2 adding addrExp r28{0} - 36 to local table
in proc proc2 adding addrExp r28{0} - 4 to local table
in proc proc2 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28{0} - 8 to local table
in proc proc2 adding addrExp r28{0} - 9 to local table
in proc proc2 adding addrExp r28{0} - 10 to local table
in proc proc2 adding addrExp r28{0} - 11 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 13 to local table
in proc proc2 adding addrExp r28{0} - 14 to local table
in proc proc2 adding addrExp r28{0} - 15 to local table
in proc proc2 adding addrExp r28{0} - 16 to local table
in proc proc2 adding addrExp r28{0} - 17 to local table
in proc proc2 adding addrExp r28{0} - 18 to local table
in proc proc2 adding addrExp r28{0} - 19 to local table
in proc proc2 adding addrExp r28{0} - 20 to local table
in proc proc2 adding addrExp r28{0} - 24 to local table
in proc proc2 adding addrExp r28{0} - 28 to local table
in proc proc2 adding addrExp r28{0} - 32 to local table
in proc proc2 adding addrExp r28{0} - 36 to local table
in proc proc2 adding addrExp r28{0} - 24 to local table
in proc proc2 adding addrExp r28{0} - 28 to local table
in proc proc2 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28{0} - 8 to local table
in proc proc2 adding addrExp r28{0} - 9 to local table
in proc proc2 adding addrExp r28{0} - 10 to local table
in proc proc2 adding addrExp r28{0} - 11 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 13 to local table
in proc proc2 adding addrExp r28{0} - 14 to local table
in proc proc2 adding addrExp r28{0} - 15 to local table
in proc proc2 adding addrExp r28{0} - 16 to local table
in proc proc2 adding addrExp r28{0} - 17 to local table
in proc proc2 adding addrExp r28{0} - 18 to local table
in proc proc2 adding addrExp r28{0} - 19 to local table
in proc proc2 adding addrExp r28{0} - 20 to local table
in proc proc2 adding addrExp r28{0} - 24 to local table
in proc proc2 adding addrExp r28{0} - 28 to local table
in proc proc2 adding addrExp r28{0} - 32 to local table
in proc proc2 adding addrExp r28{0} - 36 to local table
in proc proc2 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28{0} - 8 to local table
in proc proc2 adding addrExp r28{0} - 9 to local table
in proc proc2 adding addrExp r28{0} - 10 to local table
in proc proc2 adding addrExp r28{0} - 11 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 13 to local table
in proc proc2 adding addrExp r28{0} - 14 to local table
in proc proc2 adding addrExp r28{0} - 15 to local table
in proc proc2 adding addrExp r28{0} - 16 to local table
in proc proc2 adding addrExp r28{0} - 17 to local table
in proc proc2 adding addrExp r28{0} - 18 to local table
in proc proc2 adding addrExp r28{0} - 19 to local table
in proc proc2 adding addrExp r28{0} - 20 to local table
in proc proc2 adding addrExp r28{0} - 24 to local table
in proc proc2 adding addrExp r28{0} - 28 to local table
in proc proc2 adding addrExp r28{0} - 32 to local table
in proc proc2 adding addrExp r28{0} - 36 to local table
in proc proc2 adding addrExp r28{0} - 32 to local table
in proc proc2 adding addrExp r28{0} - 20 to local table
in proc proc2 adding addrExp r28{0} - 19 to local table
in proc proc2 adding addrExp r28{0} - 18 to local table
in proc proc2 adding addrExp r28{0} - 17 to local table
in proc proc2 adding addrExp r28{0} - 16 to local table
in proc proc2 adding addrExp r28{0} - 15 to local table
in proc proc2 adding addrExp r28{0} - 14 to local table
in proc proc2 adding addrExp r28{0} - 13 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 11 to local table
in proc proc2 adding addrExp r28{0} - 10 to local table
in proc proc2 adding addrExp r28{0} - 9 to local table
in proc proc2 adding addrExp r28{0} - 8 to local table
in proc proc2 adding addrExp r28{0} - 36 to local table
finding final parameters for proc2
potential param r28
found new parameter r28
potential param r29
found new parameter r29
potential param r26
found new parameter r26
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r25
found new parameter r25
potential param r27
found new parameter r27
potential param r31
found new parameter r31
after removing matching assigns (%pc).
finding final parameters for proc3
potential param r24
found new parameter r24
potential param r10
found new parameter r10
potential param r25
found new parameter r25
after removing matching assigns (%pc).
in proc proc8 adding addrExp r28{0} to local table
finding final parameters for proc8
potential param r29
found new parameter r29
potential param r28
found new parameter r28
potential param m[r28{0}]
found new parameter m[r28{0}]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
after removing matching assigns (%pc).
in proc proc4 adding addrExp r28{0} - 4 to local table
in proc proc4 adding addrExp r28{0} - 8 to local table
in proc proc4 adding addrExp r28{0} - 12 to local table
in proc proc4 adding addrExp r28{0} - 16 to local table
in proc proc4 adding addrExp r28{0} - 20 to local table
finding final parameters for proc4
potential param r24
found new parameter r24
after removing matching assigns (%pc).
in proc proc5 adding addrExp r28{0} - 4 to local table
in proc proc5 adding addrExp r28{0} - 8 to local table
in proc proc5 adding addrExp r28{0} - 12 to local table
in proc proc5 adding addrExp r28{0} - 16 to local table
in proc proc5 adding addrExp r28{0} - 20 to local table
finding final parameters for proc5
potential param r24
found new parameter r24
after removing matching assigns (%pc).
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc19 ###
in proc proc19 adding addrExp r28{0} - 4 to local table
in proc proc19 adding addrExp r28{0} - 8 to local table
in proc proc19 adding addrExp r28{0} - 12 to local table
finding final parameters for proc19
potential param r24
found new parameter r24
potential param r27
found new parameter r27
potential param r31
found new parameter r31
potential param r25
found new parameter r25
potential param r9
found new parameter r9
potential param r26
found new parameter r26
after removing matching assigns (%pc).
finding final parameters for proc18
potential param r28
found new parameter r28
potential param r10
found new parameter r10
potential param r24
found new parameter r24
potential param r25
found new parameter r25
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
after removing matching assigns (%pc).
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc6 ###
in proc proc6 adding addrExp r28{0} - 8 to local table
in proc proc6 adding addrExp r28{0} - 12 to local table
in proc proc6 adding addrExp r28{0} - 16 to local table
in proc proc6 adding addrExp r28{0} - 20 to local table
in proc proc6 adding addrExp r28{0} - 24 to local table
in proc proc6 adding addrExp r28{0} - 28 to local table
in proc proc6 adding addrExp r28{0} - 4 to local table
in proc proc6 adding addrExp r28{0} - 32 to local table
in proc proc6 adding addrExp r28{0} - 36 to local table
in proc proc6 adding addrExp r28{0} - 40 to local table
in proc proc6 adding addrExp r28{0} - 16 to local table
in proc proc6 adding addrExp r28{0} - 20 to local table
in proc proc6 adding addrExp r28{0} - 28 to local table
in proc proc6 adding addrExp r28{0} - 24 to local table
in proc proc6 adding addrExp r28{0} - 8 to local table
in proc proc6 adding addrExp r28{0} - 8 to local table
in proc proc6 adding addrExp r28{0} - 8 to local table
in proc proc6 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc6 adding addrExp r28{0} - 8 to local table
in proc proc6 adding addrExp r28{0} - 12 to local table
in proc proc6 adding addrExp r28{0} - 16 to local table
in proc proc6 adding addrExp r28{0} - 20 to local table
in proc proc6 adding addrExp r28{0} - 24 to local table
in proc proc6 adding addrExp r28{0} - 28 to local table
in proc proc6 adding addrExp r28{0} - 32 to local table
in proc proc6 adding addrExp r28{0} - 36 to local table
in proc proc6 adding addrExp r28{0} - 40 to local table
in proc proc6 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc6 adding addrExp r28{0} - 8 to local table
in proc proc6 adding addrExp r28{0} - 12 to local table
in proc proc6 adding addrExp r28{0} - 16 to local table
in proc proc6 adding addrExp r28{0} - 20 to local table
in proc proc6 adding addrExp r28{0} - 24 to local table
in proc proc6 adding addrExp r28{0} - 28 to local table
in proc proc6 adding addrExp r28{0} - 32 to local table
in proc proc6 adding addrExp r28{0} - 36 to local table
in proc proc6 adding addrExp r28{0} - 40 to local table
in proc proc6 adding addrExp r28{0} - 12 to local table
in proc proc6 adding addrExp r28{0} - 12 to local table
in proc proc6 adding addrExp r28{0} - 44 to local table
in proc proc6 adding addrExp r28{0} - 44 to local table
in proc proc6 adding addrExp r28{0} - 48 to local table
in proc proc6 adding addrExp r28{0} - 52 to local table
in proc proc6 adding addrExp r28{0} - 56 to local table
in proc proc6 adding addrExp r28{0} - 60 to local table
finding final parameters for proc6
potential param r28
found new parameter r28
potential param r29
found new parameter r29
potential param r27
found new parameter r27
potential param r30
found new parameter r30
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r31
found new parameter r31
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r25
found new parameter r25
potential param r26
found new parameter r26
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
finding final parameters for proc6
potential param r28
found new parameter r28
potential param r29
found new parameter r29
potential param r27
found new parameter r27
potential param r30
found new parameter r30
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r31
found new parameter r31
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r25
found new parameter r25
potential param r26
found new parameter r26
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
after removing matching assigns (%pc).
in proc proc9 adding addrExp r28{0} - 4 to local table
in proc proc9 adding addrExp r28{0} - 8 to local table
in proc proc9 adding addrExp r28{0} - 12 to local table
in proc proc9 adding addrExp r28{0} - 16 to local table
in proc proc9 adding addrExp r28{0} - 20 to local table
finding final parameters for proc9
potential param r24
found new parameter r24
after removing matching assigns (%pc).
finding final parameters for proc7
after removing matching assigns (%pc).
in proc proc10 adding addrExp r28{0} - 4 to local table
in proc proc10 adding addrExp r28{0} - 8 to local table
in proc proc10 adding addrExp r28{0} - 12 to local table
in proc proc10 adding addrExp r28{0} - 16 to local table
in proc proc10 adding addrExp r28{0} - 20 to local table
finding final parameters for proc10
potential param r24
found new parameter r24
after removing matching assigns (%pc).
finding final parameters for proc11
potential param r24
found new parameter r24
after removing matching assigns (%pc).
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc13 ###
in proc proc13 adding addrExp r28{0} - 8 to local table
in proc proc13 adding addrExp r28{0} - 12 to local table
in proc proc13 adding addrExp r28{0} - 28 to local table
in proc proc13 adding addrExp r28{0} - 32 to local table
in proc proc13 adding addrExp r28{0} - 4 to local table
in proc proc13 adding addrExp r28{0} - 24 to local table
in proc proc13 adding addrExp r28{0} - 16 to local table
in proc proc13 adding addrExp r28{0} - 28 to local table
in proc proc13 adding addrExp r28{0} - 32 to local table
in proc proc13 adding addrExp r28{0} - 12 to local table
in proc proc13 adding addrExp r28{0} - 12 to local table
in proc proc13 adding addrExp r28{0} - 12 to local table
in proc proc13 adding addrExp r28{0} - 8 to local table
in proc proc13 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc13 adding addrExp r28{0} - 8 to local table
in proc proc13 adding addrExp r28{0} - 12 to local table
in proc proc13 adding addrExp r28{0} - 16 to local table
in proc proc13 adding addrExp r28{0} - 24 to local table
in proc proc13 adding addrExp r28{0} - 28 to local table
in proc proc13 adding addrExp r28{0} - 32 to local table
in proc proc13 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc13 adding addrExp r28{0} - 8 to local table
in proc proc13 adding addrExp r28{0} - 12 to local table
in proc proc13 adding addrExp r28{0} - 16 to local table
in proc proc13 adding addrExp r28{0} - 24 to local table
in proc proc13 adding addrExp r28{0} - 28 to local table
in proc proc13 adding addrExp r28{0} - 32 to local table
in proc proc13 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc13 adding addrExp r28{0} - 8 to local table
in proc proc13 adding addrExp r28{0} - 12 to local table
in proc proc13 adding addrExp r28{0} - 16 to local table
in proc proc13 adding addrExp r28{0} - 24 to local table
in proc proc13 adding addrExp r28{0} - 28 to local table
in proc proc13 adding addrExp r28{0} - 32 to local table
in proc proc13 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc13 adding addrExp r28{0} - 8 to local table
in proc proc13 adding addrExp r28{0} - 12 to local table
in proc proc13 adding addrExp r28{0} - 16 to local table
in proc proc13 adding addrExp r28{0} - 24 to local table
in proc proc13 adding addrExp r28{0} - 28 to local table
in proc proc13 adding addrExp r28{0} - 32 to local table
in proc proc13 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc13 adding addrExp r28{0} - 8 to local table
in proc proc13 adding addrExp r28{0} - 12 to local table
in proc proc13 adding addrExp r28{0} - 16 to local table
in proc proc13 adding addrExp r28{0} - 24 to local table
in proc proc13 adding addrExp r28{0} - 28 to local table
in proc proc13 adding addrExp r28{0} - 32 to local table
in proc proc13 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc13 adding addrExp r28{0} - 8 to local table
in proc proc13 adding addrExp r28{0} - 12 to local table
in proc proc13 adding addrExp r28{0} - 16 to local table
in proc proc13 adding addrExp r28{0} - 24 to local table
in proc proc13 adding addrExp r28{0} - 28 to local table
in proc proc13 adding addrExp r28{0} - 32 to local table
in proc proc13 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc13 adding addrExp r28{0} - 8 to local table
in proc proc13 adding addrExp r28{0} - 12 to local table
in proc proc13 adding addrExp r28{0} - 16 to local table
in proc proc13 adding addrExp r28{0} - 24 to local table
in proc proc13 adding addrExp r28{0} - 28 to local table
in proc proc13 adding addrExp r28{0} - 32 to local table
finding final parameters for proc13
potential param r28
found new parameter r28
potential param r29
found new parameter r29
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r30
found new parameter r30
potential param r27
found new parameter r27
potential param r31
found new parameter r31
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param tmpb
potential param r25
found new parameter r25
assgn  110 *32* %pc := m[0x4030b4]
is readonly
assgn  123 *32* %pc := m[0x40301c]
is readonly
assgn  137 *32* %pc := m[0x403018]
is readonly
assgn  147 *32* %pc := m[0x403000]
is readonly
assgn  157 *32* %pc := m[0x403010]
is readonly
assgn  165 *32* %pc := m[0x4030bc]
is readonly
assgn  189 *32* %pc := m[0x4030b4]
is readonly
assgn  200 *32* %pc := m[0x403014]
is readonly
assgn  208 *32* %pc := m[0x403008]
is readonly
assgn  214 *32* %pc := m[0x40300c]
is readonly
assgn  220 *32* %pc := m[0x403004]
is readonly
assgn  228 *32* %pc := m[0x4030bc]
is readonly
assgn  263 *32* %pc := m[0x403054]
is readonly
assgn  269 *32* %pc := m[0x403068]
is readonly
assgn  282 *32* %pc := m[0x4030b8]
is readonly
assgn  300 *32* %pc := m[0x4030c0]
is readonly
after removing matching assigns (%pc).
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc23 ###
in proc proc23 adding addrExp r28{0} - 4 to local table
in proc proc23 adding addrExp r28{0} - 8 to local table
in proc proc23 adding addrExp r28{0} - 12 to local table
in proc proc23 adding addrExp r28{0} - 16 to local table
in proc proc23 adding addrExp r28{0} - 25 to local table
in proc proc23 adding addrExp r28{0} - 32 to local table
in proc proc23 adding addrExp r28{0} - 36 to local table
in proc proc23 adding addrExp r28{0} - 40 to local table
in proc proc23 adding addrExp r28{0} - 20 to local table
in proc proc23 adding addrExp r28{0} - 40 to local table
in proc proc23 adding addrExp r28{0} - 40 to local table
in proc proc23 adding addrExp r28{0} - 40 to local table
in proc proc23 adding addrExp r28{0} - 25 to local table
in proc proc23 adding addrExp r28{0} - 16 to local table
in proc proc23 adding addrExp r28{0} - 40 to local table
in proc proc23 adding addrExp r28{0} - 12 to local table
in proc proc23 adding addrExp r28{0} - 40 to local table
in proc proc23 adding addrExp r28{0} - 8 to local table
in proc proc23 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc23 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc23 adding addrExp r28{0} - 8 to local table
in proc proc23 adding addrExp r28{0} - 12 to local table
in proc proc23 adding addrExp r28{0} - 16 to local table
in proc proc23 adding addrExp r28{0} - 25 to local table
in proc proc23 adding addrExp r28{0} - 40 to local table
finding final parameters for proc23
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r31
found new parameter r31
potential param r27
found new parameter r27
potential param r11
found new parameter r11
potential param tmpb
potential param r9
found new parameter r9
potential param r25
found new parameter r25
after removing matching assigns (%pc).
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc17 ###
in proc proc17 adding addrExp r28{0} - 8 to local table
in proc proc17 adding addrExp r28{0} - 4 to local table
in proc proc17 adding addrExp r28{0} - 8 to local table
in proc proc17 adding addrExp r28{0} - 8 to local table
finding final parameters for proc17
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param r31
found new parameter r31
potential param r8
found new parameter r8
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r24
found new parameter r24
potential param r25
found new parameter r25
potential param r26
found new parameter r26
potential param r27
found new parameter r27
potential param r29
found new parameter r29
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc12 ###
in proc proc12 adding addrExp r28{0} - 4 to local table
in proc proc12 adding addrExp r28{0} - 8 to local table
in proc proc12 adding addrExp r28{0} - 12 to local table
in proc proc12 adding addrExp r28{0} - 16 to local table
in proc proc12 adding addrExp r28{0} - 20 to local table
in proc proc12 adding addrExp r28{0} - 24 to local table
finding final parameters for proc12
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r27
found new parameter r27
potential param r8
found new parameter r8
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r24
found new parameter r24
potential param r25
found new parameter r25
potential param r26
found new parameter r26
potential param r31
found new parameter r31
after removing matching assigns (%pc).
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc20 ###
in proc proc20 adding addrExp r28{0} - 4 to local table
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 12 to local table
in proc proc20 adding addrExp r28{0} - 16 to local table
finding final parameters for proc20
potential param r24
found new parameter r24
potential param r31
found new parameter r31
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc14 ###
in proc proc14 adding addrExp r28{0} - 4 to local table
in proc proc14 adding addrExp r28{0} - 8 to local table
in proc proc14 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 * does not resolve to compound or array
in proc proc14 adding addrExp r28{0} - 8 to local table
in proc proc14 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 * does not resolve to compound or array
in proc proc14 adding addrExp r28{0} - 8 to local table
finding final parameters for proc14
potential param r30
found new parameter r30
potential param r28
found new parameter r28
potential param r27
found new parameter r27
potential param r31
found new parameter r31
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r25
found new parameter r25
potential param r26
found new parameter r26
potential param r29
found new parameter r29
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc21 ###
finding final parameters for proc21
potential param r30
found new parameter r30
potential param r24
found new parameter r24
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc15 ###
in proc proc15 adding addrExp r28{0} - 20 to local table
in proc proc15 adding addrExp r28{0} - 24 to local table
in proc proc15 adding addrExp r28{0} - 16 to local table
in proc proc15 adding addrExp r28{0} - 12 to local table
in proc proc15 adding addrExp r28{0} - 4 to local table
in proc proc15 adding addrExp r28{0} - 8 to local table
in proc proc15 adding addrExp r28{0} - 12 to local table
in proc proc15 adding addrExp r28{0} - 16 to local table
in proc proc15 adding addrExp r28{0} - 20 to local table
in proc proc15 adding addrExp r28{0} - 24 to local table
in proc proc15 adding addrExp r28{0} - 20 to local table
in proc proc15 adding addrExp r28{0} - 24 to local table
in proc proc15 adding addrExp r28{0} - 16 to local table
in proc proc15 adding addrExp r28{0} - 20 to local table
in proc proc15 adding addrExp r28{0} - 24 to local table
in proc proc15 adding addrExp r28{0} - 12 to local table
in proc proc15 adding addrExp r28{0} - 16 to local table
in proc proc15 adding addrExp r28{0} - 20 to local table
in proc proc15 adding addrExp r28{0} - 24 to local table
finding final parameters for proc15
potential param r28
found new parameter r28
potential param r24
found new parameter r24
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r26
found new parameter r26
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc16 ###
in proc proc16 adding addrExp r28{0} - 8 to local table
in proc proc16 adding addrExp r28{0} - 12 to local table
in proc proc16 adding addrExp r28{0} - 16 to local table
in proc proc16 adding addrExp r28{0} - 20 to local table
in proc proc16 adding addrExp r28{0} - 28 to local table
in proc proc16 adding addrExp r28{0} - 32 to local table
in proc proc16 adding addrExp r28{0} - 4 to local table
in proc proc16 adding addrExp r28{0} - 24 to local table
in proc proc16 adding addrExp r28{0} - 8 to local table
in proc proc16 adding addrExp r28{0} - 12 to local table
in proc proc16 adding addrExp r28{0} - 16 to local table
in proc proc16 adding addrExp r28{0} - 20 to local table
in proc proc16 adding addrExp r28{0} - 28 to local table
in proc proc16 adding addrExp r28{0} - 32 to local table
in proc proc16 adding addrExp r28{0} - 12 to local table
in proc proc16 adding addrExp r28{0} - 28 to local table
in proc proc16 adding addrExp r28{0} - 32 to local table
in proc proc16 adding addrExp r28{0} - 8 to local table
in proc proc16 adding addrExp r28{0} - 12 to local table
in proc proc16 adding addrExp r28{0} - 16 to local table
in proc proc16 adding addrExp r28{0} - 20 to local table
in proc proc16 adding addrExp r28{0} - 8 to local table
in proc proc16 adding addrExp r28{0} - 16 to local table
in proc proc16 adding addrExp r28{0} - 8 to local table
in proc proc16 adding addrExp r28{0} - 16 to local table
in proc proc16 adding addrExp r28{0} - 20 to local table
in proc proc16 adding addrExp r28{0} - 20 to local table
in proc proc16 adding addrExp r28{0} - 8 to local table
in proc proc16 adding addrExp r28{0} - 16 to local table
in proc proc16 adding addrExp r28{0} - 8 to local table
in proc proc16 adding addrExp r28{0} - 16 to local table
in proc proc16 adding addrExp r28{0} - 20 to local table
in proc proc16 adding addrExp r28{0} - 12 to local table
in proc proc16 adding addrExp r28{0} - 8 to local table
in proc proc16 adding addrExp r28{0} - 12 to local table
in proc proc16 adding addrExp r28{0} - 16 to local table
in proc proc16 adding addrExp r28{0} - 20 to local table
in proc proc16 adding addrExp r28{0} - 32 to local table
finding final parameters for proc16
potential param r28
found new parameter r28
potential param r31
found new parameter r31
potential param r3
found new parameter r3
potential param r27
found new parameter r27
potential param tmph
potential param m[r28{0} - 8]
found new parameter m[r28{0} - 8]
potential param m[r28{0} - 16]
found new parameter m[r28{0} - 16]
potential param m[r28{0} - 20]
found new parameter m[r28{0} - 20]
assgn   36 *32* %pc := m[0x40305c]
is readonly
assgn   44 *32* %pc := m[0x403028]
is readonly
assgn   70 *32* %pc := m[0x403044]
is readonly
assgn   79 *32* r24 := m[44]
assgn   97 *32* %pc := m[0x403024]
is readonly
assgn  258 *32* %pc := m[0x403048]
is readonly
assgn  288 *32* r30 := m[0x4030c4]
is readonly
assgn  380 *32* %pc := m[0x403070]
is readonly
assgn  482 *32* %pc := m[0x403090]
is readonly
assgn  509 *32* r30 := m[0x4030c4]
is readonly
assgn  555 *32* %pc := m[0x40308c]
is readonly
assgn  563 *32* %pc := m[0x403088]
is readonly
assgn  565 *32* r30 := m[0x4030ac]
is readonly
assgn  578 *32* %pc := m[0x403094]
is readonly
assgn  590 *32* %pc := m[0x4030a0]
is readonly
assgn  785 *32* %pc := m[0x40307c]
is readonly
assgn  800 *32* %pc := m[0x403098]
is readonly
assgn  812 *32* %pc := m[0x40303c]
is readonly
assgn  867 *32* %pc := m[0x4030a4]
is readonly
assgn  876 *32* %pc := m[0x403084]
is readonly
assgn  889 *32* %pc := m[0x40309c]
is readonly
assgn 1008 *32* %pc := m[0x4030b4]
is readonly
assgn 1022 *32* %pc := m[0x4030a8]
is readonly
assgn 1115 *32* %pc := m[0x403078]
is readonly
assgn 1130 *32* %pc := m[0x403070]
is readonly
assgn 1141 *32* %pc := m[0x403074]
is readonly
assgn 1306 *32* %pc := m[0x403080]
is readonly
assgn 1312 *32* %pc := m[0x4030b0]
is readonly
assgn 1323 *32* %pc := m[0x403048]
is readonly
assgn 1329 *32* %pc := m[0x403058]
is readonly
assgn 1340 *32* %pc := m[0x403030]
is readonly
assgn 1366 *32* %pc := m[0x403064]
is readonly
assgn 1374 *32* %pc := m[0x403038]
is readonly
assgn 1429 *32* %pc := m[0x403050]
is readonly
assgn 1438 *32* %pc := m[0x40304c]
is readonly
assgn 1524 *32* %pc := m[0x403034]
is readonly
assgn 1537 *32* %pc := m[0x403060]
is readonly
assgn 1653 *32* %pc := m[0x40302c]
is readonly
assgn 1680 *32* %pc := m[0x403040]
is readonly
after removing matching assigns (%pc).
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with /*signed?*/char; allowing temporarily
size 0x8 meet with size 0x20!
integer size 0x40 meet with SizeType size 0x20!
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
size 0x10 meet with size 0x20!
size 0x10 meet with size 0x20!
size 0x10 meet with size 0x20!
size 0x20 meet with size 0x10!
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
size 0x10 meet with size 0x20!
integer size 0x40 meet with SizeType size 0x20!
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
size 0x20 meet with size 0x10!
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
size 0x20 meet with size 0x10!
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
size 0x10 meet with size 0x20!
integer size 0x40 meet with SizeType size 0x20!
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
size 0x20 meet with size 0x10!
size 0x10 meet with size 0x20!
size 0x10 meet with size 0x20!
size 0x20 meet with size 0x10!
size 0x10 meet with size 0x20!
size 0x10 meet with size 0x20!
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
size 0x10 meet with size 0x20!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
size 0x10 meet with size 0x20!
size 0x10 meet with size 0x20!
size 0x10 meet with size 0x20!
size 0x10 meet with size 0x20!
size 0x10 meet with size 0x20!
size 0x10 meet with size 0x20!
size 0x10 meet with size 0x20!
size 0x10 meet with size 0x20!
size 0x10 meet with size 0x20!
size 0x10 meet with size 0x20!
size 0x10 meet with size 0x20!
size 0x10 meet with size 0x20!
size 0x10 meet with size 0x20!
size 0x10 meet with size 0x20!
size 0x20 meet with size 0x10!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
size 0x10 meet with size 0x20!
size 0x10 meet with size 0x20!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
size 0x10 meet with size 0x20!
size 0x10 meet with size 0x20!
size 0x20 meet with size 0x10!
size 0x10 meet with size 0x20!
size 0x10 meet with size 0x20!
size 0x10 meet with size 0x20!
size 0x10 meet with size 0x20!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
size 0x10 meet with size 0x20!
size 0x10 meet with size 0x20!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
size 0x10 meet with size 0x20!
size 0x10 meet with size 0x20!
size 0x10 meet with size 0x20!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
size 0x10 meet with size 0x20!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
size 0x10 meet with size 0x20!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
size 0x10 meet with size 0x20!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
size 0x10 meet with size 0x20!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
size 0x10 meet with size 0x20!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
size 0x10 meet with size 0x20!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
size 0x10 meet with size 0x20!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
size 0x10 meet with size 0x20!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
size 0x10 meet with size 0x20!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
size 0x10 meet with size 0x20!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
size 0x10 meet with size 0x20!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
size 0x10 meet with size 0x20!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
size 0x10 meet with size 0x20!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
size 0x10 meet with size 0x20!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
size 0x10 meet with size 0x20!
size 0x20 meet with size 0x10!
size 0x20 meet with size 0x10!
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
in proc _start adding addrExp r28{0} - 4 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 12 to local table
finding final parameters for _start
potential param r28
found new parameter r28
potential param r27
found new parameter r27
potential param r30
found new parameter r30
potential param r31
found new parameter r31
potential param r1
found new parameter r1
potential param r3
found new parameter r3
potential param r10
found new parameter r10
potential param r11
found new parameter r11
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc1 ###
in proc proc1 adding addrExp r28{0} to local table
integer size 0x40 meet with SizeType size 0x20!
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 12 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc2 ###
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc6 ###
in proc proc6 adding addrExp r28{0} - 16 to local table
in proc proc6 adding addrExp r28{0} - 20 to local table
in proc proc6 adding addrExp r28{0} - 8 to local table
in proc proc6 adding addrExp r28{0} - 8 to local table
in proc proc6 adding addrExp r28{0} - 8 to local table
in proc proc8 adding addrExp r28{0} to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc12 ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc13 ###
in proc proc13 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc13 adding addrExp r28{0} - 24 to local table
in proc proc13 adding addrExp r28{0} - 16 to local table
in proc proc13 adding addrExp r28{0} - 28 to local table
in proc proc13 adding addrExp r28{0} - 32 to local table
in proc proc13 adding addrExp r28{0} - 12 to local table
in proc proc13 adding addrExp r28{0} - 12 to local table
in proc proc13 adding addrExp r28{0} - 12 to local table
in proc proc13 adding addrExp r28{0} - 8 to local table
in proc proc13 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc13 adding addrExp r28{0} - 8 to local table
in proc proc13 adding addrExp r28{0} - 12 to local table
in proc proc13 adding addrExp r28{0} - 16 to local table
in proc proc13 adding addrExp r28{0} - 24 to local table
in proc proc13 adding addrExp r28{0} - 28 to local table
in proc proc13 adding addrExp r28{0} - 32 to local table
in proc proc13 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc13 adding addrExp r28{0} - 8 to local table
in proc proc13 adding addrExp r28{0} - 12 to local table
in proc proc13 adding addrExp r28{0} - 16 to local table
in proc proc13 adding addrExp r28{0} - 24 to local table
in proc proc13 adding addrExp r28{0} - 28 to local table
in proc proc13 adding addrExp r28{0} - 32 to local table
in proc proc13 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc13 adding addrExp r28{0} - 8 to local table
in proc proc13 adding addrExp r28{0} - 12 to local table
in proc proc13 adding addrExp r28{0} - 16 to local table
in proc proc13 adding addrExp r28{0} - 24 to local table
in proc proc13 adding addrExp r28{0} - 28 to local table
in proc proc13 adding addrExp r28{0} - 32 to local table
in proc proc13 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc13 adding addrExp r28{0} - 8 to local table
in proc proc13 adding addrExp r28{0} - 12 to local table
in proc proc13 adding addrExp r28{0} - 16 to local table
in proc proc13 adding addrExp r28{0} - 24 to local table
in proc proc13 adding addrExp r28{0} - 28 to local table
in proc proc13 adding addrExp r28{0} - 32 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc14 ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc15 ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc16 ###
in proc proc16 adding addrExp r28{0} - 8 to local table
in proc proc16 adding addrExp r28{0} - 16 to local table
in proc proc16 adding addrExp r28{0} - 20 to local table
in proc proc16 adding addrExp r28{0} - 12 to local table
in proc proc16 adding addrExp r28{0} - 8 to local table
in proc proc16 adding addrExp r28{0} - 12 to local table
in proc proc16 adding addrExp r28{0} - 16 to local table
in proc proc16 adding addrExp r28{0} - 20 to local table
in proc proc16 adding addrExp r28{0} - 8 to local table
in proc proc16 adding addrExp r28{0} - 16 to local table
in proc proc16 adding addrExp r28{0} - 8 to local table
in proc proc16 adding addrExp r28{0} - 16 to local table
in proc proc16 adding addrExp r28{0} - 20 to local table
in proc proc16 adding addrExp r28{0} - 8 to local table
in proc proc16 adding addrExp r28{0} - 16 to local table
in proc proc16 adding addrExp r28{0} - 8 to local table
in proc proc16 adding addrExp r28{0} - 16 to local table
in proc proc16 adding addrExp r28{0} - 20 to local table
in proc proc16 adding addrExp r28{0} - 12 to local table
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc17 ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc19 ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc20 ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc21 ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc22 ###
in proc proc22 adding addrExp r28{0} - 16 to local table
in proc proc22 adding addrExp r28{0} - 16 to local table
in proc proc22 adding addrExp r28{0} - 16 to local table
in proc proc22 adding addrExp r28{0} - 8 to local table
in proc proc22 adding addrExp r28{0} - 12 to local table
in proc proc22 adding addrExp r28{0} - 8 to local table
in proc proc22 adding addrExp r28{0} - 12 to local table
in proc proc22 adding addrExp r28{0} - 8 to local table
in proc proc22 adding addrExp r28{0} - 8 to local table
in proc proc22 adding addrExp r28{0} - 12 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc23 ###
finding final parameters for proc1
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param r27
found new parameter r27
potential param r30
found new parameter r30
potential param r31
found new parameter r31
potential param m[r28{0}]
found new parameter m[r28{0}]
finding final parameters for _start
potential param r28
found new parameter r28
potential param r27
found new parameter r27
potential param r30
found new parameter r30
potential param r31
found new parameter r31
potential param r1
found new parameter r1
potential param r3
found new parameter r3
potential param r10
found new parameter r10
potential param r11
found new parameter r11
finding final parameters for _start
potential param r28
found new parameter r28
potential param r27
found new parameter r27
potential param r30
found new parameter r30
potential param r31
found new parameter r31
potential param r1
found new parameter r1
potential param r3
found new parameter r3
potential param r10
found new parameter r10
potential param r11
found new parameter r11
finding final parameters for proc7
finding final parameters for _start
potential param r28
found new parameter r28
potential param r27
found new parameter r27
potential param r30
found new parameter r30
potential param r31
found new parameter r31
potential param r1
found new parameter r1
potential param r3
found new parameter r3
potential param r10
found new parameter r10
potential param r11
found new parameter r11
finding final parameters for proc8
potential param r29
found new parameter r29
potential param r28
found new parameter r28
potential param m[r28{0}]
found new parameter m[r28{0}]
finding final parameters for _start
potential param r28
found new parameter r28
potential param r27
found new parameter r27
potential param r30
found new parameter r30
potential param r31
found new parameter r31
potential param r1
found new parameter r1
potential param r3
found new parameter r3
potential param r10
found new parameter r10
potential param r11
found new parameter r11
finding final parameters for proc12
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r27
found new parameter r27
potential param r8
found new parameter r8
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r24
found new parameter r24
potential param r25
found new parameter r25
potential param r26
found new parameter r26
potential param r31
found new parameter r31
finding final parameters for _start
potential param r28
found new parameter r28
potential param r27
found new parameter r27
potential param r30
found new parameter r30
potential param r31
found new parameter r31
potential param r1
found new parameter r1
potential param r3
found new parameter r3
potential param r10
found new parameter r10
potential param r11
found new parameter r11
finding final parameters for proc13
potential param r28
found new parameter r28
potential param r29
found new parameter r29
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r30
found new parameter r30
potential param r27
found new parameter r27
potential param r31
found new parameter r31
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param tmpb
finding final parameters for _start
potential param r28
found new parameter r28
potential param r27
found new parameter r27
potential param r30
found new parameter r30
potential param r31
found new parameter r31
potential param r1
found new parameter r1
potential param r3
found new parameter r3
potential param r10
found new parameter r10
potential param r11
found new parameter r11
finding final parameters for proc12
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r27
found new parameter r27
potential param r8
found new parameter r8
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r24
found new parameter r24
potential param r25
found new parameter r25
potential param r26
found new parameter r26
potential param r31
found new parameter r31
finding final parameters for _start
potential param r28
found new parameter r28
potential param r27
found new parameter r27
potential param r30
found new parameter r30
potential param r31
found new parameter r31
potential param r1
found new parameter r1
potential param r3
found new parameter r3
potential param r10
found new parameter r10
potential param r11
found new parameter r11
finding final parameters for proc14
potential param r30
found new parameter r30
potential param r28
found new parameter r28
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r26
found new parameter r26
potential param r29
found new parameter r29
finding final parameters for _start
potential param r28
found new parameter r28
potential param r27
found new parameter r27
potential param r30
found new parameter r30
potential param r31
found new parameter r31
potential param r1
found new parameter r1
potential param r3
found new parameter r3
potential param r10
found new parameter r10
potential param r11
found new parameter r11
finding final parameters for proc15
potential param r28
found new parameter r28
potential param r24
found new parameter r24
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r26
found new parameter r26
finding final parameters for _start
potential param r28
found new parameter r28
potential param r27
found new parameter r27
potential param r30
found new parameter r30
potential param r31
found new parameter r31
potential param r1
found new parameter r1
potential param r3
found new parameter r3
potential param r10
found new parameter r10
potential param r11
found new parameter r11
finding final parameters for proc17
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param r31
found new parameter r31
potential param r8
found new parameter r8
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r24
found new parameter r24
potential param r25
found new parameter r25
potential param r26
found new parameter r26
potential param r27
found new parameter r27
potential param r29
found new parameter r29
finding final parameters for proc12
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r27
found new parameter r27
potential param r8
found new parameter r8
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r24
found new parameter r24
potential param r25
found new parameter r25
potential param r26
found new parameter r26
potential param r31
found new parameter r31
finding final parameters for proc18
potential param r28
found new parameter r28
potential param r10
found new parameter r10
potential param r24
found new parameter r24
potential param r25
found new parameter r25
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for proc6
potential param r28
found new parameter r28
potential param r29
found new parameter r29
potential param r27
found new parameter r27
potential param r30
found new parameter r30
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r31
found new parameter r31
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r25
found new parameter r25
potential param r26
found new parameter r26
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
finding final parameters for proc12
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r27
found new parameter r27
potential param r8
found new parameter r8
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r24
found new parameter r24
potential param r25
found new parameter r25
potential param r26
found new parameter r26
potential param r31
found new parameter r31
finding final parameters for proc20
potential param r24
found new parameter r24
potential param r31
found new parameter r31
finding final parameters for proc14
potential param r30
found new parameter r30
potential param r28
found new parameter r28
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r26
found new parameter r26
potential param r29
found new parameter r29
finding final parameters for proc21
potential param r30
found new parameter r30
potential param r24
found new parameter r24
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for proc15
potential param r28
found new parameter r28
potential param r24
found new parameter r24
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r26
found new parameter r26
finding final parameters for proc22
potential param r28
found new parameter r28
potential param r31
found new parameter r31
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for proc2
potential param r28
found new parameter r28
potential param r29
found new parameter r29
potential param r26
found new parameter r26
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r25
found new parameter r25
potential param r27
found new parameter r27
potential param r31
found new parameter r31
local eax has type unsigned int that doesn't agree with type of define __size32 of a library, why?
local ecx has type unsigned long long that doesn't agree with type of define void of a library, why?
local edx has type __size32 that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local ecx has type void that doesn't agree with type of define /*signed?*/int of a library, why?
local ecx has type /*signed?*/int that doesn't agree with type of define __size32 of a library, why?
local edx has type void that doesn't agree with type of define __size32 of a library, why?
local eax has type __size32 that doesn't agree with type of define unsigned long long of a library, why?
local ecx has type __size32 that doesn't agree with type of define union { /*signed?*/int * x805; unsigned long long x806; } of a library, why?
local edx has type __size32 that doesn't agree with type of define unsigned int of a library, why?
local eax_1 has type __size32 * that doesn't agree with type of define __size32 of a library, why?
local ecx has type union { /*signed?*/int * x805; unsigned long long x806; } that doesn't agree with type of define __size32 of a library, why?
local edx has type unsigned int that doesn't agree with type of define __size32 of a library, why?
local ecx has type __size32 that doesn't agree with type of define void of a library, why?
local edx has type __size32 that doesn't agree with type of define void of a library, why?
local ecx has type void that doesn't agree with type of define __size32 of a library, why?
local edx has type void that doesn't agree with type of define __size32 of a library, why?
local ecx has type __size32 that doesn't agree with type of define unsigned long long of a library, why?
local edx has type __size32 that doesn't agree with type of define unsigned int of a library, why?
local ecx has type unsigned long long that doesn't agree with type of define void of a library, why?
local edx has type unsigned int that doesn't agree with type of define void of a library, why?
local eax has type unsigned long long that doesn't agree with type of define union { __size32 * x789; unsigned long long x790; } of a library, why?
local ecx has type void that doesn't agree with type of define union { /*signed?*/int * x805; unsigned long long x806; } of a library, why?
local edx has type void that doesn't agree with type of define unsigned int of a library, why?
local eax has type union { __size32 * x789; unsigned long long x790; } that doesn't agree with type of define __size32 of a library, why?
local ecx has type union { /*signed?*/int * x805; unsigned long long x806; } that doesn't agree with type of define void of a library, why?
local edx has type unsigned int that doesn't agree with type of define void of a library, why?
local eax has type __size32 that doesn't agree with type of define unsigned long long of a library, why?
local edx has type void that doesn't agree with type of define unsigned int of a library, why?
local edx has type unsigned int that doesn't agree with type of define void of a library, why?
local eax has type unsigned long long that doesn't agree with type of define union { __size32 * x789; unsigned long long x790; } of a library, why?
local ecx has type void that doesn't agree with type of define union { /*signed?*/int * x805; unsigned long long x806; } of a library, why?
local edx has type void that doesn't agree with type of define unsigned int of a library, why?
local eax has type union { __size32 * x789; unsigned long long x790; } that doesn't agree with type of define __size32 of a library, why?
local ecx has type union { /*signed?*/int * x805; unsigned long long x806; } that doesn't agree with type of define void of a library, why?
local edx has type unsigned int that doesn't agree with type of define void of a library, why?
local eax has type __size32 that doesn't agree with type of define unsigned int of a library, why?
local ecx has type void that doesn't agree with type of define void * of a library, why?
local edx has type void that doesn't agree with type of define unsigned int of a library, why?
local eax has type unsigned int that doesn't agree with type of define __size32 of a library, why?
local ecx has type void * that doesn't agree with type of define void of a library, why?
local edx has type unsigned int that doesn't agree with type of define void of a library, why?
local eax has type __size32 that doesn't agree with type of define unsigned int of a library, why?
local ecx has type void that doesn't agree with type of define void * of a library, why?
local edx has type void that doesn't agree with type of define unsigned int of a library, why?
local eax has type unsigned int that doesn't agree with type of define __size32 of a library, why?
local ecx has type void * that doesn't agree with type of define void of a library, why?
local edx has type unsigned int that doesn't agree with type of define void of a library, why?
local eax has type __size32 that doesn't agree with type of define unsigned int of a library, why?
local ecx has type void that doesn't agree with type of define void * of a library, why?
local edx has type void that doesn't agree with type of define unsigned int of a library, why?
local eax has type unsigned int that doesn't agree with type of define __size32 of a library, why?
local ecx has type void * that doesn't agree with type of define __size32 of a library, why?
local edx has type unsigned int that doesn't agree with type of define __size32 of a library, why?
local eax has type __size32 that doesn't agree with type of define union { __size32 * x789; unsigned long long x790; } of a library, why?
local ecx has type __size32 that doesn't agree with type of define union { /*signed?*/int * x805; unsigned long long x806; } of a library, why?
local edx has type __size32 that doesn't agree with type of define unsigned int of a library, why?
local eax has type union { __size32 * x789; unsigned long long x790; } that doesn't agree with type of define __size32 * of a library, why?
local ecx has type union { /*signed?*/int * x805; unsigned long long x806; } that doesn't agree with type of define void of a library, why?
local ecx has type void that doesn't agree with type of define unsigned long long of a library, why?
local edx has type unsigned int that doesn't agree with type of define __size32 of a library, why?
local eax_1 has type __size32 that doesn't agree with type of define unsigned long long of a library, why?
local ecx has type unsigned int that doesn't agree with type of define void of a library, why?
local edx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local eax has type __size32 that doesn't agree with type of define unsigned long long of a library, why?
local ecx has type void that doesn't agree with type of define unsigned int of a library, why?
local edx has type void that doesn't agree with type of define /*signed?*/int of a library, why?
local esp_3 has type union { unsigned int * x357; /*signed?*/int x358; } that doesn't agree with type of define void * of a library, why?
local ecx has type unsigned int that doesn't agree with type of define void of a library, why?
local edx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local ecx has type void that doesn't agree with type of define unsigned int of a library, why?
local edx has type void that doesn't agree with type of define /*signed?*/int of a library, why?
local ecx has type unsigned int that doesn't agree with type of define void of a library, why?
local edx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local eax has type unsigned long long that doesn't agree with type of define /*signed?*/int of a library, why?
local ecx has type void that doesn't agree with type of define unsigned int of a library, why?
local edx has type void that doesn't agree with type of define /*signed?*/int of a library, why?
local esp_4 has type union { unsigned int * x357; /*signed?*/int x358; } that doesn't agree with type of define __size32 * of a library, why?
local eax has type /*signed?*/int that doesn't agree with type of define __size32 of a library, why?
local ecx has type unsigned int that doesn't agree with type of define void of a library, why?
local edx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local eax has type __size32 that doesn't agree with type of define /*signed?*/int of a library, why?
local ecx has type void that doesn't agree with type of define unsigned int of a library, why?
local edx has type void that doesn't agree with type of define /*signed?*/int of a library, why?
dest is not lib
call:    8 {*32* eax_2, *32** esp_1, *32** ebp_1} := CALL proc1(
                *j32* local0 := 252
                *32* ebx := param5
                *32** esi := param6
                *32** edi := param7
              )
              Reaching definitions: r1=r1{0},   r3=r3{0},   r10=r10{0},   r11=r11{0},   r27=r27{0},   r28=r28{0} - 12,
                r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=252,   m[r28{0} - 8]=0x4031b8,   m[r28{0} - 12]=%pc,
                tmpb=tmpb{0},   tmph=tmph{0}
              Live variables: ebp_1,  esp_1 in proc _start
result:    0 *32** esp_1 := -
result:    0 *32** ebp_1 := -
dest is not lib
call:   37 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL TlsGetValue(
                *DWORD* m[esp_1 - 4] := m[esp_1 - 4]
              )
              Reaching definitions: r0=truncu(32,16,zfill(32,64,r24{9}) / r25{17}),   r1=r1{0},
                r2=truncu(32,16,zfill(32,64,r24{9}) % r25{17}),   r3=r3{0},
                r8=truncu(32,8,zfill(32,64,r24{9}) / r25{17}),   r9=truncu(32,8,r25{17}),   r10=r10{0},   r11=r11{0},
                r24=zfill(32,64,r24{9}) / r25{17},   r25=r25{17},   r26=zfill(32,64,r24{9}) % r25{17},   r27=0,
                r28=r28{8} - 8,   r29=r29{8},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=252,   m[r28{0} - 8]=0x4031b8
                m[r28{0} - 12]=%pc,   tmp1=tmp1{29},   tmp2=r25{17},   tmpb=tmpb{0},   tmph=tmph{0},
                tmpl=zfill(32,64,r24{9}),   %flags=SUBFLAGS32( zfill(32,64,r24{9}) % r25{17}, 20, tmp1{29} ),
                %ZF=tmp1{29} = 0,   %CF=(zfill(32,64,r24{9}) % r25{17}) <u 20
              Live variables:  in proc _start
dest is not lib
call:   45 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL TlsSetValue(
                *DWORD* m[esp_1 - 8] := m[esp_1 - 8]
                *LPVOID* m[esp_1 - 4] := m[esp_1 - 4]
              )
              Reaching definitions: r0=truncu(32,16,zfill(32,64,r24{9}) / r25{17}),   r1=r1{0},
                r2=truncu(32,16,zfill(32,64,r24{9}) % r25{17}),   r3=r3{0},
                r8=truncu(32,8,zfill(32,64,r24{9}) / r25{17}),   r9=truncu(32,8,r25{17}),   r10=r10{0},   r11=r11{0},
                r24=r24{37},   r25=r25{37},   r26=r26{37},   r27=0,   r28=r28{8} - 12,   r29=r29{8},   r30=r30{0},
                r31=r31{0},   m[r28{0} - 4]=252,   m[r28{0} - 8]=0x4031b8,   m[r28{0} - 12]=%pc,   tmp1=tmp1{29},
                tmp2=r25{17},   tmpb=tmpb{0},   tmph=tmph{0},   tmpl=zfill(32,64,r24{9}),
                %flags=SUBFLAGS32( zfill(32,64,r24{9}) % r25{17}, 20, tmp1{29} ),   %ZF=tmp1{29} = 0,
                %CF=(zfill(32,64,r24{9}) % r25{17}) <u 20
              Live variables:  in proc _start
dest is not lib
call:   71 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetSystemInfo(
                *SYSTEM_INFO** m[esp_1 - 4] := m[esp_1 - 4]
              )
              Reaching definitions: r0=truncu(32,16,r29{8} - 224),   r1=r1{0},
                r2=truncu(32,16,zfill(32,64,r24{9}) % r25{17}),   r3=r3{0},   r8=truncu(32,8,r29{8} - 224),
                r9=r9{1962},   r10=r10{0},   r11=r11{0},   r24=r29{8} - 224,   r25=r25{1963},   r26=r26{45},   r27=0,
                r28=r28{8} - 8,   r29=r29{8},   r30=r30{0},   r31=r31{1964},   m[r28{0} - 4]=252,
                m[r28{0} - 8]=0x4031b8,   m[r28{0} - 12]=%pc,   tmp1=tmp1{29},   tmp2=r25{17},   tmpb=tmpb{0},
                tmph=tmph{0},   tmpl=zfill(32,64,r24{9}),   %flags=LOGICALFLAGS32( 0 ),   %ZF=LOGICALFLAGS32( 0 ),
                %CF=LOGICALFLAGS32( 0 )
              Live variables:  in proc _start
dest is not lib
call:   98 {*u8** eax_4, *j32* ecx, *v* edx, *v* esp} := CALL GetCommandLineA(
              )
              Reaching definitions: r0=(((truncu(32,16,r24{82})@15:8) | zfill(8,16,r8{85}))@15:8) | zfill(8,16,r8{85} + 1),
                r1=r1{0},   r2=truncu(32,16,zfill(32,64,r24{9}) % r25{17}),   r3=r3{0},   r8=r8{85} + 1,   r9=r9{1962},
                r10=r10{0},   r11=r11{0},   r24=(((r24{82}@31:8) | zfill(8,32,r8{85}))@31:8) | zfill(8,32,r8{85} + 1),
                r25=r25{71},   r26=r26{71},   r27=0,   r28=r28{8} - 4,   r29=r29{8},   r30=r30{0},
                r31=(r29{8} + ((%DF = 0) ? 1 : -1)) - 31,   m[r28{0} - 4]=252,   m[r28{0} - 8]=0x4031b8,
                m[r28{0} - 12]=%pc,   tmp1=tmp1{29},   tmp2=r25{17},   tmpb=r8{85},   tmph=tmph{0},
                tmpl=zfill(32,64,r24{9}),   %flags=LOGICALFLAGS8( r8{85} + 1 ),   %ZF=LOGICALFLAGS8( r8{85} + 1 ),
                %CF=LOGICALFLAGS8( r8{85} + 1 )
              Live variables: eax_4,  ecx in proc _start
result:    0 *u8** eax_4 := -
result:    0 *j32* ecx := -
dest is not lib
call:  456 {*union* eax, *u32* dl, *j8* bl, *union* ecx, *u32* edx, *union* ebx, *v** esp_6, *32** ebp_4, *union* edi} := CALL proc2(
                *8* dl := param3
                *j8* bl := param4
                *union* ecx := ecx
                *v** r26 := edx_1
                *union* ebx := ebx
                *32** ebp := ebp_54
                *v** edi := edi_1 + edx_1
              )
              Reaching definitions: r0=r0{2097},   r1=r1{0},   r2=truncu(32,16,r26{439}),   r3=r3{0},   r8=r8{2101},
                r9=r9{2102},   r10=r10{0},   r11=r11{0},   r24=r24{2105},   r25=r25{2106},   r26=r26{439},
                r27=r27{2108},   r28=r28{2109} - 4,   r29=r29{2110},   r30=r29{2110} - 96,   r31=r31{441} + r26{439},
                m[r28{0} - 4]=m[r28{0} - 4]{2653},   m[r28{0} - 8]=m[r28{0} - 8]{2654},
                m[r28{0} - 12]=m[r28{0} - 12]{2655},   tmp1=r31{441},   tmp2=tmp2{2114},   tmpb=tmpb{2115},
                tmph=tmph{0},   tmpl=tmpl{2117},   %flags=ADDFLAGS32( r31{441}, r26{439}, r31{441} + r26{439} ),
                %ZF=ADDFLAGS32( r31{441}, r26{439}, r31{441} + r26{439} ),
                %CF=ADDFLAGS32( r31{441}, r26{439}, r31{441} + r26{439} )
              Live variables: bl,  dl,  eax,  ebp_4,  ebx,  ecx,  edi,  edx,  esp_6 in proc _start
result:    0 *union* eax := -
result:    0 *u32* dl := -
result:    0 *j8* bl := -
result:    0 *union* ecx := -
result:    0 *u32* edx := -
result:    0 *union* ebx := -
result:    0 *v** esp_6 := -
result:    0 *32** ebp_4 := -
result:    0 *union* edi := -
dest is not lib
call:  483 {*32* eax_1, *32* ecx, *32* edx, *v* esp} := CALL LoadAcceleratorsA(
                *HINSTANCE* m[esp_7 - 8] := m[esp_7 - 8]
                *LPCSTR* m[esp_7 - 4] := m[esp_7 - 4]
              )
              Reaching definitions: r0=r0{471},   r1=r1{471},   r2=r2{471},   r3=r3{471},   r8=r8{471},   r9=r9{471},
                r10=r10{471},   r11=r11{471},   r24=r24{471},   r25=r25{471},   r26=r26{471},   r27=r27{471},
                r28=r28{471} - 12,   r29=r29{471},   r30=r30{471},   r31=r31{471},   m[r28{0} - 4]=m[r28{0} - 4]{471},
                m[r28{0} - 8]=m[r28{0} - 8]{471},   m[r28{0} - 12]=m[r28{0} - 12]{471},
                m[r28{0} - 4]=m[r28{0} - 4]{471},   m[r28{0} - 8]=m[r28{0} - 8]{471},
                m[r28{0} - 12]=m[r28{0} - 12]{471},   <all>=<all>{471},   tmp1=tmp1{473},   tmp2=tmp2{471},
                tmpb=tmpb{471},   tmph=tmph{471},   tmpl=tmpl{471},
                %flags=SUBFLAGS32( m[r29{471} - 40], r27{471}, tmp1{473} ),   %ZF=tmp1{473} = 0,
                %CF=m[r29{471} - 40] <u r27{471}
              Live variables: eax_1,  ecx,  edx in proc _start
result:    0 *32* eax_1 := -
result:    0 *32* ecx := -
result:    0 *32* edx := -
dest is not lib
call:  556 {*32* eax_1, *v* ecx, *v* edx, *v* esp} := CALL ShowWindow(
                *HWND* m[esp_9 - 8] := m[esp_9 - 8]
                *i32* m[esp_9 - 4] := m[esp_9 - 4]
              )
              Reaching definitions: r0=r0{542},   r1=r1{542},   r2=r2{542},   r3=r3{542},   r8=r8{542},   r9=r9{542},
                r10=r10{542},   r11=r11{542},   r24=r24{542},   r25=r25{542},   r26=r26{542},   r27=r27{542},
                r28=r28{542} - 12,   r29=r29{542},   r30=r30{542},   r31=r31{542},   m[r28{0} - 4]=m[r28{0} - 4]{542},
                m[r28{0} - 8]=m[r28{0} - 8]{542},   m[r28{0} - 12]=m[r28{0} - 12]{542},
                m[r28{0} - 4]=m[r28{0} - 4]{542},   m[r28{0} - 8]=m[r28{0} - 8]{542},
                m[r28{0} - 12]=m[r28{0} - 12]{542},   <all>=<all>{542},   tmp1=r24{542} - r27{542},   tmp2=tmp2{542},
                tmpb=tmpb{542},   tmph=tmph{542},   tmpl=tmpl{542},
                %flags=SUBFLAGS32( r24{542}, r27{542}, r24{542} - r27{542} ),   %ZF=(r24{542} - r27{542}) = 0,
                %CF=r24{542} <u r27{542}
              Live variables:  in proc _start
dest is not lib
call:  564 {*32* eax_1, *32* ecx, *32* edx, *v** esp_10} := CALL SetWindowTextA(
                *HWND* m[esp_9 - 8] := m[esp_9 - 8]
                *LPCSTR* m[esp_9 - 4] := m[esp_9 - 4]
              )
              Reaching definitions: r0=r0{542},   r1=r1{542},   r2=r2{542},   r3=r3{542},   r8=r8{542},   r9=r9{542},
                r10=r10{542},   r11=r11{542},   r24=r24{556},   r25=r25{556},   r26=r26{556},   r27=r27{542},
                r28=r28{542} - 12,   r29=r29{542},   r30=r30{542},   r31=r31{542},   m[r28{0} - 4]=m[r28{0} - 4]{542},
                m[r28{0} - 8]=m[r28{0} - 8]{542},   m[r28{0} - 12]=m[r28{0} - 12]{542},
                m[r28{0} - 4]=m[r28{0} - 4]{542},   m[r28{0} - 8]=m[r28{0} - 8]{542},
                m[r28{0} - 12]=m[r28{0} - 12]{542},   <all>=<all>{542},   tmp1=r24{542} - r27{542},   tmp2=tmp2{542},
                tmpb=tmpb{542},   tmph=tmph{542},   tmpl=tmpl{542},
                %flags=SUBFLAGS32( r24{542}, r27{542}, r24{542} - r27{542} ),   %ZF=(r24{542} - r27{542}) = 0,
                %CF=r24{542} <u r27{542}
              Live variables: ecx,  edx,  esp_10 in proc _start
result:    0 *32* ecx := -
result:    0 *32* edx := -
result:    0 *v** esp_10 := -
dest is not lib
call:  579 {*32* eax_1, *32* ecx, *32* edx, *v** esp_10} := CALL TranslateAcceleratorA(
                *HWND* m[esp_18 - 12] := m[esp_18 - 12]
                *HACCEL* m[esp_18 - 8] := m[esp_18 - 8]
                *LPMSG* m[esp_18 - 4] := m[esp_18 - 4]
              )
              Reaching definitions: r0=truncu(32,16,r29{606} - 216),   r1=r1{606},   r2=r2{606},   r3=r3{606},
                r8=truncu(32,8,r29{606} - 216),   r9=r9{606},   r10=r10{606},   r11=r11{606},   r24=r29{606} - 216,
                r25=r25{606},   r26=r26{606},   r27=r27{606},   r28=r28{606} - 16,   r29=r29{606},   r30=r30{606},
                r31=r31{606},   m[r28{0} - 4]=m[r28{0} - 4]{606},   m[r28{0} - 8]=m[r28{0} - 8]{606},
                m[r28{0} - 12]=m[r28{0} - 12]{606},   m[r28{0} - 4]=m[r28{0} - 4]{606},
                m[r28{0} - 8]=m[r28{0} - 8]{606},   m[r28{0} - 12]=m[r28{0} - 12]{606},   <all>=<all>{606},
                tmp1=r24{606},   tmp2=tmp2{606},   tmpb=tmpb{606},   tmph=tmph{606},   tmpl=tmpl{606},
                %flags=LOGICALFLAGS32( r24{606} ),   %ZF=LOGICALFLAGS32( r24{606} ),   %CF=LOGICALFLAGS32( r24{606} )
              Live variables: eax_1,  ecx,  edx,  esp_10 in proc _start
result:    0 *32* eax_1 := -
result:    0 *32* ecx := -
result:    0 *32* edx := -
result:    0 *v** esp_10 := -
dest is not lib
call:  591 {*32* eax_1, *32* ecx, *32* edx, *v** esp_27} := CALL TranslateMessage(
                *MSG** m[esp_18 - 4] := m[esp_18 - 4]
              )
              Reaching definitions: r0=truncu(32,16,r29{606} - 216),   r1=r1{606},   r2=r2{606},   r3=r3{606},
                r8=truncu(32,8,r29{606} - 216),   r9=r9{606},   r10=r10{606},   r11=r11{606},   r24=r29{606} - 216,
                r25=r25{579},   r26=r26{579},   r27=r27{606},   r28=r28{606} - 8,   r29=r29{606},   r30=r30{606},
                r31=r31{606},   m[r28{0} - 4]=m[r28{0} - 4]{606},   m[r28{0} - 8]=m[r28{0} - 8]{606},
                m[r28{0} - 12]=m[r28{0} - 12]{606},   m[r28{0} - 4]=m[r28{0} - 4]{606},
                m[r28{0} - 8]=m[r28{0} - 8]{606},   m[r28{0} - 12]=m[r28{0} - 12]{606},   <all>=<all>{606},
                tmp1=r24{579},   tmp2=tmp2{606},   tmpb=tmpb{606},   tmph=tmph{606},   tmpl=tmpl{606},
                %flags=LOGICALFLAGS32( r24{579} ),   %ZF=LOGICALFLAGS32( r24{579} ),   %CF=LOGICALFLAGS32( r24{579} )
              Live variables: ecx,  edx,  esp_27 in proc _start
result:    0 *32* ecx := -
result:    0 *32* edx := -
result:    0 *v** esp_27 := -
dest is not lib
call:  613 {*32* eax_1, *v** esp_19} := CALL proc7(
              )
              Reaching definitions: r0=r0{606},   r1=r1{606},   r2=r2{606},   r3=r3{606},   r8=r8{606},   r9=r9{606},
                r10=r10{606},   r11=r11{606},   r24=r24{606},   r25=r25{606},   r26=r26{606},   r27=r27{606},
                r28=r28{606} - 4,   r29=r29{606},   r30=r30{606},   r31=r31{606},   m[r28{0} - 4]=m[r28{0} - 4]{606},
                m[r28{0} - 8]=m[r28{0} - 8]{606},   m[r28{0} - 12]=m[r28{0} - 12]{606},
                m[r28{0} - 4]=m[r28{0} - 4]{606},   m[r28{0} - 8]=m[r28{0} - 8]{606},
                m[r28{0} - 12]=m[r28{0} - 12]{606},   <all>=<all>{606},   tmp1=r24{606},   tmp2=tmp2{606},
                tmpb=tmpb{606},   tmph=tmph{606},   tmpl=tmpl{606},   %flags=LOGICALFLAGS32( r24{606} ),
                %ZF=LOGICALFLAGS32( r24{606} ),   %CF=LOGICALFLAGS32( r24{606} )
              Live variables: esp_19 in proc _start
result:    0 *v** esp_19 := -
dest is not lib
call:  624 {*32* eax_1, *8* dl, *32* ecx, *v* esp} := CALL proc3(
                *8* dl := dl
                *8** eax_1 := ebp_52 - 124
                *8** ecx := ecx
              )
              Reaching definitions: r0=truncu(32,16,r29{2158} - 124),   r1=r1{2146},   r2=r2{2147},   r3=r3{2148},
                r8=truncu(32,8,r29{2158} - 124),   r9=r9{2150},   r10=r10{2151},   r11=r11{2152},   r24=r29{2158} - 124
                r25=r25{2154},   r26=r26{2155},   r27=r27{2156},   r28=r28{2157} - 4,   r29=r29{2158},   r30=r30{2159},
                r31=r31{2160},   m[r28{0} - 4]=m[r28{0} - 4]{471},   m[r28{0} - 8]=m[r28{0} - 8]{471},
                m[r28{0} - 12]=m[r28{0} - 12]{471},   m[r28{0} - 4]=m[r28{0} - 4]{2659},
                m[r28{0} - 8]=m[r28{0} - 8]{2660},   m[r28{0} - 12]=m[r28{0} - 12]{2661},   <all>=<all>{471},
                tmp1=tmp1{2161},   tmp2=tmp2{2162},   tmpb=tmpb{2163},   tmph=tmph{2164},   tmpl=tmpl{2165},
                %flags=%flags{2166},   %ZF=%ZF{2167},   %CF=%CF{2168}
              Live variables: dl,  eax_1,  ecx in proc _start
result:    0 *32* eax_1 := -
result:    0 *8* dl := -
result:    0 *32* ecx := -
dest is not lib
call:  638 *v** esp_12 := CALL proc4(
                *union* eax := ebp_8 - 96
              )
              Reaching definitions: r0=truncu(32,16,r29{630} - 96),   r1=r1{630},   r2=r2{630},   r3=r3{630},
                r8=truncu(32,8,r29{630} - 96),   r9=r9{630},   r10=r10{630},   r11=r11{630},   r24=r29{630} - 96,
                r25=r25{630},   r26=r26{630},   r27=r27{630},   r28=r28{630} - 4,   r29=r29{630},   r30=r30{630},
                r31=r31{630},   m[r28{0} - 4]=m[r28{0} - 4]{630},   m[r28{0} - 8]=m[r28{0} - 8]{630},
                m[r28{0} - 12]=m[r28{0} - 12]{630},   m[r28{0} - 4]=m[r28{0} - 4]{630},
                m[r28{0} - 8]=m[r28{0} - 8]{630},   m[r28{0} - 12]=m[r28{0} - 12]{630},   <all>=<all>{630},
                tmp1=tmp1{630},   tmp2=tmp2{630},   tmpb=tmpb{630},   tmph=tmph{630},   tmpl=tmpl{630},
                %flags=%flags{630},   %ZF=%ZF{630},   %CF=%CF{630}
              Live variables: esp_12 in proc _start
result:    0 *v** esp_12 := -
dest is not lib
call:  674 *v** esp_15 := CALL proc5(
                *union* eax := ebp_10 - 96
              )
              Reaching definitions: r0=truncu(32,16,r29{657} - 96),   r1=r1{657},   r2=r2{657},   r3=r3{657},
                r8=truncu(32,8,r29{657} - 96),   r9=r9{657},   r10=r10{657},   r11=r11{657},   r24=r29{657} - 96,
                r25=r25{657},   r26=r26{657},   r27=r27{657},   r28=r28{657} - 4,   r29=r29{657},   r30=r30{657},
                r31=r31{657},   m[r28{0} - 4]=m[r28{0} - 4]{657},   m[r28{0} - 8]=m[r28{0} - 8]{657},
                m[r28{0} - 12]=m[r28{0} - 12]{657},   m[r28{0} - 4]=m[r28{0} - 4]{657},
                m[r28{0} - 8]=m[r28{0} - 8]{657},   m[r28{0} - 12]=m[r28{0} - 12]{657},   <all>=<all>{657},
                tmp1=r24{661} - r27{657},   tmp2=tmp2{657},   tmpb=tmpb{657},   tmph=tmph{657},   tmpl=tmpl{657},
                %flags=SUBFLAGS32( r24{661}, r27{657}, r24{661} - r27{657} ),   %ZF=(r24{661} - r27{657}) = 0,
                %CF=r24{661} <u r27{657}
              Live variables: esp_15 in proc _start
result:    0 *v** esp_15 := -
dest is not lib
call:  687 {*32* eax_1, *32* esi, *8* cl, *8* dl, *8* bl, *32* ecx, *32* edx, *32* ebx, *v** esp_16, *v** ebp, *32* edi} := CALL proc6(
                *v** m[esp_15 - 12] := m[esp_15 - 12]
                *i32* m[esp_15 - 8] := m[esp_15 - 8]
                *32* m[esp_15 - 4] := m[esp_15 - 4]
                *union* cl := truncu(32,8,ebp_10 - 96)
                *u32* dl := dl
                *j8* bl := bl
                *union* ecx := ebp_10 - 96
                *u32* edx := edx
                *u32* ebx := ebx_1
                *32** ebp := ebp_10
                *u32* esi_1 := esi_1
                *v** edi := edi
              )
              Reaching definitions: r0=truncu(32,16,r29{657} - 96),   r1=r1{657},   r2=r2{657},   r3=r3{657},
                r8=truncu(32,8,r29{657} - 96),   r9=truncu(32,8,r29{657} - 96),   r10=r10{657},   r11=r11{657},
                r24=r29{657} - 96,   r25=r29{657} - 96,   r26=r26{657},   r27=r27{657},   r28=r28{674} - 16,
                r29=r29{657},   r30=r30{657},   r31=r31{657},   m[r28{0} - 4]=m[r28{0} - 4]{657},
                m[r28{0} - 8]=m[r28{0} - 8]{657},   m[r28{0} - 12]=m[r28{0} - 12]{657},
                m[r28{0} - 4]=m[r28{0} - 4]{657},   m[r28{0} - 8]=m[r28{0} - 8]{657},
                m[r28{0} - 12]=m[r28{0} - 12]{657},   <all>=<all>{657},   tmp1=r24{661} - r27{657},   tmp2=tmp2{657},
                tmpb=tmpb{657},   tmph=tmph{657},   tmpl=tmpl{657},
                %flags=SUBFLAGS32( r24{661}, r27{657}, r24{661} - r27{657} ),   %ZF=(r24{661} - r27{657}) = 0,
                %CF=r24{661} <u r27{657}
              Live variables: bl,  cl,  dl,  eax_1,  ebp,  ebx,  ecx,  edi,  edx,  esi,  esp_16 in proc _start
result:    0 *32* eax_1 := -
result:    0 *32* esi := -
result:    0 *8* cl := -
result:    0 *8* dl := -
result:    0 *8* bl := -
result:    0 *32* ecx := -
result:    0 *32* edx := -
result:    0 *32* ebx := -
result:    0 *v** esp_16 := -
result:    0 *v** ebp := -
result:    0 *32* edi := -
dest is not lib
call:  725 *v** esp_20 := CALL proc9(
                *union* eax := ebp_11 - 96
              )
              Reaching definitions: r0=truncu(32,16,r29{698} - 96),   r1=r1{698},   r2=r2{698},   r3=r3{698},
                r8=truncu(32,8,r29{698} - 96),   r9=r9{698},   r10=r10{698},   r11=r11{698},   r24=r29{698} - 96,
                r25=r25{698},   r26=r26{698},   r27=r27{698},   r28=r28{698} - 4,   r29=r29{698},   r30=r30{698},
                r31=r31{704},   m[r28{0} - 4]=m[r28{0} - 4]{698},   m[r28{0} - 8]=m[r28{0} - 8]{698},
                m[r28{0} - 12]=m[r28{0} - 12]{698},   m[r28{0} - 4]=m[r28{0} - 4]{698},
                m[r28{0} - 8]=m[r28{0} - 8]{698},   m[r28{0} - 12]=m[r28{0} - 12]{698},   <all>=<all>{698},
                tmp1=tmp1{706},   tmp2=tmp2{698},   tmpb=tmpb{698},   tmph=tmph{698},   tmpl=tmpl{698},
                %flags=SUBFLAGS32( r31{704}, m[r29{698} - 32], tmp1{706} ),   %ZF=tmp1{706} = 0,
                %CF=r31{704} <u m[r29{698} - 32]
              Live variables: esp_20 in proc _start
result:    0 *v** esp_20 := -
dest is not lib
call:  738 {*32* eax_1, *32* esi, *8* cl, *8* dl, *8* bl, *32* ecx, *32* edx, *32* ebx, *v** esp_21, *v** ebp, *32* edi} := CALL proc6(
                *v** m[esp_20 - 12] := m[esp_20 - 12]
                *i32* m[esp_20 - 8] := m[esp_20 - 8]
                *32* m[esp_20 - 4] := m[esp_20 - 4]
                *union* cl := truncu(32,8,ebp_11 - 96)
                *u32* dl := dl
                *j8* bl := bl
                *union* ecx := ebp_11 - 96
                *u32* edx := edx
                *union* ebx := ebx
                *32** ebp := ebp_11
                *u32* esi_1 := esi_1
                *u32* edi_1 := edi_1
              )
              Reaching definitions: r0=truncu(32,16,r29{698} - 96),   r1=r1{698},   r2=r2{698},   r3=r3{698},
                r8=truncu(32,8,r29{698} - 96),   r9=truncu(32,8,r29{698} - 96),   r10=r10{698},   r11=r11{698},
                r24=r29{698} - 96,   r25=r29{698} - 96,   r26=r26{698},   r27=r27{698},   r28=r28{725} - 16,
                r29=r29{698},   r30=r30{698},   r31=r31{704},   m[r28{0} - 4]=m[r28{0} - 4]{698},
                m[r28{0} - 8]=m[r28{0} - 8]{698},   m[r28{0} - 12]=m[r28{0} - 12]{698},
                m[r28{0} - 4]=m[r28{0} - 4]{698},   m[r28{0} - 8]=m[r28{0} - 8]{698},
                m[r28{0} - 12]=m[r28{0} - 12]{698},   <all>=<all>{698},   tmp1=tmp1{706},   tmp2=tmp2{698},
                tmpb=tmpb{698},   tmph=tmph{698},   tmpl=tmpl{698},
                %flags=SUBFLAGS32( r31{704}, m[r29{698} - 32], tmp1{706} ),   %ZF=tmp1{706} = 0,
                %CF=r31{704} <u m[r29{698} - 32]
              Live variables: bl,  cl,  dl,  eax_1,  ebp,  ebx,  ecx,  edi,  edx,  esi,  esp_21 in proc _start
result:    0 *32* eax_1 := -
result:    0 *32* esi := -
result:    0 *8* cl := -
result:    0 *8* dl := -
result:    0 *8* bl := -
result:    0 *32* ecx := -
result:    0 *32* edx := -
result:    0 *32* ebx := -
result:    0 *v** esp_21 := -
result:    0 *v** ebp := -
result:    0 *32* edi := -
dest is not lib
call:  786 {*32* eax_1, *32* ecx, *32* edx, *v** esp_23} := CALL SetScrollInfo(
              )
              Reaching definitions: r0=truncu(32,16,zfill(32,64,r24{753}) / r25{761}),   r1=r1{749},
                r2=truncu(32,16,zfill(32,64,r24{753}) % r25{761}),   r3=r3{749},
                r8=truncu(32,8,zfill(32,64,r24{753}) / r25{761}),   r9=truncu(32,8,r25{761}),   r10=r10{749},
                r11=r11{749},   r24=zfill(32,64,r24{753}) / r25{761},   r25=r25{761},
                r26=zfill(32,64,r24{753}) % r25{761},   r27=r27{749},   r28=r28{749} - 20,   r29=r29{749},
                r30=r30{749},   r31=r31{749},   m[r28{0} - 4]=m[r28{0} - 4]{749},   m[r28{0} - 8]=m[r28{0} - 8]{749},
                m[r28{0} - 12]=m[r28{0} - 12]{749},   m[r28{0} - 4]=m[r28{0} - 4]{749},
                m[r28{0} - 8]=m[r28{0} - 8]{749},   m[r28{0} - 12]=m[r28{0} - 12]{749},   <all>=<all>{749},
                tmp1=tmp1{772},   tmp2=r25{761},   tmpb=tmpb{749},   tmph=tmph{749},   tmpl=zfill(32,64,r24{753}),
                %flags=SUBFLAGS32( zfill(32,64,r24{753}) % r25{761}, 654, tmp1{772} ),   %ZF=tmp1{772} = 0,
                %CF=(zfill(32,64,r24{753}) % r25{761}) <u 654
              Live variables: eax_1,  esp_23 in proc _start
result:    0 *32* eax_1 := -
result:    0 *v** esp_23 := -
dest is not lib
call:  801 {*32* eax_1, *32* ecx, *32* edx, *v** esp_23} := CALL SetScrollPos(
              )
              Reaching definitions: r0=truncu(32,16,zfill(32,64,r24{753}) / r25{761}),   r1=r1{749},
                r2=truncu(32,16,zfill(32,64,r24{753}) % r25{761}),   r3=r3{749},
                r8=truncu(32,8,zfill(32,64,r24{753}) / r25{761}),   r9=truncu(32,8,r25{761}),   r10=r10{749},
                r11=r11{749},   r24=r24{786},   r25=r25{786},   r26=r26{786},   r27=r27{749},   r28=r28{749} - 36,
                r29=r29{749},   r30=r30{749},   r31=r31{749},   m[r28{0} - 4]=m[r28{0} - 4]{749},
                m[r28{0} - 8]=m[r28{0} - 8]{749},   m[r28{0} - 12]=m[r28{0} - 12]{749},
                m[r28{0} - 4]=m[r28{0} - 4]{749},   m[r28{0} - 8]=m[r28{0} - 8]{749},
                m[r28{0} - 12]=m[r28{0} - 12]{749},   <all>=<all>{749},   tmp1=r24{786} - r27{749},   tmp2=r25{761},
                tmpb=tmpb{749},   tmph=tmph{749},   tmpl=zfill(32,64,r24{753}),
                %flags=SUBFLAGS32( r24{786}, r27{749}, r24{786} - r27{749} ),   %ZF=(r24{786} - r27{749}) = 0,
                %CF=r24{786} <u r27{749}
              Live variables: esp_23 in proc _start
result:    0 *v** esp_23 := -
dest is not lib
call:  813 {*u64* eax, *u64* ecx, *u32* edx, *v** esp_24} := CALL VirtualAlloc(
                *LPVOID* m[esp_23 - 16] := m[esp_23 - 16]
                *DWORD* m[esp_23 - 12] := m[esp_23 - 12]
                *DWORD* m[esp_23 - 8] := m[esp_23 - 8]
                *DWORD* m[esp_23 - 4] := m[esp_23 - 4]
              )
              Reaching definitions: r0=truncu(32,16,zfill(32,64,r24{753}) / r25{761}),   r1=r1{749},
                r2=truncu(32,16,zfill(32,64,r24{753}) % r25{761}),   r3=r3{749},
                r8=truncu(32,8,zfill(32,64,r24{753}) / r25{761}),   r9=truncu(32,8,r25{761}),   r10=r10{749},
                r11=r11{749},   r24=r24{2169},   r25=r25{2170},   r26=r26{2171},   r27=r27{749},   r28=r28{2172} - 20,
                r29=r29{749},   r30=r30{749},   r31=r31{749},   m[r28{0} - 4]=m[r28{0} - 4]{749},
                m[r28{0} - 8]=m[r28{0} - 8]{749},   m[r28{0} - 12]=m[r28{0} - 12]{749},
                m[r28{0} - 4]=m[r28{0} - 4]{749},   m[r28{0} - 8]=m[r28{0} - 8]{749},
                m[r28{0} - 12]=m[r28{0} - 12]{749},   <all>=<all>{749},   tmp1=r24{786} - r27{749},   tmp2=r25{761},
                tmpb=tmpb{749},   tmph=tmph{749},   tmpl=zfill(32,64,r24{753}),
                %flags=SUBFLAGS32( r24{786}, r27{749}, r24{786} - r27{749} ),   %ZF=(r24{786} - r27{749}) = 0,
                %CF=r24{786} <u r27{749}
              Live variables: edx,  esp_24 in proc _start
result:    0 *u32* edx := -
result:    0 *v** esp_24 := -
dest is not lib
call:  820 *v** esp_25 := CALL proc10(
                *union* eax := ebp_13 - 96
              )
              Reaching definitions: r0=truncu(32,16,r29{749} - 96),   r1=r1{749},
                r2=truncu(32,16,zfill(32,64,r24{753}) % r25{761}),   r3=r3{749},   r8=truncu(32,8,r29{749} - 96),
                r9=truncu(32,8,r25{761}),   r10=r10{749},   r11=r11{749},   r24=r29{749} - 96,   r25=r25{2174},
                r26=r26{2175},   r27=r27{749},   r28=r28{2176} - 4,   r29=r29{749},   r30=r30{749},   r31=r31{749},
                m[r28{0} - 4]=m[r28{0} - 4]{749},   m[r28{0} - 8]=m[r28{0} - 8]{749},
                m[r28{0} - 12]=m[r28{0} - 12]{749},   m[r28{0} - 4]=m[r28{0} - 4]{749},
                m[r28{0} - 8]=m[r28{0} - 8]{749},   m[r28{0} - 12]=m[r28{0} - 12]{749},   <all>=<all>{749},
                tmp1=tmp1{2177},   tmp2=r25{761},   tmpb=tmpb{749},   tmph=tmph{749},   tmpl=zfill(32,64,r24{753}),
                %flags=%flags{2178},   %ZF=%ZF{2179},   %CF=%CF{2180}
              Live variables: esp_25 in proc _start
result:    0 *v** esp_25 := -
dest is not lib
call:  833 {*union* eax, *u32* esi_1, *j8* cl, *u32* dl, *j8* bl, *union* ecx, *u32* edx, *union* ebx, *v** esp_26, *32** ebp_14, *union* edi} := CALL proc6(
                *v** m[esp_25 - 12] := m[esp_25 - 12]
                *i32* m[esp_25 - 8] := m[esp_25 - 8]
                *32* m[esp_25 - 4] := m[esp_25 - 4]
                *union* cl := truncu(32,8,ebp_13 - 96)
                *u32* dl := dl
                *j8* bl := bl
                *union* ecx := ebp_13 - 96
                *u32* edx := edx
                *union* ebx := ebx
                *32** ebp := ebp_13
                *u32* esi_1 := esi_1
                *union* edi := edi
              )
              Reaching definitions: r0=truncu(32,16,r29{749} - 96),   r1=r1{749},
                r2=truncu(32,16,zfill(32,64,r24{753}) % r25{761}),   r3=r3{749},   r8=truncu(32,8,r29{749} - 96),
                r9=truncu(32,8,r29{749} - 96),   r10=r10{749},   r11=r11{749},   r24=r29{749} - 96,   r25=r29{749} - 96
                r26=r26{2175},   r27=r27{749},   r28=r28{820} - 16,   r29=r29{749},   r30=r30{749},   r31=r31{749},
                m[r28{0} - 4]=m[r28{0} - 4]{749},   m[r28{0} - 8]=m[r28{0} - 8]{749},
                m[r28{0} - 12]=m[r28{0} - 12]{749},   m[r28{0} - 4]=m[r28{0} - 4]{749},
                m[r28{0} - 8]=m[r28{0} - 8]{749},   m[r28{0} - 12]=m[r28{0} - 12]{749},   <all>=<all>{749},
                tmp1=tmp1{2177},   tmp2=r25{761},   tmpb=tmpb{749},   tmph=tmph{749},   tmpl=zfill(32,64,r24{753}),
                %flags=%flags{2178},   %ZF=%ZF{2179},   %CF=%CF{2180}
              Live variables: bl,  dl,  eax,  ebp_14,  ebx,  edi,  esi_1,  esp_26 in proc _start
result:    0 *union* eax := -
result:    0 *u32* esi_1 := -
result:    0 *u32* dl := -
result:    0 *j8* bl := -
result:    0 *union* ebx := -
result:    0 *v** esp_26 := -
result:    0 *32** ebp_14 := -
result:    0 *union* edi := -
dest is not lib
call:  868 {*32* eax_1, *v* ecx, *v* edx, *v* esp} := CALL CreateMenu(
              )
              Reaching definitions: r0=truncu(32,16,zfill(32,64,r24{843}) / r25{851}),   r1=r1{749},
                r2=truncu(32,16,zfill(32,64,r24{843}) % r25{851}),   r3=r3{749},
                r8=truncu(32,8,zfill(32,64,r24{843}) / r25{851}),   r9=truncu(32,8,r25{851}),   r10=r10{833},
                r11=r11{833},   r24=zfill(32,64,r24{843}) / r25{851},   r25=r25{851},
                r26=zfill(32,64,r24{843}) % r25{851},   r27=r27{833},   r28=r28{833} - 4,   r29=r29{833},
                r30=r30{833},   r31=r31{833},   m[r28{0} - 4]=m[r28{0} - 4]{749},   m[r28{0} - 8]=m[r28{0} - 8]{749},
                m[r28{0} - 12]=m[r28{0} - 12]{749},   m[r28{0} - 4]=m[r28{0} - 4]{749},
                m[r28{0} - 8]=m[r28{0} - 8]{749},   m[r28{0} - 12]=m[r28{0} - 12]{749},   <all>=<all>{749},
                tmp1=(zfill(32,64,r24{843}) % r25{851}) - 20,   tmp2=r25{851},   tmpb=tmpb{749},   tmph=tmph{749},
                tmpl=zfill(32,64,r24{843}),
                %flags=SUBFLAGS32( zfill(32,64,r24{843}) % r25{851}, 20, (zfill(32,64,r24{843}) % r25{851}) - 20 ),
                %ZF=((zfill(32,64,r24{843}) % r25{851}) - 20) = 0,   %CF=(zfill(32,64,r24{843}) % r25{851}) <u 20
              Live variables: eax_1 in proc _start
result:    0 *32* eax_1 := -
dest is not lib
call:  890 {*union* eax, *union* ecx, *u32* edx, *v* esp} := CALL MessageBoxA(
                *HWND* m[esp_26 - 16] := m[esp_26 - 16]
                *LPCSTR* m[esp_26 - 12] := m[esp_26 - 12]
                *LPCSTR* m[esp_26 - 8] := m[esp_26 - 8]
                *UINT* m[esp_26 - 4] := m[esp_26 - 4]
              )
              Reaching definitions: r0=truncu(32,16,zfill(32,64,r24{843}) / r25{851}),   r1=r1{749},
                r2=truncu(32,16,zfill(32,64,r24{843}) % r25{851}),   r3=r3{749},
                r8=truncu(32,8,zfill(32,64,r24{843}) / r25{851}),   r9=truncu(32,8,r25{851}),   r10=r10{833},
                r11=r11{833},   r24=r24{868},   r25=r25{868},   r26=r26{868},   r27=r27{833},   r28=r28{833} - 20,
                r29=r29{833},   r30=r30{833},   r31=r31{833},   m[r28{0} - 4]=m[r28{0} - 4]{749},
                m[r28{0} - 8]=m[r28{0} - 8]{749},   m[r28{0} - 12]=m[r28{0} - 12]{749},
                m[r28{0} - 4]=m[r28{0} - 4]{749},   m[r28{0} - 8]=m[r28{0} - 8]{749},
                m[r28{0} - 12]=m[r28{0} - 12]{749},   <all>=<all>{749},   tmp1=r24{868} - r27{833},   tmp2=r25{851},
                tmpb=tmpb{749},   tmph=tmph{749},   tmpl=zfill(32,64,r24{843}),
                %flags=SUBFLAGS32( r24{868}, r27{833}, r24{868} - r27{833} ),   %ZF=(r24{868} - r27{833}) = 0,
                %CF=r24{868} <u r27{833}
              Live variables: edx in proc _start
result:    0 *u32* edx := -
dest is not lib
call:  877 {*union* eax, *union* ecx, *u32* edx, *v* esp} := CALL DestroyMenu(
                *HMENU* m[esp_26 - 4] := m[esp_26 - 4]
              )
              Reaching definitions: r0=truncu(32,16,zfill(32,64,r24{843}) / r25{851}),   r1=r1{749},
                r2=truncu(32,16,zfill(32,64,r24{843}) % r25{851}),   r3=r3{749},
                r8=truncu(32,8,zfill(32,64,r24{843}) / r25{851}),   r9=truncu(32,8,r25{851}),   r10=r10{833},
                r11=r11{833},   r24=r24{868},   r25=r25{868},   r26=r26{868},   r27=r27{833},   r28=r28{833} - 8,
                r29=r29{833},   r30=r30{833},   r31=r31{833},   m[r28{0} - 4]=m[r28{0} - 4]{749},
                m[r28{0} - 8]=m[r28{0} - 8]{749},   m[r28{0} - 12]=m[r28{0} - 12]{749},
                m[r28{0} - 4]=m[r28{0} - 4]{749},   m[r28{0} - 8]=m[r28{0} - 8]{749},
                m[r28{0} - 12]=m[r28{0} - 12]{749},   <all>=<all>{749},   tmp1=r24{868} - r27{833},   tmp2=r25{851},
                tmpb=tmpb{749},   tmph=tmph{749},   tmpl=zfill(32,64,r24{843}),
                %flags=SUBFLAGS32( r24{868}, r27{833}, r24{868} - r27{833} ),   %ZF=(r24{868} - r27{833}) = 0,
                %CF=r24{868} <u r27{833}
              Live variables: edx in proc _start
result:    0 *u32* edx := -
dest is not lib
call:  932 *v* esp := CALL proc11(
                *8** eax := eax
              )
              Reaching definitions: r0=truncu(32,16,r24{926}),   r1=r1{2186},   r2=r2{2187},   r3=r3{2188},
                r8=truncu(32,8,r24{926}),   r9=r9{2190},   r10=r10{2191},   r11=r11{2192},   r24=r24{926},
                r25=r25{2194},   r26=r26{2195},   r27=r27{2196},   r28=r28{2197} - 4,   r29=r29{2198},   r30=r30{2199},
                r31=r31{2200},   m[r28{0} - 4]=m[r28{0} - 4]{749},   m[r28{0} - 8]=m[r28{0} - 8]{749},
                m[r28{0} - 12]=m[r28{0} - 12]{749},   m[r28{0} - 4]=m[r28{0} - 4]{2662},
                m[r28{0} - 8]=m[r28{0} - 8]{2663},   m[r28{0} - 12]=m[r28{0} - 12]{2664},   <all>=<all>{749},
                tmp1=tmp1{922},   tmp2=tmp2{2202},   tmpb=tmpb{2203},   tmph=tmph{2204},   tmpl=tmpl{2205},
                %flags=SUBFLAGS32( m[r29{2198} - 156], r27{2196}, tmp1{922} ),   %ZF=tmp1{922} = 0,
                %CF=m[r29{2198} - 156] <u r27{2196}
              Live variables:  in proc _start
dest is not lib
call:  944 {*u32* eax, *u32* esi_1, *j8* cl, *u32* dl, *j8* bl, *union* ecx, *u32* edx, *u32* ebx, *v** esp_30, *32** ebp_17, *union* edi} := CALL proc6(
                *v** m[esp_29 - 12] := m[esp_29 - 12]
                *i32* m[esp_29 - 8] := m[esp_29 - 8]
                *32* m[esp_29 - 4] := m[esp_29 - 4]
                *union* cl := truncu(32,8,ebp_51 - 96)
                *u32* dl := dl
                *j8* bl := bl
                *union* ecx := ebp_51 - 96
                *u32* edx := edx
                *union* ebx := ebx
                *32** ebp := ebp_51
                *u32* esi_1 := esi_1
                *union* edi := edi
              )
              Reaching definitions: r0=truncu(32,16,r24{926}),   r1=r1{2186},   r2=r2{2187},   r3=r3{2188},
                r8=truncu(32,8,r24{926}),   r9=truncu(32,8,r29{2198} - 96),   r10=r10{2191},   r11=r11{2192},
                r24=r24{926},   r25=r29{2198} - 96,   r26=r26{2195},   r27=r27{2196},   r28=r28{2197} - 16,
                r29=r29{2198},   r30=r30{2199},   r31=r31{2200},   m[r28{0} - 4]=m[r28{0} - 4]{749},
                m[r28{0} - 8]=m[r28{0} - 8]{749},   m[r28{0} - 12]=m[r28{0} - 12]{749},
                m[r28{0} - 4]=m[r28{0} - 4]{2662},   m[r28{0} - 8]=m[r28{0} - 8]{2663},
                m[r28{0} - 12]=m[r28{0} - 12]{2664},   <all>=<all>{749},   tmp1=tmp1{922},   tmp2=tmp2{2202},
                tmpb=tmpb{2203},   tmph=tmph{2204},   tmpl=tmpl{2205},
                %flags=SUBFLAGS32( m[r29{2198} - 156], r27{2196}, tmp1{922} ),   %ZF=tmp1{922} = 0,
                %CF=m[r29{2198} - 156] <u r27{2196}
              Live variables: bl,  cl,  dl,  eax,  ebp_17,  ebx,  ecx,  edi,  edx,  esi_1,  esp_30 in proc _start
result:    0 *u32* eax := -
result:    0 *u32* esi_1 := -
result:    0 *j8* cl := -
result:    0 *u32* dl := -
result:    0 *j8* bl := -
result:    0 *union* ecx := -
result:    0 *u32* edx := -
result:    0 *u32* ebx := -
result:    0 *v** esp_30 := -
result:    0 *32** ebp_17 := -
result:    0 *union* edi := -
dest is not lib
call: 1307 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL FindWindowA(
                *LPCSTR* m[esp_38 - 8] := m[esp_38 - 8]
                *LPCSTR* m[esp_38 - 4] := m[esp_38 - 4]
              )
              Reaching definitions: r0=r0{2333},   r1=r1{2334},   r2=r2{2335},   r3=r3{2336},   r8=r8{2337},
                r9=r9{2338},   r10=r10{2339},   r11=r11{2340},   r24=r24{2341},   r25=r25{2342},   r26=r26{2343},
                r27=r27{2344},   r28=r28{2345} - 12,   r29=r29{2346},   r30=r31{1295},   r31=r31{1295},
                m[r28{0} - 4]=m[r28{0} - 4]{1067},   m[r28{0} - 8]=m[r28{0} - 8]{1067},
                m[r28{0} - 12]=m[r28{0} - 12]{1067},   m[r28{0} - 4]=m[r28{0} - 4]{2677},
                m[r28{0} - 8]=m[r28{0} - 8]{2678},   m[r28{0} - 12]=m[r28{0} - 12]{2679},   <all>=<all>{1067},
                tmp1=tmp1{1297},   tmp2=tmp2{2350},   tmpb=tmpb{2351},   tmph=tmph{2352},   tmpl=tmpl{2353},
                %flags=SUBFLAGS32( m[r29{2346} - 164], 110, tmp1{1297} ),   %ZF=tmp1{1297} = 0,
                %CF=m[r29{2346} - 164] <u 110
              Live variables: eax in proc _start
result:    0 *32* eax := -
dest is not lib
call: 1313 {*u32* eax, *v** ecx, *u32* edx, *v* esp} := CALL DestroyWindow(
                *HWND* m[esp_38 - 4] := m[esp_38 - 4]
              )
              Reaching definitions: r0=r0{2333},   r1=r1{2334},   r2=r2{2335},   r3=r3{2336},   r8=r8{2337},
                r9=r9{2338},   r10=r10{2339},   r11=r11{2340},   r24=r24{1307},   r25=r25{1307},   r26=r26{1307},
                r27=r27{2344},   r28=r28{2345} - 8,   r29=r29{2346},   r30=r31{1295},   r31=r31{1295},
                m[r28{0} - 4]=m[r28{0} - 4]{1067},   m[r28{0} - 8]=m[r28{0} - 8]{1067},
                m[r28{0} - 12]=m[r28{0} - 12]{1067},   m[r28{0} - 4]=m[r28{0} - 4]{2677},
                m[r28{0} - 8]=m[r28{0} - 8]{2678},   m[r28{0} - 12]=m[r28{0} - 12]{2679},   <all>=<all>{1067},
                tmp1=tmp1{1297},   tmp2=tmp2{2350},   tmpb=tmpb{2351},   tmph=tmph{2352},   tmpl=tmpl{2353},
                %flags=SUBFLAGS32( m[r29{2346} - 164], 110, tmp1{1297} ),   %ZF=tmp1{1297} = 0,
                %CF=m[r29{2346} - 164] <u 110
              Live variables:  in proc _start
dest is not lib
call: 1430 {*32* eax, *32* ecx, *32* edx, *v** esp_42} := CALL CreateThread(
              )
              Reaching definitions: r0=truncu(32,16,r30{1382} + 0x6565),   r1=r1{2334},   r2=r2{1405},   r3=r3{2336},
                r8=truncu(32,8,r30{1382} + 0x6565),   r9=truncu(32,8,r31{1295} + r30{1382}),   r10=r10{2339},
                r11=r11{2340},   r24=r30{1382} + 0x6565,   r25=r31{1295} + r30{1382},
                r26=zfill(32,64,r24{1389}) % r31{1397},   r27=r27{2344},   r28=r28{2383} - 28,   r29=r29{2346},
                r30=r30{1382},   r31=r31{1397},   m[r28{0} - 4]=m[r28{0} - 4]{1067},
                m[r28{0} - 8]=m[r28{0} - 8]{1067},   m[r28{0} - 12]=m[r28{0} - 12]{1067},
                m[r28{0} - 4]=m[r28{0} - 4]{2677},   m[r28{0} - 8]=m[r28{0} - 8]{2678},
                m[r28{0} - 12]=m[r28{0} - 12]{2679},   <all>=<all>{1067},
                tmp1=(zfill(32,64,r24{1389}) % r31{1397}) - 8,   tmp2=r31{1397},   tmpb=tmpb{2351},   tmph=tmph{2352},
                tmpl=zfill(32,64,r24{1389}),
                %flags=SUBFLAGS32( zfill(32,64,r24{1389}) % r31{1397}, 8, (zfill(32,64,r24{1389}) % r31{1397}) - 8 ),
                %ZF=((zfill(32,64,r24{1389}) % r31{1397}) - 8) = 0,   %CF=(zfill(32,64,r24{1389}) % r31{1397}) <u 8
              Live variables: eax,  ecx,  edx,  esp_42 in proc _start
result:    0 *32* eax := -
result:    0 *32* ecx := -
result:    0 *32* edx := -
result:    0 *v** esp_42 := -
dest is not lib
call: 1439 {*32* eax, *32* ecx, *32* edx, *v** esp_43} := CALL ResumeThread(
              )
              Reaching definitions: r0=truncu(32,16,r30{1382} + 0x6565),   r1=r1{2334},   r2=r2{1405},   r3=r3{2336},
                r8=truncu(32,8,r30{1382} + 0x6565),   r9=truncu(32,8,r31{1295} + r30{1382}),   r10=r10{2339},
                r11=r11{2340},   r24=r24{1430},   r25=r25{1430},   r26=r26{1430},   r27=r27{2344},   r28=r28{2383} - 32
                r29=r29{2346},   r30=r30{1382},   r31=r31{1397},   m[r28{0} - 4]=m[r28{0} - 4]{1067},
                m[r28{0} - 8]=m[r28{0} - 8]{1067},   m[r28{0} - 12]=m[r28{0} - 12]{1067},
                m[r28{0} - 4]=m[r28{0} - 4]{2677},   m[r28{0} - 8]=m[r28{0} - 8]{2678},
                m[r28{0} - 12]=m[r28{0} - 12]{2679},   <all>=<all>{1067},   tmp1=r24{1430} - r27{2344},
                tmp2=r31{1397},   tmpb=tmpb{2351},   tmph=tmph{2352},   tmpl=zfill(32,64,r24{1389}),
                %flags=SUBFLAGS32( r24{1430}, r27{2344}, r24{1430} - r27{2344} ),   %ZF=(r24{1430} - r27{2344}) = 0,
                %CF=r24{1430} <u r27{2344}
              Live variables: ecx,  edx,  esp_43 in proc _start
result:    0 *32* ecx := -
result:    0 *32* edx := -
result:    0 *v** esp_43 := -
dest is not lib
call: 1525 {*union* eax, *union* ecx, *u32* edx, *v** esp_47} := CALL HeapCreate(
              )
              Reaching definitions: r0=r0{1510},   r1=r1{2439},   r2=r2{1512},   r3=r3{2441},   r8=r8{1509},
                r9=truncu(32,8,r25{1503}),   r10=r10{2444},   r11=r11{2445},   r24=zfill(32,64,r24{1495}) / r25{1503},
                r25=r25{1503},   r26=zfill(32,64,r24{1495}) % r25{1503},   r27=r27{2449},   r28=r28{2450} - 16,
                r29=r29{2451},   r30=r30{2452},   r31=r31{2453},   m[r28{0} - 4]=m[r28{0} - 4]{1067},
                m[r28{0} - 8]=m[r28{0} - 8]{1067},   m[r28{0} - 12]=m[r28{0} - 12]{1067},
                m[r28{0} - 4]=m[r28{0} - 4]{2686},   m[r28{0} - 8]=m[r28{0} - 8]{2687},
                m[r28{0} - 12]=m[r28{0} - 12]{2688},   <all>=<all>{1067},
                tmp1=(zfill(32,64,r24{1495}) % r25{1503}) - 21,   tmp2=r25{1503},   tmpb=tmpb{2456},   tmph=tmph{2457},
                tmpl=zfill(32,64,r24{1495}),
                %flags=SUBFLAGS32( zfill(32,64,r24{1495}) % r25{1503}, 21, (zfill(32,64,r24{1495}) % r25{1503}) - 21 ),
                %ZF=((zfill(32,64,r24{1495}) % r25{1503}) - 21) = 0,   %CF=(zfill(32,64,r24{1495}) % r25{1503}) <u 21
              Live variables: eax,  ecx,  edx,  esp_47 in proc _start
result:    0 *union* eax := -
result:    0 *union* ecx := -
result:    0 *u32* edx := -
result:    0 *v** esp_47 := -
dest is not lib
call: 1538 {*32** eax, *v* ecx, *u32* edx, *v** esp_48} := CALL HeapAlloc(
                *HANDLE* m[esp_46 - 24] := m[esp_46 - 24]
                *DWORD* m[esp_46 - 20] := m[esp_46 - 20]
                *DWORD* m[esp_46 - 16] := m[esp_46 - 16]
              )
              Reaching definitions: r0=r0{1510},   r1=r1{2439},   r2=r2{1512},   r3=r3{2441},   r8=r8{1509},
                r9=truncu(32,8,r25{1503}),   r10=r10{2444},   r11=r11{2445},   r24=r24{1525},   r25=r25{1525},
                r26=r26{1525},   r27=r27{2449},   r28=r28{2450} - 28,   r29=r29{2451},   r30=r30{2452},   r31=r31{2453}
                m[r28{0} - 4]=m[r28{0} - 4]{1067},   m[r28{0} - 8]=m[r28{0} - 8]{1067},
                m[r28{0} - 12]=m[r28{0} - 12]{1067},   m[r28{0} - 4]=m[r28{0} - 4]{2686},
                m[r28{0} - 8]=m[r28{0} - 8]{2687},   m[r28{0} - 12]=m[r28{0} - 12]{2688},   <all>=<all>{1067},
                tmp1=r24{1525},   tmp2=r25{1503},   tmpb=tmpb{2456},   tmph=tmph{2457},   tmpl=zfill(32,64,r24{1495}),
                %flags=LOGICALFLAGS32( r24{1525} ),   %ZF=LOGICALFLAGS32( r24{1525} ),
                %CF=LOGICALFLAGS32( r24{1525} )
              Live variables: eax,  edx,  esp_48 in proc _start
result:    0 *32** eax := -
result:    0 *u32* edx := -
result:    0 *v** esp_48 := -
dest is not lib
call: 1611 {*union* eax, *u32* esi_1, *16* cx, *j8* al, *j8* cl, *u32* dl, *j8* bl, *union* ecx, *u32* edx, *union* ebx, *v** esp_51, *32** ebp_31, *union* edi} := CALL proc12(
                *u32* m[esp_50 - 8] := m[esp_50 - 8]
                *8* al := truncu(32,8,eax + ecx)
                *u8* cl := truncu(32,8,ecx)
                *u32* dl := dl
                *j8* bl := bl
                *32* eax := eax + ecx
                *u32* ecx := ecx
                *u32* edx := edx
                *u32* ebx := (eax + (ecx + ecx)) - 224
                *union* edi := edi
              )
              Reaching definitions: r0=truncu(32,16,r24{1595} + r25{1598}),   r1=r1{2495},   r2=r2{2496},   r3=r3{2497}
                r8=truncu(32,8,r24{1595} + r25{1598}),   r9=truncu(32,8,r25{1605}),   r10=r10{2500},   r11=r11{2501},
                r24=r24{1595} + r25{1598},   r25=r25{1605},   r26=r26{2504},
                r27=(r24{1595} + (r25{1598} + r25{1605})) - 224,   r28=r28{2506} - 12,   r29=r29{2507},   r30=r30{2508}
                r31=r31{2509},   m[r28{0} - 4]=m[r28{0} - 4]{1067},   m[r28{0} - 8]=m[r28{0} - 8]{1067},
                m[r28{0} - 12]=m[r28{0} - 12]{1067},   m[r28{0} - 4]=m[r28{0} - 4]{2693},
                m[r28{0} - 8]=m[r28{0} - 8]{2694},   m[r28{0} - 12]=m[r28{0} - 12]{2695},   <all>=<all>{1067},
                tmp1=r24{1595},   tmp2=tmp2{2511},   tmpb=tmpb{2512},   tmph=tmph{2513},   tmpl=tmpl{2514},
                %flags=ADDFLAGS32( r24{1595}, r25{1598}, r24{1595} + r25{1598} ),
                %ZF=ADDFLAGS32( r24{1595}, r25{1598}, r24{1595} + r25{1598} ),
                %CF=ADDFLAGS32( r24{1595}, r25{1598}, r24{1595} + r25{1598} )
              Live variables: bl,  cl,  cx,  dl,  ebp_31,  ebx,  edi,  esi_1,  esp_51 in proc _start
result:    0 *u32* esi_1 := -
result:    0 *16* cx := -
result:    0 *j8* cl := -
result:    0 *u32* dl := -
result:    0 *j8* bl := -
result:    0 *union* ebx := -
result:    0 *v** esp_51 := -
result:    0 *32** ebp_31 := -
result:    0 *union* edi := -
dest is not lib
call: 1622 {*union* eax, *u64* esi_1, *j8* cl, *u32* dl, *j8* bl, *union* ecx, *u32* edx, *union* ebx, *v** esp_52, *32** ebp_32, *union* edi} := CALL proc13(
                *32* m[esp_51 - 8] := m[esp_51 - 8]
                *j8* cl := cl
                *u32* dl := dl
                *j8* bl := bl
                *union* ebx := ebx
                *32** ebp := ebp_40
                *u32* esi_1 := esi_1
                *union* edi := edi
              )
              Reaching definitions: r0=truncu(32,16,r29{2529} - 96),   r1=r1{2519},   r2=r2{2496},   r3=r3{2497},
                r8=truncu(32,8,r29{2529} - 96),   r9=r9{2521},   r10=r10{2522},   r11=r11{2523},   r24=r29{2529} - 96,
                r25=r25{2525},   r26=r26{2526},   r27=r27{2527},   r28=r28{2528} - 12,   r29=r29{2529},   r30=r30{2530}
                r31=r31{2531},   m[r28{0} - 4]=m[r28{0} - 4]{1067},   m[r28{0} - 8]=m[r28{0} - 8]{1067},
                m[r28{0} - 12]=m[r28{0} - 12]{1067},   m[r28{0} - 4]=m[r28{0} - 4]{2693},
                m[r28{0} - 8]=m[r28{0} - 8]{2694},   m[r28{0} - 12]=m[r28{0} - 12]{2695},   <all>=<all>{1067},
                tmp1=tmp1{2532},   tmp2=tmp2{2511},   tmpb=tmpb{2512},   tmph=tmph{2513},   tmpl=tmpl{2514},
                %flags=%flags{2533},   %ZF=%ZF{2534},   %CF=%CF{2535}
              Live variables: bl,  dl,  eax,  ebp_32,  ebx,  edi,  esp_52 in proc _start
result:    0 *union* eax := -
result:    0 *u32* dl := -
result:    0 *j8* bl := -
result:    0 *union* ebx := -
result:    0 *v** esp_52 := -
result:    0 *32** ebp_32 := -
result:    0 *union* edi := -
dest is not lib
call: 1654 {*u64* eax_9, *u64* ecx, *32* edx, *v** esp_54} := CALL GlobalAlloc(
              )
              Reaching definitions: r0=r0{1641},   r1=r1{2519},   r2=r2{1643},   r3=r3{2497},   r8=r8{1640},
                r9=truncu(32,8,r25{1634}),   r10=r10{1622},   r11=r11{1622},   r24=zfill(32,64,r24{1626}) / r25{1634},
                r25=r25{1634},   r26=zfill(32,64,r24{1626}) % r25{1634},   r27=r27{1622},   r28=r28{1622} - 12,
                r29=r29{1622},   r30=r30{1622},   r31=r31{1622},   m[r28{0} - 4]=m[r28{0} - 4]{1067},
                m[r28{0} - 8]=m[r28{0} - 8]{1067},   m[r28{0} - 12]=m[r28{0} - 12]{1067},
                m[r28{0} - 4]=m[r28{0} - 4]{2693},   m[r28{0} - 8]=m[r28{0} - 8]{2694},
                m[r28{0} - 12]=m[r28{0} - 12]{2695},   <all>=<all>{1067},   tmp1=tmp1{1644},   tmp2=r25{1634},
                tmpb=tmpb{2512},   tmph=tmph{2513},   tmpl=zfill(32,64,r24{1626}),
                %flags=SUBFLAGS32( zfill(32,64,r24{1626}) % r25{1634}, 15, tmp1{1644} ),   %ZF=tmp1{1644} = 0,
                %CF=(zfill(32,64,r24{1626}) % r25{1634}) <u 15
              Live variables: eax_9,  ecx,  edx,  esp_54 in proc _start
result:    0 *u64* eax_9 := -
result:    0 *u64* ecx := -
result:    0 *32* edx := -
result:    0 *v** esp_54 := -
dest is not lib
call: 1681 {*u64* eax_1, *u64* ecx, *32* edx, *v** esp_54} := CALL GlobalFree(
              )
              Reaching definitions: r0=r0{1674},   r1=r1{1674},   r2=r2{1674},   r3=r3{1674},   r8=r8{1674},
                r9=r9{1674},   r10=r10{1674},   r11=r11{1674},   r24=r24{1674},   r25=r25{1674},   r26=r26{1674},
                r27=r27{1674},   r28=r28{1674} - 8,   r29=r29{1674},   r30=r30{1674},   r31=r31{1674},
                m[r28{0} - 4]=m[r28{0} - 4]{1674},   m[r28{0} - 8]=m[r28{0} - 8]{1674},
                m[r28{0} - 12]=m[r28{0} - 12]{1674},   m[r28{0} - 4]=m[r28{0} - 4]{1674},
                m[r28{0} - 8]=m[r28{0} - 8]{1674},   m[r28{0} - 12]=m[r28{0} - 12]{1674},   <all>=<all>{1674},
                tmp1=tmp1{1674},   tmp2=tmp2{1674},   tmpb=tmpb{1674},   tmph=tmph{1674},   tmpl=tmpl{1674},
                %flags=%flags{1674},   %ZF=%ZF{1674},   %CF=%CF{1674}
              Live variables: edx,  esp_54 in proc _start
result:    0 *32* edx := -
result:    0 *v** esp_54 := -
dest is not lib
call: 1691 {*union* eax, *u32* esi_1, *j8* cl, *u32* dl, *j8* bl, *union* ecx, *u32* edx, *union* ebx, *v** esp_55, *32** ebp_34, *union* edi} := CALL proc14(
                *j8* cl := cl
                *u32* dl := dl
                *j8* bl := bl
                *32* edx := edx
                *32** ebp := ebp_39
                *32* esi := esi
              )
              Reaching definitions: r0=truncu(32,16,r29{2549} - 96),   r1=r1{2537},   r2=r2{2538},   r3=r3{2539},
                r8=truncu(32,8,r29{2549} - 96),   r9=r9{2541},   r10=r10{2542},   r11=r11{2543},   r24=r29{2549} - 96,
                r25=r25{2545},   r26=r26{2546},   r27=r27{2547},   r28=r28{2548} - 8,   r29=r29{2549},   r30=r30{1687},
                r31=r31{2551},   m[r28{0} - 4]=m[r28{0} - 4]{1067},   m[r28{0} - 8]=m[r28{0} - 8]{1067},
                m[r28{0} - 12]=m[r28{0} - 12]{1067},   m[r28{0} - 4]=m[r28{0} - 4]{2696},
                m[r28{0} - 8]=m[r28{0} - 8]{2697},   m[r28{0} - 12]=m[r28{0} - 12]{2698},   <all>=<all>{1067},
                tmp1=tmp1{2552},   tmp2=tmp2{2553},   tmpb=tmpb{2554},   tmph=tmph{2555},   tmpl=tmpl{2556},
                %flags=%flags{2557},   %ZF=%ZF{2558},   %CF=%CF{2559}
              Live variables: bl,  cl,  dl,  eax,  ebp_34,  edx,  esi_1,  esp_55 in proc _start
result:    0 *union* eax := -
result:    0 *u32* esi_1 := -
result:    0 *j8* cl := -
result:    0 *u32* dl := -
result:    0 *j8* bl := -
result:    0 *u32* edx := -
result:    0 *v** esp_55 := -
result:    0 *32** ebp_34 := -
dest is not lib
call: 1703 {*union* eax, *j16* ax, *union* ecx, *u32* edx, *union* esp_5} := CALL proc15(
                *u32* m[esp_55 - 4] := m[esp_55 - 4]
                *u32* eax_1 := esi_1
                *u32* edx := edx
              )
              Reaching definitions: r0=truncu(32,16,r30{1691}),   r1=r1{2537},   r2=r2{2538},   r3=r3{2539},
                r8=truncu(32,8,r30{1691}),   r9=r9{1691},   r10=r10{1691},   r11=r11{1691},   r24=r30{1691},
                r25=r25{1691},   r26=r26{1691},   r27=r27{1691},   r28=r28{1691} - 8,   r29=r29{1691},   r30=r30{1691},
                r31=r31{1691},   m[r28{0} - 4]=m[r28{0} - 4]{1067},   m[r28{0} - 8]=m[r28{0} - 8]{1067},
                m[r28{0} - 12]=m[r28{0} - 12]{1067},   m[r28{0} - 4]=m[r28{0} - 4]{2696},
                m[r28{0} - 8]=m[r28{0} - 8]{2697},   m[r28{0} - 12]=m[r28{0} - 12]{2698},   <all>=<all>{1067},
                tmp1=r24{1691},   tmp2=tmp2{2553},   tmpb=tmpb{2554},   tmph=tmph{2555},   tmpl=tmpl{2556},
                %flags=LOGICALFLAGS32( r24{1691} ),   %ZF=LOGICALFLAGS32( r24{1691} ),
                %CF=LOGICALFLAGS32( r24{1691} )
              Live variables: eax,  ecx,  edx,  esp_5 in proc _start
result:    0 *union* eax := -
result:    0 *union* ecx := -
result:    0 *u32* edx := -
result:    0 *union* esp_5 := -
dest is not lib
call: 1837 {*union* eax, *j16* dx, *16* bx, *union* ecx, *u32* edx, *union* esp_5} := CALL proc16(
                *j32* m[esp_57 - 24] := m[esp_57 - 24]
                *u32* m[esp_57 - 20] := m[esp_57 - 20]
                *u16** m[esp_57 - 12] := m[esp_57 - 12]
                *j16* bx := bx
                *union* ebx := ebx
                *u32* edi_1 := edi_1
              )
              Reaching definitions: r0=r0{1833},   r1=r1{1833},   r2=r2{1833},   r3=r3{1833},   r8=r8{1833},
                r9=r9{1833},   r10=r10{1833},   r11=r11{1833},   r24=r24{1833},   r25=r25{1833},   r26=r26{1833},
                r27=r27{1833},   r28=r28{1833} - 4,   r29=r29{1833},   r30=r30{1833},   r31=r31{1833},
                m[r28{0} - 4]=m[r28{0} - 4]{1833},   m[r28{0} - 8]=m[r28{0} - 8]{1833},
                m[r28{0} - 12]=m[r28{0} - 12]{1833},   m[r28{0} - 4]=m[r28{0} - 4]{1833},
                m[r28{0} - 8]=m[r28{0} - 8]{1833},   m[r28{0} - 12]=m[r28{0} - 12]{1833},   <all>=<all>{1833},
                tmp1=tmp1{1833},   tmp2=tmp2{1833},   tmpb=tmpb{1833},   tmph=tmph{1833},   tmpl=tmpl{1833},
                %flags=%flags{1833},   %ZF=%ZF{1833},   %CF=%CF{1833}
              Live variables: bx,  dx,  eax,  ecx,  edx,  esp_5 in proc _start
result:    0 *union* eax := -
result:    0 *j16* dx := -
result:    0 *16* bx := -
result:    0 *union* ecx := -
result:    0 *u32* edx := -
result:    0 *union* esp_5 := -
dest is not lib
call: 1880 {*u32* eax_1, *u32* esi_1, *j8* cl, *u32* dl, *j8* bl, *union* ecx, *u32* edx, *union* ebx, *32** esp_59, *32** ebp, *u32* edi_1} := CALL proc6(
                *v** m[esp_58 - 12] := m[esp_58 - 12]
                *i32* m[esp_58 - 8] := m[esp_58 - 8]
                *32* m[esp_58 - 4] := m[esp_58 - 4]
                *union* cl := cl
                *u32* dl := dl
                *8* bl := bl
                *u32* ecx := ecx
                *u32* edx := edx
                *32* ebx := ebx + edi
                *v** ebp := ebp_37
                *32* esi := 0
                *32* edi := edi
              )
              Reaching definitions: r0=truncu(32,16,r29{1855} - 112),   r1=r1{1855},   r2=r2{1855},   r3=r3{1855},
                r8=truncu(32,8,r29{1855} - 112),   r9=r9{1855},   r10=r10{1855},   r11=r11{1855},   r24=r29{1855} - 112
                r25=r25{1855},   r26=r26{1855},   r27=r27{1858} + r31{1855},   r28=r28{1855} - 16,   r29=r29{1855},
                r30=0,   r31=r31{1855},   m[r28{0} - 4]=m[r28{0} - 4]{1855},   m[r28{0} - 8]=m[r28{0} - 8]{1855},
                m[r28{0} - 12]=m[r28{0} - 12]{1855},   m[r28{0} - 4]=m[r28{0} - 4]{1855},
                m[r28{0} - 8]=m[r28{0} - 8]{1855},   m[r28{0} - 12]=m[r28{0} - 12]{1855},   <all>=<all>{1855},
                tmp1=tmp1{1862},   tmp2=tmp2{1855},   tmpb=tmpb{1855},   tmph=tmph{1855},   tmpl=tmpl{1855},
                %flags=SUBFLAGS32( m[r29{1855} - 176], 0, tmp1{1862} ),   %ZF=tmp1{1862} = 0,
                %CF=m[r29{1855} - 176] <u 0
              Live variables: bl,  dl,  eax_1,  ebp,  ebx,  edi_1,  edx,  esi_1,  esp_59 in proc _start
result:    0 *u32* eax_1 := -
result:    0 *u32* esi_1 := -
result:    0 *u32* dl := -
result:    0 *j8* bl := -
result:    0 *u32* edx := -
result:    0 *union* ebx := -
result:    0 *32** esp_59 := -
result:    0 *32** ebp := -
result:    0 *u32* edi_1 := -
dest is not lib
call: 1324 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetModuleHandleA(
              )
              Reaching definitions: r0=r0{2333},   r1=r1{2334},   r2=r2{2335},   r3=r3{2336},   r8=r8{2337},
                r9=r9{2338},   r10=r10{2339},   r11=r11{2340},   r24=r24{2357},   r25=r25{2358},   r26=r26{2359},
                r27=r27{2344},   r28=r28{2345} - 8,   r29=r29{2346},   r30=r30{2361},   r31=r31{1295},
                m[r28{0} - 4]=m[r28{0} - 4]{1067},   m[r28{0} - 8]=m[r28{0} - 8]{1067},
                m[r28{0} - 12]=m[r28{0} - 12]{1067},   m[r28{0} - 4]=m[r28{0} - 4]{2677},
                m[r28{0} - 8]=m[r28{0} - 8]{2678},   m[r28{0} - 12]=m[r28{0} - 12]{2679},   <all>=<all>{1067},
                tmp1=r30{2361} - 1,   tmp2=tmp2{2350},   tmpb=tmpb{2351},   tmph=tmph{2352},   tmpl=tmpl{2353},
                %flags=SUBFLAGS32( r30{2361}, 1, r30{2361} - 1 ),   %ZF=(r30{2361} - 1) = 0,   %CF=r30{2361} <u 1
              Live variables: eax in proc _start
result:    0 *32* eax := -
dest is not lib
call: 1330 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL CloseHandle(
                *HANDLE* m[esp_38 - 8] := m[esp_38 - 8]
              )
              Reaching definitions: r0=r0{2333},   r1=r1{2334},   r2=r2{2335},   r3=r3{2336},   r8=r8{2337},
                r9=r9{2338},   r10=r10{2339},   r11=r11{2340},   r24=r24{1324},   r25=r25{1324},   r26=r26{1324},
                r27=r27{2344},   r28=r28{2345} - 12,   r29=r29{2346},   r30=r30{2361},   r31=r31{1295},
                m[r28{0} - 4]=m[r28{0} - 4]{1067},   m[r28{0} - 8]=m[r28{0} - 8]{1067},
                m[r28{0} - 12]=m[r28{0} - 12]{1067},   m[r28{0} - 4]=m[r28{0} - 4]{2677},
                m[r28{0} - 8]=m[r28{0} - 8]{2678},   m[r28{0} - 12]=m[r28{0} - 12]{2679},   <all>=<all>{1067},
                tmp1=r30{2361} - 1,   tmp2=tmp2{2350},   tmpb=tmpb{2351},   tmph=tmph{2352},   tmpl=tmpl{2353},
                %flags=SUBFLAGS32( r30{2361}, 1, r30{2361} - 1 ),   %ZF=(r30{2361} - 1) = 0,   %CF=r30{2361} <u 1
              Live variables:  in proc _start
dest is not lib
call: 1367 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetCurrentProcess(
              )
              Reaching definitions: r0=r0{1358},   r1=r1{2334},   r2=r2{1360},   r3=r3{2336},   r8=r8{1357},
                r9=truncu(32,8,r25{1351}),   r10=r10{2339},   r11=r11{2340},   r24=zfill(32,64,r24{1343}) / r25{1351},
                r25=r25{1351},   r26=zfill(32,64,r24{1343}) % r25{1351},   r27=r27{2344},   r28=r28{2345} - 8,
                r29=r29{2346},   r30=r30{2361},   r31=r31{1295},   m[r28{0} - 4]=m[r28{0} - 4]{1067},
                m[r28{0} - 8]=m[r28{0} - 8]{1067},   m[r28{0} - 12]=m[r28{0} - 12]{1067},
                m[r28{0} - 4]=m[r28{0} - 4]{2677},   m[r28{0} - 8]=m[r28{0} - 8]{2678},
                m[r28{0} - 12]=m[r28{0} - 12]{2679},   <all>=<all>{1067},   tmp1=tmp1{1361},   tmp2=r25{1351},
                tmpb=tmpb{2351},   tmph=tmph{2352},   tmpl=zfill(32,64,r24{1343}),
                %flags=SUBFLAGS32( zfill(32,64,r24{1343}) % r25{1351}, 16, tmp1{1361} ),   %ZF=tmp1{1361} = 0,
                %CF=(zfill(32,64,r24{1343}) % r25{1351}) <u 16
              Live variables: eax in proc _start
result:    0 *32* eax := -
dest is not lib
call: 1375 {*u32* eax, *v** ecx, *u32* edx, *v* esp} := CALL TerminateProcess(
              )
              Reaching definitions: r0=r0{1358},   r1=r1{2334},   r2=r2{1360},   r3=r3{2336},   r8=r8{1357},
                r9=truncu(32,8,r25{1351}),   r10=r10{2339},   r11=r11{2340},   r24=r24{1367},   r25=r25{1367},
                r26=r26{1367},   r27=r27{2344},   r28=r28{2345} - 16,   r29=r29{2346},   r30=r30{2361},   r31=r31{1295}
                m[r28{0} - 4]=m[r28{0} - 4]{1067},   m[r28{0} - 8]=m[r28{0} - 8]{1067},
                m[r28{0} - 12]=m[r28{0} - 12]{1067},   m[r28{0} - 4]=m[r28{0} - 4]{2677},
                m[r28{0} - 8]=m[r28{0} - 8]{2678},   m[r28{0} - 12]=m[r28{0} - 12]{2679},   <all>=<all>{1067},
                tmp1=tmp1{1361},   tmp2=r25{1351},   tmpb=tmpb{2351},   tmph=tmph{2352},   tmpl=zfill(32,64,r24{1343}),
                %flags=SUBFLAGS32( zfill(32,64,r24{1343}) % r25{1351}, 16, tmp1{1361} ),   %ZF=tmp1{1361} = 0,
                %CF=(zfill(32,64,r24{1343}) % r25{1351}) <u 16
              Live variables:  in proc _start
dest is not lib
call: 1341 {*u32* eax, *v** ecx, *u32* edx, *v* esp} := CALL TerminateThread(
              )
              Reaching definitions: r0=r0{2333},   r1=r1{2334},   r2=r2{2335},   r3=r3{2336},   r8=r8{2337},
                r9=r9{2338},   r10=r10{2339},   r11=r11{2340},   r24=r24{1330},   r25=r25{1330},   r26=r26{1330},
                r27=r27{2344},   r28=r28{2345} - 16,   r29=r29{2346},   r30=r30{2361},   r31=r31{1295},
                m[r28{0} - 4]=m[r28{0} - 4]{1067},   m[r28{0} - 8]=m[r28{0} - 8]{1067},
                m[r28{0} - 12]=m[r28{0} - 12]{1067},   m[r28{0} - 4]=m[r28{0} - 4]{2677},
                m[r28{0} - 8]=m[r28{0} - 8]{2678},   m[r28{0} - 12]=m[r28{0} - 12]{2679},   <all>=<all>{1067},
                tmp1=tmp1{1331},   tmp2=tmp2{2350},   tmpb=tmpb{2351},   tmph=tmph{2352},   tmpl=tmpl{2353},
                %flags=SUBFLAGS32( m[r29{2346} - 144], 20, tmp1{1331} ),   %ZF=tmp1{1331} = 0,
                %CF=m[r29{2346} - 144] <u 20
              Live variables:  in proc _start
dest is not lib
call: 1116 {*32* eax_1, *v* ecx, *v* edx, *v* esp} := CALL ModifyMenuA(
              )
              Reaching definitions: r0=truncu(32,16,zfill(32,64,r24{1082}) / r25{1090}),   r1=r1{2218},
                r2=truncu(32,16,zfill(32,64,r24{1082}) % r25{1090}),   r3=r3{2220},
                r8=truncu(32,8,zfill(32,64,r24{1082}) / r25{1090}),   r9=truncu(32,8,r25{1090}),   r10=r10{2223},
                r11=r11{2224},   r24=zfill(32,64,r24{1082}) / r25{1090},   r25=r25{1090},
                r26=zfill(32,64,r24{1082}) % r25{1090},   r27=r27{2228},   r28=r28{2229} - 24,   r29=r29{2230},
                r30=r30{2231},   r31=r31{2232},   m[r28{0} - 4]=m[r28{0} - 4]{1067},
                m[r28{0} - 8]=m[r28{0} - 8]{1067},   m[r28{0} - 12]=m[r28{0} - 12]{1067},
                m[r28{0} - 4]=m[r28{0} - 4]{2665},   m[r28{0} - 8]=m[r28{0} - 8]{2666},
                m[r28{0} - 12]=m[r28{0} - 12]{2667},   <all>=<all>{1067},
                tmp1=(zfill(32,64,r24{1082}) % r25{1090}) - 267,   tmp2=r25{1090},   tmpb=tmpb{2235},   tmph=tmph{1079}
                tmpl=zfill(32,64,r24{1082}),
                %flags=SUBFLAGS32( zfill(32,64,r24{1082}) % r25{1090}, 267, (zfill(32,64,r24{1082}) % r25{1090}) - 267 ),
                %ZF=((zfill(32,64,r24{1082}) % r25{1090}) - 267) = 0,   %CF=(zfill(32,64,r24{1082}) % r25{1090}) <u 267
              Live variables: eax_1 in proc _start
result:    0 *32* eax_1 := -
dest is not lib
call: 1142 {*union* eax, *union* ecx, *u32* edx, *v* esp} := CALL InvalidateRect(
                *HWND* m[esp_38 - 32] := m[esp_38 - 32]
                *LPRECT* m[esp_38 - 28] := m[esp_38 - 28]
                *BOOL* m[esp_38 - 24] := m[esp_38 - 24]
              )
              Reaching definitions: r0=truncu(32,16,zfill(32,64,r24{1082}) / r25{1090}),   r1=r1{2218},
                r2=truncu(32,16,zfill(32,64,r24{1082}) % r25{1090}),   r3=r3{2220},
                r8=truncu(32,8,zfill(32,64,r24{1082}) / r25{1090}),   r9=truncu(32,8,r25{1090}),   r10=r10{2223},
                r11=r11{2224},   r24=r24{1116},   r25=r25{1116},   r26=r26{1116},   r27=r27{2228},   r28=r28{2229} - 36
                r29=r29{2230},   r30=r30{2231},   r31=r31{2232},   m[r28{0} - 4]=m[r28{0} - 4]{1067},
                m[r28{0} - 8]=m[r28{0} - 8]{1067},   m[r28{0} - 12]=m[r28{0} - 12]{1067},
                m[r28{0} - 4]=m[r28{0} - 4]{2665},   m[r28{0} - 8]=m[r28{0} - 8]{2666},
                m[r28{0} - 12]=m[r28{0} - 12]{2667},   <all>=<all>{1067},   tmp1=r24{1116},   tmp2=r25{1090},
                tmpb=tmpb{2235},   tmph=tmph{1079},   tmpl=zfill(32,64,r24{1082}),   %flags=LOGICALFLAGS32( r24{1116} )
                %ZF=LOGICALFLAGS32( r24{1116} ),   %CF=LOGICALFLAGS32( r24{1116} )
              Live variables: eax,  ecx,  edx in proc _start
result:    0 *union* eax := -
result:    0 *union* ecx := -
result:    0 *u32* edx := -
dest is not lib
call: 1131 {*union* eax, *union* ecx, *u32* edx, *v* esp} := CALL SendMessageA(
                *HWND* m[esp_38 - 36] := m[esp_38 - 36]
                *UINT* m[esp_38 - 32] := m[esp_38 - 32]
                *WPARAM* m[esp_38 - 28] := m[esp_38 - 28]
                *LPARAM* m[esp_38 - 24] := m[esp_38 - 24]
              )
              Reaching definitions: r0=truncu(32,16,zfill(32,64,r24{1082}) / r25{1090}),   r1=r1{2218},
                r2=truncu(32,16,zfill(32,64,r24{1082}) % r25{1090}),   r3=r3{2220},
                r8=truncu(32,8,zfill(32,64,r24{1082}) / r25{1090}),   r9=truncu(32,8,r25{1090}),   r10=r10{2223},
                r11=r11{2224},   r24=r24{1116},   r25=r25{1116},   r26=r26{1116},   r27=r27{2228},   r28=r28{2229} - 40
                r29=r29{2230},   r30=r30{2231},   r31=r31{2232},   m[r28{0} - 4]=m[r28{0} - 4]{1067},
                m[r28{0} - 8]=m[r28{0} - 8]{1067},   m[r28{0} - 12]=m[r28{0} - 12]{1067},
                m[r28{0} - 4]=m[r28{0} - 4]{2665},   m[r28{0} - 8]=m[r28{0} - 8]{2666},
                m[r28{0} - 12]=m[r28{0} - 12]{2667},   <all>=<all>{1067},   tmp1=r24{1116},   tmp2=r25{1090},
                tmpb=tmpb{2235},   tmph=tmph{1079},   tmpl=zfill(32,64,r24{1082}),   %flags=LOGICALFLAGS32( r24{1116} )
                %ZF=LOGICALFLAGS32( r24{1116} ),   %CF=LOGICALFLAGS32( r24{1116} )
              Live variables: eax,  ecx,  edx in proc _start
result:    0 *union* eax := -
result:    0 *union* ecx := -
result:    0 *u32* edx := -
dest is not lib
call: 1009 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetDC(
              )
              Reaching definitions: r0=truncu(32,16,zfill(32,64,r24{983}) / r25{991}),   r1=r1{982},
                r2=truncu(32,16,zfill(32,64,r24{983}) % r25{991}),   r3=r3{982},
                r8=truncu(32,8,zfill(32,64,r24{983}) / r25{991}),   r9=truncu(32,8,r25{991}),   r10=r10{982},
                r11=r11{982},   r24=zfill(32,64,r24{983}) / r25{991},   r25=r25{991},
                r26=zfill(32,64,r24{983}) % r25{991},   r27=r27{982},   r28=r28{982} - 8,   r29=r29{982},
                r30=r30{982},   r31=r31{982},   m[r28{0} - 4]=m[r28{0} - 4]{982},   m[r28{0} - 8]=m[r28{0} - 8]{982},
                m[r28{0} - 12]=m[r28{0} - 12]{982},   m[r28{0} - 4]=m[r28{0} - 4]{982},
                m[r28{0} - 8]=m[r28{0} - 8]{982},   m[r28{0} - 12]=m[r28{0} - 12]{982},   <all>=<all>{982},
                tmp1=tmp1{1001},   tmp2=r25{991},   tmpb=tmpb{982},   tmph=tmph{982},   tmpl=zfill(32,64,r24{983}),
                %flags=SUBFLAGS32( zfill(32,64,r24{983}) % r25{991}, 40, tmp1{1001} ),   %ZF=tmp1{1001} = 0,
                %CF=(zfill(32,64,r24{983}) % r25{991}) <u 40
              Live variables: eax in proc _start
result:    0 *32* eax := -
dest is not lib
call: 1023 {*u64* eax, *u64* ecx_3, *u32* edx, *v** esp_35} := CALL DrawTextA(
                *HDC* m[esp_33 - 24] := m[esp_33 - 24]
                *LPCSTR* m[esp_33 - 20] := m[esp_33 - 20]
                *i32* m[esp_33 - 16] := m[esp_33 - 16]
                *LPRECT* m[esp_33 - 12] := m[esp_33 - 12]
                *UINT* m[esp_33 - 8] := m[esp_33 - 8]
              )
              Reaching definitions: r0=truncu(32,16,zfill(32,64,r24{983}) / r25{991}),   r1=r1{982},
                r2=truncu(32,16,zfill(32,64,r24{983}) % r25{991}),   r3=r3{982},
                r8=truncu(32,8,zfill(32,64,r24{983}) / r25{991}),   r9=truncu(32,8,r25{991}),   r10=r10{982},
                r11=r11{982},   r24=r24{1009},   r25=r25{1009},   r26=r26{1009},   r27=r27{982},   r28=r28{982} - 28,
                r29=r29{982},   r30=r30{982},   r31=r31{982},   m[r28{0} - 4]=m[r28{0} - 4]{982},
                m[r28{0} - 8]=m[r28{0} - 8]{982},   m[r28{0} - 12]=m[r28{0} - 12]{982},
                m[r28{0} - 4]=m[r28{0} - 4]{982},   m[r28{0} - 8]=m[r28{0} - 8]{982},
                m[r28{0} - 12]=m[r28{0} - 12]{982},   <all>=<all>{982},   tmp1=tmp1{1001},   tmp2=r25{991},
                tmpb=tmpb{982},   tmph=tmph{982},   tmpl=zfill(32,64,r24{983}),
                %flags=SUBFLAGS32( zfill(32,64,r24{983}) % r25{991}, 40, tmp1{1001} ),   %ZF=tmp1{1001} = 0,
                %CF=(zfill(32,64,r24{983}) % r25{991}) <u 40
              Live variables: eax,  ecx_3,  edx,  esp_35 in proc _start
result:    0 *u64* eax := -
result:    0 *u64* ecx_3 := -
result:    0 *u32* edx := -
result:    0 *v** esp_35 := -
dest is not lib
call:  259 {*32* eax, *32* ecx, *32* edx, *v* esp} := CALL GetModuleHandleA(
              )
              Reaching definitions: r0=truncu(32,16,zfill(32,64,r30{217}) / r25{241}),   r1=r1{0},   r2=r2{250},
                r3=r3{0},   r8=truncu(32,8,zfill(32,64,r30{217}) / r25{241}),   r9=truncu(32,8,r25{241}),   r10=r10{0},
                r11=r11{0},   r24=zfill(32,64,r30{217}) / r25{241},   r25=r25{241},
                r26=zfill(32,64,r30{217}) % r25{241},   r27=0,   r28=r28{8} - 8,   r29=r29{8},   r30=r30{217},
                r31=r31{2042},   m[r28{0} - 4]=252,   m[r28{0} - 8]=0x4031b8,   m[r28{0} - 12]=%pc,
                tmp1=(zfill(32,64,r30{217}) % r25{241}) - 50,   tmp2=r25{241},   tmpb=tmpb{2044},   tmph=tmph{0},
                tmpl=zfill(32,64,r30{217}),
                %flags=SUBFLAGS32( zfill(32,64,r30{217}) % r25{241}, 50, (zfill(32,64,r30{217}) % r25{241}) - 50 ),
                %ZF=((zfill(32,64,r30{217}) % r25{241}) - 50) = 0,   %CF=(zfill(32,64,r30{217}) % r25{241}) <u 50
              Live variables: eax,  ecx,  edx in proc _start
result:    0 *32* eax := -
result:    0 *32* ecx := -
result:    0 *32* edx := -
dest is not lib
call:  381 {*u64* eax, *union* ecx, *u32* edx, *union* esp_5} := CALL SendMessageA(
                *HWND* m[esp_4 - 16] := m[esp_4 - 16]
                *UINT* m[esp_4 - 12] := m[esp_4 - 12]
                *WPARAM* m[esp_4 - 8] := m[esp_4 - 8]
                *LPARAM* m[esp_4 - 4] := m[esp_4 - 4]
              )
              Reaching definitions: r0=truncu(32,16,r29{347} - 268),   r1=r1{347},   r2=r2{347},   r3=r3{347},
                r8=truncu(32,8,r29{347} - 268),   r9=r9{347},   r10=r10{347},   r11=r11{347},   r24=r29{347} - 268,
                r25=r25{2065},   r26=r26{2066},   r27=r27{347},   r28=r28{347} - 20,   r29=r29{347},   r30=r30{2068},
                r31=r24{347},   m[r28{0} - 4]=m[r28{0} - 4]{347},   m[r28{0} - 8]=m[r28{0} - 8]{347},
                m[r28{0} - 12]=m[r28{0} - 12]{347},   m[r28{0} - 4]=m[r28{0} - 4]{347},
                m[r28{0} - 8]=m[r28{0} - 8]{347},   m[r28{0} - 12]=m[r28{0} - 12]{347},   <all>=<all>{347},
                tmp1=r30{2068} - 2,   tmp2=tmp2{347},   tmpb=tmpb{347},   tmph=tmph{347},   tmpl=tmpl{347},
                %flags=SUBFLAGS32( r30{2068}, 2, r30{2068} - 2 ),   %ZF=(r30{2068} - 2) = 0,   %CF=r30{2068} <u 2
              Live variables: eax,  ecx,  esp_5 in proc _start
result:    0 *u64* eax := -
result:    0 *union* ecx := -
result:    0 *union* esp_5 := -
dest is not lib
call: 1955 {*32* esi, *32* ecx_1, *32* ebx, *32* esp, *32* ebp, *32* edi} := CALL proc8(
                *32** ebp := ebp_11
              )
              Reaching definitions: r0=r0{2620},   r1=r1{2621},   r2=r2{2622},   r3=r3{2623},   r8=r8{2624},
                r9=r9{2625},   r10=r10{2626},   r11=r11{2627},   r24=r24{2628},   r25=r25{2629},   r26=r26{2630},
                r27=r27{2631},   r28=r28{2632} - 4,   r29=r29{2633},   r30=r30{2634},   r31=r31{2635},
                m[r28{0} - 4]=m[r28{0} - 4]{2703},   m[r28{0} - 8]=m[r28{0} - 8]{2704},
                m[r28{0} - 12]=m[r28{0} - 12]{2705},   tmp1=tmp1{2636},   tmp2=tmp2{2637},   tmpb=tmpb{2638},
                tmph=tmph{2639},   tmpl=tmpl{2640},   %flags=%flags{2641},   %ZF=%ZF{2642},   %CF=%CF{2643}
              Live variables:  in proc _start
dest is not lib
call:  121 {*8* dl, *j8* bl, *j32** ecx_2, *v** edx, *32** esp_1} := CALL proc22(
                *union* local17 := m[esp - 4]
                *union* edi := eax
              )
              Reaching definitions: r10=r10{114},   r11=r11{114},   r24=r24{114},   r25=r25{114},   r26=r26{114},
                r27=r27{114},   r28=r28{114} - 8,   r29=r29{114},   r30=r30{114},   r31=r24{114},
                m[r28{0} - 4]=m[r28{0} - 4]{114},   m[r28{0} - 8]=m[r28{0} - 8]{114},
                m[r28{0} - 9]=m[r28{0} - 9]{114},   m[r28{0} - 10]=m[r28{0} - 10]{114},
                m[r28{0} - 11]=m[r28{0} - 11]{114},   m[r28{0} - 12]=m[r28{0} - 12]{114},
                m[r28{0} - 13]=m[r28{0} - 13]{114},   m[r28{0} - 14]=m[r28{0} - 14]{114},
                m[r28{0} - 15]=m[r28{0} - 15]{114},   m[r28{0} - 16]=m[r28{0} - 16]{114},
                m[r28{0} - 17]=m[r28{0} - 17]{114},   m[r28{0} - 18]=m[r28{0} - 18]{114},
                m[r28{0} - 19]=m[r28{0} - 19]{114},   m[r28{0} - 20]=m[r28{0} - 20]{114},
                m[r28{0} - 24]=m[r28{0} - 24]{114},   m[r28{0} - 28]=m[r28{0} - 28]{114},
                m[r28{0} - 32]=m[r28{0} - 32]{114},   m[r28{0} - 36]=m[r28{0} - 36]{114},
                m[r28{0} - 4]=m[r28{0} - 4]{114},   m[r28{0} - 8]=m[r28{0} - 8]{114},
                m[r28{0} - 9]=m[r28{0} - 9]{114},   m[r28{0} - 10]=m[r28{0} - 10]{114},
                m[r28{0} - 11]=m[r28{0} - 11]{114},   m[r28{0} - 12]=m[r28{0} - 12]{114},
                m[r28{0} - 13]=m[r28{0} - 13]{114},   m[r28{0} - 14]=m[r28{0} - 14]{114},
                m[r28{0} - 15]=m[r28{0} - 15]{114},   m[r28{0} - 16]=m[r28{0} - 16]{114},
                m[r28{0} - 17]=m[r28{0} - 17]{114},   m[r28{0} - 18]=m[r28{0} - 18]{114},
                m[r28{0} - 19]=m[r28{0} - 19]{114},   m[r28{0} - 20]=m[r28{0} - 20]{114},
                m[r28{0} - 24]=m[r28{0} - 24]{114},   m[r28{0} - 28]=m[r28{0} - 28]{114},
                m[r28{0} - 32]=m[r28{0} - 32]{114},   m[r28{0} - 36]=m[r28{0} - 36]{114},   <all>=<all>{114},
                tmp1=tmp1{114},   tmpb=tmpb{114},   %flags=%flags{114},   %ZF=%ZF{114},   %CF=%CF{114}
              Live variables: dl,  ecx_2,  edx,  esp_1 in proc proc2
result:    0 *8* dl := -
result:    0 *j32** ecx_2 := -
result:    0 *v** edx := -
result:    0 *32** esp_1 := -
Warning: CHLLCode::AddProcDec: Proc proc6 has 12 parameters
dest is not lib
call:  115 {*32* eax, *union* cl, *8* bl, *u32* ecx_3, *u32* edx, *32** esp_2} := CALL proc19(
                *union* cl := param4
                *union* eax := param2
                *u32** ecx_1 := ecx + param1
                *i32* edx := param2
                *v** ebx_1 := ebx + param1
                *union* edi := edi + param1
              )
              Reaching definitions: r9=r9{275},   r10=r10{276},   r11=r11{277},   r24=m[r28{0} + 8]{0},
                r25=r25{107} + m[r28{0} + 4]{0},   r26=m[r28{0} + 8]{0},   r27=r27{32} + m[r28{0} + 4]{0},
                r28=(r28{0} - 40) - 4,   r29=r28{0} - 4,   r30=m[r28{0} + 4]{0},   r31=r31{31} + m[r28{0} + 4]{0},
                m[r28{0} + 4]=m[r28{0} + 4]{325},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{300},   m[r28{0} - 12]=r25{97},
                m[r28{0} - 16]=m[r28{0} - 16]{21},   m[r28{0} - 20]=m[r28{0} - 20]{38},   m[r28{0} - 24]=r26{33},
                m[r28{0} - 28]=r25{39},   m[r28{0} - 32]=r27{0},   m[r28{0} - 36]=r30{0},   m[r28{0} - 40]=r31{0},
                m[r28{0} - 44]=%pc,   tmp1=r25{107},   tmpb=tmpb{0},
                %flags=ADDFLAGS32( r25{107}, m[r28{0} + 4]{0}, r25{107} + m[r28{0} + 4]{0} ),
                %ZF=ADDFLAGS32( r25{107}, m[r28{0} + 4]{0}, r25{107} + m[r28{0} + 4]{0} ),
                %CF=ADDFLAGS32( r25{107}, m[r28{0} + 4]{0}, r25{107} + m[r28{0} + 4]{0} )
              Live variables: bl,  cl,  eax,  ecx_3,  edx,  esp_2 in proc proc6
result:    0 *32* eax := -
result:    0 *union* cl := -
result:    0 *8* bl := -
result:    0 *u32* ecx_3 := -
result:    0 *u32* edx := -
result:    0 *32** esp_2 := -
dest is not lib
call:  198 {*32* eax, *8* dl_1, *32* ecx, *v* esp} := CALL proc18(
                *32* m[esp_3 - 4] := m[esp_3 - 4]
                *u32* dl := dl
                *8** eax_1 := eax_1
                *8** ecx_2 := eax + esi
              )
              Reaching definitions: r9=r9{175},   r10=r10{175},   r11=r11{175},   r24=r24{194},
                r25=r24{180} + r30{175},   r26=r26{175},   r27=r27{175},   r28=r28{175} - 8,   r29=r29{175},
                r30=r30{175},   r31=r31{175},   m[r28{0} + 4]=m[r28{0} + 4]{175},   m[r28{0} + 8]=m[r28{0} + 8]{175},
                m[r28{0} + 4]=m[r28{0} + 4]{175},   m[r28{0} + 8]=m[r28{0} + 8]{175},
                m[r28{0} + 12]=m[r28{0} + 12]{175},   m[r28{0} - 4]=m[r28{0} - 4]{175},
                m[r28{0} - 8]=m[r28{0} - 8]{175},   m[r28{0} - 12]=m[r28{0} - 12]{175},
                m[r28{0} - 16]=m[r28{0} - 16]{175},   m[r28{0} - 20]=m[r28{0} - 20]{175},
                m[r28{0} - 24]=m[r28{0} - 24]{175},   m[r28{0} - 28]=m[r28{0} - 28]{175},
                m[r28{0} - 32]=m[r28{0} - 32]{175},   m[r28{0} - 36]=m[r28{0} - 36]{175},
                m[r28{0} - 40]=m[r28{0} - 40]{175},   m[r28{0} - 44]=m[r28{0} - 44]{175},
                m[r28{0} - 48]=m[r28{0} - 48]{175},   m[r28{0} - 52]=m[r28{0} - 52]{175},
                m[r28{0} - 56]=m[r28{0} - 56]{175},   m[r28{0} - 60]=m[r28{0} - 60]{175},
                m[r28{0} - 4]=m[r28{0} - 4]{175},   m[r28{0} - 8]=m[r28{0} - 8]{175},
                m[r28{0} - 12]=m[r28{0} - 12]{175},   m[r28{0} - 16]=m[r28{0} - 16]{175},
                m[r28{0} - 20]=m[r28{0} - 20]{175},   m[r28{0} - 24]=m[r28{0} - 24]{175},
                m[r28{0} - 28]=m[r28{0} - 28]{175},   m[r28{0} - 32]=m[r28{0} - 32]{175},
                m[r28{0} - 36]=m[r28{0} - 36]{175},   m[r28{0} - 40]=m[r28{0} - 40]{175},
                m[r28{0} - 44]=m[r28{0} - 44]{175},   m[r28{0} - 48]=m[r28{0} - 48]{175},
                m[r28{0} - 52]=m[r28{0} - 52]{175},   m[r28{0} - 56]=m[r28{0} - 56]{175},
                m[r28{0} - 60]=m[r28{0} - 60]{175},   <all>=<all>{175},   tmp1=r25{181} - (r24{180} + r30{175}),
                tmpb=tmpb{175},   %flags=LOGICALFLAGS32( r25{189} ),   %ZF=LOGICALFLAGS32( r25{189} ),
                %CF=LOGICALFLAGS32( r25{189} )
              Live variables: dl_1,  ecx in proc proc6
result:    0 *8* dl_1 := -
result:    0 *32* ecx := -
dest is not lib
call:  217 {*32* eax, *32* esi, *8* cl, *8* dl_1, *8* bl, *32* ecx, *32* edx, *32* ebx_2, *v** esp_5, *32* ebp, *32* edi} := CALL proc6(
                *v** m[esp_4 - 4] := m[esp_4 - 4]
                *32* m[esp_4 + 4] := m[esp_4 + 4]
                *union* cl := cl
                *u32* dl := dl
                *8* bl := bl
                *u32* ecx := ecx
                *u32* edx := edx
                *32* ebx := ebx
                *32* ebp := ebp
                *32* esi := esi
                *32* edi := edi
                *i32* m[esp_4] := m[esp_4]
              )
              Reaching definitions: r9=r9{211},   r10=r10{211},   r11=r11{211},   r24=r24{211},   r25=r25{211},
                r26=r26{211},   r27=r27{211},   r28=r28{211} - 8,   r29=r29{211},   r30=r30{211},   r31=r31{211},
                m[r28{0} + 4]=m[r28{0} + 4]{211},   m[r28{0} + 8]=m[r28{0} + 8]{211},
                m[r28{0} + 4]=m[r28{0} + 4]{211},   m[r28{0} + 8]=m[r28{0} + 8]{211},
                m[r28{0} + 12]=m[r28{0} + 12]{211},   m[r28{0} - 4]=m[r28{0} - 4]{211},
                m[r28{0} - 8]=m[r28{0} - 8]{211},   m[r28{0} - 12]=m[r28{0} - 12]{211},
                m[r28{0} - 16]=m[r28{0} - 16]{211},   m[r28{0} - 20]=m[r28{0} - 20]{211},
                m[r28{0} - 24]=m[r28{0} - 24]{211},   m[r28{0} - 28]=m[r28{0} - 28]{211},
                m[r28{0} - 32]=m[r28{0} - 32]{211},   m[r28{0} - 36]=m[r28{0} - 36]{211},
                m[r28{0} - 40]=m[r28{0} - 40]{211},   m[r28{0} - 44]=m[r28{0} - 44]{211},
                m[r28{0} - 48]=m[r28{0} - 48]{211},   m[r28{0} - 52]=m[r28{0} - 52]{211},
                m[r28{0} - 56]=m[r28{0} - 56]{211},   m[r28{0} - 60]=m[r28{0} - 60]{211},
                m[r28{0} - 4]=m[r28{0} - 4]{211},   m[r28{0} - 8]=m[r28{0} - 8]{211},
                m[r28{0} - 12]=m[r28{0} - 12]{211},   m[r28{0} - 16]=m[r28{0} - 16]{211},
                m[r28{0} - 20]=m[r28{0} - 20]{211},   m[r28{0} - 24]=m[r28{0} - 24]{211},
                m[r28{0} - 28]=m[r28{0} - 28]{211},   m[r28{0} - 32]=m[r28{0} - 32]{211},
                m[r28{0} - 36]=m[r28{0} - 36]{211},   m[r28{0} - 40]=m[r28{0} - 40]{211},
                m[r28{0} - 44]=m[r28{0} - 44]{211},   m[r28{0} - 48]=m[r28{0} - 48]{211},
                m[r28{0} - 52]=m[r28{0} - 52]{211},   m[r28{0} - 56]=m[r28{0} - 56]{211},
                m[r28{0} - 60]=m[r28{0} - 60]{211},   <all>=<all>{211},   tmp1=tmp1{211},   tmpb=tmpb{211},
                %flags=%flags{211},   %ZF=%ZF{211},   %CF=%CF{211}
              Live variables: bl,  cl,  dl_1,  eax,  ebp,  ebx_2,  ecx,  edi,  edx,  esi,  esp_5,  %flags,  %ZF,  %CF in proc proc6
result:    0 *32* eax := -
result:    0 *32* esi := -
result:    0 *8* cl := -
result:    0 *8* dl_1 := -
result:    0 *8* bl := -
result:    0 *32* ecx := -
result:    0 *32* edx := -
result:    0 *32* ebx_2 := -
result:    0 *v** esp_5 := -
result:    0 *32* ebp := -
result:    0 *32* edi := -
dest is not lib
call:   15 {*32* eax, *32* esi, *8* al, *u8* cl, *8* dl, *j8* bl, *u32* ecx, *32* edx, *u32* ebx, *v** esp, *32* ebp, *32* edi} := CALL proc17(
                *u32* local0 := param1
                *8* al := param2
                *u8* cl := param3
                *8* dl := param4
                *j8* bl := param5
                *32* eax := param6
                *u32* ecx := param7
                *32* edx := param8
                *u32* ebx := param9
                *32* ebp := a[m[esp - 4]]
                *32* edi := param10
              )
              Reaching definitions: r8=r8{0},   r9=r9{0},   r10=r10{0},   r11=r11{0},   r24=r24{0},   r25=r25{0},
                r26=r26{0},   r27=r27{0},   r28=r28{0} - 24,   r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r30{0},   m[r28{0} - 12]=1,
                m[r28{0} - 16]=m[r28{0} + 4]{0},   m[r28{0} - 20]=r27{0},   m[r28{0} - 24]=%pc
              Live variables: al,  bl,  cl,  dl,  eax,  ebp,  ebx,  ecx,  edi,  edx,  esp in proc proc12
result:    0 *32* eax := -
result:    0 *8* al := -
result:    0 *u8* cl := -
result:    0 *8* dl := -
result:    0 *j8* bl := -
result:    0 *u32* ecx := -
result:    0 *32* edx := -
result:    0 *u32* ebx := -
result:    0 *v** esp := -
result:    0 *32* ebp := -
result:    0 *32* edi := -
dest is not lib
call:   25 {*32* eax, *32* esi, *8* al, *8* cl, *8* dl, *8* bl, *32* ecx, *32* edx, *8** ebx_1, *32** esp, *32* ebp, *32* edi} := CALL proc17(
                *u32* m[esp - 8] := m[esp - 8]
                *8* al := al
                *u8* cl := cl
                *8* dl := dl
                *j8* bl := bl
                *32* eax := eax
                *u32* ecx := ecx
                *32* edx := edx
                *u32* ebx := ebx
                *32* ebp := ebp
                *32* edi := edi
              )
              Reaching definitions: r8=r8{15},   r9=r9{15},   r10=r10{15},   r11=r11{15},   r24=r24{15},   r25=r25{15},
                r26=r26{15},   r27=r27{15},   r28=r28{15} - 16,   r29=r29{15},   r30=r30{15},   r31=r31{15},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r30{0},   m[r28{0} - 12]=1,
                m[r28{0} - 16]=m[r28{0} + 4]{0},   m[r28{0} - 20]=r27{0},   m[r28{0} - 24]=%pc
              Live variables: bl,  cl,  dl,  ebp,  ebx_1,  edi,  esp in proc proc12
result:    0 *8* cl := -
result:    0 *8* dl := -
result:    0 *8* bl := -
result:    0 *8** ebx_1 := -
result:    0 *32** esp := -
result:    0 *32* ebp := -
result:    0 *32* edi := -
dest is not lib
call:   38 {*32* eax, *8* dl, *32* ecx, *v* esp} := CALL proc18(
                *32* local1 := m[esp - 4]
                *8* dl := dl
                *8** eax := eax
                *8** ecx_1 := ebx_1
              )
              Reaching definitions: r1=truncu(32,16,r27{25}),   r8=r8{25},   r9=r9{25},   r10=r10{25},   r11=r11{25},
                r24=r24{27},   r25=r27{25},   r26=r26{25},   r27=r27{25},   r28=r28{25} - 8,   r29=r29{25},
                r30=r30{26} + r27{25},   r31=r31{25},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=r30{0},   m[r28{0} - 12]=1,   m[r28{0} - 16]=m[r28{0} + 4]{0},   m[r28{0} - 20]=r27{0},
                m[r28{0} - 24]=%pc,   tmp1=r30{26},   %flags=ADDFLAGS32( r30{26}, r27{25}, r30{26} + r27{25} ),
                %ZF=ADDFLAGS32( r30{26}, r27{25}, r30{26} + r27{25} ),
                %CF=ADDFLAGS32( r30{26}, r27{25}, r30{26} + r27{25} )
              Live variables: dl in proc proc12
result:    0 *8* dl := -
dest is not lib
call:   67 {*32* eax, *8* dl, *32* ecx, *v* esp} := CALL proc18(
                *32* m[esp - 8] := m[esp - 8]
                *8* dl := dl
                *8** eax := eax
                *8** ecx_1 := ecx + ebx_1
              )
              Reaching definitions: r1=truncu(32,16,r25{53} + r27{25}),   r8=r8{25},   r9=r9{25},   r10=r10{88},
                r11=r11{25},   r24=r24{58},   r25=r25{53} + r27{25},   r26=r26{25},   r27=r27{25},
                r28=(r28{25} - 4) - 8,   r29=r29{25},   r30=r30{26} + r27{25},   r31=r31{92},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r30{0},   m[r28{0} - 12]=1,
                m[r28{0} - 16]=m[r28{0} + 4]{0},   m[r28{0} - 20]=r27{0},   m[r28{0} - 24]=%pc,   tmp1=r25{53},
                tmph=tmph{46},   %flags=ADDFLAGS32( r25{53}, r27{25}, r25{53} + r27{25} ),
                %ZF=ADDFLAGS32( r25{53}, r27{25}, r25{53} + r27{25} ),
                %CF=ADDFLAGS32( r25{53}, r27{25}, r25{53} + r27{25} )
              Live variables: dl in proc proc12
result:    0 *8* dl := -
dest is not lib
call:  122 {*32* eax, *u32* esi, *8* cl, *8* dl, *8* bl, *32* ecx, *u32* edx, *v** ebx, *v** esp_3, *32** ebp, *v** edi} := CALL proc6(
                *v** m[esp_2 - 4] := m[esp_2 - 4]
                *32* m[esp_2 + 4] := m[esp_2 + 4]
                *union* cl := cl
                *u32* dl := dl
                *8* bl := bl
                *u32* ecx := ecx
                *u32* edx := edx
                *32* ebx := ebx
                *32* ebp := ebp
                *32* esi := esi
                *32* edi := edi
                *i32* m[esp_2] := m[esp_2]
              )
              Reaching definitions: r9=r9{116},   r10=r10{116},   r11=r11{116},   r24=r24{116},   r25=r25{116},
                r26=r26{116},   r27=r27{116},   r28=r28{116} - 8,   r29=r29{116},   r30=r30{116},   r31=r31{116},
                m[r28{0} + 4]=m[r28{0} + 4]{116},   m[r28{0} - 4]=m[r28{0} - 4]{116},
                m[r28{0} - 8]=m[r28{0} - 8]{116},   m[r28{0} - 12]=m[r28{0} - 12]{116},
                m[r28{0} - 16]=m[r28{0} - 16]{116},   m[r28{0} - 24]=m[r28{0} - 24]{116},
                m[r28{0} - 28]=m[r28{0} - 28]{116},   m[r28{0} - 32]=m[r28{0} - 32]{116},
                m[r28{0} - 4]=m[r28{0} - 4]{116},   m[r28{0} - 8]=m[r28{0} - 8]{116},
                m[r28{0} - 12]=m[r28{0} - 12]{116},   m[r28{0} - 16]=m[r28{0} - 16]{116},
                m[r28{0} - 24]=m[r28{0} - 24]{116},   m[r28{0} - 28]=m[r28{0} - 28]{116},
                m[r28{0} - 32]=m[r28{0} - 32]{116},   <all>=<all>{116},   tmp1=tmp1{116},   tmpb=tmpb{116},
                %flags=%flags{116},   %ZF=%ZF{116},   %CF=%CF{116}
              Live variables: bl,  cl,  dl,  eax,  ebp,  ebx,  edi,  esi,  esp_3 in proc proc13
result:    0 *32* eax := -
result:    0 *u32* esi := -
result:    0 *8* cl := -
result:    0 *8* dl := -
result:    0 *8* bl := -
result:    0 *v** ebx := -
result:    0 *v** esp_3 := -
result:    0 *32** ebp := -
result:    0 *v** edi := -
dest is not lib
call:   49 {*32* eax, *32* esi, *8* cl, *8* dl, *8* bl, *32* ecx, *32* edx, *32** ebx, *32** esp, *32* ebp, *32* edi} := CALL proc20(
                *32* eax := eax + param6
                *32* edi := edi
              )
              Reaching definitions: r9=r9{71},   r10=r10{72},   r11=r11{73},   r24=r24{26} + r30{80},
                r25=r25{27} + r30{80},   r26=r26{25} + r30{80},   r27=r27{77} + 20,   r28=r28{78} - 16,   r29=r29{79},
                r30=r30{80},   r31=r31{23},   m[r28{0} - 4]=r27{0},   m[r28{0} - 8]=r31{0},   tmp1=r27{77},
                %flags=ADDFLAGS32( r27{77}, 20, r27{77} + 20 ),   %ZF=ADDFLAGS32( r27{77}, 20, r27{77} + 20 ),
                %CF=ADDFLAGS32( r27{77}, 20, r27{77} + 20 )
              Live variables: bl,  cl,  dl,  eax,  ebp,  ebx,  edx,  esi,  esp in proc proc14
result:    0 *32* eax := -
result:    0 *32* esi := -
result:    0 *8* cl := -
result:    0 *8* dl := -
result:    0 *8* bl := -
result:    0 *32* edx := -
result:    0 *32** ebx := -
result:    0 *32** esp := -
result:    0 *32* ebp := -
dest is not lib
call:   45 {*32* eax, *32* ecx, *32* edx} := CALL proc21(
                *u32* local0 := eax_2
                *v** eax_1 := ((eax & 0x7fffffff) + (esi + param2)) + 16
                *v** esi := esi + param2
              )
              Reaching definitions: r0=truncu(32,16,((r24{33} & 0x7fffffff) + (r30{7} + r24{0})) + 16),
                r24=((r24{33} & 0x7fffffff) + (r30{7} + r24{0})) + 16,   r25=r25{77},   r26=r26{78},   r27=r27{79},
                r28=(r28{0} - 16) - 8,   r29=r28{0} - 4,   r30=r30{7} + r24{0},   r31=r31{81},   m[r28{0} + 4]=r24{15},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r30{0},   m[r28{0} - 12]=r27{0},   m[r28{0} - 16]=r31{0},
                m[r28{0} - 20]=r24{15},   m[r28{0} - 24]=%pc,   tmp1=tmp1{82},   tmph=tmph{27},
                %flags=LOGICALFLAGS32( r24{33} & 0x7fffffff ),   %ZF=LOGICALFLAGS32( r24{33} & 0x7fffffff ),
                %CF=LOGICALFLAGS32( r24{33} & 0x7fffffff )
              Live variables: ecx,  edx in proc proc15
result:    0 *32* ecx := -
result:    0 *32* edx := -
Warning: CHLLCode::AddProcDec: Proc proc17 has 11 parameters
dest is not lib
call:   17 {*32* eax, *32* esi_1, *8* al, *u8* cl, *8* dl, *j8* bl, *u32* ecx, *32* edx, *u32* ebx, *32** esp, *32* ebp} := CALL proc23(
                *u64* m[esp - 4] := m[esp - 4]
                *u8* cl := param3
                *j8* bl := param5
                *u32* ecx := param7
                *u32* ebx := param9
                *u64* edi := esi + eax
              )
              Reaching definitions: r8=r8{31},   r9=r9{32},   r10=r10{33},   r11=r11{34},   r24=r24{10},   r25=r25{36},
                r26=r26{37},   r27=r27{38},   r28=r28{39} - 8,   r29=r29{40},   r30=r30{41},   r31=r30{41} + r24{10},
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r30{0},   m[r28{0} - 8]=r31{0},   tmp1=tmp1{43},
                %flags=%flags{44},   %ZF=%ZF{45},   %CF=%CF{46}
              Live variables: al,  bl,  cl,  dl,  eax,  ebp,  ebx,  ecx,  edx,  esi_1,  esp in proc proc17
result:    0 *32* eax := -
result:    0 *32* esi_1 := -
result:    0 *8* al := -
result:    0 *u8* cl := -
result:    0 *8* dl := -
result:    0 *j8* bl := -
result:    0 *u32* ecx := -
result:    0 *32* edx := -
result:    0 *u32* ebx := -
result:    0 *32** esp := -
result:    0 *32* ebp := -
dest is not lib
call:   53 {*i32* eax, *union* esi, *union* cl, *u32* dl, *8* bl, *v** ecx, *u32* edx, *j32* ebx, *v** esp, *32* ebp, *32* edi} := CALL proc6(
                *v** local1 := m[esp - 12]
                *i32* local3 := m[esp - 8]
                *32* local4 := m[esp - 4]
                *union* cl := cl
                *u32* dl := dl
                *8* bl := bl
                *union* ecx := ecx
                *u32* edx := edx
                *union* ebx := ebx
                *32* ebp := ebp
                *union* esi := esi
                *32* edi := edi
              )
              Reaching definitions: r9=r9{79},   r10=r10{80},   r11=r11{81},   r24=r24{95},   r25=r25{96},
                r26=r26{84},   r27=r27{85},   r28=r28{86} - 16,   r29=r29{87},   r30=r30{88},   r31=r31{89},
                m[r28{0} + 4]=m[r28{0} + 4]{12},   m[r28{0} - 4]=m[r28{0} - 4]{12},   m[r28{0} - 8]=m[r28{0} - 8]{12},
                m[r28{0} - 12]=m[r28{0} - 12]{12},   m[r28{0} - 16]=m[r28{0} - 16]{12},
                m[r28{0} - 4]=m[r28{0} - 4]{12},   m[r28{0} - 8]=m[r28{0} - 8]{12},   m[r28{0} - 12]=m[r28{0} - 12]{12}
                m[r28{0} - 16]=m[r28{0} - 16]{12},   <all>=<all>{12},   tmp1=r24{94},
                %flags=LOGICALFLAGS32( r24{94} ),   %ZF=LOGICALFLAGS32( r24{94} ),   %CF=LOGICALFLAGS32( r24{94} )
              Live variables: bl,  cl,  dl,  eax,  ebp,  ebx,  edi,  edx,  esi,  esp in proc proc20
result:    0 *i32* eax := -
result:    0 *union* esi := -
result:    0 *union* cl := -
result:    0 *u32* dl := -
result:    0 *8* bl := -
result:    0 *u32* edx := -
result:    0 *j32* ebx := -
result:    0 *v** esp := -
result:    0 *32* ebp := -
result:    0 *32* edi := -
dest is not lib
call:  111 {*32* eax_1, *v* ecx, *v* edx, *v* esp} := CALL GetDC(
              )
              Reaching definitions: r8=r8{359},   r9=r9{360},   r10=r10{361},   r11=truncu(32,8,r29{368}),
                r24=r24{363},   r25=r25{364},   r26=r26{365},   r27=r29{368},   r28=r28{367} - 8,   r29=r29{368},
                r30=r30{369},   r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=zfill(32,64,r31{0}) % 18,
                m[r28{0} - 8]=zfill(32,64,r31{0}) % 7,   m[r28{0} - 12]=zfill(32,64,r31{0}) % 15,
                m[r28{0} - 16]=zfill(32,64,r31{0}) % 10,   m[r28{0} - 20]=64 / m[r28{0} + 4]{0},   m[r28{0} - 25]=0,
                m[r28{0} - 32]=r29{0},   m[r28{0} - 36]=r30{0},   m[r28{0} - 40]=r27{0},   tmp1=tmp1{100},
                tmp2=tmp2{371},   tmpb=tmpb{372},   tmpl=tmpl{373},
                %flags=SUBFLAGS32( m[r28{367} + 24], 30, tmp1{100} ),   %ZF=tmp1{100} = 0,   %CF=m[r28{367} + 24] <u 30
              Live variables: eax_1 in proc proc23
result:    0 *32* eax_1 := -
dest is not lib
call:  124 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL MoveToEx(
              )
              Reaching definitions: r8=r8{359},   r9=r9{360},   r10=r10{361},   r11=truncu(32,8,r29{368}),
                r24=r24{111},   r25=r25{111},   r26=r26{111},   r27=r29{368},   r28=r28{367} - 24,   r29=r29{368},
                r30=r24{111},   r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=zfill(32,64,r31{0}) % 18,
                m[r28{0} - 8]=zfill(32,64,r31{0}) % 7,   m[r28{0} - 12]=zfill(32,64,r31{0}) % 15,
                m[r28{0} - 16]=zfill(32,64,r31{0}) % 10,   m[r28{0} - 20]=64 / m[r28{0} + 4]{0},   m[r28{0} - 25]=0,
                m[r28{0} - 32]=r29{0},   m[r28{0} - 36]=r30{0},   m[r28{0} - 40]=r27{0},   tmp1=tmp1{100},
                tmp2=tmp2{371},   tmpb=tmpb{372},   tmpl=tmpl{373},
                %flags=SUBFLAGS32( m[r28{367} + 24], 30, tmp1{100} ),   %ZF=tmp1{100} = 0,   %CF=m[r28{367} + 24] <u 30
              Live variables:  in proc proc23
dest is not lib
call:  138 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL TextOutA(
                *HDC* m[esp_2 - 40] := m[esp_2 - 40]
                *i32* m[esp_2 - 36] := m[esp_2 - 36]
                *i32* m[esp_2 - 32] := m[esp_2 - 32]
                *c** m[esp_2 - 28] := m[esp_2 - 28]
                *i32* m[esp_2 - 24] := m[esp_2 - 24]
              )
              Reaching definitions: r8=r8{359},   r9=r9{360},   r10=r10{361},   r11=truncu(32,8,r29{368}),
                r24=r24{124},   r25=r25{124},   r26=r26{124},   r27=r29{368},   r28=r28{367} - 44,   r29=r29{368},
                r30=r24{111},   r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=zfill(32,64,r31{0}) % 18,
                m[r28{0} - 8]=zfill(32,64,r31{0}) % 7,   m[r28{0} - 12]=zfill(32,64,r31{0}) % 15,
                m[r28{0} - 16]=zfill(32,64,r31{0}) % 10,   m[r28{0} - 20]=64 / m[r28{0} + 4]{0},   m[r28{0} - 25]=0,
                m[r28{0} - 32]=r29{0},   m[r28{0} - 36]=r30{0},   m[r28{0} - 40]=r27{0},   tmp1=tmp1{100},
                tmp2=tmp2{371},   tmpb=tmpb{372},   tmpl=tmpl{373},
                %flags=SUBFLAGS32( m[r28{367} + 24], 30, tmp1{100} ),   %ZF=tmp1{100} = 0,   %CF=m[r28{367} + 24] <u 30
              Live variables:  in proc proc23
dest is not lib
call:  148 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL LineTo(
              )
              Reaching definitions: r8=r8{359},   r9=r9{360},   r10=r10{361},   r11=truncu(32,8,r29{368}),
                r24=r24{138},   r25=r25{138},   r26=r26{138},   r27=r29{368},   r28=r28{367} - 36,   r29=r29{368},
                r30=r24{111},   r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=zfill(32,64,r31{0}) % 18,
                m[r28{0} - 8]=zfill(32,64,r31{0}) % 7,   m[r28{0} - 12]=zfill(32,64,r31{0}) % 15,
                m[r28{0} - 16]=zfill(32,64,r31{0}) % 10,   m[r28{0} - 20]=64 / m[r28{0} + 4]{0},   m[r28{0} - 25]=0,
                m[r28{0} - 32]=r29{0},   m[r28{0} - 36]=r30{0},   m[r28{0} - 40]=r27{0},   tmp1=tmp1{100},
                tmp2=tmp2{371},   tmpb=tmpb{372},   tmpl=tmpl{373},
                %flags=SUBFLAGS32( m[r28{367} + 24], 30, tmp1{100} ),   %ZF=tmp1{100} = 0,   %CF=m[r28{367} + 24] <u 30
              Live variables:  in proc proc23
dest is not lib
call:  158 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL Polyline(
              )
              Reaching definitions: r8=r8{359},   r9=r9{360},   r10=r10{361},   r11=truncu(32,8,r29{368}),
                r24=r24{148},   r25=r25{148},   r26=r26{148},   r27=r29{368},   r28=r28{367} - 48,   r29=r29{368},
                r30=r24{111},   r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=zfill(32,64,r31{0}) % 18,
                m[r28{0} - 8]=zfill(32,64,r31{0}) % 7,   m[r28{0} - 12]=zfill(32,64,r31{0}) % 15,
                m[r28{0} - 16]=zfill(32,64,r31{0}) % 10,   m[r28{0} - 20]=64 / m[r28{0} + 4]{0},   m[r28{0} - 25]=0,
                m[r28{0} - 32]=r29{0},   m[r28{0} - 36]=r30{0},   m[r28{0} - 40]=r27{0},   tmp1=tmp1{100},
                tmp2=tmp2{371},   tmpb=tmpb{372},   tmpl=tmpl{373},
                %flags=SUBFLAGS32( m[r28{367} + 24], 30, tmp1{100} ),   %ZF=tmp1{100} = 0,   %CF=m[r28{367} + 24] <u 30
              Live variables:  in proc proc23
dest is not lib
call:  166 {*u64* eax, *u32* ecx, *j32* edx, *v** esp_3} := CALL ReleaseDC(
              )
              Reaching definitions: r8=r8{359},   r9=r9{360},   r10=r10{361},   r11=truncu(32,8,r29{368}),
                r24=r24{158},   r25=r25{158},   r26=r26{158},   r27=r29{368},   r28=r28{367} - 56,   r29=r29{368},
                r30=r24{111},   r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=zfill(32,64,r31{0}) % 18,
                m[r28{0} - 8]=zfill(32,64,r31{0}) % 7,   m[r28{0} - 12]=zfill(32,64,r31{0}) % 15,
                m[r28{0} - 16]=zfill(32,64,r31{0}) % 10,   m[r28{0} - 20]=64 / m[r28{0} + 4]{0},   m[r28{0} - 25]=0,
                m[r28{0} - 32]=r29{0},   m[r28{0} - 36]=r30{0},   m[r28{0} - 40]=r27{0},   tmp1=tmp1{100},
                tmp2=tmp2{371},   tmpb=tmpb{372},   tmpl=tmpl{373},
                %flags=SUBFLAGS32( m[r28{367} + 24], 30, tmp1{100} ),   %ZF=tmp1{100} = 0,   %CF=m[r28{367} + 24] <u 30
              Live variables: ecx,  edx,  esp_3 in proc proc23
result:    0 *u32* ecx := -
result:    0 *j32* edx := -
result:    0 *v** esp_3 := -
dest is not lib
call:  190 {*32* eax_2, *v* ecx, *v* edx, *v* esp} := CALL GetDC(
              )
              Reaching definitions: r8=r8{359},   r9=r9{360},   r10=r10{361},   r11=r11{377},   r24=r24{378},
                r25=r25{379},   r26=r26{380},   r27=r27{381},   r28=r28{382} - 8,   r29=r29{368},   r30=r30{383},
                r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=zfill(32,64,r31{0}) % 18,
                m[r28{0} - 8]=zfill(32,64,r31{0}) % 7,   m[r28{0} - 12]=zfill(32,64,r31{0}) % 15,
                m[r28{0} - 16]=zfill(32,64,r31{0}) % 10,   m[r28{0} - 20]=64 / m[r28{0} + 4]{0},   m[r28{0} - 25]=0,
                m[r28{0} - 32]=r29{0},   m[r28{0} - 36]=r30{0},   m[r28{0} - 40]=r27{0},   tmp1=tmp1{182},
                tmp2=tmp2{371},   tmpb=tmpb{385},   tmpl=tmpl{373},
                %flags=SUBFLAGS32( m[r28{382} + 28], 30, tmp1{182} ),   %ZF=tmp1{182} = 0,   %CF=m[r28{382} + 28] <u 30
              Live variables: eax_2 in proc proc23
result:    0 *32* eax_2 := -
dest is not lib
call:  201 {*32* r24, *v* ecx, *v* edx, *v* esp} := CALL CreatePen(
              )
              Reaching definitions: r8=r8{359},   r9=r9{360},   r10=r10{361},   r11=r11{377},   r24=r24{190},
                r25=r25{190},   r26=r26{190},   r27=r27{381},   r28=r28{382} - 20,   r29=r29{368},   r30=r24{190},
                r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=zfill(32,64,r31{0}) % 18,
                m[r28{0} - 8]=zfill(32,64,r31{0}) % 7,   m[r28{0} - 12]=zfill(32,64,r31{0}) % 15,
                m[r28{0} - 16]=zfill(32,64,r31{0}) % 10,   m[r28{0} - 20]=64 / m[r28{0} + 4]{0},   m[r28{0} - 25]=0,
                m[r28{0} - 32]=r29{0},   m[r28{0} - 36]=r30{0},   m[r28{0} - 40]=r27{0},   tmp1=tmp1{182},
                tmp2=tmp2{371},   tmpb=tmpb{385},   tmpl=tmpl{373},
                %flags=SUBFLAGS32( m[r28{382} + 28], 30, tmp1{182} ),   %ZF=tmp1{182} = 0,   %CF=m[r28{382} + 28] <u 30
              Live variables: r24 in proc proc23
result:    0 *32* r24 := -
dest is not lib
call:  209 {*32* r24, *v* ecx, *v* edx, *v* esp} := CALL SelectObject(
                *HDC* m[esp_3 - 24] := m[esp_3 - 24]
                *HGDIOBJ* m[esp_3 - 20] := m[esp_3 - 20]
              )
              Reaching definitions: r8=r8{359},   r9=r9{360},   r10=r10{361},   r11=r11{377},   r24=r24{201},
                r25=r25{201},   r26=r26{201},   r27=r27{381},   r28=r28{382} - 28,   r29=r29{368},   r30=r24{190},
                r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=zfill(32,64,r31{0}) % 18,
                m[r28{0} - 8]=zfill(32,64,r31{0}) % 7,   m[r28{0} - 12]=zfill(32,64,r31{0}) % 15,
                m[r28{0} - 16]=zfill(32,64,r31{0}) % 10,   m[r28{0} - 20]=64 / m[r28{0} + 4]{0},   m[r28{0} - 25]=0,
                m[r28{0} - 32]=r29{0},   m[r28{0} - 36]=r30{0},   m[r28{0} - 40]=r27{0},   tmp1=tmp1{182},
                tmp2=tmp2{371},   tmpb=tmpb{385},   tmpl=tmpl{373},
                %flags=SUBFLAGS32( m[r28{382} + 28], 30, tmp1{182} ),   %ZF=tmp1{182} = 0,   %CF=m[r28{382} + 28] <u 30
              Live variables:  in proc proc23
dest is not lib
call:  215 {*32* r24, *v* ecx, *v* edx, *v* esp} := CALL CreateCompatibleDC(
              )
              Reaching definitions: r8=r8{359},   r9=r9{360},   r10=r10{361},   r11=r11{377},   r24=r24{209},
                r25=r25{209},   r26=r26{209},   r27=r27{381},   r28=r28{382} - 24,   r29=r29{368},   r30=r24{190},
                r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=zfill(32,64,r31{0}) % 18,
                m[r28{0} - 8]=zfill(32,64,r31{0}) % 7,   m[r28{0} - 12]=zfill(32,64,r31{0}) % 15,
                m[r28{0} - 16]=zfill(32,64,r31{0}) % 10,   m[r28{0} - 20]=64 / m[r28{0} + 4]{0},   m[r28{0} - 25]=0,
                m[r28{0} - 32]=r29{0},   m[r28{0} - 36]=r30{0},   m[r28{0} - 40]=r27{0},   tmp1=tmp1{182},
                tmp2=tmp2{371},   tmpb=tmpb{385},   tmpl=tmpl{373},
                %flags=SUBFLAGS32( m[r28{382} + 28], 30, tmp1{182} ),   %ZF=tmp1{182} = 0,   %CF=m[r28{382} + 28] <u 30
              Live variables: r24 in proc proc23
result:    0 *32* r24 := -
dest is not lib
call:  221 {*32* r24, *v* ecx, *v* edx, *v* esp} := CALL DeleteDC(
              )
              Reaching definitions: r8=r8{359},   r9=r9{360},   r10=r10{361},   r11=r11{377},   r24=r24{215},
                r25=r25{215},   r26=r26{215},   r27=r27{381},   r28=r28{382} - 28,   r29=r29{368},   r30=r24{190},
                r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=zfill(32,64,r31{0}) % 18,
                m[r28{0} - 8]=zfill(32,64,r31{0}) % 7,   m[r28{0} - 12]=zfill(32,64,r31{0}) % 15,
                m[r28{0} - 16]=zfill(32,64,r31{0}) % 10,   m[r28{0} - 20]=64 / m[r28{0} + 4]{0},   m[r28{0} - 25]=0,
                m[r28{0} - 32]=r29{0},   m[r28{0} - 36]=r30{0},   m[r28{0} - 40]=r27{0},   tmp1=tmp1{182},
                tmp2=tmp2{371},   tmpb=tmpb{385},   tmpl=tmpl{373},
                %flags=SUBFLAGS32( m[r28{382} + 28], 30, tmp1{182} ),   %ZF=tmp1{182} = 0,   %CF=m[r28{382} + 28] <u 30
              Live variables:  in proc proc23
dest is not lib
call:  229 {*u64* eax, *u32* ecx, *j32* edx, *v** esp_3} := CALL ReleaseDC(
              )
              Reaching definitions: r8=r8{359},   r9=r9{360},   r10=r10{361},   r11=r11{377},   r24=r24{221},
                r25=r25{221},   r26=r26{221},   r27=r27{381},   r28=r28{382} - 36,   r29=r29{368},   r30=r24{190},
                r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=zfill(32,64,r31{0}) % 18,
                m[r28{0} - 8]=zfill(32,64,r31{0}) % 7,   m[r28{0} - 12]=zfill(32,64,r31{0}) % 15,
                m[r28{0} - 16]=zfill(32,64,r31{0}) % 10,   m[r28{0} - 20]=64 / m[r28{0} + 4]{0},   m[r28{0} - 25]=0,
                m[r28{0} - 32]=r29{0},   m[r28{0} - 36]=r30{0},   m[r28{0} - 40]=r27{0},   tmp1=tmp1{182},
                tmp2=tmp2{371},   tmpb=tmpb{385},   tmpl=tmpl{373},
                %flags=SUBFLAGS32( m[r28{382} + 28], 30, tmp1{182} ),   %ZF=tmp1{182} = 0,   %CF=m[r28{382} + 28] <u 30
              Live variables: ecx,  edx,  esp_3 in proc proc23
result:    0 *u32* ecx := -
result:    0 *j32* edx := -
result:    0 *v** esp_3 := -
dest is not lib
call:  264 {*32* r24, *v* ecx, *v* edx, *v* esp} := CALL CreateEventA(
              )
              Reaching definitions: r8=r8{389},   r9=r9{360},   r10=r10{390},   r11=r11{391},   r24=r24{392},
                r25=r25{393},   r26=r26{394},   r27=r27{395},   r28=r28{396} - 20,   r29=r29{368},   r30=r30{397},
                r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=zfill(32,64,r31{0}) % 18,
                m[r28{0} - 8]=zfill(32,64,r31{0}) % 7,   m[r28{0} - 12]=zfill(32,64,r31{0}) % 15,
                m[r28{0} - 16]=zfill(32,64,r31{0}) % 10,   m[r28{0} - 20]=64 / m[r28{0} + 4]{0},   m[r28{0} - 25]=0,
                m[r28{0} - 32]=r29{0},   m[r28{0} - 36]=r30{0},   m[r28{0} - 40]=r27{0},   tmp1=tmp1{250},
                tmp2=tmp2{399},   tmpb=tmpb{385},   tmpl=tmpl{400},
                %flags=SUBFLAGS32( m[r28{396} + 32], 25, tmp1{250} ),   %ZF=tmp1{250} = 0,   %CF=m[r28{396} + 32] <u 25
              Live variables: r24 in proc proc23
result:    0 *32* r24 := -
dest is not lib
call:  270 {*j32* eax, *u32* ecx, *j32* edx, *32** esp_4} := CALL SetEvent(
              )
              Reaching definitions: r8=r8{389},   r9=r9{360},   r10=r10{390},   r11=r11{391},   r24=r24{264},
                r25=r25{264},   r26=r26{264},   r27=r27{395},   r28=r28{396} - 24,   r29=r29{368},   r30=r30{397},
                r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=zfill(32,64,r31{0}) % 18,
                m[r28{0} - 8]=zfill(32,64,r31{0}) % 7,   m[r28{0} - 12]=zfill(32,64,r31{0}) % 15,
                m[r28{0} - 16]=zfill(32,64,r31{0}) % 10,   m[r28{0} - 20]=64 / m[r28{0} + 4]{0},   m[r28{0} - 25]=0,
                m[r28{0} - 32]=r29{0},   m[r28{0} - 36]=r30{0},   m[r28{0} - 40]=r27{0},   tmp1=tmp1{250},
                tmp2=tmp2{399},   tmpb=tmpb{385},   tmpl=tmpl{400},
                %flags=SUBFLAGS32( m[r28{396} + 32], 25, tmp1{250} ),   %ZF=tmp1{250} = 0,   %CF=m[r28{396} + 32] <u 25
              Live variables: ecx,  edx,  esp_4 in proc proc23
result:    0 *u32* ecx := -
result:    0 *j32* edx := -
result:    0 *32** esp_4 := -
dest is not lib
call:  283 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetForegroundWindow(
              )
              Reaching definitions: r8=r8{404},   r9=r9{360},   r10=r10{390},   r11=r11{391},   r24=r24{405},
                r25=r25{406},   r26=r26{407},   r27=r27{395},   r28=r28{408} - 4,   r29=r29{368},   r30=r30{397},
                r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=zfill(32,64,r31{0}) % 18,
                m[r28{0} - 8]=zfill(32,64,r31{0}) % 7,   m[r28{0} - 12]=zfill(32,64,r31{0}) % 15,
                m[r28{0} - 16]=zfill(32,64,r31{0}) % 10,   m[r28{0} - 20]=64 / m[r28{0} + 4]{0},   m[r28{0} - 25]=0,
                m[r28{0} - 32]=r29{0},   m[r28{0} - 36]=r30{0},   m[r28{0} - 40]=r27{0},   tmp1=tmp1{277},
                tmp2=tmp2{399},   tmpb=tmpb{409},   tmpl=tmpl{400},
                %flags=SUBFLAGS32( m[r28{408} + 36], 89, tmp1{277} ),   %ZF=tmp1{277} = 0,   %CF=m[r28{408} + 36] <u 89
              Live variables: eax in proc proc23
result:    0 *32* eax := -
dest is not lib
call:  301 {*j32* eax, *u32* ecx, *j32* edx, *v* esp} := CALL SetWindowPos(
                *HWND* m[esp_4 - 28] := m[esp_4 - 28]
                *HWND* m[esp_4 - 24] := m[esp_4 - 24]
                *i32* m[esp_4 - 20] := m[esp_4 - 20]
                *i32* m[esp_4 - 16] := m[esp_4 - 16]
                *i32* m[esp_4 - 12] := m[esp_4 - 12]
                *i32* m[esp_4 - 8] := m[esp_4 - 8]
                *UINT* m[esp_4 - 4] := m[esp_4 - 4]
              )
              Reaching definitions: r8=r8{404},   r9=r9{360},   r10=r10{390},   r11=r11{391},   r24=r24{283},
                r25=r25{283},   r26=r26{283},   r27=r27{395},   r28=r28{408} - 32,   r29=r29{368},   r30=r30{397},
                r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=zfill(32,64,r31{0}) % 18,
                m[r28{0} - 8]=zfill(32,64,r31{0}) % 7,   m[r28{0} - 12]=zfill(32,64,r31{0}) % 15,
                m[r28{0} - 16]=zfill(32,64,r31{0}) % 10,   m[r28{0} - 20]=64 / m[r28{0} + 4]{0},   m[r28{0} - 25]=0,
                m[r28{0} - 32]=r29{0},   m[r28{0} - 36]=r30{0},   m[r28{0} - 40]=r27{0},   tmp1=tmp1{277},
                tmp2=tmp2{399},   tmpb=tmpb{409},   tmpl=tmpl{400},
                %flags=SUBFLAGS32( m[r28{408} + 36], 89, tmp1{277} ),   %ZF=tmp1{277} = 0,   %CF=m[r28{408} + 36] <u 89
              Live variables: ecx,  edx in proc proc23
result:    0 *u32* ecx := -
result:    0 *j32* edx := -
