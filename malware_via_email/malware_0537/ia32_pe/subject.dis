// fn00401248
// Return size: 0
void fn00401248()
fn00401248_entry:
	goto l00401248
	// succ:  l00401248
l0040101D:
	ecx = ecx + edx
	SCZO = cond(ecx)
	edi = edi + 0x00000001
	SZO = cond(edi)
	edi = edi + edx
	SCZO = cond(edi)
	ebx = esi
	edi = edi ^ ecx
	SZO = cond(edi)
	C = false
	ecx = ecx + edx
	SCZO = cond(ecx)
	esi = esi - edi
	SCZO = cond(esi)
	edi = eax
	ecx = ecx + 0x00000001
	SZO = cond(ecx)
	edx = edx - edi
	SCZO = cond(edx)
	// succ:  l00401056
l00401056:
	edi = edi - ebx
	SCZO = cond(edi)
	edx = edx - ecx
	SCZO = cond(edx)
	ecx = eax
	ecx = esi
	edx = edx ^ edi
	SZO = cond(edx)
	C = false
	esi = esi - ebx
	SCZO = cond(esi)
	esi = esi | ecx
	SZO = cond(esi)
	C = false
	ebx = ebx - 0x00000001
	SZO = cond(ebx)
	edi = edi | esi
	SZO = cond(edi)
	C = false
	dl = dl | al
	SZO = cond(dl)
	C = false
	branch Test(LT,SO) l004012D7
	// succ:  l0040106F l004012D7
l0040106F:
l004011DE:
l00401248:
	esp = esp - 0x00000004
	Mem0[esp:word32] = ebp
	ebp = esp
	esi = eax
	ebx = ebx ^ edi
	SZO = cond(ebx)
	C = false
	ebx = ebx - ecx
	SCZO = cond(ebx)
	edi = edi | ebx
	SZO = cond(edi)
	C = false
	edi = edi ^ ebx
	SZO = cond(edi)
	C = false
	esi = ebx
	edx = edx - 0x00000001
	SZO = cond(edx)
	goto l0040101D
	// succ:  l0040101D
l004012D7:
	bl = bl + 0xC2 + C
	SCZO = cond(bl)
	bh = bh + ah
	SCZO = cond(bh)
	dh = 0x88
	esi = esi + 0x00000001
	SZO = cond(esi)
	ch = ch + bh
	SCZO = cond(ch)
	bh = ~bh
	goto l004011DE
	// succ:  l004011DE
fn00401248_exit:


