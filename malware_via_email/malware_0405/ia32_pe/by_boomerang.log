Unknown library function StrChrA
Unknown library function StrStrIA
Unknown library function AreAllAccessesGranted
Unknown library function VirtualProtect
assgn   14 *32* %pc := m[0x404060]
is readonly
assgn   25 *32* %pc := m[0x40405c]
is readonly
assgn   52 *32* %pc := m[0x40404c]
is readonly
assgn   58 *32* %pc := m[0x40403c]
is readonly
assgn   85 *32* %pc := m[0x404000]
is readonly
assgn  103 *32* %pc := m[0x404014]
is readonly
assgn  309 *32* %pc := m[0x40404c]
is readonly
assgn  348 *32* %pc := m[0x40403c]
is readonly
assgn  362 *32* %pc := m[0x40403c]
is readonly
assgn  394 *32* %pc := m[0x404028]
is readonly
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 20 to local table
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 32 to local table
in proc _start adding addrExp r28{0} - 32 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 32 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 20 to local table
in proc _start adding addrExp r28{0} - 24 to local table
TYPE ERROR: Existing type at address 0xffffffe8 is not structure or array type
in proc _start adding addrExp r28{0} - 28 to local table
TYPE ERROR: Existing type at address 0xffffffe4 is not structure or array type
in proc _start adding addrExp r28{0} - 32 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 52 to local table
in proc _start adding addrExp r28{0} - 56 to local table
in proc _start adding addrExp r28{0} - 60 to local table
in proc _start adding addrExp r28{0} - 56 to local table
in proc _start adding addrExp r28{0} - 60 to local table
in proc _start adding addrExp r28{0} - 52 to local table
in proc _start adding addrExp r28{0} - 56 to local table
in proc _start adding addrExp r28{0} - 60 to local table
in proc _start adding addrExp r28{0} - 64 to local table
in proc _start adding addrExp r28{0} - 68 to local table
in proc _start adding addrExp r28{0} - 72 to local table
finding final parameters for _start
potential param r28
found new parameter r28
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
local esp has type void * that doesn't agree with type of define __size32 * of a library, why?
local esp has type __size32 * that doesn't agree with type of define void of a library, why?
local eax has type unsigned int that doesn't agree with type of define __size32 of a library, why?
local eax has type __size32 that doesn't agree with type of define /*signed?*/int of a library, why?
local eax has type /*signed?*/int that doesn't agree with type of define __size32 of a library, why?
local ecx has type void that doesn't agree with type of define unsigned int of a library, why?
local edx has type void that doesn't agree with type of define /*signed?*/int of a library, why?
local eax has type __size32 that doesn't agree with type of define unsigned int of a library, why?
local ecx has type unsigned int that doesn't agree with type of define void of a library, why?
local edx has type /*signed?*/int that doesn't agree with type of define union { /*signed?*/int x1; void * x2; } of a library, why?
local eax has type unsigned int that doesn't agree with type of define __size32 of a library, why?
local ecx has type void that doesn't agree with type of define unsigned int of a library, why?
local ecx has type unsigned int that doesn't agree with type of define void of a library, why?
local edx has type union { /*signed?*/int x1; void * x2; } that doesn't agree with type of define void of a library, why?
dest is not lib
call:   15 {*u32* eax_2, *v* ecx, *v* edx, *32** esp} := CALL StrChrA(
              )
              Reaching definitions: r27=r27{0},   r28=r28{0} - 32,   r29=r29{0},   r30=0,   r31=r31{0},
                m[r28{0} - 20]=r30{0},   m[r28{0} - 24]=0,   m[r28{0} - 28]=0x404068,   m[r28{0} - 32]=%pc,
                m[r28{0} - 36]=m[r28{0} - 36]{0},   m[r28{0} - 40]=m[r28{0} - 40]{0},   tmp1=r28{0},
                %flags=LOGICALFLAGS32( 0 ),   %ZF=LOGICALFLAGS32( 0 ),   %CF=LOGICALFLAGS32( 0 )
              Live variables: eax_2 in proc _start
result:    0 *u32* eax_2 := -
dest is not lib
call:   26 {*u32* eax, *v* ecx, *v* edx, *32** esp} := CALL StrStrIA(
              )
              Reaching definitions: r24=r24{15},   r25=r25{15},   r26=r26{15},   r27=r27{0},   r28=r28{0} - 40,
                r29=r29{0},   r30=0,   r31=r31{0},   m[r28{0} - 20]=r30{0},   m[r28{0} - 24]=0,
                m[r28{0} - 28]=0x404068,   m[r28{0} - 32]=r24{15},   m[r28{0} - 36]=0x404070,   m[r28{0} - 40]=%pc,
                tmp1=r24{15},   %flags=LOGICALFLAGS32( r24{15} ),   %ZF=LOGICALFLAGS32( r24{15} ),
                %CF=LOGICALFLAGS32( r24{15} )
              Live variables: eax in proc _start
result:    0 *u32* eax := -
dest is not lib
call:   53 {*HANDLE* eax_1, *v* ecx, *v* edx, *v* esp} := CALL LoadLibraryA(
                *LPCSTR* local0 := "advapi32.dll"
              )
              Reaching definitions: r24=r24{26},   r25=r25{26},   r26=r26{26},   r27=r27{0},   r28=r28{0} - 60,
                r29=r29{0},   r30=0,   r31=r31{0},   m[r28{0} - 20]=r30{0},   m[r28{0} - 24]=0,
                m[r28{0} - 28]=0x404068,   m[r28{0} - 32]=r24{15},   m[r28{0} - 36]=0x404070,   m[r28{0} - 40]=r27{0},
                m[r28{0} - 44]=r29{0},   m[r28{0} - 48]=r31{0},   m[r28{0} - 52]=0x40407c,   m[r28{0} - 56]=0x404084,
                m[r28{0} - 60]=%pc,   tmp1=r24{26},   %flags=LOGICALFLAGS32( r24{26} ),   %ZF=LOGICALFLAGS32( r24{26} )
                %CF=LOGICALFLAGS32( r24{26} )
              Live variables: eax_1 in proc _start
result:    0 *HANDLE* eax_1 := -
dest is not lib
call:   59 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local0 := eax_1
                *c** local1 := "AddAce"
              )
              Reaching definitions: r24=r24{53},   r25=r25{53},   r26=r26{53},   r27=r27{0},   r28=r28{0} - 60,
                r29=r29{0},   r30=0,   r31=r31{0},   m[r28{0} - 20]=r30{0},   m[r28{0} - 24]=0,
                m[r28{0} - 28]=0x404068,   m[r28{0} - 32]=r24{15},   m[r28{0} - 36]=0x404070,   m[r28{0} - 40]=r27{0},
                m[r28{0} - 44]=r29{0},   m[r28{0} - 48]=r31{0},   m[r28{0} - 52]=0x40407c,   m[r28{0} - 56]=r24{53},
                m[r28{0} - 60]=%pc,   tmp1=r24{26},   %flags=LOGICALFLAGS32( r24{26} ),   %ZF=LOGICALFLAGS32( r24{26} )
                %CF=LOGICALFLAGS32( r24{26} )
              Live variables: eax,  ecx,  edx in proc _start
result:    0 *32* eax := -
result:    0 *v* ecx := -
result:    0 *v* edx := -
dest is not lib
call:   86 {*j32* eax, *v* ecx, *v* edx, *v* esp} := CALL AreAllAccessesGranted(
              )
              Reaching definitions: r9=r9{73},   r10=r10{73},   r24=(r24{73} * (4 + 1)) + 28,   r25=r25{73},
                r26=r26{73},   r27=r27{73},   r28=r28{73} - 12,   r29=r29{73},   r30=r30{73},   r31=r24{73} + 28,
                m[r28{0} - 20]=m[r28{0} - 20]{73},   m[r28{0} - 24]=m[r28{0} - 24]{73},
                m[r28{0} - 28]=m[r28{0} - 28]{73},   m[r28{0} - 32]=m[r28{0} - 32]{73},
                m[r28{0} - 36]=m[r28{0} - 36]{73},   m[r28{0} - 40]=m[r28{0} - 40]{73},
                m[r28{0} - 44]=m[r28{0} - 44]{73},   m[r28{0} - 48]=m[r28{0} - 48]{73},
                m[r28{0} - 52]=m[r28{0} - 52]{73},   m[r28{0} - 56]=m[r28{0} - 56]{73},
                m[r28{0} - 60]=m[r28{0} - 60]{73},   m[r28{0} - 64]=m[r28{0} - 64]{73},
                m[r28{0} - 68]=m[r28{0} - 68]{73},   m[r28{0} - 72]=m[r28{0} - 72]{73},
                m[r28{0} - 20]=m[r28{0} - 20]{73},   m[r28{0} - 24]=m[r28{0} - 24]{73},
                m[r28{0} - 28]=m[r28{0} - 28]{73},   m[r28{0} - 32]=m[r28{0} - 32]{73},
                m[r28{0} - 36]=m[r28{0} - 36]{73},   m[r28{0} - 40]=m[r28{0} - 40]{73},
                m[r28{0} - 44]=m[r28{0} - 44]{73},   m[r28{0} - 48]=m[r28{0} - 48]{73},
                m[r28{0} - 52]=m[r28{0} - 52]{73},   m[r28{0} - 56]=m[r28{0} - 56]{73},
                m[r28{0} - 60]=m[r28{0} - 60]{73},   m[r28{0} - 64]=m[r28{0} - 64]{73},
                m[r28{0} - 68]=m[r28{0} - 68]{73},   m[r28{0} - 72]=m[r28{0} - 72]{73},   <all>=<all>{73},
                tmp1=r24{73},   %flags=ADDFLAGS32( r24{73}, 28, r24{73} + 28 ),
                %ZF=ADDFLAGS32( r24{73}, 28, r24{73} + 28 ),   %CF=ADDFLAGS32( r24{73}, 28, r24{73} + 28 )
              Live variables: eax in proc _start
result:    0 *j32* eax := -
dest is not lib
call:  104 {*32* eax, *u32* ecx, *j32* edx, *v* esp} := CALL VirtualProtect(
              )
              Reaching definitions: r9=r9{73},   r10=r10{73},   r24=r28{73} + 8,   r25=r25{86},   r26=r26{86},
                r27=r27{73},   r28=r28{73} - 28,   r29=r29{73},   r30=r30{73},   r31=r31{414},
                m[r28{0} - 20]=m[r28{0} - 20]{73},   m[r28{0} - 24]=m[r28{0} - 24]{73},
                m[r28{0} - 28]=m[r28{0} - 28]{73},   m[r28{0} - 32]=m[r28{0} - 32]{73},
                m[r28{0} - 36]=m[r28{0} - 36]{73},   m[r28{0} - 40]=m[r28{0} - 40]{73},
                m[r28{0} - 44]=m[r28{0} - 44]{73},   m[r28{0} - 48]=m[r28{0} - 48]{73},
                m[r28{0} - 52]=m[r28{0} - 52]{73},   m[r28{0} - 56]=m[r28{0} - 56]{73},
                m[r28{0} - 60]=m[r28{0} - 60]{73},   m[r28{0} - 64]=m[r28{0} - 64]{73},
                m[r28{0} - 68]=m[r28{0} - 68]{73},   m[r28{0} - 72]=m[r28{0} - 72]{73},
                m[r28{0} - 20]=m[r28{0} - 20]{73},   m[r28{0} - 24]=m[r28{0} - 24]{73},
                m[r28{0} - 28]=m[r28{0} - 28]{73},   m[r28{0} - 32]=m[r28{0} - 32]{73},
                m[r28{0} - 36]=m[r28{0} - 36]{73},   m[r28{0} - 40]=m[r28{0} - 40]{73},
                m[r28{0} - 44]=m[r28{0} - 44]{73},   m[r28{0} - 48]=m[r28{0} - 48]{73},
                m[r28{0} - 52]=m[r28{0} - 52]{73},   m[r28{0} - 56]=m[r28{0} - 56]{73},
                m[r28{0} - 60]=m[r28{0} - 60]{73},   m[r28{0} - 64]=m[r28{0} - 64]{73},
                m[r28{0} - 68]=m[r28{0} - 68]{73},   m[r28{0} - 72]=m[r28{0} - 72]{73},   <all>=<all>{73},
                tmp1=r24{86},   %flags=%flags{415},   %ZF=%ZF{416},   %CF=%CF{417}
              Live variables: ecx,  edx in proc _start
result:    0 *u32* ecx := -
result:    0 *j32* edx := -
dest is not lib
call:  310 {*u32* eax, *v* ecx, *union* edx, *v* esp} := CALL LoadLibraryA(
                *LPCSTR* m[esp_1 - 28] := m[esp_1 - 28]
              )
              Reaching definitions: r9=r9{488},   r10=truncu(32,8,r26{299} + r29{495}),   r24=r24{490},   r25=r25{491},
                r26=r26{299} + r29{495},   r27=r27{493},   r28=(r28{73} - 24) - 8,   r29=r29{495},   r30=r30{496},
                r31=r31{497},   m[r28{0} - 20]=m[r28{0} - 20]{73},   m[r28{0} - 24]=m[r28{0} - 24]{73},
                m[r28{0} - 28]=m[r28{0} - 28]{73},   m[r28{0} - 32]=m[r28{0} - 32]{73},
                m[r28{0} - 36]=m[r28{0} - 36]{73},   m[r28{0} - 40]=m[r28{0} - 40]{73},
                m[r28{0} - 44]=m[r28{0} - 44]{73},   m[r28{0} - 48]=m[r28{0} - 48]{73},
                m[r28{0} - 52]=m[r28{0} - 52]{73},   m[r28{0} - 56]=m[r28{0} - 56]{73},
                m[r28{0} - 60]=m[r28{0} - 60]{73},   m[r28{0} - 64]=m[r28{0} - 64]{73},
                m[r28{0} - 68]=m[r28{0} - 68]{73},   m[r28{0} - 72]=m[r28{0} - 72]{73},
                m[r28{0} - 20]=m[r28{0} - 20]{73},   m[r28{0} - 24]=m[r28{0} - 24]{73},
                m[r28{0} - 28]=m[r28{0} - 28]{73},   m[r28{0} - 32]=m[r28{0} - 32]{73},
                m[r28{0} - 36]=m[r28{0} - 36]{73},   m[r28{0} - 40]=m[r28{0} - 40]{73},
                m[r28{0} - 44]=m[r28{0} - 44]{73},   m[r28{0} - 48]=m[r28{0} - 48]{73},
                m[r28{0} - 52]=m[r28{0} - 52]{73},   m[r28{0} - 56]=m[r28{0} - 56]{73},
                m[r28{0} - 60]=m[r28{0} - 60]{73},   m[r28{0} - 64]=m[r28{0} - 64]{73},
                m[r28{0} - 68]=m[r28{0} - 68]{73},   m[r28{0} - 72]=m[r28{0} - 72]{73},   <all>=<all>{73},
                tmp1=r26{299},   %flags=ADDFLAGS32( r26{299}, r29{495}, r26{299} + r29{495} ),
                %ZF=ADDFLAGS32( r26{299}, r29{495}, r26{299} + r29{495} ),
                %CF=ADDFLAGS32( r26{299}, r29{495}, r26{299} + r29{495} )
              Live variables: eax,  edx in proc _start
result:    0 *u32* eax := -
result:    0 *union* edx := -
dest is not lib
call:  363 {*32* eax, *u32* ecx, *union* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* m[esp_1 - 32] := m[esp_1 - 32]
                *c** m[esp_1 - 28] := m[esp_1 - 28]
              )
              Reaching definitions: r9=r9{503},   r10=truncu(32,8,r26{353}),   r24=(r24{505} + r26{353}) + 2,
                r25=r25{506},   r26=r26{353},   r27=r27{508},   r28=(r28{73} - 24) - 12,   r29=r29{510},
                r30=r30{511} * 9,   r31=r31{512},   m[r28{0} - 20]=m[r28{0} - 20]{73},
                m[r28{0} - 24]=m[r28{0} - 24]{73},   m[r28{0} - 28]=m[r28{0} - 28]{73},
                m[r28{0} - 32]=m[r28{0} - 32]{73},   m[r28{0} - 36]=m[r28{0} - 36]{73},
                m[r28{0} - 40]=m[r28{0} - 40]{73},   m[r28{0} - 44]=m[r28{0} - 44]{73},
                m[r28{0} - 48]=m[r28{0} - 48]{73},   m[r28{0} - 52]=m[r28{0} - 52]{73},
                m[r28{0} - 56]=m[r28{0} - 56]{73},   m[r28{0} - 60]=m[r28{0} - 60]{73},
                m[r28{0} - 64]=m[r28{0} - 64]{73},   m[r28{0} - 68]=m[r28{0} - 68]{73},
                m[r28{0} - 72]=m[r28{0} - 72]{73},   m[r28{0} - 20]=m[r28{0} - 20]{73},
                m[r28{0} - 24]=m[r28{0} - 24]{73},   m[r28{0} - 28]=m[r28{0} - 28]{73},
                m[r28{0} - 32]=m[r28{0} - 32]{73},   m[r28{0} - 36]=m[r28{0} - 36]{73},
                m[r28{0} - 40]=m[r28{0} - 40]{73},   m[r28{0} - 44]=m[r28{0} - 44]{73},
                m[r28{0} - 48]=m[r28{0} - 48]{73},   m[r28{0} - 52]=m[r28{0} - 52]{73},
                m[r28{0} - 56]=m[r28{0} - 56]{73},   m[r28{0} - 60]=m[r28{0} - 60]{73},
                m[r28{0} - 64]=m[r28{0} - 64]{73},   m[r28{0} - 68]=m[r28{0} - 68]{73},
                m[r28{0} - 72]=m[r28{0} - 72]{73},   <all>=<all>{73},   tmp1=r24{505},
                %flags=LOGICALFLAGS32( r24{505} ),   %ZF=LOGICALFLAGS32( r24{505} ),   %CF=LOGICALFLAGS32( r24{505} )
              Live variables: eax,  edx in proc _start
result:    0 *32* eax := -
result:    0 *union* edx := -
dest is not lib
call:  349 {*32* eax, *u32* ecx, *union* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* m[esp_1 - 32] := m[esp_1 - 32]
                *c** m[esp_1 - 28] := m[esp_1 - 28]
              )
              Reaching definitions: r9=r9{503},   r10=r10{504},   r24=r24{341},   r25=r25{506},   r26=r26{507},
                r27=r27{508},   r28=(r28{73} - 24) - 12,   r29=r29{510},   r30=r30{511},   r31=r31{512},
                m[r28{0} - 20]=m[r28{0} - 20]{73},   m[r28{0} - 24]=m[r28{0} - 24]{73},
                m[r28{0} - 28]=m[r28{0} - 28]{73},   m[r28{0} - 32]=m[r28{0} - 32]{73},
                m[r28{0} - 36]=m[r28{0} - 36]{73},   m[r28{0} - 40]=m[r28{0} - 40]{73},
                m[r28{0} - 44]=m[r28{0} - 44]{73},   m[r28{0} - 48]=m[r28{0} - 48]{73},
                m[r28{0} - 52]=m[r28{0} - 52]{73},   m[r28{0} - 56]=m[r28{0} - 56]{73},
                m[r28{0} - 60]=m[r28{0} - 60]{73},   m[r28{0} - 64]=m[r28{0} - 64]{73},
                m[r28{0} - 68]=m[r28{0} - 68]{73},   m[r28{0} - 72]=m[r28{0} - 72]{73},
                m[r28{0} - 20]=m[r28{0} - 20]{73},   m[r28{0} - 24]=m[r28{0} - 24]{73},
                m[r28{0} - 28]=m[r28{0} - 28]{73},   m[r28{0} - 32]=m[r28{0} - 32]{73},
                m[r28{0} - 36]=m[r28{0} - 36]{73},   m[r28{0} - 40]=m[r28{0} - 40]{73},
                m[r28{0} - 44]=m[r28{0} - 44]{73},   m[r28{0} - 48]=m[r28{0} - 48]{73},
                m[r28{0} - 52]=m[r28{0} - 52]{73},   m[r28{0} - 56]=m[r28{0} - 56]{73},
                m[r28{0} - 60]=m[r28{0} - 60]{73},   m[r28{0} - 64]=m[r28{0} - 64]{73},
                m[r28{0} - 68]=m[r28{0} - 68]{73},   m[r28{0} - 72]=m[r28{0} - 72]{73},   <all>=<all>{73},
                tmp1=r24{505},   %flags=LOGICALFLAGS32( r24{505} ),   %ZF=LOGICALFLAGS32( r24{505} ),
                %CF=LOGICALFLAGS32( r24{505} )
              Live variables: eax,  ecx,  edx in proc _start
result:    0 *32* eax := -
result:    0 *u32* ecx := -
result:    0 *union* edx := -
dest is not lib
call:  395 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL ExitProcess(
                *UINT* m[esp - 4] := m[esp - 4]
              )
              Reaching definitions: r9=r9{389},   r10=r10{389},   r24=r24{389},   r25=r25{389},   r26=r26{389},
                r27=r27{389},   r28=r28{389} - 8,   r29=r29{389},   r30=r30{389},   r31=r31{389},
                m[r28{0} - 20]=m[r28{0} - 20]{389},   m[r28{0} - 24]=m[r28{0} - 24]{389},
                m[r28{0} - 28]=m[r28{0} - 28]{389},   m[r28{0} - 32]=m[r28{0} - 32]{389},
                m[r28{0} - 36]=m[r28{0} - 36]{389},   m[r28{0} - 40]=m[r28{0} - 40]{389},
                m[r28{0} - 44]=m[r28{0} - 44]{389},   m[r28{0} - 48]=m[r28{0} - 48]{389},
                m[r28{0} - 52]=m[r28{0} - 52]{389},   m[r28{0} - 56]=m[r28{0} - 56]{389},
                m[r28{0} - 60]=m[r28{0} - 60]{389},   m[r28{0} - 64]=m[r28{0} - 64]{389},
                m[r28{0} - 68]=m[r28{0} - 68]{389},   m[r28{0} - 72]=m[r28{0} - 72]{389},
                m[r28{0} - 20]=m[r28{0} - 20]{389},   m[r28{0} - 24]=m[r28{0} - 24]{389},
                m[r28{0} - 28]=m[r28{0} - 28]{389},   m[r28{0} - 32]=m[r28{0} - 32]{389},
                m[r28{0} - 36]=m[r28{0} - 36]{389},   m[r28{0} - 40]=m[r28{0} - 40]{389},
                m[r28{0} - 44]=m[r28{0} - 44]{389},   m[r28{0} - 48]=m[r28{0} - 48]{389},
                m[r28{0} - 52]=m[r28{0} - 52]{389},   m[r28{0} - 56]=m[r28{0} - 56]{389},
                m[r28{0} - 60]=m[r28{0} - 60]{389},   m[r28{0} - 64]=m[r28{0} - 64]{389},
                m[r28{0} - 68]=m[r28{0} - 68]{389},   m[r28{0} - 72]=m[r28{0} - 72]{389},   <all>=<all>{389},
                tmp1=tmp1{389},   %flags=%flags{389},   %ZF=%ZF{389},   %CF=%CF{389}
              Live variables:  in proc _start
