INFO  an - ### holdec 1.1 Copyright 2003-2012 Raimar Falke
INFO  an - Using ./malware_via_email/malware_0762/ia32_pe/subject.exe as executable
read image                              : ............................................................ [ done ]
INFO  fG - Detected PE (Portable Executable)
INFO  ks - wrote ./malware_via_email/malware_0762/ia32_pe/subject.exe.info
INFO  fG - disassembleAndWrite: start a new loop with 1 extra block starts
Disassemble                             : ............................................................ [ done ]
INFO  fG - disassembleAndWrite: running multiline
INFO  ks - wrote ./malware_via_email/malware_0762/ia32_pe/subject.exe.info
Preprocessing 1729 asm lines            : ............................................................ [ done ]
INFO  ks - wrote ./malware_via_email/malware_0762/ia32_pe/subject.exe.info
INFO  fG - disassembleAndWrite: found no new addresses. will stop now.
INFO  ks - wrote ./malware_via_email/malware_0762/ia32_pe/subject.exe.info
Preprocessing 1830 asm lines            : ............................................................ [ done ]
INFO  ks - wrote ./malware_via_email/malware_0762/ia32_pe/subject.exe.info
INFO  fG - reading all asm lines ...
INFO  fG - ... read 1830 asm lines
WARN  w - Address 00403000.0 is excluded by the address filter. Maybe outside text section?
create blocks                           : ............................................................ [ done ]
init blocks                             : ............................................................ [ done ]
Writing 12 methods to cache             : ............................................................ [ done ]
INFO  an - will decompile 12 functions
decompile F_00401000                    : .......................... failed: Expression reg_48_local0 already has a parent (reg_48_local0 = reg_48_local0) and so can't be added to me (reg_48_local0 = reg_48_local0)
decompile F_004010d0                    : .WARN  ag - Referencing unknown line 004012d0.0
WARN  ag - Referencing unknown line 004012d0.0
................ failed: A non-current expression of a variable is used in block L8 in reg_d19 = LOAD(ADD(SEGMENT2ADDR(reg_pp9), 4211012)): The current setter is reg_zj6 while [reg_pp9] was found. Related expressions are [reg_zj7, reg_pp9, reg_zj4, reg_zj6, reg_zj5, reg_pp3, reg_zj1]
decompile F_004012d0                    : ............................................................ [ done ]
decompile F_00401350                    : ............................................................ [ done ]
decompile F_004013b0                    : .......................... failed: Can't find a setter for reg_8_local in block 4
decompile F_00401400                    : .WARN  ag - Referencing unknown line 004013b0.0
WARN  ag - Referencing unknown line 00402730.0
WARN  ag - Referencing unknown line 00401350.0
WARN  ag - Referencing unknown line 00402730.0
WARN  ag - Referencing unknown line 00401000.0
WARN  ag - Referencing unknown line 00402730.0
WARN  ag - Referencing unknown line 004010d0.0
WARN  ag - Referencing unknown line 00401cd0.0
WARN  ag - Referencing unknown line 00401cd0.0
WARN  ag - Referencing unknown line 00401f70.0
WARN  ag - Referencing unknown line 004026e0.0
..INFO  ks - wrote ./malware_via_email/malware_0762/ia32_pe/subject.exe.info
......WARN  ac - Block 6 is already known to have a starting stack offset of -336 but when called from 5 it has an offset of -332
WARN  ac - Block 42 is already known to have a starting stack offset of -344 but when called from 11 it has an offset of -352
WARN  ac - Block 14 is already known to have a starting stack offset of -372 but when called from 13 it has an offset of -376
WARN  ac - Block 42 is already known to have a starting stack offset of -352 but when called from 17 it has an offset of -384
WARN  ac - Block 42 is already known to have a starting stack offset of -384 but when called from 21 it has an offset of -420
WARN  ac - Block 42 is already known to have a starting stack offset of -420 but when called from 25 it has an offset of -424
WARN  ac - Block 36 is already known to have a starting stack offset of -440 but when called from 35 it has an offset of -444
WARN  ac - Block 39 is already known to have a starting stack offset of -448 but when called from 37 it has an offset of -444
WARN  ac - Block 41 is already known to have a starting stack offset of -452 but when called from 40 it has an offset of -456
WARN  ac - Block 42 is already known to have a starting stack offset of -424 but when called from 41 it has an offset of -452
WARN  ac - Block 42 is already known to have a starting stack offset of -452 but when called from 15 it has an offset of -376
................................................... [ done ]
decompile F_00401cd0                    : .WARN  ag - Referencing unknown line 00401000.0
........WARN  ac - Block 3 is already known to have a starting stack offset of -68 but when called from 2 it has an offset of -72
WARN  ac - Block 18 is already known to have a starting stack offset of -72 but when called from 6 it has an offset of -88
................................................... [ done ]
decompile F_00401f70                    : .WARN  ag - Referencing unknown line 00401000.0
WARN  ag - Referencing unknown line 00401000.0
WARN  ag - Referencing unknown line 00401000.0
WARN  ag - Referencing unknown line 00402580.0
WARN  ag - Referencing unknown line 00402650.0
..INFO  ks - wrote ./malware_via_email/malware_0762/ia32_pe/subject.exe.info
......WARN  ac - Block 10 is already known to have a starting stack offset of -100 but when called from 32 it has an offset of -104
WARN  ac - Block 71 is already known to have a starting stack offset of -100 but when called from 16 it has an offset of -104
WARN  ac - Block 71 is already known to have a starting stack offset of -104 but when called from 28 it has an offset of -112
WARN  ac - Block 71 is already known to have a starting stack offset of -112 but when called from 14 it has an offset of -108
WARN  ac - Block 23 is already known to have a starting stack offset of -104 but when called from 31 it has an offset of -112
WARN  ac - Block 54 is already known to have a starting stack offset of -152 but when called from 52 it has an offset of -164
WARN  ac - Block 71 is already known to have a starting stack offset of -112 but when called from 53 it has an offset of -164
WARN  ac - Block 71 is already known to have a starting stack offset of -164 but when called from 70 it has an offset of -148
WARN  ac - Block 58 is already known to have a starting stack offset of -152 but when called from 56 it has an offset of -164
WARN  ac - Block 67 is already known to have a starting stack offset of -148 but when called from 61 it has an offset of -176
WARN  ac - Block 67 is already known to have a starting stack offset of -176 but when called from 65 it has an offset of -192
WARN  ac - Block 71 is already known to have a starting stack offset of -164 but when called from 66 it has an offset of -192
WARN  ac - Block 71 is already known to have a starting stack offset of -192 but when called from 45 it has an offset of -124
WARN  ac - Block 17 is already known to have a starting stack offset of -104 but when called from 15 it has an offset of -108
................................................... [ done ]
INFO  eI -   pass construct regions took too long: 3.014sec.
INFO  eI -   pass Flow transformations of regions took too long: 4.213sec.
INFO  eI -   pass construct regions took too long: 3.554sec.
decompile F_00402580                    : .......................... failed: Can't find a setter for reg_20_local in block 0
decompile F_00402650                    : ............................................................ [ done ]
decompile F_004026e0                    : ............................................................ [ done ]
decompile F_00402730                    : .......................... failed: Can't find a setter for reg_24_local in block 0
