Unknown library function GetProcessTimes
Unknown library function MapViewOfFileEx
COMPUTED JUMP at 0x402397, pDest = r26
assgn   14 *32* %pc := m[0x4154c8]
is readonly
assgn   43 *32* %pc := m[0x415500]
is readonly
assgn   74 *32* %pc := m[0x4155e4]
is readonly
assgn  126 *32* %pc := m[0x415500]
is readonly
after removing matching assigns (%pc).
size 0x8 meet with size 0x20!
WARNING: size 0x20 meet with /*signed?*/char; allowing temporarily
integer size 0x8 meet with SizeType size 0x20!
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc1 ###
finding final parameters for proc1
potential param r28
found new parameter r28
after removing matching assigns (%pc).
in proc _start adding addrExp r28{0} - 4 to local table
finding final parameters for _start
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc1 ###
finding final parameters for _start
local ecx has type __size32 that doesn't agree with type of define void of a library, why?
local edx has type __size32 that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local ecx has type void that doesn't agree with type of define __size32 of a library, why?
local edx has type void that doesn't agree with type of define __size32 of a library, why?
local ecx has type __size32 that doesn't agree with type of define void of a library, why?
local edx has type __size32 that doesn't agree with type of define void of a library, why?
local eax has type /*signed?*/int that doesn't agree with type of define unsigned int of a library, why?
dest is not lib
call:   15 {*j32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcessTimes(
              )
              Reaching definitions: r10=r10{179},   r11=r11{180},   r15=r15{181},   r24=r24{182},   r25=r25{183},
                r26=r26{184},   r27=r27{185},   r28=r28{186} - 24,   r30=r30{187},   tmp1=tmp1{188},   tmpb=tmpb{0},
                %flags=%flags{189},   %ZF=%ZF{190},   %CF=%CF{191}
              Live variables: eax in proc proc1
result:    0 *j32* eax := -
dest is not lib
call:   44 {*j32* eax, *32* ecx, *32* edx, *v* esp} := CALL MapViewOfFileEx(
              )
              Reaching definitions: r10=truncu(32,8,(r24{15} | 255) & 236),   r11=r11{180},   r15=r15{181},
                r24=r24{15},   r25=r25{15},   r26=(r24{15} | 255) & 236,   r27=r27{185},   r28=r28{186} - 52,
                r30=r30{25},   tmp1=r30{187},   tmpb=tmpb{0},
                %flags=ADDFLAGS32( r30{187}, (r24{15} | 255) & 236, r30{25} ),
                %ZF=ADDFLAGS32( r30{187}, (r24{15} | 255) & 236, r30{25} ),
                %CF=ADDFLAGS32( r30{187}, (r24{15} | 255) & 236, r30{25} )
              Live variables: eax,  edx in proc proc1
result:    0 *j32* eax := -
result:    0 *32* edx := -
found seq with more than one outedge!
taken branch is first out edge
dest is not lib
call:   75 {*j8** eax_1, *v* ecx, *v* edx, *v* esp} := CALL VirtualAlloc(
                *LPVOID* m[esp_1 - 64] := m[esp_1 - 64]
                *DWORD* m[esp_1 - 60] := m[esp_1 - 60]
                *DWORD* m[esp_1 - 56] := m[esp_1 - 56]
                *DWORD* m[esp_1 - 52] := m[esp_1 - 52]
              )
              Reaching definitions: r10=truncu(32,8,(r24{15} | 255) & 236),   r11=truncu(32,8,r27{45}),
                r15=r27{45}@15:8,   r24=0x13fd0,   r25=r26{44},   r26=r26{44},   r27=r27{45},   r28=r28{186} - 68,
                r30=r30{25},   tmp1=r28{186} - 52,   tmpb=tmpb{0},
                %flags=SUBFLAGS32( r28{186} - 52, 4, r28{186} - 56 ),   %ZF=(r28{186} - 56) = 0,
                %CF=(r28{186} - 52) <u 4
              Live variables: eax_1 in proc proc1
result:    0 *j8** eax_1 := -
dest is not lib
call:  127 {*u32* eax, *v* ecx, *v* edx, *v* esp} := CALL MapViewOfFileEx(
              )
              Reaching definitions: r10=r10{196},   r11=truncu(32,8,r27{45}),   r15=r15{93},   r24=r24{198},
                r25=r25{199},   r26=r26{200},   r27=r27{45},   r28=r28{201} - 36,   r29=r29{202},   r30=r30{203} + 1,
                r31=r31{204} + 1,   tmp1=r31{204},   tmpb=tmpb{102},   %flags=ADDFLAGS32( r31{204}, 1, r31{204} + 1 ),
                %ZF=ADDFLAGS32( r31{204}, 1, r31{204} + 1 ),   %CF=ADDFLAGS32( r31{204}, 1, r31{204} + 1 )
              Live variables: eax in proc proc1
result:    0 *u32* eax := -
found seq with more than one outedge!
taken branch is first out edge
found seq with more than one outedge!
taken branch is first out edge
dest is not lib
call:    4 <all> := CALL proc1(<all>)
              Reaching definitions: r28=r28{0} - 4,   m[r28{0} - 4]=%pc
              Live variables:  in proc _start
