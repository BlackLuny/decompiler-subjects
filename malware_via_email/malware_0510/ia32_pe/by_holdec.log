INFO  holdec.an - ### holdec 1.1 Copyright 2003-2012 Raimar Falke
INFO  holdec.an - Using ./malware_via_email/malware_0510/ia32_pe/subject.exe as executable
INFO  holdec.fG - Detected PE (Portable Executable)
INFO  holdec.ks - wrote ./malware_via_email/malware_0510/ia32_pe/subject.exe.info
INFO  holdec.fG - disassembleAndWrite: start a new loop with 1 extra block starts
INFO  holdec.fG - disassembleAndWrite: running multiline
INFO  holdec.ks - wrote ./malware_via_email/malware_0510/ia32_pe/subject.exe.info
INFO  holdec.ks - wrote ./malware_via_email/malware_0510/ia32_pe/subject.exe.info
INFO  holdec.fG - disassembleAndWrite: found no new addresses. will stop now.
INFO  holdec.ks - wrote ./malware_via_email/malware_0510/ia32_pe/subject.exe.info
INFO  holdec.ks - wrote ./malware_via_email/malware_0510/ia32_pe/subject.exe.info
INFO  holdec.fG - reading all asm lines ...
INFO  holdec.fG - ... read 1272 asm lines
WARN  holdec.w - Address 00402000.0 is excluded by the address filter. Maybe outside text section?
INFO  holdec.an - will decompile 11 functions
WARN  holdec.ag - Referencing unknown line 00401150.0
WARN  holdec.ag - Referencing unknown line 00401150.0
WARN  holdec.ag - Referencing unknown line 00401dc0.0
WARN  holdec.ag - Referencing unknown line 004011b0.0
WARN  holdec.ag - Referencing unknown line 00401dc0.0
WARN  holdec.ag - Referencing unknown line 00401dc0.0
WARN  holdec.ag - Referencing unknown line 00401d90.0
WARN  holdec.ag - Referencing unknown line 00401d90.0
WARN  holdec.ag - Referencing unknown line 00401000.0
WARN  holdec.ag - Referencing unknown line 00401dc0.0
WARN  holdec.ag - Referencing unknown line 00401040.0
WARN  holdec.ag - Referencing unknown line 00401650.0
WARN  holdec.ag - Referencing unknown line 00401650.0
WARN  holdec.ag - Referencing unknown line 004017c0.0
WARN  holdec.ag - Referencing unknown line 00401d90.0
INFO  holdec.ks - wrote ./malware_via_email/malware_0510/ia32_pe/subject.exe.info
WARN  holdec.ac - Block 8 is already known to have a starting stack offset of -208 but when called from 7 it has an offset of -204
WARN  holdec.ac - Block 35 is already known to have a starting stack offset of -152 but when called from 9 it has an offset of -208
WARN  holdec.ac - Block 35 is already known to have a starting stack offset of -208 but when called from 11 it has an offset of -220
WARN  holdec.ac - Block 35 is already known to have a starting stack offset of -220 but when called from 13 it has an offset of -228
WARN  holdec.ac - Block 35 is already known to have a starting stack offset of -228 but when called from 17 it has an offset of -264
WARN  holdec.ac - Block 35 is already known to have a starting stack offset of -264 but when called from 19 it has an offset of -268
WARN  holdec.ac - Block 35 is already known to have a starting stack offset of -268 but when called from 22 it has an offset of -280
WARN  holdec.ac - Block 29 is already known to have a starting stack offset of -280 but when called from 28 it has an offset of -284
WARN  holdec.ac - Block 35 is already known to have a starting stack offset of -280 but when called from 34 it has an offset of -284
WARN  holdec.ac - Block 34 is already known to have a starting stack offset of -288 but when called from 33 it has an offset of -292
WARN  holdec.ac - Block 32 is already known to have a starting stack offset of -284 but when called from 30 it has an offset of -280
WARN  holdec.ac - Block 35 is already known to have a starting stack offset of -284 but when called from 15 it has an offset of -228
WARN  holdec.ag - Referencing unknown line 00401000.0
WARN  holdec.ac - Block 3 is already known to have a starting stack offset of -40 but when called from 2 it has an offset of -44
WARN  holdec.ac - Block 18 is already known to have a starting stack offset of -44 but when called from 6 it has an offset of -60
WARN  holdec.ag - Referencing unknown line 00401000.0
WARN  holdec.ag - Referencing unknown line 00401000.0
WARN  holdec.ag - Referencing unknown line 00401000.0
WARN  holdec.ag - Referencing unknown line 00401cf0.0
WARN  holdec.ag - Referencing unknown line 00401d60.0
INFO  holdec.ks - wrote ./malware_via_email/malware_0510/ia32_pe/subject.exe.info
WARN  holdec.ac - Block 10 is already known to have a starting stack offset of -88 but when called from 32 it has an offset of -92
WARN  holdec.ac - Block 71 is already known to have a starting stack offset of -88 but when called from 16 it has an offset of -92
WARN  holdec.ac - Block 71 is already known to have a starting stack offset of -92 but when called from 28 it has an offset of -100
WARN  holdec.ac - Block 71 is already known to have a starting stack offset of -100 but when called from 14 it has an offset of -96
WARN  holdec.ac - Block 23 is already known to have a starting stack offset of -92 but when called from 31 it has an offset of -100
WARN  holdec.ac - Block 54 is already known to have a starting stack offset of -140 but when called from 52 it has an offset of -152
WARN  holdec.ac - Block 71 is already known to have a starting stack offset of -100 but when called from 53 it has an offset of -152
WARN  holdec.ac - Block 71 is already known to have a starting stack offset of -152 but when called from 70 it has an offset of -136
WARN  holdec.ac - Block 58 is already known to have a starting stack offset of -140 but when called from 56 it has an offset of -152
WARN  holdec.ac - Block 67 is already known to have a starting stack offset of -136 but when called from 61 it has an offset of -164
WARN  holdec.ac - Block 67 is already known to have a starting stack offset of -164 but when called from 65 it has an offset of -180
WARN  holdec.ac - Block 71 is already known to have a starting stack offset of -152 but when called from 66 it has an offset of -180
WARN  holdec.ac - Block 71 is already known to have a starting stack offset of -180 but when called from 45 it has an offset of -112
WARN  holdec.ac - Block 17 is already known to have a starting stack offset of -92 but when called from 15 it has an offset of -96
INFO  holdec.eI -   pass construct regions took too long: 3.413sec.
INFO  holdec.eI -   pass Flow transformations of regions took too long: 3.021sec.
INFO  holdec.eI -   pass construct regions took too long: 2.148sec.
ERROR holdec.ie - Caught an Exception while trying to construct regions. Will dump blocks and regions (if available).
java.lang.RuntimeException: Block L9 is unused: called=[] isEntry=false isIncluded=false
	at holdec.bc.b(Unknown Source)
	at holdec.bc.a(Unknown Source)
	at holdec.ie.e(Unknown Source)
	at holdec.ie.b(Unknown Source)
	at holdec.ie.a(Unknown Source)
	at holdec.dQ.e(Unknown Source)
	at holdec.eQ.a(Unknown Source)
	at holdec.eI.a(Unknown Source)
	at holdec.dQ.a(Unknown Source)
	at holdec.fG.a(Unknown Source)
	at holdec.an.a(Unknown Source)
	at holdec.an.<init>(Unknown Source)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:532)
	at holdec.Holdec.main(Unknown Source)
