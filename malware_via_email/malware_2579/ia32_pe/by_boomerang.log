COMPUTED JUMP at 0x401fb3, pDest = m[0x405384]
Unknown library function GetModuleHandleA
Unknown library function OLEAUT32_dll_318
after removing matching assigns (%pc).
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x20 meet with /*signed?*/long long; allowing temporarily
WARNING: size 0x20 meet with /*signed?*/long long; allowing temporarily
WARNING: size 0x20 meet with long long; allowing temporarily
WARNING: size 0x20 meet with /*signed?*/long long; allowing temporarily
WARNING: size 0x20 meet with /*signed?*/long long; allowing temporarily
WARNING: size 0x20 meet with long long; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
WARNING: size 0x20 meet with /*signed?*/long long; allowing temporarily
WARNING: size 0x20 meet with /*signed?*/long long; allowing temporarily
WARNING: size 0x20 meet with /*signed?*/long long; allowing temporarily
WARNING: size 0x20 meet with long long; allowing temporarily
WARNING: size 0x20 meet with long long; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc4 ###
in proc proc4 adding addrExp r28{0} - 90 to local table
in proc proc4 adding addrExp r28{0} - 108 to local table
in proc proc4 adding addrExp r28{0} - 112 to local table
finding final parameters for proc4
potential param r25
found new parameter r25
potential param r24
found new parameter r24
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r26
found new parameter r26
potential param tmp2
potential param tmpl
potential param r27
found new parameter r27
potential param r11
found new parameter r11
assgn   17 *32* %pc := m[0x403000]
assgn   36 *32* %pc := m[0x40300c]
assgn   46 *32* r30 := m[0x403008]
assgn   89 *32* %pc := m[0x403018]
assgn  117 *32* %pc := m[0x403010]
assgn  125 *32* %pc := m[0x403004]
assgn  138 *32* %pc := m[0x403004]
assgn  157 *32* %pc := m[0x403000]
assgn  169 *32* %pc := m[0x403010]
assgn  174 *32* %pc := m[0x403008]
assgn  184 *32* %pc := m[0x40300c]
after removing matching assigns (%pc).
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc3 ###
in proc proc3 adding addrExp r28{0} - 465 to local table
in proc proc3 adding addrExp r28{0} - 473 to local table
in proc proc3 adding addrExp r28{0} - 8 to local table
in proc proc3 adding addrExp r28{0} - 547 to local table
in proc proc3 adding addrExp r28{0} - 556 to local table
in proc proc3 adding addrExp r28{0} - 4 to local table
in proc proc3 adding addrExp r28{0} - 728 to local table
in proc proc3 adding addrExp r28{0} - 732 to local table
in proc proc3 adding addrExp r28{0} - 736 to local table
in proc proc3 adding addrExp r28{0} - 740 to local table
in proc proc3 adding addrExp r28{0} - 744 to local table
in proc proc3 adding addrExp r28{0} - 465 to local table
in proc proc3 adding addrExp r28{0} - 473 to local table
in proc proc3 adding addrExp r28{0} - 8 to local table
in proc proc3 adding addrExp r28{0} - 8 to local table
in proc proc3 adding addrExp r28{0} - 744 to local table
in proc proc3 adding addrExp r28{0} - 744 to local table
in proc proc3 adding addrExp r28{0} - 4 to local table
in proc proc3 adding addrExp r28{0} - 8 to local table
TYPE ERROR: Existing type at address 0xfffffff8 is not structure or array type
in proc proc3 adding addrExp r28{0} - 465 to local table
TYPE ERROR: Existing type at address 0xfffffe2f is not structure or array type
in proc proc3 adding addrExp r28{0} - 473 to local table
TYPE ERROR: Existing type at address 0xfffffe27 is not structure or array type
in proc proc3 adding addrExp r28{0} - 728 to local table
TYPE ERROR: Existing type at address 0xfffffd28 is not structure or array type
in proc proc3 adding addrExp r28{0} - 732 to local table
TYPE ERROR: Existing type at address 0xfffffd24 is not structure or array type
in proc proc3 adding addrExp r28{0} - 736 to local table
TYPE ERROR: Existing type at address 0xfffffd20 is not structure or array type
in proc proc3 adding addrExp r28{0} - 740 to local table
TYPE ERROR: Existing type at address 0xfffffd1c is not structure or array type
in proc proc3 adding addrExp r28{0} - 744 to local table
TYPE ERROR: Existing type at address 0xfffffd18 is not structure or array type
in proc proc3 adding addrExp r28{0} - 4 to local table
in proc proc3 adding addrExp r28{0} - 8 to local table
TYPE ERROR: Existing type at address 0xfffffff8 is not structure or array type
in proc proc3 adding addrExp r28{0} - 465 to local table
TYPE ERROR: Existing type at address 0xfffffe2f is not structure or array type
in proc proc3 adding addrExp r28{0} - 473 to local table
TYPE ERROR: Existing type at address 0xfffffe27 is not structure or array type
in proc proc3 adding addrExp r28{0} - 728 to local table
TYPE ERROR: Existing type at address 0xfffffd28 is not structure or array type
in proc proc3 adding addrExp r28{0} - 732 to local table
TYPE ERROR: Existing type at address 0xfffffd24 is not structure or array type
in proc proc3 adding addrExp r28{0} - 736 to local table
TYPE ERROR: Existing type at address 0xfffffd20 is not structure or array type
in proc proc3 adding addrExp r28{0} - 740 to local table
TYPE ERROR: Existing type at address 0xfffffd1c is not structure or array type
in proc proc3 adding addrExp r28{0} - 744 to local table
TYPE ERROR: Existing type at address 0xfffffd18 is not structure or array type
in proc proc3 adding addrExp r28{0} - 4 to local table
in proc proc3 adding addrExp r28{0} - 8 to local table
TYPE ERROR: Existing type at address 0xfffffff8 is not structure or array type
in proc proc3 adding addrExp r28{0} - 465 to local table
TYPE ERROR: Existing type at address 0xfffffe2f is not structure or array type
in proc proc3 adding addrExp r28{0} - 473 to local table
TYPE ERROR: Existing type at address 0xfffffe27 is not structure or array type
in proc proc3 adding addrExp r28{0} - 728 to local table
TYPE ERROR: Existing type at address 0xfffffd28 is not structure or array type
in proc proc3 adding addrExp r28{0} - 732 to local table
TYPE ERROR: Existing type at address 0xfffffd24 is not structure or array type
in proc proc3 adding addrExp r28{0} - 736 to local table
TYPE ERROR: Existing type at address 0xfffffd20 is not structure or array type
in proc proc3 adding addrExp r28{0} - 740 to local table
TYPE ERROR: Existing type at address 0xfffffd1c is not structure or array type
in proc proc3 adding addrExp r28{0} - 744 to local table
TYPE ERROR: Existing type at address 0xfffffd18 is not structure or array type
in proc proc3 adding addrExp r28{0} - 4 to local table
in proc proc3 adding addrExp r28{0} - 8 to local table
TYPE ERROR: Existing type at address 0xfffffff8 is not structure or array type
in proc proc3 adding addrExp r28{0} - 465 to local table
TYPE ERROR: Existing type at address 0xfffffe2f is not structure or array type
in proc proc3 adding addrExp r28{0} - 473 to local table
TYPE ERROR: Existing type at address 0xfffffe27 is not structure or array type
in proc proc3 adding addrExp r28{0} - 728 to local table
TYPE ERROR: Existing type at address 0xfffffd28 is not structure or array type
in proc proc3 adding addrExp r28{0} - 732 to local table
TYPE ERROR: Existing type at address 0xfffffd24 is not structure or array type
in proc proc3 adding addrExp r28{0} - 736 to local table
TYPE ERROR: Existing type at address 0xfffffd20 is not structure or array type
in proc proc3 adding addrExp r28{0} - 740 to local table
TYPE ERROR: Existing type at address 0xfffffd1c is not structure or array type
in proc proc3 adding addrExp r28{0} - 744 to local table
TYPE ERROR: Existing type at address 0xfffffd18 is not structure or array type
finding final parameters for proc3
potential param r27
found new parameter r27
potential param r31
found new parameter r31
potential param m[r28{0} - 547]
found new parameter m[r28{0} - 547]
potential param m[r28{0} - 556]
found new parameter m[r28{0} - 556]
potential param r11
found new parameter r11
assgn   11 *32* r30 := m[0x403004]
assgn   24 *32* r27 := m[0x403008]
assgn   31 *32* r31 := m[0x403000]
assgn  153 *32* r30 := m[0x40300c]
assgn  192 *32* %pc := m[0x403008]
assgn  198 *32* r30 := m[0x403004]
assgn  219 *32* %pc := m[0x403000]
assgn  255 *32* %pc := m[0x40300c]
assgn  324 *32* r31 := m[0x403000]
assgn  348 *32* %pc := m[0x40300c]
assgn  409 *32* %pc := m[0x403004]
assgn  413 *32* %pc := m[0x40300c]
assgn  436 *32* r30 := m[0x403000]
assgn  473 *32* r27 := m[0x403008]
assgn  504 *32* %pc := m[0x40300c]
assgn  533 *32* r31 := m[0x403004]
assgn  563 *32* %pc := m[0x40300c]
after removing matching assigns (%pc).
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with /*signed?*/long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with /*signed?*/long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc9 ###
in proc proc9 adding addrExp r28{0} - 4 to local table
in proc proc9 adding addrExp r28{0} - 0x76c to local table
in proc proc9 adding addrExp r28{0} - 0x770 to local table
in proc proc9 adding addrExp r28{0} - 0x774 to local table
in proc proc9 adding addrExp r28{0} - 0x778 to local table
in proc proc9 adding addrExp r28{0} - 0x77c to local table
finding final parameters for proc9
potential param r28
found new parameter r28
assgn   45 *32* %pc := m[0x403000]
assgn  167 *32* %pc := m[0x403008]
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc5 ###
in proc proc5 adding addrExp r28{0} - 295 to local table
in proc proc5 adding addrExp r28{0} - 294 to local table
TYPE ERROR: attempt to insert item <noname> at 0xfffffeda of type /*signed?*/int which weaves after <noname> at 0xfffffed9 of type __size32
in proc proc5 adding addrExp r28{0} - 115 to local table
in proc proc5 adding addrExp r28{0} - 116 to local table
TYPE ERROR: at address 0xffffff8c, overlapping type /*signed?*/int does not resolve to compound or array
in proc proc5 adding addrExp r28{0} - 96 to local table
in proc proc5 adding addrExp r28{0} - 124 to local table
in proc proc5 adding addrExp r28{0} - 316 to local table
in proc proc5 adding addrExp r28{0} - 320 to local table
in proc proc5 adding addrExp r28{0} - 324 to local table
in proc proc5 adding addrExp r28{0} - 328 to local table
in proc proc5 adding addrExp r28{0} - 332 to local table
in proc proc5 adding addrExp r28{0} - 295 to local table
in proc proc5 adding addrExp r28{0} - 312 to local table
in proc proc5 adding addrExp r28{0} - 336 to local table
in proc proc5 adding addrExp r28{0} - 308 to local table
in proc proc5 adding addrExp r28{0} - 340 to local table
in proc proc5 adding addrExp r28{0} - 304 to local table
in proc proc5 adding addrExp r28{0} - 320 to local table
in proc proc5 adding addrExp r28{0} - 308 to local table
in proc proc5 adding addrExp r28{0} - 320 to local table
in proc proc5 adding addrExp r28{0} - 308 to local table
in proc proc5 adding addrExp r28{0} - 308 to local table
in proc proc5 adding addrExp r28{0} - 308 to local table
in proc proc5 adding addrExp r28{0} - 308 to local table
in proc proc5 adding addrExp r28{0} - 320 to local table
in proc proc5 adding addrExp r28{0} - 316 to local table
in proc proc5 adding addrExp r28{0} - 316 to local table
in proc proc5 adding addrExp r28{0} - 320 to local table
in proc proc5 adding addrExp r28{0} - 308 to local table
in proc proc5 adding addrExp r28{0} - 316 to local table
in proc proc5 adding addrExp r28{0} - 320 to local table
in proc proc5 adding addrExp r28{0} - 340 to local table
finding final parameters for proc5
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param tmp2
assgn   39 *32* tmp1 := m[0x405378]
assgn   70 *32* r24 := m[0x40537c]
assgn   89 *32* %pc := m[0x403014]
assgn   95 *32* r31 := m[0x40537c]
assgn  114 *32* tmp1 := m[0x403038]
assgn  191 *32* %pc := m[0x403004]
assgn  210 *32* %pc := m[0x403018]
after removing matching assigns (%pc).
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc1 ###
in proc proc1 adding addrExp r28{0} - 4 to local table
in proc proc1 adding addrExp r28{0} - 224 to local table
in proc proc1 adding addrExp r28{0} - 228 to local table
in proc proc1 adding addrExp r28{0} - 232 to local table
in proc proc1 adding addrExp r28{0} - 32 to local table
in proc proc1 adding addrExp r28{0} - 48 to local table
in proc proc1 adding addrExp r28{0} - 236 to local table
in proc proc1 adding addrExp r28{0} - 240 to local table
in proc proc1 adding addrExp r28{0} - 244 to local table
in proc proc1 adding addrExp r28{0} - 248 to local table
in proc proc1 adding addrExp r28{0} - 248 to local table
in proc proc1 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc1 adding addrExp r28{0} - 32 to local table
in proc proc1 adding addrExp r28{0} - 48 to local table
in proc proc1 adding addrExp r28{0} - 224 to local table
in proc proc1 adding addrExp r28{0} - 228 to local table
in proc proc1 adding addrExp r28{0} - 232 to local table
in proc proc1 adding addrExp r28{0} - 236 to local table
in proc proc1 adding addrExp r28{0} - 240 to local table
in proc proc1 adding addrExp r28{0} - 244 to local table
in proc proc1 adding addrExp r28{0} - 248 to local table
size 0x10 meet with size 0x20!
WARNING: size 0x20 meet with unsigned char; allowing temporarily
finding final parameters for proc1
potential param r28
found new parameter r28
potential param r27
found new parameter r27
potential param r31
found new parameter r31
potential param r7
found new parameter r7
potential param r8
found new parameter r8
potential param r9
found new parameter r9
potential param r11
found new parameter r11
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc8 ###
in proc proc8 adding addrExp r28{0} - 8 to local table
in proc proc8 adding addrExp r28{0} - 12 to local table
in proc proc8 adding addrExp r28{0} - 16 to local table
in proc proc8 adding addrExp r28{0} - 20 to local table
finding final parameters for proc8
potential param r27
found new parameter r27
potential param r30
found new parameter r30
potential param r31
found new parameter r31
assgn    5 *8* r10 := m[0x405388]
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc6 ###
in proc proc6 adding addrExp r28{0} - 108 to local table
in proc proc6 adding addrExp r28{0} - 132 to local table
in proc proc6 adding addrExp r28{0} - 116 to local table
in proc proc6 adding addrExp r28{0} - 128 to local table
in proc proc6 adding addrExp r28{0} - 164 to local table
in proc proc6 adding addrExp r28{0} - 77 to local table
in proc proc6 adding addrExp r28{0} - 87 to local table
in proc proc6 adding addrExp r28{0} - 148 to local table
in proc proc6 adding addrExp r28{0} - 152 to local table
in proc proc6 adding addrExp r28{0} - 156 to local table
in proc proc6 adding addrExp r28{0} - 160 to local table
in proc proc6 adding addrExp r28{0} - 124 to local table
in proc proc6 adding addrExp r28{0} - 120 to local table
in proc proc6 adding addrExp r28{0} - 136 to local table
in proc proc6 adding addrExp r28{0} - 140 to local table
in proc proc6 adding addrExp r28{0} - 116 to local table
in proc proc6 adding addrExp r28{0} - 120 to local table
in proc proc6 adding addrExp r28{0} - 124 to local table
in proc proc6 adding addrExp r28{0} - 128 to local table
in proc proc6 adding addrExp r28{0} - 132 to local table
in proc proc6 adding addrExp r28{0} - 136 to local table
in proc proc6 adding addrExp r28{0} - 140 to local table
in proc proc6 adding addrExp r28{0} - 164 to local table
in proc proc6 adding addrExp r28{0} - 128 to local table
in proc proc6 adding addrExp r28{0} - 140 to local table
in proc proc6 adding addrExp r28{0} - 128 to local table
in proc proc6 adding addrExp r28{0} - 128 to local table
in proc proc6 adding addrExp r28{0} - 140 to local table
in proc proc6 adding addrExp r28{0} - 128 to local table
in proc proc6 adding addrExp r28{0} - 140 to local table
in proc proc6 adding addrExp r28{0} - 128 to local table
in proc proc6 adding addrExp r28{0} - 128 to local table
in proc proc6 adding addrExp r28{0} - 140 to local table
in proc proc6 adding addrExp r28{0} - 132 to local table
in proc proc6 adding addrExp r28{0} - 128 to local table
in proc proc6 adding addrExp r28{0} - 140 to local table
in proc proc6 adding addrExp r28{0} - 128 to local table
in proc proc6 adding addrExp r28{0} - 128 to local table
in proc proc6 adding addrExp r28{0} - 140 to local table
in proc proc6 adding addrExp r28{0} - 124 to local table
in proc proc6 adding addrExp r28{0} - 124 to local table
in proc proc6 adding addrExp r28{0} - 128 to local table
in proc proc6 adding addrExp r28{0} - 128 to local table
in proc proc6 adding addrExp r28{0} - 128 to local table
in proc proc6 adding addrExp r28{0} - 128 to local table
in proc proc6 adding addrExp r28{0} - 124 to local table
in proc proc6 adding addrExp r28{0} - 140 to local table
in proc proc6 adding addrExp r28{0} - 124 to local table
in proc proc6 adding addrExp r28{0} - 124 to local table
in proc proc6 adding addrExp r28{0} - 140 to local table
in proc proc6 adding addrExp r28{0} - 136 to local table
in proc proc6 adding addrExp r28{0} - 116 to local table
in proc proc6 adding addrExp r28{0} - 124 to local table
in proc proc6 adding addrExp r28{0} - 120 to local table
in proc proc6 adding addrExp r28{0} - 120 to local table
in proc proc6 adding addrExp r28{0} - 116 to local table
in proc proc6 adding addrExp r28{0} - 124 to local table
in proc proc6 adding addrExp r28{0} - 164 to local table
in proc proc6 adding addrExp r28{0} - 164 to local table
in proc proc6 adding addrExp r28{0} - 136 to local table
in proc proc6 adding addrExp r28{0} - 124 to local table
in proc proc6 adding addrExp r28{0} - 140 to local table
in proc proc6 adding addrExp r28{0} - 164 to local table
in proc proc6 adding addrExp r28{0} - 136 to local table
in proc proc6 adding addrExp r28{0} - 136 to local table
in proc proc6 adding addrExp r28{0} - 116 to local table
in proc proc6 adding addrExp r28{0} - 116 to local table
in proc proc6 adding addrExp r28{0} - 136 to local table
in proc proc6 adding addrExp r28{0} - 140 to local table
in proc proc6 adding addrExp r28{0} - 164 to local table
in proc proc6 adding addrExp r28{0} - 124 to local table
in proc proc6 adding addrExp r28{0} - 140 to local table
in proc proc6 adding addrExp r28{0} - 124 to local table
in proc proc6 adding addrExp r28{0} - 124 to local table
in proc proc6 adding addrExp r28{0} - 128 to local table
in proc proc6 adding addrExp r28{0} - 132 to local table
in proc proc6 adding addrExp r28{0} - 140 to local table
in proc proc6 adding addrExp r28{0} - 136 to local table
in proc proc6 adding addrExp r28{0} - 116 to local table
in proc proc6 adding addrExp r28{0} - 120 to local table
in proc proc6 adding addrExp r28{0} - 124 to local table
in proc proc6 adding addrExp r28{0} - 128 to local table
in proc proc6 adding addrExp r28{0} - 132 to local table
in proc proc6 adding addrExp r28{0} - 136 to local table
in proc proc6 adding addrExp r28{0} - 140 to local table
in proc proc6 adding addrExp r28{0} - 164 to local table
finding final parameters for proc6
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r27
found new parameter r27
potential param m[r28{0} - 108]
found new parameter m[r28{0} - 108]
potential param m[r28{0} - 132]
found new parameter m[r28{0} - 132]
potential param m[r28{0} - 116]
found new parameter m[r28{0} - 116]
potential param m[r28{0} - 164]
found new parameter m[r28{0} - 164]
assgn   34 *32* r31 := m[0x40537c]
assgn   42 *32* %pc := m[0x403004]
assgn   61 *32* %pc := m[0x40300c]
assgn  106 *32* %pc := m[0x403018]
assgn  151 *32* %pc := m[0x403008]
assgn  200 *32* %pc := m[0x403000]
assgn  216 *32* r25 := m[0x40537c]
assgn  228 *32* %pc := m[0x403008]
assgn  233 *32* r26 := m[0x40537c]
assgn  266 *32* r27 := m[0x40537c]
assgn  303 *32* %pc := m[0x403000]
assgn  328 *32* %pc := m[0x403018]
assgn  340 *32* r24 := m[0x40537c]
assgn  373 *32* r26 := m[0x40537c]
assgn  382 *32* %pc := m[0x403010]
assgn  412 *32* r30 := m[48]
assgn  440 *32* %pc := m[0x40300c]
assgn  442 *32* r26 := m[0x405384]
after removing matching assigns (%pc).
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc2 ###
in proc proc2 adding addrExp r28{0} - 4 to local table
finding final parameters for proc2
potential param r28
found new parameter r28
potential param r27
found new parameter r27
potential param r30
found new parameter r30
potential param r31
found new parameter r31
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
in proc _start adding addrExp r28{0} - 4 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 16 to local table
finding final parameters for _start
potential param r28
found new parameter r28
potential param r24
found new parameter r24
potential param r7
found new parameter r7
potential param r8
found new parameter r8
potential param r9
found new parameter r9
potential param r11
found new parameter r11
potential param r27
found new parameter r27
potential param r31
found new parameter r31
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc1 ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc2 ###
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 8 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc3 ###
in proc proc3 adding addrExp r28{0} - 547 to local table
in proc proc3 adding addrExp r28{0} - 556 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc4 ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc5 ###
in proc proc5 adding addrExp r28{0} - 320 to local table
in proc proc5 adding addrExp r28{0} - 320 to local table
in proc proc5 adding addrExp r28{0} - 308 to local table
in proc proc5 adding addrExp r28{0} - 308 to local table
in proc proc5 adding addrExp r28{0} - 308 to local table
in proc proc5 adding addrExp r28{0} - 320 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc6 ###
in proc proc6 adding addrExp r28{0} - 108 to local table
in proc proc6 adding addrExp r28{0} - 132 to local table
in proc proc6 adding addrExp r28{0} - 116 to local table
in proc proc6 adding addrExp r28{0} - 164 to local table
in proc proc6 adding addrExp r28{0} - 124 to local table
in proc proc6 adding addrExp r28{0} - 120 to local table
in proc proc6 adding addrExp r28{0} - 136 to local table
in proc proc6 adding addrExp r28{0} - 140 to local table
in proc proc6 adding addrExp r28{0} - 116 to local table
in proc proc6 adding addrExp r28{0} - 120 to local table
in proc proc6 adding addrExp r28{0} - 124 to local table
in proc proc6 adding addrExp r28{0} - 132 to local table
in proc proc6 adding addrExp r28{0} - 136 to local table
in proc proc6 adding addrExp r28{0} - 140 to local table
in proc proc6 adding addrExp r28{0} - 164 to local table
in proc proc6 adding addrExp r28{0} - 128 to local table
in proc proc6 adding addrExp r28{0} - 140 to local table
in proc proc6 adding addrExp r28{0} - 128 to local table
in proc proc6 adding addrExp r28{0} - 128 to local table
in proc proc6 adding addrExp r28{0} - 140 to local table
in proc proc6 adding addrExp r28{0} - 128 to local table
in proc proc6 adding addrExp r28{0} - 140 to local table
in proc proc6 adding addrExp r28{0} - 128 to local table
in proc proc6 adding addrExp r28{0} - 128 to local table
in proc proc6 adding addrExp r28{0} - 140 to local table
in proc proc6 adding addrExp r28{0} - 132 to local table
in proc proc6 adding addrExp r28{0} - 128 to local table
in proc proc6 adding addrExp r28{0} - 128 to local table
in proc proc6 adding addrExp r28{0} - 128 to local table
in proc proc6 adding addrExp r28{0} - 124 to local table
in proc proc6 adding addrExp r28{0} - 124 to local table
in proc proc6 adding addrExp r28{0} - 128 to local table
in proc proc6 adding addrExp r28{0} - 128 to local table
in proc proc6 adding addrExp r28{0} - 128 to local table
in proc proc6 adding addrExp r28{0} - 128 to local table
in proc proc6 adding addrExp r28{0} - 124 to local table
in proc proc6 adding addrExp r28{0} - 140 to local table
in proc proc6 adding addrExp r28{0} - 140 to local table
in proc proc6 adding addrExp r28{0} - 136 to local table
in proc proc6 adding addrExp r28{0} - 116 to local table
in proc proc6 adding addrExp r28{0} - 124 to local table
in proc proc6 adding addrExp r28{0} - 120 to local table
in proc proc6 adding addrExp r28{0} - 120 to local table
in proc proc6 adding addrExp r28{0} - 116 to local table
in proc proc6 adding addrExp r28{0} - 124 to local table
in proc proc6 adding addrExp r28{0} - 164 to local table
in proc proc6 adding addrExp r28{0} - 136 to local table
in proc proc6 adding addrExp r28{0} - 124 to local table
in proc proc6 adding addrExp r28{0} - 140 to local table
in proc proc6 adding addrExp r28{0} - 136 to local table
in proc proc6 adding addrExp r28{0} - 136 to local table
in proc proc6 adding addrExp r28{0} - 116 to local table
in proc proc6 adding addrExp r28{0} - 116 to local table
in proc proc6 adding addrExp r28{0} - 136 to local table
in proc proc6 adding addrExp r28{0} - 140 to local table
in proc proc6 adding addrExp r28{0} - 164 to local table
in proc proc6 adding addrExp r28{0} - 124 to local table
in proc proc6 adding addrExp r28{0} - 140 to local table
in proc proc6 adding addrExp r28{0} - 124 to local table
in proc proc6 adding addrExp r28{0} - 128 to local table
in proc proc6 adding addrExp r28{0} - 132 to local table
in proc proc6 adding addrExp r28{0} - 140 to local table
in proc proc6 adding addrExp r28{0} - 136 to local table
in proc proc6 adding addrExp r28{0} - 116 to local table
in proc proc6 adding addrExp r28{0} - 120 to local table
in proc proc6 adding addrExp r28{0} - 124 to local table
in proc proc6 adding addrExp r28{0} - 128 to local table
in proc proc6 adding addrExp r28{0} - 132 to local table
in proc proc6 adding addrExp r28{0} - 136 to local table
in proc proc6 adding addrExp r28{0} - 140 to local table
in proc proc6 adding addrExp r28{0} - 164 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc8 ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc9 ###
finding final parameters for proc1
potential param r28
found new parameter r28
potential param r27
found new parameter r27
potential param r31
found new parameter r31
potential param r7
found new parameter r7
potential param r8
found new parameter r8
potential param r9
found new parameter r9
potential param r11
found new parameter r11
finding final parameters for _start
potential param r28
found new parameter r28
potential param r24
found new parameter r24
potential param r7
found new parameter r7
potential param r8
found new parameter r8
potential param r9
found new parameter r9
potential param r11
found new parameter r11
potential param r27
found new parameter r27
potential param r31
found new parameter r31
finding final parameters for proc2
potential param r28
found new parameter r28
potential param r27
found new parameter r27
potential param r30
found new parameter r30
potential param r31
found new parameter r31
finding final parameters for _start
potential param r28
found new parameter r28
potential param r24
found new parameter r24
potential param r7
found new parameter r7
potential param r8
found new parameter r8
potential param r9
found new parameter r9
potential param r11
found new parameter r11
potential param r27
found new parameter r27
potential param r31
found new parameter r31
finding final parameters for proc3
potential param r27
found new parameter r27
potential param r31
found new parameter r31
potential param m[r28{0} - 547]
found new parameter m[r28{0} - 547]
potential param m[r28{0} - 556]
found new parameter m[r28{0} - 556]
potential param r11
found new parameter r11
finding final parameters for proc1
potential param r28
found new parameter r28
potential param r27
found new parameter r27
potential param r31
found new parameter r31
potential param r7
found new parameter r7
potential param r8
found new parameter r8
potential param r9
found new parameter r9
potential param r11
found new parameter r11
finding final parameters for proc2
potential param r28
found new parameter r28
potential param r27
found new parameter r27
potential param r30
found new parameter r30
potential param r31
found new parameter r31
finding final parameters for proc4
potential param r25
found new parameter r25
potential param r24
found new parameter r24
potential param r9
found new parameter r9
potential param r10
found new parameter r10
potential param r26
found new parameter r26
potential param tmp2
potential param tmpl
potential param r27
found new parameter r27
potential param r11
found new parameter r11
finding final parameters for proc1
potential param r28
found new parameter r28
potential param r27
found new parameter r27
potential param r31
found new parameter r31
potential param r7
found new parameter r7
potential param r8
found new parameter r8
potential param r9
found new parameter r9
potential param r11
found new parameter r11
finding final parameters for proc2
potential param r28
found new parameter r28
potential param r27
found new parameter r27
potential param r30
found new parameter r30
potential param r31
found new parameter r31
finding final parameters for proc3
potential param r27
found new parameter r27
potential param r31
found new parameter r31
potential param m[r28{0} - 547]
found new parameter m[r28{0} - 547]
potential param m[r28{0} - 556]
found new parameter m[r28{0} - 556]
potential param r11
found new parameter r11
finding final parameters for proc6
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r27
found new parameter r27
potential param m[r28{0} - 108]
found new parameter m[r28{0} - 108]
potential param m[r28{0} - 132]
found new parameter m[r28{0} - 132]
potential param m[r28{0} - 116]
found new parameter m[r28{0} - 116]
potential param m[r28{0} - 164]
found new parameter m[r28{0} - 164]
finding final parameters for proc2
potential param r28
found new parameter r28
potential param r27
found new parameter r27
potential param r30
found new parameter r30
potential param r31
found new parameter r31
finding final parameters for proc8
potential param r27
found new parameter r27
potential param r30
found new parameter r30
potential param r31
found new parameter r31
finding final parameters for proc6
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r27
found new parameter r27
potential param m[r28{0} - 108]
found new parameter m[r28{0} - 108]
potential param m[r28{0} - 132]
found new parameter m[r28{0} - 132]
potential param m[r28{0} - 116]
found new parameter m[r28{0} - 116]
potential param m[r28{0} - 164]
found new parameter m[r28{0} - 164]
finding final parameters for proc9
potential param r28
found new parameter r28
finding final parameters for proc5
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param tmp2
local ecx has type __size32 that doesn't agree with type of define void * of a library, why?
local edx has type __size32 that doesn't agree with type of define unsigned int of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local edx has type unsigned int that doesn't agree with type of define /*signed?*/int of a library, why?
local ecx has type void * that doesn't agree with type of define void of a library, why?
local edx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local ecx has type unsigned int that doesn't agree with type of define /*signed?*/int of a library, why?
local edx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local esp has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local eax has type /*signed?*/int that doesn't agree with type of define __size32 of a library, why?
local ecx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local edx has type void that doesn't agree with type of define /*signed?*/int of a library, why?
local edx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local ecx has type void that doesn't agree with type of define unsigned short * of a library, why?
local edx has type void that doesn't agree with type of define __size32 of a library, why?
local eax has type __size32 that doesn't agree with type of define unsigned int of a library, why?
local ecx has type unsigned short * that doesn't agree with type of define void of a library, why?
local edx has type __size32 that doesn't agree with type of define void of a library, why?
local edx has type void that doesn't agree with type of define __size32 of a library, why?
local eax has type unsigned int that doesn't agree with type of define __size32 of a library, why?
local ecx has type void that doesn't agree with type of define unsigned int of a library, why?
local ecx has type unsigned int that doesn't agree with type of define void of a library, why?
local edx has type __size32 that doesn't agree with type of define void of a library, why?
local ecx has type __size32 that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local eax has type /*signed?*/int that doesn't agree with type of define __size32 of a library, why?
local ecx has type void that doesn't agree with type of define __size32 of a library, why?
local edx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local ecx has type __size32 that doesn't agree with type of define /*signed?*/int of a library, why?
local ecx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local eax has type __size32 that doesn't agree with type of define void * of a library, why?
local eax has type void * that doesn't agree with type of define __size32 of a library, why?
local eax has type __size32 that doesn't agree with type of define /*signed?*/int of a library, why?
local eax has type /*signed?*/int that doesn't agree with type of define __size32 of a library, why?
local ecx has type void that doesn't agree with type of define __size32 of a library, why?
local edx has type void that doesn't agree with type of define __size32 of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local ecx has type void * that doesn't agree with type of define void of a library, why?
local edx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local eax has type /*signed?*/int that doesn't agree with type of define __size32 of a library, why?
local ecx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local esp has type unsigned int that doesn't agree with type of define void of a library, why?
local eax has type __size32 that doesn't agree with type of define /*signed?*/long long of a library, why?
local edx has type __size32 that doesn't agree with type of define unsigned long long of a library, why?
local eax has type /*signed?*/long long that doesn't agree with type of define /*signed?*/int of a library, why?
local eax has type /*signed?*/int that doesn't agree with type of define __size32 of a library, why?
local ecx has type void that doesn't agree with type of define __size32 of a library, why?
local edx has type unsigned long long that doesn't agree with type of define void of a library, why?
local ecx has type __size32 that doesn't agree with type of define void of a library, why?
local eax has type __size32 that doesn't agree with type of define /*signed?*/int of a library, why?
local eax has type /*signed?*/int that doesn't agree with type of define __size32 of a library, why?
local edx has type void that doesn't agree with type of define __size32 of a library, why?
local eax has type __size32 that doesn't agree with type of define /*signed?*/int of a library, why?
local edx has type __size32 that doesn't agree with type of define void of a library, why?
dest is not lib
call:   31 {*32* eax, *32* ecx, *32* edx, *32** esp_1} := CALL OLEAUT32_dll_318(
              )
              Reaching definitions: r0=truncu(32,16,r28{0} - 68),   r7=r7{0},   r8=r8{0},   r9=r9{0},
                r10=truncu(32,8,r28{0} - 32),   r11=r11{0},   r24=r28{0} - 68,   r25=r28{0} - 48,   r26=r28{0} - 32,
                r27=r27{0},   r28=r28{0} - 248,   r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 32]=11,   m[r28{0} - 48]=11,   m[r28{0} - 224]=r27{0},   m[r28{0} - 228]=r30{0},
                m[r28{0} - 232]=r31{0},   m[r28{0} - 236]=r28{0} - 68,   m[r28{0} - 240]=r28{0} - 48,
                m[r28{0} - 244]=r28{0} - 32,   m[r28{0} - 248]=%pc,   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 216, r28{0} - 220 ),   %ZF=(r28{0} - 220) = 0,   %CF=(r28{0} - 4) <u 216
              Live variables: eax,  ecx,  edx,  esp_1 in proc proc1
result:    0 *32* eax := -
result:    0 *32* ecx := -
result:    0 *32* edx := -
result:    0 *32** esp_1 := -
dest is not lib
call:   64 {*v* eax, *32* esi, *j32* cl, *u8* dl, *v* ecx, *v* edx, *v* ebx, *union** esp, *v** ebp, *j32* edi} := CALL proc3(
                *j32* m[esp_1 - 564] := m[esp_1 - 564]
                *j32* m[esp_1 - 555] := m[esp_1 - 555]
                *8* bl := param4
                *j32* ebx := param5
                *32* edi := param6
              )
              Reaching definitions: r0=0x1fc0,   r7=r7{0},   r8=r8{0},   r9=r9{0},   r10=r10{256},   r11=r11{377},
                r24=0x401fc0,   r25=r25{258},   r26=r26{259},   r27=r27{0},   r28=r28{261} - 8,   r29=r29{262},
                r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=m[r28{0} - 4]{366},   m[r28{0} - 32]=m[r28{0} - 32]{367},
                m[r28{0} - 48]=m[r28{0} - 48]{368},   m[r28{0} - 224]=m[r28{0} - 224]{369},
                m[r28{0} - 228]=m[r28{0} - 228]{370},   m[r28{0} - 232]=m[r28{0} - 232]{371},
                m[r28{0} - 236]=m[r28{0} - 236]{372},   m[r28{0} - 240]=m[r28{0} - 240]{373},
                m[r28{0} - 244]=m[r28{0} - 244]{374},   m[r28{0} - 248]=m[r28{0} - 248]{375},   tmp1=global53,
                %flags=SUBFLAGS32( m[0x405378], 0, global53 ),   %ZF=global53 = 0,   %CF=m[0x405378] <u 0
              Live variables: cl,  dl,  ebp,  edi,  esp in proc proc1
result:    0 *j32* cl := -
result:    0 *u8* dl := -
result:    0 *union** esp := -
result:    0 *v** ebp := -
result:    0 *j32* edi := -
dest is not lib
call:   90 {*u32* eax_1, *v** ecx, *u32* edx, *v* esp} := CALL VirtualAlloc(
                *LPVOID* m[esp - 12] := m[esp - 12]
                *DWORD* m[esp - 8] := m[esp - 8]
                *DWORD* local9 := m[esp - 4]
                *union* m[esp] := m[esp]
              )
              Reaching definitions: r0=truncu(32,16,global57),   r7=r7{64},   r8=r8{64},   r9=r9{64},   r10=r10{64},
                r11=r11{377},   r24=global57,   r25=r25{72} + global57,   r26=r26{64},   r27=0x403038,
                r28=r28{64} - 16,   r29=r29{64},   r30=r30{73},   r31=r31{64},   m[r28{0} - 4]=m[r28{0} - 4]{366},
                m[r28{0} - 32]=m[r28{0} - 32]{367},   m[r28{0} - 48]=m[r28{0} - 48]{368},
                m[r28{0} - 224]=m[r28{0} - 224]{369},   m[r28{0} - 228]=m[r28{0} - 228]{370},
                m[r28{0} - 232]=m[r28{0} - 232]{371},   m[r28{0} - 236]=m[r28{0} - 236]{372},
                m[r28{0} - 240]=m[r28{0} - 240]{373},   m[r28{0} - 244]=m[r28{0} - 244]{374},
                m[r28{0} - 248]=m[r28{0} - 248]{375},   tmp1=r25{72},
                %flags=ADDFLAGS32( r25{72}, global57, r25{72} + global57 ),
                %ZF=ADDFLAGS32( r25{72}, global57, r25{72} + global57 ),
                %CF=ADDFLAGS32( r25{72}, global57, r25{72} + global57 )
              Live variables: eax_1,  ecx,  edx in proc proc1
result:    0 *u32* eax_1 := -
result:    0 *v** ecx := -
result:    0 *u32* edx := -
dest is not lib
call:  192 {*32* eax, *j32* r25, *j32* edx, *v* esp} := CALL CloseHandle(
                *union* m[esp] := m[esp]
              )
              Reaching definitions: r0=r0{348},   r7=r7{64},   r8=r8{64},   r9=r9{64},   r10=r10{349},   r11=r11{377},
                r24=r24{350},   r25=r25{351},   r26=r26{352},   r27=r27{353},   r28=r28{64} - 4,   r29=r29{64},
                r30=r24{90} - global57,   r31=r31{354},   m[r28{0} - 4]=m[r28{0} - 4]{366},
                m[r28{0} - 32]=m[r28{0} - 32]{367},   m[r28{0} - 48]=m[r28{0} - 48]{368},
                m[r28{0} - 224]=m[r28{0} - 224]{369},   m[r28{0} - 228]=m[r28{0} - 228]{370},
                m[r28{0} - 232]=m[r28{0} - 232]{371},   m[r28{0} - 236]=m[r28{0} - 236]{372},
                m[r28{0} - 240]=m[r28{0} - 240]{373},   m[r28{0} - 244]=m[r28{0} - 244]{374},
                m[r28{0} - 248]=m[r28{0} - 248]{375},   tmp1=tmp1{355},   %flags=%flags{356},   %ZF=%ZF{357},
                %CF=%CF{358}
              Live variables: edx in proc proc1
result:    0 *j32* edx := -
dest is not lib
call:  203 {*v* eax, *8* cl, *j8* dl, *32* ecx, *32* edx, *v* esp} := CALL proc4(
                *j32* cl := cl
                *u8* dl := dl
                *8* bl := param4
                *u8** eax := ebp - 12
                *u8** ecx := 0x42a8b8
                *j32* edx := edx
                *i32* ebx := 16
              )
              Reaching definitions: r0=truncu(32,16,r29{64} - 12),   r7=r7{64},   r8=r8{64},   r9=r9{64},
                r10=r10{349},   r11=r11{377},   r24=r29{64} - 12,   r25=0x42a8b8,   r26=r26{192},   r27=16,
                r28=r28{64},   r29=r29{64},   r30=r24{90} - global57,   r31=r31{354},
                m[r28{0} - 4]=m[r28{0} - 4]{366},   m[r28{0} - 32]=m[r28{0} - 32]{367},
                m[r28{0} - 48]=m[r28{0} - 48]{368},   m[r28{0} - 224]=m[r28{0} - 224]{369},
                m[r28{0} - 228]=m[r28{0} - 228]{370},   m[r28{0} - 232]=m[r28{0} - 232]{371},
                m[r28{0} - 236]=m[r28{0} - 236]{372},   m[r28{0} - 240]=m[r28{0} - 240]{373},
                m[r28{0} - 244]=m[r28{0} - 244]{374},   m[r28{0} - 248]=m[r28{0} - 248]{375},   tmp1=tmp1{355},
                %flags=LOGICALFLAGS32( r25{193} ),   %ZF=LOGICALFLAGS32( r25{193} ),   %CF=LOGICALFLAGS32( r25{193} )
              Live variables:  in proc proc1
dest is not lib
call:  211 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL LoadLibraryA(
                *union* m[esp] := m[esp]
              )
              Reaching definitions: r0=truncu(32,16,r29{64} - 12),   r7=r7{64},   r8=r8{203},   r9=r9{203},
                r10=r10{203},   r11=r11{377},   r24=r29{64} - 12,   r25=r25{203},   r26=r26{203},   r27=16,
                r28=r28{64} - 4,   r29=r29{64},   r30=r24{90} - global57,   r31=r31{354},
                m[r28{0} - 4]=m[r28{0} - 4]{366},   m[r28{0} - 32]=m[r28{0} - 32]{367},
                m[r28{0} - 48]=m[r28{0} - 48]{368},   m[r28{0} - 224]=m[r28{0} - 224]{369},
                m[r28{0} - 228]=m[r28{0} - 228]{370},   m[r28{0} - 232]=m[r28{0} - 232]{371},
                m[r28{0} - 236]=m[r28{0} - 236]{372},   m[r28{0} - 240]=m[r28{0} - 240]{373},
                m[r28{0} - 244]=m[r28{0} - 244]{374},   m[r28{0} - 248]=m[r28{0} - 248]{375},   tmp1=tmp1{355},
                %flags=LOGICALFLAGS32( r25{193} ),   %ZF=LOGICALFLAGS32( r25{193} ),   %CF=LOGICALFLAGS32( r25{193} )
              Live variables: eax in proc proc1
result:    0 *32* eax := -
dest is not lib
call:  219 {*32* eax, *32* esi, *32* ecx, *32* edx, *v* ebx, *32* esp, *32** ebp, *32* edi} := CALL proc5(
                *u32* local9 := m[esp - 4]
              )
              Reaching definitions: r0=truncu(32,16,r29{64} - 12),   r7=r7{64},   r8=r8{203},   r9=r9{203},
                r10=r10{203},   r11=r11{377},   r24=r24{211},   r25=r25{211},   r26=r26{211},   r27=16,
                r28=r28{64} - 8,   r29=r29{64},   r30=r24{90} - global57,   r31=r31{354},
                m[r28{0} - 4]=m[r28{0} - 4]{366},   m[r28{0} - 32]=m[r28{0} - 32]{367},
                m[r28{0} - 48]=m[r28{0} - 48]{368},   m[r28{0} - 224]=m[r28{0} - 224]{369},
                m[r28{0} - 228]=m[r28{0} - 228]{370},   m[r28{0} - 232]=m[r28{0} - 232]{371},
                m[r28{0} - 236]=m[r28{0} - 236]{372},   m[r28{0} - 240]=m[r28{0} - 240]{373},
                m[r28{0} - 244]=m[r28{0} - 244]{374},   m[r28{0} - 248]=m[r28{0} - 248]{375},   tmp1=tmp1{355},
                %flags=LOGICALFLAGS32( r25{193} ),   %ZF=LOGICALFLAGS32( r25{193} ),   %CF=LOGICALFLAGS32( r25{193} )
              Live variables: eax,  ebp,  esp in proc proc1
result:    0 *32* eax := -
result:    0 *32* esp := -
result:    0 *32** ebp := -
dest is not lib
call:   43 {*j32* eax, *j32* ecx, *v* edx, *v* esp} := CALL CloseHandle(
                *HANDLE* m[esp_2 - 20] := m[esp_2 - 20]
              )
              Reaching definitions: r8=truncu(32,8,r24{28}),   r11=0,   r24=r24{28},   r25=r25{478},   r26=r26{473} - 1
                r27=0,   r28=r28{7} - 24,   r29=r28{0} - 4,   r30=r30{0},   r31=global57,   m[r28{0} - 4]=r29{0},
                tmp1=r26{473},   %flags=LOGICALFLAGS32( 0 ),   %ZF=LOGICALFLAGS32( 0 ),   %CF=LOGICALFLAGS32( 0 )
              Live variables: eax in proc proc2
result:    0 *j32* eax := -
dest is not lib
call:   55 {*v* eax, *j32* esi, *16* di, *8* al, *j32* cl, *u8* dl, *v* ecx, *v* edx, *v* ebx, *v** esp, *32* ebp, *32* edi} := CALL proc3(
                *j32* m[esp_2 - 576] := m[esp_2 - 576]
                *j32* m[esp_2 - 567] := m[esp_2 - 567]
                *8* bl := 0
                *j32* ebx := 0
                *32* edi := global57
              )
              Reaching definitions: r8=truncu(32,8,r24{44}),   r11=0,   r24=r24{44},   r25=r25{43} ^ (r28{7} - 16),
                r26=r26{43},   r27=0,   r28=r28{7} - 20,   r29=r28{0} - 4,   r30=r30{0},   r31=global57,
                m[r28{0} - 4]=r29{0},   tmp1=tmp1{49},   %flags=ADDFLAGS32( tmp1{49}, r24{44}, m[r28{7} + 60] ),
                %ZF=ADDFLAGS32( tmp1{49}, r24{44}, m[r28{7} + 60] ),
                %CF=ADDFLAGS32( tmp1{49}, r24{44}, m[r28{7} + 60] )
              Live variables: cl,  di,  dl,  edi,  esp in proc proc2
result:    0 *16* di := -
result:    0 *j32* cl := -
result:    0 *u8* dl := -
result:    0 *v** esp := -
result:    0 *32* edi := -
dest is not lib
call:   62 {*32* eax, *v* ecx, *j32* edx, *v* esp} := CALL GetThreadLocale(
              )
              Reaching definitions: r6=truncu(32,16,r30{56}),   r7=r7{55},   r8=r8{55},   r9=r9{55},   r10=r10{55},
                r11=0,   r24=r24{55},   r25=r25{55},   r26=r26{55},   r27=r27{55},   r28=r28{55} - 4,   r29=r29{55},
                r30=r30{56},   r31=r31{55},   m[r28{0} - 4]=r29{0},   tmp1=tmp1{49},   %flags=LOGICALFLAGS32( r30{56} )
                %ZF=LOGICALFLAGS32( r30{56} ),   %CF=LOGICALFLAGS32( r30{56} )
              Live variables: edx in proc proc2
result:    0 *j32* edx := -
dest is not lib
call:  100 {*v* eax, *8* al, *8* cl_1, *8* dl, *32* ecx, *32* edx, *v* esp} := CALL proc4(
                *j32* cl := cl
                *u8* dl := dl
                *8* bl := 11
                *u8** eax := esp + 28
                *u8** ecx := esp + 52
                *j32* edx := edx
                *i32* ebx := 11
              )
              Reaching definitions: r6=truncu(32,16,r30{65}),   r7=r7{55},   r8=truncu(32,8,r28{55} + 28),   r9=r9{55},
                r10=r10{55},   r11=11,   r24=r28{55} + 28,   r25=r28{55} + 52,   r26=r26{62},   r27=11,
                r28=r28{55} - 4,   r29=r29{55},   r30=r30{65},   r31=r31{55},   m[r28{0} - 4]=r29{0},   tmp1=r24{63},
                %flags=ADDFLAGS32( r24{63}, r31{55}, r24{63} + r31{55} ),
                %ZF=ADDFLAGS32( r24{63}, r31{55}, r24{63} + r31{55} ),
                %CF=ADDFLAGS32( r24{63}, r31{55}, r24{63} + r31{55} )
              Live variables: cl_1,  dl in proc proc2
result:    0 *8* cl_1 := -
result:    0 *8* dl := -
dest is not lib
call:  107 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL LoadLibraryA(
                *LPCSTR* local0 := m[esp - 4]
              )
              Reaching definitions: r6=truncu(32,16,r30{65}),   r7=r7{55},   r8=r8{100},   r9=r9{100},   r10=r10{100},
                r11=11,   r24=r24{100},   r25=r28{55} + 28,   r26=r26{100},   r27=11,   r28=r28{55} - 8,   r29=r29{55},
                r30=r30{65},   r31=r31{55},   m[r28{0} - 4]=r29{0},   tmp1=r24{63},
                %flags=ADDFLAGS32( r24{63}, r31{55}, r24{63} + r31{55} ),
                %ZF=ADDFLAGS32( r24{63}, r31{55}, r24{63} + r31{55} ),
                %CF=ADDFLAGS32( r24{63}, r31{55}, r24{63} + r31{55} )
              Live variables: eax in proc proc2
result:    0 *32* eax := -
dest is not lib
call:  124 {*32* eax, *32* esi, *8* al, *32* ecx, *j32* edx, *j32* ebx, *32** esp, *32* ebp_1, *32* edi} := CALL proc5(
                *u32* m[esp - 8] := m[esp - 8]
              )
              Reaching definitions: r6=truncu(32,16,r30{65}),   r7=r7{55},   r8=truncu(32,8,r28{55}),   r9=r9{100},
                r10=r10{100},   r11=truncu(32,8,r27{114}),   r24=(r28{55} - 8) + 8,   r25=r24{107},   r26=r26{107},
                r27=r27{114},   r28=r28{55} - 12,   r29=r29{55},   r30=r30{65},   r31=r31{55},   m[r28{0} - 4]=r29{0},
                tmp1=11,   %flags=ADDFLAGS32( 11, m[r28{55} + 238], r27{114} ),
                %ZF=ADDFLAGS32( 11, m[r28{55} + 238], r27{114} ),   %CF=ADDFLAGS32( 11, m[r28{55} + 238], r27{114} )
              Live variables: al,  eax,  ebp_1,  ebx,  ecx,  edi,  edx,  esi,  esp in proc proc2
result:    0 *32* eax := -
result:    0 *32* esi := -
result:    0 *8* al := -
result:    0 *32* ecx := -
result:    0 *j32* edx := -
result:    0 *j32* ebx := -
result:    0 *32** esp := -
result:    0 *32* ebp_1 := -
result:    0 *32* edi := -
dest is not lib
call:  152 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetLastError(
              )
              Reaching definitions: r6=r6{143},   r7=r7{143},   r8=truncu(32,8,r24{143} | r31{143}),   r9=r9{143},
                r10=r10{143},   r11=truncu(32,8,r28{143}),   r24=r24{143} | r31{143},   r25=r25{143},   r26=r26{143},
                r27=r28{143},   r28=r28{143} - 4,   r29=r29{143},   r30=r30{143},   r31=r31{143},
                m[r28{0} - 4]=m[r28{0} - 4]{143},   m[r28{0} - 4]=m[r28{0} - 4]{143},   <all>=<all>{143},
                tmp1=tmp1{143},   %flags=LOGICALFLAGS32( r24{143} | r31{143} ),
                %ZF=LOGICALFLAGS32( r24{143} | r31{143} ),   %CF=LOGICALFLAGS32( r24{143} | r31{143} )
              Live variables: eax in proc proc2
result:    0 *32* eax := -
dest is not lib
call:  161 {*32* eax, *8* al, *8* dl, *j8* bl, *32* ecx, *v* edx, *v* esp} := CALL proc6(
                *u32* m[esp - 172] := m[esp - 172]
                *u32* m[esp - 140] := m[esp - 140]
                *union* m[esp - 124] := m[esp - 124]
                *u32* m[esp - 116] := m[esp - 116]
                *u8** local0 := m[esp - 4]
                *union* ebx := esp
              )
              Reaching definitions: r6=r6{143},   r7=r7{143},   r8=truncu(32,8,r24{143} | r31{143}),   r9=r9{143},
                r10=r10{143},   r11=truncu(32,8,r28{143}),   r24=r24{152},   r25=r25{152},   r26=r26{152},
                r27=r28{143},   r28=r28{143} - 8,   r29=r29{143},   r30=r30{143},   r31=r31{143},
                m[r28{0} - 4]=m[r28{0} - 4]{143},   m[r28{0} - 4]=m[r28{0} - 4]{143},   <all>=<all>{143},
                tmp1=tmp1{153},   %flags=ADDFLAGS32( tmp1{153}, r24{152}, m[r28{143} + 123] ),
                %ZF=ADDFLAGS32( tmp1{153}, r24{152}, m[r28{143} + 123] ),
                %CF=ADDFLAGS32( tmp1{153}, r24{152}, m[r28{143} + 123] )
              Live variables: bl in proc proc2
result:    0 *j8* bl := -
dest is not lib
call:  201 {*32* eax, *u16** ecx, *32* edx, *v* esp} := CALL GetModuleHandleA(
              )
              Reaching definitions: r6=r6{143},   r7=r7{143},   r8=truncu(32,8,r24{189}),   r9=r9{143},   r10=r10{161},
                r11=r11{161},   r24=r24{189},   r25=r25{494},   r26=r26{489} - 1,   r27=r28{143},   r28=r28{143} - 8,
                r29=r29{143},   r30=r30{143},   r31=r31{143},   m[r28{0} - 4]=m[r28{0} - 4]{143},
                m[r28{0} - 4]=m[r28{0} - 4]{143},   <all>=<all>{143},   tmp1=r26{489},
                %flags=SUBFLAGS32( r26{489}, 1, r26{489} - 1 ),   %ZF=(r26{489} - 1) = 0,   %CF=r26{489} <u 1
              Live variables:  in proc proc2
dest is not lib
call:  229 {*u32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetLastError(
              )
              Reaching definitions: r6=truncu(32,16,r30{209} + global57),   r7=r7{143},   r8=truncu(32,8,r24{203}),
                r9=r9{143},   r10=r10{161},   r11=truncu(32,8,r27{223}),   r24=r24{203},   r25=global57,   r26=r26{201}
                r27=r27{223},   r28=r28{143} - 8,   r29=r29{202} + r31{143},   r30=r30{209} + global57,   r31=r31{221},
                m[r28{0} - 4]=m[r28{0} - 4]{143},   m[r28{0} - 4]=m[r28{0} - 4]{143},   <all>=<all>{143},
                tmp1=r28{143},   %flags=ADDFLAGS32( r28{143}, m[r28{143} + 439], r27{223} ),
                %ZF=ADDFLAGS32( r28{143}, m[r28{143} + 439], r27{223} ),
                %CF=ADDFLAGS32( r28{143}, m[r28{143} + 439], r27{223} )
              Live variables: eax in proc proc2
result:    0 *u32* eax := -
dest is not lib
call:  304 {*u32* eax, *v* ecx, *32* edx, *v* esp} := CALL GetModuleHandleA(
              )
              Reaching definitions: r6=r6{535},   r7=r7{143},   r8=r8{536},   r9=r9{143},   r10=r10{161},
                r11=r11{537},   r24=r24{538},   r25=r25{539},   r26=r26{540},   r27=r27{541},   r28=(r28{143} - 4) - 8,
                r29=r29{202} + r31{143},   r30=r30{543},   r31=r31{544},   m[r28{0} - 4]=m[r28{0} - 4]{143},
                m[r28{0} - 4]=m[r28{0} - 4]{143},   <all>=<all>{143},   tmp1=tmp1{296},
                %flags=SUBFLAGS32( m[(r29{202} + r31{143}) + 128], 0, tmp1{296} ),   %ZF=tmp1{296} = 0,
                %CF=m[(r29{202} + r31{143}) + 128] <u 0
              Live variables: eax in proc proc2
result:    0 *u32* eax := -
dest is not lib
call:  329 {*u32* eax, *v* ecx, *32* edx, *v* esp} := CALL LoadLibraryA(
                *LPCSTR* m[esp - 12] := m[esp - 12]
              )
              Reaching definitions: r6=r6{549},   r7=r7{143},   r8=r8{550},   r9=r9{143},   r10=r10{161},
                r11=r11{551},   r24=r24{552},   r25=r25{553},   r26=r26{320} + global57,   r27=r27{555},
                r28=(r28{143} - 8) - 8,   r29=r29{557},   r30=r30{558},   r31=r31{559},
                m[r28{0} - 4]=m[r28{0} - 4]{143},   m[r28{0} - 4]=m[r28{0} - 4]{143},   <all>=<all>{143},
                tmp1=r26{320},   %flags=ADDFLAGS32( r26{320}, m[0x40537c], r26{320} + global57 ),
                %ZF=ADDFLAGS32( r26{320}, m[0x40537c], r26{320} + global57 ),
                %CF=ADDFLAGS32( r26{320}, m[0x40537c], r26{320} + global57 )
              Live variables: eax in proc proc2
result:    0 *u32* eax := -
dest is not lib
call:  383 {*32* eax, *u32* ecx, *32* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* m[esp - 16] := m[esp - 16]
                *c** m[esp - 12] := m[esp - 12]
              )
              Reaching definitions: r6=r6{565},   r7=r7{143},   r8=r8{579},   r9=r9{143},   r10=r10{161},
                r11=r11{580},   r24=r24{581},   r25=r25{569},   r26=r26{582},   r27=r27{583},   r28=(r28{143} - 8) - 12
                r29=r29{557},   r30=r30{573},   r31=r31{574},   m[r28{0} - 4]=m[r28{0} - 4]{143},
                m[r28{0} - 4]=m[r28{0} - 4]{143},   <all>=<all>{143},   tmp1=tmp1{584},   %flags=%flags{585},
                %ZF=%ZF{586},   %CF=%CF{587}
              Live variables: eax in proc proc2
result:    0 *32* eax := -
dest is not lib
call:  441 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetThreadLocale(
              )
              Reaching definitions: r6=truncu(32,16,r30{423}),   r7=r7{143},   r8=truncu(32,8,r24{425}),   r9=r9{143},
                r10=r10{161},   r11=truncu(32,8,r27{429}),   r24=r24{425},   r25=r25{434},   r26=r26{418},
                r27=r27{429},   r28=r28{624} - 4,   r29=r29{625},   r30=r30{423},   r31=r31{627},
                m[r28{0} - 4]=m[r28{0} - 4]{143},   m[r28{0} - 4]=m[r28{0} - 4]{143},   <all>=<all>{143},
                tmp1=r25{434} - global57,   %flags=SUBFLAGS32( r25{434}, m[0x40537c], r25{434} - global57 ),
                %ZF=(r25{434} - global57) = 0,   %CF=r25{434} <u m[0x40537c]
              Live variables: eax in proc proc2
result:    0 *32* eax := -
found seq with more than one outedge!
taken branch is first out edge
found seq with more than one outedge!
taken branch is first out edge
found seq with more than one outedge!
taken branch is first out edge
found seq with more than one outedge!
taken branch is first out edge
dest is not lib
call:   43 {*32* eax, *32* esi, *16* r0, *8* r10, *32* ecx, *32* edx, *32* ebx, *32* edi} := CALL proc1(
                *16* di := param1
                *8* al := param2
                *8* cl := param3
                *8* bl := param4
                *j32* ebx := param6
                *32* edi := param7
              )
              Reaching definitions: r6=r6{0},   r7=r7{0},   r8=r8{0},   r9=r9{0},   r11=r11{0},   r24=r24{80},
                r25=r25{34},   r26=r26{75} - 1,   r27=r27{0},   r28=r28{0} - 16,   r29=r28{0} - 4,   r31=r31{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{101},   m[r28{0} - 12]=r25{0},   m[r28{0} - 16]=%pc
                tmp1=r26{75},   %flags=SUBFLAGS32( r26{75}, 1, r26{75} - 1 ),   %ZF=(r26{75} - 1) = 0,
                %CF=r26{75} <u 1
              Live variables: eax,  ebp,  ebx,  edi,  esi,  esp in proc _start
result:    0 *32* eax := -
result:    0 *32* esi := -
result:    0 *32* ebx := -
result:    0 *32* edi := -
found seq with more than one outedge!
taken branch is first out edge
dest is not lib
call:   50 {*32* eax, *32* esi, *16* r6, *8* r10, *32* ecx, *32* edx, *32* ebx, *32* edi} := CALL proc2(
                *32* ebx := ebx
                *32* esi := esi
                *32* edi := edi
              )
              Reaching definitions: r0=r0{43},   r6=r6{0},   r7=r7{43},   r8=r8{43},   r9=r9{43},   r10=r10{43},
                r11=r11{0},   r24=r24{43},   r25=r25{43},   r26=r26{43},   r27=r27{43},   r28=r28{43} - 4,
                r29=r29{43},   r30=r30{43},   r31=r31{43},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{101},
                m[r28{0} - 12]=r25{0},   m[r28{0} - 16]=%pc,   tmp1=r24{43},   %flags=LOGICALFLAGS32( r24{43} ),
                %ZF=LOGICALFLAGS32( r24{43} ),   %CF=LOGICALFLAGS32( r24{43} )
              Live variables: ebp in proc _start
dest is not lib
call:   18 {*j32* eax_2, *v* ecx, *j32* edx_1, *v* esp} := CALL GetModuleHandleA(
              )
              Reaching definitions: r11=r11{0},   r27=r27{0},   r28=r28{0} - 744,   r29=r28{0} - 4,   r30=r30{0},
                r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{0},
                m[r28{0} - 465]=m[r28{0} - 465]{0},   m[r28{0} - 473]=m[r28{0} - 473]{0},
                m[r28{0} - 547]=m[r28{0} - 547]{0},   m[r28{0} - 556]=m[r28{0} - 556]{0},   m[r28{0} - 728]=r27{0},
                m[r28{0} - 732]=r30{0},   m[r28{0} - 736]=r31{0},   m[r28{0} - 740]=0,   m[r28{0} - 744]=%pc,
                tmp1=r28{0} - 4,   tmph=tmph{0},   %flags=SUBFLAGS32( r28{0} - 4, 720, r28{0} - 724 ),
                %ZF=(r28{0} - 724) = 0,   %CF=(r28{0} - 4) <u 720
              Live variables: eax_2,  edx_1 in proc proc3
result:    0 *j32* eax_2 := -
result:    0 *j32* edx_1 := -
dest is not lib
call:   37 {*32* eax, *32* ecx, *v* edx, *v* esp} := CALL GetThreadLocale(
              )
              Reaching definitions: r8=truncu(32,8,r24{18} & r26{18}),   r11=r11{0},   r24=r24{18} & r26{18},
                r25=r25{18},   r26=r26{18},   r27=r27{0} - (r24{18} & r26{18}),   r28=r28{0} - 744,   r29=r28{0} - 4,
                r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{18} & r26{18},
                m[r28{0} - 465]=m[r28{0} - 465]{0} & r24{18},   m[r28{0} - 473]=m[r28{0} - 473]{0} - r24{18},
                m[r28{0} - 547]=m[r28{0} - 547]{0},   m[r28{0} - 556]=m[r28{0} - 556]{0},   m[r28{0} - 728]=r27{0},
                m[r28{0} - 732]=r30{0},   m[r28{0} - 736]=r31{0},   m[r28{0} - 740]=0,   m[r28{0} - 744]=%pc,
                tmp1=m[r28{0} - 8]{0},   tmph=tmph{0},
                %flags=SUBFLAGS32( m[r28{0} - 8]{0}, r24{18} & r26{18}, m[r28{0} - 8] ),   %ZF=m[r28{0} - 8] = 0,
                %CF=m[r28{0} - 8]{0} <u (r24{18} & r26{18})
              Live variables: eax,  ecx,  edx in proc proc3
result:    0 *32* eax := -
result:    0 *32* ecx := -
result:    0 *v* edx := -
dest is not lib
call:   82 {*v* eax, *8* al, *8* cl_1, *8* dl, *32* ecx, *32* edx, *v* esp} := CALL proc4(
                *j32* cl := cl
                *u8* dl := dl
                *8* bl := param3
                *u8** eax := ebp - 20
                *u8** ecx := ebp - 84
                *j32* edx := edx
                *i32* ebx := 19
              )
              Reaching definitions: r7=truncu(32,16,r31{50} | r27{50}),   r8=truncu(32,8,r29{50} - 20),   r9=r9{50},
                r10=r10{50},   r11=r11{50},   r24=r29{50} - 20,   r25=r29{50} - 84,   r26=r26{50},   r27=19,
                r28=r28{50} - 4,   r29=r29{50},   r30=r30{50},   r31=r31{50} | r27{50},
                m[r28{0} - 4]=m[r28{0} - 4]{50},   m[r28{0} - 8]=m[r28{0} - 8]{50},
                m[r28{0} - 465]=m[r28{0} - 465]{50},   m[r28{0} - 473]=m[r28{0} - 473]{50},
                m[r28{0} - 728]=m[r28{0} - 728]{50},   m[r28{0} - 732]=m[r28{0} - 732]{50},
                m[r28{0} - 736]=m[r28{0} - 736]{50},   m[r28{0} - 740]=m[r28{0} - 740]{50},
                m[r28{0} - 744]=m[r28{0} - 744]{50},   m[r28{0} - 4]=m[r28{0} - 4]{50},
                m[r28{0} - 8]=m[r28{0} - 8]{50},   m[r28{0} - 465]=m[r28{0} - 465]{50},
                m[r28{0} - 473]=m[r28{0} - 473]{50},   m[r28{0} - 547]=m[r28{0} - 547]{50},
                m[r28{0} - 556]=m[r28{0} - 556]{50},   m[r28{0} - 728]=m[r28{0} - 728]{50},
                m[r28{0} - 732]=m[r28{0} - 732]{50},   m[r28{0} - 736]=m[r28{0} - 736]{50},
                m[r28{0} - 740]=m[r28{0} - 740]{50},   m[r28{0} - 744]=m[r28{0} - 744]{50},   <all>=<all>{50},
                tmp1=tmp1{50},   tmph=tmph{50},   %flags=LOGICALFLAGS8( 0*8* ),   %ZF=LOGICALFLAGS8( 0*8* ),
                %CF=LOGICALFLAGS8( 0*8* )
              Live variables: cl_1,  dl in proc proc3
result:    0 *8* cl_1 := -
result:    0 *8* dl := -
dest is not lib
call:   90 {*32* eax, *j32* ecx, *v* edx, *v* esp} := CALL LoadLibraryA(
                *LPCSTR* m[esp_1 - 4] := m[esp_1 - 4]
              )
              Reaching definitions: r7=truncu(32,16,r31{50} | r27{50}),   r8=truncu(32,8,r29{50} - 20),   r9=r9{82},
                r10=r10{82},   r11=r11{50},   r24=r29{50} - 20,   r25=r25{82},   r26=r26{82},   r27=19,
                r28=r28{50} - 8,   r29=r29{50},   r30=r30{50},   r31=r31{50} | r27{50},
                m[r28{0} - 4]=m[r28{0} - 4]{50},   m[r28{0} - 8]=m[r28{0} - 8]{50},
                m[r28{0} - 465]=m[r28{0} - 465]{50},   m[r28{0} - 473]=m[r28{0} - 473]{50},
                m[r28{0} - 728]=m[r28{0} - 728]{50},   m[r28{0} - 732]=m[r28{0} - 732]{50},
                m[r28{0} - 736]=m[r28{0} - 736]{50},   m[r28{0} - 740]=m[r28{0} - 740]{50},
                m[r28{0} - 744]=m[r28{0} - 744]{50},   m[r28{0} - 4]=m[r28{0} - 4]{50},
                m[r28{0} - 8]=m[r28{0} - 8]{50},   m[r28{0} - 465]=m[r28{0} - 465]{50},
                m[r28{0} - 473]=m[r28{0} - 473]{50},   m[r28{0} - 547]=m[r28{0} - 547]{50},
                m[r28{0} - 556]=m[r28{0} - 556]{50},   m[r28{0} - 728]=m[r28{0} - 728]{50},
                m[r28{0} - 732]=m[r28{0} - 732]{50},   m[r28{0} - 736]=m[r28{0} - 736]{50},
                m[r28{0} - 740]=m[r28{0} - 740]{50},   m[r28{0} - 744]=m[r28{0} - 744]{50},   <all>=<all>{50},
                tmp1=tmp1{50},   tmph=tmph{50},   %flags=LOGICALFLAGS8( 0*8* ),   %ZF=LOGICALFLAGS8( 0*8* ),
                %CF=LOGICALFLAGS8( 0*8* )
              Live variables: eax,  ecx,  edx in proc proc3
result:    0 *32* eax := -
result:    0 *j32* ecx := -
result:    0 *v* edx := -
dest is not lib
call:  118 {*32* eax_3, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* m[esp_2 - 8] := m[esp_2 - 8]
                *c** m[esp_2 - 4] := m[esp_2 - 4]
              )
              Reaching definitions: r7=truncu(32,16,r31{105}),   r8=truncu(32,8,r24{101}),   r9=r9{99},   r10=r10{99},
                r11=r11{99},   r24=r24{101},   r25=r25{99},   r26=r26{99},   r27=r27{99},   r28=r28{99} - 12,
                r29=r29{99},   r30=r30{99},   r31=r31{105},   m[r28{0} - 4]=m[r28{0} - 4]{99},
                m[r28{0} - 8]=m[r28{0} - 8]{99},   m[r28{0} - 465]=m[r28{0} - 465]{99},
                m[r28{0} - 473]=m[r28{0} - 473]{99},   m[r28{0} - 728]=m[r28{0} - 728]{99},
                m[r28{0} - 732]=m[r28{0} - 732]{99},   m[r28{0} - 736]=m[r28{0} - 736]{99},
                m[r28{0} - 740]=m[r28{0} - 740]{99},   m[r28{0} - 744]=m[r28{0} - 744]{99},
                m[r28{0} - 4]=m[r28{0} - 4]{99},   m[r28{0} - 8]=m[r28{0} - 8]{99},
                m[r28{0} - 465]=m[r28{0} - 465]{99},   m[r28{0} - 473]=m[r28{0} - 473]{99},
                m[r28{0} - 547]=m[r28{0} - 547]{99},   m[r28{0} - 556]=m[r28{0} - 556]{99},
                m[r28{0} - 728]=m[r28{0} - 728]{99},   m[r28{0} - 732]=m[r28{0} - 732]{99},
                m[r28{0} - 736]=m[r28{0} - 736]{99},   m[r28{0} - 740]=m[r28{0} - 740]{99},
                m[r28{0} - 744]=m[r28{0} - 744]{99},   <all>=<all>{99},   tmp1=tmp1{108},   tmph=tmph{99},
                %flags=ADDFLAGS32( tmp1{108}, r24{101}, m[r29{99} - 235] ),
                %ZF=ADDFLAGS32( tmp1{108}, r24{101}, m[r29{99} - 235] ),
                %CF=ADDFLAGS32( tmp1{108}, r24{101}, m[r29{99} - 235] )
              Live variables: eax_3 in proc proc3
result:    0 *32* eax_3 := -
dest is not lib
call:  126 {*v** eax, *v* ecx, *v* edx, *v* esp} := CALL CloseHandle(
                *HANDLE* m[esp_2 - 4] := m[esp_2 - 4]
              )
              Reaching definitions: r7=truncu(32,16,r24{118}),   r8=truncu(32,8,r24{101}),   r9=r9{99},   r10=r10{99},
                r11=r11{99},   r24=r24{118},   r25=r25{118},   r26=r26{118},   r27=r27{99},   r28=r28{99} - 8,
                r29=r29{99},   r30=r30{99},   r31=r24{118},   m[r28{0} - 4]=m[r28{0} - 4]{99},
                m[r28{0} - 8]=m[r28{0} - 8]{99},   m[r28{0} - 465]=m[r28{0} - 465]{99},
                m[r28{0} - 473]=m[r28{0} - 473]{99},   m[r28{0} - 728]=m[r28{0} - 728]{99},
                m[r28{0} - 732]=m[r28{0} - 732]{99},   m[r28{0} - 736]=m[r28{0} - 736]{99},
                m[r28{0} - 740]=m[r28{0} - 740]{99},   m[r28{0} - 744]=m[r28{0} - 744]{99},
                m[r28{0} - 4]=m[r28{0} - 4]{99},   m[r28{0} - 8]=m[r28{0} - 8]{99},
                m[r28{0} - 465]=m[r28{0} - 465]{99},   m[r28{0} - 473]=m[r28{0} - 473]{99},
                m[r28{0} - 547]=m[r28{0} - 547]{99},   m[r28{0} - 556]=m[r28{0} - 556]{99},
                m[r28{0} - 728]=m[r28{0} - 728]{99},   m[r28{0} - 732]=m[r28{0} - 732]{99},
                m[r28{0} - 736]=m[r28{0} - 736]{99},   m[r28{0} - 740]=m[r28{0} - 740]{99},
                m[r28{0} - 744]=m[r28{0} - 744]{99},   <all>=<all>{99},   tmp1=tmp1{108},   tmph=tmph{99},
                %flags=ADDFLAGS32( tmp1{108}, r24{101}, m[r29{99} - 235] ),
                %ZF=ADDFLAGS32( tmp1{108}, r24{101}, m[r29{99} - 235] ),
                %CF=ADDFLAGS32( tmp1{108}, r24{101}, m[r29{99} - 235] )
              Live variables: eax in proc proc3
result:    0 *v** eax := -
dest is not lib
call:  139 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL CloseHandle(
                *HANDLE* m[esp_2 - 4] := m[esp_2 - 4]
              )
              Reaching definitions: r7=truncu(32,16,r24{118}),   r8=truncu(32,8,r24{126} - r28{99}),   r9=r9{99},
                r10=r10{99},   r11=r11{99},   r24=r24{126} - r28{99},   r25=r25{126},   r26=r26{126},   r27=r27{99},
                r28=r28{99} - 8,   r29=r29{99},   r30=r30{99} | r27{99},   r31=r24{118},
                m[r28{0} - 4]=m[r28{0} - 4]{99},   m[r28{0} - 8]=m[r28{0} - 8]{99},
                m[r28{0} - 465]=m[r28{0} - 465]{99},   m[r28{0} - 473]=m[r28{0} - 473]{99},
                m[r28{0} - 728]=m[r28{0} - 728]{99},   m[r28{0} - 732]=m[r28{0} - 732]{99},
                m[r28{0} - 736]=m[r28{0} - 736]{99},   m[r28{0} - 740]=m[r28{0} - 740]{99},
                m[r28{0} - 744]=m[r28{0} - 744]{99},   m[r28{0} - 4]=m[r28{0} - 4]{99},
                m[r28{0} - 8]=m[r28{0} - 8]{99},   m[r28{0} - 465]=m[r28{0} - 465]{99},
                m[r28{0} - 473]=m[r28{0} - 473]{99},   m[r28{0} - 547]=m[r28{0} - 547]{99},
                m[r28{0} - 556]=m[r28{0} - 556]{99},   m[r28{0} - 728]=m[r28{0} - 728]{99},
                m[r28{0} - 732]=m[r28{0} - 732]{99},   m[r28{0} - 736]=m[r28{0} - 736]{99},
                m[r28{0} - 740]=m[r28{0} - 740]{99},   m[r28{0} - 744]=m[r28{0} - 744]{99},   <all>=<all>{99},
                tmp1=r24{126},   tmph=tmph{99},   %flags=LOGICALFLAGS32( r30{99} | r27{99} ),
                %ZF=LOGICALFLAGS32( r30{99} | r27{99} ),   %CF=LOGICALFLAGS32( r30{99} | r27{99} )
              Live variables: eax,  ecx,  edx in proc proc3
result:    0 *32* eax := -
result:    0 *v* ecx := -
result:    0 *v* edx := -
dest is not lib
call:  158 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetModuleHandleA(
              )
              Reaching definitions: r7=r7{252},   r8=r8{253},   r9=r9{254},   r10=r10{255},   r11=r11{356},
                r24=r24{256},   r25=r25{257},   r26=r26{258},   r27=r27{259},   r28=r28{260} - 8,   r29=r29{261},
                r30=r30{262},   r31=r31{263},   m[r28{0} - 4]=m[r28{0} - 4]{145},   m[r28{0} - 8]=m[r28{0} - 8]{145},
                m[r28{0} - 465]=m[r28{0} - 465]{145},   m[r28{0} - 473]=m[r28{0} - 473]{145},
                m[r28{0} - 728]=m[r28{0} - 728]{145},   m[r28{0} - 732]=m[r28{0} - 732]{145},
                m[r28{0} - 736]=m[r28{0} - 736]{145},   m[r28{0} - 740]=m[r28{0} - 740]{145},
                m[r28{0} - 744]=m[r28{0} - 744]{145},   m[r28{0} - 4]=m[r28{0} - 4]{320},
                m[r28{0} - 8]=m[r28{0} - 8]{321},   m[r28{0} - 465]=m[r28{0} - 465]{322},
                m[r28{0} - 473]=m[r28{0} - 473]{323},   m[r28{0} - 547]=m[r28{0} - 547]{357},
                m[r28{0} - 556]=m[r28{0} - 556]{358},   m[r28{0} - 728]=m[r28{0} - 728]{324},
                m[r28{0} - 732]=m[r28{0} - 732]{325},   m[r28{0} - 736]=m[r28{0} - 736]{326},
                m[r28{0} - 740]=m[r28{0} - 740]{327},   m[r28{0} - 744]=m[r28{0} - 744]{328},   <all>=<all>{145},
                tmp1=tmp1{264},   tmph=tmph{0},   %flags=%flags{266},   %ZF=%ZF{267},   %CF=%CF{268}
              Live variables:  in proc proc3
dest is not lib
call:  170 {*32* eax_4, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* m[esp_5 - 12] := m[esp_5 - 12]
                *c** m[esp_5 - 8] := m[esp_5 - 8]
              )
              Reaching definitions: r7=truncu(32,16,r31{160}),   r8=r8{253},   r9=r9{254},   r10=r10{255},
                r11=r11{356},   r24=r24{158},   r25=r25{158},   r26=r26{158},   r27=r27{259},   r28=r28{260} - 16,
                r29=r29{261},   r30=r30{262},   r31=r31{160},   m[r28{0} - 4]=m[r28{0} - 4]{145},
                m[r28{0} - 8]=m[r28{0} - 8]{145},   m[r28{0} - 465]=m[r28{0} - 465]{145},
                m[r28{0} - 473]=m[r28{0} - 473]{145},   m[r28{0} - 728]=m[r28{0} - 728]{145},
                m[r28{0} - 732]=m[r28{0} - 732]{145},   m[r28{0} - 736]=m[r28{0} - 736]{145},
                m[r28{0} - 740]=m[r28{0} - 740]{145},   m[r28{0} - 744]=m[r28{0} - 744]{145},
                m[r28{0} - 4]=m[r28{0} - 4]{320},   m[r28{0} - 8]=m[r28{0} - 8]{321},
                m[r28{0} - 465]=m[r28{0} - 465]{322},   m[r28{0} - 473]=m[r28{0} - 473]{323},
                m[r28{0} - 547]=m[r28{0} - 547]{357},   m[r28{0} - 556]=m[r28{0} - 556]{358},
                m[r28{0} - 728]=m[r28{0} - 728]{324},   m[r28{0} - 732]=m[r28{0} - 732]{325},
                m[r28{0} - 736]=m[r28{0} - 736]{326},   m[r28{0} - 740]=m[r28{0} - 740]{327},
                m[r28{0} - 744]=m[r28{0} - 744]{328},   <all>=<all>{145},   tmp1=r31{263},   tmph=tmph{0},
                %flags=SUBFLAGS32( r31{263}, m[r29{261} - 702], r31{160} ),   %ZF=r31{160} = 0,
                %CF=r31{263} <u m[r29{261} - 702]
              Live variables: eax_4 in proc proc3
result:    0 *32* eax_4 := -
dest is not lib
call:  175 {*j32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetLastError(
              )
              Reaching definitions: r7=truncu(32,16,r31{160}),   r8=r8{253},   r9=r9{254},   r10=r10{255},
                r11=r11{356},   r24=r24{170},   r25=r25{170},   r26=r26{170},   r27=r27{259},   r28=r28{260} - 8,
                r29=r29{261},   r30=r24{170},   r31=r31{160},   m[r28{0} - 4]=m[r28{0} - 4]{145},
                m[r28{0} - 8]=m[r28{0} - 8]{145},   m[r28{0} - 465]=m[r28{0} - 465]{145},
                m[r28{0} - 473]=m[r28{0} - 473]{145},   m[r28{0} - 728]=m[r28{0} - 728]{145},
                m[r28{0} - 732]=m[r28{0} - 732]{145},   m[r28{0} - 736]=m[r28{0} - 736]{145},
                m[r28{0} - 740]=m[r28{0} - 740]{145},   m[r28{0} - 744]=m[r28{0} - 744]{145},
                m[r28{0} - 4]=m[r28{0} - 4]{320},   m[r28{0} - 8]=m[r28{0} - 8]{321},
                m[r28{0} - 465]=m[r28{0} - 465]{322},   m[r28{0} - 473]=m[r28{0} - 473]{323},
                m[r28{0} - 547]=m[r28{0} - 547]{357},   m[r28{0} - 556]=m[r28{0} - 556]{358},
                m[r28{0} - 728]=m[r28{0} - 728]{324},   m[r28{0} - 732]=m[r28{0} - 732]{325},
                m[r28{0} - 736]=m[r28{0} - 736]{326},   m[r28{0} - 740]=m[r28{0} - 740]{327},
                m[r28{0} - 744]=m[r28{0} - 744]{328},   <all>=<all>{145},   tmp1=r31{263},   tmph=tmph{0},
                %flags=SUBFLAGS32( r31{263}, m[r29{261} - 702], r31{160} ),   %ZF=r31{160} = 0,
                %CF=r31{263} <u m[r29{261} - 702]
              Live variables: eax in proc proc3
result:    0 *j32* eax := -
dest is not lib
call:  185 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetThreadLocale(
              )
              Reaching definitions: r7=truncu(32,16,r31{160}),   r8=r8{253},   r9=r9{254},   r10=r10{255},
                r11=r11{356},   r24=r24{175},   r25=r25{175},   r26=r26{175},   r27=r27{178},   r28=r28{260} - 8,
                r29=r29{261},   r30=r24{170},   r31=r31{160},   m[r28{0} - 4]=m[r28{0} - 4]{145},
                m[r28{0} - 8]=m[r28{0} - 8]{145},   m[r28{0} - 465]=m[r28{0} - 465]{145},
                m[r28{0} - 473]=m[r28{0} - 473]{145},   m[r28{0} - 728]=m[r28{0} - 728]{145},
                m[r28{0} - 732]=m[r28{0} - 732]{145},   m[r28{0} - 736]=m[r28{0} - 736]{145},
                m[r28{0} - 740]=m[r28{0} - 740]{145},   m[r28{0} - 744]=m[r28{0} - 744]{145},
                m[r28{0} - 4]=m[r28{0} - 4]{320},   m[r28{0} - 8]=m[r28{0} - 8]{321},
                m[r28{0} - 465]=m[r28{0} - 465]{322},   m[r28{0} - 473]=m[r28{0} - 473]{323},
                m[r28{0} - 547]=m[r28{0} - 547]{357},   m[r28{0} - 556]=m[r28{0} - 556]{358},
                m[r28{0} - 728]=m[r28{0} - 728]{324},   m[r28{0} - 732]=m[r28{0} - 732]{325},
                m[r28{0} - 736]=m[r28{0} - 736]{326},   m[r28{0} - 740]=m[r28{0} - 740]{327},
                m[r28{0} - 744]=m[r28{0} - 744]{328},   <all>=<all>{145},   tmp1=r31{263},   tmph=tmph{0},
                %flags=LOGICALFLAGS32( r31{160} ),   %ZF=LOGICALFLAGS32( r31{160} ),   %CF=LOGICALFLAGS32( r31{160} )
              Live variables:  in proc proc3
dest is not lib
call:  203 {*32* eax, *32* ecx, *32* edx, *v** esp_9} := CALL OLEAUT32_dll_318(
              )
              Reaching definitions: r7=11,   r8=truncu(32,8,r29{261} - 68),   r9=r9{254},   r10=r10{255},
                r11=r11{356},   r24=r29{261} - 68,   r25=r29{261} - 36,   r26=r29{261} - 52,   r27=r27{178},
                r28=r28{260} - 20,   r29=r29{261},   r30=r24{170},   r31=11,   m[r28{0} - 4]=m[r28{0} - 4]{145},
                m[r28{0} - 8]=m[r28{0} - 8]{145},   m[r28{0} - 465]=m[r28{0} - 465]{145},
                m[r28{0} - 473]=m[r28{0} - 473]{145},   m[r28{0} - 728]=m[r28{0} - 728]{145},
                m[r28{0} - 732]=m[r28{0} - 732]{145},   m[r28{0} - 736]=m[r28{0} - 736]{145},
                m[r28{0} - 740]=m[r28{0} - 740]{145},   m[r28{0} - 744]=m[r28{0} - 744]{145},
                m[r28{0} - 4]=m[r28{0} - 4]{320},   m[r28{0} - 8]=m[r28{0} - 8]{321},
                m[r28{0} - 465]=m[r28{0} - 465]{322},   m[r28{0} - 473]=m[r28{0} - 473]{323},
                m[r28{0} - 547]=m[r28{0} - 547]{357},   m[r28{0} - 556]=m[r28{0} - 556]{358},
                m[r28{0} - 728]=m[r28{0} - 728]{324},   m[r28{0} - 732]=m[r28{0} - 732]{325},
                m[r28{0} - 736]=m[r28{0} - 736]{326},   m[r28{0} - 740]=m[r28{0} - 740]{327},
                m[r28{0} - 744]=m[r28{0} - 744]{328},   <all>=<all>{145},   tmp1=r31{263},   tmph=tmph{0},
                %flags=LOGICALFLAGS32( r31{160} ),   %ZF=LOGICALFLAGS32( r31{160} ),   %CF=LOGICALFLAGS32( r31{160} )
              Live variables: eax,  ecx,  edx,  esp_9 in proc proc3
result:    0 *32* eax := -
result:    0 *32* ecx := -
result:    0 *32* edx := -
result:    0 *v** esp_9 := -
dest is not lib
call:   46 {*32* eax, *v** ecx, *j32* edx, *v* esp} := CALL GetModuleHandleA(
              )
              Reaching definitions: r8=truncu(32,8,r24{19} + m[r28{0} + 4]{0}),   r24=r24{19} + m[r28{0} + 4]{0},
                r25=r26{0},   r26=r26{0},   r27=r27{33} + m[r28{0} + 4]{0},   r28=r28{0} - 340,   r29=m[r28{0} + 4]{0},
                r30=r30{0} - r27{17},   r31=r31{32} + m[r28{0} + 4]{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} - 96]=m[r28{0} - 96]{0},   m[r28{0} - 115]=m[r28{0} - 115]{0},
                m[r28{0} - 116]=m[r28{0} - 116]{0},   m[r28{0} - 124]=m[r28{0} - 124]{0},
                m[r28{0} - 294]=m[r28{0} - 294]{0},   m[r28{0} - 295]=m[r28{0} - 295]{0} + r24{0},
                m[r28{0} - 308]=m[r28{0} - 308]{42},   m[r28{0} - 312]=0,   m[r28{0} - 316]=m[r28{0} - 316]{0},
                m[r28{0} - 320]=r27{0},   m[r28{0} - 324]=r29{0},   m[r28{0} - 328]=r30{0},   m[r28{0} - 332]=r31{0},
                m[r28{0} - 336]=0,   m[r28{0} - 340]=%pc,   tmp1=r27{33},   tmp2=tmp2{0},   tmpb=tmpb{0},
                %flags=ADDFLAGS32( r27{33}, m[r28{0} + 4]{0}, r27{33} + m[r28{0} + 4]{0} ),
                %ZF=ADDFLAGS32( r27{33}, m[r28{0} + 4]{0}, r27{33} + m[r28{0} + 4]{0} ),
                %CF=ADDFLAGS32( r27{33}, m[r28{0} + 4]{0}, r27{33} + m[r28{0} + 4]{0} )
              Live variables:  in proc proc5
dest is not lib
call:  139 {*j32* eax, *32* esi, *u32* ecx_1, *u32* edx, *v** ebx, *32** esp, *32* ebp, *32* edi} := CALL proc9(
              )
              Reaching definitions: r8=r8{240},   r24=r24{241},   r25=r25{242},   r26=r26{243},   r27=r27{244},
                r28=r28{0} - 340,   r29=m[r28{0} + 4]{0},   r30=r30{47} + m[r28{0} + 4]{0},   r31=r31{245},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 96]=m[r28{0} - 96]{0},
                m[r28{0} - 115]=m[r28{0} - 115]{0},   m[r28{0} - 116]=m[r28{0} - 116]{0},
                m[r28{0} - 124]=m[r28{0} - 124]{0},   m[r28{0} - 294]=m[r28{0} - 294]{0},
                m[r28{0} - 295]=m[r28{0} - 295]{0} + r24{0},   m[r28{0} - 304]=r24{48} + m[r28{0} + 4]{0},
                m[r28{0} - 308]=m[r28{0} - 308]{271},   m[r28{0} - 312]=0,   m[r28{0} - 316]=m[r28{0} - 316]{272},
                m[r28{0} - 320]=m[r28{0} - 320]{273},   m[r28{0} - 324]=r29{0},   m[r28{0} - 328]=r30{0},
                m[r28{0} - 332]=r31{0},   m[r28{0} - 336]=0,   m[r28{0} - 340]=%pc,   tmp1=tmp1{246},   tmp2=tmp2{247},
                tmpb=tmpb{248},   %flags=%flags{249},   %ZF=%ZF{250},   %CF=%CF{251}
              Live variables: eax,  ebp,  ebx,  ecx_1,  edx,  esp in proc proc5
result:    0 *j32* eax := -
result:    0 *u32* ecx_1 := -
result:    0 *u32* edx := -
result:    0 *v** ebx := -
result:    0 *32** esp := -
result:    0 *32* ebp := -
dest is not lib
call:  168 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetLastError(
              )
              Reaching definitions: r8=r8{240},   r24=r24{139},   r25=r25{162},   r26=r26{139},   r27=r27{139},
                r28=r28{139} - 4,   r29=r29{139},   r30=r30{139},   r31=r31{139},   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} - 96]=m[r28{0} - 96]{0},   m[r28{0} - 115]=m[r28{0} - 115]{0},
                m[r28{0} - 116]=m[r28{0} - 116]{0},   m[r28{0} - 124]=m[r28{0} - 124]{0},
                m[r28{0} - 294]=m[r28{0} - 294]{0},   m[r28{0} - 295]=m[r28{0} - 295]{0} + r24{0},
                m[r28{0} - 304]=r24{48} + m[r28{0} + 4]{0},   m[r28{0} - 308]=m[r28{0} - 308]{271},   m[r28{0} - 312]=0
                m[r28{0} - 316]=m[r28{0} - 316]{272},   m[r28{0} - 320]=m[r28{0} - 320]{273},   m[r28{0} - 324]=r29{0},
                m[r28{0} - 328]=r30{0},   m[r28{0} - 332]=r31{0},   m[r28{0} - 336]=0,   m[r28{0} - 340]=%pc,
                tmp1=tmp1{140},   tmp2=tmp2{247},   tmpb=tmpb{248},   %flags=LOGICALFLAGS32( m[r28{139} + 99] ),
                %ZF=LOGICALFLAGS32( m[r28{139} + 99] ),   %CF=LOGICALFLAGS32( m[r28{139} + 99] )
              Live variables:  in proc proc5
dest is not lib
call:  279 {*u32* eax_1, *32* ecx, *32* edx, *v* esp} := CALL proc8(
                *u32* ebx := ebx
                *union* esi := esi
                *u8*** edi_1 := a[local3]
              )
              Reaching definitions: r8=r8{114},   r10=truncu(32,8,r26{464} + r26{464}),   r11=r11{463},
                r24=(r26{464} / 128) & 1,   r25=r25{441},   r26=r26{464} + r26{464},   r27=r27{465},
                r28=(r28{0} - 160) - 4,   r29=r29{466},   r30=r30{467},   r31=(r28{0} - 160) + 20,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 77]=m[r28{0} - 77]{0},   m[r28{0} - 87]=m[r28{0} - 87]{0},
                m[r28{0} - 108]=m[r28{0} - 108]{0},   m[r28{0} - 116]=m[r28{0} - 116]{609},
                m[r28{0} - 120]=m[r28{0} - 120]{610},   m[r28{0} - 124]=m[r28{0} - 124]{611},
                m[r28{0} - 128]=m[r28{0} - 128]{619},   m[r28{0} - 132]=r26{464} + r26{464},
                m[r28{0} - 136]=m[r28{0} - 136]{614},   m[r28{0} - 140]=m[r28{0} - 140]{620},   m[r28{0} - 148]=r27{0},
                m[r28{0} - 152]=r29{0},   m[r28{0} - 156]=r30{0},   m[r28{0} - 160]=r31{0},   m[r28{0} - 164]=%pc,
                tmp1=(r26{464} / 128) & 1,   %flags=LOGICALFLAGS32( (r26{464} / 128) & 1 ),
                %ZF=LOGICALFLAGS32( (r26{464} / 128) & 1 ),   %CF=LOGICALFLAGS32( (r26{464} / 128) & 1 )
              Live variables: eax_1 in proc proc6
result:    0 *u32* eax_1 := -
dest is not lib
call:  348 {*j32* eax_1, *32* ecx, *j32* edx, *v* esp} := CALL proc8(
                *u32* ebx := ebx
                *u32* esi := (eax_2 * 256) + edx
                *u8*** edi_1 := a[local3]
              )
              Reaching definitions: r8=truncu(32,8,(r24{527} * 256) + r26{329}),   r10=truncu(32,8,r26{329}),
                r11=r11{463},   r24=(r24{527} * 256) + r26{329},   r25=m[r28{0} - 140]{620} + 1,   r26=r26{329},
                r27=r27{465},   r28=(r28{0} - 160) - 4,   r29=r29{466},   r30=(r24{527} * 256) + r26{329},
                r31=(r28{0} - 160) + 20,   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 77]=m[r28{0} - 77]{0},
                m[r28{0} - 87]=m[r28{0} - 87]{0},   m[r28{0} - 108]=m[r28{0} - 108]{0},
                m[r28{0} - 116]=m[r28{0} - 116]{609},   m[r28{0} - 120]=m[r28{0} - 120]{610},
                m[r28{0} - 124]=m[r28{0} - 124]{611},   m[r28{0} - 128]=m[r28{0} - 128]{619},
                m[r28{0} - 132]=r26{464} + r26{464},   m[r28{0} - 136]=m[r28{0} - 136]{614},
                m[r28{0} - 140]=m[r28{0} - 140]{620} + 1,   m[r28{0} - 148]=r27{0},   m[r28{0} - 152]=r29{0},
                m[r28{0} - 156]=r30{0},   m[r28{0} - 160]=r31{0},   m[r28{0} - 164]=%pc,   tmp1=m[r28{0} - 140]{620},
                %flags=ADDFLAGS32( m[r28{0} - 140]{620}, 1, m[r28{0} - 140]{620} + 1 ),
                %ZF=ADDFLAGS32( m[r28{0} - 140]{620}, 1, m[r28{0} - 140]{620} + 1 ),
                %CF=ADDFLAGS32( m[r28{0} - 140]{620}, 1, m[r28{0} - 140]{620} + 1 )
              Live variables: eax_1 in proc proc6
result:    0 *j32* eax_1 := -
dest is not lib
call:  290 {*j32* eax_1, *32* ecx, *j32* edx, *v* esp} := CALL proc8(
                *u32* ebx := ebx
                *union* esi := a[m[esp - 160]]
                *u8*** edi_1 := a[local3]
              )
              Reaching definitions: r8=r8{114},   r10=truncu(32,8,r26{464} + r26{464}),   r11=r11{463},   r24=r24{279},
                r25=r25{279},   r26=r26{279},   r27=r27{465},   r28=(r28{0} - 160) - 4,   r29=r29{466},
                r30=((r28{0} - 160) - 4) + 4,   r31=(r28{0} - 160) + 20,   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} - 77]=m[r28{0} - 77]{0},   m[r28{0} - 87]=m[r28{0} - 87]{0},
                m[r28{0} - 108]=m[r28{0} - 108]{0},   m[r28{0} - 116]=m[r28{0} - 116]{609},
                m[r28{0} - 120]=m[r28{0} - 120]{610},   m[r28{0} - 124]=m[r28{0} - 124]{611},
                m[r28{0} - 128]=m[r28{0} - 128]{619},   m[r28{0} - 132]=r26{464} + r26{464},
                m[r28{0} - 136]=m[r28{0} - 136]{614},   m[r28{0} - 140]=m[r28{0} - 140]{620},   m[r28{0} - 148]=r27{0},
                m[r28{0} - 152]=r29{0},   m[r28{0} - 156]=r30{0},   m[r28{0} - 160]=r31{0},   m[r28{0} - 164]=%pc,
                tmp1=r24{279} - 2,   %flags=SUBFLAGS32( r24{279}, 2, r24{279} - 2 ),   %ZF=(r24{279} - 2) = 0,
                %CF=r24{279} <u 2
              Live variables: eax_1 in proc proc6
result:    0 *j32* eax_1 := -
dest is not lib
call:  193 {*32* eax, *v* ecx, *32* edx, *v* esp} := CALL GetLastError(
              )
              Reaching definitions: r24=r24{181},   r25=r25{181},   r26=r26{181},   r27=r27{181},   r28=r28{181} - 4,
                r29=r29{181},   r30=0,   r31=r31{182},   m[r28{0} - 4]=m[r28{0} - 4]{181},
                m[r28{0} - 0x76c]=m[r28{0} - 0x76c]{181},   m[r28{0} - 0x770]=m[r28{0} - 0x770]{181},
                m[r28{0} - 0x774]=m[r28{0} - 0x774]{181},   m[r28{0} - 0x778]=m[r28{0} - 0x778]{181},
                m[r28{0} - 0x77c]=m[r28{0} - 0x77c]{181},   m[r28{0} - 4]=m[r28{0} - 4]{181},
                m[r28{0} - 0x76c]=m[r28{0} - 0x76c]{181},   m[r28{0} - 0x770]=m[r28{0} - 0x770]{181},
                m[r28{0} - 0x774]=m[r28{0} - 0x774]{181},   m[r28{0} - 0x778]=m[r28{0} - 0x778]{181},
                m[r28{0} - 0x77c]=m[r28{0} - 0x77c]{181},   <all>=<all>{181},   tmp1=r30{181},   tmpl=tmpl{181},
                %flags=SUBFLAGS32( r30{181}, 0, 0 ),   %ZF=0 = 0,   %CF=r30{181} <u 0
              Live variables: eax,  ecx,  edx in proc proc9
result:    0 *32* eax := -
result:    0 *v* ecx := -
result:    0 *32* edx := -
dest is not lib
call:  220 {*j64* eax, *v* ecx, *u64* edx, *v* esp} := CALL GetModuleHandleA(
              )
              Reaching definitions: r24=r24{209},   r25=r25{646} - 1,   r26=r26{204},   r27=r27{204},
                r28=r28{204} - 8,   r29=r29{204},   r30=r30{204},   r31=r31{204},   m[r28{0} - 4]=m[r28{0} - 4]{204},
                m[r28{0} - 0x76c]=m[r28{0} - 0x76c]{204},   m[r28{0} - 0x770]=m[r28{0} - 0x770]{204},
                m[r28{0} - 0x774]=m[r28{0} - 0x774]{204},   m[r28{0} - 0x778]=m[r28{0} - 0x778]{204},
                m[r28{0} - 0x77c]=m[r28{0} - 0x77c]{204},   m[r28{0} - 4]=m[r28{0} - 4]{204},
                m[r28{0} - 0x76c]=m[r28{0} - 0x76c]{204},   m[r28{0} - 0x770]=m[r28{0} - 0x770]{204},
                m[r28{0} - 0x774]=m[r28{0} - 0x774]{204},   m[r28{0} - 0x778]=m[r28{0} - 0x778]{204},
                m[r28{0} - 0x77c]=m[r28{0} - 0x77c]{204},   <all>=<all>{204},   tmp1=r25{646},   tmpl=tmpl{204},
                %flags=SUBFLAGS32( r25{646}, 1, r25{646} - 1 ),   %ZF=(r25{646} - 1) = 0,   %CF=r25{646} <u 1
              Live variables: eax in proc proc9
result:    0 *j64* eax := -
dest is not lib
call:  256 {*j32* eax, *v* ecx, *32* r26, *v* esp} := CALL GetThreadLocale(
              )
              Reaching definitions: r24=r24{247},   r25=r25{660},   r26=r26{229},   r27=r27{204},   r28=r28{204} - 8,
                r29=r29{204},   r30=r30{204},   r31=r31{654} - 1,   m[r28{0} - 4]=m[r28{0} - 4]{204},
                m[r28{0} - 0x76c]=m[r28{0} - 0x76c]{204},   m[r28{0} - 0x770]=m[r28{0} - 0x770]{204},
                m[r28{0} - 0x774]=m[r28{0} - 0x774]{204},   m[r28{0} - 0x778]=m[r28{0} - 0x778]{204},
                m[r28{0} - 0x77c]=m[r28{0} - 0x77c]{204},   m[r28{0} - 4]=m[r28{0} - 4]{204},
                m[r28{0} - 0x76c]=m[r28{0} - 0x76c]{204},   m[r28{0} - 0x770]=m[r28{0} - 0x770]{204},
                m[r28{0} - 0x774]=m[r28{0} - 0x774]{204},   m[r28{0} - 0x778]=m[r28{0} - 0x778]{204},
                m[r28{0} - 0x77c]=m[r28{0} - 0x77c]{204},   <all>=<all>{204},   tmp1=r31{654},
                tmpl=zfill(32,64,r25{652}) * 0x24924925,   %flags=SUBFLAGS32( r31{654}, 1, r31{654} - 1 ),
                %ZF=(r31{654} - 1) = 0,   %CF=r31{654} <u 1
              Live variables: r26,  eax in proc proc9
result:    0 *j32* eax := -
result:    0 *32* r26 := -
dest is not lib
call:  349 {*32* eax, *32* ecx, *v* edx, *v* esp} := CALL GetThreadLocale(
              )
              Reaching definitions: r24=r24{678},   r25=r25{341},   r26=r26{673} - 1,   r27=r27{330},
                r28=r28{330} - 4,   r29=r29{330},   r30=r30{330},   r31=r31{330},   m[r28{0} - 4]=m[r28{0} - 4]{330},
                m[r28{0} - 0x76c]=m[r28{0} - 0x76c]{330},   m[r28{0} - 0x770]=m[r28{0} - 0x770]{330},
                m[r28{0} - 0x774]=m[r28{0} - 0x774]{330},   m[r28{0} - 0x778]=m[r28{0} - 0x778]{330},
                m[r28{0} - 0x77c]=m[r28{0} - 0x77c]{330},   m[r28{0} - 4]=m[r28{0} - 4]{330},
                m[r28{0} - 0x76c]=m[r28{0} - 0x76c]{330},   m[r28{0} - 0x770]=m[r28{0} - 0x770]{330},
                m[r28{0} - 0x774]=m[r28{0} - 0x774]{330},   m[r28{0} - 0x778]=m[r28{0} - 0x778]{330},
                m[r28{0} - 0x77c]=m[r28{0} - 0x77c]{330},   <all>=<all>{330},   tmp1=r26{673},   tmpl=tmpl{330},
                %flags=SUBFLAGS32( r26{673}, 1, r26{673} - 1 ),   %ZF=(r26{673} - 1) = 0,   %CF=r26{673} <u 1
              Live variables:  in proc proc9
dest is not lib
call:  410 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL CloseHandle(
                *HANDLE* local5 := m[esp - 4]
              )
              Reaching definitions: r24=r24{393},   r25=r25{403},   r26=r26{689} - 1,   r27=r27{383},
                r28=r28{383} - 8,   r29=r29{383},   r30=r30{401},   r31=r31{383},   m[r28{0} - 4]=m[r28{0} - 4]{383},
                m[r28{0} - 0x76c]=m[r28{0} - 0x76c]{383},   m[r28{0} - 0x770]=m[r28{0} - 0x770]{383},
                m[r28{0} - 0x774]=m[r28{0} - 0x774]{383},   m[r28{0} - 0x778]=m[r28{0} - 0x778]{383},
                m[r28{0} - 0x77c]=m[r28{0} - 0x77c]{383},   m[r28{0} - 4]=m[r28{0} - 4]{383},
                m[r28{0} - 0x76c]=m[r28{0} - 0x76c]{383},   m[r28{0} - 0x770]=m[r28{0} - 0x770]{383},
                m[r28{0} - 0x774]=m[r28{0} - 0x774]{383},   m[r28{0} - 0x778]=m[r28{0} - 0x778]{383},
                m[r28{0} - 0x77c]=m[r28{0} - 0x77c]{383},   <all>=<all>{383},   tmp1=r25{694},   tmpl=tmpl{383},
                %flags=SUBFLAGS32( r25{694}, m[r29{383} - 0x56e], r25{403} ),   %ZF=r25{403} = 0,
                %CF=r25{694} <u m[r29{383} - 0x56e]
              Live variables:  in proc proc9
dest is not lib
call:  414 {*j32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetThreadLocale(
              )
              Reaching definitions: r24=r24{410},   r25=r25{410},   r26=r26{410},   r27=r27{383},   r28=r28{383} - 4,
                r29=r29{383},   r30=r30{401},   r31=r31{383},   m[r28{0} - 4]=m[r28{0} - 4]{383},
                m[r28{0} - 0x76c]=m[r28{0} - 0x76c]{383},   m[r28{0} - 0x770]=m[r28{0} - 0x770]{383},
                m[r28{0} - 0x774]=m[r28{0} - 0x774]{383},   m[r28{0} - 0x778]=m[r28{0} - 0x778]{383},
                m[r28{0} - 0x77c]=m[r28{0} - 0x77c]{383},   m[r28{0} - 4]=m[r28{0} - 4]{383},
                m[r28{0} - 0x76c]=m[r28{0} - 0x76c]{383},   m[r28{0} - 0x770]=m[r28{0} - 0x770]{383},
                m[r28{0} - 0x774]=m[r28{0} - 0x774]{383},   m[r28{0} - 0x778]=m[r28{0} - 0x778]{383},
                m[r28{0} - 0x77c]=m[r28{0} - 0x77c]{383},   <all>=<all>{383},   tmp1=r25{694},   tmpl=tmpl{383},
                %flags=SUBFLAGS32( r25{694}, m[r29{383} - 0x56e], r25{403} ),   %ZF=r25{403} = 0,
                %CF=r25{694} <u m[r29{383} - 0x56e]
              Live variables: eax in proc proc9
result:    0 *j32* eax := -
dest is not lib
call:  505 {*32* eax, *v* ecx, *32* edx, *v* esp} := CALL GetThreadLocale(
              )
              Reaching definitions: r24=r24{496},   r25=r25{717},   r26=r26{712} - 1,   r27=r27{477},
                r28=r28{477} - 4,   r29=r29{477},   r30=r30{477},   r31=r31{482},   m[r28{0} - 4]=m[r28{0} - 4]{477},
                m[r28{0} - 0x76c]=m[r28{0} - 0x76c]{477},   m[r28{0} - 0x770]=m[r28{0} - 0x770]{477},
                m[r28{0} - 0x774]=m[r28{0} - 0x774]{477},   m[r28{0} - 0x778]=m[r28{0} - 0x778]{477},
                m[r28{0} - 0x77c]=m[r28{0} - 0x77c]{477},   m[r28{0} - 4]=m[r28{0} - 4]{477},
                m[r28{0} - 0x76c]=m[r28{0} - 0x76c]{477},   m[r28{0} - 0x770]=m[r28{0} - 0x770]{477},
                m[r28{0} - 0x774]=m[r28{0} - 0x774]{477},   m[r28{0} - 0x778]=m[r28{0} - 0x778]{477},
                m[r28{0} - 0x77c]=m[r28{0} - 0x77c]{477},   <all>=<all>{477},   tmp1=r26{712},   tmpl=tmpl{477},
                %flags=SUBFLAGS32( r26{712}, 1, r26{712} - 1 ),   %ZF=(r26{712} - 1) = 0,   %CF=r26{712} <u 1
              Live variables: eax,  edx in proc proc9
result:    0 *32* eax := -
result:    0 *32* edx := -
dest is not lib
call:  564 {*j32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetThreadLocale(
              )
              Reaching definitions: r24=r24{555},   r25=r25{555},   r26=r26{555},   r27=r27{555} | r30{555},
                r28=r28{555} - 4,   r29=r29{555},   r30=r30{555},   r31=r31{555},   m[r28{0} - 4]=m[r28{0} - 4]{555},
                m[r28{0} - 0x76c]=m[r28{0} - 0x76c]{555},   m[r28{0} - 0x770]=m[r28{0} - 0x770]{555},
                m[r28{0} - 0x774]=m[r28{0} - 0x774]{555},   m[r28{0} - 0x778]=m[r28{0} - 0x778]{555},
                m[r28{0} - 0x77c]=m[r28{0} - 0x77c]{555},   m[r28{0} - 4]=m[r28{0} - 4]{555},
                m[r28{0} - 0x76c]=m[r28{0} - 0x76c]{555},   m[r28{0} - 0x770]=m[r28{0} - 0x770]{555},
                m[r28{0} - 0x774]=m[r28{0} - 0x774]{555},   m[r28{0} - 0x778]=m[r28{0} - 0x778]{555},
                m[r28{0} - 0x77c]=m[r28{0} - 0x77c]{555},   <all>=<all>{555},   tmp1=tmp1{555},   tmpl=tmpl{555},
                %flags=LOGICALFLAGS32( m[r29{555} - 56] ),   %ZF=LOGICALFLAGS32( m[r29{555} - 56] ),
                %CF=LOGICALFLAGS32( m[r29{555} - 56] )
              Live variables: eax in proc proc9
result:    0 *j32* eax := -
