Unknown library function GetTickCount
Unknown library function GetCurrentProcessId
Unknown library function RpcStringFreeW
Unknown library function VirtualProtect
COMPUTED JUMP at 0x401ffc, pDest = r31
assgn   23 *32* %pc := m[0x403128]
is readonly
assgn   31 *32* %pc := m[0x4031a4]
is readonly
assgn   37 *32* %pc := m[0x403140]
is readonly
assgn   55 *32* %pc := m[0x4031f4]
is readonly
assgn  105 *32* %pc := m[0x403164]
is readonly
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
in proc _start adding addrExp r28{0} - 4 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 20 to local table
in proc _start adding addrExp r28{0} - 20 to local table
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 32 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 40 to local table
finding final parameters for _start
local eax has type /*signed?*/int that doesn't agree with type of define __size32 of a library, why?
local eax has type __size32 that doesn't agree with type of define /*signed?*/int of a library, why?
local eax has type /*signed?*/int that doesn't agree with type of define __size32 of a library, why?
dest is not lib
call:   24 {*32* eax, *v* r25, *v* r26, *v* r28} := CALL GetCommandLineA(
              )
              Reaching definitions: r24=r24{0} | -7,   r25=r31{0},   r26=(r26{0} + (r31{0} + r27{0})) + 92,
                r27=r27{0},   r28=r28{0} - 16,   r30=r30{0} & r24{0},   r31=r31{0} + r27{0},   m[r28{0} - 4]=r27{0},
                m[r28{0} - 8]=r31{0},   m[r28{0} - 12]=r30{0},   m[r28{0} - 16]=%pc,   tmp1=r26{0} + 92,
                %flags=LOGICALFLAGS32( r24{0} | -7 ),   %ZF=LOGICALFLAGS32( r24{0} | -7 ),
                %CF=LOGICALFLAGS32( r24{0} | -7 )
              Live variables:  in proc _start
dest is not lib
call:   32 {*32* eax, *v* r25, *j32* r26, *v* r28} := CALL GetTickCount(
              )
              Reaching definitions: r24=r24{24} - 16,   r25=r30{0} & r24{0},   r26=r26{24},   r27=r27{0},
                r28=r28{0} - 16,   r30=r30{0} & r24{0},   r31=r31{0} + r27{0},   m[r28{0} - 4]=r27{0},
                m[r28{0} - 8]=r31{0},   m[r28{0} - 12]=r30{0},   m[r28{0} - 16]=%pc,   tmp1=r24{24},
                %flags=ADDFLAGS32( r24{24}, -16, r24{24} - 16 ),   %ZF=ADDFLAGS32( r24{24}, -16, r24{24} - 16 ),
                %CF=ADDFLAGS32( r24{24}, -16, r24{24} - 16 )
              Live variables:  in proc _start
dest is not lib
call:   38 {*j32* eax, *32* r25, *32* r26, *v* r28} := CALL GetCurrentProcessId(
              )
              Reaching definitions: r24=r24{32},   r25=r25{32},   r26=r26{32} | r27{0},   r27=r27{0},   r28=r28{0} - 16
                r30=r30{0} & r24{0},   r31=r31{0} + r27{0},   m[r28{0} - 4]=r27{0},   m[r28{0} - 8]=r31{0},
                m[r28{0} - 12]=r30{0},   m[r28{0} - 16]=%pc,   tmp1=r24{24},
                %flags=LOGICALFLAGS32( r26{32} | r27{0} ),   %ZF=LOGICALFLAGS32( r26{32} | r27{0} ),
                %CF=LOGICALFLAGS32( r26{32} | r27{0} )
              Live variables:  in proc _start
dest is not lib
call:   56 {*j32* eax, *v* r25, *j32* r26, *v* r28} := CALL RpcStringFreeW(
              )
              Reaching definitions: r24=(r24{38} ^ r27{0}) ^ (r31{0} + r27{0}),
                r25=(r25{38} + 0x59b04a39) | (r31{0} + r27{0}),   r26=r26{38} - (r30{0} & r24{0}),   r27=r27{0},
                r28=r28{0} - 20,   r30=r30{0} & r24{0},   r31=r31{0} + r27{0},   m[r28{0} - 4]=r27{0},
                m[r28{0} - 8]=r31{0},   m[r28{0} - 12]=r30{0},   m[r28{0} - 16]=0,   m[r28{0} - 20]=%pc,   tmp1=r25{38}
                %flags=LOGICALFLAGS32( (r25{38} + 0x59b04a39) | (r31{0} + r27{0}) ),
                %ZF=LOGICALFLAGS32( (r25{38} + 0x59b04a39) | (r31{0} + r27{0}) ),
                %CF=LOGICALFLAGS32( (r25{38} + 0x59b04a39) | (r31{0} + r27{0}) )
              Live variables: eax in proc _start
result:    0 *j32* eax := -
dest is not lib
call:  106 {*32* eax, *32* r25, *j32* r26, *v* r28} := CALL VirtualProtect(
              )
              Reaching definitions: r24=(r24{56} - (r26{64} ^ (r24{56} - 87))) - 87,   r25=0,
                r26=r26{64} ^ (r24{56} - 87),   r27=62,   r28=r28{0} - 40,   r30=r30{83},   r31=r24{56} + 0x401fa7,
                m[r28{0} - 4]=r27{0},   m[r28{0} - 8]=r31{0},   m[r28{0} - 12]=r30{0},   m[r28{0} - 16]=0,
                m[r28{0} - 20]=0,   m[r28{0} - 24]=r28{0} - 20,   m[r28{0} - 28]=64,   m[r28{0} - 32]=0xf40,
                m[r28{0} - 36]=0x401000,   m[r28{0} - 40]=%pc,   tmp1=r24{56} - 87,   %flags=LOGICALFLAGS32( 0 ),
                %ZF=LOGICALFLAGS32( 0 ),   %CF=LOGICALFLAGS32( 0 )
              Live variables:  in proc _start
