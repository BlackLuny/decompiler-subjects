Unknown library function GetModuleHandleA
Unknown library function VirtualProtect
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc1 ###
in proc proc1 adding addrExp r28{0} - 4 to local table
in proc proc1 adding addrExp r28{0} - 8 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
finding final parameters for proc1
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param r25
found new parameter r25
assgn    7 *32* r24 := m[0x4020a0]
is readonly
assgn   13 *8* r9 := m[0x4020a6]
is readonly
assgn   32 *32* r24 := m[0x4020a8]
is readonly
assgn   34 *32* r26 := m[0x4020ac]
is readonly
assgn   37 *32* r25 := m[0x4020b0]
is readonly
assgn   40 *32* r24 := m[0x4020b4]
is readonly
after removing matching assigns (t[WILDSTR]).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc2 ###
in proc proc2 adding addrExp r28{0} - 4 to local table
in proc proc2 adding addrExp r28{0} - 84 to local table
in proc proc2 adding addrExp r28{0} - 80 to local table
in proc proc2 adding addrExp r28{0} - 78 to local table
in proc proc2 adding addrExp r28{0} - 164 to local table
in proc proc2 adding addrExp r28{0} - 160 to local table
in proc proc2 adding addrExp r28{0} - 156 to local table
in proc proc2 adding addrExp r28{0} - 152 to local table
in proc proc2 adding addrExp r28{0} - 148 to local table
finding final parameters for proc2
potential param r28
found new parameter r28
assgn   11 *32* %pc := m[0x402034]
is readonly
assgn   64 *32* %pc := m[0x40202c]
is readonly
assgn   78 *32* %pc := m[0x402028]
is readonly
assgn   87 *32* %pc := m[0x40201c]
is readonly
assgn   93 *32* %pc := m[0x402010]
is readonly
assgn  102 *32* %pc := m[0x402014]
is readonly
assgn  113 *32* %pc := m[0x402028]
is readonly
assgn  122 *32* %pc := m[0x402014]
is readonly
assgn  131 *32* %pc := m[0x40201c]
is readonly
assgn  137 *32* %pc := m[0x402010]
is readonly
assgn  153 *32* %pc := m[0x402018]
is readonly
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
in proc _start adding addrExp r28{0} - 0x850 to local table
in proc _start adding addrExp r28{0} - 0x854 to local table
in proc _start adding addrExp r28{0} - 0x858 to local table
in proc _start adding addrExp r28{0} - 0x844 to local table
in proc _start adding addrExp r28{0} - 4 to local table
in proc _start adding addrExp r28{0} - 0x848 to local table
in proc _start adding addrExp r28{0} - 0x84c to local table
in proc _start adding addrExp r28{0} - 0x848 to local table
in proc _start adding addrExp r28{0} - 0x844 to local table
in proc _start adding addrExp r28{0} - 0x84c to local table
in proc _start adding addrExp r28{0} - 0x850 to local table
in proc _start adding addrExp r28{0} - 0x854 to local table
in proc _start adding addrExp r28{0} - 0x858 to local table
in proc _start adding addrExp r28{0} - 0x84c to local table
in proc _start adding addrExp r28{0} - 0x850 to local table
in proc _start adding addrExp r28{0} - 0x854 to local table
in proc _start adding addrExp r28{0} - 0x858 to local table
in proc _start adding addrExp r28{0} - 0x844 to local table
in proc _start adding addrExp r28{0} - 0x848 to local table
in proc _start adding addrExp r28{0} - 0x84c to local table
in proc _start adding addrExp r28{0} - 0x850 to local table
in proc _start adding addrExp r28{0} - 0x854 to local table
in proc _start adding addrExp r28{0} - 0x858 to local table
in proc _start adding addrExp r28{0} - 0x84c to local table
in proc _start adding addrExp r28{0} - 0x850 to local table
in proc _start adding addrExp r28{0} - 0x854 to local table
in proc _start adding addrExp r28{0} - 0x858 to local table
in proc _start adding addrExp r28{0} - 0x85c to local table
in proc _start adding addrExp r28{0} - 0x85c to local table
in proc _start adding addrExp r28{0} - 0x860 to local table
in proc _start adding addrExp r28{0} - 0x864 to local table
in proc _start adding addrExp r28{0} - 0x868 to local table
in proc _start adding addrExp r28{0} - 0x85c to local table
in proc _start adding addrExp r28{0} - 0x860 to local table
in proc _start adding addrExp r28{0} - 0x864 to local table
in proc _start adding addrExp r28{0} - 0x85c to local table
in proc _start adding addrExp r28{0} - 0x860 to local table
in proc _start adding addrExp r28{0} - 0x85c to local table
in proc _start adding addrExp r28{0} - 0x860 to local table
in proc _start adding addrExp r28{0} - 0x864 to local table
in proc _start adding addrExp r28{0} - 0x854 to local table
in proc _start adding addrExp r28{0} - 0x85c to local table
in proc _start adding addrExp r28{0} - 0x860 to local table
in proc _start adding addrExp r28{0} - 0x864 to local table
in proc _start adding addrExp r28{0} - 0x868 to local table
in proc _start adding addrExp r28{0} - 0x85c to local table
in proc _start adding addrExp r28{0} - 0x860 to local table
in proc _start adding addrExp r28{0} - 0x864 to local table
in proc _start adding addrExp r28{0} - 0x85c to local table
in proc _start adding addrExp r28{0} - 0x860 to local table
in proc _start adding addrExp r28{0} - 0x864 to local table
in proc _start adding addrExp r28{0} - 0x85c to local table
in proc _start adding addrExp r28{0} - 0x860 to local table
in proc _start adding addrExp r28{0} - 0x85c to local table
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 to local table
finding final parameters for _start
potential param r28
found new parameter r28
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc1 ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc2 ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 to local table
finding final parameters for proc1
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param r25
found new parameter r25
finding final parameters for _start
potential param r28
found new parameter r28
local edx has type int that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local eax has type HMODULE that doesn't agree with type of define __size32 of a library, why?
local ecx has type unsigned int that doesn't agree with type of define void of a library, why?
local eax has type __size32 that doesn't agree with type of define HRSRC of a library, why?
local eax has type HRSRC that doesn't agree with type of define HGLOBAL of a library, why?
local eax has type HGLOBAL that doesn't agree with type of define __size32 of a library, why?
local eax has type __size32 that doesn't agree with type of define HRSRC of a library, why?
local eax has type HRSRC that doesn't agree with type of define __size32 of a library, why?
local eax has type __size32 that doesn't agree with type of define HGLOBAL of a library, why?
local eax has type HGLOBAL that doesn't agree with type of define __size32 of a library, why?
found seq with more than one outedge!
taken branch is first out edge
dest is not lib
call:   12 {*HMODULE* eax_1, *u32* ecx, *v* edx, *v* esp} := CALL GetModuleHandleA(
              )
              Reaching definitions: r28=r28{0} - 0x84c,   r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},
                m[r28{0} - 0x844]=m[r28{0} - 0x844]{0},   m[r28{0} - 0x848]=0,   m[r28{0} - 0x84c]=%pc,
                m[r28{0} - 0x850]=m[r28{0} - 0x850]{0},   m[r28{0} - 0x854]=m[r28{0} - 0x854]{0},
                m[r28{0} - 0x858]=m[r28{0} - 0x858]{0},   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 0x840, r28{0} - 0x844 ),   %ZF=(r28{0} - 0x844) = 0,
                %CF=(r28{0} - 4) <u 0x840
              Live variables: eax_1,  ecx in proc _start
result:    0 *HMODULE* eax_1 := -
result:    0 *u32* ecx := -
found seq with more than one outedge!
taken branch is first out edge
dest is not lib
call:   65 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL VirtualProtect(
              )
              Reaching definitions: r24=(r28{0} - 0x848) + 0x438,   r25=r25{172},   r26=r26{173},   r27=r27{174},
                r28=(r28{0} - 0x848) - 20,   r29=r28{0} - 4,   r30=r24{12},   r31=r31{177},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 0x844]=m[r28{0} - 0x844]{186},   m[r28{0} - 0x848]=m[r28{0} - 0x848]{187},
                m[r28{0} - 0x84c]=r28{0} - 0x410,   m[r28{0} - 0x850]=4,   m[r28{0} - 0x854]=0x1000,
                m[r28{0} - 0x858]=r24{12},   m[r28{0} - 0x85c]=%pc,   tmp1=tmp1{178},   %flags=%flags{179},
                %ZF=%ZF{180},   %CF=%CF{181}
              Live variables:  in proc _start
dest is not lib
call:   79 {*HRSRC* eax, *v* ecx, *v* edx, *v* esp} := CALL FindResourceA(
                *HMODULE* local3 := eax_1
                *LPCSTR* local4 := 311
                *LPCSTR* local5 := "PIS"
              )
              Reaching definitions: r24=r24{70},   r25=r25{65},   r26=r26{74},   r27=r27{174},
                r28=(r28{0} - 0x848) - 32,   r29=r28{0} - 4,   r30=r24{12},   r31=r31{177},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 0x844]=m[r28{0} - 0x844]{186},   m[r28{0} - 0x848]=m[r28{0} - 0x848]{187},
                m[r28{0} - 0x84c]=r28{0} - 0x410,   m[r28{0} - 0x850]=4,   m[r28{0} - 0x854]=0x1000,
                m[r28{0} - 0x858]=r24{12},   m[r28{0} - 0x85c]=0x402240,   m[r28{0} - 0x860]=311,
                m[r28{0} - 0x864]=r24{12},   m[r28{0} - 0x868]=%pc,   tmp1=tmp1{178},   %flags=%flags{179},
                %ZF=%ZF{180},   %CF=%CF{181}
              Live variables: eax in proc _start
result:    0 *HRSRC* eax := -
dest is not lib
call:   88 {*HGLOBAL* eax, *v* ecx, *v* edx, *v* esp} := CALL LoadResource(
                *HMODULE* local6 := eax_1
                *HRSRC* local7 := eax
              )
              Reaching definitions: r24=r24{79},   r25=r25{79},   r26=r26{79},   r27=r27{174},
                r28=(r28{0} - 0x848) - 28,   r29=r28{0} - 4,   r30=r24{12},   r31=r24{79},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 0x844]=m[r28{0} - 0x844]{186},   m[r28{0} - 0x848]=m[r28{0} - 0x848]{187},
                m[r28{0} - 0x84c]=r28{0} - 0x410,   m[r28{0} - 0x850]=4,   m[r28{0} - 0x854]=0x1000,
                m[r28{0} - 0x858]=r24{12},   m[r28{0} - 0x85c]=r24{79},   m[r28{0} - 0x860]=r24{12},
                m[r28{0} - 0x864]=%pc,   m[r28{0} - 0x868]=%pc,   tmp1=tmp1{178},   %flags=%flags{179},   %ZF=%ZF{180},
                %CF=%CF{181}
              Live variables: eax in proc _start
result:    0 *HGLOBAL* eax := -
dest is not lib
call:   94 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL LockResource(
                *HGLOBAL* local7 := eax
              )
              Reaching definitions: r24=r24{88},   r25=r25{88},   r26=r26{88},   r27=r27{174},
                r28=(r28{0} - 0x848) - 24,   r29=r28{0} - 4,   r30=r24{12},   r31=r24{79},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 0x844]=m[r28{0} - 0x844]{186},   m[r28{0} - 0x848]=m[r28{0} - 0x848]{187},
                m[r28{0} - 0x84c]=r28{0} - 0x410,   m[r28{0} - 0x850]=4,   m[r28{0} - 0x854]=0x1000,
                m[r28{0} - 0x858]=r24{12},   m[r28{0} - 0x85c]=r24{88},   m[r28{0} - 0x860]=%pc,
                m[r28{0} - 0x864]=%pc,   m[r28{0} - 0x868]=%pc,   tmp1=tmp1{178},   %flags=%flags{179},   %ZF=%ZF{180},
                %CF=%CF{181}
              Live variables: eax in proc _start
result:    0 *32* eax := -
dest is not lib
call:  103 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL SizeofResource(
                *HMODULE* local6 := eax_1
                *HRSRC* local7 := eax
              )
              Reaching definitions: r24=r24{94},   r25=r25{94},   r26=r26{94},   r27=r24{94},
                r28=(r28{0} - 0x848) - 28,   r29=r28{0} - 4,   r30=r24{12},   r31=r24{79},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 0x844]=m[r28{0} - 0x844]{186},   m[r28{0} - 0x848]=m[r28{0} - 0x848]{187},
                m[r28{0} - 0x84c]=r28{0} - 0x410,   m[r28{0} - 0x850]=4,   m[r28{0} - 0x854]=0x1000,
                m[r28{0} - 0x858]=r24{12},   m[r28{0} - 0x85c]=r24{79},   m[r28{0} - 0x860]=r24{12},
                m[r28{0} - 0x864]=%pc,   m[r28{0} - 0x868]=%pc,   tmp1=tmp1{178},   %flags=%flags{179},   %ZF=%ZF{180},
                %CF=%CF{181}
              Live variables: eax in proc _start
result:    0 *32* eax := -
dest is not lib
call:  114 {*HRSRC* eax, *v* ecx, *v* edx, *v* esp} := CALL FindResourceA(
                *HMODULE* local3 := 0
                *LPCSTR* local4 := 312
                *LPCSTR* local5 := "PIS"
              )
              Reaching definitions: r24=r24{103},   r25=r25{103},   r26=r26{103},   r27=r24{94},
                r28=(r28{0} - 0x848) - 32,   r29=r28{0} - 4,   r30=r24{12},   r31=r24{79},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 0x844]=m[r28{0} - 0x844]{186},   m[r28{0} - 0x848]=m[r28{0} - 0x848]{187},
                m[r28{0} - 0x84c]=r28{0} - 0x410,   m[r28{0} - 0x850]=4,   m[r28{0} - 0x854]=r24{103},
                m[r28{0} - 0x858]=r24{12},   m[r28{0} - 0x85c]=0x402240,   m[r28{0} - 0x860]=312,   m[r28{0} - 0x864]=0
                m[r28{0} - 0x868]=%pc,   tmp1=tmp1{178},   %flags=%flags{179},   %ZF=%ZF{180},   %CF=%CF{181}
              Live variables: eax in proc _start
result:    0 *HRSRC* eax := -
dest is not lib
call:  123 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL SizeofResource(
                *HMODULE* local6 := 0
                *HRSRC* local7 := eax
              )
              Reaching definitions: r24=r24{114},   r25=r25{114},   r26=r26{114},   r27=r24{94},
                r28=(r28{0} - 0x848) - 28,   r29=r28{0} - 4,   r30=r24{114},   r31=r24{79},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 0x844]=m[r28{0} - 0x844]{186},   m[r28{0} - 0x848]=m[r28{0} - 0x848]{187},
                m[r28{0} - 0x84c]=r28{0} - 0x410,   m[r28{0} - 0x850]=4,   m[r28{0} - 0x854]=r24{103},
                m[r28{0} - 0x858]=r24{12},   m[r28{0} - 0x85c]=r24{114},   m[r28{0} - 0x860]=0,   m[r28{0} - 0x864]=%pc
                m[r28{0} - 0x868]=%pc,   tmp1=tmp1{178},   %flags=%flags{179},   %ZF=%ZF{180},   %CF=%CF{181}
              Live variables: eax in proc _start
result:    0 *32* eax := -
dest is not lib
call:  132 {*HGLOBAL* eax, *v* ecx, *v* edx, *v* esp} := CALL LoadResource(
                *HMODULE* local6 := 0
                *HRSRC* local7 := eax
              )
              Reaching definitions: r24=r24{123},   r25=r25{123},   r26=r26{123},   r27=r24{94},
                r28=(r28{0} - 0x848) - 28,   r29=r28{0} - 4,   r30=r24{114},   r31=r24{123},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 0x844]=m[r28{0} - 0x844]{186},   m[r28{0} - 0x848]=m[r28{0} - 0x848]{187},
                m[r28{0} - 0x84c]=r28{0} - 0x410,   m[r28{0} - 0x850]=4,   m[r28{0} - 0x854]=r24{103},
                m[r28{0} - 0x858]=r24{12},   m[r28{0} - 0x85c]=r24{114},   m[r28{0} - 0x860]=0,   m[r28{0} - 0x864]=%pc
                m[r28{0} - 0x868]=%pc,   tmp1=tmp1{178},   %flags=%flags{179},   %ZF=%ZF{180},   %CF=%CF{181}
              Live variables: eax in proc _start
result:    0 *HGLOBAL* eax := -
dest is not lib
call:  138 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL LockResource(
                *HGLOBAL* local7 := eax
              )
              Reaching definitions: r24=r24{132},   r25=r25{132},   r26=r26{132},   r27=r24{94},
                r28=(r28{0} - 0x848) - 24,   r29=r28{0} - 4,   r30=r24{114},   r31=r24{123},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 0x844]=m[r28{0} - 0x844]{186},   m[r28{0} - 0x848]=m[r28{0} - 0x848]{187},
                m[r28{0} - 0x84c]=r28{0} - 0x410,   m[r28{0} - 0x850]=4,   m[r28{0} - 0x854]=r24{103},
                m[r28{0} - 0x858]=r24{12},   m[r28{0} - 0x85c]=r24{132},   m[r28{0} - 0x860]=%pc,
                m[r28{0} - 0x864]=%pc,   m[r28{0} - 0x868]=%pc,   tmp1=tmp1{178},   %flags=%flags{179},   %ZF=%ZF{180},
                %CF=%CF{181}
              Live variables: eax,  ecx,  edx in proc _start
result:    0 *32* eax := -
result:    0 *v* ecx := -
result:    0 *v* edx := -
dest is not lib
call:  143 <all> := CALL proc2(<all>)
              Reaching definitions: r24=r24{138},   r25=r25{138},   r26=r26{138},   r27=r24{94},
                r28=(r28{0} - 0x848) - 20,   r29=r28{0} - 4,   r30=r24{138},   r31=r24{123},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 0x844]=m[esp - 0x844]{186},   m[r28{0} - 0x848]=m[esp - 0x848]{187},
                m[r28{0} - 0x84c]=r28{0} - 0x410,   m[r28{0} - 0x850]=4,   m[r28{0} - 0x854]=r24{103},
                m[r28{0} - 0x858]=r24{12},   m[r28{0} - 0x85c]=%pc,   m[r28{0} - 0x860]=%pc,   m[r28{0} - 0x864]=%pc,
                m[r28{0} - 0x868]=%pc,   tmp1=tmp1{178},   %flags=%flags{179},   %ZF=%ZF{180},   %CF=%CF{181}
              Live variables:  in proc _start
dest is not lib
call:   35 {*HMODULE* eax, *u32* ecx, *i32* edx, *v* esp} := CALL proc1(
                *v** local0 := ebx
                *v** local1 := 0x402230
                *u32* local2 := 6
                *u32* ecx := ecx
              )
              Reaching definitions: r24=r24{155},   r25=r25{156},   r26=r26{157},   r27=r27{158},   r28=r28{0} - 0x858,
                r29=r28{0} - 4,   r30=r30{160},   r31=r26{15},   m[r28{0} - 4]=r29{0},   m[r28{0} - 0x844]=r24{12},
                m[r28{0} - 0x848]=r31{14},   m[r28{0} - 0x84c]=6,   m[r28{0} - 0x850]=0x402230,
                m[r28{0} - 0x854]=r27{158},   m[r28{0} - 0x858]=%pc,   tmp1=tmp1{161},   %flags=%flags{162},
                %ZF=%ZF{163},   %CF=%CF{164}
              Live variables: eax,  ecx in proc _start
result:    0 *HMODULE* eax := -
result:    0 *u32* ecx := -
found seq with more than one outedge!
taken branch is first out edge
found seq with more than one outedge!
taken branch is first out edge
