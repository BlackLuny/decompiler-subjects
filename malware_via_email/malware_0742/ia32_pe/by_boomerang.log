Unknown library function CreateFileA
Unknown library function GetModuleHandleA
COMPUTED JUMP at 0x4012d0, pDest = m[0x406414]
Unknown library function lstrcpyA
COMPUTED JUMP at 0x40183c, pDest = r25
assgn   18 *32* %pc := m[0x40101c]
is readonly
after removing matching assigns (%pc).
in proc proc1 adding addrExp r28{0} - 4 to local table
in proc proc1 adding addrExp r28{0} - 8 to local table
in proc proc1 adding addrExp r28{0} - 8 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 20 to local table
in proc proc1 adding addrExp r28{0} - 24 to local table
in proc proc1 adding addrExp r28{0} - 28 to local table
in proc proc1 adding addrExp r28{0} - 8 to local table
finding final parameters for proc1
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
assgn   16 *32* %pc := m[0x401018]
is readonly
assgn   53 *32* %pc := m[0x401018]
is readonly
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
in proc proc8 adding addrExp r28{0} - 12 to local table
in proc proc8 adding addrExp r28{0} - 20 to local table
in proc proc8 adding addrExp r28{0} - 4 to local table
in proc proc8 adding addrExp r28{0} - 8 to local table
in proc proc8 adding addrExp r28{0} - 16 to local table
in proc proc8 adding addrExp r28{0} - 136 to local table
in proc proc8 adding addrExp r28{0} - 140 to local table
in proc proc8 adding addrExp r28{0} - 144 to local table
in proc proc8 adding addrExp r28{0} - 8 to local table
in proc proc8 adding addrExp r28{0} - 12 to local table
in proc proc8 adding addrExp r28{0} - 16 to local table
in proc proc8 adding addrExp r28{0} - 20 to local table
in proc proc8 adding addrExp r28{0} - 12 to local table
in proc proc8 adding addrExp r28{0} - 20 to local table
in proc proc8 adding addrExp r28{0} - 8 to local table
in proc proc8 adding addrExp r28{0} - 16 to local table
in proc proc8 adding addrExp r28{0} - 144 to local table
in proc proc8 adding addrExp r28{0} - 148 to local table
in proc proc8 adding addrExp r28{0} - 152 to local table
finding final parameters for proc8
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
assgn   20 *32* %pc := m[0x401018]
is readonly
assgn  181 *32* %pc := m[0x401018]
is readonly
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc2 ###
in proc proc2 adding addrExp r28{0} - 5 to local table
in proc proc2 adding addrExp r28{0} - 28 to local table
in proc proc2 adding addrExp r28{0} - 164 to local table
in proc proc2 adding addrExp r28{0} - 168 to local table
in proc proc2 adding addrExp r28{0} - 16 to local table
in proc proc2 adding addrExp r28{0} - 32 to local table
in proc proc2 adding addrExp r28{0} - 4 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 17 to local table
in proc proc2 adding addrExp r28{0} - 152 to local table
in proc proc2 adding addrExp r28{0} - 156 to local table
in proc proc2 adding addrExp r28{0} - 160 to local table
in proc proc2 adding addrExp r28{0} - 24 to local table
in proc proc2 adding addrExp r28{0} - 5 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 24 to local table
in proc proc2 adding addrExp r28{0} - 28 to local table
in proc proc2 adding addrExp r28{0} - 160 to local table
in proc proc2 adding addrExp r28{0} - 164 to local table
in proc proc2 adding addrExp r28{0} - 168 to local table
in proc proc2 adding addrExp r28{0} - 5 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 24 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 160 to local table
in proc proc2 adding addrExp r28{0} - 164 to local table
in proc proc2 adding addrExp r28{0} - 168 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 160 to local table
in proc proc2 adding addrExp r28{0} - 164 to local table
in proc proc2 adding addrExp r28{0} - 168 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 28 to local table
in proc proc2 adding addrExp r28{0} - 28 to local table
in proc proc2 adding addrExp r28{0} - 24 to local table
in proc proc2 adding addrExp r28{0} - 28 to local table
in proc proc2 adding addrExp r28{0} - 24 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 24 to local table
in proc proc2 adding addrExp r28{0} - 28 to local table
in proc proc2 adding addrExp r28{0} - 160 to local table
in proc proc2 adding addrExp r28{0} - 164 to local table
in proc proc2 adding addrExp r28{0} - 168 to local table
in proc proc2 adding addrExp r28{0} - 24 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 24 to local table
in proc proc2 adding addrExp r28{0} - 28 to local table
in proc proc2 adding addrExp r28{0} - 160 to local table
in proc proc2 adding addrExp r28{0} - 164 to local table
in proc proc2 adding addrExp r28{0} - 168 to local table
in proc proc2 adding addrExp r28{0} - 160 to local table
in proc proc2 adding addrExp r28{0} - 164 to local table
in proc proc2 adding addrExp r28{0} - 168 to local table
finding final parameters for proc2
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} - 28]
found new parameter m[r28{0} - 28]
potential param m[r28{0} - 164]
found new parameter m[r28{0} - 164]
potential param m[r28{0} - 168]
found new parameter m[r28{0} - 168]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} - 16]
found new parameter m[r28{0} - 16]
potential param m[r28{0} - 32]
found new parameter m[r28{0} - 32]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
assgn    6 *32* r24 := m[0x4063fc]
assgn   11 *32* r25 := m[0x4063fc]
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc5 ###
in proc proc5 adding addrExp r28{0} - 4 to local table
finding final parameters for proc5
potential param r28
found new parameter r28
potential param r24
found new parameter r24
potential param r26
found new parameter r26
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
assgn   23 *32* %pc := m[0x401000]
is readonly
assgn   29 *32* %pc := m[0x40100c]
is readonly
assgn   47 *32* tmp1 := m[0x4063f4]
assgn   59 *32* r26 := m[0x4063f4]
assgn   69 *32* r24 := m[0x4063f4]
assgn  123 *32* r26 := m[0x4063f4]
assgn  142 *32* r30 := m[0x4063f4]
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc3 ###
in proc proc3 adding addrExp r28{0} - 4 to local table
in proc proc3 adding addrExp r28{0} - 40 to local table
in proc proc3 adding addrExp r28{0} - 36 to local table
in proc proc3 adding addrExp r28{0} - 20 to local table
in proc proc3 adding addrExp r28{0} - 44 to local table
in proc proc3 adding addrExp r28{0} - 48 to local table
in proc proc3 adding addrExp r28{0} - 52 to local table
in proc proc3 adding addrExp r28{0} - 52 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffcc existing type unsigned int but added type HANDLE
in proc proc3 adding addrExp r28{0} - 56 to local table
in proc proc3 adding addrExp r28{0} - 24 to local table
in proc proc3 adding addrExp r28{0} - 48 to local table
in proc proc3 adding addrExp r28{0} - 52 to local table
in proc proc3 adding addrExp r28{0} - 56 to local table
in proc proc3 adding addrExp r28{0} - 60 to local table
in proc proc3 adding addrExp r28{0} - 64 to local table
finding final parameters for proc3
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
assgn   14 *32* %pc := m[0x40100c]
is readonly
after removing matching assigns (%pc).
in proc proc6 adding addrExp r28{0} - 4 to local table
in proc proc6 adding addrExp r28{0} - 8 to local table
in proc proc6 adding addrExp r28{0} - 12 to local table
in proc proc6 adding addrExp r28{0} - 16 to local table
in proc proc6 adding addrExp r28{0} - 20 to local table
in proc proc6 adding addrExp r28{0} - 8 to local table
finding final parameters for proc6
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
assgn    5 *32* r26 := m[0x406410]
after removing matching assigns (%pc).
in proc proc7 adding addrExp r28{0} - 4 to local table
finding final parameters for proc7
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
assgn   14 *32* %pc := m[0x401018]
is readonly
assgn   20 *32* %pc := m[0x401000]
is readonly
assgn   30 *32* %pc := m[0x40100c]
is readonly
assgn   40 *32* %pc := m[0x40100c]
is readonly
assgn   50 *32* %pc := m[0x40100c]
is readonly
assgn   60 *32* %pc := m[0x40100c]
is readonly
assgn   70 *32* %pc := m[0x40100c]
is readonly
assgn  233 *32* %pc := m[0x401010]
is readonly
assgn  365 *32* tmp1 := m[0x4063f4]
assgn  417 *32* tmp1 := m[0x4063f4]
assgn  442 *32* %pc := m[0x401014]
is readonly
assgn  451 *32* r24 := m[0x4063f4]
assgn  461 *32* r25 := m[0x4063f4]
assgn  472 *32* r24 := m[0x4063f4]
assgn  478 *32* r26 := m[0x406414]
after removing matching assigns (%pc).
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc4 ###
in proc proc4 adding addrExp r28{0} - 4 to local table
in proc proc4 adding addrExp r28{0} - 208 to local table
in proc proc4 adding addrExp r28{0} - 212 to local table
in proc proc4 adding addrExp r28{0} - 216 to local table
in proc proc4 adding addrExp r28{0} - 216 to local table
in proc proc4 adding addrExp r28{0} - 220 to local table
in proc proc4 adding addrExp r28{0} - 196 to local table
in proc proc4 adding addrExp r28{0} - 220 to local table
in proc proc4 adding addrExp r28{0} - 224 to local table
in proc proc4 adding addrExp r28{0} - 228 to local table
in proc proc4 adding addrExp r28{0} - 60 to local table
in proc proc4 adding addrExp r28{0} - 220 to local table
in proc proc4 adding addrExp r28{0} - 224 to local table
in proc proc4 adding addrExp r28{0} - 228 to local table
in proc proc4 adding addrExp r28{0} - 8 to local table
in proc proc4 adding addrExp r28{0} - 220 to local table
in proc proc4 adding addrExp r28{0} - 224 to local table
in proc proc4 adding addrExp r28{0} - 228 to local table
in proc proc4 adding addrExp r28{0} - 68 to local table
in proc proc4 adding addrExp r28{0} - 220 to local table
in proc proc4 adding addrExp r28{0} - 224 to local table
in proc proc4 adding addrExp r28{0} - 228 to local table
in proc proc4 adding addrExp r28{0} - 20 to local table
in proc proc4 adding addrExp r28{0} - 220 to local table
in proc proc4 adding addrExp r28{0} - 224 to local table
in proc proc4 adding addrExp r28{0} - 228 to local table
in proc proc4 adding addrExp r28{0} - 24 to local table
in proc proc4 adding addrExp r28{0} - 200 to local table
in proc proc4 adding addrExp r28{0} - 64 to local table
in proc proc4 adding addrExp r28{0} - 44 to local table
in proc proc4 adding addrExp r28{0} - 220 to local table
in proc proc4 adding addrExp r28{0} - 224 to local table
in proc proc4 adding addrExp r28{0} - 228 to local table
in proc proc4 adding addrExp r28{0} - 232 to local table
in proc proc4 adding addrExp r28{0} - 236 to local table
in proc proc4 adding addrExp r28{0} - 4 to local table
in proc proc4 adding addrExp r28{0} - 8 to local table
TYPE ERROR: Existing type at address 0xfffffff8 is not structure or array type
in proc proc4 adding addrExp r28{0} - 20 to local table
TYPE ERROR: Existing type at address 0xffffffec is not structure or array type
in proc proc4 adding addrExp r28{0} - 24 to local table
TYPE ERROR: Existing type at address 0xffffffe8 is not structure or array type
in proc proc4 adding addrExp r28{0} - 44 to local table
TYPE ERROR: Existing type at address 0xffffffd4 is not structure or array type
in proc proc4 adding addrExp r28{0} - 60 to local table
TYPE ERROR: Existing type at address 0xffffffc4 is not structure or array type
in proc proc4 adding addrExp r28{0} - 64 to local table
TYPE ERROR: Existing type at address 0xffffffc0 is not structure or array type
in proc proc4 adding addrExp r28{0} - 68 to local table
TYPE ERROR: Existing type at address 0xffffffbc is not structure or array type
in proc proc4 adding addrExp r28{0} - 196 to local table
TYPE ERROR: Existing type at address 0xffffff3c is not structure or array type
in proc proc4 adding addrExp r28{0} - 200 to local table
TYPE ERROR: Existing type at address 0xffffff38 is not structure or array type
in proc proc4 adding addrExp r28{0} - 208 to local table
TYPE ERROR: Existing type at address 0xffffff30 is not structure or array type
in proc proc4 adding addrExp r28{0} - 212 to local table
TYPE ERROR: Existing type at address 0xffffff2c is not structure or array type
in proc proc4 adding addrExp r28{0} - 216 to local table
TYPE ERROR: Existing type at address 0xffffff28 is not structure or array type
in proc proc4 adding addrExp r28{0} - 220 to local table
TYPE ERROR: Existing type at address 0xffffff24 is not structure or array type
in proc proc4 adding addrExp r28{0} - 224 to local table
TYPE ERROR: Existing type at address 0xffffff20 is not structure or array type
in proc proc4 adding addrExp r28{0} - 228 to local table
TYPE ERROR: Existing type at address 0xffffff1c is not structure or array type
in proc proc4 adding addrExp r28{0} - 232 to local table
TYPE ERROR: Existing type at address 0xffffff18 is not structure or array type
in proc proc4 adding addrExp r28{0} - 236 to local table
TYPE ERROR: Existing type at address 0xffffff14 is not structure or array type
in proc proc4 adding addrExp r28{0} - 4 to local table
in proc proc4 adding addrExp r28{0} - 8 to local table
TYPE ERROR: Existing type at address 0xfffffff8 is not structure or array type
in proc proc4 adding addrExp r28{0} - 20 to local table
TYPE ERROR: Existing type at address 0xffffffec is not structure or array type
in proc proc4 adding addrExp r28{0} - 24 to local table
TYPE ERROR: Existing type at address 0xffffffe8 is not structure or array type
in proc proc4 adding addrExp r28{0} - 44 to local table
TYPE ERROR: Existing type at address 0xffffffd4 is not structure or array type
in proc proc4 adding addrExp r28{0} - 60 to local table
TYPE ERROR: Existing type at address 0xffffffc4 is not structure or array type
in proc proc4 adding addrExp r28{0} - 64 to local table
TYPE ERROR: Existing type at address 0xffffffc0 is not structure or array type
in proc proc4 adding addrExp r28{0} - 68 to local table
TYPE ERROR: Existing type at address 0xffffffbc is not structure or array type
in proc proc4 adding addrExp r28{0} - 196 to local table
TYPE ERROR: Existing type at address 0xffffff3c is not structure or array type
in proc proc4 adding addrExp r28{0} - 200 to local table
TYPE ERROR: Existing type at address 0xffffff38 is not structure or array type
in proc proc4 adding addrExp r28{0} - 208 to local table
TYPE ERROR: Existing type at address 0xffffff30 is not structure or array type
in proc proc4 adding addrExp r28{0} - 212 to local table
TYPE ERROR: Existing type at address 0xffffff2c is not structure or array type
in proc proc4 adding addrExp r28{0} - 216 to local table
TYPE ERROR: Existing type at address 0xffffff28 is not structure or array type
in proc proc4 adding addrExp r28{0} - 220 to local table
TYPE ERROR: Existing type at address 0xffffff24 is not structure or array type
in proc proc4 adding addrExp r28{0} - 224 to local table
TYPE ERROR: Existing type at address 0xffffff20 is not structure or array type
in proc proc4 adding addrExp r28{0} - 228 to local table
TYPE ERROR: Existing type at address 0xffffff1c is not structure or array type
in proc proc4 adding addrExp r28{0} - 232 to local table
TYPE ERROR: Existing type at address 0xffffff18 is not structure or array type
in proc proc4 adding addrExp r28{0} - 236 to local table
TYPE ERROR: Existing type at address 0xffffff14 is not structure or array type
in proc proc4 adding addrExp r28{0} - 4 to local table
in proc proc4 adding addrExp r28{0} - 8 to local table
TYPE ERROR: Existing type at address 0xfffffff8 is not structure or array type
in proc proc4 adding addrExp r28{0} - 20 to local table
TYPE ERROR: Existing type at address 0xffffffec is not structure or array type
in proc proc4 adding addrExp r28{0} - 24 to local table
TYPE ERROR: Existing type at address 0xffffffe8 is not structure or array type
in proc proc4 adding addrExp r28{0} - 44 to local table
TYPE ERROR: Existing type at address 0xffffffd4 is not structure or array type
in proc proc4 adding addrExp r28{0} - 60 to local table
TYPE ERROR: Existing type at address 0xffffffc4 is not structure or array type
in proc proc4 adding addrExp r28{0} - 64 to local table
TYPE ERROR: Existing type at address 0xffffffc0 is not structure or array type
in proc proc4 adding addrExp r28{0} - 68 to local table
TYPE ERROR: Existing type at address 0xffffffbc is not structure or array type
in proc proc4 adding addrExp r28{0} - 196 to local table
TYPE ERROR: Existing type at address 0xffffff3c is not structure or array type
in proc proc4 adding addrExp r28{0} - 200 to local table
TYPE ERROR: Existing type at address 0xffffff38 is not structure or array type
in proc proc4 adding addrExp r28{0} - 208 to local table
TYPE ERROR: Existing type at address 0xffffff30 is not structure or array type
in proc proc4 adding addrExp r28{0} - 212 to local table
TYPE ERROR: Existing type at address 0xffffff2c is not structure or array type
in proc proc4 adding addrExp r28{0} - 216 to local table
TYPE ERROR: Existing type at address 0xffffff28 is not structure or array type
in proc proc4 adding addrExp r28{0} - 220 to local table
TYPE ERROR: Existing type at address 0xffffff24 is not structure or array type
in proc proc4 adding addrExp r28{0} - 224 to local table
TYPE ERROR: Existing type at address 0xffffff20 is not structure or array type
in proc proc4 adding addrExp r28{0} - 228 to local table
TYPE ERROR: Existing type at address 0xffffff1c is not structure or array type
in proc proc4 adding addrExp r28{0} - 232 to local table
TYPE ERROR: Existing type at address 0xffffff18 is not structure or array type
in proc proc4 adding addrExp r28{0} - 236 to local table
TYPE ERROR: Existing type at address 0xffffff14 is not structure or array type
finding final parameters for proc4
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
assgn   21 *32* %pc := m[0x401010]
is readonly
assgn   27 *32* %pc := m[0x40100c]
is readonly
assgn   46 *32* %pc := m[0x401008]
is readonly
assgn   65 *32* %pc := m[0x401004]
is readonly
assgn   83 *32* %pc := m[0x401010]
is readonly
assgn   89 *32* %pc := m[0x40100c]
is readonly
assgn  115 *32* %pc := m[0x401010]
is readonly
assgn  121 *32* %pc := m[0x40100c]
is readonly
assgn  145 *32* %pc := m[0x401000]
is readonly
assgn  170 *32* %pc := m[0x401000]
is readonly
assgn  199 *32* r25 := m[0x40640c]
assgn  242 *32* r26 := m[0x40640c]
assgn  249 *32* r31 := m[0x406400]
assgn  250 *32* r27 := m[0x406408]
assgn  251 *32* r28 := m[0x406404]
assgn  252 *32* r30 := m[0x4063f8]
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
in proc _start adding addrExp r28{0} - 4 to local table
in proc _start adding addrExp r28{0} - 152 to local table
in proc _start adding addrExp r28{0} - 156 to local table
in proc _start adding addrExp r28{0} - 160 to local table
in proc _start adding addrExp r28{0} - 140 to local table
in proc _start adding addrExp r28{0} - 120 to local table
in proc _start adding addrExp r28{0} - 164 to local table
in proc _start adding addrExp r28{0} - 168 to local table
in proc _start adding addrExp r28{0} - 172 to local table
in proc _start adding addrExp r28{0} - 168 to local table
in proc _start adding addrExp r28{0} - 172 to local table
in proc _start adding addrExp r28{0} - 128 to local table
in proc _start adding addrExp r28{0} - 164 to local table
in proc _start adding addrExp r28{0} - 168 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffff58 existing type HANDLE but added type /*signed?*/int
in proc _start adding addrExp r28{0} - 172 to local table
in proc _start adding addrExp r28{0} - 4 to local table
in proc _start adding addrExp r28{0} - 120 to local table
TYPE ERROR: Existing type at address 0xffffff88 is not structure or array type
in proc _start adding addrExp r28{0} - 128 to local table
TYPE ERROR: Existing type at address 0xffffff80 is not structure or array type
in proc _start adding addrExp r28{0} - 140 to local table
TYPE ERROR: Existing type at address 0xffffff74 is not structure or array type
in proc _start adding addrExp r28{0} - 152 to local table
TYPE ERROR: Existing type at address 0xffffff68 is not structure or array type
in proc _start adding addrExp r28{0} - 156 to local table
TYPE ERROR: Existing type at address 0xffffff64 is not structure or array type
in proc _start adding addrExp r28{0} - 160 to local table
TYPE ERROR: Existing type at address 0xffffff60 is not structure or array type
in proc _start adding addrExp r28{0} - 164 to local table
TYPE ERROR: Existing type at address 0xffffff5c is not structure or array type
in proc _start adding addrExp r28{0} - 168 to local table
TYPE ERROR: Existing type at address 0xffffff58 is not structure or array type
in proc _start adding addrExp r28{0} - 172 to local table
TYPE ERROR: Existing type at address 0xffffff54 is not structure or array type
finding final parameters for _start
potential param r28
found new parameter r28
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc2 ###
in proc proc2 adding addrExp r28{0} - 28 to local table
in proc proc2 adding addrExp r28{0} - 164 to local table
in proc proc2 adding addrExp r28{0} - 168 to local table
in proc proc2 adding addrExp r28{0} - 16 to local table
in proc proc2 adding addrExp r28{0} - 32 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 160 to local table
in proc proc2 adding addrExp r28{0} - 24 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 24 to local table
in proc proc2 adding addrExp r28{0} - 28 to local table
in proc proc2 adding addrExp r28{0} - 160 to local table
in proc proc2 adding addrExp r28{0} - 164 to local table
in proc proc2 adding addrExp r28{0} - 168 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 24 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 160 to local table
in proc proc2 adding addrExp r28{0} - 164 to local table
in proc proc2 adding addrExp r28{0} - 168 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 28 to local table
in proc proc2 adding addrExp r28{0} - 28 to local table
in proc proc2 adding addrExp r28{0} - 24 to local table
in proc proc2 adding addrExp r28{0} - 28 to local table
in proc proc2 adding addrExp r28{0} - 24 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 24 to local table
in proc proc2 adding addrExp r28{0} - 28 to local table
in proc proc2 adding addrExp r28{0} - 160 to local table
in proc proc2 adding addrExp r28{0} - 164 to local table
in proc proc2 adding addrExp r28{0} - 168 to local table
in proc proc2 adding addrExp r28{0} - 24 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 24 to local table
in proc proc2 adding addrExp r28{0} - 28 to local table
in proc proc2 adding addrExp r28{0} - 160 to local table
in proc proc2 adding addrExp r28{0} - 164 to local table
in proc proc2 adding addrExp r28{0} - 168 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc3 ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc4 ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc5 ###
in proc proc8 adding addrExp r28{0} - 8 to local table
in proc proc8 adding addrExp r28{0} - 16 to local table
in proc proc8 adding addrExp r28{0} - 8 to local table
in proc proc8 adding addrExp r28{0} - 16 to local table
in proc proc8 adding addrExp r28{0} - 20 to local table
in proc proc8 adding addrExp r28{0} - 8 to local table
in proc proc8 adding addrExp r28{0} - 16 to local table
finding final parameters for _start
potential param r28
found new parameter r28
finding final parameters for proc1
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for _start
potential param r28
found new parameter r28
finding final parameters for proc2
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} - 28]
found new parameter m[r28{0} - 28]
potential param m[r28{0} - 164]
found new parameter m[r28{0} - 164]
potential param m[r28{0} - 168]
found new parameter m[r28{0} - 168]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} - 16]
found new parameter m[r28{0} - 16]
potential param m[r28{0} - 32]
found new parameter m[r28{0} - 32]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
finding final parameters for _start
potential param r28
found new parameter r28
finding final parameters for proc3
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
finding final parameters for _start
potential param r28
found new parameter r28
finding final parameters for proc4
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for _start
potential param r28
found new parameter r28
finding final parameters for proc5
potential param r28
found new parameter r28
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
finding final parameters for proc3
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
finding final parameters for proc4
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for proc6
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for proc4
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for proc7
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for proc4
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for proc8
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for proc2
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} - 28]
found new parameter m[r28{0} - 28]
potential param m[r28{0} - 164]
found new parameter m[r28{0} - 164]
potential param m[r28{0} - 168]
found new parameter m[r28{0} - 168]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} - 16]
found new parameter m[r28{0} - 16]
potential param m[r28{0} - 32]
found new parameter m[r28{0} - 32]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
local esp has type unsigned int that doesn't agree with type of define void of a library, why?
local eax has type HANDLE that doesn't agree with type of define __size32 of a library, why?
local ecx has type void that doesn't agree with type of define __size32 of a library, why?
local edx has type void that doesn't agree with type of define __size32 of a library, why?
local esp has type void that doesn't agree with type of define __size32 * of a library, why?
local ecx has type __size32 that doesn't agree with type of define void of a library, why?
local edx has type __size32 that doesn't agree with type of define void of a library, why?
local esp has type __size32 * that doesn't agree with type of define void of a library, why?
local esp has type void that doesn't agree with type of define void * of a library, why?
local esp has type __size32 that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local eax has type unsigned char * that doesn't agree with type of define __size32 of a library, why?
local ecx has type unsigned char * that doesn't agree with type of define __size32 of a library, why?
local edx has type unsigned char * that doesn't agree with type of define __size32 of a library, why?
local ecx has type __size32 that doesn't agree with type of define void of a library, why?
local edx has type __size32 that doesn't agree with type of define void of a library, why?
local esp has type __size32 that doesn't agree with type of define void of a library, why?
local eax has type HANDLE that doesn't agree with type of define __size32 of a library, why?
local edx has type void that doesn't agree with type of define __size32 of a library, why?
local eax has type HANDLE that doesn't agree with type of define __size32 of a library, why?
local ecx has type unsigned int that doesn't agree with type of define void of a library, why?
local edx has type __size32 that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local esp has type __size32 that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local edx has type unsigned int that doesn't agree with type of define __size32 of a library, why?
dest is not lib
call:   22 {*HANDLE* eax, *v* ecx, *v* edx, *v* esp} := CALL LoadLibraryA(
                *LPCSTR* local0 := "kernel32.dll"
              )
              Reaching definitions: r9=r9{0},   r10=r10{0},   r27=r27{0},   r28=r28{0} - 172,   r29=r28{0} - 4,
                r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 120]=1,   m[r28{0} - 140]=0,
                m[r28{0} - 152]=r27{0},   m[r28{0} - 156]=r30{0},   m[r28{0} - 160]=r31{0},   m[r28{0} - 164]=0x406280,
                m[r28{0} - 168]=0x406298,   m[r28{0} - 172]=%pc,   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 144, r28{0} - 148 ),   %ZF=(r28{0} - 148) = 0,   %CF=(r28{0} - 4) <u 144
              Live variables: eax in proc _start
result:    0 *HANDLE* eax := -
dest is not lib
call:   28 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local0 := eax
                *c** local1 := "GetWindowsDirectoryA"
              )
              Reaching definitions: r9=r9{0},   r10=r10{0},   r24=r24{22},   r25=r25{22},   r26=r26{22},   r27=r27{0},
                r28=r28{0} - 172,   r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 120]=1,   m[r28{0} - 140]=0,   m[r28{0} - 152]=r27{0},   m[r28{0} - 156]=r30{0},
                m[r28{0} - 160]=r31{0},   m[r28{0} - 164]=0x406280,   m[r28{0} - 168]=r24{22},   m[r28{0} - 172]=%pc,
                tmp1=r28{0} - 4,   %flags=SUBFLAGS32( r28{0} - 4, 144, r28{0} - 148 ),   %ZF=(r28{0} - 148) = 0,
                %CF=(r28{0} - 4) <u 144
              Live variables: eax,  ecx,  edx in proc _start
result:    0 *32* eax := -
result:    0 *v* ecx := -
result:    0 *v* edx := -
dest is not lib
call:   47 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL lstrcatA(
                *LPSTR* m[esp - 8] := m[esp - 8]
                *LPSTR* local10 := m[esp - 4]
              )
              Reaching definitions: r9=r9{38},   r10=r10{38},   r24=r24{38},   r25=r29{38} - 112,   r26=r26{38},
                r27=r27{38},   r28=r28{38} - 12,   r29=r29{38},   r30=r30{38},   r31=r31{38},
                m[r28{0} - 4]=m[r28{0} - 4]{38},   m[r28{0} - 120]=m[r28{0} - 120]{38},
                m[r28{0} - 128]=m[r28{0} - 128]{38},   m[r28{0} - 140]=m[r28{0} - 140]{38},
                m[r28{0} - 152]=m[r28{0} - 152]{38},   m[r28{0} - 156]=m[r28{0} - 156]{38},
                m[r28{0} - 160]=m[r28{0} - 160]{38},   m[r28{0} - 164]=m[r28{0} - 164]{38},
                m[r28{0} - 168]=m[r28{0} - 168]{38},   m[r28{0} - 172]=m[r28{0} - 172]{38},
                m[r28{0} - 4]=m[r28{0} - 4]{38},   m[r28{0} - 120]=m[r28{0} - 120]{38},
                m[r28{0} - 128]=m[r28{0} - 128]{38},   m[r28{0} - 140]=m[r28{0} - 140]{38},
                m[r28{0} - 152]=m[r28{0} - 152]{38},   m[r28{0} - 156]=m[r28{0} - 156]{38},
                m[r28{0} - 160]=m[r28{0} - 160]{38},   m[r28{0} - 164]=m[r28{0} - 164]{38},
                m[r28{0} - 168]=m[r28{0} - 168]{38},   m[r28{0} - 172]=m[r28{0} - 172]{38},   <all>=<all>{38},
                tmp1=tmp1{38},   %flags=%flags{38},   %ZF=%ZF{38},   %CF=%CF{38}
              Live variables:  in proc _start
dest is not lib
call:   66 {*32* eax, *32* ecx, *32* edx, *32** esp} := CALL CreateFileA(
              )
              Reaching definitions: r9=r9{38},   r10=r10{38},   r24=r24{47},   r25=r25{47},   r26=r29{38} - 112,
                r27=r27{38},   r28=r28{38} - 32,   r29=r29{38},   r30=r30{38},   r31=r31{38},
                m[r28{0} - 4]=m[r28{0} - 4]{38},   m[r28{0} - 120]=m[r28{0} - 120]{38},
                m[r28{0} - 128]=m[r28{0} - 128]{38},   m[r28{0} - 140]=m[r28{0} - 140]{38},
                m[r28{0} - 152]=m[r28{0} - 152]{38},   m[r28{0} - 156]=m[r28{0} - 156]{38},
                m[r28{0} - 160]=m[r28{0} - 160]{38},   m[r28{0} - 164]=m[r28{0} - 164]{38},
                m[r28{0} - 168]=m[r28{0} - 168]{38},   m[r28{0} - 172]=m[r28{0} - 172]{38},
                m[r28{0} - 4]=m[r28{0} - 4]{38},   m[r28{0} - 120]=m[r28{0} - 120]{38},
                m[r28{0} - 128]=m[r28{0} - 128]{38},   m[r28{0} - 140]=m[r28{0} - 140]{38},
                m[r28{0} - 152]=m[r28{0} - 152]{38},   m[r28{0} - 156]=m[r28{0} - 156]{38},
                m[r28{0} - 160]=m[r28{0} - 160]{38},   m[r28{0} - 164]=m[r28{0} - 164]{38},
                m[r28{0} - 168]=m[r28{0} - 168]{38},   m[r28{0} - 172]=m[r28{0} - 172]{38},   <all>=<all>{38},
                tmp1=tmp1{38},   %flags=%flags{38},   %ZF=%ZF{38},   %CF=%CF{38}
              Live variables: eax in proc _start
result:    0 *32* eax := -
dest is not lib
call:   84 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL LoadLibraryA(
                *LPCSTR* m[esp - 36] := m[esp - 36]
              )
              Reaching definitions: r9=r9{38},   r10=r10{38},   r24=r24{66},   r25=r25{66},   r26=r26{66},
                r27=r27{38},   r28=r28{38} - 40,   r29=r29{38},   r30=r30{38},   r31=r31{38},
                m[r28{0} - 4]=m[r28{0} - 4]{38},   m[r28{0} - 120]=m[r28{0} - 120]{38},
                m[r28{0} - 128]=m[r28{0} - 128]{38},   m[r28{0} - 140]=m[r28{0} - 140]{38},
                m[r28{0} - 152]=m[r28{0} - 152]{38},   m[r28{0} - 156]=m[r28{0} - 156]{38},
                m[r28{0} - 160]=m[r28{0} - 160]{38},   m[r28{0} - 164]=m[r28{0} - 164]{38},
                m[r28{0} - 168]=m[r28{0} - 168]{38},   m[r28{0} - 172]=m[r28{0} - 172]{38},
                m[r28{0} - 4]=m[r28{0} - 4]{38},   m[r28{0} - 120]=m[r28{0} - 120]{38},
                m[r28{0} - 128]=m[r28{0} - 128]{38},   m[r28{0} - 140]=m[r28{0} - 140]{38},
                m[r28{0} - 152]=m[r28{0} - 152]{38},   m[r28{0} - 156]=m[r28{0} - 156]{38},
                m[r28{0} - 160]=m[r28{0} - 160]{38},   m[r28{0} - 164]=m[r28{0} - 164]{38},
                m[r28{0} - 168]=m[r28{0} - 168]{38},   m[r28{0} - 172]=m[r28{0} - 172]{38},   <all>=<all>{38},
                tmp1=tmp1{71},   %flags=SUBFLAGS32( m[r29{38} - 120], 0, tmp1{71} ),   %ZF=tmp1{71} = 0,
                %CF=m[r29{38} - 120] <u 0
              Live variables: eax in proc _start
result:    0 *32* eax := -
dest is not lib
call:   90 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* m[esp - 36] := m[esp - 36]
                *c** m[esp - 32] := m[esp - 32]
              )
              Reaching definitions: r9=r9{38},   r10=r10{38},   r24=r24{84},   r25=r25{84},   r26=r26{84},
                r27=r27{38},   r28=r28{38} - 40,   r29=r29{38},   r30=r30{38},   r31=r31{38},
                m[r28{0} - 4]=m[r28{0} - 4]{38},   m[r28{0} - 120]=m[r28{0} - 120]{38},
                m[r28{0} - 128]=m[r28{0} - 128]{38},   m[r28{0} - 140]=m[r28{0} - 140]{38},
                m[r28{0} - 152]=m[r28{0} - 152]{38},   m[r28{0} - 156]=m[r28{0} - 156]{38},
                m[r28{0} - 160]=m[r28{0} - 160]{38},   m[r28{0} - 164]=m[r28{0} - 164]{38},
                m[r28{0} - 168]=m[r28{0} - 168]{38},   m[r28{0} - 172]=m[r28{0} - 172]{38},
                m[r28{0} - 4]=m[r28{0} - 4]{38},   m[r28{0} - 120]=m[r28{0} - 120]{38},
                m[r28{0} - 128]=m[r28{0} - 128]{38},   m[r28{0} - 140]=m[r28{0} - 140]{38},
                m[r28{0} - 152]=m[r28{0} - 152]{38},   m[r28{0} - 156]=m[r28{0} - 156]{38},
                m[r28{0} - 160]=m[r28{0} - 160]{38},   m[r28{0} - 164]=m[r28{0} - 164]{38},
                m[r28{0} - 168]=m[r28{0} - 168]{38},   m[r28{0} - 172]=m[r28{0} - 172]{38},   <all>=<all>{38},
                tmp1=tmp1{71},   %flags=SUBFLAGS32( m[r29{38} - 120], 0, tmp1{71} ),   %ZF=tmp1{71} = 0,
                %CF=m[r29{38} - 120] <u 0
              Live variables: eax,  ecx,  edx in proc _start
result:    0 *32* eax := -
result:    0 *v* ecx := -
result:    0 *v* edx := -
dest is not lib
call:  116 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL LoadLibraryA(
                *LPCSTR* m[esp - 8] := m[esp - 8]
              )
              Reaching definitions: r9=r9{102},   r10=r10{102},   r24=r24{102},   r25=r25{102},   r26=r26{102},
                r27=r27{102},   r28=r28{102} - 12,   r29=r29{102},   r30=r30{102},   r31=r31{102},
                m[r28{0} - 4]=m[r28{0} - 4]{102},   m[r28{0} - 120]=m[r28{0} - 120]{102},
                m[r28{0} - 128]=m[r28{0} - 128]{102},   m[r28{0} - 140]=m[r28{0} - 140]{102},
                m[r28{0} - 152]=m[r28{0} - 152]{102},   m[r28{0} - 156]=m[r28{0} - 156]{102},
                m[r28{0} - 160]=m[r28{0} - 160]{102},   m[r28{0} - 164]=m[r28{0} - 164]{102},
                m[r28{0} - 168]=m[r28{0} - 168]{102},   m[r28{0} - 172]=m[r28{0} - 172]{102},
                m[r28{0} - 4]=m[r28{0} - 4]{102},   m[r28{0} - 120]=m[r28{0} - 120]{102},
                m[r28{0} - 128]=m[r28{0} - 128]{102},   m[r28{0} - 140]=m[r28{0} - 140]{102},
                m[r28{0} - 152]=m[r28{0} - 152]{102},   m[r28{0} - 156]=m[r28{0} - 156]{102},
                m[r28{0} - 160]=m[r28{0} - 160]{102},   m[r28{0} - 164]=m[r28{0} - 164]{102},
                m[r28{0} - 168]=m[r28{0} - 168]{102},   m[r28{0} - 172]=m[r28{0} - 172]{102},   <all>=<all>{102},
                tmp1=r24{102},   %flags=LOGICALFLAGS32( r24{102} ),   %ZF=LOGICALFLAGS32( r24{102} ),
                %CF=LOGICALFLAGS32( r24{102} )
              Live variables: eax in proc _start
result:    0 *32* eax := -
dest is not lib
call:  122 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* m[esp - 8] := m[esp - 8]
                *c** local10 := m[esp - 4]
              )
              Reaching definitions: r9=r9{102},   r10=r10{102},   r24=r24{116},   r25=r25{116},   r26=r26{116},
                r27=r27{102},   r28=r28{102} - 12,   r29=r29{102},   r30=r30{102},   r31=r31{102},
                m[r28{0} - 4]=m[r28{0} - 4]{102},   m[r28{0} - 120]=m[r28{0} - 120]{102},
                m[r28{0} - 128]=m[r28{0} - 128]{102},   m[r28{0} - 140]=m[r28{0} - 140]{102},
                m[r28{0} - 152]=m[r28{0} - 152]{102},   m[r28{0} - 156]=m[r28{0} - 156]{102},
                m[r28{0} - 160]=m[r28{0} - 160]{102},   m[r28{0} - 164]=m[r28{0} - 164]{102},
                m[r28{0} - 168]=m[r28{0} - 168]{102},   m[r28{0} - 172]=m[r28{0} - 172]{102},
                m[r28{0} - 4]=m[r28{0} - 4]{102},   m[r28{0} - 120]=m[r28{0} - 120]{102},
                m[r28{0} - 128]=m[r28{0} - 128]{102},   m[r28{0} - 140]=m[r28{0} - 140]{102},
                m[r28{0} - 152]=m[r28{0} - 152]{102},   m[r28{0} - 156]=m[r28{0} - 156]{102},
                m[r28{0} - 160]=m[r28{0} - 160]{102},   m[r28{0} - 164]=m[r28{0} - 164]{102},
                m[r28{0} - 168]=m[r28{0} - 168]{102},   m[r28{0} - 172]=m[r28{0} - 172]{102},   <all>=<all>{102},
                tmp1=r24{102},   %flags=LOGICALFLAGS32( r24{102} ),   %ZF=LOGICALFLAGS32( r24{102} ),
                %CF=LOGICALFLAGS32( r24{102} )
              Live variables: eax,  edx in proc _start
result:    0 *32* eax := -
result:    0 *v* edx := -
dest is not lib
call:  146 {*32* eax, *v* ecx, *v* edx, *v** esp} := CALL GetModuleHandleA(
              )
              Reaching definitions: r9=r9{134},   r10=r10{134},   r24=r24{134},   r25=r25{134},   r26=r26{134},
                r27=r27{134},   r28=r28{134} - 8,   r29=r29{134},   r30=r30{134},   r31=r31{134},
                m[r28{0} - 4]=m[r28{0} - 4]{134},   m[r28{0} - 120]=m[r28{0} - 120]{134},
                m[r28{0} - 128]=m[r28{0} - 128]{134},   m[r28{0} - 140]=m[r28{0} - 140]{134},
                m[r28{0} - 152]=m[r28{0} - 152]{134},   m[r28{0} - 156]=m[r28{0} - 156]{134},
                m[r28{0} - 160]=m[r28{0} - 160]{134},   m[r28{0} - 164]=m[r28{0} - 164]{134},
                m[r28{0} - 168]=m[r28{0} - 168]{134},   m[r28{0} - 172]=m[r28{0} - 172]{134},
                m[r28{0} - 4]=m[r28{0} - 4]{134},   m[r28{0} - 120]=m[r28{0} - 120]{134},
                m[r28{0} - 128]=m[r28{0} - 128]{134},   m[r28{0} - 140]=m[r28{0} - 140]{134},
                m[r28{0} - 152]=m[r28{0} - 152]{134},   m[r28{0} - 156]=m[r28{0} - 156]{134},
                m[r28{0} - 160]=m[r28{0} - 160]{134},   m[r28{0} - 164]=m[r28{0} - 164]{134},
                m[r28{0} - 168]=m[r28{0} - 168]{134},   m[r28{0} - 172]=m[r28{0} - 172]{134},   <all>=<all>{134},
                tmp1=r24{134},   %flags=LOGICALFLAGS32( r24{134} ),   %ZF=LOGICALFLAGS32( r24{134} ),
                %CF=LOGICALFLAGS32( r24{134} )
              Live variables: eax,  esp in proc _start
result:    0 *32* eax := -
result:    0 *v** esp := -
dest is not lib
call:  171 {*32* eax, *v* ecx, *v* edx, *v** esp} := CALL GetModuleHandleA(
              )
              Reaching definitions: r9=r9{134},   r10=r10{134},   r24=r24{273},   r25=r25{162},   r26=r26{275},
                r27=r27{134},   r28=r28{276} - 8,   r29=r29{134},   r30=r30{134},   r31=r31{134},
                m[r28{0} - 4]=m[r28{0} - 4]{134},   m[r28{0} - 120]=m[r28{0} - 120]{134},
                m[r28{0} - 128]=m[r28{0} - 128]{134},   m[r28{0} - 140]=m[r28{0} - 140]{134},
                m[r28{0} - 152]=m[r28{0} - 152]{134},   m[r28{0} - 156]=m[r28{0} - 156]{134},
                m[r28{0} - 160]=m[r28{0} - 160]{134},   m[r28{0} - 164]=m[r28{0} - 164]{134},
                m[r28{0} - 168]=m[r28{0} - 168]{134},   m[r28{0} - 172]=m[r28{0} - 172]{134},
                m[r28{0} - 4]=m[r28{0} - 4]{134},   m[r28{0} - 120]=m[r28{0} - 120]{134},
                m[r28{0} - 128]=m[r28{0} - 128]{134},   m[r28{0} - 140]=m[r28{0} - 140]{134},
                m[r28{0} - 152]=m[r28{0} - 152]{134},   m[r28{0} - 156]=m[r28{0} - 156]{134},
                m[r28{0} - 160]=m[r28{0} - 160]{134},   m[r28{0} - 164]=m[r28{0} - 164]{134},
                m[r28{0} - 168]=m[r28{0} - 168]{134},   m[r28{0} - 172]=m[r28{0} - 172]{134},   <all>=<all>{134},
                tmp1=tmp1{163},   %flags=SUBFLAGS32( r25{162}, m[r29{134} - 140], tmp1{163} ),   %ZF=tmp1{163} = 0,
                %CF=r25{162} <u m[r29{134} - 140]
              Live variables: esp in proc _start
result:    0 *v** esp := -
dest is not lib
call:  191 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL proc1(
                *DWORD* local10 := m[esp - 4]
              )
              Reaching definitions: r9=r9{134},   r10=r10{134},   r24=r24{273},   r25=r25{162},   r26=r26{185},
                r27=r27{134},   r28=r28{276} - 8,   r29=r29{134},   r30=r30{134},   r31=r31{134},
                m[r28{0} - 4]=m[r28{0} - 4]{134},   m[r28{0} - 120]=m[r28{0} - 120]{134},
                m[r28{0} - 128]=m[r28{0} - 128]{134},   m[r28{0} - 140]=m[r28{0} - 140]{134},
                m[r28{0} - 152]=m[r28{0} - 152]{134},   m[r28{0} - 156]=m[r28{0} - 156]{134},
                m[r28{0} - 160]=m[r28{0} - 160]{134},   m[r28{0} - 164]=m[r28{0} - 164]{134},
                m[r28{0} - 168]=m[r28{0} - 168]{134},   m[r28{0} - 172]=m[r28{0} - 172]{134},
                m[r28{0} - 4]=m[r28{0} - 4]{134},   m[r28{0} - 120]=m[r28{0} - 120]{134},
                m[r28{0} - 128]=m[r28{0} - 128]{134},   m[r28{0} - 140]=m[r28{0} - 140]{134},
                m[r28{0} - 152]=m[r28{0} - 152]{134},   m[r28{0} - 156]=m[r28{0} - 156]{134},
                m[r28{0} - 160]=m[r28{0} - 160]{134},   m[r28{0} - 164]=m[r28{0} - 164]{134},
                m[r28{0} - 168]=m[r28{0} - 168]{134},   m[r28{0} - 172]=m[r28{0} - 172]{134},   <all>=<all>{134},
                tmp1=tmp1{163},   %flags=SUBFLAGS32( r25{162}, m[r29{134} - 140], tmp1{163} ),   %ZF=tmp1{163} = 0,
                %CF=r25{162} <u m[r29{134} - 140]
              Live variables: eax in proc _start
result:    0 *32* eax := -
dest is not lib
call:  211 {*32* eax, *v* ecx, *32* edx, *v* esp} := CALL proc2(
                *u32* m[esp - 184] := m[esp - 184]
                *j32* m[esp - 180] := m[esp - 180]
                *u32* m[esp - 48] := m[esp - 48]
                *u32* m[esp - 44] := m[esp - 44]
                *u32* m[esp - 32] := m[esp - 32]
                *u8** m[esp - 12] := m[esp - 12]
                *v** m[esp - 8] := m[esp - 8]
                *u32* local10 := m[esp - 4]
              )
              Reaching definitions: r9=r9{134},   r10=r10{134},   r24=r24{196},   r25=global75,   r26=r26{202} + 8,
                r27=r27{134},   r28=r28{276} - 16,   r29=r29{134},   r30=r30{134},   r31=r31{134},
                m[r28{0} - 4]=m[r28{0} - 4]{134},   m[r28{0} - 120]=m[r28{0} - 120]{134},
                m[r28{0} - 128]=m[r28{0} - 128]{134},   m[r28{0} - 140]=m[r28{0} - 140]{134},
                m[r28{0} - 152]=m[r28{0} - 152]{134},   m[r28{0} - 156]=m[r28{0} - 156]{134},
                m[r28{0} - 160]=m[r28{0} - 160]{134},   m[r28{0} - 164]=m[r28{0} - 164]{134},
                m[r28{0} - 168]=m[r28{0} - 168]{134},   m[r28{0} - 172]=m[r28{0} - 172]{134},
                m[r28{0} - 4]=m[r28{0} - 4]{134},   m[r28{0} - 120]=m[r28{0} - 120]{134},
                m[r28{0} - 128]=m[r28{0} - 128]{134},   m[r28{0} - 140]=m[r28{0} - 140]{134},
                m[r28{0} - 152]=m[r28{0} - 152]{134},   m[r28{0} - 156]=m[r28{0} - 156]{134},
                m[r28{0} - 160]=m[r28{0} - 160]{134},   m[r28{0} - 164]=m[r28{0} - 164]{134},
                m[r28{0} - 168]=m[r28{0} - 168]{134},   m[r28{0} - 172]=m[r28{0} - 172]{134},   <all>=<all>{134},
                tmp1=r26{202},   %flags=ADDFLAGS32( r26{202}, 8, r26{202} + 8 ),
                %ZF=ADDFLAGS32( r26{202}, 8, r26{202} + 8 ),   %CF=ADDFLAGS32( r26{202}, 8, r26{202} + 8 )
              Live variables:  in proc _start
dest is not lib
call:  238 {*32* eax, *32* esi, *32* ecx, *32* edx, *u32** esp, *32* ebp} := CALL proc3(
                *32* local10 := m[esp - 4]
              )
              Reaching definitions: r9=r9{211},   r10=r10{211},   r24=r24{226},   r25=r25{231},   r26=r26{211},
                r27=r27{134},   r28=(r28{276} - 16) + 4,   r29=r29{134},   r30=r30{134},   r31=r31{134},
                m[r28{0} - 4]=m[r28{0} - 4]{134},   m[r28{0} - 120]=m[r28{0} - 120]{134},
                m[r28{0} - 128]=m[r28{0} - 128]{134},   m[r28{0} - 140]=m[r28{0} - 140]{134},
                m[r28{0} - 152]=m[r28{0} - 152]{134},   m[r28{0} - 156]=m[r28{0} - 156]{134},
                m[r28{0} - 160]=m[r28{0} - 160]{134},   m[r28{0} - 164]=m[r28{0} - 164]{134},
                m[r28{0} - 168]=m[r28{0} - 168]{134},   m[r28{0} - 172]=m[r28{0} - 172]{134},
                m[r28{0} - 4]=m[r28{0} - 4]{134},   m[r28{0} - 120]=m[r28{0} - 120]{134},
                m[r28{0} - 128]=m[r28{0} - 128]{134},   m[r28{0} - 140]=m[r28{0} - 140]{134},
                m[r28{0} - 152]=m[r28{0} - 152]{134},   m[r28{0} - 156]=m[r28{0} - 156]{134},
                m[r28{0} - 160]=m[r28{0} - 160]{134},   m[r28{0} - 164]=m[r28{0} - 164]{134},
                m[r28{0} - 168]=m[r28{0} - 168]{134},   m[r28{0} - 172]=m[r28{0} - 172]{134},   <all>=<all>{134},
                tmp1=r25{229},   %flags=SUBFLAGS32( r25{229}, m[r29{134} - 128], r25{231} ),   %ZF=r25{231} = 0,
                %CF=r25{229} <u m[r29{134} - 128]
              Live variables: esp in proc _start
result:    0 *u32** esp := -
dest is not lib
call:  248 {*32* eax, *v* ecx, *v* edx, *v* esp, *32* ebp} := CALL proc4(
                *32* m[esp + 4] := m[esp + 4]
              )
              Reaching definitions: r9=r9{238},   r10=r10{211},   r24=r24{238},   r25=r25{238},   r26=global75,
                r27=r27{134},   r28=r28{238},   r29=r29{238},   r30=r30{238},   r31=r31{134},
                m[r28{0} - 4]=m[r28{0} - 4]{134},   m[r28{0} - 120]=m[r28{0} - 120]{134},
                m[r28{0} - 128]=m[r28{0} - 128]{134},   m[r28{0} - 140]=m[r28{0} - 140]{134},
                m[r28{0} - 152]=m[r28{0} - 152]{134},   m[r28{0} - 156]=m[r28{0} - 156]{134},
                m[r28{0} - 160]=m[r28{0} - 160]{134},   m[r28{0} - 164]=m[r28{0} - 164]{134},
                m[r28{0} - 168]=m[r28{0} - 168]{134},   m[r28{0} - 172]=m[r28{0} - 172]{134},
                m[r28{0} - 4]=m[r28{0} - 4]{134},   m[r28{0} - 120]=m[r28{0} - 120]{134},
                m[r28{0} - 128]=m[r28{0} - 128]{134},   m[r28{0} - 140]=m[r28{0} - 140]{134},
                m[r28{0} - 152]=m[r28{0} - 152]{134},   m[r28{0} - 156]=m[r28{0} - 156]{134},
                m[r28{0} - 160]=m[r28{0} - 160]{134},   m[r28{0} - 164]=m[r28{0} - 164]{134},
                m[r28{0} - 168]=m[r28{0} - 168]{134},   m[r28{0} - 172]=m[r28{0} - 172]{134},   <all>=<all>{134},
                tmp1=r28{238},   %flags=ADDFLAGS32( r28{238}, 8, r28{238} + 8 ),
                %ZF=ADDFLAGS32( r28{238}, 8, r28{238} + 8 ),   %CF=ADDFLAGS32( r28{238}, 8, r28{238} + 8 )
              Live variables:  in proc _start
dest is not lib
call:   19 {*32* eax, *32* r25, *32* r26} := CALL VirtualAlloc(
                *LPVOID* local0 := 0
                *DWORD* local1 := param1
                *DWORD* local2 := 0x3000
                *DWORD* local3 := 4
              )
              Reaching definitions: r24=m[r28{0} + 4]{0},   r25=r25{0},   r28=r28{0} - 28,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=1,   m[r28{0} - 12]=4,
                m[r28{0} - 16]=0x3000,   m[r28{0} - 20]=m[r28{0} + 4]{0},   m[r28{0} - 24]=0,   m[r28{0} - 28]=%pc
              Live variables: eax in proc proc1
result:    0 *32* eax := -
dest is not lib
call:   21 {*u32* eax_1, *j32* edx_1, *v* esp} := CALL lstrcpyA(
              )
              Reaching definitions: r9=r9{9},   r10=truncu(32,8,r28{0} - 148),   r24=m[r28{0} + 4]{0},
                r25=(r25{0}@31:8) | zfill(8,32,r9{9}),   r26=r28{0} - 148,   r28=r28{0} - 160,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 5]=m[r28{0} - 5]{0},   m[r28{0} - 12]=1,
                m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 17]=r9{9},   m[r28{0} - 28]=m[r28{0} - 28]{0},
                m[r28{0} - 32]=m[r28{0} - 32]{0},   m[r28{0} - 152]=0x4063c4,   m[r28{0} - 156]=r28{0} - 148,
                m[r28{0} - 160]=%pc,   m[r28{0} - 164]=m[r28{0} - 164]{0},   m[r28{0} - 168]=m[r28{0} - 168]{0},
                tmp1=r28{0} - 4,   %flags=SUBFLAGS32( r28{0} - 4, 144, r28{0} - 148 ),   %ZF=(r28{0} - 148) = 0,
                %CF=(r28{0} - 4) <u 144
              Live variables:  in proc proc2
dest is not lib
call:   89 {*u32* eax_1, *v* ecx, *v* edx, *v* esp} := CALL proc8(
                *u32** local4 := a[param5]
                *u8** local6 := edx
              )
              Reaching definitions: r9=truncu(32,8,zfill(8,32,r9{9})),   r10=truncu(32,8,r26{78}),   r24=r28{0} - 16,
                r25=zfill(8,32,r9{9}),   r26=r26{78},   r28=r28{0} - 168,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 5]=r9{27},   m[r28{0} - 12]=m[r28{0} - 12]{36},
                m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 17]=r9{9},   m[r28{0} - 24]=m[r28{0} - 24]{230},
                m[r28{0} - 28]=m[r28{0} - 28]{231},   m[r28{0} - 32]=m[r28{0} - 32]{0},   m[r28{0} - 152]=0x4063c4,
                m[r28{0} - 156]=r28{0} - 148,   m[r28{0} - 160]=r26{78},   m[r28{0} - 164]=r28{0} - 16,
                m[r28{0} - 168]=%pc,   tmp1=m[r28{0} + 4]{0},
                %flags=ADDFLAGS32( m[r28{0} + 4]{0}, m[r28{0} - 12], r26{78} ),
                %ZF=ADDFLAGS32( m[r28{0} + 4]{0}, m[r28{0} - 12], r26{78} ),
                %CF=ADDFLAGS32( m[r28{0} + 4]{0}, m[r28{0} - 12], r26{78} )
              Live variables: eax_1 in proc proc2
result:    0 *u32* eax_1 := -
dest is not lib
call:  112 {*u32* eax_1, *v** ecx, *j32* edx_1, *v* esp} := CALL proc8(
                *u32** local4 := a[param3]
                *u8** local6 := ecx
              )
              Reaching definitions: r9=truncu(32,8,r25{100}),   r10=truncu(32,8,r28{0} - 32),   r24=r24{94},
                r25=r25{100},   r26=r28{0} - 32,   r28=r28{0} - 168,   r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0}
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 5]=r9{27},   m[r28{0} - 12]=r24{94},   m[r28{0} - 16]=m[r28{0} - 16]{0},
                m[r28{0} - 17]=r9{9},   m[r28{0} - 24]=m[r28{0} - 24]{230},   m[r28{0} - 28]=m[r28{0} - 28]{231},
                m[r28{0} - 32]=m[r28{0} - 32]{0},   m[r28{0} - 152]=0x4063c4,   m[r28{0} - 156]=r28{0} - 148,
                m[r28{0} - 160]=r25{100},   m[r28{0} - 164]=r28{0} - 32,   m[r28{0} - 168]=%pc,   tmp1=m[r28{0} + 4]{0}
                %flags=ADDFLAGS32( m[r28{0} + 4]{0}, m[r28{0} - 12], r25{100} ),
                %ZF=ADDFLAGS32( m[r28{0} + 4]{0}, m[r28{0} - 12], r25{100} ),
                %CF=ADDFLAGS32( m[r28{0} + 4]{0}, m[r28{0} - 12], r25{100} )
              Live variables: eax_1 in proc proc2
result:    0 *u32* eax_1 := -
dest is not lib
call:  182 {*32* eax, *32* ecx, *32* edx, *v* esp} := CALL lstrcpyA(
              )
              Reaching definitions: r9=truncu(32,8,m[r28{0} - 12]{243}),   r10=truncu(32,8,r28{0} - 148),
                r24=r24{220},   r25=m[r28{0} - 12]{243},   r26=r28{0} - 148,   r28=r28{0} - 168,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 5]=r9{27},   m[r28{0} - 12]=m[r28{0} - 12]{243},
                m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 17]=r9{9},   m[r28{0} - 24]=m[r28{0} - 24]{244},
                m[r28{0} - 28]=m[r28{0} - 28]{245},   m[r28{0} - 32]=m[r28{0} - 32]{0},   m[r28{0} - 152]=0x4063c4,
                m[r28{0} - 156]=r28{0} - 148,   m[r28{0} - 160]=0x4063dc,   m[r28{0} - 164]=r28{0} - 148,
                m[r28{0} - 168]=%pc,   tmp1=tmp1{170},
                %flags=SUBFLAGS32( m[r28{0} - 12]{243}, m[r28{0} + 12], tmp1{170} ),   %ZF=tmp1{170} = 0,
                %CF=m[r28{0} - 12]{243} <u m[r28{0} + 12]
              Live variables:  in proc proc2
dest is not lib
call:   24 {*HANDLE* eax, *v* ecx, *v* edx, *v* esp} := CALL GetModuleHandleA(
              )
              Reaching definitions: r24=m[r28{0} + 8]{0},   r25=m[r28{0} + 8]{0},   r26=r26{14},   r28=r28{0} - 52,
                r29=r28{0} - 4,   r30=r30{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 20]=r26{14},   m[r28{0} - 36]=m[r28{0} + 8]{0},   m[r28{0} - 40]=r30{0},
                m[r28{0} - 44]=0x406374,   m[r28{0} - 48]=0x406384,   m[r28{0} - 52]=%pc,   tmp1=m[r28{0} + 8]{0},
                %flags=ADDFLAGS32( m[r28{0} + 8]{0}, m[m[r28{0} + 8]{0} + 60], r26{14} ),
                %ZF=ADDFLAGS32( m[r28{0} + 8]{0}, m[m[r28{0} + 8]{0} + 60], r26{14} ),
                %CF=ADDFLAGS32( m[r28{0} + 8]{0}, m[m[r28{0} + 8]{0} + 60], r26{14} )
              Live variables: eax in proc proc3
result:    0 *HANDLE* eax := -
dest is not lib
call:   30 {*32* eax, *v* ecx, *32* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local0 := eax
                *c** local1 := "kernel32.dll"
              )
              Reaching definitions: r24=r24{24},   r25=r25{24},   r26=r26{24},   r28=r28{0} - 56,   r29=r28{0} - 4,
                r30=r30{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 20]=r26{14},
                m[r28{0} - 36]=m[r28{0} + 8]{0},   m[r28{0} - 40]=r30{0},   m[r28{0} - 44]=0x406374,
                m[r28{0} - 48]=0x406384,   m[r28{0} - 52]=r24{24},   m[r28{0} - 56]=%pc,   tmp1=m[r28{0} + 8]{0},
                %flags=ADDFLAGS32( m[r28{0} + 8]{0}, m[m[r28{0} + 8]{0} + 60], r26{14} ),
                %ZF=ADDFLAGS32( m[r28{0} + 8]{0}, m[m[r28{0} + 8]{0} + 60], r26{14} ),
                %CF=ADDFLAGS32( m[r28{0} + 8]{0}, m[m[r28{0} + 8]{0} + 60], r26{14} )
              Live variables: eax,  edx in proc proc3
result:    0 *32* eax := -
result:    0 *32* edx := -
dest is not lib
call:   65 {*32* eax, *8* r9, *32* ecx, *32* edx, *v* esp} := CALL proc5(
                *32* m[esp - 12] := m[esp - 12]
                *32* m[esp - 8] := m[esp - 8]
                *u32* local10 := m[esp - 4]
              )
              Reaching definitions: r9=r9{45},   r24=r24{53},   r25=r25{56},   r26=r26{59},   r28=r28{45} - 16,
                r29=r29{45},   r30=r30{45},   m[r28{0} + 8]=m[r28{0} + 8]{45},   m[r28{0} - 4]=m[r28{0} - 4]{45},
                m[r28{0} - 20]=m[r28{0} - 20]{45},   m[r28{0} - 24]=m[r28{0} - 24]{45},
                m[r28{0} - 36]=m[r28{0} - 36]{45},   m[r28{0} - 40]=m[r28{0} - 40]{45},
                m[r28{0} - 44]=m[r28{0} - 44]{45},   m[r28{0} - 48]=m[r28{0} - 48]{45},
                m[r28{0} - 52]=m[r28{0} - 52]{45},   m[r28{0} - 56]=m[r28{0} - 56]{45},
                m[r28{0} - 60]=m[r28{0} - 60]{45},   m[r28{0} - 64]=m[r28{0} - 64]{45},
                m[r28{0} - 4]=m[r28{0} - 4]{45},   m[r28{0} - 20]=m[r28{0} - 20]{45},
                m[r28{0} - 24]=m[r28{0} - 24]{45},   m[r28{0} - 36]=m[r28{0} - 36]{45},
                m[r28{0} - 40]=m[r28{0} - 40]{45},   m[r28{0} - 44]=m[r28{0} - 44]{45},
                m[r28{0} - 48]=m[r28{0} - 48]{45},   m[r28{0} - 52]=m[r28{0} - 52]{45},
                m[r28{0} - 56]=m[r28{0} - 56]{45},   m[r28{0} - 60]=m[r28{0} - 60]{45},
                m[r28{0} - 64]=m[r28{0} - 64]{45},   <all>=<all>{45},   tmp1=global19,
                %flags=SUBFLAGS32( m[0x4063f4], 0, global19 ),   %ZF=global19 = 0,   %CF=m[0x4063f4] <u 0
              Live variables:  in proc proc3
dest is not lib
call:   15 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL lstrcpyA(
              )
              Reaching definitions: r24=r28{0} - 188,   r28=r28{0} - 216,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 208]=0x40630c,
                m[r28{0} - 212]=r28{0} - 188,   m[r28{0} - 216]=%pc,   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 200, r28{0} - 204 ),   %ZF=(r28{0} - 204) = 0,   %CF=(r28{0} - 4) <u 200
              Live variables:  in proc proc4
dest is not lib
call:   21 {*HANDLE* eax_2, *v* ecx, *v* edx, *v* esp} := CALL GetModuleHandleA(
              )
              Reaching definitions: r24=r24{15},   r25=r25{15},   r26=r26{15},   r28=r28{0} - 220,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 208]=0x40630c,
                m[r28{0} - 212]=r28{0} - 188,   m[r28{0} - 216]=0x406314,   m[r28{0} - 220]=%pc,   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 200, r28{0} - 204 ),   %ZF=(r28{0} - 204) = 0,   %CF=(r28{0} - 4) <u 200
              Live variables: eax_2 in proc proc4
result:    0 *HANDLE* eax_2 := -
dest is not lib
call:   31 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local0 := eax_2
                *c** local1 := "UnmapViewOfFile"
              )
              Reaching definitions: r24=r24{21},   r25=r24{21},   r26=r26{21},   r28=r28{0} - 228,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 196]=r24{21},
                m[r28{0} - 208]=0x40630c,   m[r28{0} - 212]=r28{0} - 188,   m[r28{0} - 216]=0x406314,
                m[r28{0} - 220]=0x406324,   m[r28{0} - 224]=r24{21},   m[r28{0} - 228]=%pc,   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 200, r28{0} - 204 ),   %ZF=(r28{0} - 204) = 0,   %CF=(r28{0} - 4) <u 200
              Live variables: eax in proc proc4
result:    0 *32* eax := -
dest is not lib
call:   41 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local0 := eax_2
                *c** local1 := "CreateFileMappingA"
              )
              Reaching definitions: r24=r24{31},   r25=r25{31},   r26=r24{21},   r28=r28{0} - 228,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 60]=r24{31},
                m[r28{0} - 196]=r24{21},   m[r28{0} - 208]=0x40630c,   m[r28{0} - 212]=r28{0} - 188,
                m[r28{0} - 216]=0x406314,   m[r28{0} - 220]=0x406334,   m[r28{0} - 224]=r24{21},   m[r28{0} - 228]=%pc,
                tmp1=r28{0} - 4,   %flags=SUBFLAGS32( r28{0} - 4, 200, r28{0} - 204 ),   %ZF=(r28{0} - 204) = 0,
                %CF=(r28{0} - 4) <u 200
              Live variables: eax in proc proc4
result:    0 *32* eax := -
dest is not lib
call:   51 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local0 := eax_2
                *c** local1 := "VirtualAlloc"
              )
              Reaching definitions: r24=r24{21},   r25=r25{41},   r26=r26{41},   r28=r28{0} - 228,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{41},
                m[r28{0} - 60]=r24{31},   m[r28{0} - 196]=r24{21},   m[r28{0} - 208]=0x40630c,
                m[r28{0} - 212]=r28{0} - 188,   m[r28{0} - 216]=0x406314,   m[r28{0} - 220]=0x406348,
                m[r28{0} - 224]=r24{21},   m[r28{0} - 228]=%pc,   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 200, r28{0} - 204 ),   %ZF=(r28{0} - 204) = 0,   %CF=(r28{0} - 4) <u 200
              Live variables: eax in proc proc4
result:    0 *32* eax := -
dest is not lib
call:   61 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local0 := eax_2
                *c** local1 := "VirtualFree"
              )
              Reaching definitions: r24=r24{51},   r25=r24{21},   r26=r26{51},   r28=r28{0} - 228,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{41},
                m[r28{0} - 60]=r24{31},   m[r28{0} - 68]=r24{51},   m[r28{0} - 196]=r24{21},   m[r28{0} - 208]=0x40630c
                m[r28{0} - 212]=r28{0} - 188,   m[r28{0} - 216]=0x406314,   m[r28{0} - 220]=0x406358,
                m[r28{0} - 224]=r24{21},   m[r28{0} - 228]=%pc,   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 200, r28{0} - 204 ),   %ZF=(r28{0} - 204) = 0,   %CF=(r28{0} - 4) <u 200
              Live variables: eax in proc proc4
result:    0 *32* eax := -
dest is not lib
call:   71 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local0 := eax_2
                *c** local1 := "MapViewOfFileEx"
              )
              Reaching definitions: r24=r24{61},   r25=r25{61},   r26=r24{21},   r28=r28{0} - 228,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{41},
                m[r28{0} - 20]=r24{61},   m[r28{0} - 60]=r24{31},   m[r28{0} - 68]=r24{51},   m[r28{0} - 196]=r24{21},
                m[r28{0} - 208]=0x40630c,   m[r28{0} - 212]=r28{0} - 188,   m[r28{0} - 216]=0x406314,
                m[r28{0} - 220]=0x406364,   m[r28{0} - 224]=r24{21},   m[r28{0} - 228]=%pc,   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 200, r28{0} - 204 ),   %ZF=(r28{0} - 204) = 0,   %CF=(r28{0} - 4) <u 200
              Live variables: eax in proc proc4
result:    0 *32* eax := -
dest is not lib
call:  119 {*u32* eax, *8* cl, *32* ecx, *32* edx, *v* esp} := CALL proc5(
                *32* m[esp_1 - 12] := m[esp_1 - 12]
                *32* m[esp_1 - 8] := m[esp_1 - 8]
                *u32* m[esp_1 - 4] := m[esp_1 - 4]
              )
              Reaching definitions: r9=r9{99},   r24=r24{113},   r25=(r25{102} + (r24{104} *! 40)) + 312,
                r26=r26{110},   r28=r28{99} - 16,   r29=r29{99},   m[r28{0} + 4]=m[r28{0} + 4]{99},
                m[r28{0} - 4]=m[r28{0} - 4]{99},   m[r28{0} - 8]=m[r28{0} - 8]{99},   m[r28{0} - 20]=m[r28{0} - 20]{99}
                m[r28{0} - 24]=m[r28{0} - 24]{99},   m[r28{0} - 44]=m[r28{0} - 44]{99},
                m[r28{0} - 60]=m[r28{0} - 60]{99},   m[r28{0} - 64]=m[r28{0} - 64]{99},
                m[r28{0} - 68]=m[r28{0} - 68]{99},   m[r28{0} - 196]=m[r28{0} - 196]{99},
                m[r28{0} - 200]=m[r28{0} - 200]{99},   m[r28{0} - 208]=m[r28{0} - 208]{99},
                m[r28{0} - 212]=m[r28{0} - 212]{99},   m[r28{0} - 216]=m[r28{0} - 216]{99},
                m[r28{0} - 220]=m[r28{0} - 220]{99},   m[r28{0} - 224]=m[r28{0} - 224]{99},
                m[r28{0} - 228]=m[r28{0} - 228]{99},   m[r28{0} - 232]=m[r28{0} - 232]{99},
                m[r28{0} - 236]=m[r28{0} - 236]{99},   m[r28{0} - 4]=m[r28{0} - 4]{99},
                m[r28{0} - 8]=m[r28{0} - 8]{99},   m[r28{0} - 20]=m[r28{0} - 20]{99},
                m[r28{0} - 24]=m[r28{0} - 24]{99},   m[r28{0} - 44]=m[r28{0} - 44]{99},
                m[r28{0} - 60]=m[r28{0} - 60]{99},   m[r28{0} - 64]=m[r28{0} - 64]{99},
                m[r28{0} - 68]=m[r28{0} - 68]{99},   m[r28{0} - 196]=m[r28{0} - 196]{99},
                m[r28{0} - 200]=m[r28{0} - 200]{99},   m[r28{0} - 208]=m[r28{0} - 208]{99},
                m[r28{0} - 212]=m[r28{0} - 212]{99},   m[r28{0} - 216]=m[r28{0} - 216]{99},
                m[r28{0} - 220]=m[r28{0} - 220]{99},   m[r28{0} - 224]=m[r28{0} - 224]{99},
                m[r28{0} - 228]=m[r28{0} - 228]{99},   m[r28{0} - 232]=m[r28{0} - 232]{99},
                m[r28{0} - 236]=m[r28{0} - 236]{99},   <all>=<all>{99},   tmp1=tmp1{99},   tmp2=tmp2{99},
                tmpl=tmpl{99},   %flags=IMULTFLAGS32( r24{104} *! 40 ),   %ZF=IMULTFLAGS32( r24{104} *! 40 ),
                %CF=IMULTFLAGS32( r24{104} *! 40 )
              Live variables: cl in proc proc4
result:    0 *8* cl := -
dest is not lib
call:  177 {*u32* eax, *8* cl, *32* ecx, *32* edx, *v* esp} := CALL proc5(
                *32* m[esp_1 - 12] := m[esp_1 - 12]
                *32* m[esp_1 - 8] := m[esp_1 - 8]
                *u32* m[esp_1 - 4] := m[esp_1 - 4]
              )
              Reaching definitions: r9=r9{487},   r24=r24{170},   r25=r25{163},   r26=r26{167},   r28=r28{99} - 16,
                r29=r29{99},   m[r28{0} + 4]=m[r28{0} + 4]{99},   m[r28{0} - 4]=m[r28{0} - 4]{99},
                m[r28{0} - 8]=m[r28{0} - 8]{99},   m[r28{0} - 20]=m[r28{0} - 20]{99},
                m[r28{0} - 24]=m[r28{0} - 24]{99},   m[r28{0} - 44]=m[r28{0} - 44]{99},
                m[r28{0} - 60]=m[r28{0} - 60]{99},   m[r28{0} - 64]=m[r28{0} - 64]{99},
                m[r28{0} - 68]=m[r28{0} - 68]{99},   m[r28{0} - 196]=m[r28{0} - 196]{99},
                m[r28{0} - 200]=m[r28{0} - 200]{99},   m[r28{0} - 208]=m[r28{0} - 208]{99},
                m[r28{0} - 212]=m[r28{0} - 212]{99},   m[r28{0} - 216]=m[r28{0} - 216]{99},
                m[r28{0} - 220]=m[r28{0} - 220]{99},   m[r28{0} - 224]=m[r28{0} - 224]{99},
                m[r28{0} - 228]=m[r28{0} - 228]{99},   m[r28{0} - 232]=m[r28{0} - 232]{99},
                m[r28{0} - 236]=m[r28{0} - 236]{99},   m[r28{0} - 4]=m[r28{0} - 4]{99},
                m[r28{0} - 8]=m[r28{0} - 8]{99},   m[r28{0} - 20]=m[r28{0} - 20]{99},
                m[r28{0} - 24]=m[r28{0} - 24]{99},   m[r28{0} - 44]=m[r28{0} - 44]{99},
                m[r28{0} - 60]=m[r28{0} - 60]{99},   m[r28{0} - 64]=m[r28{0} - 64]{99},
                m[r28{0} - 68]=m[r28{0} - 68]{99},   m[r28{0} - 196]=m[r28{0} - 196]{99},
                m[r28{0} - 200]=m[r28{0} - 200]{99},   m[r28{0} - 208]=m[r28{0} - 208]{99},
                m[r28{0} - 212]=m[r28{0} - 212]{99},   m[r28{0} - 216]=m[r28{0} - 216]{99},
                m[r28{0} - 220]=m[r28{0} - 220]{99},   m[r28{0} - 224]=m[r28{0} - 224]{99},
                m[r28{0} - 228]=m[r28{0} - 228]{99},   m[r28{0} - 232]=m[r28{0} - 232]{99},
                m[r28{0} - 236]=m[r28{0} - 236]{99},   <all>=<all>{99},   tmp1=r24{168},   tmp2=tmp2{152},
                tmpl=tmpl{151},   %flags=ADDFLAGS32( r24{168}, m[r26{167} + 12], r24{170} ),
                %ZF=ADDFLAGS32( r24{168}, m[r26{167} + 12], r24{170} ),
                %CF=ADDFLAGS32( r24{168}, m[r26{167} + 12], r24{170} )
              Live variables: cl in proc proc4
result:    0 *8* cl := -
dest is not lib
call:  234 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL LoadLibraryA(
                *LPCSTR* m[esp_2 - 4] := m[esp_2 - 4]
              )
              Reaching definitions: r9=r9{212},   r24=r24{220},   r25=r25{224},   r26=r26{227},   r28=r28{212} - 8,
                r29=r29{212},   m[r28{0} + 4]=m[r28{0} + 4]{212},   m[r28{0} - 4]=m[r28{0} - 4]{212},
                m[r28{0} - 8]=m[r28{0} - 8]{212},   m[r28{0} - 20]=m[r28{0} - 20]{212},
                m[r28{0} - 24]=m[r28{0} - 24]{212},   m[r28{0} - 44]=m[r28{0} - 44]{212},
                m[r28{0} - 60]=m[r28{0} - 60]{212},   m[r28{0} - 64]=m[r28{0} - 64]{212},
                m[r28{0} - 68]=m[r28{0} - 68]{212},   m[r28{0} - 196]=m[r28{0} - 196]{212},
                m[r28{0} - 200]=m[r28{0} - 200]{212},   m[r28{0} - 208]=m[r28{0} - 208]{212},
                m[r28{0} - 212]=m[r28{0} - 212]{212},   m[r28{0} - 216]=m[r28{0} - 216]{212},
                m[r28{0} - 220]=m[r28{0} - 220]{212},   m[r28{0} - 224]=m[r28{0} - 224]{212},
                m[r28{0} - 228]=m[r28{0} - 228]{212},   m[r28{0} - 232]=m[r28{0} - 232]{212},
                m[r28{0} - 236]=m[r28{0} - 236]{212},   m[r28{0} - 4]=m[r28{0} - 4]{212},
                m[r28{0} - 8]=m[r28{0} - 8]{212},   m[r28{0} - 20]=m[r28{0} - 20]{212},
                m[r28{0} - 24]=m[r28{0} - 24]{212},   m[r28{0} - 44]=m[r28{0} - 44]{212},
                m[r28{0} - 60]=m[r28{0} - 60]{212},   m[r28{0} - 64]=m[r28{0} - 64]{212},
                m[r28{0} - 68]=m[r28{0} - 68]{212},   m[r28{0} - 196]=m[r28{0} - 196]{212},
                m[r28{0} - 200]=m[r28{0} - 200]{212},   m[r28{0} - 208]=m[r28{0} - 208]{212},
                m[r28{0} - 212]=m[r28{0} - 212]{212},   m[r28{0} - 216]=m[r28{0} - 216]{212},
                m[r28{0} - 220]=m[r28{0} - 220]{212},   m[r28{0} - 224]=m[r28{0} - 224]{212},
                m[r28{0} - 228]=m[r28{0} - 228]{212},   m[r28{0} - 232]=m[r28{0} - 232]{212},
                m[r28{0} - 236]=m[r28{0} - 236]{212},   <all>=<all>{212},   tmp1=r26{225},   tmp2=tmp2{212},
                tmpl=tmpl{212},   %flags=ADDFLAGS32( r26{225}, m[r25{224} + 12], r26{227} ),
                %ZF=ADDFLAGS32( r26{225}, m[r25{224} + 12], r26{227} ),
                %CF=ADDFLAGS32( r26{225}, m[r25{224} + 12], r26{227} )
              Live variables: eax in proc proc4
result:    0 *32* eax := -
dest is not lib
call:  315 {*32** eax, *32** ecx, *v* edx, *v* esp} := CALL proc6(
                *HANDLE* m[esp_2 - 8] := m[esp_2 - 8]
                *c** m[esp_2 - 4] := m[esp_2 - 4]
              )
              Reaching definitions: r9=r9{212},   r24=(r25{304} + r26{305}) + 2,   r25=r25{309},   r26=r26{305},
                r28=r28{212} - 12,   r29=r29{212},   m[r28{0} + 4]=m[r28{0} + 4]{212},
                m[r28{0} - 4]=m[r28{0} - 4]{212},   m[r28{0} - 8]=m[r28{0} - 8]{212},
                m[r28{0} - 20]=m[r28{0} - 20]{212},   m[r28{0} - 24]=m[r28{0} - 24]{212},
                m[r28{0} - 44]=m[r28{0} - 44]{212},   m[r28{0} - 60]=m[r28{0} - 60]{212},
                m[r28{0} - 64]=m[r28{0} - 64]{212},   m[r28{0} - 68]=m[r28{0} - 68]{212},
                m[r28{0} - 196]=m[r28{0} - 196]{212},   m[r28{0} - 200]=m[r28{0} - 200]{212},
                m[r28{0} - 208]=m[r28{0} - 208]{212},   m[r28{0} - 212]=m[r28{0} - 212]{212},
                m[r28{0} - 216]=m[r28{0} - 216]{212},   m[r28{0} - 220]=m[r28{0} - 220]{212},
                m[r28{0} - 224]=m[r28{0} - 224]{212},   m[r28{0} - 228]=m[r28{0} - 228]{212},
                m[r28{0} - 232]=m[r28{0} - 232]{212},   m[r28{0} - 236]=m[r28{0} - 236]{212},
                m[r28{0} - 4]=m[r28{0} - 4]{212},   m[r28{0} - 8]=m[r28{0} - 8]{212},
                m[r28{0} - 20]=m[r28{0} - 20]{212},   m[r28{0} - 24]=m[r28{0} - 24]{212},
                m[r28{0} - 44]=m[r28{0} - 44]{212},   m[r28{0} - 60]=m[r28{0} - 60]{212},
                m[r28{0} - 64]=m[r28{0} - 64]{212},   m[r28{0} - 68]=m[r28{0} - 68]{212},
                m[r28{0} - 196]=m[r28{0} - 196]{212},   m[r28{0} - 200]=m[r28{0} - 200]{212},
                m[r28{0} - 208]=m[r28{0} - 208]{212},   m[r28{0} - 212]=m[r28{0} - 212]{212},
                m[r28{0} - 216]=m[r28{0} - 216]{212},   m[r28{0} - 220]=m[r28{0} - 220]{212},
                m[r28{0} - 224]=m[r28{0} - 224]{212},   m[r28{0} - 228]=m[r28{0} - 228]{212},
                m[r28{0} - 232]=m[r28{0} - 232]{212},   m[r28{0} - 236]=m[r28{0} - 236]{212},   <all>=<all>{212},
                tmp1=tmp1{276},   tmp2=tmp2{212},   tmpl=tmpl{212},   %flags=LOGICALFLAGS32( r25{280} & 0x80000000 ),
                %ZF=LOGICALFLAGS32( r25{280} & 0x80000000 ),   %CF=LOGICALFLAGS32( r25{280} & 0x80000000 )
              Live variables: eax in proc proc4
result:    0 *32** eax := -
dest is not lib
call:  296 {*32** eax, *32** ecx, *v* edx, *v* esp} := CALL proc6(
                *HANDLE* m[esp_2 - 8] := m[esp_2 - 8]
                *c** m[esp_2 - 4] := m[esp_2 - 4]
              )
              Reaching definitions: r9=r9{212},   r24=r24{285} & 0x7fffffff,   r25=r25{290},   r26=r26{284},
                r28=r28{212} - 12,   r29=r29{212},   m[r28{0} + 4]=m[r28{0} + 4]{212},
                m[r28{0} - 4]=m[r28{0} - 4]{212},   m[r28{0} - 8]=m[r28{0} - 8]{212},
                m[r28{0} - 20]=m[r28{0} - 20]{212},   m[r28{0} - 24]=m[r28{0} - 24]{212},
                m[r28{0} - 44]=m[r28{0} - 44]{212},   m[r28{0} - 60]=m[r28{0} - 60]{212},
                m[r28{0} - 64]=m[r28{0} - 64]{212},   m[r28{0} - 68]=m[r28{0} - 68]{212},
                m[r28{0} - 196]=m[r28{0} - 196]{212},   m[r28{0} - 200]=m[r28{0} - 200]{212},
                m[r28{0} - 208]=m[r28{0} - 208]{212},   m[r28{0} - 212]=m[r28{0} - 212]{212},
                m[r28{0} - 216]=m[r28{0} - 216]{212},   m[r28{0} - 220]=m[r28{0} - 220]{212},
                m[r28{0} - 224]=m[r28{0} - 224]{212},   m[r28{0} - 228]=m[r28{0} - 228]{212},
                m[r28{0} - 232]=m[r28{0} - 232]{212},   m[r28{0} - 236]=m[r28{0} - 236]{212},
                m[r28{0} - 4]=m[r28{0} - 4]{212},   m[r28{0} - 8]=m[r28{0} - 8]{212},
                m[r28{0} - 20]=m[r28{0} - 20]{212},   m[r28{0} - 24]=m[r28{0} - 24]{212},
                m[r28{0} - 44]=m[r28{0} - 44]{212},   m[r28{0} - 60]=m[r28{0} - 60]{212},
                m[r28{0} - 64]=m[r28{0} - 64]{212},   m[r28{0} - 68]=m[r28{0} - 68]{212},
                m[r28{0} - 196]=m[r28{0} - 196]{212},   m[r28{0} - 200]=m[r28{0} - 200]{212},
                m[r28{0} - 208]=m[r28{0} - 208]{212},   m[r28{0} - 212]=m[r28{0} - 212]{212},
                m[r28{0} - 216]=m[r28{0} - 216]{212},   m[r28{0} - 220]=m[r28{0} - 220]{212},
                m[r28{0} - 224]=m[r28{0} - 224]{212},   m[r28{0} - 228]=m[r28{0} - 228]{212},
                m[r28{0} - 232]=m[r28{0} - 232]{212},   m[r28{0} - 236]=m[r28{0} - 236]{212},   <all>=<all>{212},
                tmp1=tmp1{276},   tmp2=tmp2{212},   tmpl=tmpl{212},   %flags=LOGICALFLAGS32( r24{285} & 0x7fffffff ),
                %ZF=LOGICALFLAGS32( r24{285} & 0x7fffffff ),   %CF=LOGICALFLAGS32( r24{285} & 0x7fffffff )
              Live variables: eax in proc proc4
result:    0 *32** eax := -
dest is not lib
call:  443 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL CloseHandle(
                *HANDLE* m[esp_3 - 4] := m[esp_3 - 4]
              )
              Reaching definitions: r9=r9{555},   r24=r24{556},   r25=r25{557},   r26=r26{437},   r28=r28{559} - 8,
                r29=r29{560},   m[r28{0} + 4]=m[r28{0} + 4]{634},   m[r28{0} - 4]=m[r28{0} - 4]{363},
                m[r28{0} - 8]=m[r28{0} - 8]{363},   m[r28{0} - 20]=m[r28{0} - 20]{363},
                m[r28{0} - 24]=m[r28{0} - 24]{363},   m[r28{0} - 44]=m[r28{0} - 44]{363},
                m[r28{0} - 60]=m[r28{0} - 60]{363},   m[r28{0} - 64]=m[r28{0} - 64]{363},
                m[r28{0} - 68]=m[r28{0} - 68]{363},   m[r28{0} - 196]=m[r28{0} - 196]{363},
                m[r28{0} - 200]=m[r28{0} - 200]{363},   m[r28{0} - 208]=m[r28{0} - 208]{363},
                m[r28{0} - 212]=m[r28{0} - 212]{363},   m[r28{0} - 216]=m[r28{0} - 216]{363},
                m[r28{0} - 220]=m[r28{0} - 220]{363},   m[r28{0} - 224]=m[r28{0} - 224]{363},
                m[r28{0} - 228]=m[r28{0} - 228]{363},   m[r28{0} - 232]=m[r28{0} - 232]{363},
                m[r28{0} - 236]=m[r28{0} - 236]{363},   m[r28{0} - 4]=m[r28{0} - 4]{597},
                m[r28{0} - 8]=m[r28{0} - 8]{598},   m[r28{0} - 20]=m[r28{0} - 20]{599},
                m[r28{0} - 24]=m[r28{0} - 24]{600},   m[r28{0} - 44]=m[r28{0} - 44]{601},
                m[r28{0} - 60]=m[r28{0} - 60]{602},   m[r28{0} - 64]=m[r28{0} - 64]{603},
                m[r28{0} - 68]=m[r28{0} - 68]{604},   m[r28{0} - 196]=m[r28{0} - 196]{605},
                m[r28{0} - 200]=m[r28{0} - 200]{606},   m[r28{0} - 208]=m[r28{0} - 208]{607},
                m[r28{0} - 212]=m[r28{0} - 212]{608},   m[r28{0} - 216]=m[r28{0} - 216]{609},
                m[r28{0} - 220]=m[r28{0} - 220]{610},   m[r28{0} - 224]=m[r28{0} - 224]{611},
                m[r28{0} - 228]=m[r28{0} - 228]{612},   m[r28{0} - 232]=m[r28{0} - 232]{613},
                m[r28{0} - 236]=m[r28{0} - 236]{614},   <all>=<all>{363},   tmp1=tmp1{561},   tmp2=tmp2{562},
                tmpl=tmpl{563},   %flags=%flags{564},   %ZF=%ZF{565},   %CF=%CF{566}
              Live variables:  in proc proc4
dest is not lib
call:  457 {*32* eax, *8* cl, *32* ecx, *32* edx, *v* esp} := CALL proc5(
                *32* m[esp_3 - 12] := m[esp_3 - 12]
                *32* m[esp_3 - 8] := m[esp_3 - 8]
                *u32* m[esp_3 - 4] := m[esp_3 - 4]
              )
              Reaching definitions: r9=r9{555},   r24=global19,   r25=r25{445},   r26=r26{448},   r28=r28{559} - 16,
                r29=r29{560},   m[r28{0} + 4]=m[r28{0} + 4]{634},   m[r28{0} - 4]=m[r28{0} - 4]{363},
                m[r28{0} - 8]=m[r28{0} - 8]{363},   m[r28{0} - 20]=m[r28{0} - 20]{363},
                m[r28{0} - 24]=m[r28{0} - 24]{363},   m[r28{0} - 44]=m[r28{0} - 44]{363},
                m[r28{0} - 60]=m[r28{0} - 60]{363},   m[r28{0} - 64]=m[r28{0} - 64]{363},
                m[r28{0} - 68]=m[r28{0} - 68]{363},   m[r28{0} - 196]=m[r28{0} - 196]{363},
                m[r28{0} - 200]=m[r28{0} - 200]{363},   m[r28{0} - 208]=m[r28{0} - 208]{363},
                m[r28{0} - 212]=m[r28{0} - 212]{363},   m[r28{0} - 216]=m[r28{0} - 216]{363},
                m[r28{0} - 220]=m[r28{0} - 220]{363},   m[r28{0} - 224]=m[r28{0} - 224]{363},
                m[r28{0} - 228]=m[r28{0} - 228]{363},   m[r28{0} - 232]=m[r28{0} - 232]{363},
                m[r28{0} - 236]=m[r28{0} - 236]{363},   m[r28{0} - 4]=m[r28{0} - 4]{597},
                m[r28{0} - 8]=m[r28{0} - 8]{598},   m[r28{0} - 20]=m[r28{0} - 20]{599},
                m[r28{0} - 24]=m[r28{0} - 24]{600},   m[r28{0} - 44]=m[r28{0} - 44]{601},
                m[r28{0} - 60]=m[r28{0} - 60]{602},   m[r28{0} - 64]=m[r28{0} - 64]{603},
                m[r28{0} - 68]=m[r28{0} - 68]{604},   m[r28{0} - 196]=m[r28{0} - 196]{605},
                m[r28{0} - 200]=m[r28{0} - 200]{606},   m[r28{0} - 208]=m[r28{0} - 208]{607},
                m[r28{0} - 212]=m[r28{0} - 212]{608},   m[r28{0} - 216]=m[r28{0} - 216]{609},
                m[r28{0} - 220]=m[r28{0} - 220]{610},   m[r28{0} - 224]=m[r28{0} - 224]{611},
                m[r28{0} - 228]=m[r28{0} - 228]{612},   m[r28{0} - 232]=m[r28{0} - 232]{613},
                m[r28{0} - 236]=m[r28{0} - 236]{614},   <all>=<all>{363},   tmp1=tmp1{561},   tmp2=tmp2{562},
                tmpl=tmpl{563},   %flags=%flags{564},   %ZF=%ZF{565},   %CF=%CF{566}
              Live variables:  in proc proc4
dest is not lib
call:  467 {*32* eax, *32* ecx, *32* edx, *v* esp} := CALL proc7(
                *32* m[esp_3 - 4] := m[esp_3 - 4]
              )
              Reaching definitions: r9=r9{457},   r24=r24{457},   r25=global19,   r26=r26{457},   r28=r28{559} - 8,
                r29=r29{560},   m[r28{0} + 4]=m[r28{0} + 4]{634},   m[r28{0} - 4]=m[r28{0} - 4]{363},
                m[r28{0} - 8]=m[r28{0} - 8]{363},   m[r28{0} - 20]=m[r28{0} - 20]{363},
                m[r28{0} - 24]=m[r28{0} - 24]{363},   m[r28{0} - 44]=m[r28{0} - 44]{363},
                m[r28{0} - 60]=m[r28{0} - 60]{363},   m[r28{0} - 64]=m[r28{0} - 64]{363},
                m[r28{0} - 68]=m[r28{0} - 68]{363},   m[r28{0} - 196]=m[r28{0} - 196]{363},
                m[r28{0} - 200]=m[r28{0} - 200]{363},   m[r28{0} - 208]=m[r28{0} - 208]{363},
                m[r28{0} - 212]=m[r28{0} - 212]{363},   m[r28{0} - 216]=m[r28{0} - 216]{363},
                m[r28{0} - 220]=m[r28{0} - 220]{363},   m[r28{0} - 224]=m[r28{0} - 224]{363},
                m[r28{0} - 228]=m[r28{0} - 228]{363},   m[r28{0} - 232]=m[r28{0} - 232]{363},
                m[r28{0} - 236]=m[r28{0} - 236]{363},   m[r28{0} - 4]=m[r28{0} - 4]{597},
                m[r28{0} - 8]=m[r28{0} - 8]{598},   m[r28{0} - 20]=m[r28{0} - 20]{599},
                m[r28{0} - 24]=m[r28{0} - 24]{600},   m[r28{0} - 44]=m[r28{0} - 44]{601},
                m[r28{0} - 60]=m[r28{0} - 60]{602},   m[r28{0} - 64]=m[r28{0} - 64]{603},
                m[r28{0} - 68]=m[r28{0} - 68]{604},   m[r28{0} - 196]=m[r28{0} - 196]{605},
                m[r28{0} - 200]=m[r28{0} - 200]{606},   m[r28{0} - 208]=m[r28{0} - 208]{607},
                m[r28{0} - 212]=m[r28{0} - 212]{608},   m[r28{0} - 216]=m[r28{0} - 216]{609},
                m[r28{0} - 220]=m[r28{0} - 220]{610},   m[r28{0} - 224]=m[r28{0} - 224]{611},
                m[r28{0} - 228]=m[r28{0} - 228]{612},   m[r28{0} - 232]=m[r28{0} - 232]{613},
                m[r28{0} - 236]=m[r28{0} - 236]{614},   <all>=<all>{363},   tmp1=(r28{559} - 16) + 4,   tmp2=tmp2{562},
                tmpl=tmpl{563},   %flags=ADDFLAGS32( r28{559} - 12, 12, r28{559} ),
                %ZF=ADDFLAGS32( r28{559} - 12, 12, r28{559} ),   %CF=ADDFLAGS32( r28{559} - 12, 12, r28{559} )
              Live variables:  in proc proc4
dest is not lib
call:   15 {*32* eax, *32* r25, *32* r26} := CALL GetProcAddress(
                *HANDLE* local0 := param1
                *c** local1 := param2
              )
              Reaching definitions: r24=m[r28{0} + 8]{0},   r25=m[r28{0} + 4]{0},   r28=r28{0} - 20,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=r25{0},   m[r28{0} - 12]=m[r28{0} + 8]{0},   m[r28{0} - 16]=m[r28{0} + 4]{0},
                m[r28{0} - 20]=%pc
              Live variables: eax in proc proc6
result:    0 *32* eax := -
dest is not lib
call:   17 {*j32* r25, *u32* edx} := CALL lstrcpyA(
              )
              Reaching definitions: r24=r28{0} - 132,   r28=r28{0} - 144,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=0,   m[r28{0} - 12]=m[r28{0} - 12]{0},   m[r28{0} - 16]=0,
                m[r28{0} - 20]=m[r28{0} - 20]{0},   m[r28{0} - 136]=0x406394,   m[r28{0} - 140]=r28{0} - 132,
                m[r28{0} - 144]=%pc,   tmp1=r28{0} - 4,   %flags=SUBFLAGS32( r28{0} - 4, 128, r28{0} - 132 ),
                %ZF=(r28{0} - 132) = 0,   %CF=(r28{0} - 4) <u 128
              Live variables:  in proc proc8
dest is not lib
call:   54 {*v* r25, *32* edx} := CALL lstrcpyA(
              )
              Reaching definitions: r24=m[r28{0} - 16]{75} + 1,   r25=r26{19} & 128,   r26=r28{0} - 132,
                r28=r28{0} - 152,   r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 8]{72} + 1,   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r26{34},
                m[r28{0} - 12]=r26{19},   m[r28{0} - 16]=m[r28{0} - 16]{41},   m[r28{0} - 20]=m[r28{0} - 20]{30},
                m[r28{0} - 136]=0x406394,   m[r28{0} - 140]=r28{0} - 132,   m[r28{0} - 144]=0x4063ac,
                m[r28{0} - 148]=r28{0} - 132,   m[r28{0} - 152]=%pc,   tmp1=m[r28{0} - 16]{75},
                %flags=LOGICALFLAGS32( r26{19} & 128 ),   %ZF=LOGICALFLAGS32( r26{19} & 128 ),
                %CF=LOGICALFLAGS32( r26{19} & 128 )
              Live variables:  in proc proc8
