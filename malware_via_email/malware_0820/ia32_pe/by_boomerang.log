Unknown library function GetModuleHandleA
Unknown library function DeviceIoControl
Unknown library function lstrcpyA
Unknown library function lstrlenA
Unknown library function GetShortPathNameA
Unknown library function GetEnvironmentVariableA
Unknown library function CreateProcessA
Unknown library function FreeResource
Unknown library function CreateFileA
Unknown library function OpenSCManagerA
Unknown library function OpenServiceA
Unknown library function CreateServiceA
Unknown library function StartServiceA
Unknown library function CloseServiceHandle
Unknown library function RegCreateKeyA
Unknown library function RegSetValueA
Unknown library function RegSetValueExA
Unknown library function GetProcessHeap
Unknown library function QueryPerformanceCounter
assgn   14 *32* %pc := m[0x800103c]
is readonly
assgn   23 *32* %pc := m[0x8001040]
is readonly
after removing matching assigns (%pc).
in proc proc1 adding addrExp r28{0} - 4 to local table
in proc proc1 adding addrExp r28{0} - 8 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 20 to local table
in proc proc1 adding addrExp r28{0} - 20 to local table
in proc proc1 adding addrExp r28{0} - 24 to local table
in proc proc1 adding addrExp r28{0} - 28 to local table
finding final parameters for proc1
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
assgn   13 *32* %pc := m[0x8001074]
is readonly
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
in proc proc16 adding addrExp r28{0} - 12 to local table
in proc proc16 adding addrExp r28{0} - 4 to local table
in proc proc16 adding addrExp r28{0} - 16 to local table
in proc proc16 adding addrExp r28{0} - 20 to local table
finding final parameters for proc16
potential param r28
found new parameter r28
potential param m[r28{0} - 12]
found new parameter m[r28{0} - 12]
assgn  127 *32* %pc := m[0x800103c]
is readonly
assgn  137 *32* %pc := m[0x8001040]
is readonly
assgn  148 *32* %pc := m[0x8001040]
is readonly
assgn  158 *32* %pc := m[0x8001040]
is readonly
after removing matching assigns (%pc).
WARNING: size 0x40 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x40 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x40 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x40 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x40 meet with /*signed?*/int; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc2 ###
in proc proc2 adding addrExp r28{0} - 20 to local table
in proc proc2 adding addrExp r28{0} - 4 to local table
in proc proc2 adding addrExp r28{0} - 8 to local table
in proc proc2 adding addrExp r28{0} - 8 to local table
in proc proc2 adding addrExp r28{0} - 8 to local table
in proc proc2 adding addrExp r28{0} - 8 to local table
in proc proc2 adding addrExp r28{0} - 8 to local table
in proc proc2 adding addrExp r28{0} - 8 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 16 to local table
in proc proc2 adding addrExp r28{0} - 20 to local table
in proc proc2 adding addrExp r28{0} - 20 to local table
in proc proc2 adding addrExp r28{0} - 24 to local table
in proc proc2 adding addrExp r28{0} - 28 to local table
in proc proc2 adding addrExp r28{0} - 20 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffec existing type unsigned int but added type __size8 *
in proc proc2 adding addrExp r28{0} - 24 to local table
in proc proc2 adding addrExp r28{0} - 28 to local table
in proc proc2 adding addrExp r28{0} - 20 to local table
in proc proc2 adding addrExp r28{0} - 24 to local table
in proc proc2 adding addrExp r28{0} - 28 to local table
finding final parameters for proc2
potential param r28
found new parameter r28
potential param m[r28{0} - 20]
found new parameter m[r28{0} - 20]
potential param r0
found new parameter r0
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
assgn    5 *32* tmp1 := m[0x8003008]
assgn   10 *32* %pc := m[0x800102c]
is readonly
assgn   13 *32* tmp1 := m[0x8003008]
assgn   21 *32* r25 := m[0x8003008]
assgn   26 *32* %pc := m[0x8001028]
is readonly
after removing matching assigns (%pc).
in proc proc14 adding addrExp r28{0} - 8 to local table
in proc proc14 adding addrExp r28{0} - 12 to local table
in proc proc14 adding addrExp r28{0} - 16 to local table
in proc proc14 adding addrExp r28{0} - 20 to local table
in proc proc14 adding addrExp r28{0} - 4 to local table
in proc proc14 adding addrExp r28{0} - 8 to local table
in proc proc14 adding addrExp r28{0} - 8 to local table
in proc proc14 adding addrExp r28{0} - 8 to local table
in proc proc14 adding addrExp r28{0} - 12 to local table
in proc proc14 adding addrExp r28{0} - 16 to local table
in proc proc14 adding addrExp r28{0} - 20 to local table
in proc proc14 adding addrExp r28{0} - 8 to local table
in proc proc14 adding addrExp r28{0} - 12 to local table
in proc proc14 adding addrExp r28{0} - 16 to local table
in proc proc14 adding addrExp r28{0} - 20 to local table
finding final parameters for proc14
potential param r28
found new parameter r28
potential param r25
found new parameter r25
potential param r26
found new parameter r26
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc15 ###
in proc proc15 adding addrExp r28{0} - 4 to local table
in proc proc15 adding addrExp r28{0} - 8 to local table
in proc proc15 adding addrExp r28{0} - 8 to local table
finding final parameters for proc15
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
assgn   23 *32* %pc := m[0x8001064]
is readonly
assgn   40 *32* %pc := m[0x8001064]
is readonly
assgn   51 *32* %pc := m[0x8001060]
is readonly
assgn   62 *32* %pc := m[0x800105c]
is readonly
assgn   73 *32* %pc := m[0x8001058]
is readonly
assgn  111 *32* %pc := m[0x8001054]
is readonly
after removing matching assigns (%pc).
WARNING: size 0x20 meet with unsigned short; allowing temporarily
WARNING: size 0x20 meet with unsigned short; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc3 ###
in proc proc3 adding addrExp r28{0} - 28 to local table
in proc proc3 adding addrExp r28{0} - 32 to local table
in proc proc3 adding addrExp r28{0} - 36 to local table
in proc proc3 adding addrExp r28{0} - 40 to local table
in proc proc3 adding addrExp r28{0} - 24 to local table
in proc proc3 adding addrExp r28{0} - 4 to local table
in proc proc3 adding addrExp r28{0} - 16 to local table
in proc proc3 adding addrExp r28{0} - 8 to local table
in proc proc3 adding addrExp r28{0} - 28 to local table
in proc proc3 adding addrExp r28{0} - 32 to local table
in proc proc3 adding addrExp r28{0} - 36 to local table
in proc proc3 adding addrExp r28{0} - 40 to local table
in proc proc3 adding addrExp r28{0} - 8 to local table
in proc proc3 adding addrExp r28{0} - 28 to local table
in proc proc3 adding addrExp r28{0} - 32 to local table
in proc proc3 adding addrExp r28{0} - 36 to local table
in proc proc3 adding addrExp r28{0} - 40 to local table
in proc proc3 adding addrExp r28{0} - 8 to local table
in proc proc3 adding addrExp r28{0} - 8 to local table
in proc proc3 adding addrExp r28{0} - 28 to local table
in proc proc3 adding addrExp r28{0} - 32 to local table
in proc proc3 adding addrExp r28{0} - 36 to local table
in proc proc3 adding addrExp r28{0} - 40 to local table
in proc proc3 adding addrExp r28{0} - 28 to local table
in proc proc3 adding addrExp r28{0} - 32 to local table
in proc proc3 adding addrExp r28{0} - 36 to local table
in proc proc3 adding addrExp r28{0} - 20 to local table
in proc proc3 adding addrExp r28{0} - 28 to local table
in proc proc3 adding addrExp r28{0} - 32 to local table
in proc proc3 adding addrExp r28{0} - 36 to local table
in proc proc3 adding addrExp r28{0} - 12 to local table
in proc proc3 adding addrExp r28{0} - 28 to local table
in proc proc3 adding addrExp r28{0} - 32 to local table
in proc proc3 adding addrExp r28{0} - 24 to local table
in proc proc3 adding addrExp r28{0} - 28 to local table
in proc proc3 adding addrExp r28{0} - 32 to local table
in proc proc3 adding addrExp r28{0} - 16 to local table
in proc proc3 adding addrExp r28{0} - 28 to local table
in proc proc3 adding addrExp r28{0} - 32 to local table
in proc proc3 adding addrExp r28{0} - 36 to local table
in proc proc3 adding addrExp r28{0} - 40 to local table
in proc proc3 adding addrExp r28{0} - 16 to local table
in proc proc3 adding addrExp r28{0} - 28 to local table
in proc proc3 adding addrExp r28{0} - 32 to local table
in proc proc3 adding addrExp r28{0} - 36 to local table
in proc proc3 adding addrExp r28{0} - 40 to local table
in proc proc3 adding addrExp r28{0} - 28 to local table
in proc proc3 adding addrExp r28{0} - 32 to local table
in proc proc3 adding addrExp r28{0} - 16 to local table
in proc proc3 adding addrExp r28{0} - 24 to local table
in proc proc3 adding addrExp r28{0} - 28 to local table
in proc proc3 adding addrExp r28{0} - 32 to local table
in proc proc3 adding addrExp r28{0} - 36 to local table
in proc proc3 adding addrExp r28{0} - 40 to local table
finding final parameters for proc3
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 16]
found new parameter m[r28{0} + 16]
potential param r10
found new parameter r10
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc13 ###
in proc proc13 adding addrExp r28{0} - 4 to local table
in proc proc13 adding addrExp r28{0} - 8 to local table
in proc proc13 adding addrExp r28{0} - 8 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffff8 existing type /*signed?*/int but added type unsigned char *
finding final parameters for proc13
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
in proc proc6 adding addrExp r28{0} - 4 to local table
in proc proc6 adding addrExp r28{0} - 808 to local table
finding final parameters for proc6
potential param r25
found new parameter r25
potential param r31
found new parameter r31
potential param r24
found new parameter r24
potential param r26
found new parameter r26
potential param r27
found new parameter r27
potential param r30
found new parameter r30
assgn    8 *32* r24 := m[0x8003000]
assgn   31 *32* %pc := m[0x8001050]
is readonly
assgn   40 *32* %pc := m[0x800104c]
is readonly
assgn   51 *32* %pc := m[0x8001048]
is readonly
assgn   66 *32* %pc := m[0x8001044]
is readonly
assgn   78 *32* %pc := m[0x800104c]
is readonly
assgn   88 *32* %pc := m[0x8001040]
is readonly
assgn   97 *32* %pc := m[0x8001040]
is readonly
assgn  108 *32* %pc := m[0x800103c]
is readonly
assgn  136 *32* %pc := m[0x8001038]
is readonly
assgn  145 *32* %pc := m[0x8001034]
is readonly
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc5 ###
in proc proc5 adding addrExp r28{0} - 368 to local table
in proc proc5 adding addrExp r28{0} - 636 to local table
in proc proc5 adding addrExp r28{0} - 4 to local table
in proc proc5 adding addrExp r28{0} - 8 to local table
in proc proc5 adding addrExp r28{0} - 296 to local table
in proc proc5 adding addrExp r28{0} - 372 to local table
in proc proc5 adding addrExp r28{0} - 640 to local table
in proc proc5 adding addrExp r28{0} - 644 to local table
in proc proc5 adding addrExp r28{0} - 648 to local table
in proc proc5 adding addrExp r28{0} - 652 to local table
in proc proc5 adding addrExp r28{0} - 640 to local table
in proc proc5 adding addrExp r28{0} - 640 to local table
in proc proc5 adding addrExp r28{0} - 644 to local table
in proc proc5 adding addrExp r28{0} - 648 to local table
in proc proc5 adding addrExp r28{0} - 648 to local table
in proc proc5 adding addrExp r28{0} - 652 to local table
in proc proc5 adding addrExp r28{0} - 296 to local table
in proc proc5 adding addrExp r28{0} - 296 to local table
in proc proc5 adding addrExp r28{0} - 648 to local table
in proc proc5 adding addrExp r28{0} - 652 to local table
finding final parameters for proc5
potential param r31
found new parameter r31
potential param r28
found new parameter r28
potential param m[r28{0} - 368]
found new parameter m[r28{0} - 368]
potential param m[r28{0} - 636]
found new parameter m[r28{0} - 636]
assgn   21 *32* %pc := m[0x8001070]
is readonly
after removing matching assigns (%pc).
in proc proc4 adding addrExp r28{0} - 4 to local table
in proc proc4 adding addrExp r28{0} - 8 to local table
in proc proc4 adding addrExp r28{0} - 12 to local table
in proc proc4 adding addrExp r28{0} - 16 to local table
in proc proc4 adding addrExp r28{0} - 20 to local table
in proc proc4 adding addrExp r28{0} - 24 to local table
in proc proc4 adding addrExp r28{0} - 28 to local table
in proc proc4 adding addrExp r28{0} - 32 to local table
in proc proc4 adding addrExp r28{0} - 36 to local table
finding final parameters for proc4
assgn   30 *32* %pc := m[0x8001070]
is readonly
assgn   52 *32* %pc := m[0x800106c]
is readonly
assgn   59 *32* %pc := m[0x8001068]
is readonly
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc7 ###
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 20 to local table
in proc proc7 adding addrExp r28{0} - 24 to local table
in proc proc7 adding addrExp r28{0} - 28 to local table
in proc proc7 adding addrExp r28{0} - 32 to local table
in proc proc7 adding addrExp r28{0} - 36 to local table
in proc proc7 adding addrExp r28{0} - 40 to local table
in proc proc7 adding addrExp r28{0} - 44 to local table
in proc proc7 adding addrExp r28{0} - 48 to local table
in proc proc7 adding addrExp r28{0} - 52 to local table
in proc proc7 adding addrExp r28{0} - 56 to local table
in proc proc7 adding addrExp r28{0} - 60 to local table
in proc proc7 adding addrExp r28{0} - 4 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 20 to local table
in proc proc7 adding addrExp r28{0} - 24 to local table
in proc proc7 adding addrExp r28{0} - 28 to local table
in proc proc7 adding addrExp r28{0} - 32 to local table
in proc proc7 adding addrExp r28{0} - 36 to local table
in proc proc7 adding addrExp r28{0} - 40 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 40 to local table
in proc proc7 adding addrExp r28{0} - 44 to local table
in proc proc7 adding addrExp r28{0} - 48 to local table
in proc proc7 adding addrExp r28{0} - 52 to local table
in proc proc7 adding addrExp r28{0} - 56 to local table
in proc proc7 adding addrExp r28{0} - 60 to local table
in proc proc7 adding addrExp r28{0} - 40 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffd8 existing type unsigned int but added type HANDLE
in proc proc7 adding addrExp r28{0} - 44 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 20 to local table
in proc proc7 adding addrExp r28{0} - 24 to local table
in proc proc7 adding addrExp r28{0} - 28 to local table
in proc proc7 adding addrExp r28{0} - 32 to local table
in proc proc7 adding addrExp r28{0} - 36 to local table
in proc proc7 adding addrExp r28{0} - 40 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 20 to local table
in proc proc7 adding addrExp r28{0} - 24 to local table
in proc proc7 adding addrExp r28{0} - 28 to local table
in proc proc7 adding addrExp r28{0} - 32 to local table
in proc proc7 adding addrExp r28{0} - 36 to local table
in proc proc7 adding addrExp r28{0} - 40 to local table
in proc proc7 adding addrExp r28{0} - 44 to local table
in proc proc7 adding addrExp r28{0} - 48 to local table
in proc proc7 adding addrExp r28{0} - 52 to local table
in proc proc7 adding addrExp r28{0} - 56 to local table
in proc proc7 adding addrExp r28{0} - 60 to local table
finding final parameters for proc7
potential param r28
found new parameter r28
potential param r25
found new parameter r25
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param r26
found new parameter r26
assgn    5 *32* tmp1 := m[0x8003008]
assgn   13 *32* r25 := m[0x8003008]
assgn   18 *32* %pc := m[0x8001030]
is readonly
after removing matching assigns (%pc).
in proc proc12 adding addrExp r28{0} - 8 to local table
in proc proc12 adding addrExp r28{0} - 12 to local table
in proc proc12 adding addrExp r28{0} - 16 to local table
in proc proc12 adding addrExp r28{0} - 20 to local table
in proc proc12 adding addrExp r28{0} - 4 to local table
in proc proc12 adding addrExp r28{0} - 8 to local table
in proc proc12 adding addrExp r28{0} - 12 to local table
in proc proc12 adding addrExp r28{0} - 16 to local table
in proc proc12 adding addrExp r28{0} - 20 to local table
in proc proc12 adding addrExp r28{0} - 8 to local table
in proc proc12 adding addrExp r28{0} - 12 to local table
in proc proc12 adding addrExp r28{0} - 16 to local table
in proc proc12 adding addrExp r28{0} - 20 to local table
finding final parameters for proc12
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r24
found new parameter r24
potential param r25
found new parameter r25
potential param r26
found new parameter r26
assgn   21 *32* %pc := m[0x800101c]
is readonly
assgn   28 *32* %pc := m[0x8001048]
is readonly
assgn   49 *32* %pc := m[0x8001020]
is readonly
assgn   56 *32* %pc := m[0x8001048]
is readonly
assgn   77 *32* %pc := m[0x8001020]
is readonly
assgn   95 *32* %pc := m[0x8001020]
is readonly
assgn  113 *32* %pc := m[0x8001020]
is readonly
assgn  120 *32* %pc := m[0x8001014]
is readonly
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
in proc proc8 adding addrExp r28{0} - 12 to local table
in proc proc8 adding addrExp r28{0} - 4 to local table
in proc proc8 adding addrExp r28{0} - 20 to local table
in proc proc8 adding addrExp r28{0} - 16 to local table
in proc proc8 adding addrExp r28{0} - 8 to local table
in proc proc8 adding addrExp r28{0} - 24 to local table
in proc proc8 adding addrExp r28{0} - 28 to local table
in proc proc8 adding addrExp r28{0} - 32 to local table
in proc proc8 adding addrExp r28{0} - 36 to local table
in proc proc8 adding addrExp r28{0} - 40 to local table
in proc proc8 adding addrExp r28{0} - 40 to local table
in proc proc8 adding addrExp r28{0} - 44 to local table
in proc proc8 adding addrExp r28{0} - 44 to local table
in proc proc8 adding addrExp r28{0} - 48 to local table
in proc proc8 adding addrExp r28{0} - 52 to local table
in proc proc8 adding addrExp r28{0} - 56 to local table
in proc proc8 adding addrExp r28{0} - 60 to local table
in proc proc8 adding addrExp r28{0} - 64 to local table
in proc proc8 adding addrExp r28{0} - 68 to local table
in proc proc8 adding addrExp r28{0} - 68 to local table
in proc proc8 adding addrExp r28{0} - 72 to local table
in proc proc8 adding addrExp r28{0} - 72 to local table
in proc proc8 adding addrExp r28{0} - 76 to local table
in proc proc8 adding addrExp r28{0} - 80 to local table
in proc proc8 adding addrExp r28{0} - 84 to local table
in proc proc8 adding addrExp r28{0} - 88 to local table
in proc proc8 adding addrExp r28{0} - 92 to local table
in proc proc8 adding addrExp r28{0} - 96 to local table
in proc proc8 adding addrExp r28{0} - 96 to local table
in proc proc8 adding addrExp r28{0} - 100 to local table
in proc proc8 adding addrExp r28{0} - 104 to local table
in proc proc8 adding addrExp r28{0} - 108 to local table
in proc proc8 adding addrExp r28{0} - 112 to local table
in proc proc8 adding addrExp r28{0} - 116 to local table
in proc proc8 adding addrExp r28{0} - 120 to local table
in proc proc8 adding addrExp r28{0} - 120 to local table
in proc proc8 adding addrExp r28{0} - 124 to local table
in proc proc8 adding addrExp r28{0} - 128 to local table
in proc proc8 adding addrExp r28{0} - 132 to local table
in proc proc8 adding addrExp r28{0} - 136 to local table
in proc proc8 adding addrExp r28{0} - 140 to local table
in proc proc8 adding addrExp r28{0} - 144 to local table
in proc proc8 adding addrExp r28{0} - 144 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffff70 existing type unsigned int but added type HANDLE
in proc proc8 adding addrExp r28{0} - 148 to local table
finding final parameters for proc8
potential param r28
found new parameter r28
potential param m[r28{0} - 12]
found new parameter m[r28{0} - 12]
assgn    8 *32* r24 := m[0x8003000]
assgn   19 *32* %pc := m[0x800104c]
is readonly
assgn   29 *32* %pc := m[0x8001040]
is readonly
assgn   38 *32* %pc := m[0x8001040]
is readonly
assgn   47 *32* %pc := m[0x800104c]
is readonly
assgn   57 *32* %pc := m[0x8001040]
is readonly
assgn   66 *32* %pc := m[0x8001040]
is readonly
assgn   78 *32* %pc := m[0x800101c]
is readonly
assgn   93 *32* %pc := m[0x8001018]
is readonly
assgn  100 *32* %pc := m[0x8001014]
is readonly
assgn  112 *32* %pc := m[0x800101c]
is readonly
assgn  127 *32* %pc := m[0x8001018]
is readonly
assgn  134 *32* %pc := m[0x8001014]
is readonly
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc9 ###
in proc proc9 adding addrExp r28{0} - 524 to local table
in proc proc9 adding addrExp r28{0} - 268 to local table
in proc proc9 adding addrExp r28{0} - 528 to local table
in proc proc9 adding addrExp r28{0} - 4 to local table
in proc proc9 adding addrExp r28{0} - 8 to local table
in proc proc9 adding addrExp r28{0} - 532 to local table
in proc proc9 adding addrExp r28{0} - 536 to local table
in proc proc9 adding addrExp r28{0} - 540 to local table
in proc proc9 adding addrExp r28{0} - 540 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffde4 existing type unsigned int but added type LPSTR
in proc proc9 adding addrExp r28{0} - 544 to local table
in proc proc9 adding addrExp r28{0} - 548 to local table
in proc proc9 adding addrExp r28{0} - 540 to local table
in proc proc9 adding addrExp r28{0} - 544 to local table
in proc proc9 adding addrExp r28{0} - 548 to local table
in proc proc9 adding addrExp r28{0} - 540 to local table
in proc proc9 adding addrExp r28{0} - 544 to local table
in proc proc9 adding addrExp r28{0} - 548 to local table
in proc proc9 adding addrExp r28{0} - 548 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffddc existing type unsigned int but added type LPSTR
in proc proc9 adding addrExp r28{0} - 552 to local table
in proc proc9 adding addrExp r28{0} - 556 to local table
in proc proc9 adding addrExp r28{0} - 548 to local table
in proc proc9 adding addrExp r28{0} - 552 to local table
in proc proc9 adding addrExp r28{0} - 556 to local table
in proc proc9 adding addrExp r28{0} - 548 to local table
in proc proc9 adding addrExp r28{0} - 552 to local table
in proc proc9 adding addrExp r28{0} - 556 to local table
in proc proc9 adding addrExp r28{0} - 560 to local table
in proc proc9 adding addrExp r28{0} - 560 to local table
in proc proc9 adding addrExp r28{0} - 564 to local table
in proc proc9 adding addrExp r28{0} - 568 to local table
in proc proc9 adding addrExp r28{0} - 572 to local table
in proc proc9 adding addrExp r28{0} - 576 to local table
in proc proc9 adding addrExp r28{0} - 580 to local table
in proc proc9 adding addrExp r28{0} - 580 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffdbc existing type unsigned int but added type HANDLE
in proc proc9 adding addrExp r28{0} - 584 to local table
in proc proc9 adding addrExp r28{0} - 580 to local table
in proc proc9 adding addrExp r28{0} - 584 to local table
in proc proc9 adding addrExp r28{0} - 588 to local table
in proc proc9 adding addrExp r28{0} - 592 to local table
in proc proc9 adding addrExp r28{0} - 592 to local table
in proc proc9 adding addrExp r28{0} - 596 to local table
in proc proc9 adding addrExp r28{0} - 600 to local table
in proc proc9 adding addrExp r28{0} - 604 to local table
in proc proc9 adding addrExp r28{0} - 608 to local table
in proc proc9 adding addrExp r28{0} - 612 to local table
in proc proc9 adding addrExp r28{0} - 612 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffd9c existing type unsigned int but added type HANDLE
in proc proc9 adding addrExp r28{0} - 616 to local table
in proc proc9 adding addrExp r28{0} - 612 to local table
finding final parameters for proc9
potential param r31
found new parameter r31
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} - 524]
found new parameter m[r28{0} - 524]
potential param m[r28{0} - 268]
found new parameter m[r28{0} - 268]
potential param m[r28{0} - 528]
found new parameter m[r28{0} - 528]
assgn   17 *32* %pc := m[0x8001010]
is readonly
assgn   30 *32* %pc := m[0x800100c]
is readonly
assgn   67 *32* %pc := m[0x8001008]
is readonly
assgn   82 *32* %pc := m[0x8001004]
is readonly
assgn   91 *32* %pc := m[0x8001078]
is readonly
assgn  108 *32* %pc := m[0x8001000]
is readonly
after removing matching assigns (%pc).
in proc proc10 adding addrExp r28{0} - 52 to local table
in proc proc10 adding addrExp r28{0} - 56 to local table
in proc proc10 adding addrExp r28{0} - 60 to local table
in proc proc10 adding addrExp r28{0} - 64 to local table
in proc proc10 adding addrExp r28{0} - 68 to local table
in proc proc10 adding addrExp r28{0} - 72 to local table
in proc proc10 adding addrExp r28{0} - 76 to local table
in proc proc10 adding addrExp r28{0} - 80 to local table
in proc proc10 adding addrExp r28{0} - 84 to local table
in proc proc10 adding addrExp r28{0} - 88 to local table
in proc proc10 adding addrExp r28{0} - 92 to local table
in proc proc10 adding addrExp r28{0} - 96 to local table
in proc proc10 adding addrExp r28{0} - 100 to local table
in proc proc10 adding addrExp r28{0} - 16 to local table
in proc proc10 adding addrExp r28{0} - 4 to local table
in proc proc10 adding addrExp r28{0} - 12 to local table
in proc proc10 adding addrExp r28{0} - 24 to local table
in proc proc10 adding addrExp r28{0} - 28 to local table
in proc proc10 adding addrExp r28{0} - 32 to local table
in proc proc10 adding addrExp r28{0} - 36 to local table
in proc proc10 adding addrExp r28{0} - 20 to local table
in proc proc10 adding addrExp r28{0} - 36 to local table
in proc proc10 adding addrExp r28{0} - 40 to local table
in proc proc10 adding addrExp r28{0} - 44 to local table
in proc proc10 adding addrExp r28{0} - 48 to local table
in proc proc10 adding addrExp r28{0} - 8 to local table
in proc proc10 adding addrExp r28{0} - 48 to local table
in proc proc10 adding addrExp r28{0} - 52 to local table
in proc proc10 adding addrExp r28{0} - 56 to local table
in proc proc10 adding addrExp r28{0} - 60 to local table
in proc proc10 adding addrExp r28{0} - 64 to local table
in proc proc10 adding addrExp r28{0} - 68 to local table
in proc proc10 adding addrExp r28{0} - 72 to local table
in proc proc10 adding addrExp r28{0} - 76 to local table
in proc proc10 adding addrExp r28{0} - 80 to local table
in proc proc10 adding addrExp r28{0} - 84 to local table
in proc proc10 adding addrExp r28{0} - 88 to local table
in proc proc10 adding addrExp r28{0} - 92 to local table
in proc proc10 adding addrExp r28{0} - 96 to local table
in proc proc10 adding addrExp r28{0} - 100 to local table
in proc proc10 adding addrExp r28{0} - 8 to local table
in proc proc10 adding addrExp r28{0} - 8 to local table
in proc proc10 adding addrExp r28{0} - 48 to local table
in proc proc10 adding addrExp r28{0} - 52 to local table
in proc proc10 adding addrExp r28{0} - 56 to local table
in proc proc10 adding addrExp r28{0} - 60 to local table
in proc proc10 adding addrExp r28{0} - 64 to local table
in proc proc10 adding addrExp r28{0} - 68 to local table
in proc proc10 adding addrExp r28{0} - 72 to local table
in proc proc10 adding addrExp r28{0} - 76 to local table
in proc proc10 adding addrExp r28{0} - 80 to local table
in proc proc10 adding addrExp r28{0} - 84 to local table
in proc proc10 adding addrExp r28{0} - 88 to local table
in proc proc10 adding addrExp r28{0} - 92 to local table
in proc proc10 adding addrExp r28{0} - 96 to local table
in proc proc10 adding addrExp r28{0} - 100 to local table
in proc proc10 adding addrExp r28{0} - 12 to local table
in proc proc10 adding addrExp r28{0} - 16 to local table
in proc proc10 adding addrExp r28{0} - 12 to local table
in proc proc10 adding addrExp r28{0} - 12 to local table
in proc proc10 adding addrExp r28{0} - 12 to local table
in proc proc10 adding addrExp r28{0} - 16 to local table
finding final parameters for proc10
potential param r28
found new parameter r28
assgn    8 *32* r24 := m[0x8003000]
assgn   21 *32* %pc := m[0x800104c]
is readonly
assgn   32 *32* %pc := m[0x8001040]
is readonly
assgn   46 *32* %pc := m[0x800101c]
is readonly
assgn   66 *32* %pc := m[0x8001020]
is readonly
assgn   86 *32* %pc := m[0x8001020]
is readonly
assgn   96 *32* %pc := m[0x800104c]
is readonly
assgn  107 *32* %pc := m[0x8001040]
is readonly
assgn  117 *32* %pc := m[0x8001040]
is readonly
assgn  125 *32* %pc := m[0x8001048]
is readonly
assgn  147 *32* %pc := m[0x8001020]
is readonly
assgn  149 *32* r26 := m[0x80011a0]
is readonly
assgn  152 *32* r24 := m[0x80011a4]
is readonly
assgn  154 *16* r1 := m[0x80011a8]
is readonly
assgn  157 *8* r10 := m[0x80011aa]
is readonly
assgn  180 *32* %pc := m[0x8001048]
is readonly
assgn  202 *32* %pc := m[0x8001020]
is readonly
assgn  210 *32* %pc := m[0x8001014]
is readonly
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc11 ###
in proc proc11 adding addrExp r28{0} - 524 to local table
in proc proc11 adding addrExp r28{0} - 528 to local table
in proc proc11 adding addrExp r28{0} - 788 to local table
in proc proc11 adding addrExp r28{0} - 257 to local table
in proc proc11 adding addrExp r28{0} - 4 to local table
in proc proc11 adding addrExp r28{0} - 12 to local table
in proc proc11 adding addrExp r28{0} - 796 to local table
in proc proc11 adding addrExp r28{0} - 800 to local table
in proc proc11 adding addrExp r28{0} - 804 to local table
in proc proc11 adding addrExp r28{0} - 804 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffcdc existing type unsigned int but added type LPSTR
in proc proc11 adding addrExp r28{0} - 808 to local table
in proc proc11 adding addrExp r28{0} - 812 to local table
in proc proc11 adding addrExp r28{0} - 804 to local table
in proc proc11 adding addrExp r28{0} - 808 to local table
in proc proc11 adding addrExp r28{0} - 812 to local table
in proc proc11 adding addrExp r28{0} - 816 to local table
in proc proc11 adding addrExp r28{0} - 792 to local table
in proc proc11 adding addrExp r28{0} - 816 to local table
in proc proc11 adding addrExp r28{0} - 820 to local table
in proc proc11 adding addrExp r28{0} - 824 to local table
in proc proc11 adding addrExp r28{0} - 828 to local table
in proc proc11 adding addrExp r28{0} - 832 to local table
in proc proc11 adding addrExp r28{0} - 836 to local table
in proc proc11 adding addrExp r28{0} - 840 to local table
in proc proc11 adding addrExp r28{0} - 8 to local table
in proc proc11 adding addrExp r28{0} - 840 to local table
in proc proc11 adding addrExp r28{0} - 844 to local table
in proc proc11 adding addrExp r28{0} - 848 to local table
in proc proc11 adding addrExp r28{0} - 852 to local table
in proc proc11 adding addrExp r28{0} - 856 to local table
in proc proc11 adding addrExp r28{0} - 860 to local table
in proc proc11 adding addrExp r28{0} - 864 to local table
in proc proc11 adding addrExp r28{0} - 864 to local table
in proc proc11 adding addrExp r28{0} - 868 to local table
in proc proc11 adding addrExp r28{0} - 872 to local table
in proc proc11 adding addrExp r28{0} - 872 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffc98 existing type unsigned int but added type LPSTR
in proc proc11 adding addrExp r28{0} - 876 to local table
in proc proc11 adding addrExp r28{0} - 880 to local table
in proc proc11 adding addrExp r28{0} - 872 to local table
in proc proc11 adding addrExp r28{0} - 876 to local table
in proc proc11 adding addrExp r28{0} - 880 to local table
in proc proc11 adding addrExp r28{0} - 872 to local table
in proc proc11 adding addrExp r28{0} - 876 to local table
in proc proc11 adding addrExp r28{0} - 876 to local table
in proc proc11 adding addrExp r28{0} - 880 to local table
in proc proc11 adding addrExp r28{0} - 884 to local table
in proc proc11 adding addrExp r28{0} - 888 to local table
in proc proc11 adding addrExp r28{0} - 892 to local table
in proc proc11 adding addrExp r28{0} - 896 to local table
in proc proc11 adding addrExp r28{0} - 900 to local table
in proc proc11 adding addrExp r28{0} - 268 to local table
in proc proc11 adding addrExp r28{0} - 264 to local table
in proc proc11 adding addrExp r28{0} - 260 to local table
in proc proc11 adding addrExp r28{0} - 258 to local table
in proc proc11 adding addrExp r28{0} - 900 to local table
in proc proc11 adding addrExp r28{0} - 904 to local table
in proc proc11 adding addrExp r28{0} - 908 to local table
in proc proc11 adding addrExp r28{0} - 912 to local table
in proc proc11 adding addrExp r28{0} - 900 to local table
in proc proc11 adding addrExp r28{0} - 904 to local table
in proc proc11 adding addrExp r28{0} - 904 to local table
in proc proc11 adding addrExp r28{0} - 908 to local table
in proc proc11 adding addrExp r28{0} - 912 to local table
in proc proc11 adding addrExp r28{0} - 916 to local table
in proc proc11 adding addrExp r28{0} - 920 to local table
in proc proc11 adding addrExp r28{0} - 924 to local table
in proc proc11 adding addrExp r28{0} - 928 to local table
in proc proc11 adding addrExp r28{0} - 928 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffc60 existing type unsigned int but added type HANDLE
in proc proc11 adding addrExp r28{0} - 932 to local table
in proc proc11 adding addrExp r28{0} - 928 to local table
finding final parameters for proc11
potential param r31
found new parameter r31
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} - 524]
found new parameter m[r28{0} - 524]
potential param m[r28{0} - 528]
found new parameter m[r28{0} - 528]
potential param m[r28{0} - 788]
found new parameter m[r28{0} - 788]
potential param m[r28{0} - 257]
found new parameter m[r28{0} - 257]
assgn    8 *32* r24 := m[0x8003000]
assgn   17 *32* %pc := m[0x8001090]
is readonly
assgn   25 *32* %pc := m[0x800108c]
is readonly
assgn  147 *32* %pc := m[0x8001088]
is readonly
assgn  171 *32* %pc := m[0x8001088]
is readonly
assgn  178 *32* %pc := m[0x8001068]
is readonly
assgn  236 *32* %pc := m[0x8001084]
is readonly
assgn  260 *32* %pc := m[0x8001084]
is readonly
assgn  292 *32* %pc := m[0x8001088]
is readonly
assgn  314 *32* %pc := m[0x8001088]
is readonly
assgn  321 *32* %pc := m[0x8001068]
is readonly
assgn  345 *32* %pc := m[0x8001080]
is readonly
assgn  358 *32* %pc := m[0x800107c]
is readonly
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
in proc _start adding addrExp r28{0} - 968 to local table
in proc _start adding addrExp r28{0} - 964 to local table
in proc _start adding addrExp r28{0} - 284 to local table
in proc _start adding addrExp r28{0} - 4 to local table
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 972 to local table
in proc _start adding addrExp r28{0} - 0x408 to local table
in proc _start adding addrExp r28{0} - 0x40c to local table
in proc _start adding addrExp r28{0} - 556 to local table
in proc _start adding addrExp r28{0} - 0x40c to local table
in proc _start adding addrExp r28{0} - 0x410 to local table
in proc _start adding addrExp r28{0} - 0x3fc to local table
in proc _start adding addrExp r28{0} - 0x3fc to local table
in proc _start adding addrExp r28{0} - 0x3fc to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 0x400 to local table
in proc _start adding addrExp r28{0} - 0x400 to local table
in proc _start adding addrExp r28{0} - 0x400 to local table
in proc _start adding addrExp r28{0} - 552 to local table
in proc _start adding addrExp r28{0} - 0x404 to local table
in proc _start adding addrExp r28{0} - 0x404 to local table
in proc _start adding addrExp r28{0} - 0x404 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 0x40c to local table
in proc _start adding addrExp r28{0} - 0x410 to local table
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 to local table
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 to local table
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 to local table
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 to local table
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 to local table
in proc _start adding addrExp r28 to local table
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 to local table
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 to local table
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 to local table
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 552 to local table
in proc _start adding addrExp r28{0} - 556 to local table
in proc _start adding addrExp r28{0} - 972 to local table
TYPE ERROR: Existing type at address 0xfffffc34 is not structure or array type
in proc _start adding addrExp r28{0} - 0x3fc to local table
in proc _start adding addrExp r28{0} - 0x400 to local table
in proc _start adding addrExp r28{0} - 0x404 to local table
in proc _start adding addrExp r28{0} - 0x408 to local table
TYPE ERROR: Existing type at address 0xfffffbf8 is not structure or array type
in proc _start adding addrExp r28{0} - 0x40c to local table
in proc _start adding addrExp r28{0} - 0x410 to local table
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 to local table
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 to local table
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 to local table
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 to local table
in proc _start adding addrExp r28 to local table
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 552 to local table
in proc _start adding addrExp r28{0} - 556 to local table
in proc _start adding addrExp r28{0} - 972 to local table
TYPE ERROR: Existing type at address 0xfffffc34 is not structure or array type
in proc _start adding addrExp r28{0} - 0x3fc to local table
in proc _start adding addrExp r28{0} - 0x400 to local table
in proc _start adding addrExp r28{0} - 0x404 to local table
in proc _start adding addrExp r28{0} - 0x408 to local table
TYPE ERROR: Existing type at address 0xfffffbf8 is not structure or array type
in proc _start adding addrExp r28{0} - 0x40c to local table
in proc _start adding addrExp r28{0} - 0x410 to local table
in proc _start adding addrExp r28 to local table
in proc _start adding addrExp r28 to local table
finding final parameters for _start
potential param r31
found new parameter r31
potential param r28
found new parameter r28
potential param m[r28{0} - 968]
found new parameter m[r28{0} - 968]
potential param m[r28{0} - 964]
found new parameter m[r28{0} - 964]
potential param m[r28{0} - 284]
found new parameter m[r28{0} - 284]
potential param r0
found new parameter r0
in proc proc2 adding addrExp r28{0} - 20 to local table
in proc proc3 adding addrExp r28{0} - 16 to local table
in proc proc3 adding addrExp r28{0} - 8 to local table
in proc proc3 adding addrExp r28{0} - 32 to local table
in proc proc3 adding addrExp r28{0} - 8 to local table
in proc proc3 adding addrExp r28{0} - 8 to local table
in proc proc3 adding addrExp r28{0} - 8 to local table
in proc proc3 adding addrExp r28{0} - 16 to local table
in proc proc3 adding addrExp r28{0} - 16 to local table
in proc proc3 adding addrExp r28{0} - 16 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
in proc _start adding addrExp r28{0} - 968 to local table
in proc _start adding addrExp r28{0} - 964 to local table
in proc _start adding addrExp r28{0} - 284 to local table
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 to local table
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 to local table
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 to local table
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 to local table
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 to local table
in proc _start adding addrExp r28 to local table
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 to local table
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 to local table
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 to local table
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 to local table
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 to local table
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 to local table
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 to local table
in proc _start adding addrExp r28 to local table
in proc _start adding addrExp r28 to local table
in proc _start adding addrExp r28 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc5 ###
in proc proc5 adding addrExp r28{0} - 368 to local table
in proc proc5 adding addrExp r28{0} - 636 to local table
in proc proc5 adding addrExp r28{0} - 296 to local table
in proc proc5 adding addrExp r28{0} - 296 to local table
in proc proc5 adding addrExp r28{0} - 296 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc7 ###
in proc proc8 adding addrExp r28{0} - 12 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc9 ###
in proc proc9 adding addrExp r28{0} - 524 to local table
in proc proc9 adding addrExp r28{0} - 268 to local table
in proc proc9 adding addrExp r28{0} - 528 to local table
in proc proc10 adding addrExp r28{0} - 8 to local table
in proc proc10 adding addrExp r28{0} - 8 to local table
in proc proc10 adding addrExp r28{0} - 8 to local table
in proc proc10 adding addrExp r28{0} - 12 to local table
in proc proc10 adding addrExp r28{0} - 12 to local table
in proc proc10 adding addrExp r28{0} - 12 to local table
in proc proc10 adding addrExp r28{0} - 12 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc11 ###
in proc proc11 adding addrExp r28{0} - 524 to local table
in proc proc11 adding addrExp r28{0} - 528 to local table
in proc proc11 adding addrExp r28{0} - 788 to local table
in proc proc11 adding addrExp r28{0} - 257 to local table
in proc proc16 adding addrExp r28{0} - 12 to local table
finding final parameters for proc1
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for _start
potential param r31
found new parameter r31
potential param r28
found new parameter r28
potential param m[r28{0} - 968]
found new parameter m[r28{0} - 968]
potential param m[r28{0} - 964]
found new parameter m[r28{0} - 964]
potential param m[r28{0} - 284]
found new parameter m[r28{0} - 284]
potential param r0
found new parameter r0
finding final parameters for proc2
potential param r28
found new parameter r28
potential param m[r28{0} - 20]
found new parameter m[r28{0} - 20]
potential param r0
found new parameter r0
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for _start
potential param r31
found new parameter r31
potential param r28
found new parameter r28
potential param m[r28{0} - 968]
found new parameter m[r28{0} - 968]
potential param m[r28{0} - 964]
found new parameter m[r28{0} - 964]
potential param m[r28{0} - 284]
found new parameter m[r28{0} - 284]
potential param r0
found new parameter r0
finding final parameters for proc3
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 16]
found new parameter m[r28{0} + 16]
potential param r10
found new parameter r10
finding final parameters for _start
potential param r31
found new parameter r31
potential param r28
found new parameter r28
potential param m[r28{0} - 968]
found new parameter m[r28{0} - 968]
potential param m[r28{0} - 964]
found new parameter m[r28{0} - 964]
potential param m[r28{0} - 284]
found new parameter m[r28{0} - 284]
potential param r0
found new parameter r0
finding final parameters for proc4
finding final parameters for _start
potential param r31
found new parameter r31
potential param r28
found new parameter r28
potential param m[r28{0} - 968]
found new parameter m[r28{0} - 968]
potential param m[r28{0} - 964]
found new parameter m[r28{0} - 964]
potential param m[r28{0} - 284]
found new parameter m[r28{0} - 284]
potential param r0
found new parameter r0
finding final parameters for proc7
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
finding final parameters for _start
potential param r31
found new parameter r31
potential param r28
found new parameter r28
potential param m[r28{0} - 968]
found new parameter m[r28{0} - 968]
potential param m[r28{0} - 964]
found new parameter m[r28{0} - 964]
potential param m[r28{0} - 284]
found new parameter m[r28{0} - 284]
potential param r0
found new parameter r0
finding final parameters for proc8
potential param r28
found new parameter r28
potential param m[r28{0} - 12]
found new parameter m[r28{0} - 12]
finding final parameters for _start
potential param r31
found new parameter r31
potential param r28
found new parameter r28
potential param m[r28{0} - 968]
found new parameter m[r28{0} - 968]
potential param m[r28{0} - 964]
found new parameter m[r28{0} - 964]
potential param m[r28{0} - 284]
found new parameter m[r28{0} - 284]
potential param r0
found new parameter r0
finding final parameters for proc9
potential param r31
found new parameter r31
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} - 524]
found new parameter m[r28{0} - 524]
potential param m[r28{0} - 268]
found new parameter m[r28{0} - 268]
potential param m[r28{0} - 528]
found new parameter m[r28{0} - 528]
finding final parameters for _start
potential param r31
found new parameter r31
potential param r28
found new parameter r28
potential param m[r28{0} - 968]
found new parameter m[r28{0} - 968]
potential param m[r28{0} - 964]
found new parameter m[r28{0} - 964]
potential param m[r28{0} - 284]
found new parameter m[r28{0} - 284]
potential param r0
found new parameter r0
finding final parameters for proc10
potential param r28
found new parameter r28
finding final parameters for _start
potential param r31
found new parameter r31
potential param r28
found new parameter r28
potential param m[r28{0} - 968]
found new parameter m[r28{0} - 968]
potential param m[r28{0} - 964]
found new parameter m[r28{0} - 964]
potential param m[r28{0} - 284]
found new parameter m[r28{0} - 284]
potential param r0
found new parameter r0
finding final parameters for proc11
potential param r31
found new parameter r31
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} - 524]
found new parameter m[r28{0} - 524]
potential param m[r28{0} - 528]
found new parameter m[r28{0} - 528]
potential param m[r28{0} - 788]
found new parameter m[r28{0} - 788]
potential param m[r28{0} - 257]
found new parameter m[r28{0} - 257]
finding final parameters for _start
potential param r31
found new parameter r31
potential param r28
found new parameter r28
potential param m[r28{0} - 968]
found new parameter m[r28{0} - 968]
potential param m[r28{0} - 964]
found new parameter m[r28{0} - 964]
potential param m[r28{0} - 284]
found new parameter m[r28{0} - 284]
potential param r0
found new parameter r0
finding final parameters for proc12
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for _start
potential param r31
found new parameter r31
potential param r28
found new parameter r28
potential param m[r28{0} - 968]
found new parameter m[r28{0} - 968]
potential param m[r28{0} - 964]
found new parameter m[r28{0} - 964]
potential param m[r28{0} - 284]
found new parameter m[r28{0} - 284]
potential param r0
found new parameter r0
finding final parameters for proc13
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
finding final parameters for proc5
potential param r31
found new parameter r31
potential param r28
found new parameter r28
potential param m[r28{0} - 368]
found new parameter m[r28{0} - 368]
potential param m[r28{0} - 636]
found new parameter m[r28{0} - 636]
finding final parameters for proc11
potential param r31
found new parameter r31
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} - 524]
found new parameter m[r28{0} - 524]
potential param m[r28{0} - 528]
found new parameter m[r28{0} - 528]
potential param m[r28{0} - 788]
found new parameter m[r28{0} - 788]
potential param m[r28{0} - 257]
found new parameter m[r28{0} - 257]
finding final parameters for proc14
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for proc3
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 16]
found new parameter m[r28{0} + 16]
potential param r10
found new parameter r10
finding final parameters for proc15
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
finding final parameters for proc3
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 16]
found new parameter m[r28{0} + 16]
potential param r10
found new parameter r10
finding final parameters for proc16
finding final parameters for proc2
potential param r28
found new parameter r28
potential param r0
found new parameter r0
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
local esp has type __size32 that doesn't agree with type of define void of a library, why?
local edx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local edx has type void that doesn't agree with type of define __size32 of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local eax has type HRSRC that doesn't agree with type of define DWORD of a library, why?
local ecx has type __size32 that doesn't agree with type of define void of a library, why?
local edx has type __size32 that doesn't agree with type of define void of a library, why?
local esp has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local ecx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local edx has type __size32 that doesn't agree with type of define void of a library, why?
local esp has type unsigned int that doesn't agree with type of define void of a library, why?
local eax has type int that doesn't agree with type of define __size32 of a library, why?
local ecx has type void that doesn't agree with type of define __size32 of a library, why?
local edx has type void that doesn't agree with type of define /*signed?*/int of a library, why?
local esp has type void that doesn't agree with type of define void * of a library, why?
local eax has type __size32 that doesn't agree with type of define void * of a library, why?
local edx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local eax has type void * that doesn't agree with type of define __size32 of a library, why?
local edx has type void that doesn't agree with type of define __size32 of a library, why?
local ecx has type __size32 that doesn't agree with type of define void of a library, why?
local edx has type __size32 that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local ecx has type void that doesn't agree with type of define __size32 of a library, why?
local edx has type void that doesn't agree with type of define __size32 of a library, why?
local esp has type void that doesn't agree with type of define void * of a library, why?
local ecx has type __size32 that doesn't agree with type of define void of a library, why?
local edx has type __size32 that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local eax has type HANDLE that doesn't agree with type of define __size32 of a library, why?
local esp has type union { LPDWORD x605; __size32 x606; } that doesn't agree with type of define void of a library, why?
local esp has type void that doesn't agree with type of define union { LPDWORD x605; __size32 x606; } of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local ecx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local esp has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local esp has type void that doesn't agree with type of define void * of a library, why?
local ecx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local esp has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local ecx has type HANDLE that doesn't agree with type of define __size32 of a library, why?
local esp has type __size32 that doesn't agree with type of define void of a library, why?
local ecx has type HANDLE that doesn't agree with type of define __size32 of a library, why?
local esp has type __size32 that doesn't agree with type of define void of a library, why?
dest is not lib
call:   15 {*32* r24, *v* r25, *v* r26} := CALL GetEnvironmentVariableA(
              )
              Reaching definitions: r24=m[r28{0} + 4]{0},   r28=r28{0} - 20,   r29=r28{0} - 4,   r31=r31{0},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=260,
                m[r28{0} - 12]=m[r28{0} + 4]{0},   m[r28{0} - 16]=0x8001104,   m[r28{0} - 20]=%pc
              Live variables:  in proc proc1
dest is not lib
call:   24 {*32* r24, *32* r25, *32* r26} := CALL lstrcatA(
                *LPSTR* local0 := param1
                *LPSTR* local1 := "\System32\WinNt32.dll"
              )
              Reaching definitions: r24=r24{15},   r25=m[r28{0} + 4]{0},   r26=r26{15},   r28=r28{0} - 28,
                r29=r28{0} - 4,   r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=260,   m[r28{0} - 12]=m[r28{0} + 4]{0},   m[r28{0} - 16]=0x8001104,
                m[r28{0} - 20]=0x8001110,   m[r28{0} - 24]=m[r28{0} + 4]{0},   m[r28{0} - 28]=%pc
              Live variables:  in proc proc1
dest is not lib
call:    8 {*32* r24, *v* r25, *v* edx} := CALL proc16(
              )
              Reaching definitions: r0=r0{0},   r28=r28{0} - 8,   r29=r28{0} - 4,   r31=r31{0},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=%pc,   m[r28{0} - 20]=m[r28{0} - 20]{0}
              Live variables:  in proc proc2
dest is not lib
call:   30 {*32* r24, *v* r25, *v* edx} := CALL proc16(
              )
              Reaching definitions: r0=truncu(32,16,m[r28{0} + 8]{0}),   r10=truncu(32,8,(tmpl{14} %! 25) + 65),
                r24=m[r28{0} + 8]{0},   r25=25,   r26=(tmpl{14} %! 25) + 65,   r28=r28{0} - 8,   r29=r28{0} - 4,
                r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=%pc,   m[r28{0} - 20]=m[r28{0} - 20]{0},   tmp1=tmpl{14} %! 25,   tmp2=25,
                tmpl=tmpl{14},   %flags=ADDFLAGS32( tmpl{14} %! 25, 65, (tmpl{14} %! 25) + 65 ),
                %ZF=ADDFLAGS32( tmpl{14} %! 25, 65, (tmpl{14} %! 25) + 65 ),
                %CF=ADDFLAGS32( tmpl{14} %! 25, 65, (tmpl{14} %! 25) + 65 )
              Live variables:  in proc proc2
dest is not lib
call:   52 {*32* r24, *v* r25, *v* edx} := CALL proc16(
              )
              Reaching definitions: r0=truncu(32,16,m[r28{0} + 8]{0}),   r10=truncu(32,8,(tmpl{36} %! 25) + 97),
                r24=m[r28{0} + 8]{0},   r25=25,   r26=(tmpl{36} %! 25) + 97,   r28=r28{0} - 8,   r29=r28{0} - 4,
                r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=%pc,   m[r28{0} - 20]=m[r28{0} - 20]{0},   tmp1=tmpl{36} %! 25,   tmp2=25,
                tmpl=tmpl{36},   %flags=ADDFLAGS32( tmpl{36} %! 25, 97, (tmpl{36} %! 25) + 97 ),
                %ZF=ADDFLAGS32( tmpl{36} %! 25, 97, (tmpl{36} %! 25) + 97 ),
                %CF=ADDFLAGS32( tmpl{36} %! 25, 97, (tmpl{36} %! 25) + 97 )
              Live variables:  in proc proc2
dest is not lib
call:   74 {*32* r24, *v* r25, *v* edx} := CALL proc16(
              )
              Reaching definitions: r0=truncu(32,16,m[r28{0} + 8]{0}),   r10=truncu(32,8,(tmpl{58} %! 25) + 97),
                r24=m[r28{0} + 8]{0},   r25=25,   r26=(tmpl{58} %! 25) + 97,   r28=r28{0} - 8,   r29=r28{0} - 4,
                r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=%pc,   m[r28{0} - 20]=m[r28{0} - 20]{0},   tmp1=tmpl{58} %! 25,   tmp2=25,
                tmpl=tmpl{58},   %flags=ADDFLAGS32( tmpl{58} %! 25, 97, (tmpl{58} %! 25) + 97 ),
                %ZF=ADDFLAGS32( tmpl{58} %! 25, 97, (tmpl{58} %! 25) + 97 ),
                %CF=ADDFLAGS32( tmpl{58} %! 25, 97, (tmpl{58} %! 25) + 97 )
              Live variables:  in proc proc2
dest is not lib
call:   96 {*32* r24, *v* r25, *v* edx} := CALL proc16(
              )
              Reaching definitions: r0=truncu(32,16,m[r28{0} + 8]{0}),   r10=truncu(32,8,(tmpl{80} %! 9) + 48),
                r24=m[r28{0} + 8]{0},   r25=9,   r26=(tmpl{80} %! 9) + 48,   r28=r28{0} - 8,   r29=r28{0} - 4,
                r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=%pc,   m[r28{0} - 20]=m[r28{0} - 20]{0},   tmp1=tmpl{80} %! 9,   tmp2=9,   tmpl=tmpl{80},
                %flags=ADDFLAGS32( tmpl{80} %! 9, 48, (tmpl{80} %! 9) + 48 ),
                %ZF=ADDFLAGS32( tmpl{80} %! 9, 48, (tmpl{80} %! 9) + 48 ),
                %CF=ADDFLAGS32( tmpl{80} %! 9, 48, (tmpl{80} %! 9) + 48 )
              Live variables:  in proc proc2
dest is not lib
call:  128 {*32* r24, *v* r25, *v* edx} := CALL GetEnvironmentVariableA(
              )
              Reaching definitions: r0=truncu(32,16,m[r28{0} + 8]{0}),   r10=truncu(32,8,m[r28{0} + 4]{0}),
                r24=m[r28{0} + 8]{0},   r25=m[r28{0} + 8]{0},   r26=m[r28{0} + 4]{0},   r28=r28{0} - 20,
                r29=r28{0} - 4,   r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=260,   m[r28{0} - 12]=m[r28{0} + 4]{0},
                m[r28{0} - 16]=0x8001104,   m[r28{0} - 20]=%pc,   tmp1=tmpl{102} %! 9,   tmp2=9,   tmpl=tmpl{102},
                %flags=ADDFLAGS32( tmpl{102} %! 9, 48, (tmpl{102} %! 9) + 48 ),
                %ZF=ADDFLAGS32( tmpl{102} %! 9, 48, (tmpl{102} %! 9) + 48 ),
                %CF=ADDFLAGS32( tmpl{102} %! 9, 48, (tmpl{102} %! 9) + 48 )
              Live variables:  in proc proc2
dest is not lib
call:  138 {*32* r24, *v* r25, *v* edx} := CALL lstrcatA(
                *LPSTR* local0 := param2
                *LPSTR* local1 := "\System32\drivers\"
              )
              Reaching definitions: r0=truncu(32,16,m[r28{0} + 4]{0}),   r10=truncu(32,8,m[r28{0} + 4]{0}),
                r24=m[r28{0} + 4]{0},   r25=r25{128},   r26=r26{128},   r28=r28{0} - 28,   r29=r28{0} - 4,   r31=r31{0}
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=260,   m[r28{0} - 12]=m[r28{0} + 4]{0},   m[r28{0} - 16]=0x8001104,
                m[r28{0} - 20]=0x80010f0,   m[r28{0} - 24]=m[r28{0} + 4]{0},   m[r28{0} - 28]=%pc,
                tmp1=tmpl{102} %! 9,   tmp2=9,   tmpl=tmpl{102},
                %flags=ADDFLAGS32( tmpl{102} %! 9, 48, (tmpl{102} %! 9) + 48 ),
                %ZF=ADDFLAGS32( tmpl{102} %! 9, 48, (tmpl{102} %! 9) + 48 ),
                %CF=ADDFLAGS32( tmpl{102} %! 9, 48, (tmpl{102} %! 9) + 48 )
              Live variables:  in proc proc2
dest is not lib
call:  149 {*32* r24, *v* r25, *v* edx} := CALL lstrcatA(
                *LPSTR* local0 := param2
                *8** local1 := param2
              )
              Reaching definitions: r0=truncu(32,16,m[r28{0} + 4]{0}),   r10=truncu(32,8,m[r28{0} + 4]{0}),
                r24=r24{138},   r25=m[r28{0} + 8]{0},   r26=m[r28{0} + 4]{0},   r28=r28{0} - 28,   r29=r28{0} - 4,
                r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=260,   m[r28{0} - 12]=m[r28{0} + 4]{0},   m[r28{0} - 16]=0x8001104,
                m[r28{0} - 20]=m[r28{0} + 8]{0},   m[r28{0} - 24]=m[r28{0} + 4]{0},   m[r28{0} - 28]=%pc,
                tmp1=tmpl{102} %! 9,   tmp2=9,   tmpl=tmpl{102},
                %flags=ADDFLAGS32( tmpl{102} %! 9, 48, (tmpl{102} %! 9) + 48 ),
                %ZF=ADDFLAGS32( tmpl{102} %! 9, 48, (tmpl{102} %! 9) + 48 ),
                %CF=ADDFLAGS32( tmpl{102} %! 9, 48, (tmpl{102} %! 9) + 48 )
              Live variables:  in proc proc2
dest is not lib
call:  159 {*32* r24, *32* r25, *32* edx} := CALL lstrcatA(
                *LPSTR* local0 := param2
                *LPSTR* local1 := ".sys"
              )
              Reaching definitions: r0=truncu(32,16,m[r28{0} + 4]{0}),   r10=truncu(32,8,m[r28{0} + 4]{0}),
                r24=m[r28{0} + 4]{0},   r25=r25{149},   r26=r26{149},   r28=r28{0} - 28,   r29=r28{0} - 4,   r31=r31{0}
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=260,   m[r28{0} - 12]=m[r28{0} + 4]{0},   m[r28{0} - 16]=0x8001104,
                m[r28{0} - 20]=0x80010e8,   m[r28{0} - 24]=m[r28{0} + 4]{0},   m[r28{0} - 28]=%pc,
                tmp1=tmpl{102} %! 9,   tmp2=9,   tmpl=tmpl{102},
                %flags=ADDFLAGS32( tmpl{102} %! 9, 48, (tmpl{102} %! 9) + 48 ),
                %ZF=ADDFLAGS32( tmpl{102} %! 9, 48, (tmpl{102} %! 9) + 48 ),
                %CF=ADDFLAGS32( tmpl{102} %! 9, 48, (tmpl{102} %! 9) + 48 )
              Live variables:  in proc proc2
dest is not lib
call:   41 {*HRSRC* eax, *32* r25, *32* r26} := CALL FindResourceA(
                *HMODULE* local3 := param1
                *LPCSTR* local5 := param3
                *LPCSTR* local4 := "BIN"
              )
              Reaching definitions: r10=r10{0},   r24=m[r28{0} + 4]{0},   r25=r25{0},   r26=m[r28{0} + 12]{0},
                r28=r28{0} - 40,   r29=r28{0} - 4,   r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} + 16]=m[r28{0} + 16]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=0,   m[r28{0} - 16]=0,   m[r28{0} - 24]=m[r28{0} - 24]{0},
                m[r28{0} - 28]=0x80010e4,   m[r28{0} - 32]=m[r28{0} + 12]{0},   m[r28{0} - 36]=m[r28{0} + 4]{0},
                m[r28{0} - 40]=%pc,   tmp1=m[r28{0} + 12]{0},
                %flags=SUBFLAGS32( m[(r28{0} - 4) + 16], 0, m[r28{0} + 12]{0} ),   %ZF=m[r28{0} + 12]{0} = 0,
                %CF=m[(r28{0} - 4) + 16] <u 0
              Live variables: eax in proc proc3
result:    0 *HRSRC* eax := -
dest is not lib
call:   24 {*HRSRC* eax, *32* r25, *32* r26} := CALL FindResourceA(
                *HMODULE* local3 := param1
                *union* local2 := local2
                *LPCSTR* local4 := "BIN"
              )
              Reaching definitions: r10=r10{0},   r24=zfill(16,32,m[r28{0} + 8]{0}),   r25=m[r28{0} + 4]{0},
                r26=r26{0},   r28=r28{0} - 40,   r29=r28{0} - 4,   r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} + 16]=m[r28{0} + 16]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=0,   m[r28{0} - 16]=0,   m[r28{0} - 24]=m[r28{0} - 24]{0},
                m[r28{0} - 28]=0x80010e4,   m[r28{0} - 32]=m[r28{0} - 32]{16},   m[r28{0} - 36]=m[r28{0} + 4]{0},
                m[r28{0} - 40]=%pc,   tmp1=m[r28{0} + 8]{0},
                %flags=SUBFLAGS32( m[(r28{0} - 4) + 12], 0, m[r28{0} + 8]{0} ),   %ZF=m[r28{0} + 8]{0} = 0,
                %CF=m[(r28{0} - 4) + 12] <u 0
              Live variables: eax in proc proc3
result:    0 *HRSRC* eax := -
dest is not lib
call:   52 {*HGLOBAL* eax_2, *v* r25, *v* r26} := CALL LoadResource(
                *HMODULE* local2 := param1
                *HRSRC* local6 := local1
              )
              Reaching definitions: r10=r10{0},   r24=r24{120},   r25=m[r28{0} - 8]{146},   r26=m[r28{0} + 4]{0},
                r28=(r28{0} - 24) - 12,   r29=r28{0} - 4,   r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} + 16]=m[r28{0} + 16]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{146},   m[r28{0} - 16]=0,
                m[r28{0} - 24]=m[r28{0} - 24]{0},   m[r28{0} - 28]=m[r28{0} - 8]{146},
                m[r28{0} - 32]=m[r28{0} + 4]{0},   m[r28{0} - 36]=%pc,   m[r28{0} - 40]=m[r28{0} - 40]{150},
                tmp1=tmp1{124},   %flags=%flags{125},   %ZF=%ZF{126},   %CF=%CF{127}
              Live variables: eax_2 in proc proc3
result:    0 *HGLOBAL* eax_2 := -
dest is not lib
call:   63 {*DWORD* eax, *32* r25, *32* r26} := CALL SizeofResource(
                *HMODULE* local2 := param1
                *HRSRC* local6 := local1
              )
              Reaching definitions: r10=r10{0},   r24=m[r28{0} - 8]{146},   r25=m[r28{0} + 4]{0},   r26=r26{52},
                r28=(r28{0} - 24) - 12,   r29=r28{0} - 4,   r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} + 16]=m[r28{0} + 16]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{146},   m[r28{0} - 16]=0,   m[r28{0} - 20]=r24{52},
                m[r28{0} - 24]=m[r28{0} - 24]{0},   m[r28{0} - 28]=m[r28{0} - 8]{146},
                m[r28{0} - 32]=m[r28{0} + 4]{0},   m[r28{0} - 36]=%pc,   m[r28{0} - 40]=m[r28{0} - 40]{150},
                tmp1=tmp1{124},   %flags=%flags{125},   %ZF=%ZF{126},   %CF=%CF{127}
              Live variables: eax in proc proc3
result:    0 *DWORD* eax := -
dest is not lib
call:   74 {*u8** eax_1, *32* r25, *32* r26} := CALL LockResource(
                *HGLOBAL* local6 := eax_2
              )
              Reaching definitions: r10=r10{0},   r24=r24{63},   r25=r25{63},   r26=r24{52},   r28=(r28{0} - 24) - 8,
                r29=r28{0} - 4,   r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},
                m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} + 16]=m[r28{0} + 16]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 8]{146},   m[r28{0} - 12]=r24{63},   m[r28{0} - 16]=0,
                m[r28{0} - 20]=r24{52},   m[r28{0} - 24]=m[r28{0} - 24]{0},   m[r28{0} - 28]=r24{52},
                m[r28{0} - 32]=%pc,   m[r28{0} - 36]=%pc,   m[r28{0} - 40]=m[r28{0} - 40]{150},   tmp1=r24{52},
                %flags=SUBFLAGS32( m[r28{0} - 20], 0, r24{52} ),   %ZF=r24{52} = 0,   %CF=m[r28{0} - 20] <u 0
              Live variables: eax_1 in proc proc3
result:    0 *u8** eax_1 := -
dest is not lib
call:   88 {*u8** eax_1, *v* r25, *v* r26} := CALL proc14(
                *DWORD* local6 := eax
              )
              Reaching definitions: r10=r10{0},   r24=m[r28{0} + 16]{0},   r25=r24{63},   r26=r24{63},
                r28=(r28{0} - 24) - 8,   r29=r28{0} - 4,   r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} + 16]=m[r28{0} + 16]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{146},   m[r28{0} - 12]=r24{63},   m[r28{0} - 16]=0,
                m[r28{0} - 20]=r24{52},   m[r28{0} - 24]=r24{74},   m[r28{0} - 28]=r24{63},   m[r28{0} - 32]=%pc,
                m[r28{0} - 36]=%pc,   m[r28{0} - 40]=m[r28{0} - 40]{150},   tmp1=r24{74},
                %flags=SUBFLAGS32( m[r28{0} - 24], 0, r24{74} ),   %ZF=r24{74} = 0,   %CF=m[r28{0} - 24] <u 0
              Live variables: eax_1 in proc proc3
result:    0 *u8** eax_1 := -
dest is not lib
call:  102 {*u8** eax_1, *8* dl, *32* r25, *32* r26} := CALL proc15(
                *u8** local7 := eax_1
                *u8** local5 := eax_1
                *DWORD* local6 := eax
              )
              Reaching definitions: r10=r10{0},   r24=r24{63},   r25=r24{74},   r26=r24{88},   r28=(r28{0} - 24) - 16,
                r29=r28{0} - 4,   r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},
                m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} + 16]=m[r28{0} + 16]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 8]{146},   m[r28{0} - 12]=r24{63},   m[r28{0} - 16]=r24{88},
                m[r28{0} - 20]=r24{52},   m[r28{0} - 24]=r24{74},   m[r28{0} - 28]=r24{63},   m[r28{0} - 32]=r24{74},
                m[r28{0} - 36]=r24{88},   m[r28{0} - 40]=%pc,   tmp1=r24{74},
                %flags=SUBFLAGS32( m[r28{0} - 24], 0, r24{74} ),   %ZF=r24{74} = 0,   %CF=m[r28{0} - 24] <u 0
              Live variables: dl in proc proc3
result:    0 *8* dl := -
dest is not lib
call:  112 {*DWORD* eax, *32* r25, *32* r26} := CALL FreeResource(
              )
              Reaching definitions: r10=r10{128},   r24=r24{52},   r25=r25{130},   r26=r26{131},
                r28=(r28{0} - 24) - 8,   r29=r28{0} - 4,   r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} + 16]=m[r28{0} + 16]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{146},   m[r28{0} - 12]=r24{63},
                m[r28{0} - 16]=m[r28{0} - 16]{151},   m[r28{0} - 20]=r24{52},   m[r28{0} - 24]=r24{74},
                m[r28{0} - 28]=r24{52},   m[r28{0} - 32]=%pc,   m[r28{0} - 36]=m[r28{0} - 36]{154},
                m[r28{0} - 40]=m[r28{0} - 40]{155},   tmp1=tmp1{133},   %flags=%flags{134},   %ZF=%ZF{135},
                %CF=%CF{136}
              Live variables:  in proc proc3
dest is not lib
call:   22 {*32* eax, *32* r25, *32* r26, *v* r28} := CALL CreateFileA(
              )
              Reaching definitions: r28=r28{0} - 36,   r29=r28{0} - 4,   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=0,   m[r28{0} - 12]=128,   m[r28{0} - 16]=2,   m[r28{0} - 20]=0,   m[r28{0} - 24]=0,
                m[r28{0} - 28]=0xc0000000,   m[r28{0} - 32]=0x8001278,   m[r28{0} - 36]=%pc
              Live variables: eax in proc proc4
result:    0 *32* eax := -
dest is not lib
call:   18 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetModuleHandleA(
              )
              Reaching definitions: r0=r0{0},   r24=global20 ^ (r28{0} - 4),   r28=r28{0} - 0x40c,   r29=r28{0} - 4,
                r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 16]=global20 ^ (r28{0} - 4),
                m[r28{0} - 284]=m[r28{0} - 284]{0},   m[r28{0} - 964]=m[r28{0} - 964]{0},
                m[r28{0} - 968]=m[r28{0} - 968]{0},   m[r28{0} - 972]=148,   m[r28{0} - 0x408]=0,
                m[r28{0} - 0x40c]=%pc,   tmp1=r28{0} - 4,   %flags=LOGICALFLAGS32( global20 ^ (r28{0} - 4) ),
                %ZF=LOGICALFLAGS32( global20 ^ (r28{0} - 4) ),   %CF=LOGICALFLAGS32( global20 ^ (r28{0} - 4) )
              Live variables:  in proc _start
dest is not lib
call:   26 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetVersionExA(
                *32** local0 := a[148]
              )
              Reaching definitions: r0=r0{0},   r24=r28{0} - 972,   r25=r25{18},   r26=r26{18},   r28=r28{0} - 0x410,
                r29=r28{0} - 4,   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 16]=global20 ^ (r28{0} - 4),
                m[r28{0} - 284]=m[r28{0} - 284]{0},   m[r28{0} - 556]=r24{18},   m[r28{0} - 964]=m[r28{0} - 964]{0},
                m[r28{0} - 968]=m[r28{0} - 968]{0},   m[r28{0} - 972]=148,   m[r28{0} - 0x408]=0,
                m[r28{0} - 0x40c]=r28{0} - 972,   m[r28{0} - 0x410]=%pc,   tmp1=r28{0} - 4,
                %flags=LOGICALFLAGS32( global20 ^ (r28{0} - 4) ),   %ZF=LOGICALFLAGS32( global20 ^ (r28{0} - 4) ),
                %CF=LOGICALFLAGS32( global20 ^ (r28{0} - 4) )
              Live variables:  in proc _start
dest is not lib
call:   66 {*32* eax, *v* ecx, *v* edx, *v** esp, *32* ebp} := CALL proc1(
                *c** local0 := a[param3]
              )
              Reaching definitions: r0=r0{0},   r24=m[r28{0} - 0x404]{439},   r25=r28{0} - 284,
                r26=m[r28{0} - 0x400]{438},   r28=r28{0} - 0x410,   r29=r28{0} - 4,   r31=r31{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 0x3fc]{437},   m[r28{0} - 12]=m[r28{0} - 0x404]{439},
                m[r28{0} - 16]=global20 ^ (r28{0} - 4),   m[r28{0} - 284]=m[r28{0} - 284]{0},
                m[r28{0} - 552]=m[r28{0} - 0x400]{438},   m[r28{0} - 556]=r24{18},   m[r28{0} - 964]=m[r28{0} - 964]{0}
                m[r28{0} - 968]=m[r28{0} - 968]{0},   m[r28{0} - 972]=148,   m[r28{0} - 0x3fc]=m[r28{0} - 0x3fc]{437},
                m[r28{0} - 0x400]=m[r28{0} - 0x400]{438},   m[r28{0} - 0x404]=m[r28{0} - 0x404]{439},
                m[r28{0} - 0x408]=0,   m[r28{0} - 0x40c]=r28{0} - 284,   m[r28{0} - 0x410]=%pc,   tmp1=tmp1{405},
                %flags=%flags{406},   %ZF=%ZF{407},   %CF=%CF{408}
              Live variables: ebp,  esp in proc _start
result:    0 *v** esp := -
result:    0 *32* ebp := -
dest is not lib
call:   76 {*32* eax, *8* dl, *32* ecx, *32* edx, *v** ebp} := CALL proc2(
                *LPSTR* m[esp - 8] := m[esp - 8]
                *8** m[esp - 4] := m[esp - 4]
                *u16* ax := param4
              )
              Reaching definitions: r0=r0{0},   r24=r29{66} - 816,   r25=r25{66},   r26=r29{66} - 544,
                r28=r28{66} - 12,   r29=r29{66},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 0x3fc]{437},   m[r28{0} - 12]=m[r28{0} - 0x404]{439},
                m[r28{0} - 16]=global20 ^ (r28{0} - 4),   m[r28{0} - 284]=m[r28{0} - 284]{0},
                m[r28{0} - 552]=m[r28{0} - 0x400]{438},   m[r28{0} - 556]=r24{18},   m[r28{0} - 964]=m[r28{0} - 964]{0}
                m[r28{0} - 968]=m[r28{0} - 968]{0},   m[r28{0} - 972]=148,   m[r28{0} - 0x3fc]=m[r28{0} - 0x3fc]{437},
                m[r28{0} - 0x400]=m[r28{0} - 0x400]{438},   m[r28{0} - 0x404]=m[r28{0} - 0x404]{439},
                m[r28{0} - 0x408]=0,   m[r28{0} - 0x40c]=r28{0} - 284,   m[r28{0} - 0x410]=%pc,   tmp1=tmp1{405},
                %flags=%flags{406},   %ZF=%ZF{407},   %CF=%CF{408}
              Live variables: dl,  ebp in proc _start
result:    0 *8* dl := -
result:    0 *v** ebp := -
dest is not lib
call:   99 {*32* eax, *8* dl, *32* ecx, *v* edx, *v* esp} := CALL proc3(
                *HMODULE* m[esp - 28] := m[esp - 28]
                *u16* m[esp - 24] := m[esp - 24]
                *LPCSTR* m[esp - 20] := m[esp - 20]
                *DWORD** m[esp - 16] := m[esp - 16]
                *8* dl := dl
              )
              Reaching definitions: r0=r0{76},   r10=r10{76},   r24=r24{76},   r25=r29{76} - 976,   r26=r26{93},
                r28=r28{66} - 32,   r29=r29{76},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 0x3fc]{437},   m[r28{0} - 12]=m[r28{0} - 0x404]{439},
                m[r28{0} - 16]=global20 ^ (r28{0} - 4),   m[r28{0} - 284]=m[r28{0} - 284]{0},
                m[r28{0} - 552]=m[r28{0} - 0x400]{438},   m[r28{0} - 556]=r24{18},   m[r28{0} - 964]=m[r28{0} - 964]{0}
                m[r28{0} - 968]=m[r28{0} - 968]{0},   m[r28{0} - 972]=148,   m[r28{0} - 0x3fc]=m[r28{0} - 0x3fc]{437},
                m[r28{0} - 0x400]=m[r28{0} - 0x400]{438},   m[r28{0} - 0x404]=m[r28{0} - 0x404]{439},
                m[r28{0} - 0x408]=0,   m[r28{0} - 0x40c]=r28{0} - 284,   m[r28{0} - 0x410]=%pc,   tmp1=tmp1{409},
                %flags=%flags{410},   %ZF=%ZF{411},   %CF=%CF{412}
              Live variables: dl,  eax in proc _start
result:    0 *32* eax := -
result:    0 *8* dl := -
dest is not lib
call:  114 {*32* eax, *8* dl, *32* ecx, *v* edx, *v* esp} := CALL proc3(
                *HMODULE* m[esp - 28] := m[esp - 28]
                *u16* m[esp - 24] := m[esp - 24]
                *LPCSTR* m[esp - 20] := m[esp - 20]
                *DWORD** m[esp - 16] := m[esp - 16]
                *8* dl := dl
              )
              Reaching definitions: r0=r0{76},   r10=r10{99},   r24=r29{76} - 980,   r25=r25{108},   r26=r26{99},
                r28=r28{66} - 32,   r29=r29{76},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 0x3fc]{437},   m[r28{0} - 12]=m[r28{0} - 0x404]{439},
                m[r28{0} - 16]=global20 ^ (r28{0} - 4),   m[r28{0} - 284]=m[r28{0} - 284]{0},
                m[r28{0} - 552]=m[r28{0} - 0x400]{438},   m[r28{0} - 556]=r24{18},   m[r28{0} - 964]=m[r28{0} - 964]{0}
                m[r28{0} - 968]=m[r28{0} - 968]{0},   m[r28{0} - 972]=148,   m[r28{0} - 0x3fc]=m[r28{0} - 0x3fc]{437},
                m[r28{0} - 0x400]=m[r28{0} - 0x400]{438},   m[r28{0} - 0x404]=m[r28{0} - 0x404]{439},
                m[r28{0} - 0x408]=0,   m[r28{0} - 0x40c]=r28{0} - 284,   m[r28{0} - 0x410]=%pc,   tmp1=tmp1{409},
                %flags=%flags{410},   %ZF=%ZF{411},   %CF=%CF{412}
              Live variables: eax in proc _start
result:    0 *32* eax := -
dest is not lib
call:  120 {*32* eax, *v* ecx, *v* edx, *v** esp, *v** ebp} := CALL proc4(
              )
              Reaching definitions: r0=r0{76},   r10=r10{114},   r24=r24{114},   r25=r25{114},   r26=r26{114},
                r28=r28{66} - 16,   r29=r29{76},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 0x3fc]{437},   m[r28{0} - 12]=m[r28{0} - 0x404]{439},
                m[r28{0} - 16]=global20 ^ (r28{0} - 4),   m[r28{0} - 284]=m[r28{0} - 284]{0},
                m[r28{0} - 552]=m[r28{0} - 0x400]{438},   m[r28{0} - 556]=r24{18},   m[r28{0} - 964]=m[r28{0} - 964]{0}
                m[r28{0} - 968]=m[r28{0} - 968]{0},   m[r28{0} - 972]=148,   m[r28{0} - 0x3fc]=m[r28{0} - 0x3fc]{437},
                m[r28{0} - 0x400]=m[r28{0} - 0x400]{438},   m[r28{0} - 0x404]=m[r28{0} - 0x404]{439},
                m[r28{0} - 0x408]=0,   m[r28{0} - 0x40c]=r28{0} - 284,   m[r28{0} - 0x410]=%pc,   tmp1=tmp1{409},
                %flags=%flags{410},   %ZF=%ZF{411},   %CF=%CF{412}
              Live variables: eax,  ebp,  esp in proc _start
result:    0 *32* eax := -
result:    0 *v** esp := -
result:    0 *v** ebp := -
dest is not lib
call:  193 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL proc7(
                *LPCVOID* m[esp - 8] := m[esp - 8]
                *DWORD* m[esp - 4] := m[esp - 4]
              )
              Reaching definitions: r0=r0{76},   r10=r10{114},   r24=r24{184},   r25=r29{120} - 280,   r26=r26{181},
                r28=r28{120} - 16,   r29=r29{120},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 0x3fc]{437},   m[r28{0} - 12]=m[r28{0} - 0x404]{439},
                m[r28{0} - 16]=global20 ^ (r28{0} - 4),   m[r28{0} - 284]=m[r28{0} - 284]{0},
                m[r28{0} - 552]=m[r28{0} - 0x400]{438},   m[r28{0} - 556]=r24{18},   m[r28{0} - 964]=m[r28{0} - 964]{0}
                m[r28{0} - 968]=m[r28{0} - 968]{0},   m[r28{0} - 972]=148,   m[r28{0} - 0x3fc]=m[r28{0} - 0x3fc]{437},
                m[r28{0} - 0x400]=m[r28{0} - 0x400]{438},   m[r28{0} - 0x404]=m[r28{0} - 0x404]{439},
                m[r28{0} - 0x408]=0,   m[r28{0} - 0x40c]=r28{0} - 284,   m[r28{0} - 0x410]=%pc,   tmp1=tmp1{122},
                %flags=SUBFLAGS32( m[r29{120} - 992], -1, tmp1{122} ),   %ZF=tmp1{122} = 0,
                %CF=m[r29{120} - 992] <u -1
              Live variables: eax in proc _start
result:    0 *32* eax := -
dest is not lib
call:  210 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL proc7(
                *LPCVOID* m[esp - 8] := m[esp - 8]
                *DWORD* m[esp - 4] := m[esp - 4]
              )
              Reaching definitions: r0=r0{76},   r10=r10{114},   r24=r24{201},   r25=r29{120} - 816,   r26=r26{198},
                r28=r28{120} - 16,   r29=r29{120},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 0x3fc]{437},   m[r28{0} - 12]=m[r28{0} - 0x404]{439},
                m[r28{0} - 16]=global20 ^ (r28{0} - 4),   m[r28{0} - 284]=m[r28{0} - 284]{0},
                m[r28{0} - 552]=m[r28{0} - 0x400]{438},   m[r28{0} - 556]=r24{18},   m[r28{0} - 964]=m[r28{0} - 964]{0}
                m[r28{0} - 968]=m[r28{0} - 968]{0},   m[r28{0} - 972]=148,   m[r28{0} - 0x3fc]=m[r28{0} - 0x3fc]{437},
                m[r28{0} - 0x400]=m[r28{0} - 0x400]{438},   m[r28{0} - 0x404]=m[r28{0} - 0x404]{439},
                m[r28{0} - 0x408]=0,   m[r28{0} - 0x40c]=r28{0} - 284,   m[r28{0} - 0x410]=%pc,   tmp1=r24{193} - 1,
                %flags=SUBFLAGS32( r24{193}, 1, r24{193} - 1 ),   %ZF=(r24{193} - 1) = 0,   %CF=r24{193} <u 1
              Live variables:  in proc _start
dest is not lib
call:  214 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL proc8(
                *HANDLE* m[esp - 16] := m[esp - 16]
              )
              Reaching definitions: r0=r0{76},   r10=r10{114},   r24=r24{210},   r25=r25{210},   r26=r26{210},
                r28=r28{120} - 4,   r29=r29{120},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 0x3fc]{437},   m[r28{0} - 12]=m[r28{0} - 0x404]{439},
                m[r28{0} - 16]=global20 ^ (r28{0} - 4),   m[r28{0} - 284]=m[r28{0} - 284]{0},
                m[r28{0} - 552]=m[r28{0} - 0x400]{438},   m[r28{0} - 556]=r24{18},   m[r28{0} - 964]=m[r28{0} - 964]{0}
                m[r28{0} - 968]=m[r28{0} - 968]{0},   m[r28{0} - 972]=148,   m[r28{0} - 0x3fc]=m[r28{0} - 0x3fc]{437},
                m[r28{0} - 0x400]=m[r28{0} - 0x400]{438},   m[r28{0} - 0x404]=m[r28{0} - 0x404]{439},
                m[r28{0} - 0x408]=0,   m[r28{0} - 0x40c]=r28{0} - 284,   m[r28{0} - 0x410]=%pc,   tmp1=r24{193} - 1,
                %flags=SUBFLAGS32( r24{193}, 1, r24{193} - 1 ),   %ZF=(r24{193} - 1) = 0,   %CF=r24{193} <u 1
              Live variables:  in proc _start
dest is not lib
call:  221 {*32* eax, *v* ecx, *v* edx, *v* esp, *32* ebp} := CALL proc9(
                *HANDLE* m[esp - 536] := m[esp - 536]
                *c* m[esp - 532] := m[esp - 532]
                *c* m[esp - 276] := m[esp - 276]
                *LPSTR* m[esp - 4] := m[esp - 4]
                *32* edi := param5
              )
              Reaching definitions: r0=r0{76},   r10=r10{114},   r24=r24{214},   r25=r25{214},   r26=r29{120} - 544,
                r28=r28{120} - 8,   r29=r29{120},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 0x3fc]{437},   m[r28{0} - 12]=m[r28{0} - 0x404]{439},
                m[r28{0} - 16]=global20 ^ (r28{0} - 4),   m[r28{0} - 284]=m[r28{0} - 284]{0},
                m[r28{0} - 552]=m[r28{0} - 0x400]{438},   m[r28{0} - 556]=r24{18},   m[r28{0} - 964]=m[r28{0} - 964]{0}
                m[r28{0} - 968]=m[r28{0} - 968]{0},   m[r28{0} - 972]=148,   m[r28{0} - 0x3fc]=m[r28{0} - 0x3fc]{437},
                m[r28{0} - 0x400]=m[r28{0} - 0x400]{438},   m[r28{0} - 0x404]=m[r28{0} - 0x404]{439},
                m[r28{0} - 0x408]=0,   m[r28{0} - 0x40c]=r28{0} - 284,   m[r28{0} - 0x410]=%pc,   tmp1=r24{193} - 1,
                %flags=SUBFLAGS32( r24{193}, 1, r24{193} - 1 ),   %ZF=(r24{193} - 1) = 0,   %CF=r24{193} <u 1
              Live variables:  in proc _start
dest is not lib
call:  148 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL DeviceIoControl(
              )
              Reaching definitions: r0=r0{76},   r10=r10{114},   r24=r24{134},   r25=r25{137},   r26=r26{142},
                r28=r28{120} - 36,   r29=r29{120},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 0x3fc]{437},   m[r28{0} - 12]=m[r28{0} - 0x404]{439},
                m[r28{0} - 16]=global20 ^ (r28{0} - 4),   m[r28{0} - 284]=m[r28{0} - 284]{0},
                m[r28{0} - 552]=m[r28{0} - 0x400]{438},   m[r28{0} - 556]=r24{18},   m[r28{0} - 964]=m[r28{0} - 964]{0}
                m[r28{0} - 968]=m[r28{0} - 968]{0},   m[r28{0} - 972]=148,   m[r28{0} - 0x3fc]=m[r28{0} - 0x3fc]{437},
                m[r28{0} - 0x400]=m[r28{0} - 0x400]{438},   m[r28{0} - 0x404]=m[r28{0} - 0x404]{439},
                m[r28{0} - 0x408]=0,   m[r28{0} - 0x40c]=r28{0} - 284,   m[r28{0} - 0x410]=%pc,   tmp1=tmp1{122},
                %flags=SUBFLAGS32( m[r29{120} - 992], -1, tmp1{122} ),   %ZF=tmp1{122} = 0,
                %CF=m[r29{120} - 992] <u -1
              Live variables:  in proc _start
dest is not lib
call:  172 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL DeviceIoControl(
              )
              Reaching definitions: r0=r0{76},   r10=r10{114},   r24=r24{166},   r25=r25{158},   r26=r26{161},
                r28=r28{120} - 68,   r29=r29{120},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 0x3fc]{437},   m[r28{0} - 12]=m[r28{0} - 0x404]{439},
                m[r28{0} - 16]=global20 ^ (r28{0} - 4),   m[r28{0} - 284]=m[r28{0} - 284]{0},
                m[r28{0} - 552]=m[r28{0} - 0x400]{438},   m[r28{0} - 556]=r24{18},   m[r28{0} - 964]=m[r28{0} - 964]{0}
                m[r28{0} - 968]=m[r28{0} - 968]{0},   m[r28{0} - 972]=148,   m[r28{0} - 0x3fc]=m[r28{0} - 0x3fc]{437},
                m[r28{0} - 0x400]=m[r28{0} - 0x400]{438},   m[r28{0} - 0x404]=m[r28{0} - 0x404]{439},
                m[r28{0} - 0x408]=0,   m[r28{0} - 0x40c]=r28{0} - 284,   m[r28{0} - 0x410]=%pc,   tmp1=tmp1{122},
                %flags=SUBFLAGS32( m[r29{120} - 992], -1, tmp1{122} ),   %ZF=tmp1{122} = 0,
                %CF=m[r29{120} - 992] <u -1
              Live variables:  in proc _start
dest is not lib
call:  179 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL CloseHandle(
                *HANDLE* m[esp - 68] := m[esp - 68]
              )
              Reaching definitions: r0=r0{76},   r10=r10{114},   r24=r24{172},   r25=r25{173},   r26=r26{172},
                r28=r28{120} - 72,   r29=r29{120},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 0x3fc]{437},   m[r28{0} - 12]=m[r28{0} - 0x404]{439},
                m[r28{0} - 16]=global20 ^ (r28{0} - 4),   m[r28{0} - 284]=m[r28{0} - 284]{0},
                m[r28{0} - 552]=m[r28{0} - 0x400]{438},   m[r28{0} - 556]=r24{18},   m[r28{0} - 964]=m[r28{0} - 964]{0}
                m[r28{0} - 968]=m[r28{0} - 968]{0},   m[r28{0} - 972]=148,   m[r28{0} - 0x3fc]=m[r28{0} - 0x3fc]{437},
                m[r28{0} - 0x400]=m[r28{0} - 0x400]{438},   m[r28{0} - 0x404]=m[r28{0} - 0x404]{439},
                m[r28{0} - 0x408]=0,   m[r28{0} - 0x40c]=r28{0} - 284,   m[r28{0} - 0x410]=%pc,   tmp1=tmp1{122},
                %flags=SUBFLAGS32( m[r29{120} - 992], -1, tmp1{122} ),   %ZF=tmp1{122} = 0,
                %CF=m[r29{120} - 992] <u -1
              Live variables:  in proc _start
dest is not lib
call:  329 {*32* eax, *32* ecx, *v* edx, *v* esp} := CALL proc12(
                *LPVOID* m[r28 + 4] := m[r28 + 4]
              )
              Reaching definitions: 
              Live variables:  in proc _start
dest is not lib
call:  336 {*32* eax, *32* ecx, *v* edx, *v* esp} := CALL proc12(
                *LPVOID* m[r28 + 4] := m[r28 + 4]
              )
              Reaching definitions: 
              Live variables:  in proc _start
dest is not lib
call:  346 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL LoadLibraryA(
                *LPCSTR* m[r28 + 4] := m[r28 + 4]
              )
              Reaching definitions: 
              Live variables:  in proc _start
dest is not lib
call:  359 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* m[r28 + 4] := m[r28 + 4]
                *c** m[r28 + 8] := m[r28 + 8]
              )
              Reaching definitions: 
              Live variables:  in proc _start
dest is not lib
call:  371 CALL proc5(
                *c* m[r28 - 636] := m[r28 - 636]
                *u8* m[r28 - 368] := m[r28 - 368]
                *32* edi := r31
              )
              Reaching definitions: 
              Live variables:  in proc _start
dest is not lib
call:  378 <all> := CALL proc6(<all>)
              Reaching definitions: 
              Live variables:  in proc _start
dest is not lib
call:   25 {*32* eax, *8* cl, *32* edx, *v* esp} := CALL proc13(
                *u8** local1 := a[param2]
                *u8* local2 := 0
                *32* local3 := 64
              )
              Reaching definitions: r24=r28{0} - 636,   r25=r28{0} - 368,   r28=r28{0} - 652,   r29=r28{0} - 4,
                r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=global20 ^ (r28{0} - 4),
                m[r28{0} - 296]=r28{0} - 636,   m[r28{0} - 368]=m[r28{0} - 368]{0},   m[r28{0} - 372]=68,
                m[r28{0} - 636]=m[r28{0} - 636]{0},   m[r28{0} - 640]=64,   m[r28{0} - 644]=0,
                m[r28{0} - 648]=r28{0} - 368,   m[r28{0} - 652]=%pc,   tmp1=r28{0} - 4,
                %flags=LOGICALFLAGS32( global20 ^ (r28{0} - 4) ),   %ZF=LOGICALFLAGS32( global20 ^ (r28{0} - 4) ),
                %CF=LOGICALFLAGS32( global20 ^ (r28{0} - 4) )
              Live variables: cl in proc proc5
result:    0 *8* cl := -
dest is not lib
call:   32 {*32* eax_2, *v* edx, *v* esp} := CALL GetCommandLineA(
              )
              Reaching definitions: r9=r9{25},   r24=r24{25},   r25=r25{25},   r26=r26{25},   r28=r28{0} - 640,
                r29=r28{0} - 4,   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=global20 ^ (r28{0} - 4),
                m[r28{0} - 296]=r28{0} - 636,   m[r28{0} - 368]=m[r28{0} - 368]{0},   m[r28{0} - 372]=68,
                m[r28{0} - 636]=m[r28{0} - 636]{0},   m[r28{0} - 640]=%pc,   m[r28{0} - 644]=0,
                m[r28{0} - 648]=r28{0} - 368,   m[r28{0} - 652]=%pc,   tmp1=(r28{0} - 652) + 4,
                %flags=ADDFLAGS32( r28{0} - 648, 12, r28{0} - 636 ),   %ZF=ADDFLAGS32( r28{0} - 648, 12, r28{0} - 636 )
                %CF=ADDFLAGS32( r28{0} - 648, 12, r28{0} - 636 )
              Live variables: eax_2 in proc proc5
result:    0 *32* eax_2 := -
dest is not lib
call:   41 {*32* eax, *j32* edx, *v** esp} := CALL lstrcpyA(
              )
              Reaching definitions: r9=r9{25},   r24=r24{32},   r25=r25{32},   r26=r28{0} - 636,   r28=r28{0} - 648,
                r29=r28{0} - 4,   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=global20 ^ (r28{0} - 4),
                m[r28{0} - 296]=r28{0} - 636,   m[r28{0} - 368]=m[r28{0} - 368]{0},   m[r28{0} - 372]=68,
                m[r28{0} - 636]=m[r28{0} - 636]{0},   m[r28{0} - 640]=r24{32},   m[r28{0} - 644]=r28{0} - 636,
                m[r28{0} - 648]=%pc,   m[r28{0} - 652]=%pc,   tmp1=(r28{0} - 652) + 4,
                %flags=ADDFLAGS32( r28{0} - 648, 12, r28{0} - 636 ),   %ZF=ADDFLAGS32( r28{0} - 648, 12, r28{0} - 636 )
                %CF=ADDFLAGS32( r28{0} - 648, 12, r28{0} - 636 )
              Live variables: esp in proc proc5
result:    0 *v** esp := -
dest is not lib
call:   52 {*v** eax, *v* edx, *v** esp} := CALL lstrlenA(
              )
              Reaching definitions: r9=r9{25},   r24=r24{42},   r25=r28{0} - 636,   r26=r26{41},   r28=r28{0} - 652,
                r29=r28{0} - 4,   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=global20 ^ (r28{0} - 4),
                m[r28{0} - 296]=r28{0} - 636,   m[r28{0} - 368]=m[r28{0} - 368]{0},   m[r28{0} - 372]=68,
                m[r28{0} - 636]=m[r28{0} - 636]{0},   m[r28{0} - 640]=r24{32},   m[r28{0} - 644]=r28{0} - 636,
                m[r28{0} - 648]=r28{0} - 636,   m[r28{0} - 652]=%pc,   tmp1=r24{42} - 34,
                %flags=SUBFLAGS32( r24{42}, 34, r24{42} - 34 ),   %ZF=(r24{42} - 34) = 0,   %CF=r24{42} <u 34
              Live variables: eax,  esp in proc proc5
result:    0 *v** eax := -
result:    0 *v** esp := -
dest is not lib
call:   67 {*32* eax, *32* edx, *v** esp} := CALL GetShortPathNameA(
              )
              Reaching definitions: r9=r9{25},   r24=m[r28{0} - 296]{175},   r25=m[r28{0} - 296]{175},   r26=r26{165},
                r28=r28{166} - 16,   r29=r28{0} - 4,   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=global20 ^ (r28{0} - 4),   m[r28{0} - 296]=m[r28{0} - 296]{175},
                m[r28{0} - 368]=m[r28{0} - 368]{0},   m[r28{0} - 372]=68,   m[r28{0} - 636]=m[r28{0} - 636]{0},
                m[r28{0} - 640]=r24{32},   m[r28{0} - 644]=r28{0} - 636,   m[r28{0} - 648]=m[r28{0} - 648]{176},
                m[r28{0} - 652]=%pc,   tmp1=r24{42} - 34,   %flags=SUBFLAGS32( r24{42}, 34, r24{42} - 34 ),
                %ZF=(r24{42} - 34) = 0,   %CF=r24{42} <u 34
              Live variables: eax,  edx,  esp in proc proc5
result:    0 *32* eax := -
result:    0 *32* edx := -
result:    0 *v** esp := -
dest is not lib
call:   79 {*32* eax, *v* edx, *v* esp} := CALL lstrcpyA(
              )
              Reaching definitions: r9=r9{25},   r24=r24{67},   r25=r25{67},   r26=r28{0} - 276,   r28=r28{166} - 24,
                r29=r28{0} - 4,   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=global20 ^ (r28{0} - 4),
                m[r28{0} - 296]=m[r28{0} - 296]{175},   m[r28{0} - 368]=m[r28{0} - 368]{0},   m[r28{0} - 372]=68,
                m[r28{0} - 636]=m[r28{0} - 636]{0},   m[r28{0} - 640]=r24{32},   m[r28{0} - 644]=r28{0} - 636,
                m[r28{0} - 648]=m[r28{0} - 648]{176},   m[r28{0} - 652]=%pc,   tmp1=r24{67},
                %flags=LOGICALFLAGS32( r24{67} ),   %ZF=LOGICALFLAGS32( r24{67} ),   %CF=LOGICALFLAGS32( r24{67} )
              Live variables:  in proc proc5
dest is not lib
call:   89 {*32* eax, *v* edx, *v* esp} := CALL lstrcatA(
                *LPSTR* m[esp_2 - 28] := m[esp_2 - 28]
                *LPSTR* m[esp_2 - 24] := m[esp_2 - 24]
              )
              Reaching definitions: r9=r9{25},   r24=m[r28{0} - 296]{175},   r25=r28{0} - 276,   r26=r26{79},
                r28=r28{166} - 32,   r29=r28{0} - 4,   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=global20 ^ (r28{0} - 4),   m[r28{0} - 296]=m[r28{0} - 296]{175},
                m[r28{0} - 368]=m[r28{0} - 368]{0},   m[r28{0} - 372]=68,   m[r28{0} - 636]=m[r28{0} - 636]{0},
                m[r28{0} - 640]=r24{32},   m[r28{0} - 644]=r28{0} - 636,   m[r28{0} - 648]=m[r28{0} - 648]{176},
                m[r28{0} - 652]=%pc,   tmp1=r24{67},   %flags=LOGICALFLAGS32( r24{67} ),
                %ZF=LOGICALFLAGS32( r24{67} ),   %CF=LOGICALFLAGS32( r24{67} )
              Live variables:  in proc proc5
dest is not lib
call:   98 {*32* eax, *v* edx, *v* esp} := CALL lstrcatA(
                *LPSTR* m[esp_2 - 28] := m[esp_2 - 28]
                *LPSTR* m[esp_2 - 24] := m[esp_2 - 24]
              )
              Reaching definitions: r9=r9{25},   r24=r24{89},   r25=r25{89},   r26=r28{0} - 276,   r28=r28{166} - 32,
                r29=r28{0} - 4,   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=global20 ^ (r28{0} - 4),
                m[r28{0} - 296]=m[r28{0} - 296]{175},   m[r28{0} - 368]=m[r28{0} - 368]{0},   m[r28{0} - 372]=68,
                m[r28{0} - 636]=m[r28{0} - 636]{0},   m[r28{0} - 640]=r24{32},   m[r28{0} - 644]=r28{0} - 636,
                m[r28{0} - 648]=m[r28{0} - 648]{176},   m[r28{0} - 652]=%pc,   tmp1=r24{67},
                %flags=LOGICALFLAGS32( r24{67} ),   %ZF=LOGICALFLAGS32( r24{67} ),   %CF=LOGICALFLAGS32( r24{67} )
              Live variables:  in proc proc5
dest is not lib
call:  109 {*32* eax, *v* edx, *v* esp} := CALL GetEnvironmentVariableA(
              )
              Reaching definitions: r9=r9{25},   r24=m[r28{0} - 296]{175},   r25=r25{98},   r26=r26{98},
                r28=r28{166} - 36,   r29=r28{0} - 4,   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=global20 ^ (r28{0} - 4),   m[r28{0} - 296]=m[r28{0} - 296]{175},
                m[r28{0} - 368]=m[r28{0} - 368]{0},   m[r28{0} - 372]=68,   m[r28{0} - 636]=m[r28{0} - 636]{0},
                m[r28{0} - 640]=r24{32},   m[r28{0} - 644]=r28{0} - 636,   m[r28{0} - 648]=m[r28{0} - 648]{176},
                m[r28{0} - 652]=%pc,   tmp1=r24{67},   %flags=LOGICALFLAGS32( r24{67} ),
                %ZF=LOGICALFLAGS32( r24{67} ),   %CF=LOGICALFLAGS32( r24{67} )
              Live variables:  in proc proc5
dest is not lib
call:  137 {*32* eax, *32* edx, *v** esp} := CALL CreateProcessA(
              )
              Reaching definitions: r9=r9{25},   r24=r28{0} - 276,   r25=m[r28{0} - 296]{175},   r26=r28{0} - 372,
                r28=r28{166} - 76,   r29=r28{0} - 4,   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=global20 ^ (r28{0} - 4),   m[r28{0} - 296]=m[r28{0} - 296]{175},
                m[r28{0} - 368]=m[r28{0} - 368]{0},   m[r28{0} - 372]=68,   m[r28{0} - 636]=m[r28{0} - 636]{0},
                m[r28{0} - 640]=r24{32},   m[r28{0} - 644]=r28{0} - 636,   m[r28{0} - 648]=m[r28{0} - 648]{176},
                m[r28{0} - 652]=%pc,   tmp1=r24{67},   %flags=LOGICALFLAGS32( r24{67} ),
                %ZF=LOGICALFLAGS32( r24{67} ),   %CF=LOGICALFLAGS32( r24{67} )
              Live variables: eax,  edx,  esp in proc proc5
result:    0 *32* eax := -
result:    0 *32* edx := -
result:    0 *v** esp := -
dest is not lib
call:  146 {*32* eax, *v* edx, *v* esp} := CALL ExitProcess(
                *UINT* m[esp_2 - 76] := m[esp_2 - 76]
              )
              Reaching definitions: r9=r9{25},   r24=r24{137},   r25=r25{137},   r26=r26{137},   r28=r28{166} - 80,
                r29=r28{0} - 4,   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=global20 ^ (r28{0} - 4),
                m[r28{0} - 296]=m[r28{0} - 296]{175},   m[r28{0} - 368]=m[r28{0} - 368]{0},   m[r28{0} - 372]=68,
                m[r28{0} - 636]=m[r28{0} - 636]{0},   m[r28{0} - 640]=r24{32},   m[r28{0} - 644]=r28{0} - 636,
                m[r28{0} - 648]=m[r28{0} - 648]{176},   m[r28{0} - 652]=%pc,   tmp1=r24{137},
                %flags=LOGICALFLAGS32( r24{137} ),   %ZF=LOGICALFLAGS32( r24{137} ),   %CF=LOGICALFLAGS32( r24{137} )
              Live variables:  in proc proc5
dest is not lib
call:  156 <all> := CALL proc6(<all>)
              Reaching definitions: r9=r9{25},   r24=0,   r25=(global20 ^ (esp - 4)) ^ (esp - 4),   r26=r26{169},
                r28=r28{170} - 4,   r29=r28{0} - 4,   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=global20 ^ (esp - 4),   m[r28{0} - 296]=m[esp - 296]{175},
                m[r28{0} - 368]=m[esp - 368]{0},   m[r28{0} - 372]=68,   m[r28{0} - 636]=m[esp - 636]{0},
                m[r28{0} - 640]=r24{32},   m[r28{0} - 644]=r28{0} - 636,   m[r28{0} - 648]=m[esp - 648]{176},
                m[r28{0} - 652]=%pc,   tmp1=tmp1{171},   %flags=LOGICALFLAGS32( (global20 ^ (esp - 4)) ^ (esp - 4) ),
                %ZF=LOGICALFLAGS32( (global20 ^ (esp - 4)) ^ (esp - 4) ),
                %CF=LOGICALFLAGS32( (global20 ^ (esp - 4)) ^ (esp - 4) )
              Live variables:  in proc proc5
found seq with more than one outedge!
dest is not lib
call:   31 {*HANDLE* eax, *HANDLE* r25, *32* r26, *union* esp} := CALL CreateFileA(
              )
              Reaching definitions: r24=m[r28{0} + 4]{0},   r25=r25{0},   r26=r26{0},   r28=r28{0} - 40,
                r29=r28{0} - 4,   r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},
                m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r25{0},   m[r28{0} - 12]=0,
                m[r28{0} - 16]=128,   m[r28{0} - 20]=2,   m[r28{0} - 24]=0,   m[r28{0} - 28]=0,
                m[r28{0} - 32]=0x40000000,   m[r28{0} - 36]=m[r28{0} + 4]{0},   m[r28{0} - 40]=%pc,
                m[r28{0} - 44]=m[r28{0} - 44]{0},   m[r28{0} - 48]=m[r28{0} - 48]{0},
                m[r28{0} - 52]=m[r28{0} - 52]{0},   m[r28{0} - 56]=m[r28{0} - 56]{0},
                m[r28{0} - 60]=m[r28{0} - 60]{0},   tmp1=m[r28{0} + 12]{0},
                %flags=SUBFLAGS32( m[(r28{0} - 4) + 16], 0, m[r28{0} + 12]{0} ),   %ZF=m[r28{0} + 12]{0} = 0,
                %CF=m[(r28{0} - 4) + 16] <u 0
              Live variables: eax in proc proc7
result:    0 *HANDLE* eax := -
dest is not lib
call:   53 {*32* eax, *v* r25, *v* r26, *v* esp} := CALL WriteFile(
                *HANDLE* local0 := eax
                *LPCVOID* local1 := param1
                *DWORD* local2 := param2
                *union* local3 := a[m[esp + 12]]
                *LPOVERLAPPED* local4 := 0
              )
              Reaching definitions: r24=m[r28{0} + 8]{0},   r25=r24{31},   r26=m[r28{0} + 12]{0},   r28=r28{0} - 60,
                r29=r28{0} - 4,   r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},
                m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{31},   m[r28{0} - 12]=0,
                m[r28{0} - 16]=128,   m[r28{0} - 20]=2,   m[r28{0} - 24]=0,   m[r28{0} - 28]=0,
                m[r28{0} - 32]=0x40000000,   m[r28{0} - 36]=m[r28{0} + 4]{0},   m[r28{0} - 40]=0,
                m[r28{0} - 44]=r28{0} + 12,   m[r28{0} - 48]=m[r28{0} + 12]{0},   m[r28{0} - 52]=m[r28{0} + 8]{0},
                m[r28{0} - 56]=r24{31},   m[r28{0} - 60]=%pc,   tmp1=r24{31} + 1,
                %flags=SUBFLAGS32( m[r28{0} - 8], -1, r24{31} + 1 ),   %ZF=(r24{31} + 1) = 0,   %CF=m[r28{0} - 8] <u -1
              Live variables:  in proc proc7
dest is not lib
call:   60 {*32* eax, *HANDLE* r25, *32* r26, *union* esp} := CALL CloseHandle(
                *HANDLE* local5 := eax
              )
              Reaching definitions: r24=r24{53},   r25=r25{53},   r26=r24{31},   r28=r28{0} - 44,   r29=r28{0} - 4,
                r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},
                m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{31},   m[r28{0} - 12]=0,
                m[r28{0} - 16]=128,   m[r28{0} - 20]=2,   m[r28{0} - 24]=0,   m[r28{0} - 28]=0,
                m[r28{0} - 32]=0x40000000,   m[r28{0} - 36]=m[r28{0} + 4]{0},   m[r28{0} - 40]=r24{31},
                m[r28{0} - 44]=%pc,   m[r28{0} - 48]=m[r28{0} + 12]{0},   m[r28{0} - 52]=m[r28{0} + 8]{0},
                m[r28{0} - 56]=r24{31},   m[r28{0} - 60]=%pc,   tmp1=r24{31} + 1,
                %flags=SUBFLAGS32( m[r28{0} - 8], -1, r24{31} + 1 ),   %ZF=(r24{31} + 1) = 0,   %CF=m[r28{0} - 8] <u -1
              Live variables:  in proc proc7
dest is not lib
call:   22 {*32* r24, *v* r25, *v* r26} := CALL RegCreateKeyA(
              )
              Reaching definitions: r24=r28{0} - 12,   r28=r28{0} - 40,   r29=r28{0} - 4,   r31=r31{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=0,   m[r28{0} - 12]=m[r28{0} - 12]{0},   m[r28{0} - 16]=0x8001258
                m[r28{0} - 20]=0x800126c,   m[r28{0} - 24]=0,   m[r28{0} - 28]=r28{0} - 12,   m[r28{0} - 32]=0x8001210,
                m[r28{0} - 36]=0x80000002,   m[r28{0} - 40]=%pc,   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 20, r28{0} - 24 ),   %ZF=(r28{0} - 24) = 0,   %CF=(r28{0} - 4) <u 20
              Live variables:  in proc proc8
dest is not lib
call:   29 {*32* r24, *v* r25, *v* r26} := CALL lstrlenA(
              )
              Reaching definitions: r24=r24{22},   r25=0x800126c,   r26=r26{22},   r28=r28{0} - 44,   r29=r28{0} - 4,
                r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=0,   m[r28{0} - 12]=m[r28{0} - 12]{0},
                m[r28{0} - 16]=0x8001258,   m[r28{0} - 20]=0x800126c,   m[r28{0} - 24]=0,   m[r28{0} - 28]=r28{0} - 12,
                m[r28{0} - 32]=0x8001210,   m[r28{0} - 36]=0x80000002,   m[r28{0} - 40]=0x800126c,   m[r28{0} - 44]=%pc
                tmp1=r28{0} - 4,   %flags=SUBFLAGS32( r28{0} - 4, 20, r28{0} - 24 ),   %ZF=(r28{0} - 24) = 0,
                %CF=(r28{0} - 4) <u 20
              Live variables:  in proc proc8
dest is not lib
call:   50 {*32* r24, *v* r25, *v* r26} := CALL RegSetValueExA(
              )
              Reaching definitions: r24=m[r28{0} - 12]{0},   r25=r25{29},   r26=0x800126c,   r28=r28{0} - 68,
                r29=r28{0} - 4,   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=0,
                m[r28{0} - 12]=m[r28{0} - 12]{0},   m[r28{0} - 16]=0x8001258,   m[r28{0} - 20]=0x800126c,
                m[r28{0} - 24]=0,   m[r28{0} - 28]=r28{0} - 12,   m[r28{0} - 32]=0x8001210,   m[r28{0} - 36]=0x80000002
                m[r28{0} - 40]=0x800126c,   m[r28{0} - 44]=r24{29} + 1,   m[r28{0} - 48]=0x800126c,   m[r28{0} - 52]=1,
                m[r28{0} - 56]=0,   m[r28{0} - 60]=0x8001204,   m[r28{0} - 64]=m[r28{0} - 12]{0},   m[r28{0} - 68]=%pc,
                tmp1=r24{29},   %flags=ADDFLAGS32( r24{29}, 1, r24{29} + 1 ),
                %ZF=ADDFLAGS32( r24{29}, 1, r24{29} + 1 ),   %CF=ADDFLAGS32( r24{29}, 1, r24{29} + 1 )
              Live variables:  in proc proc8
dest is not lib
call:   57 {*32* r24, *v* r25, *v* r26} := CALL lstrlenA(
              )
              Reaching definitions: r24=r24{50},   r25=0x8001258,   r26=r26{50},   r28=r28{0} - 72,   r29=r28{0} - 4,
                r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=0,   m[r28{0} - 12]=m[r28{0} - 12]{0},
                m[r28{0} - 16]=0x8001258,   m[r28{0} - 20]=0x800126c,   m[r28{0} - 24]=0,   m[r28{0} - 28]=r28{0} - 12,
                m[r28{0} - 32]=0x8001210,   m[r28{0} - 36]=0x80000002,   m[r28{0} - 40]=0x800126c,
                m[r28{0} - 44]=r24{29} + 1,   m[r28{0} - 48]=0x800126c,   m[r28{0} - 52]=1,   m[r28{0} - 56]=0,
                m[r28{0} - 60]=0x8001204,   m[r28{0} - 64]=m[r28{0} - 12]{0},   m[r28{0} - 68]=0x8001258,
                m[r28{0} - 72]=%pc,   tmp1=r24{29},   %flags=ADDFLAGS32( r24{29}, 1, r24{29} + 1 ),
                %ZF=ADDFLAGS32( r24{29}, 1, r24{29} + 1 ),   %CF=ADDFLAGS32( r24{29}, 1, r24{29} + 1 )
              Live variables:  in proc proc8
dest is not lib
call:   78 {*32* r24, *v* r25, *v* r26} := CALL RegSetValueExA(
              )
              Reaching definitions: r24=m[r28{0} - 12]{0},   r25=r25{57},   r26=0x8001258,   r28=r28{0} - 96,
                r29=r28{0} - 4,   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=0,
                m[r28{0} - 12]=m[r28{0} - 12]{0},   m[r28{0} - 16]=0x8001258,   m[r28{0} - 20]=0x800126c,
                m[r28{0} - 24]=0,   m[r28{0} - 28]=r28{0} - 12,   m[r28{0} - 32]=0x8001210,   m[r28{0} - 36]=0x80000002
                m[r28{0} - 40]=0x800126c,   m[r28{0} - 44]=r24{29} + 1,   m[r28{0} - 48]=0x800126c,   m[r28{0} - 52]=1,
                m[r28{0} - 56]=0,   m[r28{0} - 60]=0x8001204,   m[r28{0} - 64]=m[r28{0} - 12]{0},
                m[r28{0} - 68]=0x8001258,   m[r28{0} - 72]=r24{57} + 1,   m[r28{0} - 76]=0x8001258,   m[r28{0} - 80]=1,
                m[r28{0} - 84]=0,   m[r28{0} - 88]=0x80011f8,   m[r28{0} - 92]=m[r28{0} - 12]{0},   m[r28{0} - 96]=%pc,
                tmp1=r24{57},   %flags=ADDFLAGS32( r24{57}, 1, r24{57} + 1 ),
                %ZF=ADDFLAGS32( r24{57}, 1, r24{57} + 1 ),   %CF=ADDFLAGS32( r24{57}, 1, r24{57} + 1 )
              Live variables:  in proc proc8
dest is not lib
call:   96 {*32* r24, *v* r25, *v* r26} := CALL RegSetValueExA(
              )
              Reaching definitions: r24=r24{78},   r25=r28{0} - 8,   r26=m[r28{0} - 12]{0},   r28=r28{0} - 120,
                r29=r28{0} - 4,   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=0,
                m[r28{0} - 12]=m[r28{0} - 12]{0},   m[r28{0} - 16]=0x8001258,   m[r28{0} - 20]=0x800126c,
                m[r28{0} - 24]=0,   m[r28{0} - 28]=r28{0} - 12,   m[r28{0} - 32]=0x8001210,   m[r28{0} - 36]=0x80000002
                m[r28{0} - 40]=0x800126c,   m[r28{0} - 44]=r24{29} + 1,   m[r28{0} - 48]=0x800126c,   m[r28{0} - 52]=1,
                m[r28{0} - 56]=0,   m[r28{0} - 60]=0x8001204,   m[r28{0} - 64]=m[r28{0} - 12]{0},
                m[r28{0} - 68]=0x8001258,   m[r28{0} - 72]=r24{57} + 1,   m[r28{0} - 76]=0x8001258,   m[r28{0} - 80]=1,
                m[r28{0} - 84]=0,   m[r28{0} - 88]=0x80011f8,   m[r28{0} - 92]=m[r28{0} - 12]{0},   m[r28{0} - 96]=4,
                m[r28{0} - 100]=r28{0} - 8,   m[r28{0} - 104]=4,   m[r28{0} - 108]=0,   m[r28{0} - 112]=0x80011ec,
                m[r28{0} - 116]=m[r28{0} - 12]{0},   m[r28{0} - 120]=%pc,   tmp1=r24{57},
                %flags=ADDFLAGS32( r24{57}, 1, r24{57} + 1 ),   %ZF=ADDFLAGS32( r24{57}, 1, r24{57} + 1 ),
                %CF=ADDFLAGS32( r24{57}, 1, r24{57} + 1 )
              Live variables:  in proc proc8
dest is not lib
call:  114 {*32* r24, *v* r25, *v* r26} := CALL RegSetValueExA(
              )
              Reaching definitions: r24=r28{0} - 24,   r25=m[r28{0} - 12]{0},   r26=r26{96},   r28=r28{0} - 144,
                r29=r28{0} - 4,   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=0,
                m[r28{0} - 12]=m[r28{0} - 12]{0},   m[r28{0} - 16]=0x8001258,   m[r28{0} - 20]=0x800126c,
                m[r28{0} - 24]=0,   m[r28{0} - 28]=r28{0} - 12,   m[r28{0} - 32]=0x8001210,   m[r28{0} - 36]=0x80000002
                m[r28{0} - 40]=0x800126c,   m[r28{0} - 44]=r24{29} + 1,   m[r28{0} - 48]=0x800126c,   m[r28{0} - 52]=1,
                m[r28{0} - 56]=0,   m[r28{0} - 60]=0x8001204,   m[r28{0} - 64]=m[r28{0} - 12]{0},
                m[r28{0} - 68]=0x8001258,   m[r28{0} - 72]=r24{57} + 1,   m[r28{0} - 76]=0x8001258,   m[r28{0} - 80]=1,
                m[r28{0} - 84]=0,   m[r28{0} - 88]=0x80011f8,   m[r28{0} - 92]=m[r28{0} - 12]{0},   m[r28{0} - 96]=4,
                m[r28{0} - 100]=r28{0} - 8,   m[r28{0} - 104]=4,   m[r28{0} - 108]=0,   m[r28{0} - 112]=0x80011ec,
                m[r28{0} - 116]=m[r28{0} - 12]{0},   m[r28{0} - 120]=4,   m[r28{0} - 124]=r28{0} - 24,
                m[r28{0} - 128]=4,   m[r28{0} - 132]=0,   m[r28{0} - 136]=0x80011dc,
                m[r28{0} - 140]=m[r28{0} - 12]{0},   m[r28{0} - 144]=%pc,   tmp1=r24{57},
                %flags=ADDFLAGS32( r24{57}, 1, r24{57} + 1 ),   %ZF=ADDFLAGS32( r24{57}, 1, r24{57} + 1 ),
                %CF=ADDFLAGS32( r24{57}, 1, r24{57} + 1 )
              Live variables:  in proc proc8
dest is not lib
call:  121 {*32* r24, *32* r25, *32* r26} := CALL RegCloseKey(
                *HANDLE* local0 := param1
              )
              Reaching definitions: r24=r24{114},   r25=r25{114},   r26=m[r28{0} - 12]{0},   r28=r28{0} - 148,
                r29=r28{0} - 4,   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=0,
                m[r28{0} - 12]=m[r28{0} - 12]{0},   m[r28{0} - 16]=0x8001258,   m[r28{0} - 20]=0x800126c,
                m[r28{0} - 24]=0,   m[r28{0} - 28]=r28{0} - 12,   m[r28{0} - 32]=0x8001210,   m[r28{0} - 36]=0x80000002
                m[r28{0} - 40]=0x800126c,   m[r28{0} - 44]=r24{29} + 1,   m[r28{0} - 48]=0x800126c,   m[r28{0} - 52]=1,
                m[r28{0} - 56]=0,   m[r28{0} - 60]=0x8001204,   m[r28{0} - 64]=m[r28{0} - 12]{0},
                m[r28{0} - 68]=0x8001258,   m[r28{0} - 72]=r24{57} + 1,   m[r28{0} - 76]=0x8001258,   m[r28{0} - 80]=1,
                m[r28{0} - 84]=0,   m[r28{0} - 88]=0x80011f8,   m[r28{0} - 92]=m[r28{0} - 12]{0},   m[r28{0} - 96]=4,
                m[r28{0} - 100]=r28{0} - 8,   m[r28{0} - 104]=4,   m[r28{0} - 108]=0,   m[r28{0} - 112]=0x80011ec,
                m[r28{0} - 116]=m[r28{0} - 12]{0},   m[r28{0} - 120]=4,   m[r28{0} - 124]=r28{0} - 24,
                m[r28{0} - 128]=4,   m[r28{0} - 132]=0,   m[r28{0} - 136]=0x80011dc,
                m[r28{0} - 140]=m[r28{0} - 12]{0},   m[r28{0} - 144]=m[r28{0} - 12]{0},   m[r28{0} - 148]=%pc,
                tmp1=r24{57},   %flags=ADDFLAGS32( r24{57}, 1, r24{57} + 1 ),
                %ZF=ADDFLAGS32( r24{57}, 1, r24{57} + 1 ),   %CF=ADDFLAGS32( r24{57}, 1, r24{57} + 1 )
              Live variables:  in proc proc8
dest is not lib
call:   20 {*32* eax, *v* edx, *v* esp} := CALL lstrcpyA(
              )
              Reaching definitions: r24=r28{0} - 524,   r28=r28{0} - 540,   r29=r28{0} - 4,   r31=r31{0},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=global20 ^ (r28{0} - 4),
                m[r28{0} - 268]=m[r28{0} - 268]{0},   m[r28{0} - 524]=m[r28{0} - 524]{0},
                m[r28{0} - 528]=m[r28{0} - 528]{0},   m[r28{0} - 532]=0x8001164,   m[r28{0} - 536]=r28{0} - 524,
                m[r28{0} - 540]=%pc,   tmp1=r28{0} - 4,   %flags=LOGICALFLAGS32( global20 ^ (r28{0} - 4) ),
                %ZF=LOGICALFLAGS32( global20 ^ (r28{0} - 4) ),   %CF=LOGICALFLAGS32( global20 ^ (r28{0} - 4) )
              Live variables:  in proc proc9
dest is not lib
call:   30 {*32* eax, *v* edx, *v* esp} := CALL lstrcatA(
                *c** local0 := a[param2]
                *LPSTR* local1 := param4
              )
              Reaching definitions: r24=r24{20},   r25=m[r28{0} + 4]{0},   r26=r28{0} - 524,   r28=r28{0} - 548,
                r29=r28{0} - 4,   r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=global20 ^ (r28{0} - 4),   m[r28{0} - 268]=m[r28{0} - 268]{0},
                m[r28{0} - 524]=m[r28{0} - 524]{0},   m[r28{0} - 528]=m[r28{0} - 528]{0},   m[r28{0} - 532]=0x8001164,
                m[r28{0} - 536]=r28{0} - 524,   m[r28{0} - 540]=m[r28{0} + 4]{0},   m[r28{0} - 544]=r28{0} - 524,
                m[r28{0} - 548]=%pc,   tmp1=r28{0} - 4,   %flags=LOGICALFLAGS32( global20 ^ (r28{0} - 4) ),
                %ZF=LOGICALFLAGS32( global20 ^ (r28{0} - 4) ),   %CF=LOGICALFLAGS32( global20 ^ (r28{0} - 4) )
              Live variables:  in proc proc9
dest is not lib
call:   39 {*32* eax, *v* edx, *v* esp} := CALL lstrcatA(
                *c** local0 := a[param2]
                *LPSTR* local1 := ".sys"
              )
              Reaching definitions: r24=r28{0} - 524,   r25=r25{30},   r26=r26{30},   r28=r28{0} - 548,
                r29=r28{0} - 4,   r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=global20 ^ (r28{0} - 4),   m[r28{0} - 268]=m[r28{0} - 268]{0},
                m[r28{0} - 524]=m[r28{0} - 524]{0},   m[r28{0} - 528]=m[r28{0} - 528]{0},   m[r28{0} - 532]=0x8001164,
                m[r28{0} - 536]=r28{0} - 524,   m[r28{0} - 540]=0x80010e8,   m[r28{0} - 544]=r28{0} - 524,
                m[r28{0} - 548]=%pc,   tmp1=r28{0} - 4,   %flags=LOGICALFLAGS32( global20 ^ (r28{0} - 4) ),
                %ZF=LOGICALFLAGS32( global20 ^ (r28{0} - 4) ),   %CF=LOGICALFLAGS32( global20 ^ (r28{0} - 4) )
              Live variables:  in proc proc9
dest is not lib
call:   48 {*32* eax, *v* edx, *v* esp} := CALL lstrcpyA(
              )
              Reaching definitions: r24=r24{39},   r25=r28{0} - 268,   r26=r26{39},   r28=r28{0} - 548,
                r29=r28{0} - 4,   r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=global20 ^ (r28{0} - 4),   m[r28{0} - 268]=m[r28{0} - 268]{0},
                m[r28{0} - 524]=m[r28{0} - 524]{0},   m[r28{0} - 528]=m[r28{0} - 528]{0},   m[r28{0} - 532]=0x8001164,
                m[r28{0} - 536]=r28{0} - 524,   m[r28{0} - 540]=0x8001130,   m[r28{0} - 544]=r28{0} - 268,
                m[r28{0} - 548]=%pc,   tmp1=r28{0} - 4,   %flags=LOGICALFLAGS32( global20 ^ (r28{0} - 4) ),
                %ZF=LOGICALFLAGS32( global20 ^ (r28{0} - 4) ),   %CF=LOGICALFLAGS32( global20 ^ (r28{0} - 4) )
              Live variables:  in proc proc9
dest is not lib
call:   58 {*32* eax, *v* edx, *v* esp} := CALL lstrcatA(
                *c** local2 := a[param3]
                *LPSTR* local3 := param4
              )
              Reaching definitions: r24=r28{0} - 268,   r25=r25{48},   r26=m[r28{0} + 4]{0},   r28=r28{0} - 556,
                r29=r28{0} - 4,   r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=global20 ^ (r28{0} - 4),   m[r28{0} - 268]=m[r28{0} - 268]{0},
                m[r28{0} - 524]=m[r28{0} - 524]{0},   m[r28{0} - 528]=m[r28{0} - 528]{0},   m[r28{0} - 532]=0x8001164,
                m[r28{0} - 536]=r28{0} - 524,   m[r28{0} - 540]=0x8001130,   m[r28{0} - 544]=r28{0} - 268,
                m[r28{0} - 548]=m[r28{0} + 4]{0},   m[r28{0} - 552]=r28{0} - 268,   m[r28{0} - 556]=%pc,
                tmp1=r28{0} - 4,   %flags=LOGICALFLAGS32( global20 ^ (r28{0} - 4) ),
                %ZF=LOGICALFLAGS32( global20 ^ (r28{0} - 4) ),   %CF=LOGICALFLAGS32( global20 ^ (r28{0} - 4) )
              Live variables:  in proc proc9
dest is not lib
call:   67 {*32* eax, *v* edx, *v* esp} := CALL lstrcatA(
                *c** local2 := a[param3]
                *LPSTR* local3 := ".sys"
              )
              Reaching definitions: r24=r24{58},   r25=r28{0} - 268,   r26=r26{58},   r28=r28{0} - 556,
                r29=r28{0} - 4,   r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=global20 ^ (r28{0} - 4),   m[r28{0} - 268]=m[r28{0} - 268]{0},
                m[r28{0} - 524]=m[r28{0} - 524]{0},   m[r28{0} - 528]=m[r28{0} - 528]{0},   m[r28{0} - 532]=0x8001164,
                m[r28{0} - 536]=r28{0} - 524,   m[r28{0} - 540]=0x8001130,   m[r28{0} - 544]=r28{0} - 268,
                m[r28{0} - 548]=0x80010e8,   m[r28{0} - 552]=r28{0} - 268,   m[r28{0} - 556]=%pc,   tmp1=r28{0} - 4,
                %flags=LOGICALFLAGS32( global20 ^ (r28{0} - 4) ),   %ZF=LOGICALFLAGS32( global20 ^ (r28{0} - 4) ),
                %CF=LOGICALFLAGS32( global20 ^ (r28{0} - 4) )
              Live variables:  in proc proc9
dest is not lib
call:   79 {*32* eax, *v* edx, *v* esp} := CALL RegCreateKeyA(
              )
              Reaching definitions: r24=r28{0} - 524,   r25=r25{67},   r26=r28{0} - 528,   r28=r28{0} - 560,
                r29=r28{0} - 4,   r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=global20 ^ (r28{0} - 4),   m[r28{0} - 268]=m[r28{0} - 268]{0},
                m[r28{0} - 524]=m[r28{0} - 524]{0},   m[r28{0} - 528]=m[r28{0} - 528]{0},   m[r28{0} - 532]=0x8001164,
                m[r28{0} - 536]=r28{0} - 524,   m[r28{0} - 540]=0x8001130,   m[r28{0} - 544]=r28{0} - 268,
                m[r28{0} - 548]=r28{0} - 528,   m[r28{0} - 552]=r28{0} - 524,   m[r28{0} - 556]=0x80000002,
                m[r28{0} - 560]=%pc,   tmp1=r28{0} - 4,   %flags=LOGICALFLAGS32( global20 ^ (r28{0} - 4) ),
                %ZF=LOGICALFLAGS32( global20 ^ (r28{0} - 4) ),   %CF=LOGICALFLAGS32( global20 ^ (r28{0} - 4) )
              Live variables:  in proc proc9
dest is not lib
call:   94 {*32* eax, *v* edx, *v* esp} := CALL RegSetValueA(
              )
              Reaching definitions: r24=r24{79},   r25=m[r28{0} - 528]{0},   r26=r26{79},   r28=r28{0} - 580,
                r29=r28{0} - 4,   r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=global20 ^ (r28{0} - 4),   m[r28{0} - 268]=m[r28{0} - 268]{0},
                m[r28{0} - 524]=m[r28{0} - 524]{0},   m[r28{0} - 528]=m[r28{0} - 528]{0},   m[r28{0} - 532]=0x8001164,
                m[r28{0} - 536]=r28{0} - 524,   m[r28{0} - 540]=0x8001130,   m[r28{0} - 544]=r28{0} - 268,
                m[r28{0} - 548]=r28{0} - 528,   m[r28{0} - 552]=r28{0} - 524,   m[r28{0} - 556]=0x80000002,
                m[r28{0} - 560]=8,   m[r28{0} - 564]=0x8001128,   m[r28{0} - 568]=1,   m[r28{0} - 572]=0,
                m[r28{0} - 576]=m[r28{0} - 528]{0},   m[r28{0} - 580]=%pc,   tmp1=r28{0} - 4,
                %flags=LOGICALFLAGS32( global20 ^ (r28{0} - 4) ),   %ZF=LOGICALFLAGS32( global20 ^ (r28{0} - 4) ),
                %CF=LOGICALFLAGS32( global20 ^ (r28{0} - 4) )
              Live variables:  in proc proc9
dest is not lib
call:  101 {*32* eax, *v* edx, *v* esp} := CALL RegCloseKey(
                *HANDLE* local4 := param1
              )
              Reaching definitions: r24=r24{94},   r25=r25{94},   r26=m[r28{0} - 528]{0},   r28=r28{0} - 584,
                r29=r28{0} - 4,   r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=global20 ^ (r28{0} - 4),   m[r28{0} - 268]=m[r28{0} - 268]{0},
                m[r28{0} - 524]=m[r28{0} - 524]{0},   m[r28{0} - 528]=m[r28{0} - 528]{0},   m[r28{0} - 532]=0x8001164,
                m[r28{0} - 536]=r28{0} - 524,   m[r28{0} - 540]=0x8001130,   m[r28{0} - 544]=r28{0} - 268,
                m[r28{0} - 548]=r28{0} - 528,   m[r28{0} - 552]=r28{0} - 524,   m[r28{0} - 556]=0x80000002,
                m[r28{0} - 560]=8,   m[r28{0} - 564]=0x8001128,   m[r28{0} - 568]=1,   m[r28{0} - 572]=0,
                m[r28{0} - 576]=m[r28{0} - 528]{0},   m[r28{0} - 580]=m[r28{0} - 528]{0},   m[r28{0} - 584]=%pc,
                tmp1=r28{0} - 4,   %flags=LOGICALFLAGS32( global20 ^ (r28{0} - 4) ),
                %ZF=LOGICALFLAGS32( global20 ^ (r28{0} - 4) ),   %CF=LOGICALFLAGS32( global20 ^ (r28{0} - 4) )
              Live variables:  in proc proc9
dest is not lib
call:  113 {*32* eax, *v* edx, *v* esp} := CALL RegCreateKeyA(
              )
              Reaching definitions: r24=r28{0} - 528,   r25=r28{0} - 268,   r26=r26{101},   r28=r28{0} - 592,
                r29=r28{0} - 4,   r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=global20 ^ (r28{0} - 4),   m[r28{0} - 268]=m[r28{0} - 268]{0},
                m[r28{0} - 524]=m[r28{0} - 524]{0},   m[r28{0} - 528]=m[r28{0} - 528]{0},   m[r28{0} - 532]=0x8001164,
                m[r28{0} - 536]=r28{0} - 524,   m[r28{0} - 540]=0x8001130,   m[r28{0} - 544]=r28{0} - 268,
                m[r28{0} - 548]=r28{0} - 528,   m[r28{0} - 552]=r28{0} - 524,   m[r28{0} - 556]=0x80000002,
                m[r28{0} - 560]=8,   m[r28{0} - 564]=0x8001128,   m[r28{0} - 568]=1,   m[r28{0} - 572]=0,
                m[r28{0} - 576]=m[r28{0} - 528]{0},   m[r28{0} - 580]=r28{0} - 528,   m[r28{0} - 584]=r28{0} - 268,
                m[r28{0} - 588]=0x80000002,   m[r28{0} - 592]=%pc,   tmp1=r28{0} - 4,
                %flags=LOGICALFLAGS32( global20 ^ (r28{0} - 4) ),   %ZF=LOGICALFLAGS32( global20 ^ (r28{0} - 4) ),
                %CF=LOGICALFLAGS32( global20 ^ (r28{0} - 4) )
              Live variables:  in proc proc9
dest is not lib
call:  128 {*32* eax, *v* edx, *v* esp} := CALL RegSetValueA(
              )
              Reaching definitions: r24=r24{113},   r25=r25{113},   r26=m[r28{0} - 528]{0},   r28=r28{0} - 612,
                r29=r28{0} - 4,   r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=global20 ^ (r28{0} - 4),   m[r28{0} - 268]=m[r28{0} - 268]{0},
                m[r28{0} - 524]=m[r28{0} - 524]{0},   m[r28{0} - 528]=m[r28{0} - 528]{0},   m[r28{0} - 532]=0x8001164,
                m[r28{0} - 536]=r28{0} - 524,   m[r28{0} - 540]=0x8001130,   m[r28{0} - 544]=r28{0} - 268,
                m[r28{0} - 548]=r28{0} - 528,   m[r28{0} - 552]=r28{0} - 524,   m[r28{0} - 556]=0x80000002,
                m[r28{0} - 560]=8,   m[r28{0} - 564]=0x8001128,   m[r28{0} - 568]=1,   m[r28{0} - 572]=0,
                m[r28{0} - 576]=m[r28{0} - 528]{0},   m[r28{0} - 580]=r28{0} - 528,   m[r28{0} - 584]=r28{0} - 268,
                m[r28{0} - 588]=0x80000002,   m[r28{0} - 592]=8,   m[r28{0} - 596]=0x8001128,   m[r28{0} - 600]=1,
                m[r28{0} - 604]=0,   m[r28{0} - 608]=m[r28{0} - 528]{0},   m[r28{0} - 612]=%pc,   tmp1=r28{0} - 4,
                %flags=LOGICALFLAGS32( global20 ^ (r28{0} - 4) ),   %ZF=LOGICALFLAGS32( global20 ^ (r28{0} - 4) ),
                %CF=LOGICALFLAGS32( global20 ^ (r28{0} - 4) )
              Live variables:  in proc proc9
dest is not lib
call:  135 {*32* eax, *v* edx, *v* esp} := CALL RegCloseKey(
                *HANDLE* local5 := param1
              )
              Reaching definitions: r24=m[r28{0} - 528]{0},   r25=r25{128},   r26=r26{128},   r28=r28{0} - 616,
                r29=r28{0} - 4,   r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=global20 ^ (r28{0} - 4),   m[r28{0} - 268]=m[r28{0} - 268]{0},
                m[r28{0} - 524]=m[r28{0} - 524]{0},   m[r28{0} - 528]=m[r28{0} - 528]{0},   m[r28{0} - 532]=0x8001164,
                m[r28{0} - 536]=r28{0} - 524,   m[r28{0} - 540]=0x8001130,   m[r28{0} - 544]=r28{0} - 268,
                m[r28{0} - 548]=r28{0} - 528,   m[r28{0} - 552]=r28{0} - 524,   m[r28{0} - 556]=0x80000002,
                m[r28{0} - 560]=8,   m[r28{0} - 564]=0x8001128,   m[r28{0} - 568]=1,   m[r28{0} - 572]=0,
                m[r28{0} - 576]=m[r28{0} - 528]{0},   m[r28{0} - 580]=r28{0} - 528,   m[r28{0} - 584]=r28{0} - 268,
                m[r28{0} - 588]=0x80000002,   m[r28{0} - 592]=8,   m[r28{0} - 596]=0x8001128,   m[r28{0} - 600]=1,
                m[r28{0} - 604]=0,   m[r28{0} - 608]=m[r28{0} - 528]{0},   m[r28{0} - 612]=m[r28{0} - 528]{0},
                m[r28{0} - 616]=%pc,   tmp1=r28{0} - 4,   %flags=LOGICALFLAGS32( global20 ^ (r28{0} - 4) ),
                %ZF=LOGICALFLAGS32( global20 ^ (r28{0} - 4) ),   %CF=LOGICALFLAGS32( global20 ^ (r28{0} - 4) )
              Live variables: eax,  edx in proc proc9
result:    0 *32* eax := -
result:    0 *v* edx := -
dest is not lib
call:  142 <all> := CALL proc6(<all>)
              Reaching definitions: r24=r24{135},   r25=(global20 ^ (esp - 4)) ^ (esp - 4),   r26=r26{135},
                r28=r28{0} - 612,   r29=r28{0} - 4,   r31=r31{0},   m[r28{0} + 4]=m[esp + 4]{0},   m[r28{0} - 4]=r29{0}
                m[r28{0} - 8]=global20 ^ (esp - 4),   m[r28{0} - 268]=m[esp - 268]{0},
                m[r28{0} - 524]=m[esp - 524]{0},   m[r28{0} - 528]=m[esp - 528]{0},   m[r28{0} - 532]=0x8001164,
                m[r28{0} - 536]=r28{0} - 524,   m[r28{0} - 540]=0x8001130,   m[r28{0} - 544]=r28{0} - 268,
                m[r28{0} - 548]=r28{0} - 528,   m[r28{0} - 552]=r28{0} - 524,   m[r28{0} - 556]=0x80000002,
                m[r28{0} - 560]=8,   m[r28{0} - 564]=0x8001128,   m[r28{0} - 568]=1,   m[r28{0} - 572]=0,
                m[r28{0} - 576]=m[esp - 528]{0},   m[r28{0} - 580]=r28{0} - 528,   m[r28{0} - 584]=r28{0} - 268,
                m[r28{0} - 588]=0x80000002,   m[r28{0} - 592]=8,   m[r28{0} - 596]=0x8001128,   m[r28{0} - 600]=1,
                m[r28{0} - 604]=0,   m[r28{0} - 608]=m[esp - 528]{0},   m[r28{0} - 612]=%pc,   m[r28{0} - 616]=%pc,
                tmp1=r28{0} - 4,   %flags=LOGICALFLAGS32( (global20 ^ (esp - 4)) ^ (esp - 4) ),
                %ZF=LOGICALFLAGS32( (global20 ^ (esp - 4)) ^ (esp - 4) ),
                %CF=LOGICALFLAGS32( (global20 ^ (esp - 4)) ^ (esp - 4) )
              Live variables:  in proc proc9
dest is not lib
call:   18 {*32* eax, *v* r25, *v* r26} := CALL OpenSCManagerA(
              )
              Reaching definitions: r28=r28{0} - 36,   r29=r28{0} - 4,   r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 12]=1,
                m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 24]=0xf003f,   m[r28{0} - 28]=0,   m[r28{0} - 32]=0,
                m[r28{0} - 36]=%pc,   m[r28{0} - 52]=m[r28{0} - 52]{0},   m[r28{0} - 56]=m[r28{0} - 56]{0},
                m[r28{0} - 60]=m[r28{0} - 60]{0},   m[r28{0} - 64]=m[r28{0} - 64]{0},
                m[r28{0} - 68]=m[r28{0} - 68]{0},   m[r28{0} - 72]=m[r28{0} - 72]{0},
                m[r28{0} - 76]=m[r28{0} - 76]{0},   m[r28{0} - 80]=m[r28{0} - 80]{0},
                m[r28{0} - 84]=m[r28{0} - 84]{0},   m[r28{0} - 88]=m[r28{0} - 88]{0},
                m[r28{0} - 92]=m[r28{0} - 92]{0},   m[r28{0} - 96]=m[r28{0} - 96]{0},
                m[r28{0} - 100]=m[r28{0} - 100]{0},   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 16, r28{0} - 20 ),   %ZF=(r28{0} - 20) = 0,   %CF=(r28{0} - 4) <u 16
              Live variables:  in proc proc10
dest is not lib
call:   31 {*32* eax, *32* r25, *32* r26, *v** esp_1} := CALL OpenServiceA(
              )
              Reaching definitions: r24=m[r28{0} + 8]{0},   r25=r24{18},   r26=r26{18},   r28=r28{0} - 48,
                r29=r28{0} - 4,   r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 12]=1,   m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 20]=r24{18},
                m[r28{0} - 24]=0xf003f,   m[r28{0} - 28]=0,   m[r28{0} - 32]=0,   m[r28{0} - 36]=0xf01ff,
                m[r28{0} - 40]=m[r28{0} + 8]{0},   m[r28{0} - 44]=r24{18},   m[r28{0} - 48]=%pc,
                m[r28{0} - 52]=m[r28{0} - 52]{0},   m[r28{0} - 56]=m[r28{0} - 56]{0},
                m[r28{0} - 60]=m[r28{0} - 60]{0},   m[r28{0} - 64]=m[r28{0} - 64]{0},
                m[r28{0} - 68]=m[r28{0} - 68]{0},   m[r28{0} - 72]=m[r28{0} - 72]{0},
                m[r28{0} - 76]=m[r28{0} - 76]{0},   m[r28{0} - 80]=m[r28{0} - 80]{0},
                m[r28{0} - 84]=m[r28{0} - 84]{0},   m[r28{0} - 88]=m[r28{0} - 88]{0},
                m[r28{0} - 92]=m[r28{0} - 92]{0},   m[r28{0} - 96]=m[r28{0} - 96]{0},
                m[r28{0} - 100]=m[r28{0} - 100]{0},   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 16, r28{0} - 20 ),   %ZF=(r28{0} - 20) = 0,   %CF=(r28{0} - 4) <u 16
              Live variables: eax,  esp_1 in proc proc10
result:    0 *32* eax := -
result:    0 *v** esp_1 := -
dest is not lib
call:   68 {*32* eax, *32* r25, *32* r26, *v** esp_2} := CALL CreateServiceA(
              )
              Reaching definitions: r24=m[r28{0} + 8]{0},   r25=r24{18},   r26=m[r28{0} + 4]{0},   r28=r28{0} - 100,
                r29=r28{0} - 4,   r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{31},   m[r28{0} - 12]=1,   m[r28{0} - 16]=m[r28{0} - 16]{0},
                m[r28{0} - 20]=r24{18},   m[r28{0} - 24]=0xf003f,   m[r28{0} - 28]=0,   m[r28{0} - 32]=0,
                m[r28{0} - 36]=0xf01ff,   m[r28{0} - 40]=m[r28{0} + 8]{0},   m[r28{0} - 44]=r24{18},   m[r28{0} - 48]=0
                m[r28{0} - 52]=0,   m[r28{0} - 56]=0,   m[r28{0} - 60]=0,   m[r28{0} - 64]=0,
                m[r28{0} - 68]=m[r28{0} + 4]{0},   m[r28{0} - 72]=0,   m[r28{0} - 76]=3,   m[r28{0} - 80]=1,
                m[r28{0} - 84]=0xf01ff,   m[r28{0} - 88]=0,   m[r28{0} - 92]=m[r28{0} + 8]{0},   m[r28{0} - 96]=r24{18}
                m[r28{0} - 100]=%pc,   tmp1=r24{31},   %flags=SUBFLAGS32( m[r28{0} - 8], 0, r24{31} ),
                %ZF=r24{31} = 0,   %CF=m[r28{0} - 8] <u 0
              Live variables: eax,  esp_2 in proc proc10
result:    0 *32* eax := -
result:    0 *v** esp_2 := -
dest is not lib
call:   92 {*32* eax, *32* r25, *32* r26, *v** esp_4} := CALL GetLastError(
              )
              Reaching definitions: r24=r24{121},   r25=r25{122},   r26=r26{123},   r28=r28{124} - 4,   r29=r28{0} - 4,
                r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 8]{141},   m[r28{0} - 12]=1,   m[r28{0} - 16]=m[r28{0} - 16]{0},
                m[r28{0} - 20]=r24{18},   m[r28{0} - 24]=0xf003f,   m[r28{0} - 28]=0,   m[r28{0} - 32]=0,
                m[r28{0} - 36]=0xf01ff,   m[r28{0} - 40]=m[r28{0} + 8]{0},   m[r28{0} - 44]=r24{18},
                m[r28{0} - 48]=m[r28{0} - 48]{142},   m[r28{0} - 52]=m[r28{0} - 52]{143},
                m[r28{0} - 56]=m[r28{0} - 56]{144},   m[r28{0} - 60]=m[r28{0} - 60]{145},
                m[r28{0} - 64]=m[r28{0} - 64]{146},   m[r28{0} - 68]=m[r28{0} - 68]{147},
                m[r28{0} - 72]=m[r28{0} - 72]{148},   m[r28{0} - 76]=m[r28{0} - 76]{149},
                m[r28{0} - 80]=m[r28{0} - 80]{150},   m[r28{0} - 84]=m[r28{0} - 84]{151},
                m[r28{0} - 88]=m[r28{0} - 88]{152},   m[r28{0} - 92]=m[r28{0} - 92]{153},
                m[r28{0} - 96]=m[r28{0} - 96]{154},   m[r28{0} - 100]=m[r28{0} - 100]{155},   tmp1=tmp1{125},
                %flags=%flags{126},   %ZF=%ZF{127},   %CF=%CF{128}
              Live variables: eax,  esp_4 in proc proc10
result:    0 *32* eax := -
result:    0 *v** esp_4 := -
dest is not lib
call:   83 {*32* eax, *32* r25, *32* r26, *v** esp_3} := CALL StartServiceA(
              )
              Reaching definitions: r24=r24{117},   r25=r25{118},   r26=m[r28{0} - 8]{141},   r28=r28{120} - 16,
                r29=r28{0} - 4,   r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{141},   m[r28{0} - 12]=1,
                m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 20]=r24{18},   m[r28{0} - 24]=0xf003f,
                m[r28{0} - 28]=0,   m[r28{0} - 32]=0,   m[r28{0} - 36]=0xf01ff,   m[r28{0} - 40]=m[r28{0} + 8]{0},
                m[r28{0} - 44]=r24{18},   m[r28{0} - 48]=m[r28{0} - 48]{142},   m[r28{0} - 52]=m[r28{0} - 52]{143},
                m[r28{0} - 56]=m[r28{0} - 56]{144},   m[r28{0} - 60]=m[r28{0} - 60]{145},
                m[r28{0} - 64]=m[r28{0} - 64]{146},   m[r28{0} - 68]=m[r28{0} - 68]{147},
                m[r28{0} - 72]=m[r28{0} - 72]{148},   m[r28{0} - 76]=m[r28{0} - 76]{149},
                m[r28{0} - 80]=m[r28{0} - 80]{150},   m[r28{0} - 84]=m[r28{0} - 84]{151},
                m[r28{0} - 88]=m[r28{0} - 88]{152},   m[r28{0} - 92]=m[r28{0} - 92]{153},
                m[r28{0} - 96]=m[r28{0} - 96]{154},   m[r28{0} - 100]=m[r28{0} - 100]{155},   tmp1=m[r28{0} - 8]{141},
                %flags=SUBFLAGS32( m[(r28{0} - 4) - 4], 0, m[r28{0} - 8]{141} ),   %ZF=m[r28{0} - 8]{141} = 0,
                %CF=m[(r28{0} - 4) - 4] <u 0
              Live variables: eax,  esp_3 in proc proc10
result:    0 *32* eax := -
result:    0 *v** esp_3 := -
dest is not lib
call:  109 {*32* eax, *32* r25, *32* r26} := CALL CloseServiceHandle(
              )
              Reaching definitions: r24=m[r28{0} - 8]{141},   r25=r25{130},   r26=r26{131},   r28=r28{132} - 8,
                r29=r28{0} - 4,   r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{141},   m[r28{0} - 12]=m[r28{0} - 12]{156},
                m[r28{0} - 16]=m[r28{0} - 16]{157},   m[r28{0} - 20]=r24{18},   m[r28{0} - 24]=0xf003f,
                m[r28{0} - 28]=0,   m[r28{0} - 32]=0,   m[r28{0} - 36]=0xf01ff,   m[r28{0} - 40]=m[r28{0} + 8]{0},
                m[r28{0} - 44]=r24{18},   m[r28{0} - 48]=m[r28{0} - 48]{142},   m[r28{0} - 52]=m[r28{0} - 52]{143},
                m[r28{0} - 56]=m[r28{0} - 56]{144},   m[r28{0} - 60]=m[r28{0} - 60]{145},
                m[r28{0} - 64]=m[r28{0} - 64]{146},   m[r28{0} - 68]=m[r28{0} - 68]{147},
                m[r28{0} - 72]=m[r28{0} - 72]{148},   m[r28{0} - 76]=m[r28{0} - 76]{149},
                m[r28{0} - 80]=m[r28{0} - 80]{150},   m[r28{0} - 84]=m[r28{0} - 84]{151},
                m[r28{0} - 88]=m[r28{0} - 88]{152},   m[r28{0} - 92]=m[r28{0} - 92]{153},
                m[r28{0} - 96]=m[r28{0} - 96]{154},   m[r28{0} - 100]=m[r28{0} - 100]{155},   tmp1=m[r28{0} - 8]{141},
                %flags=SUBFLAGS32( m[(r28{0} - 4) - 4], 0, m[r28{0} - 8]{141} ),   %ZF=m[r28{0} - 8]{141} = 0,
                %CF=m[(r28{0} - 4) - 4] <u 0
              Live variables:  in proc proc10
dest is not lib
call:   22 {*32* eax, *v* edx, *v* esp} := CALL lstrcpyA(
              )
              Reaching definitions: r1=truncu(32,16,r28{0} - 524),   r24=m[r28{0} + 8]{0},   r25=r28{0} - 524,
                r28=r28{0} - 804,   r29=r28{0} - 4,   r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 12]=global20 ^ (r28{0} - 4),
                m[r28{0} - 257]=m[r28{0} - 257]{0},   m[r28{0} - 524]=m[r28{0} - 524]{0},
                m[r28{0} - 528]=m[r28{0} - 528]{0},   m[r28{0} - 788]=m[r28{0} - 788]{0},
                m[r28{0} - 796]=m[r28{0} + 8]{0},   m[r28{0} - 800]=r28{0} - 524,   m[r28{0} - 804]=%pc,
                tmp1=r28{0} - 4,   %flags=LOGICALFLAGS32( global20 ^ (r28{0} - 4) ),
                %ZF=LOGICALFLAGS32( global20 ^ (r28{0} - 4) ),   %CF=LOGICALFLAGS32( global20 ^ (r28{0} - 4) )
              Live variables:  in proc proc11
dest is not lib
call:   33 {*32* eax, *v* edx, *v* esp} := CALL lstrcatA(
                *c** local0 := a[param3]
                *LPSTR* local1 := param5
              )
              Reaching definitions: r1=truncu(32,16,r28{0} - 524),   r10=truncu(32,8,m[r28{0} + 4]{0}),
                r24=r28{0} - 524,   r25=r25{22},   r26=m[r28{0} + 4]{0},   r28=r28{0} - 812,   r29=r28{0} - 4,
                r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=global20 ^ (r28{0} - 4),   m[r28{0} - 257]=m[r28{0} - 257]{0},
                m[r28{0} - 524]=m[r28{0} - 524]{0},   m[r28{0} - 528]=m[r28{0} - 528]{0},
                m[r28{0} - 788]=m[r28{0} - 788]{0},   m[r28{0} - 796]=m[r28{0} + 8]{0},   m[r28{0} - 800]=r28{0} - 524,
                m[r28{0} - 804]=m[r28{0} + 4]{0},   m[r28{0} - 808]=r28{0} - 524,   m[r28{0} - 812]=%pc,
                tmp1=r28{0} - 4,   %flags=LOGICALFLAGS32( global20 ^ (r28{0} - 4) ),
                %ZF=LOGICALFLAGS32( global20 ^ (r28{0} - 4) ),   %CF=LOGICALFLAGS32( global20 ^ (r28{0} - 4) )
              Live variables:  in proc proc11
dest is not lib
call:   47 {*32* eax, *v* edx, *v* esp} := CALL RegCreateKeyA(
              )
              Reaching definitions: r1=truncu(32,16,r28{0} - 528),   r10=truncu(32,8,r28{0} - 524),   r24=r24{33},
                r25=r28{0} - 528,   r26=r28{0} - 524,   r28=r28{0} - 816,   r29=r28{0} - 4,   r31=r31{0},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=global20 ^ (r28{0} - 4),   m[r28{0} - 257]=m[r28{0} - 257]{0},
                m[r28{0} - 524]=m[r28{0} - 524]{0},   m[r28{0} - 528]=m[r28{0} - 528]{0},
                m[r28{0} - 788]=m[r28{0} - 788]{0},   m[r28{0} - 796]=m[r28{0} + 8]{0},   m[r28{0} - 800]=r28{0} - 524,
                m[r28{0} - 804]=r28{0} - 528,   m[r28{0} - 808]=r28{0} - 524,   m[r28{0} - 812]=0x80000002,
                m[r28{0} - 816]=%pc,   tmp1=r28{0} - 4,   %flags=LOGICALFLAGS32( global20 ^ (r28{0} - 4) ),
                %ZF=LOGICALFLAGS32( global20 ^ (r28{0} - 4) ),   %CF=LOGICALFLAGS32( global20 ^ (r28{0} - 4) )
              Live variables:  in proc proc11
dest is not lib
call:   67 {*32* eax, *v* edx, *v* esp} := CALL RegSetValueExA(
              )
              Reaching definitions: r1=truncu(32,16,m[r28{0} - 528]{0}),   r10=truncu(32,8,r28{0} - 524),
                r24=r28{0} - 792,   r25=m[r28{0} - 528]{0},   r26=r26{47},   r28=r28{0} - 840,   r29=r28{0} - 4,
                r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=global20 ^ (r28{0} - 4),   m[r28{0} - 257]=m[r28{0} - 257]{0},
                m[r28{0} - 524]=m[r28{0} - 524]{0},   m[r28{0} - 528]=m[r28{0} - 528]{0},
                m[r28{0} - 788]=m[r28{0} - 788]{0},   m[r28{0} - 792]=1,   m[r28{0} - 796]=m[r28{0} + 8]{0},
                m[r28{0} - 800]=r28{0} - 524,   m[r28{0} - 804]=r28{0} - 528,   m[r28{0} - 808]=r28{0} - 524,
                m[r28{0} - 812]=0x80000002,   m[r28{0} - 816]=4,   m[r28{0} - 820]=r28{0} - 792,   m[r28{0} - 824]=4,
                m[r28{0} - 828]=0,   m[r28{0} - 832]=0x80011d4,   m[r28{0} - 836]=m[r28{0} - 528]{0},
                m[r28{0} - 840]=%pc,   tmp1=r28{0} - 4,   %flags=LOGICALFLAGS32( global20 ^ (r28{0} - 4) ),
                %ZF=LOGICALFLAGS32( global20 ^ (r28{0} - 4) ),   %CF=LOGICALFLAGS32( global20 ^ (r28{0} - 4) )
              Live variables:  in proc proc11
dest is not lib
call:   87 {*32* eax, *v* edx, *v* esp} := CALL RegSetValueExA(
              )
              Reaching definitions: r1=truncu(32,16,m[r28{0} - 528]{0}),   r10=truncu(32,8,r28{0} - 8),
                r24=m[r28{0} - 528]{0},   r25=r25{67},   r26=r28{0} - 8,   r28=r28{0} - 864,   r29=r28{0} - 4,
                r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=0,   m[r28{0} - 12]=global20 ^ (r28{0} - 4),   m[r28{0} - 257]=m[r28{0} - 257]{0},
                m[r28{0} - 524]=m[r28{0} - 524]{0},   m[r28{0} - 528]=m[r28{0} - 528]{0},
                m[r28{0} - 788]=m[r28{0} - 788]{0},   m[r28{0} - 792]=1,   m[r28{0} - 796]=m[r28{0} + 8]{0},
                m[r28{0} - 800]=r28{0} - 524,   m[r28{0} - 804]=r28{0} - 528,   m[r28{0} - 808]=r28{0} - 524,
                m[r28{0} - 812]=0x80000002,   m[r28{0} - 816]=4,   m[r28{0} - 820]=r28{0} - 792,   m[r28{0} - 824]=4,
                m[r28{0} - 828]=0,   m[r28{0} - 832]=0x80011d4,   m[r28{0} - 836]=m[r28{0} - 528]{0},
                m[r28{0} - 840]=4,   m[r28{0} - 844]=r28{0} - 8,   m[r28{0} - 848]=4,   m[r28{0} - 852]=0,
                m[r28{0} - 856]=0x80011cc,   m[r28{0} - 860]=m[r28{0} - 528]{0},   m[r28{0} - 864]=%pc,
                tmp1=r28{0} - 4,   %flags=LOGICALFLAGS32( global20 ^ (r28{0} - 4) ),
                %ZF=LOGICALFLAGS32( global20 ^ (r28{0} - 4) ),   %CF=LOGICALFLAGS32( global20 ^ (r28{0} - 4) )
              Live variables:  in proc proc11
dest is not lib
call:   97 {*32* eax, *v* edx, *v* esp} := CALL lstrcpyA(
              )
              Reaching definitions: r1=truncu(32,16,r28{0} - 788),   r10=truncu(32,8,r28{0} - 8),   r24=r24{87},
                r25=r28{0} - 788,   r26=r26{87},   r28=r28{0} - 872,   r29=r28{0} - 4,   r31=r31{0},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=0,   m[r28{0} - 12]=global20 ^ (r28{0} - 4),   m[r28{0} - 257]=m[r28{0} - 257]{0},
                m[r28{0} - 524]=m[r28{0} - 524]{0},   m[r28{0} - 528]=m[r28{0} - 528]{0},
                m[r28{0} - 788]=m[r28{0} - 788]{0},   m[r28{0} - 792]=1,   m[r28{0} - 796]=m[r28{0} + 8]{0},
                m[r28{0} - 800]=r28{0} - 524,   m[r28{0} - 804]=r28{0} - 528,   m[r28{0} - 808]=r28{0} - 524,
                m[r28{0} - 812]=0x80000002,   m[r28{0} - 816]=4,   m[r28{0} - 820]=r28{0} - 792,   m[r28{0} - 824]=4,
                m[r28{0} - 828]=0,   m[r28{0} - 832]=0x80011d4,   m[r28{0} - 836]=m[r28{0} - 528]{0},
                m[r28{0} - 840]=4,   m[r28{0} - 844]=r28{0} - 8,   m[r28{0} - 848]=4,   m[r28{0} - 852]=0,
                m[r28{0} - 856]=0x80011cc,   m[r28{0} - 860]=m[r28{0} - 528]{0},   m[r28{0} - 864]=0x80011b8,
                m[r28{0} - 868]=r28{0} - 788,   m[r28{0} - 872]=%pc,   tmp1=r28{0} - 4,
                %flags=LOGICALFLAGS32( global20 ^ (r28{0} - 4) ),   %ZF=LOGICALFLAGS32( global20 ^ (r28{0} - 4) ),
                %CF=LOGICALFLAGS32( global20 ^ (r28{0} - 4) )
              Live variables:  in proc proc11
dest is not lib
call:  108 {*32* eax, *v* edx, *v* esp} := CALL lstrcatA(
                *c** local2 := a[param1]
                *LPSTR* local3 := param5
              )
              Reaching definitions: r1=truncu(32,16,r28{0} - 788),   r10=truncu(32,8,m[r28{0} + 4]{0}),
                r24=r28{0} - 788,   r25=r25{97},   r26=m[r28{0} + 4]{0},   r28=r28{0} - 880,   r29=r28{0} - 4,
                r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=0,   m[r28{0} - 12]=global20 ^ (r28{0} - 4),   m[r28{0} - 257]=m[r28{0} - 257]{0},
                m[r28{0} - 524]=m[r28{0} - 524]{0},   m[r28{0} - 528]=m[r28{0} - 528]{0},
                m[r28{0} - 788]=m[r28{0} - 788]{0},   m[r28{0} - 792]=1,   m[r28{0} - 796]=m[r28{0} + 8]{0},
                m[r28{0} - 800]=r28{0} - 524,   m[r28{0} - 804]=r28{0} - 528,   m[r28{0} - 808]=r28{0} - 524,
                m[r28{0} - 812]=0x80000002,   m[r28{0} - 816]=4,   m[r28{0} - 820]=r28{0} - 792,   m[r28{0} - 824]=4,
                m[r28{0} - 828]=0,   m[r28{0} - 832]=0x80011d4,   m[r28{0} - 836]=m[r28{0} - 528]{0},
                m[r28{0} - 840]=4,   m[r28{0} - 844]=r28{0} - 8,   m[r28{0} - 848]=4,   m[r28{0} - 852]=0,
                m[r28{0} - 856]=0x80011cc,   m[r28{0} - 860]=m[r28{0} - 528]{0},   m[r28{0} - 864]=0x80011b8,
                m[r28{0} - 868]=r28{0} - 788,   m[r28{0} - 872]=m[r28{0} + 4]{0},   m[r28{0} - 876]=r28{0} - 788,
                m[r28{0} - 880]=%pc,   tmp1=r28{0} - 4,   %flags=LOGICALFLAGS32( global20 ^ (r28{0} - 4) ),
                %ZF=LOGICALFLAGS32( global20 ^ (r28{0} - 4) ),   %CF=LOGICALFLAGS32( global20 ^ (r28{0} - 4) )
              Live variables:  in proc proc11
dest is not lib
call:  118 {*32* eax, *v* edx, *v* esp} := CALL lstrcatA(
                *c** local2 := a[param1]
                *LPSTR* local3 := ".sys"
              )
              Reaching definitions: r1=truncu(32,16,r28{0} - 788),   r10=truncu(32,8,m[r28{0} + 4]{0}),   r24=r24{108},
                r25=r28{0} - 788,   r26=r26{108},   r28=r28{0} - 880,   r29=r28{0} - 4,   r31=r31{0},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=0,   m[r28{0} - 12]=global20 ^ (r28{0} - 4),   m[r28{0} - 257]=m[r28{0} - 257]{0},
                m[r28{0} - 524]=m[r28{0} - 524]{0},   m[r28{0} - 528]=m[r28{0} - 528]{0},
                m[r28{0} - 788]=m[r28{0} - 788]{0},   m[r28{0} - 792]=1,   m[r28{0} - 796]=m[r28{0} + 8]{0},
                m[r28{0} - 800]=r28{0} - 524,   m[r28{0} - 804]=r28{0} - 528,   m[r28{0} - 808]=r28{0} - 524,
                m[r28{0} - 812]=0x80000002,   m[r28{0} - 816]=4,   m[r28{0} - 820]=r28{0} - 792,   m[r28{0} - 824]=4,
                m[r28{0} - 828]=0,   m[r28{0} - 832]=0x80011d4,   m[r28{0} - 836]=m[r28{0} - 528]{0},
                m[r28{0} - 840]=4,   m[r28{0} - 844]=r28{0} - 8,   m[r28{0} - 848]=4,   m[r28{0} - 852]=0,
                m[r28{0} - 856]=0x80011cc,   m[r28{0} - 860]=m[r28{0} - 528]{0},   m[r28{0} - 864]=0x80011b8,
                m[r28{0} - 868]=r28{0} - 788,   m[r28{0} - 872]=0x80010e8,   m[r28{0} - 876]=r28{0} - 788,
                m[r28{0} - 880]=%pc,   tmp1=r28{0} - 4,   %flags=LOGICALFLAGS32( global20 ^ (r28{0} - 4) ),
                %ZF=LOGICALFLAGS32( global20 ^ (r28{0} - 4) ),   %CF=LOGICALFLAGS32( global20 ^ (r28{0} - 4) )
              Live variables:  in proc proc11
dest is not lib
call:  126 {*32* eax_1, *v* edx, *v* esp} := CALL lstrlenA(
              )
              Reaching definitions: r1=truncu(32,16,r28{0} - 788),   r10=truncu(32,8,r28{0} - 788),   r24=r24{118},
                r25=r25{118},   r26=r28{0} - 788,   r28=r28{0} - 876,   r29=r28{0} - 4,   r31=r31{0},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=0,   m[r28{0} - 12]=global20 ^ (r28{0} - 4),   m[r28{0} - 257]=m[r28{0} - 257]{0},
                m[r28{0} - 524]=m[r28{0} - 524]{0},   m[r28{0} - 528]=m[r28{0} - 528]{0},
                m[r28{0} - 788]=m[r28{0} - 788]{0},   m[r28{0} - 792]=1,   m[r28{0} - 796]=m[r28{0} + 8]{0},
                m[r28{0} - 800]=r28{0} - 524,   m[r28{0} - 804]=r28{0} - 528,   m[r28{0} - 808]=r28{0} - 524,
                m[r28{0} - 812]=0x80000002,   m[r28{0} - 816]=4,   m[r28{0} - 820]=r28{0} - 792,   m[r28{0} - 824]=4,
                m[r28{0} - 828]=0,   m[r28{0} - 832]=0x80011d4,   m[r28{0} - 836]=m[r28{0} - 528]{0},
                m[r28{0} - 840]=4,   m[r28{0} - 844]=r28{0} - 8,   m[r28{0} - 848]=4,   m[r28{0} - 852]=0,
                m[r28{0} - 856]=0x80011cc,   m[r28{0} - 860]=m[r28{0} - 528]{0},   m[r28{0} - 864]=0x80011b8,
                m[r28{0} - 868]=r28{0} - 788,   m[r28{0} - 872]=r28{0} - 788,   m[r28{0} - 876]=%pc,
                m[r28{0} - 880]=%pc,   tmp1=r28{0} - 4,   %flags=LOGICALFLAGS32( global20 ^ (r28{0} - 4) ),
                %ZF=LOGICALFLAGS32( global20 ^ (r28{0} - 4) ),   %CF=LOGICALFLAGS32( global20 ^ (r28{0} - 4) )
              Live variables: eax_1 in proc proc11
result:    0 *32* eax_1 := -
dest is not lib
call:  148 {*32* eax, *v* edx, *v* esp} := CALL RegSetValueExA(
              )
              Reaching definitions: r1=truncu(32,16,m[r28{0} - 528]{0}),   r10=truncu(32,8,r28{0} - 788),
                r24=r28{0} - 788,   r25=m[r28{0} - 528]{0},   r26=r26{126},   r28=r28{0} - 900,   r29=r28{0} - 4,
                r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=0,   m[r28{0} - 12]=global20 ^ (r28{0} - 4),   m[r28{0} - 257]=m[r28{0} - 257]{0},
                m[r28{0} - 524]=m[r28{0} - 524]{0},   m[r28{0} - 528]=m[r28{0} - 528]{0},
                m[r28{0} - 788]=m[r28{0} - 788]{0},   m[r28{0} - 792]=1,   m[r28{0} - 796]=m[r28{0} + 8]{0},
                m[r28{0} - 800]=r28{0} - 524,   m[r28{0} - 804]=r28{0} - 528,   m[r28{0} - 808]=r28{0} - 524,
                m[r28{0} - 812]=0x80000002,   m[r28{0} - 816]=4,   m[r28{0} - 820]=r28{0} - 792,   m[r28{0} - 824]=4,
                m[r28{0} - 828]=0,   m[r28{0} - 832]=0x80011d4,   m[r28{0} - 836]=m[r28{0} - 528]{0},
                m[r28{0} - 840]=4,   m[r28{0} - 844]=r28{0} - 8,   m[r28{0} - 848]=4,   m[r28{0} - 852]=0,
                m[r28{0} - 856]=0x80011cc,   m[r28{0} - 860]=m[r28{0} - 528]{0},   m[r28{0} - 864]=0x80011b8,
                m[r28{0} - 868]=r28{0} - 788,   m[r28{0} - 872]=r28{0} - 788,   m[r28{0} - 876]=r24{126} + 1,
                m[r28{0} - 880]=r28{0} - 788,   m[r28{0} - 884]=1,   m[r28{0} - 888]=0,   m[r28{0} - 892]=0x80011ac,
                m[r28{0} - 896]=m[r28{0} - 528]{0},   m[r28{0} - 900]=%pc,   tmp1=r24{126},
                %flags=ADDFLAGS32( r24{126}, 1, r24{126} + 1 ),   %ZF=ADDFLAGS32( r24{126}, 1, r24{126} + 1 ),
                %CF=ADDFLAGS32( r24{126}, 1, r24{126} + 1 )
              Live variables:  in proc proc11
dest is not lib
call:  170 {*32* eax, *8* cl, *32* edx, *v* esp} := CALL proc13(
                *u8** local4 := a[param4]
                *u8* local5 := 0
                *32* local6 := 245
              )
              Reaching definitions: r1=0x7373,   r10=0,   r24=r28{0} - 257,   r25=(r25{148}@31:16) | 0x7373,
                r26=0x49534353@31:8,   r28=r28{0} - 912,   r29=r28{0} - 4,   r31=r31{0},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=0,   m[r28{0} - 12]=global20 ^ (r28{0} - 4),   m[r28{0} - 257]=m[r28{0} - 257]{0},
                m[r28{0} - 258]=0,   m[r28{0} - 260]=0x7373,   m[r28{0} - 264]=0x616c4320,   m[r28{0} - 268]=0x49534353
                m[r28{0} - 524]=m[r28{0} - 524]{0},   m[r28{0} - 528]=m[r28{0} - 528]{0},
                m[r28{0} - 788]=m[r28{0} - 788]{0},   m[r28{0} - 792]=1,   m[r28{0} - 796]=m[r28{0} + 8]{0},
                m[r28{0} - 800]=r28{0} - 524,   m[r28{0} - 804]=r28{0} - 528,   m[r28{0} - 808]=r28{0} - 524,
                m[r28{0} - 812]=0x80000002,   m[r28{0} - 816]=4,   m[r28{0} - 820]=r28{0} - 792,   m[r28{0} - 824]=4,
                m[r28{0} - 828]=0,   m[r28{0} - 832]=0x80011d4,   m[r28{0} - 836]=m[r28{0} - 528]{0},
                m[r28{0} - 840]=4,   m[r28{0} - 844]=r28{0} - 8,   m[r28{0} - 848]=4,   m[r28{0} - 852]=0,
                m[r28{0} - 856]=0x80011cc,   m[r28{0} - 860]=m[r28{0} - 528]{0},   m[r28{0} - 864]=0x80011b8,
                m[r28{0} - 868]=r28{0} - 788,   m[r28{0} - 872]=r28{0} - 788,   m[r28{0} - 876]=r24{126} + 1,
                m[r28{0} - 880]=r28{0} - 788,   m[r28{0} - 884]=1,   m[r28{0} - 888]=0,   m[r28{0} - 892]=0x80011ac,
                m[r28{0} - 896]=m[r28{0} - 528]{0},   m[r28{0} - 900]=245,   m[r28{0} - 904]=0,
                m[r28{0} - 908]=r28{0} - 257,   m[r28{0} - 912]=%pc,   tmp1=r24{126},
                %flags=ADDFLAGS32( r24{126}, 1, r24{126} + 1 ),   %ZF=ADDFLAGS32( r24{126}, 1, r24{126} + 1 ),
                %CF=ADDFLAGS32( r24{126}, 1, r24{126} + 1 )
              Live variables: cl in proc proc11
result:    0 *8* cl := -
dest is not lib
call:  181 {*32* eax, *v* edx, *v* esp} := CALL lstrlenA(
              )
              Reaching definitions: r1=truncu(32,16,r28{0} - 268),   r9=r9{170},   r10=0,   r24=r24{170},
                r25=r28{0} - 268,   r26=r26{170},   r28=r28{0} - 904,   r29=r28{0} - 4,   r31=r31{0},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=0,   m[r28{0} - 12]=global20 ^ (r28{0} - 4),   m[r28{0} - 257]=m[r28{0} - 257]{0},
                m[r28{0} - 258]=0,   m[r28{0} - 260]=0x7373,   m[r28{0} - 264]=0x616c4320,   m[r28{0} - 268]=0x49534353
                m[r28{0} - 524]=m[r28{0} - 524]{0},   m[r28{0} - 528]=m[r28{0} - 528]{0},
                m[r28{0} - 788]=m[r28{0} - 788]{0},   m[r28{0} - 792]=1,   m[r28{0} - 796]=m[r28{0} + 8]{0},
                m[r28{0} - 800]=r28{0} - 524,   m[r28{0} - 804]=r28{0} - 528,   m[r28{0} - 808]=r28{0} - 524,
                m[r28{0} - 812]=0x80000002,   m[r28{0} - 816]=4,   m[r28{0} - 820]=r28{0} - 792,   m[r28{0} - 824]=4,
                m[r28{0} - 828]=0,   m[r28{0} - 832]=0x80011d4,   m[r28{0} - 836]=m[r28{0} - 528]{0},
                m[r28{0} - 840]=4,   m[r28{0} - 844]=r28{0} - 8,   m[r28{0} - 848]=4,   m[r28{0} - 852]=0,
                m[r28{0} - 856]=0x80011cc,   m[r28{0} - 860]=m[r28{0} - 528]{0},   m[r28{0} - 864]=0x80011b8,
                m[r28{0} - 868]=r28{0} - 788,   m[r28{0} - 872]=r28{0} - 788,   m[r28{0} - 876]=r24{126} + 1,
                m[r28{0} - 880]=r28{0} - 788,   m[r28{0} - 884]=1,   m[r28{0} - 888]=0,   m[r28{0} - 892]=0x80011ac,
                m[r28{0} - 896]=m[r28{0} - 528]{0},   m[r28{0} - 900]=r28{0} - 268,   m[r28{0} - 904]=%pc,
                m[r28{0} - 908]=r28{0} - 257,   m[r28{0} - 912]=%pc,   tmp1=(r28{0} - 912) + 4,
                %flags=ADDFLAGS32( r28{0} - 908, 12, r28{0} - 896 ),   %ZF=ADDFLAGS32( r28{0} - 908, 12, r28{0} - 896 )
                %CF=ADDFLAGS32( r28{0} - 908, 12, r28{0} - 896 )
              Live variables: eax in proc proc11
result:    0 *32* eax := -
dest is not lib
call:  203 {*32* eax, *v* edx, *v* esp} := CALL RegSetValueExA(
              )
              Reaching definitions: r1=truncu(32,16,r28{0} - 268),   r9=r9{170},   r10=truncu(32,8,r28{0} - 268),
                r24=m[r28{0} - 528]{0},   r25=r25{181},   r26=r28{0} - 268,   r28=r28{0} - 928,   r29=r28{0} - 4,
                r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=0,   m[r28{0} - 12]=global20 ^ (r28{0} - 4),   m[r28{0} - 257]=m[r28{0} - 257]{0},
                m[r28{0} - 258]=0,   m[r28{0} - 260]=0x7373,   m[r28{0} - 264]=0x616c4320,   m[r28{0} - 268]=0x49534353
                m[r28{0} - 524]=m[r28{0} - 524]{0},   m[r28{0} - 528]=m[r28{0} - 528]{0},
                m[r28{0} - 788]=m[r28{0} - 788]{0},   m[r28{0} - 792]=1,   m[r28{0} - 796]=m[r28{0} + 8]{0},
                m[r28{0} - 800]=r28{0} - 524,   m[r28{0} - 804]=r28{0} - 528,   m[r28{0} - 808]=r28{0} - 524,
                m[r28{0} - 812]=0x80000002,   m[r28{0} - 816]=4,   m[r28{0} - 820]=r28{0} - 792,   m[r28{0} - 824]=4,
                m[r28{0} - 828]=0,   m[r28{0} - 832]=0x80011d4,   m[r28{0} - 836]=m[r28{0} - 528]{0},
                m[r28{0} - 840]=4,   m[r28{0} - 844]=r28{0} - 8,   m[r28{0} - 848]=4,   m[r28{0} - 852]=0,
                m[r28{0} - 856]=0x80011cc,   m[r28{0} - 860]=m[r28{0} - 528]{0},   m[r28{0} - 864]=0x80011b8,
                m[r28{0} - 868]=r28{0} - 788,   m[r28{0} - 872]=r28{0} - 788,   m[r28{0} - 876]=r24{126} + 1,
                m[r28{0} - 880]=r28{0} - 788,   m[r28{0} - 884]=1,   m[r28{0} - 888]=0,   m[r28{0} - 892]=0x80011ac,
                m[r28{0} - 896]=m[r28{0} - 528]{0},   m[r28{0} - 900]=r28{0} - 268,   m[r28{0} - 904]=r24{181} + 1,
                m[r28{0} - 908]=r28{0} - 268,   m[r28{0} - 912]=1,   m[r28{0} - 916]=0,   m[r28{0} - 920]=0x8001198,
                m[r28{0} - 924]=m[r28{0} - 528]{0},   m[r28{0} - 928]=%pc,   tmp1=r24{181},
                %flags=ADDFLAGS32( r24{181}, 1, r24{181} + 1 ),   %ZF=ADDFLAGS32( r24{181}, 1, r24{181} + 1 ),
                %CF=ADDFLAGS32( r24{181}, 1, r24{181} + 1 )
              Live variables:  in proc proc11
dest is not lib
call:  211 {*32* eax, *v* edx, *v* esp} := CALL RegCloseKey(
                *HANDLE* local7 := param2
              )
              Reaching definitions: r1=truncu(32,16,m[r28{0} - 528]{0}),   r9=r9{170},   r10=truncu(32,8,r28{0} - 268),
                r24=r24{203},   r25=m[r28{0} - 528]{0},   r26=r26{203},   r28=r28{0} - 932,   r29=r28{0} - 4,
                r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=0,   m[r28{0} - 12]=global20 ^ (r28{0} - 4),   m[r28{0} - 257]=m[r28{0} - 257]{0},
                m[r28{0} - 258]=0,   m[r28{0} - 260]=0x7373,   m[r28{0} - 264]=0x616c4320,   m[r28{0} - 268]=0x49534353
                m[r28{0} - 524]=m[r28{0} - 524]{0},   m[r28{0} - 528]=m[r28{0} - 528]{0},
                m[r28{0} - 788]=m[r28{0} - 788]{0},   m[r28{0} - 792]=1,   m[r28{0} - 796]=m[r28{0} + 8]{0},
                m[r28{0} - 800]=r28{0} - 524,   m[r28{0} - 804]=r28{0} - 528,   m[r28{0} - 808]=r28{0} - 524,
                m[r28{0} - 812]=0x80000002,   m[r28{0} - 816]=4,   m[r28{0} - 820]=r28{0} - 792,   m[r28{0} - 824]=4,
                m[r28{0} - 828]=0,   m[r28{0} - 832]=0x80011d4,   m[r28{0} - 836]=m[r28{0} - 528]{0},
                m[r28{0} - 840]=4,   m[r28{0} - 844]=r28{0} - 8,   m[r28{0} - 848]=4,   m[r28{0} - 852]=0,
                m[r28{0} - 856]=0x80011cc,   m[r28{0} - 860]=m[r28{0} - 528]{0},   m[r28{0} - 864]=0x80011b8,
                m[r28{0} - 868]=r28{0} - 788,   m[r28{0} - 872]=r28{0} - 788,   m[r28{0} - 876]=r24{126} + 1,
                m[r28{0} - 880]=r28{0} - 788,   m[r28{0} - 884]=1,   m[r28{0} - 888]=0,   m[r28{0} - 892]=0x80011ac,
                m[r28{0} - 896]=m[r28{0} - 528]{0},   m[r28{0} - 900]=r28{0} - 268,   m[r28{0} - 904]=r24{181} + 1,
                m[r28{0} - 908]=r28{0} - 268,   m[r28{0} - 912]=1,   m[r28{0} - 916]=0,   m[r28{0} - 920]=0x8001198,
                m[r28{0} - 924]=m[r28{0} - 528]{0},   m[r28{0} - 928]=m[r28{0} - 528]{0},   m[r28{0} - 932]=%pc,
                tmp1=r24{181},   %flags=ADDFLAGS32( r24{181}, 1, r24{181} + 1 ),
                %ZF=ADDFLAGS32( r24{181}, 1, r24{181} + 1 ),   %CF=ADDFLAGS32( r24{181}, 1, r24{181} + 1 )
              Live variables: eax,  edx in proc proc11
result:    0 *32* eax := -
result:    0 *v* edx := -
dest is not lib
call:  220 <all> := CALL proc6(<all>)
              Reaching definitions: r1=truncu(32,16,(global20 ^ (esp - 4)) ^ (esp - 4)),   r9=r9{170},
                r10=truncu(32,8,esp - 268),   r24=r24{211},   r25=(global20 ^ (esp - 4)) ^ (esp - 4),   r26=r26{211},
                r28=r28{0} - 928,   r29=r28{0} - 4,   r31=r31{0},   m[r28{0} + 4]=m[esp + 4]{0},
                m[r28{0} + 8]=m[esp + 8]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=0,
                m[r28{0} - 12]=global20 ^ (esp - 4),   m[r28{0} - 257]=m[esp - 257]{0},   m[r28{0} - 258]=0,
                m[r28{0} - 260]=0x7373,   m[r28{0} - 264]=0x616c4320,   m[r28{0} - 268]=0x49534353,
                m[r28{0} - 524]=m[esp - 524]{0},   m[r28{0} - 528]=m[esp - 528]{0},   m[r28{0} - 788]=m[esp - 788]{0},
                m[r28{0} - 792]=1,   m[r28{0} - 796]=m[esp + 8]{0},   m[r28{0} - 800]=r28{0} - 524,
                m[r28{0} - 804]=r28{0} - 528,   m[r28{0} - 808]=r28{0} - 524,   m[r28{0} - 812]=0x80000002,
                m[r28{0} - 816]=4,   m[r28{0} - 820]=r28{0} - 792,   m[r28{0} - 824]=4,   m[r28{0} - 828]=0,
                m[r28{0} - 832]=0x80011d4,   m[r28{0} - 836]=m[esp - 528]{0},   m[r28{0} - 840]=4,
                m[r28{0} - 844]=r28{0} - 8,   m[r28{0} - 848]=4,   m[r28{0} - 852]=0,   m[r28{0} - 856]=0x80011cc,
                m[r28{0} - 860]=m[esp - 528]{0},   m[r28{0} - 864]=0x80011b8,   m[r28{0} - 868]=r28{0} - 788,
                m[r28{0} - 872]=r28{0} - 788,   m[r28{0} - 876]=r24{126} + 1,   m[r28{0} - 880]=r28{0} - 788,
                m[r28{0} - 884]=1,   m[r28{0} - 888]=0,   m[r28{0} - 892]=0x80011ac,   m[r28{0} - 896]=m[esp - 528]{0},
                m[r28{0} - 900]=r28{0} - 268,   m[r28{0} - 904]=r24{181} + 1,   m[r28{0} - 908]=r28{0} - 268,
                m[r28{0} - 912]=1,   m[r28{0} - 916]=0,   m[r28{0} - 920]=0x8001198,   m[r28{0} - 924]=m[esp - 528]{0},
                m[r28{0} - 928]=%pc,   m[r28{0} - 932]=%pc,   tmp1=r24{181},
                %flags=LOGICALFLAGS32( (global20 ^ (esp - 4)) ^ (esp - 4) ),
                %ZF=LOGICALFLAGS32( (global20 ^ (esp - 4)) ^ (esp - 4) ),
                %CF=LOGICALFLAGS32( (global20 ^ (esp - 4)) ^ (esp - 4) )
              Live variables:  in proc proc11
dest is not lib
call:   19 {*32* r24, *32* ecx, *32* r26} := CALL HeapFree(
                *HANDLE* local0 := ecx
                *DWORD* local1 := 0
                *LPVOID* local2 := param1
              )
              Reaching definitions: r24=m[r28{0} + 4]{0},   r25=r25{13},   r26=r26{0},   r28=r28{0} - 20,
                r29=r28{0} - 4,   r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} + 4]{0},   m[r28{0} - 12]=0,   m[r28{0} - 16]=r25{13},   m[r28{0} - 20]=%pc,
                tmp1=global5,   %flags=SUBFLAGS32( m[0x8003008], 0, global5 ),   %ZF=global5 = 0,
                %CF=m[0x8003008] <u 0
              Live variables:  in proc proc12
dest is not lib
call:   11 {*32* eax, *32* ecx, *32* r26} := CALL GetProcessHeap(
              )
              Reaching definitions: r24=r24{0},   r25=r25{0},   r26=r26{0},   r28=r28{0} - 8,   r29=r28{0} - 4,
                r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=%pc,
                m[r28{0} - 12]=m[r28{0} - 12]{0},   m[r28{0} - 16]=m[r28{0} - 16]{0},
                m[r28{0} - 20]=m[r28{0} - 20]{0},   tmp1=global5,   %flags=SUBFLAGS32( m[0x8003008], 0, global5 ),
                %ZF=global5 = 0,   %CF=m[0x8003008] <u 0
              Live variables: eax in proc proc14
result:    0 *32* eax := -
dest is not lib
call:   27 {*32* eax, *32* ecx, *32* r26} := CALL HeapAlloc(
                *HANDLE* local0 := ecx
                *DWORD* local1 := 0
                *DWORD* local2 := param1
              )
              Reaching definitions: r24=m[r28{0} + 4]{0},   r25=r25{21},   r26=r26{38},   r28=(r28{0} - 4) - 16,
                r29=r28{0} - 4,   r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} + 4]{0},   m[r28{0} - 12]=0,   m[r28{0} - 16]=r25{21},   m[r28{0} - 20]=%pc,
                tmp1=global5,   %flags=SUBFLAGS32( m[0x8003008], 0, global5 ),   %ZF=global5 = 0,
                %CF=m[0x8003008] <u 0
              Live variables: eax in proc proc14
result:    0 *32* eax := -
dest is not lib
call:   14 {*32* r24, *32* r25, *32* r26, *v* r28} := CALL QueryPerformanceCounter(
              )
              Reaching definitions: r24=r28{0} - 12,   r28=r28{0} - 20,   r29=r28{0} - 4,   r31=r31{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 12]=m[r28{0} - 12]{0},   m[r28{0} - 16]=r28{0} - 12,
                m[r28{0} - 20]=%pc,   tmp1=r28{0} - 4,   %flags=SUBFLAGS32( r28{0} - 4, 8, r28{0} - 12 ),
                %ZF=(r28{0} - 12) = 0,   %CF=(r28{0} - 4) <u 8
              Live variables:  in proc proc16
