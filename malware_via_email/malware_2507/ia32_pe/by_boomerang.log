Unknown library function IsWindowEnabled
assgn   17 *32* %pc := m[0x4182f0]
is readonly
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc1 ###
in proc proc1 adding addrExp r28{0} - 4 to local table
in proc proc1 adding addrExp r28{0} - 8 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 20 to local table
in proc proc1 adding addrExp r28{0} - 24 to local table
in proc proc1 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc1 adding addrExp r28{0} - 8 to local table
TYPE ERROR: Existing type at address 0xfffffff8 is not structure or array type
in proc proc1 adding addrExp r28{0} - 12 to local table
TYPE ERROR: Existing type at address 0xfffffff4 is not structure or array type
in proc proc1 adding addrExp r28{0} - 16 to local table
TYPE ERROR: Existing type at address 0xfffffff0 is not structure or array type
in proc proc1 adding addrExp r28{0} - 20 to local table
TYPE ERROR: Existing type at address 0xffffffec is not structure or array type
in proc proc1 adding addrExp r28{0} - 24 to local table
in proc proc1 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc1 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc1 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc1 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc1 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc1 adding addrExp r28 to local table
in proc proc1 adding addrExp r28 to local table
finding final parameters for proc1
assgn   13 *32* %pc := m[0x418c1c]
is readonly
assgn   44 *32* %pc := m[0x418320]
is readonly
assgn   97 *32* %pc := m[0x4182f0]
is readonly
after removing matching assigns (%pc).
size 0x8 meet with size 0x20!
size 0x8 meet with size 0x20!
size 0x8 meet with size 0x20!
size 0x8 meet with size 0x20!
size 0x8 meet with size 0x20!
integer size 0x8 meet with SizeType size 0x20!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
size 0x8 meet with size 0x20!
size 0x20 meet with size 0x8!
size 0x8 meet with size 0x20!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
size 0x8 meet with size 0x20!
size 0x8 meet with size 0x20!
size 0x8 meet with size 0x20!
size 0x20 meet with size 0x8!
size 0x20 meet with size 0x8!
size 0x20 meet with size 0x8!
size 0x20 meet with size 0x8!
size 0x20 meet with size 0x8!
size 0x20 meet with size 0x8!
size 0x20 meet with size 0x8!
size 0x20 meet with size 0x8!
size 0x20 meet with size 0x8!
size 0x20 meet with size 0x8!
size 0x20 meet with size 0x8!
size 0x20 meet with size 0x8!
size 0x20 meet with size 0x8!
size 0x20 meet with size 0x8!
size 0x20 meet with size 0x8!
size 0x20 meet with size 0x8!
size 0x20 meet with size 0x8!
size 0x20 meet with size 0x8!
size 0x20 meet with size 0x8!
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 20 to local table
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 4 to local table
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type unsigned int does not resolve to compound or array
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 20 to local table
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 20 to local table
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type unsigned int does not resolve to compound or array
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 20 to local table
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type unsigned int does not resolve to compound or array
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 20 to local table
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type unsigned int does not resolve to compound or array
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 20 to local table
in proc _start adding addrExp r28{0} - 24 to local table
finding final parameters for _start
potential param r31
found new parameter r31
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} - 12]
found new parameter m[r28{0} - 12]
potential param m[r28{0} - 16]
found new parameter m[r28{0} - 16]
potential param m[r28{0} - 20]
found new parameter m[r28{0} - 20]
potential param m[r28{0} - 24]
found new parameter m[r28{0} - 24]
potential param r30
found new parameter r30
potential param r10
found new parameter r10
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc1 ###
in proc proc1 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc1 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc1 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc1 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc1 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc1 adding addrExp r28 to local table
in proc proc1 adding addrExp r28 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 20 to local table
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type unsigned int does not resolve to compound or array
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 20 to local table
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 20 to local table
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type unsigned int does not resolve to compound or array
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 20 to local table
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type unsigned int does not resolve to compound or array
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 20 to local table
in proc _start adding addrExp r28{0} - 24 to local table
finding final parameters for _start
potential param r31
found new parameter r31
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} - 12]
found new parameter m[r28{0} - 12]
potential param m[r28{0} - 16]
found new parameter m[r28{0} - 16]
potential param m[r28{0} - 20]
found new parameter m[r28{0} - 20]
potential param m[r28{0} - 24]
found new parameter m[r28{0} - 24]
potential param r30
found new parameter r30
local esp has type unsigned int that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local eax has type unsigned int that doesn't agree with type of define /*signed?*/int of a library, why?
local ecx has type __size32 that doesn't agree with type of define void of a library, why?
local eax has type /*signed?*/int that doesn't agree with type of define unsigned int of a library, why?
local edx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
dest is not lib
call:   18 {*32* r24, *v* r25, *v* r26} := CALL VirtualAlloc(
                *LPVOID* local0 := 0
                *DWORD* local1 := 0x17463
                *DWORD* local2 := 0x3000
                *DWORD* local3 := 64
              )
              Reaching definitions: r24=r24{0},   r28=r28{0} - 24,   m[r28{0} - 4]=r24{0},   m[r28{0} - 8]=64,
                m[r28{0} - 12]=0x3000,   m[r28{0} - 16]=0x17463,   m[r28{0} - 20]=0,   m[r28{0} - 24]=%pc,
                tmp1=r28{0} - 16,   %flags=SUBFLAGS32( r28{0} - 16, 4, r28{0} - 20 ),   %ZF=(r28{0} - 20) = 0,
                %CF=(r28{0} - 16) <u 4
              Live variables:  in proc proc1
dest is not lib
call:   14 {*u32* eax, *32* ecx, *j32* edx, *v* esp} := CALL IsWindowEnabled(
              )
              Reaching definitions: r9=r9{0},   r10=r10{0},   r24=m[r28{0} + 4]{0},   r28=r28{0} - 8,
                r29=m[r28{0} + 4]{0},   r30=r30{0},   r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} - 4]=m[r28{0} + 4]{0},   m[r28{0} - 8]=%pc,   m[r28{0} - 12]=m[r28{0} - 12]{0},
                m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 20]=m[r28{0} - 20]{0},
                m[r28{0} - 24]=m[r28{0} - 24]{0},   tmp1=r28{0} - 4,   tmpb=tmpb{0},
                %flags=ADDFLAGS32( r28{0} - 4, 4, r28{0} ),   %ZF=ADDFLAGS32( r28{0} - 4, 4, r28{0} ),
                %CF=ADDFLAGS32( r28{0} - 4, 4, r28{0} )
              Live variables: eax,  ecx,  edx in proc _start
result:    0 *u32* eax := -
result:    0 *32* ecx := -
result:    0 *j32* edx := -
dest is not lib
call:   45 {*j32* eax, *v* ecx, *j32* edx, *v* esp} := CALL GetProfileIntA(
                *32** local4 := a[ecx]
                *32** local3 := a[ecx]
                *INT* local2 := 243
              )
              Reaching definitions: r9=truncu(32,8,r28{0} - 8),   r10=r10{0},   r11=243,   r24=r24{14},
                r25=r28{0} - 8,   r26=r26{14},   r27=243,   r28=r28{0} - 24,   r29=m[r28{0} + 4]{0},   r30=r30{0},
                r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=m[r28{0} + 4]{0},   m[r28{0} - 8]=r25{14}
                m[r28{0} - 12]=243,   m[r28{0} - 16]=r28{0} - 8,   m[r28{0} - 20]=r28{0} - 8,   m[r28{0} - 24]=%pc,
                tmp1=(r28{0} - 8) + 4,   tmpb=tmpb{0},   %flags=SUBFLAGS32( r28{0} - 4, 4, r28{0} - 8 ),
                %ZF=(r28{0} - 8) = 0,   %CF=(r28{0} - 4) <u 4
              Live variables: edx in proc _start
result:    0 *j32* edx := -
dest is not lib
call:   56 CALL proc1(
              )
              Reaching definitions: r9=truncu(32,8,r25{14}),   r10=r10{0},   r11=truncu(32,8,r24{45}),   r24=243,
                r25=r25{14},   r26=r26{45},   r27=r24{45},   r28=(r28{0} - 24) + 16,   r29=m[r28{0} + 4]{0},
                r30=r30{0},   r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=m[r28{0} + 4]{0},
                m[r28{0} - 8]=%pc,   m[r28{0} - 12]=243,   m[r28{0} - 16]=r28{0} - 8,   m[r28{0} - 20]=r28{0} - 8,
                m[r28{0} - 24]=%pc,   tmp1=243,   tmpb=tmpb{0},   %flags=SUBFLAGS32( r28{0} - 4, 4, r28{0} - 8 ),
                %ZF=(r28{0} - 8) = 0,   %CF=(r28{0} - 4) <u 4
              Live variables:  in proc _start
dest is not lib
call:   98 {*u32* eax, *v* ecx, *v* edx, *v* esp} := CALL VirtualAlloc(
                *LPVOID* m[esp_8 - 20] := m[esp_8 - 20]
                *DWORD* m[esp_8 - 16] := m[esp_8 - 16]
                *DWORD* m[esp_8 - 12] := m[esp_8 - 12]
                *DWORD* m[esp_8 - 8] := m[esp_8 - 8]
              )
              Reaching definitions: r9=r9{270},   r10=r10{271},   r11=r11{272},   r24=r24{273},   r25=r25{274},
                r26=r26{275},   r27=r27{276},   r28=r28{277} - 24,   r29=r29{278},   r30=r30{279},   r31=r31{280},
                m[r28{0} + 4]=m[r28{0} + 4]{311},   m[r28{0} - 4]=m[r28{0} - 4]{303},
                m[r28{0} - 8]=m[r28{0} - 8]{304},   m[r28{0} - 12]=m[r28{0} - 12]{305},
                m[r28{0} - 16]=m[r28{0} - 16]{306},   m[r28{0} - 20]=m[r28{0} - 20]{307},
                m[r28{0} - 24]=m[r28{0} - 24]{308},   tmp1=r28{277} - 16,   tmpb=tmpb{282},
                %flags=SUBFLAGS32( r28{277} - 16, 4, r28{277} - 20 ),   %ZF=(r28{277} - 20) = 0,
                %CF=(r28{277} - 16) <u 4
              Live variables: eax in proc _start
result:    0 *u32* eax := -
