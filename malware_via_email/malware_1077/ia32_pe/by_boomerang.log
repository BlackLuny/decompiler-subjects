Unknown library function select
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc1 ###
in proc proc1 adding addrExp r28{0} - 5 to local table
in proc proc1 adding addrExp r28{0} - 4 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 5 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 5 to local table
in proc proc1 adding addrExp r28{0} - 5 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
finding final parameters for proc1
potential param r28
found new parameter r28
potential param m[r28{0} + 16]
found new parameter m[r28{0} + 16]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 20]
found new parameter m[r28{0} + 20]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 24]
found new parameter m[r28{0} + 24]
assgn   22 *32* %pc := m[0x417194]
is readonly
assgn  201 *32* %pc := m[0x417174]
is readonly
assgn  208 *32* %pc := m[0x41718c]
is readonly
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
in proc _start adding addrExp r28{0} - 4 to local table
in proc _start adding addrExp r28{0} - 496 to local table
in proc _start adding addrExp r28{0} - 500 to local table
in proc _start adding addrExp r28{0} - 504 to local table
in proc _start adding addrExp r28{0} - 508 to local table
in proc _start adding addrExp r28{0} - 512 to local table
in proc _start adding addrExp r28{0} - 516 to local table
in proc _start adding addrExp r28{0} - 516 to local table
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28{0} - 496 to local table
in proc _start adding addrExp r28{0} - 500 to local table
in proc _start adding addrExp r28{0} - 504 to local table
in proc _start adding addrExp r28{0} - 508 to local table
in proc _start adding addrExp r28{0} - 512 to local table
in proc _start adding addrExp r28{0} - 516 to local table
finding final parameters for _start
potential param r28
found new parameter r28
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc1 ###
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 5 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
finding final parameters for proc1
potential param r28
found new parameter r28
potential param m[r28{0} + 16]
found new parameter m[r28{0} + 16]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 20]
found new parameter m[r28{0} + 20]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 24]
found new parameter m[r28{0} + 24]
finding final parameters for _start
potential param r28
found new parameter r28
finding final parameters for _start
potential param r28
found new parameter r28
local eax has type unsigned int that doesn't agree with type of define __size32 of a library, why?
local ecx has type __size32 that doesn't agree with type of define void of a library, why?
local edx has type __size32 that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local ecx has type void that doesn't agree with type of define /*signed?*/int of a library, why?
dest is not lib
call:   23 {*u32* eax, *32* ecx, *32* edx, *v** esp_1} := CALL select(
              )
              Reaching definitions: r0=r0{0},   r1=r1{0},   r2=r2{0},   r8=0,   r9=r9{0},   r24=0,   r26=0x7c89e4f4,
                r28=r28{0} - 516,   r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},   m[r28{0} - 496]=0,   m[r28{0} - 500]=0,
                m[r28{0} - 504]=0,   m[r28{0} - 508]=0,   m[r28{0} - 512]=0,   m[r28{0} - 516]=%pc,   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 488, r28{0} - 492 ),   %ZF=(r28{0} - 492) = 0,   %CF=(r28{0} - 4) <u 488
              Live variables: eax,  ecx,  edx,  esp_1 in proc _start
result:    0 *u32* eax := -
result:    0 *32* ecx := -
result:    0 *32* edx := -
result:    0 *v** esp_1 := -
dest is not lib
call:   70 {*32* eax, *16* ax, *16* cx, *16* dx, *8* al, *8* cl, *32* ecx, *32* edx, *v* esp} := CALL proc1(
                *v** m[esp_3 - 24] := m[esp_3 - 24]
                *u8** m[esp_3 - 20] := m[esp_3 - 20]
                *32* m[esp_3 - 16] := m[esp_3 - 16]
                *32** m[esp_3 - 12] := m[esp_3 - 12]
                *u32* m[esp_3 - 8] := m[esp_3 - 8]
                *v** m[esp_3 - 4] := m[esp_3 - 4]
              )
              Reaching definitions: r0=r0{0},   r1=r1{0},   r2=r2{0},   r8=truncu(32,8,r29{337} - 420),
                r9=truncu(32,8,r29{337} - 424),   r24=r29{337} - 420,   r25=r29{337} - 424,   r26=r29{337} - 428,
                r28=r28{336} - 28,   r29=r29{337},   m[r28{0} - 4]=m[r28{0} - 4]{360},
                m[r28{0} - 496]=m[r28{0} - 496]{361},   m[r28{0} - 500]=m[r28{0} - 500]{362},
                m[r28{0} - 504]=m[r28{0} - 504]{363},   m[r28{0} - 508]=m[r28{0} - 508]{364},
                m[r28{0} - 512]=m[r28{0} - 512]{365},   m[r28{0} - 516]=m[r28{0} - 516]{366},   tmp1=r29{337} - 424,
                %flags=SUBFLAGS32( r29{337} - 424, 4, r29{337} - 428 ),   %ZF=(r29{337} - 428) = 0,
                %CF=(r29{337} - 424) <u 4
              Live variables:  in proc _start
dest is not lib
call:  151 {*32* eax, *16* ax, *16* cx, *16* dx, *8* al, *8* cl, *32* ecx, *32* edx, *v* esp} := CALL proc1(
                *v** m[esp_3 - 24] := m[esp_3 - 24]
                *u8** m[esp_3 - 20] := m[esp_3 - 20]
                *32* m[esp_3 - 16] := m[esp_3 - 16]
                *32** m[esp_3 - 12] := m[esp_3 - 12]
                *u32* m[esp_3 - 8] := m[esp_3 - 8]
                *v** m[esp_3 - 4] := m[esp_3 - 4]
              )
              Reaching definitions: r0=r0{70},   r1=r1{70},   r2=r2{70},   r8=truncu(32,8,r29{337} - 464),
                r9=truncu(32,8,r29{337} - 460),   r24=r29{337} - 464,   r25=r29{337} - 460,   r26=r29{337} - 464,
                r28=r28{336} - 28,   r29=r29{337},   m[r28{0} - 4]=m[r28{0} - 4]{360},
                m[r28{0} - 496]=m[r28{0} - 496]{361},   m[r28{0} - 500]=m[r28{0} - 500]{362},
                m[r28{0} - 504]=m[r28{0} - 504]{363},   m[r28{0} - 508]=m[r28{0} - 508]{364},
                m[r28{0} - 512]=m[r28{0} - 512]{365},   m[r28{0} - 516]=m[r28{0} - 516]{366},   tmp1=r24{118},
                %flags=ADDFLAGS32( r24{118}, m[r29{337} - 416], r24{121} ),
                %ZF=ADDFLAGS32( r24{118}, m[r29{337} - 416], r24{121} ),
                %CF=ADDFLAGS32( r24{118}, m[r29{337} - 416], r24{121} )
              Live variables:  in proc _start
dest is not lib
call:  185 {*32* eax, *16* ax, *16* cx, *16* dx, *8* al, *8* cl, *32* ecx, *32* edx, *v* esp} := CALL proc1(
                *v** m[esp_3 - 24] := m[esp_3 - 24]
                *u8** m[esp_3 - 20] := m[esp_3 - 20]
                *32* m[esp_3 - 16] := m[esp_3 - 16]
                *32** m[esp_3 - 12] := m[esp_3 - 12]
                *u32* m[esp_3 - 8] := m[esp_3 - 8]
                *v** m[esp_3 - 4] := m[esp_3 - 4]
              )
              Reaching definitions: r0=r0{151},   r1=r1{151},   r2=r2{151},   r8=truncu(32,8,r29{337} - 428),
                r9=truncu(32,8,r29{337} - 460),   r24=r29{337} - 428,   r25=r29{337} - 460,   r26=r29{337} - 424,
                r28=r28{336} - 28,   r29=r29{337},   m[r28{0} - 4]=m[r28{0} - 4]{360},
                m[r28{0} - 496]=m[r28{0} - 496]{361},   m[r28{0} - 500]=m[r28{0} - 500]{362},
                m[r28{0} - 504]=m[r28{0} - 504]{363},   m[r28{0} - 508]=m[r28{0} - 508]{364},
                m[r28{0} - 512]=m[r28{0} - 512]{365},   m[r28{0} - 516]=m[r28{0} - 516]{366},   tmp1=r29{337} - 424,
                %flags=SUBFLAGS32( r29{337} - 424, 4, r29{337} - 428 ),   %ZF=(r29{337} - 428) = 0,
                %CF=(r29{337} - 424) <u 4
              Live variables:  in proc _start
dest is not lib
call:  202 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL VirtualAlloc(
                *LPVOID* m[esp_3 - 16] := m[esp_3 - 16]
                *DWORD* m[esp_3 - 12] := m[esp_3 - 12]
                *DWORD* m[esp_3 - 8] := m[esp_3 - 8]
                *DWORD* m[esp_3 - 4] := m[esp_3 - 4]
              )
              Reaching definitions: r0=r0{185},   r1=r1{185},   r2=r2{185},   r8=r8{185},   r9=truncu(32,8,r25{193}),
                r24=r24{185},   r25=r25{193},   r26=r26{185},   r28=r28{336} - 20,   r29=r29{337},
                m[r28{0} - 4]=m[r28{0} - 4]{360},   m[r28{0} - 496]=m[r28{0} - 496]{361},
                m[r28{0} - 500]=m[r28{0} - 500]{362},   m[r28{0} - 504]=m[r28{0} - 504]{363},
                m[r28{0} - 508]=m[r28{0} - 508]{364},   m[r28{0} - 512]=m[r28{0} - 512]{365},
                m[r28{0} - 516]=m[r28{0} - 516]{366},   tmp1=(r28{336} - 28) + 4,
                %flags=ADDFLAGS32( r28{336} - 24, 24, r28{336} ),   %ZF=ADDFLAGS32( r28{336} - 24, 24, r28{336} ),
                %CF=ADDFLAGS32( r28{336} - 24, 24, r28{336} )
              Live variables: eax in proc _start
result:    0 *32* eax := -
dest is not lib
call:  209 {*32* eax, *j32* ecx, *v* edx, *v* esp} := CALL GetModuleHandleW(
                *LPCWSTR* m[esp_3 - 4] := m[esp_3 - 4]
              )
              Reaching definitions: r0=r0{185},   r1=r1{185},   r2=r2{185},   r8=r8{185},   r9=truncu(32,8,r25{193}),
                r24=r24{202},   r25=r25{202},   r26=r26{202},   r28=r28{336} - 8,   r29=r29{337},
                m[r28{0} - 4]=m[r28{0} - 4]{360},   m[r28{0} - 496]=m[r28{0} - 496]{361},
                m[r28{0} - 500]=m[r28{0} - 500]{362},   m[r28{0} - 504]=m[r28{0} - 504]{363},
                m[r28{0} - 508]=m[r28{0} - 508]{364},   m[r28{0} - 512]=m[r28{0} - 512]{365},
                m[r28{0} - 516]=m[r28{0} - 516]{366},   tmp1=(r28{336} - 28) + 4,
                %flags=ADDFLAGS32( r28{336} - 24, 24, r28{336} ),   %ZF=ADDFLAGS32( r28{336} - 24, 24, r28{336} ),
                %CF=ADDFLAGS32( r28{336} - 24, 24, r28{336} )
              Live variables: eax in proc _start
result:    0 *32* eax := -
dest is not lib
call:  275 {*32* eax, *16* ax, *16* cx, *16* dx, *8* al, *8* cl, *32* ecx, *32* edx, *v* esp} := CALL proc1(
                *v** m[esp_3 - 24] := m[esp_3 - 24]
                *u8** m[esp_3 - 20] := m[esp_3 - 20]
                *32* m[esp_3 - 16] := m[esp_3 - 16]
                *32** m[esp_3 - 12] := m[esp_3 - 12]
                *u32* m[esp_3 - 8] := m[esp_3 - 8]
                *v** m[esp_3 - 4] := m[esp_3 - 4]
              )
              Reaching definitions: r0=r0{185},   r1=r1{185},   r2=r2{185},   r8=truncu(32,8,r24{264} - 8),
                r9=truncu(32,8,r25{257}),   r24=r24{264} - 8,   r25=r25{257},   r26=r26{261},   r28=r28{336} - 28,
                r29=r29{337},   m[r28{0} - 4]=m[r28{0} - 4]{360},   m[r28{0} - 496]=m[r28{0} - 496]{361},
                m[r28{0} - 500]=m[r28{0} - 500]{362},   m[r28{0} - 504]=m[r28{0} - 504]{363},
                m[r28{0} - 508]=m[r28{0} - 508]{364},   m[r28{0} - 512]=m[r28{0} - 512]{365},
                m[r28{0} - 516]=m[r28{0} - 516]{366},   tmp1=r24{264},   %flags=SUBFLAGS32( r24{264}, 8, r24{264} - 8 )
                %ZF=(r24{264} - 8) = 0,   %CF=r24{264} <u 8
              Live variables: ax,  cx,  dx in proc _start
result:    0 *16* ax := -
result:    0 *16* cx := -
result:    0 *16* dx := -
