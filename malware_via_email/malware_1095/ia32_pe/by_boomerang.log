COMPUTED JUMP at 0x401e91, pDest = r25
COMPUTED JUMP at 0x4012cd, pDest = r26
Unknown library function VirtualAllocEx
COMPUTED JUMP at 0x401e91, pDest = r25
Unknown library function ExtCreatePen
assgn    1 *32* tmp1 := m[0x40c465]
assgn   18 *32* tmp1 := m[0x40d359]
assgn   38 *32* tmp1 := m[0x40c36d]
assgn   43 *32* r29 := m[0x40cd3c]
assgn   62 *32* r29 := m[0x40a40f]
assgn   83 *32* tmp1 := m[0x40c6ab]
assgn   96 *32* tmp1 := m[0x40bb5a]
assgn  120 *32* tmp1 := m[0x409bac]
assgn  133 *32* r29 := m[0x410add]
is readonly
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc1 ###
in proc proc1 adding addrExp r28{0} to local table
in proc proc1 adding addrExp r28{0} - 4 to local table
in proc proc1 adding addrExp r28{0} - 8 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 20 to local table
in proc proc1 adding addrExp r28{0} - 24 to local table
finding final parameters for proc1
potential param r25
found new parameter r25
potential param r28
found new parameter r28
potential param r26
found new parameter r26
potential param r31
found new parameter r31
potential param r27
found new parameter r27
potential param r8
found new parameter r8
potential param m[r28{0}]
found new parameter m[r28{0}]
assgn   15 *32* r25 := m[0x4094ac]
assgn   32 *32* tmp1 := m[0x40bbbd]
assgn   39 *32* %pc := m[0x403090]
assgn   57 *32* tmp1 := m[0x40a491]
assgn   71 *32* tmp1 := m[0x40b889]
assgn   74 *32* r26 := m[0x40b5c1]
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc2 ###
in proc proc2 adding addrExp r28{0} - 4 to local table
in proc proc2 adding addrExp r28{0} - 8 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 16 to local table
in proc proc2 adding addrExp r28{0} - 20 to local table
in proc proc2 adding addrExp r28{0} - 24 to local table
in proc proc2 adding addrExp r28{0} - 28 to local table
in proc proc2 adding addrExp r28{0} - 28 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffe4 existing type unsigned int but added type __size8 *
finding final parameters for proc2
potential param r29
found new parameter r29
potential param r26
found new parameter r26
potential param r30
found new parameter r30
assgn    9 *32* r31 := m[0x40b798]
assgn   37 *32* %pc := m[0x403190]
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
in proc proc9 adding addrExp r28{0} - 4 to local table
in proc proc9 adding addrExp r28{0} - 8 to local table
in proc proc9 adding addrExp r28{0} - 12 to local table
in proc proc9 adding addrExp r28{0} - 16 to local table
in proc proc9 adding addrExp r28{0} - 20 to local table
in proc proc9 adding addrExp r28{0} - 24 to local table
in proc proc9 adding addrExp r28{0} - 28 to local table
finding final parameters for proc9
potential param r28
found new parameter r28
potential param r27
found new parameter r27
potential param r30
found new parameter r30
assgn    1 *32* r31 := m[0x40b798]
assgn   29 *32* %pc := m[0x403190]
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
in proc proc10 adding addrExp r28{0} - 4 to local table
in proc proc10 adding addrExp r28{0} - 8 to local table
in proc proc10 adding addrExp r28{0} - 12 to local table
in proc proc10 adding addrExp r28{0} - 16 to local table
in proc proc10 adding addrExp r28{0} - 20 to local table
in proc proc10 adding addrExp r28{0} - 24 to local table
finding final parameters for proc10
potential param r28
found new parameter r28
potential param r27
found new parameter r27
potential param r30
found new parameter r30
assgn   43 *32* r27 := m[0x4109f0]
is readonly
assgn   64 *32* tmp1 := m[0x40c3f5]
assgn   77 *32* tmp1 := m[0x40b111]
assgn   90 *32* tmp1 := m[0x409162]
assgn  107 *32* tmp1 := m[0x40b242]
assgn  122 *32* tmp1 := m[0x40ac3c]
assgn  139 *32* r27 := m[0x40cc06]
assgn  149 *32* tmp1 := m[0x40d0b7]
assgn  152 *32* r27 := m[0x40b0f9]
assgn  162 *32* tmp1 := m[0x40a5e3]
assgn  173 *32* tmp1 := m[0x40d284]
assgn  185 *32* r27 := m[0x409834]
assgn  204 *32* tmp1 := m[0x40c38e]
assgn  217 *32* tmp1 := m[0x4090ba]
assgn  220 *32* r27 := m[0x40d466]
assgn  230 *32* tmp1 := m[0x40a66e]
assgn  244 *32* tmp1 := m[0x4099f2]
assgn  247 *32* r27 := m[0x409f9c]
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc6 ###
in proc proc6 adding addrExp r28{0} - 4 to local table
in proc proc6 adding addrExp r28{0} - 8 to local table
finding final parameters for proc6
potential param r27
found new parameter r27
potential param r30
found new parameter r30
potential param r2
found new parameter r2
assgn   27 *32* tmp1 := m[0x40caae]
assgn   45 *32* tmp1 := m[0x40c8d0]
assgn   70 *32* tmp1 := m[0x40d06c]
assgn   88 *32* tmp1 := m[0x40ca00]
assgn  104 *32* tmp1 := m[0x409d0c]
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc4 ###
in proc proc4 adding addrExp r28{0} - 12 to local table
in proc proc4 adding addrExp r28{0} to local table
in proc proc4 adding addrExp r28{0} - 4 to local table
in proc proc4 adding addrExp r28{0} - 8 to local table
in proc proc4 adding addrExp r28{0} - 12 to local table
in proc proc4 adding addrExp r28{0} - 12 to local table
in proc proc4 adding addrExp r28{0} - 12 to local table
in proc proc4 adding addrExp r28{0} - 12 to local table
finding final parameters for proc4
potential param r28
found new parameter r28
potential param r26
found new parameter r26
potential param r24
found new parameter r24
potential param r27
found new parameter r27
potential param r14
found new parameter r14
potential param m[r28{0} - 12]
found new parameter m[r28{0} - 12]
potential param m[r28{0}]
found new parameter m[r28{0}]
assgn   13 *32* tmp1 := m[0x40a25f]
assgn   27 *32* tmp1 := m[0x40b0e4]
assgn   46 *32* tmp1 := m[0x409aff]
assgn   69 *32* tmp1 := m[0x40d5fe]
assgn   90 *32* tmp1 := m[0x409693]
assgn   96 *32* r30 := m[0x410e9b]
is readonly
assgn  105 *32* r27 := m[0x40ce09]
assgn  115 *32* tmp1 := m[0x40a041]
assgn  137 *32* tmp1 := m[0x40933e]
assgn  195 *32* r30 := m[0x4109d8]
is readonly
assgn  208 *32* tmp1 := m[0x40a40f]
assgn  215 *32* r30 := m[0x40d085]
assgn  225 *32* tmp1 := m[0x40c8b5]
assgn  239 *32* tmp1 := m[0x40a2d7]
assgn  242 *32* r27 := m[0x40b1d4]
assgn  253 *32* tmp1 := m[0x40d6c2]
assgn  267 *32* tmp1 := m[0x40c321]
assgn  278 *32* tmp1 := m[0x40c17b]
assgn  297 *32* r27 := m[0x40bbdd]
assgn  314 *32* tmp1 := m[0x409dfc]
assgn  338 *32* tmp1 := m[0x40b617]
assgn  357 *32* tmp1 := m[0x409f64]
assgn  383 *32* r27 := m[0x40bb5a]
assgn  399 *32* tmp1 := m[0x40ca00]
assgn  410 *32* tmp1 := m[0x40a041]
assgn  432 *32* r27 := m[0x4091d9]
assgn  446 *32* tmp1 := m[0x40a7b8]
assgn  477 *32* tmp1 := m[0x40cacc]
assgn  483 *32* r26 := m[0x409dfc]
assgn  507 *32* tmp1 := m[0x40c3f5]
assgn  532 *32* tmp1 := m[0x40d54e]
assgn  557 *32* tmp1 := m[0x409809]
assgn  603 *32* tmp1 := m[0x40b7de]
assgn  623 *32* tmp1 := m[0x40d284]
assgn  661 *32* tmp1 := m[0x40a6a1]
assgn  664 *32* r30 := m[0x410fd4]
is readonly
assgn  680 *32* tmp1 := m[0x40a506]
assgn  686 *32* r30 := m[0x40becd]
assgn  704 *32* tmp1 := m[0x40b43d]
assgn  707 *32* r30 := m[0x410ff2]
is readonly
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc8 ###
in proc proc8 adding addrExp r28{0} - 284 to local table
in proc proc8 adding addrExp r28{0} - 284 to local table
in proc proc8 adding addrExp r28{0} - 284 to local table
in proc proc8 adding addrExp r28{0} - 4 to local table
in proc proc8 adding addrExp r28{0} - 268 to local table
in proc proc8 adding addrExp r28{0} - 264 to local table
in proc proc8 adding addrExp r28{0} - 272 to local table
in proc proc8 adding addrExp r28{0} - 272 to local table
in proc proc8 adding addrExp r28{0} - 276 to local table
in proc proc8 adding addrExp r28{0} - 280 to local table
in proc proc8 adding addrExp r28{0} - 284 to local table
finding final parameters for proc8
assgn   21 *32* r25 := m[0x40b43d]
assgn   34 *32* tmp1 := m[0x40c9c5]
assgn   37 *32* r24 := m[0x4112b6]
is readonly
assgn   48 *32* tmp1 := m[0x4091d9]
assgn   70 *32* r24 := m[0x410eb1]
is readonly
assgn   89 *32* tmp1 := m[0x40955c]
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc7 ###
in proc proc7 adding addrExp r28{0} - 4 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 20 to local table
in proc proc7 adding addrExp r28{0} - 24 to local table
in proc proc7 adding addrExp r28{0} - 28 to local table
in proc proc7 adding addrExp r28{0} - 32 to local table
in proc proc7 adding addrExp r28{0} - 36 to local table
in proc proc7 adding addrExp r28{0} - 40 to local table
in proc proc7 adding addrExp r28{0} - 44 to local table
finding final parameters for proc7
potential param r29
found new parameter r29
potential param r24
found new parameter r24
potential param r26
found new parameter r26
potential param r25
found new parameter r25
potential param r31
found new parameter r31
potential param r27
found new parameter r27
assgn    3 *32* r24 := m[0x40c65c]
assgn   37 *32* tmp1 := m[0x40b2a7]
assgn   44 *32* r24 := m[0x40cb3a]
assgn   56 *32* tmp1 := m[0x40a6a1]
assgn   59 *32* r27 := m[0x40a208]
assgn   71 *32* tmp1 := m[0x409693]
assgn   95 *32* tmp1 := m[0x40b341]
assgn  119 *32* tmp1 := m[0x40d5ec]
assgn  122 *32* r27 := m[0x40a9fc]
assgn  133 *32* tmp1 := m[0x40b617]
assgn  152 *32* tmp1 := m[0x40a6a1]
assgn  155 *32* r27 := m[0x409289]
assgn  174 *32* tmp1 := m[0x40a57d]
assgn  199 *32* r25 := m[0x410ff2]
is readonly
assgn  218 *32* tmp1 := m[0x40d06c]
assgn  221 *32* r25 := m[0x40b889]
assgn  243 *32* tmp1 := m[0x409bac]
assgn  267 *32* tmp1 := m[0x40c465]
assgn  285 *32* tmp1 := m[0x40d359]
assgn  305 *32* tmp1 := m[0x40c36d]
assgn  310 *32* r29 := m[0x40cd3c]
assgn  329 *32* r29 := m[0x40a40f]
assgn  350 *32* tmp1 := m[0x40c6ab]
assgn  363 *32* tmp1 := m[0x40bb5a]
assgn  387 *32* tmp1 := m[0x409bac]
assgn  400 *32* r29 := m[0x410add]
is readonly
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
in proc _start adding addrExp r28{0} - 4 to local table
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28 to local table
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 to local table
in proc _start adding addrExp r28 to local table
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 to local table
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 to local table
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
finding final parameters for _start
potential param r28
found new parameter r28
potential param r25
found new parameter r25
potential param r29
found new parameter r29
potential param r31
found new parameter r31
assgn   43 *32* r27 := m[0x4109f0]
is readonly
assgn   64 *32* tmp1 := m[0x40c3f5]
assgn   77 *32* tmp1 := m[0x40b111]
assgn   90 *32* tmp1 := m[0x409162]
assgn  107 *32* tmp1 := m[0x40b242]
assgn  122 *32* tmp1 := m[0x40ac3c]
assgn  139 *32* r27 := m[0x40cc06]
assgn  149 *32* tmp1 := m[0x40d0b7]
assgn  152 *32* r27 := m[0x40b0f9]
assgn  162 *32* tmp1 := m[0x40a5e3]
assgn  173 *32* tmp1 := m[0x40d284]
assgn  185 *32* r27 := m[0x409834]
assgn  204 *32* tmp1 := m[0x40c38e]
assgn  217 *32* tmp1 := m[0x4090ba]
assgn  220 *32* r27 := m[0x40d466]
assgn  230 *32* tmp1 := m[0x40a66e]
assgn  244 *32* tmp1 := m[0x4099f2]
assgn  247 *32* r27 := m[0x409f9c]
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc3 ###
in proc proc3 adding addrExp r28{0} - 4 to local table
in proc proc3 adding addrExp r28{0} - 8 to local table
finding final parameters for proc3
potential param r27
found new parameter r27
potential param r30
found new parameter r30
potential param r2
found new parameter r2
assgn   21 *32* r25 := m[0x40b43d]
assgn   34 *32* tmp1 := m[0x40c9c5]
assgn   37 *32* r24 := m[0x4112b6]
is readonly
assgn   48 *32* tmp1 := m[0x4091d9]
assgn   70 *32* r24 := m[0x410eb1]
is readonly
assgn   89 *32* tmp1 := m[0x40955c]
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc5 ###
in proc proc5 adding addrExp r28{0} - 4 to local table
in proc proc5 adding addrExp r28{0} - 8 to local table
in proc proc5 adding addrExp r28{0} - 12 to local table
in proc proc5 adding addrExp r28{0} - 16 to local table
in proc proc5 adding addrExp r28{0} - 20 to local table
in proc proc5 adding addrExp r28{0} - 24 to local table
in proc proc5 adding addrExp r28{0} - 28 to local table
in proc proc5 adding addrExp r28{0} - 32 to local table
in proc proc5 adding addrExp r28{0} - 36 to local table
in proc proc5 adding addrExp r28{0} - 40 to local table
in proc proc5 adding addrExp r28{0} - 44 to local table
finding final parameters for proc5
potential param r29
found new parameter r29
potential param r24
found new parameter r24
potential param r26
found new parameter r26
potential param r25
found new parameter r25
potential param r31
found new parameter r31
potential param r27
found new parameter r27
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc1 ###
in proc proc1 adding addrExp r28{0} to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc2 ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc3 ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc4 ###
in proc proc4 adding addrExp r28{0} - 12 to local table
in proc proc4 adding addrExp r28{0} to local table
in proc proc4 adding addrExp r28{0} - 12 to local table
in proc proc4 adding addrExp r28{0} - 12 to local table
in proc proc4 adding addrExp r28{0} - 12 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc5 ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
in proc _start adding addrExp r28 to local table
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 to local table
in proc _start adding addrExp r28 to local table
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 to local table
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 to local table
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc6 ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc7 ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc8 ###
in proc proc8 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type int does not resolve to compound or array
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc9 ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc10 ###
finding final parameters for proc2
potential param r29
found new parameter r29
potential param r26
found new parameter r26
potential param r30
found new parameter r30
finding final parameters for _start
potential param r28
found new parameter r28
potential param r25
found new parameter r25
potential param r29
found new parameter r29
potential param r31
found new parameter r31
finding final parameters for proc3
potential param r27
found new parameter r27
potential param r30
found new parameter r30
potential param r2
found new parameter r2
finding final parameters for proc5
potential param r29
found new parameter r29
potential param r24
found new parameter r24
potential param r26
found new parameter r26
potential param r25
found new parameter r25
potential param r31
found new parameter r31
potential param r27
found new parameter r27
finding final parameters for proc6
potential param r27
found new parameter r27
potential param r30
found new parameter r30
potential param r2
found new parameter r2
finding final parameters for _start
potential param r28
found new parameter r28
potential param r25
found new parameter r25
potential param r29
found new parameter r29
potential param r31
found new parameter r31
finding final parameters for proc7
potential param r29
found new parameter r29
potential param r24
found new parameter r24
potential param r26
found new parameter r26
potential param r25
found new parameter r25
potential param r31
found new parameter r31
potential param r27
found new parameter r27
finding final parameters for _start
potential param r28
found new parameter r28
potential param r25
found new parameter r25
potential param r29
found new parameter r29
potential param r31
found new parameter r31
finding final parameters for proc8
finding final parameters for proc5
potential param r29
found new parameter r29
potential param r24
found new parameter r24
potential param r26
found new parameter r26
potential param r25
found new parameter r25
potential param r31
found new parameter r31
potential param r27
found new parameter r27
finding final parameters for proc7
potential param r29
found new parameter r29
potential param r24
found new parameter r24
potential param r26
found new parameter r26
potential param r25
found new parameter r25
potential param r31
found new parameter r31
potential param r27
found new parameter r27
finding final parameters for proc9
potential param r28
found new parameter r28
potential param r27
found new parameter r27
potential param r30
found new parameter r30
finding final parameters for proc3
potential param r27
found new parameter r27
potential param r30
found new parameter r30
potential param r2
found new parameter r2
finding final parameters for proc6
potential param r27
found new parameter r27
potential param r30
found new parameter r30
potential param r2
found new parameter r2
finding final parameters for proc10
potential param r28
found new parameter r28
potential param r27
found new parameter r27
potential param r30
found new parameter r30
finding final parameters for proc3
potential param r27
found new parameter r27
potential param r30
found new parameter r30
potential param r2
found new parameter r2
finding final parameters for proc6
potential param r27
found new parameter r27
potential param r30
found new parameter r30
potential param r2
found new parameter r2
local ecx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local edx has type __size32 that doesn't agree with type of define void of a library, why?
local esp has type __size32 that doesn't agree with type of define void of a library, why?
local esp has type __size32 that doesn't agree with type of define void of a library, why?
dest is not lib
call:   40 {*8** eax_1, *v* ecx, *v* edx, *v* r28} := CALL VirtualAllocEx(
              )
              Reaching definitions: r24=0x1000,   r25=global26,   r26=r26{23} - global33,   r27=r27{0},
                r28=r28{0} - 28,   r29=r29{0},   r30=r30{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=64,
                m[r28{0} - 12]=0x1000,   m[r28{0} - 16]=0x5510,   m[r28{0} - 20]=0,   m[r28{0} - 24]=-1,
                m[r28{0} - 28]=%pc,   tmp1=global34,   %flags=SUBFLAGS32( global34, r26{23} - global33, m[0x40bbbd] ),
                %ZF=m[0x40bbbd] = 0,   %CF=global34 <u (r26{23} - global33)
              Live variables: eax_1,  edx in proc proc2
result:    0 *8** eax_1 := -
result:    0 *v* edx := -
dest is not lib
call:    6 {*32* eax, *32* esi, *8* r14, *i32* ecx, *i32* edx, *32** esp, *32* ebp, *u32* edi} := CALL proc9(
                *i32* ebx := param2
                *32* esi := param3
              )
              Reaching definitions: r2=r2{0},   r11=r11{0},   r27=r27{0},   r28=r28{0} - 8,   r29=r29{0},   r30=r30{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=%pc
              Live variables: ebp,  ecx,  edi,  edx,  esi,  esp in proc proc3
result:    0 *32* esi := -
result:    0 *i32* ecx := -
result:    0 *i32* edx := -
result:    0 *32** esp := -
result:    0 *32* ebp := -
result:    0 *u32* edi := -
dest is not lib
call:  133 {*u32* r24, *32* esi, *8* r14, *u32* ecx, *i32* edx, *32** esp, *32* ebp, *u32* edi} := CALL proc10(
                *i32* ebx := ebx - global71
                *32* esi := esi
              )
              Reaching definitions: r0=truncu(32,16,r24{30} - 111),   r2=r2{0},   r8=truncu(32,8,r24{30} - 111),
                r11=31,   r14=r14{6},   r24=r24{30} - 111,   r25=r25{6},   r26=r26{6},   r27=r27{126} - global71,
                r28=r28{6} - 4,   r29=r29{6},   r30=r30{6},   r31=r31{6},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=%pc,
                tmp1=r27{126},   tmpb=truncu(32,8,r24{30} - 111),
                %flags=SUBFLAGS32( r27{126}, m[0x40be67], r27{126} - global71 ),   %ZF=(r27{126} - global71) = 0,
                %CF=r27{126} <u m[0x40be67]
              Live variables: ebp,  ecx,  edi,  edx,  esi in proc proc3
result:    0 *32* esi := -
result:    0 *u32* ecx := -
result:    0 *i32* edx := -
result:    0 *32* ebp := -
result:    0 *u32* edi := -
found seq with more than one outedge!
taken branch is first out edge
found seq with more than one outedge!
taken branch is first out edge
found seq with more than one outedge!
taken branch is first out edge
found seq with more than one outedge!
taken branch is first out edge
dest is not lib
call:   76 {*32* eax, *16* r0, *16* r1, *16* r2, *8* r8, *8* r9, *8* r10, *8* r11, *8* r15, *32* ecx, *32* r26, *32* r27, *v* r28} := CALL proc8(
              )
              Reaching definitions: r24=0xc3c3c3c3,   r25=r27{0} - global179,   r26=r26{0},   r27=r27{0},
                r28=r28{0} - 44,   r29=r29{0},   r30=0,   r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=0x12fdd4e9,   m[r28{0} - 12]=0xe366f3d0,
                m[r28{0} - 16]=0xe329d569,   m[r28{0} - 20]=0x79cf2213,   m[r28{0} - 24]=r28{0} - 20,
                m[r28{0} - 28]=0x4400,   m[r28{0} - 32]=16,   m[r28{0} - 36]=0,   m[r28{0} - 40]=m[r28{0} + 4]{0},
                m[r28{0} - 44]=%pc,   tmp1=0xc3c3c3c3 - (r27{0} + global178),
                %flags=ADDFLAGS32( 0xc3c3c3c3 - (r27{0} + global178), r29{0}, (0xc3c3c3c3 - (r27{0} + global178)) + r29{0} ),
                %ZF=ADDFLAGS32( 0xc3c3c3c3 - (r27{0} + global178), r29{0}, (0xc3c3c3c3 - (r27{0} + global178)) + r29{0} ),
                %CF=ADDFLAGS32( 0xc3c3c3c3 - (r27{0} + global178), r29{0}, (0xc3c3c3c3 - (r27{0} + global178)) + r29{0} )
              Live variables: eax in proc proc5
result:    0 *32* eax := -
dest is not lib
call:   43 <all> := CALL proc1(<all>)
              Reaching definitions: r1=truncu(32,16,esp - 4),   r8=truncu(32,8,eax - global18),   r9=43,
                r24=r24{28} - global18,   r25=r28{0} - 4,   r28=r28{0} - 8,   r29=r28{0} - 4,   r31=r31{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=%pc,   tmp1=global183,
                %flags=ADDFLAGS32( global183, esp - 4, m[0x40b2a7] ),
                %ZF=ADDFLAGS32( global183, esp - 4, m[0x40b2a7] ),   %CF=ADDFLAGS32( global183, esp - 4, m[0x40b2a7] )
              Live variables:  in proc _start
dest is not lib
call:    6 {*32* eax, *32* esi, *8* r14, *i32* ecx, *i32* edx, *32** esp, *32* ebp, *u32* edi} := CALL proc9(
                *i32* ebx := param2
                *32* esi := param3
              )
              Reaching definitions: r2=r2{0},   r11=r11{0},   r27=r27{0},   r28=r28{0} - 8,   r29=r29{0},   r30=r30{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=%pc
              Live variables: ebp,  ecx,  edi,  edx,  esi,  esp in proc proc6
result:    0 *32* esi := -
result:    0 *i32* ecx := -
result:    0 *i32* edx := -
result:    0 *32** esp := -
result:    0 *32* ebp := -
result:    0 *u32* edi := -
dest is not lib
call:  133 {*u32* r24, *32* esi, *8* r14, *u32* ecx, *i32* edx, *32** esp, *32* ebp, *u32* edi} := CALL proc10(
                *i32* ebx := ebx - global71
                *32* esi := esi
              )
              Reaching definitions: r0=truncu(32,16,r24{30} - 111),   r2=r2{0},   r8=truncu(32,8,r24{30} - 111),
                r11=31,   r14=r14{6},   r24=r24{30} - 111,   r25=r25{6},   r26=r26{6},   r27=r27{126} - global71,
                r28=r28{6} - 4,   r29=r29{6},   r30=r30{6},   r31=r31{6},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=%pc,
                tmp1=r27{126},   tmpb=truncu(32,8,r24{30} - 111),
                %flags=SUBFLAGS32( r27{126}, m[0x40be67], r27{126} - global71 ),   %ZF=(r27{126} - global71) = 0,
                %CF=r27{126} <u m[0x40be67]
              Live variables: ebp,  ecx,  edi,  edx,  esi in proc proc6
result:    0 *32* esi := -
result:    0 *u32* ecx := -
result:    0 *i32* edx := -
result:    0 *32* ebp := -
result:    0 *u32* edi := -
dest is not lib
call:   76 {*32* eax, *16* r0, *16* r1, *16* r2, *8* r8, *8* r9, *8* r10, *8* r11, *8* r15, *32* ecx, *32* r26, *32* r27, *v* r28} := CALL proc8(
              )
              Reaching definitions: r24=0xc3c3c3c3,   r25=r27{0} - global179,   r26=r26{0},   r27=r27{0},
                r28=r28{0} - 44,   r29=r29{0},   r30=0,   r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=0x12fdd4e9,   m[r28{0} - 12]=0xe366f3d0,
                m[r28{0} - 16]=0xe329d569,   m[r28{0} - 20]=0x79cf2213,   m[r28{0} - 24]=r28{0} - 20,
                m[r28{0} - 28]=0x4400,   m[r28{0} - 32]=16,   m[r28{0} - 36]=0,   m[r28{0} - 40]=m[r28{0} + 4]{0},
                m[r28{0} - 44]=%pc,   tmp1=0xc3c3c3c3 - (r27{0} + global178),
                %flags=ADDFLAGS32( 0xc3c3c3c3 - (r27{0} + global178), r29{0}, (0xc3c3c3c3 - (r27{0} + global178)) + r29{0} ),
                %ZF=ADDFLAGS32( 0xc3c3c3c3 - (r27{0} + global178), r29{0}, (0xc3c3c3c3 - (r27{0} + global178)) + r29{0} ),
                %CF=ADDFLAGS32( 0xc3c3c3c3 - (r27{0} + global178), r29{0}, (0xc3c3c3c3 - (r27{0} + global178)) + r29{0} )
              Live variables: eax in proc proc7
result:    0 *32* eax := -
dest is not lib
call:   38 {*32* r24, *32* ecx, *32* edx, *v* esp} := CALL ExtCreatePen(
              )
              Reaching definitions: r14=47,   r24=0,   r26=((r27{0} *! 6) & 0xffff00ff) | 0x2f00,   r27=r27{0},
                r28=r28{0} - 28,   r29=r29{0},   r30=r30{0} - r27{0},   r31=(global49 + global51) - global50,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r28{0} - 4,   m[r28{0} - 12]=r28{0} - 8,
                m[r28{0} - 16]=r28{0} - 12,   m[r28{0} - 20]=r28{0} - 16,   m[r28{0} - 24]=r28{0} - 20,
                m[r28{0} - 28]=%pc,   tmp1=global49 - global50,
                %flags=ADDFLAGS32( global49 - global50, m[0x40a78f], (global49 + global51) - global50 ),
                %ZF=ADDFLAGS32( global49 - global50, m[0x40a78f], (global49 + global51) - global50 ),
                %CF=ADDFLAGS32( global49 - global50, m[0x40a78f], (global49 + global51) - global50 )
              Live variables: ecx,  edx in proc proc9
result:    0 *32* ecx := -
result:    0 *32* edx := -
dest is not lib
call:   30 {*32* r24, *32* ecx, *32* edx, *v* esp} := CALL ExtCreatePen(
              )
              Reaching definitions: r14=47,   r26=((r27{0} *! 6) & 0xffff00ff) | 0x2f00,   r27=r27{0},
                r28=r28{0} - 24,   r30=r30{0} - r27{0},   r31=(global49 + global51) - global50,   m[r28{0} - 4]=r28{0},
                m[r28{0} - 8]=r28{0} - 4,   m[r28{0} - 12]=r28{0} - 8,   m[r28{0} - 16]=r28{0} - 12,
                m[r28{0} - 20]=r28{0} - 16,   m[r28{0} - 24]=%pc,   tmp1=global49 - global50,
                %flags=ADDFLAGS32( global49 - global50, m[0x40a78f], (global49 + global51) - global50 ),
                %ZF=ADDFLAGS32( global49 - global50, m[0x40a78f], (global49 + global51) - global50 ),
                %CF=ADDFLAGS32( global49 - global50, m[0x40a78f], (global49 + global51) - global50 )
              Live variables: ecx,  edx in proc proc10
result:    0 *32* ecx := -
result:    0 *32* edx := -
