Unknown library function AddUsersToEncryptedFile
Unknown library function AreAllAccessesGranted
Unknown library function VirtualProtect
assgn   22 *32* %pc := m[0x403004]
is readonly
assgn   37 *32* %pc := m[0x403000]
is readonly
assgn   54 *32* %pc := m[0x40300c]
is readonly
assgn  168 *32* %pc := m[0x403010]
is readonly
assgn  207 *32* %pc := m[0x403018]
is readonly
assgn  221 *32* %pc := m[0x403018]
is readonly
assgn  252 *32* %pc := m[0x403014]
is readonly
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 32 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 20 to local table
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 20 to local table
TYPE ERROR: Existing type at address 0xffffffec is not structure or array type
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 32 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 40 to local table
TYPE ERROR: Existing type at address 0xffffffd8 is not structure or array type
in proc _start adding addrExp r28{0} - 44 to local table
TYPE ERROR: Existing type at address 0xffffffd4 is not structure or array type
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 52 to local table
in proc _start adding addrExp r28{0} - 56 to local table
in proc _start adding addrExp r28{0} - 56 to local table
in proc _start adding addrExp r28{0} - 60 to local table
in proc _start adding addrExp r28{0} - 64 to local table
in proc _start adding addrExp r28{0} - 68 to local table
in proc _start adding addrExp r28{0} - 72 to local table
in proc _start adding addrExp r28{0} - 52 to local table
in proc _start adding addrExp r28{0} - 52 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 44 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffd4 existing type /*signed?*/int but added type __size32 *
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 44 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffd4 existing type /*signed?*/int but added type __size32 *
in proc _start adding addrExp r28{0} - 72 to local table
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 72 to local table
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 72 to local table
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 72 to local table
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 72 to local table
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 72 to local table
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 72 to local table
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 72 to local table
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 44 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffd4 existing type /*signed?*/int but added type __size32 *
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 44 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffd4 existing type /*signed?*/int but added type __size32 *
in proc _start adding addrExp r28{0} - 72 to local table
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 72 to local table
finding final parameters for _start
potential param r28
found new parameter r28
potential param r30
found new parameter r30
potential param r31
found new parameter r31
potential param m[r28{0} - 80]
found new parameter m[r28{0} - 80]
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 44 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffd4 existing type /*signed?*/int but added type __size32 *
in proc _start adding addrExp r28{0} - 44 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffd4 existing type /*signed?*/int but added type __size32 *
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 44 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffd4 existing type /*signed?*/int but added type __size32 *
local ecx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local edx has type unsigned int that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local eax has type unsigned int that doesn't agree with type of define __size32 of a library, why?
local ecx has type void that doesn't agree with type of define /*signed?*/int of a library, why?
local edx has type void that doesn't agree with type of define unsigned int of a library, why?
local ecx_1 has type __size32 * that doesn't agree with type of define void * of a library, why?
local edx has type unsigned int that doesn't agree with type of define void of a library, why?
local edx has type void that doesn't agree with type of define unsigned int of a library, why?
local ecx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local edx has type unsigned int that doesn't agree with type of define void of a library, why?
dest is not lib
call:   23 {*u32* eax_1, *v* ecx, *v* edx, *v* esp} := CALL AddUsersToEncryptedFile(
              )
              Reaching definitions: r9=r9{0},   r27=0,   r28=r28{0} - 48,   r29=40,   r30=r30{0},   r31=r31{0},
                m[r28{0} - 20]=228,   m[r28{0} - 24]=r27{0},   m[r28{0} - 28]=r29{0},   m[r28{0} - 32]=r30{0},
                m[r28{0} - 36]=r31{0},   m[r28{0} - 40]=0,   m[r28{0} - 44]=0x403020,   m[r28{0} - 48]=%pc,
                m[r28{0} - 76]=m[r28{0} - 76]{0},   m[r28{0} - 80]=m[r28{0} - 80]{0},   tmp1=r28{0},
                %flags=LOGICALFLAGS32( 0 ),   %ZF=LOGICALFLAGS32( 0 ),   %CF=LOGICALFLAGS32( 0 )
              Live variables: eax_1 in proc _start
result:    0 *u32* eax_1 := -
dest is not lib
call:   38 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL AreAllAccessesGranted(
              )
              Reaching definitions: r9=r9{0},   r24=r24{23},   r25=r25{23},   r26=r26{23},   r27=0,   r28=r28{0} - 56,
                r29=40,   r30=r24{23} + (r30{0} * 4),   r31=r31{0},   m[r28{0} - 20]=228,   m[r28{0} - 24]=r27{0},
                m[r28{0} - 28]=r29{0},   m[r28{0} - 32]=r30{0},   m[r28{0} - 36]=r31{0},   m[r28{0} - 40]=0,
                m[r28{0} - 44]=0x403020,   m[r28{0} - 48]=-1,   m[r28{0} - 52]=-1,   m[r28{0} - 56]=%pc,
                m[r28{0} - 76]=m[r28{0} - 76]{0},   m[r28{0} - 80]=m[r28{0} - 80]{0},   tmp1=r24{23},
                %flags=LOGICALFLAGS32( r24{23} ),   %ZF=LOGICALFLAGS32( r24{23} ),   %CF=LOGICALFLAGS32( r24{23} )
              Live variables: eax in proc _start
result:    0 *32* eax := -
dest is not lib
call:   55 {*32* eax, *j32* ecx, *u32* edx, *v* esp} := CALL VirtualProtect(
              )
              Reaching definitions: r9=r9{0},   r24=r28{0} - 32,   r25=r25{38},   r26=r26{38},   r27=0,
                r28=r28{0} - 72,   r29=r29{265},   r30=r24{23} + (r30{0} * 4),   r31=r31{0},   m[r28{0} - 20]=228,
                m[r28{0} - 24]=r27{0},   m[r28{0} - 28]=r29{0},   m[r28{0} - 32]=r30{0},   m[r28{0} - 36]=r31{0},
                m[r28{0} - 40]=0,   m[r28{0} - 44]=0x403020,   m[r28{0} - 48]=-1,   m[r28{0} - 52]=-1,
                m[r28{0} - 56]=r28{0} - 32,   m[r28{0} - 60]=64,   m[r28{0} - 64]=0x3000,   m[r28{0} - 68]=0x401000,
                m[r28{0} - 72]=%pc,   m[r28{0} - 76]=m[r28{0} - 76]{0},   m[r28{0} - 80]=m[r28{0} - 80]{0},
                tmp1=r24{38},   %flags=LOGICALFLAGS32( r24{38} ),   %ZF=LOGICALFLAGS32( r24{38} ),
                %CF=LOGICALFLAGS32( r24{38} )
              Live variables: ecx,  edx in proc _start
result:    0 *j32* ecx := -
result:    0 *u32* edx := -
dest is not lib
call:  169 {*u32* eax_4, *v** ecx_1, *v* edx, *v* esp} := CALL LoadLibraryA(
                *union* local3 := edx + esi
              )
              Reaching definitions: r9=r9{321},   r24=r24{322},   r25=r25{323},   r26=r26{160} + r30{328},
                r27=r27{325},   r28=(r28{0} - 68) - 8,   r29=r29{327},   r30=r30{328},   r31=r31{329},
                m[r28{0} - 20]=228,   m[r28{0} - 24]=r27{0},   m[r28{0} - 28]=r29{0},   m[r28{0} - 32]=r30{0},
                m[r28{0} - 36]=0x401358,   m[r28{0} - 40]=m[r28{0} - 40]{401},   m[r28{0} - 44]=m[r28{0} - 44]{402},
                m[r28{0} - 48]=-1,   m[r28{0} - 52]=-1,   m[r28{0} - 56]=r28{0} - 32,   m[r28{0} - 60]=64,
                m[r28{0} - 64]=0x3000,   m[r28{0} - 68]=0x401000,   m[r28{0} - 72]=r26{160} + r30{328},
                m[r28{0} - 76]=%pc,   m[r28{0} - 80]=m[r28{0} - 80]{405},   tmp1=r26{160},
                %flags=ADDFLAGS32( r26{160}, r30{328}, r26{160} + r30{328} ),
                %ZF=ADDFLAGS32( r26{160}, r30{328}, r26{160} + r30{328} ),
                %CF=ADDFLAGS32( r26{160}, r30{328}, r26{160} + r30{328} )
              Live variables: eax_4,  ecx_1 in proc _start
result:    0 *u32* eax_4 := -
result:    0 *v** ecx_1 := -
dest is not lib
call:  222 {*32* eax, *v** ecx_1, *u32* edx, *v* esp} := CALL GetProcAddress(
                *union* local4 := eax_4
                *c** local3 := (eax_3 + esi) + 2
              )
              Reaching definitions: r9=truncu(32,8,r25{337} + r25{337}),   r24=(r24{336} + r30{341}) + 2,
                r25=r25{337} + r25{337},   r26=r24{169},   r27=r24{169} + (r27{325} * 4),   r28=(r28{0} - 68) - 12,
                r29=r29{340},   r30=r30{341},   r31=r31{342},   m[r28{0} - 20]=228,   m[r28{0} - 24]=r27{0},
                m[r28{0} - 28]=r29{0},   m[r28{0} - 32]=r30{0},   m[r28{0} - 36]=0x401358,   m[r28{0} - 40]=r24{169},
                m[r28{0} - 44]=m[r28{0} - 44]{402},   m[r28{0} - 48]=-1,   m[r28{0} - 52]=-1,
                m[r28{0} - 56]=r28{0} - 32,   m[r28{0} - 60]=64,   m[r28{0} - 64]=0x3000,   m[r28{0} - 68]=0x401000,
                m[r28{0} - 72]=(r24{336} + r30{341}) + 2,   m[r28{0} - 76]=r24{169},   m[r28{0} - 80]=%pc,
                tmp1=r24{336},   %flags=LOGICALFLAGS32( r24{336} ),   %ZF=LOGICALFLAGS32( r24{336} ),
                %CF=LOGICALFLAGS32( r24{336} )
              Live variables: eax,  ecx_1,  edx in proc _start
result:    0 *32* eax := -
result:    0 *v** ecx_1 := -
result:    0 *u32* edx := -
dest is not lib
call:  208 {*32* eax, *v** ecx_1, *u32* edx, *v* esp} := CALL GetProcAddress(
                *union* local4 := eax_4
                *union* local3 := ecx
              )
              Reaching definitions: r9=truncu(32,8,r25{199}),   r24=r24{336},   r25=r25{199},   r26=r24{169},
                r27=r24{169} + (r27{325} * 4),   r28=(r28{0} - 68) - 12,   r29=r29{340},   r30=r30{341},   r31=r31{342}
                m[r28{0} - 20]=228,   m[r28{0} - 24]=r27{0},   m[r28{0} - 28]=r29{0},   m[r28{0} - 32]=r30{0},
                m[r28{0} - 36]=0x401358,   m[r28{0} - 40]=r24{169},   m[r28{0} - 44]=m[r28{0} - 44]{402},
                m[r28{0} - 48]=-1,   m[r28{0} - 52]=-1,   m[r28{0} - 56]=r28{0} - 32,   m[r28{0} - 60]=64,
                m[r28{0} - 64]=0x3000,   m[r28{0} - 68]=0x401000,   m[r28{0} - 72]=r25{199},   m[r28{0} - 76]=r24{169},
                m[r28{0} - 80]=%pc,   tmp1=r24{336},   %flags=LOGICALFLAGS32( r24{336} ),
                %ZF=LOGICALFLAGS32( r24{336} ),   %CF=LOGICALFLAGS32( r24{336} )
              Live variables: eax,  ecx_1,  edx in proc _start
result:    0 *32* eax := -
result:    0 *v** ecx_1 := -
result:    0 *u32* edx := -
dest is not lib
call:  253 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL ExitProcess(
                *UINT* m[esp - 4] := m[esp - 4]
              )
              Reaching definitions: r9=r9{247},   r24=r24{247},   r25=r25{247},   r26=r26{247},   r27=r27{247},
                r28=r28{247} - 8,   r29=r29{247},   r30=r30{247},   r31=r31{247},   m[r28{0} - 20]=m[r28{0} - 20]{247},
                m[r28{0} - 24]=m[r28{0} - 24]{247},   m[r28{0} - 28]=m[r28{0} - 28]{247},
                m[r28{0} - 32]=m[r28{0} - 32]{247},   m[r28{0} - 36]=m[r28{0} - 36]{247},
                m[r28{0} - 40]=m[r28{0} - 40]{247},   m[r28{0} - 44]=m[r28{0} - 44]{247},
                m[r28{0} - 48]=m[r28{0} - 48]{247},   m[r28{0} - 52]=m[r28{0} - 52]{247},
                m[r28{0} - 56]=m[r28{0} - 56]{247},   m[r28{0} - 60]=m[r28{0} - 60]{247},
                m[r28{0} - 64]=m[r28{0} - 64]{247},   m[r28{0} - 68]=m[r28{0} - 68]{247},
                m[r28{0} - 72]=m[r28{0} - 72]{247},   m[r28{0} - 76]=m[r28{0} - 76]{247},
                m[r28{0} - 80]=m[r28{0} - 80]{247},   m[r28{0} - 20]=m[r28{0} - 20]{247},
                m[r28{0} - 24]=m[r28{0} - 24]{247},   m[r28{0} - 28]=m[r28{0} - 28]{247},
                m[r28{0} - 32]=m[r28{0} - 32]{247},   m[r28{0} - 36]=m[r28{0} - 36]{247},
                m[r28{0} - 40]=m[r28{0} - 40]{247},   m[r28{0} - 44]=m[r28{0} - 44]{247},
                m[r28{0} - 48]=m[r28{0} - 48]{247},   m[r28{0} - 52]=m[r28{0} - 52]{247},
                m[r28{0} - 56]=m[r28{0} - 56]{247},   m[r28{0} - 60]=m[r28{0} - 60]{247},
                m[r28{0} - 64]=m[r28{0} - 64]{247},   m[r28{0} - 68]=m[r28{0} - 68]{247},
                m[r28{0} - 72]=m[r28{0} - 72]{247},   m[r28{0} - 76]=m[r28{0} - 76]{247},
                m[r28{0} - 80]=m[r28{0} - 80]{247},   <all>=<all>{247},   tmp1=tmp1{247},   %flags=%flags{247},
                %ZF=%ZF{247},   %CF=%CF{247}
              Live variables:  in proc _start
