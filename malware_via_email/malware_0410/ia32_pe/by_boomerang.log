in proc proc1 adding addrExp r28{0} - 4 to local table
finding final parameters for proc1
potential param r28
found new parameter r28
assgn   12 *32* %pc := m[0x404004]
is readonly
assgn   16 *32* %pc := m[0x404008]
is readonly
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
in proc _start adding addrExp r28{0} - 4 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type unsigned int does not resolve to compound or array
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type unsigned int does not resolve to compound or array
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
finding final parameters for _start
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
local eax has type void that doesn't agree with type of define __size32 of a library, why?
local edx has type __size32 that doesn't agree with type of define void of a library, why?
local esp has type __size32 that doesn't agree with type of define void of a library, why?
local edx has type void that doesn't agree with type of define __size32 of a library, why?
dest is not lib
call:   13 {*v* ecx, *v* edx} := CALL LoadLibraryA(
                *LPCSTR* local0 := 0
              )
              Reaching definitions: r26=0x2b77d1b0,   r28=r28{0} - 8,   m[r28{0} - 4]=0,   m[r28{0} - 8]=%pc,
                tmp1=0xae0809f2,   %flags=SUBFLAGS32( 0xae0809f2, 0x82903842, 0x2b77d1b0 ),   %ZF=0x2b77d1b0 = 0,
                %CF=0xae0809f2 <u 0x82903842
              Live variables:  in proc _start
dest is not lib
call:   17 {*v* ecx, *32* edx} := CALL GetCommandLineA(
              )
              Reaching definitions: r24=r24{13},   r25=r25{13},   r26=r26{13},   r28=r28{0} - 4,   m[r28{0} - 4]=%pc,
                m[r28{0} - 8]=%pc,   tmp1=0xae0809f2,   %flags=SUBFLAGS32( 0xae0809f2, 0x82903842, 0x2b77d1b0 ),
                %ZF=0,   %CF=0
              Live variables: ecx,  edx in proc _start
result:    0 *v* ecx := -
result:    0 *32* edx := -
dest is not lib
call:   22 <all> := CALL proc1(<all>)
              Reaching definitions: r24=0x15000,   r25=r25{17},   r26=r26{17},   r28=r28{0} - 4,   m[r28{0} - 4]=%pc,
                m[r28{0} - 8]=%pc,   tmp1=0xae0809f2,   %flags=SUBFLAGS32( 0xae0809f2, 0x82903842, 0x2b77d1b0 ),
                %ZF=0,   %CF=0
              Live variables:  in proc _start
