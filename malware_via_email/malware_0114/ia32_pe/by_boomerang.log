Unknown library function AreAnyAccessesGranted
Unknown library function VirtualProtect
assgn   16 *32* r30 := m[0x403004]
is readonly
assgn 1384 *32* %pc := m[0x403000]
is readonly
assgn 1396 *32* %pc := m[0x40300c]
is readonly
assgn 1410 *32* %pc := m[0x403010]
is readonly
assgn 1525 *32* %pc := m[0x403014]
is readonly
assgn 1562 *32* %pc := m[0x40301c]
is readonly
assgn 1578 *32* %pc := m[0x40301c]
is readonly
assgn 1612 *32* %pc := m[0x403018]
is readonly
after removing matching assigns (%pc).
WARNING: size 0x10 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x10 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x10 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x10 meet with /*signed?*/int; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
in proc _start adding addrExp r28{0} - 20 to local table
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 32 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 52 to local table
in proc _start adding addrExp r28{0} - 56 to local table
finding final parameters for _start
potential param r26
found new parameter r26
potential param r24
found new parameter r24
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
local eax has type __size32 that doesn't agree with type of define /*signed?*/int of a library, why?
local edx has type __size32 that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local eax has type /*signed?*/int that doesn't agree with type of define __size32 of a library, why?
local eax has type __size32 that doesn't agree with type of define void * of a library, why?
local ecx has type void that doesn't agree with type of define /*signed?*/int of a library, why?
local ecx has type /*signed?*/int that doesn't agree with type of define unsigned int of a library, why?
local eax has type void * that doesn't agree with type of define __size32 of a library, why?
local edx has type void that doesn't agree with type of define unsigned int of a library, why?
local ecx has type unsigned int that doesn't agree with type of define void of a library, why?
local edx has type unsigned int that doesn't agree with type of define void of a library, why?
dest is not lib
call: 1385 {*j32* eax, *v* ecx, *v* edx, *v* esp} := CALL AreAnyAccessesGranted(
              )
              Reaching definitions: r0=r0{1374},   r9=r9{1374},   r24=r24{1374},   r25=r25{1374},   r26=r26{1374},
                r27=r27{1374} + r24{1374},   r28=r28{1374} - 12,   r29=r29{1374},   r30=r30{1374},   r31=r31{1374},
                m[r28{0} - 20]=m[r28{0} - 20]{1374},   m[r28{0} - 24]=m[r28{0} - 24]{1374},
                m[r28{0} - 28]=m[r28{0} - 28]{1374},   m[r28{0} - 32]=m[r28{0} - 32]{1374},
                m[r28{0} - 36]=m[r28{0} - 36]{1374},   m[r28{0} - 40]=m[r28{0} - 40]{1374},
                m[r28{0} - 44]=m[r28{0} - 44]{1374},   m[r28{0} - 48]=m[r28{0} - 48]{1374},
                m[r28{0} - 52]=m[r28{0} - 52]{1374},   m[r28{0} - 56]=m[r28{0} - 56]{1374},
                m[r28{0} - 20]=m[r28{0} - 20]{1374},   m[r28{0} - 24]=m[r28{0} - 24]{1374},
                m[r28{0} - 28]=m[r28{0} - 28]{1374},   m[r28{0} - 32]=m[r28{0} - 32]{1374},
                m[r28{0} - 36]=m[r28{0} - 36]{1374},   m[r28{0} - 40]=m[r28{0} - 40]{1374},
                m[r28{0} - 44]=m[r28{0} - 44]{1374},   m[r28{0} - 48]=m[r28{0} - 48]{1374},
                m[r28{0} - 52]=m[r28{0} - 52]{1374},   m[r28{0} - 56]=m[r28{0} - 56]{1374},   <all>=<all>{1374},
                tmp1=r27{1374},   tmph=tmph{1374},   %flags=ADDFLAGS32( r27{1374}, r24{1374}, r27{1374} + r24{1374} ),
                %ZF=ADDFLAGS32( r27{1374}, r24{1374}, r27{1374} + r24{1374} ),
                %CF=ADDFLAGS32( r27{1374}, r24{1374}, r27{1374} + r24{1374} )
              Live variables: eax in proc _start
result:    0 *j32* eax := -
dest is not lib
call: 1397 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL CloseHandle(
                *HANDLE* m[esp_80 - 12] := m[esp_80 - 12]
              )
              Reaching definitions: r0=r0{1374},   r9=r9{1374},   r24=r24{1385},   r25=r25{1385},   r26=r26{1385},
                r27=r27{1615},   r28=r28{1374} - 16,   r29=r29{1374},   r30=r30{1374},   r31=r31{1374},
                m[r28{0} - 20]=m[r28{0} - 20]{1374},   m[r28{0} - 24]=m[r28{0} - 24]{1374},
                m[r28{0} - 28]=m[r28{0} - 28]{1374},   m[r28{0} - 32]=m[r28{0} - 32]{1374},
                m[r28{0} - 36]=m[r28{0} - 36]{1374},   m[r28{0} - 40]=m[r28{0} - 40]{1374},
                m[r28{0} - 44]=m[r28{0} - 44]{1374},   m[r28{0} - 48]=m[r28{0} - 48]{1374},
                m[r28{0} - 52]=m[r28{0} - 52]{1374},   m[r28{0} - 56]=m[r28{0} - 56]{1374},
                m[r28{0} - 20]=m[r28{0} - 20]{1374},   m[r28{0} - 24]=m[r28{0} - 24]{1374},
                m[r28{0} - 28]=m[r28{0} - 28]{1374},   m[r28{0} - 32]=m[r28{0} - 32]{1374},
                m[r28{0} - 36]=m[r28{0} - 36]{1374},   m[r28{0} - 40]=m[r28{0} - 40]{1374},
                m[r28{0} - 44]=m[r28{0} - 44]{1374},   m[r28{0} - 48]=m[r28{0} - 48]{1374},
                m[r28{0} - 52]=m[r28{0} - 52]{1374},   m[r28{0} - 56]=m[r28{0} - 56]{1374},   <all>=<all>{1374},
                tmp1=tmp1{1616},   tmph=tmph{1374},   %flags=%flags{1617},   %ZF=%ZF{1618},   %CF=%CF{1619}
              Live variables:  in proc _start
dest is not lib
call: 1411 {*v** eax, *j32* ecx, *v* edx, *v* esp} := CALL VirtualProtect(
              )
              Reaching definitions: r0=truncu(32,16,r28{1374} + 8),   r9=r9{1374},   r24=r28{1374} + 8,   r25=r25{1397}
                r26=r26{1397},   r27=r27{1615},   r28=r28{1374} - 28,   r29=r29{1374},   r30=r30{1374},   r31=r31{1374}
                m[r28{0} - 20]=m[r28{0} - 20]{1374},   m[r28{0} - 24]=m[r28{0} - 24]{1374},
                m[r28{0} - 28]=m[r28{0} - 28]{1374},   m[r28{0} - 32]=m[r28{0} - 32]{1374},
                m[r28{0} - 36]=m[r28{0} - 36]{1374},   m[r28{0} - 40]=m[r28{0} - 40]{1374},
                m[r28{0} - 44]=m[r28{0} - 44]{1374},   m[r28{0} - 48]=m[r28{0} - 48]{1374},
                m[r28{0} - 52]=m[r28{0} - 52]{1374},   m[r28{0} - 56]=m[r28{0} - 56]{1374},
                m[r28{0} - 20]=m[r28{0} - 20]{1374},   m[r28{0} - 24]=m[r28{0} - 24]{1374},
                m[r28{0} - 28]=m[r28{0} - 28]{1374},   m[r28{0} - 32]=m[r28{0} - 32]{1374},
                m[r28{0} - 36]=m[r28{0} - 36]{1374},   m[r28{0} - 40]=m[r28{0} - 40]{1374},
                m[r28{0} - 44]=m[r28{0} - 44]{1374},   m[r28{0} - 48]=m[r28{0} - 48]{1374},
                m[r28{0} - 52]=m[r28{0} - 52]{1374},   m[r28{0} - 56]=m[r28{0} - 56]{1374},   <all>=<all>{1374},
                tmp1=tmp1{1616},   tmph=tmph{1374},   %flags=%flags{1617},   %ZF=%ZF{1618},   %CF=%CF{1619}
              Live variables: eax,  ecx in proc _start
result:    0 *v** eax := -
result:    0 *j32* ecx := -
dest is not lib
call: 1526 {*u32* r24, *u32* ecx, *v* edx, *v* esp} := CALL LoadLibraryA(
                *LPCSTR* m[esp_80 - 28] := m[esp_80 - 28]
              )
              Reaching definitions: r0=r0{1675},   r9=truncu(32,8,r25{1515} + r27{1680}),   r24=r24{1677},
                r25=r25{1515} + r27{1680},   r26=r26{1679},   r27=r27{1680},   r28=(r28{1374} - 24) - 8,
                r29=r29{1682},   r30=r30{1683},   r31=r31{1684},   m[r28{0} - 20]=m[r28{0} - 20]{1374},
                m[r28{0} - 24]=m[r28{0} - 24]{1374},   m[r28{0} - 28]=m[r28{0} - 28]{1374},
                m[r28{0} - 32]=m[r28{0} - 32]{1374},   m[r28{0} - 36]=m[r28{0} - 36]{1374},
                m[r28{0} - 40]=m[r28{0} - 40]{1374},   m[r28{0} - 44]=m[r28{0} - 44]{1374},
                m[r28{0} - 48]=m[r28{0} - 48]{1374},   m[r28{0} - 52]=m[r28{0} - 52]{1374},
                m[r28{0} - 56]=m[r28{0} - 56]{1374},   m[r28{0} - 20]=m[r28{0} - 20]{1374},
                m[r28{0} - 24]=m[r28{0} - 24]{1374},   m[r28{0} - 28]=m[r28{0} - 28]{1374},
                m[r28{0} - 32]=m[r28{0} - 32]{1374},   m[r28{0} - 36]=m[r28{0} - 36]{1374},
                m[r28{0} - 40]=m[r28{0} - 40]{1374},   m[r28{0} - 44]=m[r28{0} - 44]{1374},
                m[r28{0} - 48]=m[r28{0} - 48]{1374},   m[r28{0} - 52]=m[r28{0} - 52]{1374},
                m[r28{0} - 56]=m[r28{0} - 56]{1374},   <all>=<all>{1374},   tmp1=r25{1515},   tmph=tmph{1671},
                %flags=ADDFLAGS32( r25{1515}, r27{1680}, r25{1515} + r27{1680} ),
                %ZF=ADDFLAGS32( r25{1515}, r27{1680}, r25{1515} + r27{1680} ),
                %CF=ADDFLAGS32( r25{1515}, r27{1680}, r25{1515} + r27{1680} )
              Live variables: r24 in proc _start
result:    0 *u32* r24 := -
dest is not lib
call: 1579 {*32* eax, *u32* ecx, *u32* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* m[esp_80 - 32] := m[esp_80 - 32]
                *c** m[esp_80 - 28] := m[esp_80 - 28]
              )
              Reaching definitions: r0=truncu(32,16,(r24{1692} + r25{1568}) + 2),   r9=truncu(32,8,r25{1568}),
                r24=(r24{1692} + r25{1568}) + 2,   r25=r25{1568},   r26=r26{1694},   r27=r27{1695},
                r28=(r28{1374} - 24) - 12,   r29=r29{1697},   r30=r30{1698},   r31=r31{1699},
                m[r28{0} - 20]=m[r28{0} - 20]{1374},   m[r28{0} - 24]=m[r28{0} - 24]{1374},
                m[r28{0} - 28]=m[r28{0} - 28]{1374},   m[r28{0} - 32]=m[r28{0} - 32]{1374},
                m[r28{0} - 36]=m[r28{0} - 36]{1374},   m[r28{0} - 40]=m[r28{0} - 40]{1374},
                m[r28{0} - 44]=m[r28{0} - 44]{1374},   m[r28{0} - 48]=m[r28{0} - 48]{1374},
                m[r28{0} - 52]=m[r28{0} - 52]{1374},   m[r28{0} - 56]=m[r28{0} - 56]{1374},
                m[r28{0} - 20]=m[r28{0} - 20]{1374},   m[r28{0} - 24]=m[r28{0} - 24]{1374},
                m[r28{0} - 28]=m[r28{0} - 28]{1374},   m[r28{0} - 32]=m[r28{0} - 32]{1374},
                m[r28{0} - 36]=m[r28{0} - 36]{1374},   m[r28{0} - 40]=m[r28{0} - 40]{1374},
                m[r28{0} - 44]=m[r28{0} - 44]{1374},   m[r28{0} - 48]=m[r28{0} - 48]{1374},
                m[r28{0} - 52]=m[r28{0} - 52]{1374},   m[r28{0} - 56]=m[r28{0} - 56]{1374},   <all>=<all>{1374},
                tmp1=r24{1692},   tmph=tmph{1671},   %flags=LOGICALFLAGS32( r24{1692} ),
                %ZF=LOGICALFLAGS32( r24{1692} ),   %CF=LOGICALFLAGS32( r24{1692} )
              Live variables: eax,  edx in proc _start
result:    0 *32* eax := -
result:    0 *u32* edx := -
dest is not lib
call: 1563 {*32* eax, *u32* ecx, *u32* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* m[esp_80 - 32] := m[esp_80 - 32]
                *c** m[esp_80 - 28] := m[esp_80 - 28]
              )
              Reaching definitions: r0=truncu(32,16,r24{1554}),   r9=r9{1691},   r24=r24{1554},   r25=r25{1693},
                r26=r26{1694},   r27=r27{1695},   r28=(r28{1374} - 24) - 12,   r29=r29{1697},   r30=r30{1698},
                r31=r31{1699},   m[r28{0} - 20]=m[r28{0} - 20]{1374},   m[r28{0} - 24]=m[r28{0} - 24]{1374},
                m[r28{0} - 28]=m[r28{0} - 28]{1374},   m[r28{0} - 32]=m[r28{0} - 32]{1374},
                m[r28{0} - 36]=m[r28{0} - 36]{1374},   m[r28{0} - 40]=m[r28{0} - 40]{1374},
                m[r28{0} - 44]=m[r28{0} - 44]{1374},   m[r28{0} - 48]=m[r28{0} - 48]{1374},
                m[r28{0} - 52]=m[r28{0} - 52]{1374},   m[r28{0} - 56]=m[r28{0} - 56]{1374},
                m[r28{0} - 20]=m[r28{0} - 20]{1374},   m[r28{0} - 24]=m[r28{0} - 24]{1374},
                m[r28{0} - 28]=m[r28{0} - 28]{1374},   m[r28{0} - 32]=m[r28{0} - 32]{1374},
                m[r28{0} - 36]=m[r28{0} - 36]{1374},   m[r28{0} - 40]=m[r28{0} - 40]{1374},
                m[r28{0} - 44]=m[r28{0} - 44]{1374},   m[r28{0} - 48]=m[r28{0} - 48]{1374},
                m[r28{0} - 52]=m[r28{0} - 52]{1374},   m[r28{0} - 56]=m[r28{0} - 56]{1374},   <all>=<all>{1374},
                tmp1=r24{1692},   tmph=tmph{1671},   %flags=LOGICALFLAGS32( r24{1692} ),
                %ZF=LOGICALFLAGS32( r24{1692} ),   %CF=LOGICALFLAGS32( r24{1692} )
              Live variables: eax,  ecx,  edx in proc _start
result:    0 *32* eax := -
result:    0 *u32* ecx := -
result:    0 *u32* edx := -
dest is not lib
call: 1613 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL ExitProcess(
                *UINT* m[esp - 4] := m[esp - 4]
              )
              Reaching definitions: r0=r0{1607},   r9=r9{1607},   r24=r24{1607},   r25=r25{1607},   r26=r26{1607},
                r27=r27{1607},   r28=r28{1607} - 8,   r29=r29{1607},   r30=r30{1607},   r31=r31{1607},
                m[r28{0} - 20]=m[r28{0} - 20]{1607},   m[r28{0} - 24]=m[r28{0} - 24]{1607},
                m[r28{0} - 28]=m[r28{0} - 28]{1607},   m[r28{0} - 32]=m[r28{0} - 32]{1607},
                m[r28{0} - 36]=m[r28{0} - 36]{1607},   m[r28{0} - 40]=m[r28{0} - 40]{1607},
                m[r28{0} - 44]=m[r28{0} - 44]{1607},   m[r28{0} - 48]=m[r28{0} - 48]{1607},
                m[r28{0} - 52]=m[r28{0} - 52]{1607},   m[r28{0} - 56]=m[r28{0} - 56]{1607},
                m[r28{0} - 20]=m[r28{0} - 20]{1607},   m[r28{0} - 24]=m[r28{0} - 24]{1607},
                m[r28{0} - 28]=m[r28{0} - 28]{1607},   m[r28{0} - 32]=m[r28{0} - 32]{1607},
                m[r28{0} - 36]=m[r28{0} - 36]{1607},   m[r28{0} - 40]=m[r28{0} - 40]{1607},
                m[r28{0} - 44]=m[r28{0} - 44]{1607},   m[r28{0} - 48]=m[r28{0} - 48]{1607},
                m[r28{0} - 52]=m[r28{0} - 52]{1607},   m[r28{0} - 56]=m[r28{0} - 56]{1607},   <all>=<all>{1607},
                tmp1=tmp1{1607},   tmph=tmph{1607},   %flags=%flags{1607},   %ZF=%ZF{1607},   %CF=%CF{1607}
              Live variables:  in proc _start
