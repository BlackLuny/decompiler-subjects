Unknown library function __set_app_type
COMPUTED JUMP at 0x40126a, pDest = r25
Unknown library function SetUnhandledExceptionFilter
Unknown library function __getmainargs
Unknown library function _setmode
Unknown library function __p__fmode
Unknown library function __p__environ
Unknown library function _cexit
Unknown library function GetStartupInfoA
Unknown library function GetModuleHandleA
COMPUTED JUMP at 0x402f1b, pDest = r24
COMPUTED JUMP at 0x40126a, pDest = r25
Unknown library function GetNativeSystemInfo
Unknown library function 
Unknown library function NtYieldExecution
Unknown library function HeapCreate
Unknown library function GetActiveWindow
after removing matching assigns (%pc).
in proc proc4 adding addrExp r28{0} - 4 to local table
finding final parameters for proc4
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc8 ###
in proc proc8 adding addrExp r28{0} - 4 to local table
finding final parameters for proc8
potential param r24
found new parameter r24
potential param r26
found new parameter r26
after removing matching assigns (t[WILDSTR]).
in proc proc13 adding addrExp r28{0} to local table
in proc proc13 adding addrExp r28{0} - 4 to local table
finding final parameters for proc13
potential param r28
found new parameter r28
potential param r24
found new parameter r24
potential param m[r28{0}]
found new parameter m[r28{0}]
assgn    3 *32* r25 := m[0x407188]
in proc proc19 adding addrExp r28{0} - 4 to local table
finding final parameters for proc19
assgn    9 *32* r24 := m[0x406130]
assgn   13 *32* r24 := m[0x403020]
is readonly
assgn   46 *32* r25 := m[0x403024]
is readonly
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc14 ###
in proc proc14 adding addrExp r28{0} - 12 to local table
in proc proc14 adding addrExp r28{0} - 4 to local table
in proc proc14 adding addrExp r28{0} - 8 to local table
in proc proc14 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc14 adding addrExp r28{0} - 8 to local table
in proc proc14 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc14 adding addrExp r28{0} - 8 to local table
finding final parameters for proc14
potential param r28
found new parameter r28
potential param r30
found new parameter r30
potential param r26
found new parameter r26
assgn   86 *32* r25 := m[0x406030]
assgn  143 *32* r24 := m[0x40601c]
after removing matching assigns (%pc).
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc20 ###
in proc proc20 adding addrExp r28{0} - 284 to local table
in proc proc20 adding addrExp r28{0} - 4 to local table
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 12 to local table
in proc proc20 adding addrExp r28{0} - 16 to local table
in proc proc20 adding addrExp r28{0} - 288 to local table
in proc proc20 adding addrExp r28{0} - 292 to local table
in proc proc20 adding addrExp r28{0} - 296 to local table
in proc proc20 adding addrExp r28{0} - 328 to local table
in proc proc20 adding addrExp r28{0} - 324 to local table
in proc proc20 adding addrExp r28{0} - 332 to local table
in proc proc20 adding addrExp r28{0} - 336 to local table
in proc proc20 adding addrExp r28{0} - 332 to local table
in proc proc20 adding addrExp r28{0} - 336 to local table
in proc proc20 adding addrExp r28{0} - 328 to local table
in proc proc20 adding addrExp r28{0} - 332 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffeb4 existing type /*signed?*/int but added type HANDLE
in proc proc20 adding addrExp r28{0} - 336 to local table
in proc proc20 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 12 to local table
in proc proc20 adding addrExp r28{0} - 16 to local table
in proc proc20 adding addrExp r28{0} - 288 to local table
in proc proc20 adding addrExp r28{0} - 292 to local table
in proc proc20 adding addrExp r28{0} - 296 to local table
in proc proc20 adding addrExp r28{0} - 324 to local table
in proc proc20 adding addrExp r28{0} - 328 to local table
in proc proc20 adding addrExp r28{0} - 332 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffeb4 existing type /*signed?*/int but added type HANDLE
in proc proc20 adding addrExp r28{0} - 336 to local table
in proc proc20 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 12 to local table
in proc proc20 adding addrExp r28{0} - 16 to local table
in proc proc20 adding addrExp r28{0} - 288 to local table
in proc proc20 adding addrExp r28{0} - 292 to local table
in proc proc20 adding addrExp r28{0} - 296 to local table
in proc proc20 adding addrExp r28{0} - 324 to local table
in proc proc20 adding addrExp r28{0} - 328 to local table
in proc proc20 adding addrExp r28{0} - 332 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffeb4 existing type /*signed?*/int but added type HANDLE
in proc proc20 adding addrExp r28{0} - 336 to local table
in proc proc20 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 12 to local table
in proc proc20 adding addrExp r28{0} - 16 to local table
in proc proc20 adding addrExp r28{0} - 288 to local table
in proc proc20 adding addrExp r28{0} - 292 to local table
in proc proc20 adding addrExp r28{0} - 296 to local table
in proc proc20 adding addrExp r28{0} - 324 to local table
in proc proc20 adding addrExp r28{0} - 328 to local table
in proc proc20 adding addrExp r28{0} - 332 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffeb4 existing type /*signed?*/int but added type HANDLE
in proc proc20 adding addrExp r28{0} - 336 to local table
finding final parameters for proc20
potential param r28
found new parameter r28
potential param m[r28{0} - 284]
found new parameter m[r28{0} - 284]
potential param r8
found new parameter r8
assgn   15 *32* r27 := m[0x406014]
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
in proc proc30 adding addrExp r28{0} - 4 to local table
finding final parameters for proc30
finding final parameters for proc30
assgn   13 *32* r30 := m[24]
assgn  134 *32* r31 := m[0x406030]
assgn  179 *32* r30 := m[0x406020]
assgn  260 *32* r31 := m[0x406030]
assgn  273 *32* r24 := m[0x406038]
assgn  423 *32* r30 := m[0x406030]
assgn  440 *32* r26 := m[0x406110]
assgn  537 *32* r30 := m[0x406030]
assgn  621 *32* r26 := m[0x406030]
assgn  707 *32* r26 := m[0x406030]
assgn  753 *32* r27 := m[0x406014]
assgn  810 *32* r31 := m[0x406038]
assgn  898 *32* r24 := m[0x406034]
assgn  969 *32* r30 := m[0x406034]
assgn 1069 *32* r26 := m[0x406034]
assgn 1143 *32* r25 := m[0x406034]
assgn 1213 *32* r24 := m[0x406030]
assgn 1282 *32* r25 := m[0x406030]
assgn 1290 *32* r25 := m[0x4060f4]
assgn 1298 *32* r26 := m[0x406100]
assgn 1303 *32* r30 := m[0x4060fc]
assgn 1308 *32* r24 := m[0x4060f8]
assgn 1313 *32* r26 := m[0x406114]
assgn 1351 *32* r26 := m[0x406020]
assgn 1394 *32* %pc := m[0x4060f4]
assgn 1424 *32* r26 := m[0x406010]
assgn 1444 *32* %pc := m[0x406104]
assgn 1459 *32* r26 := m[0x406020]
assgn 1466 *32* r26 := m[0x406020]
assgn 1583 *32* r24 := m[0x406034]
undoComputedBB for statement 1445 <all> := CALL proc35(<all>)
              Reaching definitions: r6=r6{2122},   r8=r8{2123},   r9=truncu(32,8,r31{1371} + 10),   r10=r10{2124},
                r24=r24{2125},   r25=r25{2126},   r26=r26{2127},   r27=r27{1371},   r28=r28{1442},   r29=r29{1371},
                r30=r30{2129},   r31=r31{1371},   <all>=<all>{1371},   tmp1=tmp1{2130},   tmpb=tmpb{1371},
                tmph=tmph{1371},   %flags=%flags{2131},   %ZF=%ZF{2132},   %CF=%CF{2133}
              Live variables: r6,  r9,  r10,  r25,  r26,  r27,  r28,  r29,  r30,  r31,  tmph
after removing matching assigns (%pc).
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc18 ###
in proc proc18 adding addrExp r28{0} - 864 to local table
in proc proc18 adding addrExp r28{0} - 4 to local table
in proc proc18 adding addrExp r28{0} - 8 to local table
in proc proc18 adding addrExp r28{0} - 12 to local table
in proc proc18 adding addrExp r28{0} - 16 to local table
in proc proc18 adding addrExp r28{0} - 576 to local table
in proc proc18 adding addrExp r28{0} - 520 to local table
in proc proc18 adding addrExp r28{0} - 572 to local table
in proc proc18 adding addrExp r28{0} - 576 to local table
in proc proc18 adding addrExp r28{0} - 572 to local table
in proc proc18 adding addrExp r28{0} - 576 to local table
in proc proc18 adding addrExp r28{0} - 580 to local table
in proc proc18 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc18 adding addrExp r28{0} - 8 to local table
in proc proc18 adding addrExp r28{0} - 12 to local table
in proc proc18 adding addrExp r28{0} - 16 to local table
in proc proc18 adding addrExp r28{0} - 520 to local table
in proc proc18 adding addrExp r28{0} - 572 to local table
in proc proc18 adding addrExp r28{0} - 576 to local table
in proc proc18 adding addrExp r28{0} - 580 to local table
in proc proc18 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc18 adding addrExp r28{0} - 8 to local table
in proc proc18 adding addrExp r28{0} - 12 to local table
in proc proc18 adding addrExp r28{0} - 16 to local table
in proc proc18 adding addrExp r28{0} - 520 to local table
in proc proc18 adding addrExp r28{0} - 572 to local table
in proc proc18 adding addrExp r28{0} - 576 to local table
in proc proc18 adding addrExp r28{0} - 580 to local table
in proc proc18 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc18 adding addrExp r28{0} - 8 to local table
in proc proc18 adding addrExp r28{0} - 12 to local table
in proc proc18 adding addrExp r28{0} - 16 to local table
in proc proc18 adding addrExp r28{0} - 520 to local table
in proc proc18 adding addrExp r28{0} - 572 to local table
in proc proc18 adding addrExp r28{0} - 576 to local table
in proc proc18 adding addrExp r28{0} - 580 to local table
in proc proc18 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc18 adding addrExp r28{0} - 8 to local table
in proc proc18 adding addrExp r28{0} - 12 to local table
in proc proc18 adding addrExp r28{0} - 16 to local table
in proc proc18 adding addrExp r28{0} - 520 to local table
in proc proc18 adding addrExp r28{0} - 572 to local table
in proc proc18 adding addrExp r28{0} - 576 to local table
in proc proc18 adding addrExp r28{0} - 580 to local table
in proc proc18 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc18 adding addrExp r28{0} - 8 to local table
in proc proc18 adding addrExp r28{0} - 12 to local table
in proc proc18 adding addrExp r28{0} - 16 to local table
in proc proc18 adding addrExp r28{0} - 520 to local table
in proc proc18 adding addrExp r28{0} - 572 to local table
in proc proc18 adding addrExp r28{0} - 576 to local table
in proc proc18 adding addrExp r28{0} - 580 to local table
in proc proc18 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc18 adding addrExp r28{0} - 8 to local table
in proc proc18 adding addrExp r28{0} - 12 to local table
in proc proc18 adding addrExp r28{0} - 16 to local table
in proc proc18 adding addrExp r28{0} - 520 to local table
in proc proc18 adding addrExp r28{0} - 572 to local table
in proc proc18 adding addrExp r28{0} - 576 to local table
in proc proc18 adding addrExp r28{0} - 580 to local table
in proc proc18 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc18 adding addrExp r28{0} - 8 to local table
in proc proc18 adding addrExp r28{0} - 12 to local table
in proc proc18 adding addrExp r28{0} - 16 to local table
in proc proc18 adding addrExp r28{0} - 520 to local table
in proc proc18 adding addrExp r28{0} - 572 to local table
in proc proc18 adding addrExp r28{0} - 576 to local table
in proc proc18 adding addrExp r28{0} - 580 to local table
finding final parameters for proc18
potential param r28
found new parameter r28
potential param m[r28{0} - 864]
found new parameter m[r28{0} - 864]
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc10 ###
in proc proc10 adding addrExp r28{0} - 4 to local table
in proc proc10 adding addrExp r28{0} - 8 to local table
in proc proc10 adding addrExp r28{0} - 112 to local table
in proc proc10 adding addrExp r28 to local table
in proc proc10 adding addrExp r28 to local table
in proc proc10 adding addrExp r28 to local table
in proc proc10 adding addrExp r28 to local table
in proc proc10 adding addrExp r28 to local table
in proc proc10 adding addrExp r28 to local table
in proc proc10 adding addrExp r28 to local table
in proc proc10 adding addrExp r28 to local table
finding final parameters for proc10
potential param r28
found new parameter r28
assgn   26 *32* r25 := m[0x4042c0]
assgn   35 *32* r24 := m[0x406120]
assgn   40 *32* r26 := m[0x407178]
assgn   47 *32* r24 := m[0x406120]
assgn   49 *32* r27 := m[0x407178]
assgn   56 *32* r26 := m[0x407178]
assgn   60 *32* r27 := m[0x406120]
assgn   62 *32* r25 := m[0x407178]
assgn   73 *32* r27 := m[0x4042d0]
assgn   85 *32* r26 := m[0x406000]
assgn   87 *32* r24 := m[0x406004]
assgn  105 *32* r26 := m[0x407178]
assgn  112 *32* r26 := m[0x407178]
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
in proc proc1 adding addrExp r28{0} - 4 to local table
in proc proc1 adding addrExp r28{0} - 8 to local table
in proc proc1 adding addrExp r28{0} - 44 to local table
in proc proc1 adding addrExp r28{0} - 48 to local table
in proc proc1 adding addrExp r28{0} - 52 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 32 to local table
in proc proc1 adding addrExp r28{0} - 44 to local table
in proc proc1 adding addrExp r28{0} - 40 to local table
in proc proc1 adding addrExp r28{0} - 36 to local table
in proc proc1 adding addrExp r28{0} - 48 to local table
in proc proc1 adding addrExp r28{0} - 52 to local table
in proc proc1 adding addrExp r28{0} - 44 to local table
in proc proc1 adding addrExp r28{0} - 48 to local table
in proc proc1 adding addrExp r28{0} - 52 to local table
in proc proc1 adding addrExp r28{0} - 44 to local table
in proc proc1 adding addrExp r28{0} - 48 to local table
in proc proc1 adding addrExp r28{0} - 52 to local table
in proc proc1 adding addrExp r28{0} - 44 to local table
in proc proc1 adding addrExp r28{0} - 48 to local table
in proc proc1 adding addrExp r28{0} - 52 to local table
in proc proc1 adding addrExp r28{0} - 44 to local table
in proc proc1 adding addrExp r28{0} - 48 to local table
in proc proc1 adding addrExp r28{0} - 52 to local table
in proc proc1 adding addrExp r28{0} - 44 to local table
in proc proc1 adding addrExp r28{0} - 48 to local table
in proc proc1 adding addrExp r28{0} - 52 to local table
in proc proc1 adding addrExp r28{0} - 52 to local table
in proc proc1 adding addrExp r28{0} - 52 to local table
in proc proc1 adding addrExp r28{0} - 52 to local table
in proc proc1 adding addrExp r28{0} - 40 to local table
in proc proc1 adding addrExp r28{0} - 44 to local table
in proc proc1 adding addrExp r28{0} - 48 to local table
in proc proc1 adding addrExp r28{0} - 52 to local table
in proc proc1 adding addrExp r28{0} - 56 to local table
in proc proc1 adding addrExp r28{0} - 52 to local table
in proc proc1 adding addrExp r28{0} - 56 to local table
in proc proc1 adding addrExp r28{0} - 44 to local table
in proc proc1 adding addrExp r28{0} - 48 to local table
in proc proc1 adding addrExp r28{0} - 52 to local table
finding final parameters for proc1
assgn   10 *32* %pc := m[0x407168]
assgn   19 *32* r25 := m[0x407188]
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
in proc _start adding addrExp r28{0} - 4 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
finding final parameters for _start
Unknown library function fflush
assgn   15 *32* r24 := m[0x407178]
assgn   24 *32* r24 := m[0x407178]
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
in proc proc38 adding addrExp r28{0} - 4 to local table
in proc proc38 adding addrExp r28{0} - 12 to local table
in proc proc38 adding addrExp r28{0} - 16 to local table
in proc proc38 adding addrExp r28{0} - 20 to local table
in proc proc38 adding addrExp r28{0} - 24 to local table
in proc proc38 adding addrExp r28{0} - 28 to local table
in proc proc38 adding addrExp r28{0} - 32 to local table
in proc proc38 adding addrExp r28{0} - 28 to local table
in proc proc38 adding addrExp r28{0} - 32 to local table
in proc proc38 adding addrExp r28{0} - 32 to local table
finding final parameters for proc38
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
assgn   20 *32* %pc := m[0x407128]
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc36 ###
in proc proc36 adding addrExp r28{0} - 92 to local table
in proc proc36 adding addrExp r28{0} - 4 to local table
in proc proc36 adding addrExp r28{0} - 8 to local table
in proc proc36 adding addrExp r28{0} - 100 to local table
in proc proc36 adding addrExp r28{0} - 104 to local table
in proc proc36 adding addrExp r28{0} - 108 to local table
in proc proc36 adding addrExp r28{0} - 112 to local table
in proc proc36 adding addrExp r28{0} - 96 to local table
in proc proc36 adding addrExp r28{0} - 100 to local table
in proc proc36 adding addrExp r28{0} - 96 to local table
in proc proc36 adding addrExp r28{0} - 100 to local table
in proc proc36 adding addrExp r28{0} - 108 to local table
in proc proc36 adding addrExp r28{0} - 104 to local table
in proc proc36 adding addrExp r28{0} - 112 to local table
in proc proc36 adding addrExp r28{0} - 96 to local table
in proc proc36 adding addrExp r28{0} - 100 to local table
finding final parameters for proc36
potential param r28
found new parameter r28
potential param r0
found new parameter r0
potential param m[r28{0} - 92]
found new parameter m[r28{0} - 92]
assgn   19 *32* r25 := m[0x406180]
assgn   36 *32* r24 := m[0x405010]
is readonly
assgn   43 *32* r24 := m[0x405014]
is readonly
assgn   49 *32* r24 := m[0x405018]
is readonly
assgn   55 *32* r24 := m[0x40501c]
is readonly
assgn   60 *32* r24 := m[0x405020]
is readonly
assgn   64 *32* r24 := m[0x405024]
is readonly
assgn   68 *32* r24 := m[0x405028]
is readonly
assgn   72 *32* r24 := m[0x40502c]
is readonly
assgn   83 *32* %pc := m[0x407124]
assgn  118 *32* r24 := m[0x406150]
assgn  122 *32* r26 := m[0x406154]
assgn  125 *32* r24 := m[0x4042f0]
assgn  129 *32* r26 := m[0x4042f4]
assgn  131 *32* r24 := m[0x406160]
assgn  137 *32* r26 := m[0x4042fc]
assgn  138 *32* r24 := m[0x4042f8]
assgn  176 *32* r24 := m[0x405010]
is readonly
assgn  180 *32* r24 := m[0x405014]
is readonly
assgn  184 *32* r24 := m[0x405018]
is readonly
assgn  188 *32* r24 := m[0x40501c]
is readonly
assgn  192 *32* r24 := m[0x405020]
is readonly
assgn  196 *32* r24 := m[0x405024]
is readonly
assgn  200 *32* r24 := m[0x405028]
is readonly
assgn  204 *32* r24 := m[0x40502c]
is readonly
assgn  218 *32* %pc := m[0x40711c]
assgn  240 *32* %pc := m[0x407124]
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc35 ###
in proc proc35 adding addrExp r28{0} - 4 to local table
in proc proc35 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc35 adding addrExp r28{0} - 8 to local table
in proc proc35 adding addrExp r28{0} - 12 to local table
in proc proc35 adding addrExp r28{0} - 16 to local table
in proc proc35 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc35 adding addrExp r28{0} - 8 to local table
in proc proc35 adding addrExp r28{0} - 12 to local table
in proc proc35 adding addrExp r28{0} - 16 to local table
in proc proc35 adding addrExp r28{0} - 44 to local table
in proc proc35 adding addrExp r28{0} - 48 to local table
in proc proc35 adding addrExp r28{0} - 52 to local table
in proc proc35 adding addrExp r28{0} - 56 to local table
in proc proc35 adding addrExp r28{0} - 60 to local table
in proc proc35 adding addrExp r28{0} - 64 to local table
in proc proc35 adding addrExp r28{0} - 68 to local table
in proc proc35 adding addrExp r28{0} - 72 to local table
in proc proc35 adding addrExp r28{0} - 76 to local table
in proc proc35 adding addrExp r28{0} - 80 to local table
in proc proc35 adding addrExp r28{0} - 84 to local table
in proc proc35 adding addrExp r28{0} - 88 to local table
in proc proc35 adding addrExp r28{0} - 92 to local table
in proc proc35 adding addrExp r28{0} - 96 to local table
in proc proc35 adding addrExp r28{0} - 100 to local table
in proc proc35 adding addrExp r28{0} - 104 to local table
in proc proc35 adding addrExp r28{0} - 108 to local table
in proc proc35 adding addrExp r28{0} - 124 to local table
in proc proc35 adding addrExp r28{0} - 128 to local table
in proc proc35 adding addrExp r28{0} - 132 to local table
in proc proc35 adding addrExp r28{0} - 136 to local table
in proc proc35 adding addrExp r28{0} - 140 to local table
in proc proc35 adding addrExp r28{0} - 144 to local table
in proc proc35 adding addrExp r28{0} - 148 to local table
in proc proc35 adding addrExp r28{0} - 152 to local table
in proc proc35 adding addrExp r28{0} - 156 to local table
in proc proc35 adding addrExp r28{0} - 192 to local table
in proc proc35 adding addrExp r28{0} - 220 to local table
in proc proc35 adding addrExp r28{0} - 224 to local table
in proc proc35 adding addrExp r28{0} - 108 to local table
in proc proc35 adding addrExp r28{0} - 104 to local table
in proc proc35 adding addrExp r28{0} - 100 to local table
in proc proc35 adding addrExp r28{0} - 76 to local table
in proc proc35 adding addrExp r28{0} - 96 to local table
in proc proc35 adding addrExp r28{0} - 92 to local table
in proc proc35 adding addrExp r28{0} - 72 to local table
in proc proc35 adding addrExp r28{0} - 88 to local table
in proc proc35 adding addrExp r28{0} - 84 to local table
in proc proc35 adding addrExp r28{0} - 68 to local table
in proc proc35 adding addrExp r28{0} - 80 to local table
in proc proc35 adding addrExp r28{0} - 64 to local table
in proc proc35 adding addrExp r28{0} - 60 to local table
in proc proc35 adding addrExp r28{0} - 56 to local table
in proc proc35 adding addrExp r28{0} - 52 to local table
in proc proc35 adding addrExp r28{0} - 48 to local table
in proc proc35 adding addrExp r28{0} - 44 to local table
in proc proc35 adding addrExp r28{0} - 220 to local table
in proc proc35 adding addrExp r28{0} - 224 to local table
in proc proc35 adding addrExp r28{0} - 192 to local table
in proc proc35 adding addrExp r28{0} - 220 to local table
in proc proc35 adding addrExp r28{0} - 224 to local table
in proc proc35 adding addrExp r28{0} - 156 to local table
in proc proc35 adding addrExp r28{0} - 152 to local table
in proc proc35 adding addrExp r28{0} - 148 to local table
in proc proc35 adding addrExp r28{0} - 144 to local table
in proc proc35 adding addrExp r28{0} - 140 to local table
in proc proc35 adding addrExp r28{0} - 136 to local table
in proc proc35 adding addrExp r28{0} - 132 to local table
in proc proc35 adding addrExp r28{0} - 128 to local table
in proc proc35 adding addrExp r28{0} - 124 to local table
in proc proc35 adding addrExp r28{0} - 220 to local table
in proc proc35 adding addrExp r28{0} - 224 to local table
in proc proc35 adding addrExp r28{0} - 224 to local table
in proc proc35 adding addrExp r28{0} - 224 to local table
in proc proc35 adding addrExp r28{0} - 220 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffff24 existing type /*signed?*/int but added type __size32 *
in proc proc35 adding addrExp r28{0} - 224 to local table
in proc proc35 adding addrExp r28{0} - 220 to local table
in proc proc35 adding addrExp r28{0} - 224 to local table
in proc proc35 adding addrExp r28{0} - 124 to local table
in proc proc35 adding addrExp r28{0} - 128 to local table
in proc proc35 adding addrExp r28{0} - 132 to local table
in proc proc35 adding addrExp r28{0} - 136 to local table
in proc proc35 adding addrExp r28{0} - 140 to local table
in proc proc35 adding addrExp r28{0} - 144 to local table
in proc proc35 adding addrExp r28{0} - 148 to local table
in proc proc35 adding addrExp r28{0} - 152 to local table
in proc proc35 adding addrExp r28{0} - 156 to local table
in proc proc35 adding addrExp r28{0} - 220 to local table
in proc proc35 adding addrExp r28{0} - 224 to local table
in proc proc35 adding addrExp r28{0} - 224 to local table
in proc proc35 adding addrExp r28{0} - 124 to local table
in proc proc35 adding addrExp r28{0} - 128 to local table
in proc proc35 adding addrExp r28{0} - 132 to local table
in proc proc35 adding addrExp r28{0} - 136 to local table
in proc proc35 adding addrExp r28{0} - 140 to local table
in proc proc35 adding addrExp r28{0} - 144 to local table
in proc proc35 adding addrExp r28{0} - 148 to local table
in proc proc35 adding addrExp r28{0} - 152 to local table
in proc proc35 adding addrExp r28{0} - 156 to local table
in proc proc35 adding addrExp r28{0} - 220 to local table
in proc proc35 adding addrExp r28{0} - 224 to local table
in proc proc35 adding addrExp r28{0} - 224 to local table
in proc proc35 adding addrExp r28{0} - 224 to local table
in proc proc35 adding addrExp r28{0} - 44 to local table
in proc proc35 adding addrExp r28{0} - 48 to local table
in proc proc35 adding addrExp r28{0} - 52 to local table
in proc proc35 adding addrExp r28{0} - 56 to local table
in proc proc35 adding addrExp r28{0} - 60 to local table
in proc proc35 adding addrExp r28{0} - 64 to local table
in proc proc35 adding addrExp r28{0} - 68 to local table
in proc proc35 adding addrExp r28{0} - 72 to local table
in proc proc35 adding addrExp r28{0} - 76 to local table
in proc proc35 adding addrExp r28{0} - 80 to local table
in proc proc35 adding addrExp r28{0} - 84 to local table
in proc proc35 adding addrExp r28{0} - 88 to local table
in proc proc35 adding addrExp r28{0} - 92 to local table
in proc proc35 adding addrExp r28{0} - 96 to local table
in proc proc35 adding addrExp r28{0} - 100 to local table
in proc proc35 adding addrExp r28{0} - 104 to local table
in proc proc35 adding addrExp r28{0} - 108 to local table
in proc proc35 adding addrExp r28{0} - 124 to local table
in proc proc35 adding addrExp r28{0} - 128 to local table
in proc proc35 adding addrExp r28{0} - 132 to local table
in proc proc35 adding addrExp r28{0} - 136 to local table
in proc proc35 adding addrExp r28{0} - 140 to local table
in proc proc35 adding addrExp r28{0} - 144 to local table
in proc proc35 adding addrExp r28{0} - 148 to local table
in proc proc35 adding addrExp r28{0} - 152 to local table
in proc proc35 adding addrExp r28{0} - 156 to local table
in proc proc35 adding addrExp r28{0} - 192 to local table
in proc proc35 adding addrExp r28{0} - 220 to local table
in proc proc35 adding addrExp r28{0} - 224 to local table
in proc proc35 adding addrExp r28{0} - 188 to local table
in proc proc35 adding addrExp r28{0} - 316 to local table
in proc proc35 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
finding final parameters for proc35
in proc _start adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc8 ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc10 ###
in proc proc10 adding addrExp r28 to local table
in proc proc10 adding addrExp r28 to local table
in proc proc10 adding addrExp r28 to local table
in proc proc10 adding addrExp r28 to local table
in proc proc10 adding addrExp r28 to local table
in proc proc10 adding addrExp r28 to local table
in proc proc10 adding addrExp r28 to local table
in proc proc10 adding addrExp r28 to local table
in proc proc13 adding addrExp r28{0} to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc14 ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc18 ###
in proc proc18 adding addrExp r28{0} - 864 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc20 ###
in proc proc20 adding addrExp r28{0} - 284 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc35 ###
in proc proc35 adding addrExp r28{0} - 188 to local table
in proc proc35 adding addrExp r28{0} - 316 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc36 ###
in proc proc36 adding addrExp r28{0} - 92 to local table
finding final parameters for proc8
finding final parameters for proc1
finding final parameters for proc14
potential param r28
found new parameter r28
potential param r30
found new parameter r30
potential param r26
found new parameter r26
finding final parameters for proc10
potential param r28
found new parameter r28
finding final parameters for proc18
potential param r28
found new parameter r28
potential param m[r28{0} - 864]
found new parameter m[r28{0} - 864]
finding final parameters for proc10
potential param r28
found new parameter r28
finding final parameters for proc20
potential param r28
found new parameter r28
potential param m[r28{0} - 284]
found new parameter m[r28{0} - 284]
potential param r8
found new parameter r8
finding final parameters for proc18
potential param r28
found new parameter r28
potential param m[r28{0} - 864]
found new parameter m[r28{0} - 864]
finding final parameters for proc30
finding final parameters for proc18
potential param r28
found new parameter r28
potential param m[r28{0} - 864]
found new parameter m[r28{0} - 864]
finding final parameters for proc36
potential param r28
found new parameter r28
potential param r0
found new parameter r0
potential param m[r28{0} - 92]
found new parameter m[r28{0} - 92]
finding final parameters for proc35
local edx has type __size32 that doesn't agree with type of define void of a library, why?
local esp has type __size32 that doesn't agree with type of define void of a library, why?
local eax has type __size32 that doesn't agree with type of define __size32 * of a library, why?
local edx has type void that doesn't agree with type of define __size32 of a library, why?
local edx has type __size32 that doesn't agree with type of define void of a library, why?
local eax has type __size32 * that doesn't agree with type of define __size32 of a library, why?
local edx has type __size32 that doesn't agree with type of define void of a library, why?
local esp has type unsigned int that doesn't agree with type of define void of a library, why?
local eax has type unsigned int that doesn't agree with type of define __size32 of a library, why?
local ecx has type unsigned int that doesn't agree with type of define void of a library, why?
local edx has type unsigned int that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local eax has type __size32 that doesn't agree with type of define unsigned int of a library, why?
local edx has type void that doesn't agree with type of define /*signed?*/int of a library, why?
local ecx has type void that doesn't agree with type of define __size32 of a library, why?
local edx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local eax has type unsigned int that doesn't agree with type of define __size32 of a library, why?
local ecx has type __size32 that doesn't agree with type of define /*signed?*/int of a library, why?
local edx has type void that doesn't agree with type of define __size32 of a library, why?
local ecx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local edx has type __size32 that doesn't agree with type of define void of a library, why?
local eax has type __size32 that doesn't agree with type of define unsigned int of a library, why?
local edx has type void that doesn't agree with type of define /*signed?*/int of a library, why?
local eax has type unsigned int that doesn't agree with type of define __size32 of a library, why?
local edx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local eax has type __size32 that doesn't agree with type of define unsigned int of a library, why?
local edx has type void that doesn't agree with type of define /*signed?*/int of a library, why?
local eax has type unsigned int that doesn't agree with type of define __size32 of a library, why?
local edx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local eax has type __size32 that doesn't agree with type of define unsigned int of a library, why?
local edx has type void that doesn't agree with type of define /*signed?*/int of a library, why?
local eax_1 has type void * that doesn't agree with type of define /*signed?*/int * of a library, why?
local ecx has type void that doesn't agree with type of define /*signed?*/int of a library, why?
local edx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local eax has type unsigned int that doesn't agree with type of define __size32 of a library, why?
local ecx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local eax has type __size32 that doesn't agree with type of define unsigned int of a library, why?
local edx has type void that doesn't agree with type of define /*signed?*/int of a library, why?
local eax has type unsigned int that doesn't agree with type of define __size32 of a library, why?
local ecx has type void that doesn't agree with type of define __size32 of a library, why?
local edx has type /*signed?*/int that doesn't agree with type of define __size32 of a library, why?
local ecx has type __size32 that doesn't agree with type of define void of a library, why?
local edx has type __size32 that doesn't agree with type of define void of a library, why?
local eax has type __size32 that doesn't agree with type of define unsigned int of a library, why?
local edx has type void that doesn't agree with type of define /*signed?*/int of a library, why?
local eax has type unsigned int that doesn't agree with type of define __size32 of a library, why?
local ecx has type void that doesn't agree with type of define __size32 of a library, why?
local edx has type /*signed?*/int that doesn't agree with type of define __size32 of a library, why?
local ecx has type __size32 that doesn't agree with type of define void of a library, why?
local edx has type __size32 that doesn't agree with type of define void of a library, why?
local eax has type __size32 that doesn't agree with type of define unsigned int of a library, why?
local edx has type void that doesn't agree with type of define /*signed?*/int of a library, why?
local eax has type unsigned int that doesn't agree with type of define __size32 of a library, why?
local edx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local ecx has type void that doesn't agree with type of define /*signed?*/int of a library, why?
local edx has type void that doesn't agree with type of define __size32 of a library, why?
local eax has type __size32 that doesn't agree with type of define HWND of a library, why?
local ecx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local edx has type __size32 that doesn't agree with type of define void of a library, why?
local eax has type HWND that doesn't agree with type of define __size32 of a library, why?
local ecx has type void that doesn't agree with type of define /*signed?*/int of a library, why?
local ecx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local eax has type __size32 that doesn't agree with type of define unsigned int of a library, why?
local edx has type void that doesn't agree with type of define /*signed?*/int of a library, why?
local eax has type unsigned int that doesn't agree with type of define __size32 of a library, why?
local edx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local eax has type __size32 that doesn't agree with type of define unsigned int of a library, why?
local edx has type void that doesn't agree with type of define /*signed?*/int of a library, why?
local eax has type unsigned int that doesn't agree with type of define __size32 of a library, why?
local edx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local eax has type __size32 that doesn't agree with type of define unsigned int of a library, why?
local edx has type void that doesn't agree with type of define /*signed?*/int of a library, why?
local eax has type unsigned int that doesn't agree with type of define __size32 of a library, why?
local edx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local eax has type __size32 that doesn't agree with type of define unsigned int of a library, why?
local edx has type void that doesn't agree with type of define /*signed?*/int of a library, why?
local eax has type unsigned int that doesn't agree with type of define __size32 of a library, why?
local edx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local eax has type __size32 that doesn't agree with type of define unsigned int of a library, why?
local edx has type void that doesn't agree with type of define /*signed?*/int of a library, why?
local eax has type unsigned int that doesn't agree with type of define __size32 of a library, why?
local edx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local eax has type __size32 that doesn't agree with type of define unsigned int of a library, why?
local edx has type void that doesn't agree with type of define /*signed?*/int of a library, why?
local eax_1 has type /*signed?*/int * that doesn't agree with type of define void * of a library, why?
local eax has type unsigned int that doesn't agree with type of define __size32 of a library, why?
local ecx has type void that doesn't agree with type of define /*signed?*/int of a library, why?
local edx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local eax has type __size32 that doesn't agree with type of define /*signed?*/int of a library, why?
local edx has type void that doesn't agree with type of define void * of a library, why?
local eax has type /*signed?*/int that doesn't agree with type of define __size32 of a library, why?
local edx has type void * that doesn't agree with type of define void of a library, why?
local eax has type __size32 that doesn't agree with type of define unsigned int of a library, why?
local edx has type void that doesn't agree with type of define __size32 of a library, why?
local eax has type unsigned int that doesn't agree with type of define __size32 of a library, why?
local ecx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local edx has type __size32 that doesn't agree with type of define void of a library, why?
local eax has type __size32 that doesn't agree with type of define unsigned int of a library, why?
local edx has type void that doesn't agree with type of define /*signed?*/int of a library, why?
local eax has type unsigned int that doesn't agree with type of define __size32 of a library, why?
local edx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local eax has type unsigned int that doesn't agree with type of define __size32 of a library, why?
local ecx has type unsigned int that doesn't agree with type of define void of a library, why?
local edx has type unsigned int that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local eax has type __size32 that doesn't agree with type of define unsigned int of a library, why?
local edx has type void that doesn't agree with type of define /*signed?*/int of a library, why?
local eax has type unsigned int that doesn't agree with type of define /*signed?*/int of a library, why?
local ecx has type void that doesn't agree with type of define __size32 of a library, why?
local edx has type /*signed?*/int that doesn't agree with type of define __size32 of a library, why?
local esp has type void that doesn't agree with type of define /*signed?*/int of a library, why?
local esp has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local esp_4 has type union { union { __size32 * x45; /*signed?*/int x46; } * x43; /*signed?*/int x44; } that doesn't agree with type of define /*signed?*/int of a library, why?
local eax has type /*signed?*/int that doesn't agree with type of define __size32 of a library, why?
local esp has type HWND * that doesn't agree with type of define void of a library, why?
local eax has type HWND that doesn't agree with type of define __size32 of a library, why?
local eax has type unsigned int that doesn't agree with type of define __size32 of a library, why?
local edx has type __size32 that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local ecx has type __size32 that doesn't agree with type of define void of a library, why?
local eax has type __size32 that doesn't agree with type of define __size32 * of a library, why?
local ecx has type void that doesn't agree with type of define __size32 of a library, why?
local edx has type void that doesn't agree with type of define unsigned int of a library, why?
local eax has type __size32 * that doesn't agree with type of define __size32 of a library, why?
local ecx has type __size32 that doesn't agree with type of define void of a library, why?
local edx has type unsigned int that doesn't agree with type of define void of a library, why?
local ecx has type void that doesn't agree with type of define __size32 of a library, why?
local ecx has type __size32 that doesn't agree with type of define void of a library, why?
local ecx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local edx has type int that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local esp has type __size32 that doesn't agree with type of define void of a library, why?
dest is not lib
call:   14 {*32* eax, *v* r25, *v* edx} := CALL SetUnhandledExceptionFilter(
              )
              Reaching definitions: r27=r28{0} - 12,   r28=r28{0} - 48,   r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=r27{0},   m[r28{0} - 44]=0x401000,   m[r28{0} - 48]=%pc,   tmp1=r28{0} - 8,
                %flags=SUBFLAGS32( r28{0} - 8, 36, r28{0} - 44 ),   %ZF=(r28{0} - 44) = 0,   %CF=(r28{0} - 8) <u 36
              Live variables:  in proc proc1
dest is not lib
call:   21 CALL proc4(
              )
              Reaching definitions: r24=r24{14},   r25=r25{14},   r26=r26{14},   r27=r28{0} - 12,   r28=r28{0} - 52,
                r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r27{0},   m[r28{0} - 44]=0x401000,
                m[r28{0} - 48]=%pc,   m[r28{0} - 52]=%pc,   tmp1=(r28{0} - 48) + 4,
                %flags=SUBFLAGS32( r28{0} - 44, 4, r28{0} - 48 ),   %ZF=(r28{0} - 48) = 0,   %CF=(r28{0} - 44) <u 4
              Live variables:  in proc proc1
dest is not lib
call:   34 {*32* eax, *v* r25, *v* edx} := CALL __getmainargs(
              )
              Reaching definitions: r24=0x406000,   r25=r25{26},   r26=r28{0} - 16,   r27=r28{0} - 12,
                r28=r28{0} - 52,   r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r27{0},   m[r28{0} - 12]=0,
                m[r28{0} - 32]=r28{0} - 12,   m[r28{0} - 36]=r25{26},   m[r28{0} - 40]=r28{0} - 16,
                m[r28{0} - 44]=0x406000,   m[r28{0} - 48]=0x406004,   m[r28{0} - 52]=%pc,   tmp1=(r28{0} - 48) + 4,
                %flags=SUBFLAGS32( r28{0} - 44, 4, r28{0} - 48 ),   %ZF=(r28{0} - 48) = 0,   %CF=(r28{0} - 44) <u 4
              Live variables:  in proc proc1
dest is not lib
call:  111 {*32* eax, *v* r25, *v* edx} := CALL _setmode(
              )
              Reaching definitions: r24=r24{106},   r25=r25{34},   r26=r26{105},   r27=r28{0} - 12,   r28=r28{0} - 52,
                r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r27{0},   m[r28{0} - 12]=0,
                m[r28{0} - 32]=r28{0} - 12,   m[r28{0} - 36]=r25{26},   m[r28{0} - 40]=r28{0} - 16,
                m[r28{0} - 44]=r24{35},   m[r28{0} - 48]=r24{106},   m[r28{0} - 52]=%pc,   tmp1=r26{40},
                %flags=LOGICALFLAGS32( r26{40} ),   %ZF=LOGICALFLAGS32( r26{40} ),   %CF=LOGICALFLAGS32( r26{40} )
              Live variables:  in proc proc1
dest is not lib
call:   55 {*32* eax, *v* r25, *v* edx} := CALL _setmode(
              )
              Reaching definitions: r24=r24{47},   r25=r25{50},   r26=r26{116},   r27=r27{49},   r28=r28{0} - 52,
                r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r27{0},   m[r28{0} - 12]=0,
                m[r28{0} - 32]=r28{0} - 12,   m[r28{0} - 36]=r25{26},   m[r28{0} - 40]=r28{0} - 16,
                m[r28{0} - 44]=r24{47},   m[r28{0} - 48]=r25{50},   m[r28{0} - 52]=%pc,   tmp1=r26{116} + 32,
                %flags=SUBFLAGS32( r26{116}, -32, r26{116} + 32 ),   %ZF=(r26{116} + 32) = 0,   %CF=r26{116} <u -32
              Live variables:  in proc proc1
dest is not lib
call:   68 {*32* eax, *v* r25, *v* edx} := CALL _setmode(
              )
              Reaching definitions: r24=r24{118},   r25=r25{62},   r26=r26{63},   r27=r27{60},   r28=r28{0} - 52,
                r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r27{0},   m[r28{0} - 12]=0,
                m[r28{0} - 32]=r28{0} - 12,   m[r28{0} - 36]=r25{26},   m[r28{0} - 40]=r28{0} - 16,
                m[r28{0} - 44]=r27{60},   m[r28{0} - 48]=r26{63},   m[r28{0} - 52]=%pc,   tmp1=r26{120} + 64,
                %flags=SUBFLAGS32( r26{120}, -64, r26{120} + 64 ),   %ZF=(r26{120} + 64) = 0,   %CF=r26{120} <u -64
              Live variables:  in proc proc1
dest is not lib
call:   72 {*32** eax, *v* r25, *32* edx} := CALL __p__fmode(
              )
              Reaching definitions: r24=r24{123},   r25=r25{124},   r26=r26{125},   r27=r27{126},
                r28=(r28{0} - 48) - 4,   r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r27{0},
                m[r28{0} - 12]=0,   m[r28{0} - 32]=r28{0} - 12,   m[r28{0} - 36]=r25{26},   m[r28{0} - 40]=r28{0} - 16,
                m[r28{0} - 44]=m[r28{0} - 44]{138},   m[r28{0} - 48]=m[r28{0} - 48]{139},   m[r28{0} - 52]=%pc,
                tmp1=tmp1{128},   %flags=%flags{129},   %ZF=%ZF{130},   %CF=%CF{131}
              Live variables: eax in proc proc1
result:    0 *32** eax := -
dest is not lib
call:   78 {*32* eax, *32* r25, *32* edx} := CALL proc8(
              )
              Reaching definitions: r24=r24{72},   r25=r25{72},   r26=r26{72},   r27=r27{73},   r28=(r28{0} - 48) - 4,
                r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r27{0},   m[r28{0} - 12]=0,
                m[r28{0} - 32]=r28{0} - 12,   m[r28{0} - 36]=r25{26},   m[r28{0} - 40]=r28{0} - 16,
                m[r28{0} - 44]=m[r28{0} - 44]{138},   m[r28{0} - 48]=m[r28{0} - 48]{139},   m[r28{0} - 52]=%pc,
                tmp1=tmp1{128},   %flags=%flags{129},   %ZF=%ZF{130},   %CF=%CF{131}
              Live variables:  in proc proc1
dest is not lib
call:   82 {*32** eax, *v* r25, *v* edx} := CALL __p__environ(
              )
              Reaching definitions: r24=r24{78},   r25=r25{78},   r26=r26{78},   r27=r27{73},   r28=(r28{0} - 48) - 4,
                r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r27{0},   m[r28{0} - 12]=0,
                m[r28{0} - 32]=r28{0} - 12,   m[r28{0} - 36]=r25{26},   m[r28{0} - 40]=r28{0} - 16,
                m[r28{0} - 44]=m[r28{0} - 44]{138},   m[r28{0} - 48]=m[r28{0} - 48]{139},   m[r28{0} - 52]=%pc,
                tmp1=tmp1{128},   %flags=%flags{129},   %ZF=%ZF{130},   %CF=%CF{131}
              Live variables:  in proc proc1
dest is not lib
call:   92 CALL proc10(
              )
              Reaching definitions: r24=r24{87},   r25=r25{83},   r26=r26{85},   r27=r27{73},   r28=(r28{0} - 48) - 4,
                r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r27{0},   m[r28{0} - 12]=0,
                m[r28{0} - 32]=r28{0} - 12,   m[r28{0} - 36]=r25{26},   m[r28{0} - 40]=r25{83},
                m[r28{0} - 44]=r26{85},   m[r28{0} - 48]=r24{87},   m[r28{0} - 52]=%pc,   tmp1=tmp1{128},
                %flags=%flags{129},   %ZF=%ZF{130},   %CF=%CF{131}
              Live variables:  in proc proc1
dest is not lib
call:   97 {*32* eax, *v* r25, *v* edx} := CALL _cexit(
              )
              Reaching definitions: r24=r24{87},   r25=r25{83},   r26=r26{85},   r27=r24{87},   r28=(r28{0} - 48) - 8,
                r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r27{0},   m[r28{0} - 12]=0,
                m[r28{0} - 32]=r28{0} - 12,   m[r28{0} - 36]=r25{26},   m[r28{0} - 40]=r25{83},
                m[r28{0} - 44]=r26{85},   m[r28{0} - 48]=r24{87},   m[r28{0} - 52]=%pc,   m[r28{0} - 56]=%pc,
                tmp1=tmp1{128},   %flags=%flags{129},   %ZF=%ZF{130},   %CF=%CF{131}
              Live variables:  in proc proc1
dest is not lib
call:  102 {*32* eax, *v* r25, *v* edx} := CALL ExitProcess(
                *UINT* local0 := eax
              )
              Reaching definitions: r24=r24{97},   r25=r25{97},   r26=r26{97},   r27=r24{87},   r28=(r28{0} - 48) - 8,
                r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r27{0},   m[r28{0} - 12]=0,
                m[r28{0} - 32]=r28{0} - 12,   m[r28{0} - 36]=r25{26},   m[r28{0} - 40]=r25{83},
                m[r28{0} - 44]=r26{85},   m[r28{0} - 48]=r24{87},   m[r28{0} - 52]=r24{87},   m[r28{0} - 56]=%pc,
                tmp1=tmp1{128},   %flags=%flags{129},   %ZF=%ZF{130},   %CF=%CF{131}
              Live variables:  in proc proc1
dest is not lib
call:   11 {*32* r24, *v* r25, *v* r26, *v* r28} := CALL __set_app_type(
              )
              Reaching definitions: r28=r28{0} - 16,   r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},   m[r28{0} - 12]=2,
                m[r28{0} - 16]=%pc,   tmp1=r28{0} - 4,   %flags=SUBFLAGS32( r28{0} - 4, 8, r28{0} - 12 ),
                %ZF=(r28{0} - 12) = 0,   %CF=(r28{0} - 4) <u 8
              Live variables:  in proc _start
dest is not lib
call:   15 CALL proc1(
              )
              Reaching definitions: r24=r24{11},   r25=r25{11},   r26=r26{11},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 12]=2,   m[r28{0} - 16]=%pc,   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 8, r28{0} - 12 ),   %ZF=(r28{0} - 12) = 0,   %CF=(r28{0} - 4) <u 8
              Live variables:  in proc _start
dest is not lib
call:   14 <all> := CALL proc13(<all>)
              Reaching definitions: r8=16,   r24=16,   r27=r27{0},   r28=r28{0} - 112,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r27{0},   m[r28{0} - 112]=%pc,   tmp1=r28{0} - 8,
                %flags=SUBFLAGS32( esp - 8, 100, a[m[esp - 108]] ),   %ZF=(esp - 108) = 0,   %CF= *u32*esp - 8 <u 100
              Live variables:  in proc proc10
found seq with more than one outedge!
taken branch is first out edge
dest is not lib
call:   36 <all> := CALL proc19(<all>)
              Reaching definitions: r24=r24{78},   r25=r25{79},   r26=r26{80},   r27=r27{81},   r28=r28{82} - 4,
                r29=r29{83},   r30=r30{84},   m[r28{0} - 4]=m[esp - 4]{98},   m[r28{0} - 8]=m[esp - 8]{99},
                m[r28{0} - 12]=m[esp - 12]{101},   tmp1=tmp1{85},   %flags=%flags{86},   %ZF=%ZF{87},   %CF=%CF{88}
              Live variables:  in proc proc14
dest is not lib
call:   58 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetModuleHandleA(
              )
              Reaching definitions: r6=255,   r8=truncu(32,8,r24{33}),   r9=truncu(32,8,r25{43} - 8),
                r10=truncu(32,8,r24{33} + 20),   r24=r24{33},   r25=r25{43} - 8,   r26=r24{33} + 20,   r27=r28{0} - 332
                r28=r28{0} - 576,   r29=r28{0} - 4,   r30=255,   r31=0,   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r31{0},
                m[r28{0} - 12]=r30{0},   m[r28{0} - 16]=r27{0},   m[r28{0} - 520]=r24{33} + 20,
                m[r28{0} - 572]=0x405000,   m[r28{0} - 576]=%pc,   m[r28{0} - 864]=m[r28{0} - 864]{0},   tmp1=r25{43},
                tmpb=tmpb{0},   tmph=tmph{0},   %flags=SUBFLAGS32( r25{43}, 8, r25{43} - 8 ),   %ZF=(r25{43} - 8) = 0,
                %CF=r25{43} <u 8
              Live variables: eax in proc proc18
result:    0 *32* eax := -
dest is not lib
call:   72 {*32* eax, *32* esi_3, *8* al, *8* cl_1, *j32* dl, *32* ecx, *32* edx, *v** ebx_3, *union* esp_1, *32** ebp_1, *32* edi_3} := CALL proc20(
                *c* local0 := param1
                *u8* al := truncu(32,8,a[m[esp - 500]])
              )
              Reaching definitions: r6=255,   r8=truncu(32,8,r28{0} - 500),   r9=truncu(32,8,r25{43} - 8),
                r10=truncu(32,8,r28{0} - 496),   r24=r28{0} - 500,   r25=r25{58},   r26=r28{0} - 496,
                r27=r28{0} - 332,   r28=r28{0} - 580,   r29=r28{0} - 4,   r30=255,   r31=0,   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=r31{0},   m[r28{0} - 12]=r30{0},   m[r28{0} - 16]=r27{0},   m[r28{0} - 520]=r24{33} + 20,
                m[r28{0} - 572]=r28{0} - 496,   m[r28{0} - 576]=r28{0} - 500,   m[r28{0} - 580]=%pc,
                m[r28{0} - 864]=m[r28{0} - 864]{0},   tmp1=(r28{0} - 576) + 4,   tmpb=tmpb{0},   tmph=tmph{0},
                %flags=SUBFLAGS32( r28{0} - 572, 4, r28{0} - 576 ),   %ZF=(r28{0} - 576) = 0,   %CF=(r28{0} - 572) <u 4
              Live variables: ebp_1,  ebx_3,  edi_3,  esi_3,  esp_1 in proc proc18
result:    0 *32* esi_3 := -
result:    0 *v** ebx_3 := -
result:    0 *union* esp_1 := -
result:    0 *32** ebp_1 := -
result:    0 *32* edi_3 := -
dest is not lib
call:   83 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL memset(
                *i32* m[esp_1 + 4] := m[esp_1 + 4]
                *j32* m[esp_1 + 8] := m[esp_1 + 8]
                *v** m[esp_1] := m[esp_1]
              )
              Reaching definitions: r6=255,   r8=r8{72},   r9=0,   r10=r10{72},   r24=r24{72},   r25=0,   r26=r26{72},
                r27=r27{72},   r28=r28{72} - 4,   r29=r29{72},   r30=r30{72},   r31=r31{72},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=r31{0},   m[r28{0} - 12]=r30{0},   m[r28{0} - 16]=r27{0},   m[r28{0} - 520]=r24{33} + 20,
                m[r28{0} - 572]=r28{0} - 496,   m[r28{0} - 576]=r28{0} - 500,   m[r28{0} - 580]=%pc,
                m[r28{0} - 864]=m[r28{0} - 864]{0},   tmp1=(r28{0} - 576) + 4,   tmpb=tmpb{0},   tmph=tmph{0},
                %flags=LOGICALFLAGS32( 0 ),   %ZF=LOGICALFLAGS32( 0 ),   %CF=LOGICALFLAGS32( 0 )
              Live variables:  in proc proc18
dest is not lib
call:   88 {*u32* eax, *v* ecx, *j32* edx, *v* esp} := CALL strlen(
                *[c]** m[esp_1] := m[esp_1]
              )
              Reaching definitions: r6=255,   r8=r8{72},   r9=0,   r10=r10{72},   r24=r24{83},   r25=r25{83},
                r26=r26{83},   r27=r27{72},   r28=r28{72} - 4,   r29=r29{72},   r30=r30{72},   r31=r31{72},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r31{0},   m[r28{0} - 12]=r30{0},   m[r28{0} - 16]=r27{0},
                m[r28{0} - 520]=r24{33} + 20,   m[r28{0} - 572]=r28{0} - 496,   m[r28{0} - 576]=r28{0} - 500,
                m[r28{0} - 580]=%pc,   m[r28{0} - 864]=m[r28{0} - 864]{0},   tmp1=(r28{0} - 576) + 4,   tmpb=tmpb{0},
                tmph=tmph{0},   %flags=LOGICALFLAGS32( 0 ),   %ZF=LOGICALFLAGS32( 0 ),   %CF=LOGICALFLAGS32( 0 )
              Live variables: eax in proc proc18
result:    0 *u32* eax := -
dest is not lib
call:  139 {*v** eax_1, *32* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *c** m[esp_1 + 4] := m[esp_1 + 4]
                *v** m[esp_1] := m[esp_1]
              )
              Reaching definitions: r6=r6{1629},   r8=truncu(32,8,r24{88} - 1),   r9=truncu(32,8,r25{1622} + 1),
                r10=r10{1631},   r24=r24{88} - 1,   r25=r25{1622} + 1,   r26=r26{1633},   r27=r27{72},
                r28=r28{72} - 4,   r29=r29{72},   r30=r30{72},   r31=r31{134},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=r31{0},   m[r28{0} - 12]=r30{0},   m[r28{0} - 16]=r27{0},   m[r28{0} - 520]=r24{33} + 20,
                m[r28{0} - 572]=r28{0} - 496,   m[r28{0} - 576]=r28{0} - 500,   m[r28{0} - 580]=%pc,
                m[r28{0} - 864]=m[r28{0} - 864]{0},   tmp1=(r24{88} - r25{1622}) - 2,   tmpb=tmpb{1636},   tmph=tmph{0}
                %flags=SUBFLAGS32( r24{88} - 1, r25{1622} + 1, (r24{88} - r25{1622}) - 2 ),   %ZF=%ZF{1638},
                %CF=%CF{1639}
              Live variables: eax_1,  ecx in proc proc18
result:    0 *v** eax_1 := -
result:    0 *32* ecx := -
dest is not lib
call:  658 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL memset(
                *i32* m[esp_14 + 4] := m[esp_14 + 4]
                *j32* m[esp_14 + 8] := m[esp_14 + 8]
                *union* m[esp_14] := m[esp_14]
              )
              Reaching definitions: r6=truncu(32,16,r30{159}),   r8=r8{1641},   r9=0,   r10=r10{1643},   r24=r24{1644},
                r25=0,   r26=r26{1646},   r27=r27{1647},   r28=r28{1648} - 4,   r29=r29{1649},   r30=r30{159},
                r31=255,   m[r28{0} - 4]=m[r28{0} - 4]{2182},   m[r28{0} - 8]=m[r28{0} - 8]{2183},
                m[r28{0} - 12]=m[r28{0} - 12]{2184},   m[r28{0} - 16]=m[r28{0} - 16]{2185},
                m[r28{0} - 520]=m[r28{0} - 520]{2186},   m[r28{0} - 572]=m[r28{0} - 572]{2187},
                m[r28{0} - 576]=m[r28{0} - 576]{2188},   m[r28{0} - 580]=m[r28{0} - 580]{2189},
                m[r28{0} - 864]=m[r28{0} - 864]{2238},   tmp1=r30{159},   tmpb=tmpb{1653},   tmph=tmph{1654},
                %flags=LOGICALFLAGS32( 0 ),   %ZF=LOGICALFLAGS32( 0 ),   %CF=LOGICALFLAGS32( 0 )
              Live variables:  in proc proc18
dest is not lib
call:  663 {*u32* eax, *v* ecx, *j32* edx, *v* esp} := CALL strlen(
                *union* m[esp_14] := m[esp_14]
              )
              Reaching definitions: r6=truncu(32,16,r30{159}),   r8=r8{1641},   r9=0,   r10=r10{1643},   r24=r24{658},
                r25=r25{658},   r26=r26{658},   r27=r27{1647},   r28=r28{1648} - 4,   r29=r29{1649},   r30=r30{159},
                r31=255,   m[r28{0} - 4]=m[r28{0} - 4]{2182},   m[r28{0} - 8]=m[r28{0} - 8]{2183},
                m[r28{0} - 12]=m[r28{0} - 12]{2184},   m[r28{0} - 16]=m[r28{0} - 16]{2185},
                m[r28{0} - 520]=m[r28{0} - 520]{2186},   m[r28{0} - 572]=m[r28{0} - 572]{2187},
                m[r28{0} - 576]=m[r28{0} - 576]{2188},   m[r28{0} - 580]=m[r28{0} - 580]{2189},
                m[r28{0} - 864]=m[r28{0} - 864]{2238},   tmp1=r30{159},   tmpb=tmpb{1653},   tmph=tmph{1654},
                %flags=LOGICALFLAGS32( 0 ),   %ZF=LOGICALFLAGS32( 0 ),   %CF=LOGICALFLAGS32( 0 )
              Live variables: eax in proc proc18
result:    0 *u32* eax := -
dest is not lib
call:  713 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *c** m[esp_14 + 4] := m[esp_14 + 4]
                *union* m[esp_14] := m[esp_14]
              )
              Reaching definitions: r6=truncu(32,16,r30{159}),   r8=truncu(32,8,r24{663} - 1),
                r9=truncu(32,8,r25{1855} + 1),   r10=truncu(32,8,r26{707}),   r24=r24{663} - 1,   r25=r25{1855} + 1,
                r26=r26{707},   r27=r27{1647},   r28=r28{1648} - 4,   r29=r29{1649},   r30=r30{159},   r31=255,
                m[r28{0} - 4]=m[r28{0} - 4]{2182},   m[r28{0} - 8]=m[r28{0} - 8]{2183},
                m[r28{0} - 12]=m[r28{0} - 12]{2184},   m[r28{0} - 16]=m[r28{0} - 16]{2185},
                m[r28{0} - 520]=m[r28{0} - 520]{2186},   m[r28{0} - 572]=m[r28{0} - 572]{2187},
                m[r28{0} - 576]=m[r28{0} - 576]{2188},   m[r28{0} - 580]=m[r28{0} - 580]{2189},
                m[r28{0} - 864]=m[r28{0} - 864]{2238},   tmp1=(r24{663} - r25{1855}) - 2,   tmpb=tmpb{1867},
                tmph=tmph{1654},   %flags=SUBFLAGS32( r24{663} - 1, r25{1855} + 1, (r24{663} - r25{1855}) - 2 ),
                %ZF=%ZF{1869},   %CF=%CF{1870}
              Live variables: eax in proc proc18
result:    0 *32* eax := -
dest is not lib
call:  724 {*32* eax, *j32* ecx, *32* edx, *v* esp} := CALL GetNativeSystemInfo(
              )
              Reaching definitions: r6=truncu(32,16,r30{159}),   r8=truncu(32,8,r29{1649} - 72),
                r9=truncu(32,8,r25{1855} + 1),   r10=truncu(32,8,r26{707}),   r24=r29{1649} - 72,   r25=r25{713},
                r26=r26{713},   r27=r27{1647},   r28=r28{1648} - 4,   r29=r29{1649},   r30=r30{159},   r31=255,
                m[r28{0} - 4]=m[r28{0} - 4]{2182},   m[r28{0} - 8]=m[r28{0} - 8]{2183},
                m[r28{0} - 12]=m[r28{0} - 12]{2184},   m[r28{0} - 16]=m[r28{0} - 16]{2185},
                m[r28{0} - 520]=m[r28{0} - 520]{2186},   m[r28{0} - 572]=m[r28{0} - 572]{2187},
                m[r28{0} - 576]=m[r28{0} - 576]{2188},   m[r28{0} - 580]=m[r28{0} - 580]{2189},
                m[r28{0} - 864]=m[r28{0} - 864]{2238},   tmp1=(r28{1648} - 4) + 12,   tmpb=tmpb{1867},
                tmph=tmph{1654},   %flags=SUBFLAGS32( r28{1648} + 8, 8, r28{1648} ),   %ZF=r28{1648} = 0,
                %CF=(r28{1648} + 8) <u 8
              Live variables:  in proc proc18
dest is not lib
call:  170 {*32* eax, *j32* ecx, *32* edx, *v* esp} := CALL GetSystemInfo(
                *union* m[esp_14] := m[esp_14]
              )
              Reaching definitions: r6=truncu(32,16,r30{159}),   r8=r8{1641},   r9=r9{1642},
                r10=truncu(32,8,r29{1649} - 72),   r24=r24{1644},   r25=r25{1645},   r26=r29{1649} - 72,
                r27=r27{1647},   r28=r28{1648} - 4,   r29=r29{1649},   r30=r30{159},   r31=r31{1651},
                m[r28{0} - 4]=m[r28{0} - 4]{2182},   m[r28{0} - 8]=m[r28{0} - 8]{2183},
                m[r28{0} - 12]=m[r28{0} - 12]{2184},   m[r28{0} - 16]=m[r28{0} - 16]{2185},
                m[r28{0} - 520]=m[r28{0} - 520]{2186},   m[r28{0} - 572]=m[r28{0} - 572]{2187},
                m[r28{0} - 576]=m[r28{0} - 576]{2188},   m[r28{0} - 580]=m[r28{0} - 580]{2189},
                m[r28{0} - 864]=m[r28{0} - 864]{2238},   tmp1=r30{159},   tmpb=tmpb{1653},   tmph=tmph{1654},
                %flags=LOGICALFLAGS32( r30{159} ),   %ZF=LOGICALFLAGS32( r30{159} ),   %CF=LOGICALFLAGS32( r30{159} )
              Live variables:  in proc proc18
dest is not lib
call:  208 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL memset(
                *i32* m[esp_16 + 4] := m[esp_16 + 4]
                *j32* m[esp_16 + 8] := m[esp_16 + 8]
                *union* m[esp_16] := m[esp_16]
              )
              Reaching definitions: r6=truncu(32,16,r30{196}),   r8=truncu(32,8,r24{198}),   r9=0,
                r10=truncu(32,8,r26{190} - 8),   r24=r24{198},   r25=0,   r26=r26{190} - 8,   r27=r27{1647},
                r28=r28{1677} - 4,   r29=r29{1649},   r30=r30{196},   r31=255,   m[r28{0} - 4]=m[r28{0} - 4]{2182},
                m[r28{0} - 8]=m[r28{0} - 8]{2183},   m[r28{0} - 12]=m[r28{0} - 12]{2184},
                m[r28{0} - 16]=m[r28{0} - 16]{2185},   m[r28{0} - 520]=m[r28{0} - 520]{2186},
                m[r28{0} - 572]=m[r28{0} - 572]{2187},   m[r28{0} - 576]=m[r28{0} - 576]{2188},
                m[r28{0} - 580]=m[r28{0} - 580]{2189},   m[r28{0} - 864]=m[r28{0} - 864]{2238},   tmp1=r26{190},
                tmpb=tmpb{181},   tmph=tmph{1681},   %flags=SUBFLAGS32( r26{190}, 8, r26{190} - 8 ),
                %ZF=(r26{190} - 8) = 0,   %CF=r26{190} <u 8
              Live variables:  in proc proc18
dest is not lib
call:  213 {*u32* eax, *v* ecx, *j32* edx, *v* esp} := CALL strlen(
                *union* m[esp_16] := m[esp_16]
              )
              Reaching definitions: r6=truncu(32,16,r30{196}),   r8=truncu(32,8,r24{198}),   r9=0,
                r10=truncu(32,8,r26{190} - 8),   r24=r24{208},   r25=r25{208},   r26=r26{208},   r27=r27{1647},
                r28=r28{1677} - 4,   r29=r29{1649},   r30=r30{196},   r31=255,   m[r28{0} - 4]=m[r28{0} - 4]{2182},
                m[r28{0} - 8]=m[r28{0} - 8]{2183},   m[r28{0} - 12]=m[r28{0} - 12]{2184},
                m[r28{0} - 16]=m[r28{0} - 16]{2185},   m[r28{0} - 520]=m[r28{0} - 520]{2186},
                m[r28{0} - 572]=m[r28{0} - 572]{2187},   m[r28{0} - 576]=m[r28{0} - 576]{2188},
                m[r28{0} - 580]=m[r28{0} - 580]{2189},   m[r28{0} - 864]=m[r28{0} - 864]{2238},   tmp1=r26{190},
                tmpb=tmpb{181},   tmph=tmph{1681},   %flags=SUBFLAGS32( r26{190}, 8, r26{190} - 8 ),
                %ZF=(r26{190} - 8) = 0,   %CF=r26{190} <u 8
              Live variables: eax in proc proc18
result:    0 *u32* eax := -
dest is not lib
call:  266 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *c** m[esp_16 + 4] := m[esp_16 + 4]
                *union* m[esp_16] := m[esp_16]
              )
              Reaching definitions: r6=truncu(32,16,r30{196}),   r8=truncu(32,8,r24{213} - 1),
                r9=truncu(32,8,r25{1693} + 1),   r10=r10{1702},   r24=r24{213} - 1,   r25=r25{1693} + 1,
                r26=r26{1704},   r27=r27{1647},   r28=r28{1677} - 4,   r29=r29{1649},   r30=r30{1705},   r31=255,
                m[r28{0} - 4]=m[r28{0} - 4]{2182},   m[r28{0} - 8]=m[r28{0} - 8]{2183},
                m[r28{0} - 12]=m[r28{0} - 12]{2184},   m[r28{0} - 16]=m[r28{0} - 16]{2185},
                m[r28{0} - 520]=m[r28{0} - 520]{2186},   m[r28{0} - 572]=m[r28{0} - 572]{2187},
                m[r28{0} - 576]=m[r28{0} - 576]{2188},   m[r28{0} - 580]=m[r28{0} - 580]{2189},
                m[r28{0} - 864]=m[r28{0} - 864]{2238},   tmp1=(r24{213} - r25{1693}) - 2,   tmpb=tmpb{1708},
                tmph=tmph{1681},   %flags=SUBFLAGS32( r24{213} - 1, r25{1693} + 1, (r24{213} - r25{1693}) - 2 ),
                %ZF=%ZF{1710},   %CF=%CF{1711}
              Live variables: eax in proc proc18
result:    0 *32* eax := -
dest is not lib
call:  293 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL memset(
                *i32* m[esp_16 + 4] := m[esp_16 + 4]
                *j32* m[esp_16 + 8] := m[esp_16 + 8]
                *union* m[esp_16] := m[esp_16]
              )
              Reaching definitions: r6=truncu(32,16,r30{282}),   r8=truncu(32,8,r24{273} + r25{268}),   r9=0,
                r10=truncu(32,8,r26{284}),   r24=r24{273} + r25{268},   r25=0,   r26=r26{284},   r27=r27{1647},
                r28=r28{1677} - 4,   r29=r29{1649},   r30=r30{282},   r31=255,   m[r28{0} - 4]=m[r28{0} - 4]{2182},
                m[r28{0} - 8]=m[r28{0} - 8]{2183},   m[r28{0} - 12]=m[r28{0} - 12]{2184},
                m[r28{0} - 16]=m[r28{0} - 16]{2185},   m[r28{0} - 520]=m[r28{0} - 520]{2186},
                m[r28{0} - 572]=m[r28{0} - 572]{2187},   m[r28{0} - 576]=m[r28{0} - 576]{2188},
                m[r28{0} - 580]=m[r28{0} - 580]{2189},   m[r28{0} - 864]=m[r28{0} - 864]{2238},   tmp1=r24{273},
                tmpb=tmpb{1708},   tmph=tmph{1681},   %flags=LOGICALFLAGS32( 0 ),   %ZF=LOGICALFLAGS32( 0 ),
                %CF=LOGICALFLAGS32( 0 )
              Live variables:  in proc proc18
dest is not lib
call:  298 {*u32* eax, *v* ecx, *j32* edx, *v* esp} := CALL strlen(
                *union* m[esp_16] := m[esp_16]
              )
              Reaching definitions: r6=truncu(32,16,r30{282}),   r8=truncu(32,8,r24{273} + r25{268}),   r9=0,
                r10=truncu(32,8,r26{284}),   r24=r24{293},   r25=r25{293},   r26=r26{293},   r27=r27{1647},
                r28=r28{1677} - 4,   r29=r29{1649},   r30=r30{282},   r31=255,   m[r28{0} - 4]=m[r28{0} - 4]{2182},
                m[r28{0} - 8]=m[r28{0} - 8]{2183},   m[r28{0} - 12]=m[r28{0} - 12]{2184},
                m[r28{0} - 16]=m[r28{0} - 16]{2185},   m[r28{0} - 520]=m[r28{0} - 520]{2186},
                m[r28{0} - 572]=m[r28{0} - 572]{2187},   m[r28{0} - 576]=m[r28{0} - 576]{2188},
                m[r28{0} - 580]=m[r28{0} - 580]{2189},   m[r28{0} - 864]=m[r28{0} - 864]{2238},   tmp1=r24{273},
                tmpb=tmpb{1708},   tmph=tmph{1681},   %flags=LOGICALFLAGS32( 0 ),   %ZF=LOGICALFLAGS32( 0 ),
                %CF=LOGICALFLAGS32( 0 )
              Live variables: eax in proc proc18
result:    0 *u32* eax := -
dest is not lib
call:  374 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL memset(
                *i32* m[esp_16 + 4] := m[esp_16 + 4]
                *j32* m[esp_16 + 8] := m[esp_16 + 8]
                *union* m[esp_16] := m[esp_16]
              )
              Reaching definitions: r6=r6{1748},   r8=0,   r9=r9{1749},   r10=5,   r24=0,   r25=r25{1750},   r26=5,
                r27=r27{1647},   r28=r28{1677} - 4,   r29=r29{1649},   r30=r30{1751},   r31=255,
                m[r28{0} - 4]=m[r28{0} - 4]{2182},   m[r28{0} - 8]=m[r28{0} - 8]{2183},
                m[r28{0} - 12]=m[r28{0} - 12]{2184},   m[r28{0} - 16]=m[r28{0} - 16]{2185},
                m[r28{0} - 520]=m[r28{0} - 520]{2186},   m[r28{0} - 572]=m[r28{0} - 572]{2187},
                m[r28{0} - 576]=m[r28{0} - 576]{2188},   m[r28{0} - 580]=m[r28{0} - 580]{2189},
                m[r28{0} - 864]=m[r28{0} - 864]{2238},   tmp1=0,   tmpb=tmpb{1753},   tmph=tmph{1681},
                %flags=LOGICALFLAGS32( 0 ),   %ZF=LOGICALFLAGS32( 0 ),   %CF=LOGICALFLAGS32( 0 )
              Live variables:  in proc proc18
dest is not lib
call:  379 {*u32* eax, *v* ecx, *j32* edx, *v* esp} := CALL strlen(
                *union* m[esp_16] := m[esp_16]
              )
              Reaching definitions: r6=r6{1748},   r8=0,   r9=r9{1749},   r10=5,   r24=r24{374},   r25=r25{374},
                r26=r26{374},   r27=r27{1647},   r28=r28{1677} - 4,   r29=r29{1649},   r30=r30{1751},   r31=255,
                m[r28{0} - 4]=m[r28{0} - 4]{2182},   m[r28{0} - 8]=m[r28{0} - 8]{2183},
                m[r28{0} - 12]=m[r28{0} - 12]{2184},   m[r28{0} - 16]=m[r28{0} - 16]{2185},
                m[r28{0} - 520]=m[r28{0} - 520]{2186},   m[r28{0} - 572]=m[r28{0} - 572]{2187},
                m[r28{0} - 576]=m[r28{0} - 576]{2188},   m[r28{0} - 580]=m[r28{0} - 580]{2189},
                m[r28{0} - 864]=m[r28{0} - 864]{2238},   tmp1=0,   tmpb=tmpb{1753},   tmph=tmph{1681},
                %flags=LOGICALFLAGS32( 0 ),   %ZF=LOGICALFLAGS32( 0 ),   %CF=LOGICALFLAGS32( 0 )
              Live variables: eax in proc proc18
result:    0 *u32* eax := -
dest is not lib
call:  432 {*j32** eax_1, *j32* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *c** m[esp_16 + 4] := m[esp_16 + 4]
                *union* m[esp_16] := m[esp_16]
              )
              Reaching definitions: r6=0,   r8=truncu(32,8,r24{379} - 1),   r9=truncu(32,8,r25{1765} + 1),
                r10=r10{1773},   r24=r24{379} - 1,   r25=r25{1765} + 1,   r26=r26{1775},   r27=r27{1647},
                r28=r28{1677} - 4,   r29=r29{1649},   r30=0,   r31=255,   m[r28{0} - 4]=m[r28{0} - 4]{2182},
                m[r28{0} - 8]=m[r28{0} - 8]{2183},   m[r28{0} - 12]=m[r28{0} - 12]{2184},
                m[r28{0} - 16]=m[r28{0} - 16]{2185},   m[r28{0} - 520]=m[r28{0} - 520]{2186},
                m[r28{0} - 572]=m[r28{0} - 572]{2187},   m[r28{0} - 576]=m[r28{0} - 576]{2188},
                m[r28{0} - 580]=m[r28{0} - 580]{2189},   m[r28{0} - 864]=m[r28{0} - 864]{2238},
                tmp1=(r24{379} - r25{1765}) - 2,   tmpb=tmpb{1777},   tmph=tmph{1681},   %flags=LOGICALFLAGS32( 0 ),
                %ZF=LOGICALFLAGS32( 0 ),   %CF=LOGICALFLAGS32( 0 )
              Live variables: eax_1,  ecx in proc proc18
result:    0 *j32** eax_1 := -
result:    0 *j32* ecx := -
dest is not lib
call:  835 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetModuleHandleA(
              )
              Reaching definitions: r6=255,   r8=truncu(32,8,r24{818}),   r9=truncu(32,8,r25{828}),
                r10=truncu(32,8,r26{822} - 8),   r24=r24{818},   r25=r25{828},   r26=r26{822} - 8,   r27=r27{1945},
                r28=r28{1946} - 4,   r29=r29{1947},   r30=255,   r31=r31{1949},   m[r28{0} - 4]=m[r28{0} - 4]{455},
                m[r28{0} - 8]=m[r28{0} - 8]{455},   m[r28{0} - 12]=m[r28{0} - 12]{455},
                m[r28{0} - 16]=m[r28{0} - 16]{455},   m[r28{0} - 520]=m[r28{0} - 520]{455},
                m[r28{0} - 572]=m[r28{0} - 572]{455},   m[r28{0} - 576]=m[r28{0} - 576]{455},
                m[r28{0} - 580]=m[r28{0} - 580]{455},   m[r28{0} - 4]=m[r28{0} - 4]{2222},
                m[r28{0} - 8]=m[r28{0} - 8]{2223},   m[r28{0} - 12]=m[r28{0} - 12]{2224},
                m[r28{0} - 16]=m[r28{0} - 16]{2225},   m[r28{0} - 520]=m[r28{0} - 520]{2226},
                m[r28{0} - 572]=m[r28{0} - 572]{2227},   m[r28{0} - 576]=m[r28{0} - 576]{2228},
                m[r28{0} - 580]=m[r28{0} - 580]{2229},   m[r28{0} - 864]=m[r28{0} - 864]{2243},   <all>=<all>{455},
                tmp1=r26{822},   tmpb=tmpb{1951},   tmph=tmph{1952},   %flags=SUBFLAGS32( r26{822}, 8, r26{822} - 8 ),
                %ZF=(r26{822} - 8) = 0,   %CF=r26{822} <u 8
              Live variables: eax in proc proc18
result:    0 *32* eax := -
dest is not lib
call:  849 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL memset(
                *v** m[esp_18 - 4] := m[esp_18 - 4]
                *j32* m[esp_18 + 4] := m[esp_18 + 4]
                *union* m[esp_18] := m[esp_18]
              )
              Reaching definitions: r6=255,   r8=0,   r9=truncu(32,8,r25{828}),   r10=truncu(32,8,r26{822} - 8),
                r24=0,   r25=r25{835},   r26=r26{835},   r27=r27{1945},   r28=r28{1946} - 8,   r29=r29{1947},   r30=255
                r31=r31{1949},   m[r28{0} - 4]=m[r28{0} - 4]{455},   m[r28{0} - 8]=m[r28{0} - 8]{455},
                m[r28{0} - 12]=m[r28{0} - 12]{455},   m[r28{0} - 16]=m[r28{0} - 16]{455},
                m[r28{0} - 520]=m[r28{0} - 520]{455},   m[r28{0} - 572]=m[r28{0} - 572]{455},
                m[r28{0} - 576]=m[r28{0} - 576]{455},   m[r28{0} - 580]=m[r28{0} - 580]{455},
                m[r28{0} - 4]=m[r28{0} - 4]{2222},   m[r28{0} - 8]=m[r28{0} - 8]{2223},
                m[r28{0} - 12]=m[r28{0} - 12]{2224},   m[r28{0} - 16]=m[r28{0} - 16]{2225},
                m[r28{0} - 520]=m[r28{0} - 520]{2226},   m[r28{0} - 572]=m[r28{0} - 572]{2227},
                m[r28{0} - 576]=m[r28{0} - 576]{2228},   m[r28{0} - 580]=m[r28{0} - 580]{2229},
                m[r28{0} - 864]=m[r28{0} - 864]{2243},   <all>=<all>{455},   tmp1=(r28{1946} - 4) + 4,
                tmpb=tmpb{1951},   tmph=tmph{1952},   %flags=LOGICALFLAGS32( 0 ),   %ZF=LOGICALFLAGS32( 0 ),
                %CF=LOGICALFLAGS32( 0 )
              Live variables:  in proc proc18
dest is not lib
call:  854 {*u32* eax, *v* ecx, *j32* edx, *v* esp} := CALL strlen(
                *[c]** m[esp_18 - 4] := m[esp_18 - 4]
              )
              Reaching definitions: r6=255,   r8=0,   r9=truncu(32,8,r25{828}),   r10=truncu(32,8,r26{822} - 8),
                r24=r24{849},   r25=r25{849},   r26=r26{849},   r27=r27{1945},   r28=r28{1946} - 8,   r29=r29{1947},
                r30=255,   r31=r31{1949},   m[r28{0} - 4]=m[r28{0} - 4]{455},   m[r28{0} - 8]=m[r28{0} - 8]{455},
                m[r28{0} - 12]=m[r28{0} - 12]{455},   m[r28{0} - 16]=m[r28{0} - 16]{455},
                m[r28{0} - 520]=m[r28{0} - 520]{455},   m[r28{0} - 572]=m[r28{0} - 572]{455},
                m[r28{0} - 576]=m[r28{0} - 576]{455},   m[r28{0} - 580]=m[r28{0} - 580]{455},
                m[r28{0} - 4]=m[r28{0} - 4]{2222},   m[r28{0} - 8]=m[r28{0} - 8]{2223},
                m[r28{0} - 12]=m[r28{0} - 12]{2224},   m[r28{0} - 16]=m[r28{0} - 16]{2225},
                m[r28{0} - 520]=m[r28{0} - 520]{2226},   m[r28{0} - 572]=m[r28{0} - 572]{2227},
                m[r28{0} - 576]=m[r28{0} - 576]{2228},   m[r28{0} - 580]=m[r28{0} - 580]{2229},
                m[r28{0} - 864]=m[r28{0} - 864]{2243},   <all>=<all>{455},   tmp1=(r28{1946} - 4) + 4,
                tmpb=tmpb{1951},   tmph=tmph{1952},   %flags=LOGICALFLAGS32( 0 ),   %ZF=LOGICALFLAGS32( 0 ),
                %CF=LOGICALFLAGS32( 0 )
              Live variables: eax in proc proc18
result:    0 *u32* eax := -
dest is not lib
call:  904 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* m[esp_18 - 4] := m[esp_18 - 4]
                *union* m[esp_18] := m[esp_18]
              )
              Reaching definitions: r6=255,   r8=truncu(32,8,r24{898}),   r9=truncu(32,8,r25{1964} + 1),
                r10=r10{1972},   r24=r24{898},   r25=r25{1964} + 1,   r26=r26{1974},   r27=r27{1945},
                r28=r28{1946} - 8,   r29=r29{1947},   r30=255,   r31=r31{1949},   m[r28{0} - 4]=m[r28{0} - 4]{455},
                m[r28{0} - 8]=m[r28{0} - 8]{455},   m[r28{0} - 12]=m[r28{0} - 12]{455},
                m[r28{0} - 16]=m[r28{0} - 16]{455},   m[r28{0} - 520]=m[r28{0} - 520]{455},
                m[r28{0} - 572]=m[r28{0} - 572]{455},   m[r28{0} - 576]=m[r28{0} - 576]{455},
                m[r28{0} - 580]=m[r28{0} - 580]{455},   m[r28{0} - 4]=m[r28{0} - 4]{2222},
                m[r28{0} - 8]=m[r28{0} - 8]{2223},   m[r28{0} - 12]=m[r28{0} - 12]{2224},
                m[r28{0} - 16]=m[r28{0} - 16]{2225},   m[r28{0} - 520]=m[r28{0} - 520]{2226},
                m[r28{0} - 572]=m[r28{0} - 572]{2227},   m[r28{0} - 576]=m[r28{0} - 576]{2228},
                m[r28{0} - 580]=m[r28{0} - 580]{2229},   m[r28{0} - 864]=m[r28{0} - 864]{2243},   <all>=<all>{455},
                tmp1=(r24{854} - r25{1964}) - 2,   tmpb=tmpb{1976},   tmph=tmph{1952},
                %flags=SUBFLAGS32( r24{854} - 1, r25{1964} + 1, (r24{854} - r25{1964}) - 2 ),   %ZF=%ZF{1978},
                %CF=%CF{1979}
              Live variables: eax in proc proc18
result:    0 *32* eax := -
dest is not lib
call:  920 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL memset(
                *v** m[esp_18 - 4] := m[esp_18 - 4]
                *j32* m[esp_18 + 4] := m[esp_18 + 4]
                *union* m[esp_18] := m[esp_18]
              )
              Reaching definitions: r6=255,   r8=truncu(32,8,r24{898}),   r9=0,   r10=255,   r24=r24{904},   r25=0,
                r26=255,   r27=r27{1945},   r28=r28{1946} - 8,   r29=r29{1947},   r30=255,   r31=r31{1949},
                m[r28{0} - 4]=m[r28{0} - 4]{455},   m[r28{0} - 8]=m[r28{0} - 8]{455},
                m[r28{0} - 12]=m[r28{0} - 12]{455},   m[r28{0} - 16]=m[r28{0} - 16]{455},
                m[r28{0} - 520]=m[r28{0} - 520]{455},   m[r28{0} - 572]=m[r28{0} - 572]{455},
                m[r28{0} - 576]=m[r28{0} - 576]{455},   m[r28{0} - 580]=m[r28{0} - 580]{455},
                m[r28{0} - 4]=m[r28{0} - 4]{2222},   m[r28{0} - 8]=m[r28{0} - 8]{2223},
                m[r28{0} - 12]=m[r28{0} - 12]{2224},   m[r28{0} - 16]=m[r28{0} - 16]{2225},
                m[r28{0} - 520]=m[r28{0} - 520]{2226},   m[r28{0} - 572]=m[r28{0} - 572]{2227},
                m[r28{0} - 576]=m[r28{0} - 576]{2228},   m[r28{0} - 580]=m[r28{0} - 580]{2229},
                m[r28{0} - 864]=m[r28{0} - 864]{2243},   <all>=<all>{455},   tmp1=(r28{1946} - 8) + 12,
                tmpb=tmpb{1976},   tmph=tmph{1952},   %flags=LOGICALFLAGS32( 0 ),   %ZF=LOGICALFLAGS32( 0 ),
                %CF=LOGICALFLAGS32( 0 )
              Live variables:  in proc proc18
dest is not lib
call:  925 {*u32* eax, *v* ecx, *j32* edx, *v* esp} := CALL strlen(
                *[c]** m[esp_18 - 4] := m[esp_18 - 4]
              )
              Reaching definitions: r6=255,   r8=truncu(32,8,r24{898}),   r9=0,   r10=255,   r24=r24{920},
                r25=r25{920},   r26=r26{920},   r27=r27{1945},   r28=r28{1946} - 8,   r29=r29{1947},   r30=255,
                r31=r31{1949},   m[r28{0} - 4]=m[r28{0} - 4]{455},   m[r28{0} - 8]=m[r28{0} - 8]{455},
                m[r28{0} - 12]=m[r28{0} - 12]{455},   m[r28{0} - 16]=m[r28{0} - 16]{455},
                m[r28{0} - 520]=m[r28{0} - 520]{455},   m[r28{0} - 572]=m[r28{0} - 572]{455},
                m[r28{0} - 576]=m[r28{0} - 576]{455},   m[r28{0} - 580]=m[r28{0} - 580]{455},
                m[r28{0} - 4]=m[r28{0} - 4]{2222},   m[r28{0} - 8]=m[r28{0} - 8]{2223},
                m[r28{0} - 12]=m[r28{0} - 12]{2224},   m[r28{0} - 16]=m[r28{0} - 16]{2225},
                m[r28{0} - 520]=m[r28{0} - 520]{2226},   m[r28{0} - 572]=m[r28{0} - 572]{2227},
                m[r28{0} - 576]=m[r28{0} - 576]{2228},   m[r28{0} - 580]=m[r28{0} - 580]{2229},
                m[r28{0} - 864]=m[r28{0} - 864]{2243},   <all>=<all>{455},   tmp1=(r28{1946} - 8) + 12,
                tmpb=tmpb{1976},   tmph=tmph{1952},   %flags=LOGICALFLAGS32( 0 ),   %ZF=LOGICALFLAGS32( 0 ),
                %CF=LOGICALFLAGS32( 0 )
              Live variables: eax in proc proc18
result:    0 *u32* eax := -
dest is not lib
call:  977 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* m[esp_18 - 4] := m[esp_18 - 4]
                *union* m[esp_18] := m[esp_18]
              )
              Reaching definitions: r6=truncu(32,16,r29{1947} - 488),   r8=truncu(32,8,r24{925} - 1),
                r9=truncu(32,8,r25{1988} + 1),   r10=r10{1996},   r24=r24{925} - 1,   r25=r25{1988} + 1,
                r26=r26{1998},   r27=r27{1945},   r28=r28{1946} - 8,   r29=r29{1947},   r30=r29{1947} - 488,
                r31=r31{1949},   m[r28{0} - 4]=m[r28{0} - 4]{455},   m[r28{0} - 8]=m[r28{0} - 8]{455},
                m[r28{0} - 12]=m[r28{0} - 12]{455},   m[r28{0} - 16]=m[r28{0} - 16]{455},
                m[r28{0} - 520]=m[r28{0} - 520]{455},   m[r28{0} - 572]=m[r28{0} - 572]{455},
                m[r28{0} - 576]=m[r28{0} - 576]{455},   m[r28{0} - 580]=m[r28{0} - 580]{455},
                m[r28{0} - 4]=m[r28{0} - 4]{2222},   m[r28{0} - 8]=m[r28{0} - 8]{2223},
                m[r28{0} - 12]=m[r28{0} - 12]{2224},   m[r28{0} - 16]=m[r28{0} - 16]{2225},
                m[r28{0} - 520]=m[r28{0} - 520]{2226},   m[r28{0} - 572]=m[r28{0} - 572]{2227},
                m[r28{0} - 576]=m[r28{0} - 576]{2228},   m[r28{0} - 580]=m[r28{0} - 580]{2229},
                m[r28{0} - 864]=m[r28{0} - 864]{2243},   <all>=<all>{455},   tmp1=(r24{925} - r25{1988}) - 2,
                tmpb=tmpb{2000},   tmph=tmph{1952},
                %flags=SUBFLAGS32( r24{925} - 1, r25{1988} + 1, (r24{925} - r25{1988}) - 2 ),   %ZF=%ZF{2002},
                %CF=%CF{2003}
              Live variables: eax in proc proc18
result:    0 *32* eax := -
dest is not lib
call: 1020 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL memset(
                *v** m[esp_18 - 4] := m[esp_18 - 4]
                *j32* m[esp_18 + 4] := m[esp_18 + 4]
                *union* m[esp_18] := m[esp_18]
              )
              Reaching definitions: r6=truncu(32,16,r29{1947} - 488),   r8=truncu(32,8,r24{925} - 1),   r9=0,   r10=255
                r24=r24{977},   r25=0,   r26=255,   r27=r27{1945},   r28=r28{1946} - 8,   r29=r29{1947},
                r30=r29{1947} - 488,   r31=r31{1949},   m[r28{0} - 4]=m[r28{0} - 4]{455},
                m[r28{0} - 8]=m[r28{0} - 8]{455},   m[r28{0} - 12]=m[r28{0} - 12]{455},
                m[r28{0} - 16]=m[r28{0} - 16]{455},   m[r28{0} - 520]=m[r28{0} - 520]{455},
                m[r28{0} - 572]=m[r28{0} - 572]{455},   m[r28{0} - 576]=m[r28{0} - 576]{455},
                m[r28{0} - 580]=m[r28{0} - 580]{455},   m[r28{0} - 4]=m[r28{0} - 4]{2222},
                m[r28{0} - 8]=m[r28{0} - 8]{2223},   m[r28{0} - 12]=m[r28{0} - 12]{2224},
                m[r28{0} - 16]=m[r28{0} - 16]{2225},   m[r28{0} - 520]=m[r28{0} - 520]{2226},
                m[r28{0} - 572]=m[r28{0} - 572]{2227},   m[r28{0} - 576]=m[r28{0} - 576]{2228},
                m[r28{0} - 580]=m[r28{0} - 580]{2229},   m[r28{0} - 864]=m[r28{0} - 864]{2243},   <all>=<all>{455},
                tmp1=(r28{1946} - 8) + 12,   tmpb=tmpb{2000},   tmph=tmph{1952},   %flags=LOGICALFLAGS32( 0 ),
                %ZF=LOGICALFLAGS32( 0 ),   %CF=LOGICALFLAGS32( 0 )
              Live variables:  in proc proc18
dest is not lib
call: 1025 {*u32* eax, *v* ecx, *j32* edx, *v* esp} := CALL strlen(
                *[c]** m[esp_18 - 4] := m[esp_18 - 4]
              )
              Reaching definitions: r6=truncu(32,16,r29{1947} - 488),   r8=truncu(32,8,r24{925} - 1),   r9=0,   r10=255
                r24=r24{1020},   r25=r25{1020},   r26=r26{1020},   r27=r27{1945},   r28=r28{1946} - 8,   r29=r29{1947},
                r30=r29{1947} - 488,   r31=r31{1949},   m[r28{0} - 4]=m[r28{0} - 4]{455},
                m[r28{0} - 8]=m[r28{0} - 8]{455},   m[r28{0} - 12]=m[r28{0} - 12]{455},
                m[r28{0} - 16]=m[r28{0} - 16]{455},   m[r28{0} - 520]=m[r28{0} - 520]{455},
                m[r28{0} - 572]=m[r28{0} - 572]{455},   m[r28{0} - 576]=m[r28{0} - 576]{455},
                m[r28{0} - 580]=m[r28{0} - 580]{455},   m[r28{0} - 4]=m[r28{0} - 4]{2222},
                m[r28{0} - 8]=m[r28{0} - 8]{2223},   m[r28{0} - 12]=m[r28{0} - 12]{2224},
                m[r28{0} - 16]=m[r28{0} - 16]{2225},   m[r28{0} - 520]=m[r28{0} - 520]{2226},
                m[r28{0} - 572]=m[r28{0} - 572]{2227},   m[r28{0} - 576]=m[r28{0} - 576]{2228},
                m[r28{0} - 580]=m[r28{0} - 580]{2229},   m[r28{0} - 864]=m[r28{0} - 864]{2243},   <all>=<all>{455},
                tmp1=(r28{1946} - 8) + 12,   tmpb=tmpb{2000},   tmph=tmph{1952},   %flags=LOGICALFLAGS32( 0 ),
                %ZF=LOGICALFLAGS32( 0 ),   %CF=LOGICALFLAGS32( 0 )
              Live variables: eax in proc proc18
result:    0 *u32* eax := -
dest is not lib
call: 1075 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* m[esp_18 - 4] := m[esp_18 - 4]
                *union* m[esp_18] := m[esp_18]
              )
              Reaching definitions: r6=truncu(32,16,r29{1947} - 488),   r8=truncu(32,8,r24{1025} - 1),
                r9=truncu(32,8,r25{2012} + 1),   r10=truncu(32,8,r26{1069}),   r24=r24{1025} - 1,   r25=r25{2012} + 1,
                r26=r26{1069},   r27=r27{1945},   r28=r28{1946} - 8,   r29=r29{1947},   r30=r29{1947} - 488,
                r31=r31{1949},   m[r28{0} - 4]=m[r28{0} - 4]{455},   m[r28{0} - 8]=m[r28{0} - 8]{455},
                m[r28{0} - 12]=m[r28{0} - 12]{455},   m[r28{0} - 16]=m[r28{0} - 16]{455},
                m[r28{0} - 520]=m[r28{0} - 520]{455},   m[r28{0} - 572]=m[r28{0} - 572]{455},
                m[r28{0} - 576]=m[r28{0} - 576]{455},   m[r28{0} - 580]=m[r28{0} - 580]{455},
                m[r28{0} - 4]=m[r28{0} - 4]{2222},   m[r28{0} - 8]=m[r28{0} - 8]{2223},
                m[r28{0} - 12]=m[r28{0} - 12]{2224},   m[r28{0} - 16]=m[r28{0} - 16]{2225},
                m[r28{0} - 520]=m[r28{0} - 520]{2226},   m[r28{0} - 572]=m[r28{0} - 572]{2227},
                m[r28{0} - 576]=m[r28{0} - 576]{2228},   m[r28{0} - 580]=m[r28{0} - 580]{2229},
                m[r28{0} - 864]=m[r28{0} - 864]{2243},   <all>=<all>{455},   tmp1=(r24{1025} - r25{2012}) - 2,
                tmpb=tmpb{2024},   tmph=tmph{1952},
                %flags=SUBFLAGS32( r24{1025} - 1, r25{2012} + 1, (r24{1025} - r25{2012}) - 2 ),   %ZF=%ZF{2026},
                %CF=%CF{2027}
              Live variables: eax in proc proc18
result:    0 *32* eax := -
dest is not lib
call: 1091 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL memset(
                *v** m[esp_18 - 4] := m[esp_18 - 4]
                *j32* m[esp_18 + 4] := m[esp_18 + 4]
                *union* m[esp_18] := m[esp_18]
              )
              Reaching definitions: r6=truncu(32,16,r29{1947} - 488),   r8=0,   r9=255,   r10=truncu(32,8,r26{1069}),
                r24=0,   r25=255,   r26=r26{1075},   r27=r27{1945},   r28=r28{1946} - 8,   r29=r29{1947},
                r30=r29{1947} - 488,   r31=r31{1949},   m[r28{0} - 4]=m[r28{0} - 4]{455},
                m[r28{0} - 8]=m[r28{0} - 8]{455},   m[r28{0} - 12]=m[r28{0} - 12]{455},
                m[r28{0} - 16]=m[r28{0} - 16]{455},   m[r28{0} - 520]=m[r28{0} - 520]{455},
                m[r28{0} - 572]=m[r28{0} - 572]{455},   m[r28{0} - 576]=m[r28{0} - 576]{455},
                m[r28{0} - 580]=m[r28{0} - 580]{455},   m[r28{0} - 4]=m[r28{0} - 4]{2222},
                m[r28{0} - 8]=m[r28{0} - 8]{2223},   m[r28{0} - 12]=m[r28{0} - 12]{2224},
                m[r28{0} - 16]=m[r28{0} - 16]{2225},   m[r28{0} - 520]=m[r28{0} - 520]{2226},
                m[r28{0} - 572]=m[r28{0} - 572]{2227},   m[r28{0} - 576]=m[r28{0} - 576]{2228},
                m[r28{0} - 580]=m[r28{0} - 580]{2229},   m[r28{0} - 864]=m[r28{0} - 864]{2243},   <all>=<all>{455},
                tmp1=(r28{1946} - 8) + 12,   tmpb=tmpb{2024},   tmph=tmph{1952},   %flags=LOGICALFLAGS32( 0 ),
                %ZF=LOGICALFLAGS32( 0 ),   %CF=LOGICALFLAGS32( 0 )
              Live variables:  in proc proc18
dest is not lib
call: 1096 {*u32* eax, *v* ecx, *j32* edx, *v* esp} := CALL strlen(
                *[c]** m[esp_18 - 4] := m[esp_18 - 4]
              )
              Reaching definitions: r6=truncu(32,16,r29{1947} - 488),   r8=0,   r9=255,   r10=truncu(32,8,r26{1069}),
                r24=r24{1091},   r25=r25{1091},   r26=r26{1091},   r27=r27{1945},   r28=r28{1946} - 8,   r29=r29{1947},
                r30=r29{1947} - 488,   r31=r31{1949},   m[r28{0} - 4]=m[r28{0} - 4]{455},
                m[r28{0} - 8]=m[r28{0} - 8]{455},   m[r28{0} - 12]=m[r28{0} - 12]{455},
                m[r28{0} - 16]=m[r28{0} - 16]{455},   m[r28{0} - 520]=m[r28{0} - 520]{455},
                m[r28{0} - 572]=m[r28{0} - 572]{455},   m[r28{0} - 576]=m[r28{0} - 576]{455},
                m[r28{0} - 580]=m[r28{0} - 580]{455},   m[r28{0} - 4]=m[r28{0} - 4]{2222},
                m[r28{0} - 8]=m[r28{0} - 8]{2223},   m[r28{0} - 12]=m[r28{0} - 12]{2224},
                m[r28{0} - 16]=m[r28{0} - 16]{2225},   m[r28{0} - 520]=m[r28{0} - 520]{2226},
                m[r28{0} - 572]=m[r28{0} - 572]{2227},   m[r28{0} - 576]=m[r28{0} - 576]{2228},
                m[r28{0} - 580]=m[r28{0} - 580]{2229},   m[r28{0} - 864]=m[r28{0} - 864]{2243},   <all>=<all>{455},
                tmp1=(r28{1946} - 8) + 12,   tmpb=tmpb{2024},   tmph=tmph{1952},   %flags=LOGICALFLAGS32( 0 ),
                %ZF=LOGICALFLAGS32( 0 ),   %CF=LOGICALFLAGS32( 0 )
              Live variables: eax in proc proc18
result:    0 *u32* eax := -
dest is not lib
call: 1149 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* m[esp_18 - 4] := m[esp_18 - 4]
                *union* m[esp_18] := m[esp_18]
              )
              Reaching definitions: r6=0,   r8=truncu(32,8,r24{1096} - 1),   r9=truncu(32,8,r25{1143}),   r10=r10{2044}
                r24=r24{1096} - 1,   r25=r25{1143},   r26=r26{2046},   r27=r27{1945},   r28=r28{1946} - 8,
                r29=r29{1947},   r30=0,   r31=r31{1949},   m[r28{0} - 4]=m[r28{0} - 4]{455},
                m[r28{0} - 8]=m[r28{0} - 8]{455},   m[r28{0} - 12]=m[r28{0} - 12]{455},
                m[r28{0} - 16]=m[r28{0} - 16]{455},   m[r28{0} - 520]=m[r28{0} - 520]{455},
                m[r28{0} - 572]=m[r28{0} - 572]{455},   m[r28{0} - 576]=m[r28{0} - 576]{455},
                m[r28{0} - 580]=m[r28{0} - 580]{455},   m[r28{0} - 4]=m[r28{0} - 4]{2222},
                m[r28{0} - 8]=m[r28{0} - 8]{2223},   m[r28{0} - 12]=m[r28{0} - 12]{2224},
                m[r28{0} - 16]=m[r28{0} - 16]{2225},   m[r28{0} - 520]=m[r28{0} - 520]{2226},
                m[r28{0} - 572]=m[r28{0} - 572]{2227},   m[r28{0} - 576]=m[r28{0} - 576]{2228},
                m[r28{0} - 580]=m[r28{0} - 580]{2229},   m[r28{0} - 864]=m[r28{0} - 864]{2243},   <all>=<all>{455},
                tmp1=(r24{1096} - r25{2036}) - 2,   tmpb=tmpb{2048},   tmph=tmph{1952},   %flags=LOGICALFLAGS32( 0 ),
                %ZF=LOGICALFLAGS32( 0 ),   %CF=LOGICALFLAGS32( 0 )
              Live variables: eax in proc proc18
result:    0 *32* eax := -
dest is not lib
call: 1162 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL memset(
                *v** m[esp_18 - 4] := m[esp_18 - 4]
                *j32* m[esp_18 + 4] := m[esp_18 + 4]
                *union* m[esp_18] := m[esp_18]
              )
              Reaching definitions: r6=0,   r8=255,   r9=truncu(32,8,r25{1143}),   r10=r10{2044},   r24=255,
                r25=r25{1149},   r26=r26{1149},   r27=r27{1945},   r28=r28{1946} - 8,   r29=r29{1947},   r30=0,
                r31=r31{1949},   m[r28{0} - 4]=m[r28{0} - 4]{455},   m[r28{0} - 8]=m[r28{0} - 8]{455},
                m[r28{0} - 12]=m[r28{0} - 12]{455},   m[r28{0} - 16]=m[r28{0} - 16]{455},
                m[r28{0} - 520]=m[r28{0} - 520]{455},   m[r28{0} - 572]=m[r28{0} - 572]{455},
                m[r28{0} - 576]=m[r28{0} - 576]{455},   m[r28{0} - 580]=m[r28{0} - 580]{455},
                m[r28{0} - 4]=m[r28{0} - 4]{2222},   m[r28{0} - 8]=m[r28{0} - 8]{2223},
                m[r28{0} - 12]=m[r28{0} - 12]{2224},   m[r28{0} - 16]=m[r28{0} - 16]{2225},
                m[r28{0} - 520]=m[r28{0} - 520]{2226},   m[r28{0} - 572]=m[r28{0} - 572]{2227},
                m[r28{0} - 576]=m[r28{0} - 576]{2228},   m[r28{0} - 580]=m[r28{0} - 580]{2229},
                m[r28{0} - 864]=m[r28{0} - 864]{2243},   <all>=<all>{455},   tmp1=(r28{1946} - 8) + 12,
                tmpb=tmpb{2048},   tmph=tmph{1952},   %flags=SUBFLAGS32( r28{1946} + 4, 8, r28{1946} - 4 ),
                %ZF=(r28{1946} - 4) = 0,   %CF=(r28{1946} + 4) <u 8
              Live variables:  in proc proc18
dest is not lib
call: 1167 {*u32* eax, *v* ecx, *j32* edx, *v* esp} := CALL strlen(
                *[c]** m[esp_18 - 4] := m[esp_18 - 4]
              )
              Reaching definitions: r6=0,   r8=255,   r9=truncu(32,8,r25{1143}),   r10=r10{2044},   r24=r24{1162},
                r25=r25{1162},   r26=r26{1162},   r27=r27{1945},   r28=r28{1946} - 8,   r29=r29{1947},   r30=0,
                r31=r31{1949},   m[r28{0} - 4]=m[r28{0} - 4]{455},   m[r28{0} - 8]=m[r28{0} - 8]{455},
                m[r28{0} - 12]=m[r28{0} - 12]{455},   m[r28{0} - 16]=m[r28{0} - 16]{455},
                m[r28{0} - 520]=m[r28{0} - 520]{455},   m[r28{0} - 572]=m[r28{0} - 572]{455},
                m[r28{0} - 576]=m[r28{0} - 576]{455},   m[r28{0} - 580]=m[r28{0} - 580]{455},
                m[r28{0} - 4]=m[r28{0} - 4]{2222},   m[r28{0} - 8]=m[r28{0} - 8]{2223},
                m[r28{0} - 12]=m[r28{0} - 12]{2224},   m[r28{0} - 16]=m[r28{0} - 16]{2225},
                m[r28{0} - 520]=m[r28{0} - 520]{2226},   m[r28{0} - 572]=m[r28{0} - 572]{2227},
                m[r28{0} - 576]=m[r28{0} - 576]{2228},   m[r28{0} - 580]=m[r28{0} - 580]{2229},
                m[r28{0} - 864]=m[r28{0} - 864]{2243},   <all>=<all>{455},   tmp1=(r28{1946} - 8) + 12,
                tmpb=tmpb{2048},   tmph=tmph{1952},   %flags=SUBFLAGS32( r28{1946} + 4, 8, r28{1946} - 4 ),
                %ZF=(r28{1946} - 4) = 0,   %CF=(r28{1946} + 4) <u 8
              Live variables: eax in proc proc18
result:    0 *u32* eax := -
dest is not lib
call: 1219 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* m[esp_18 - 4] := m[esp_18 - 4]
                *union* m[esp_18] := m[esp_18]
              )
              Reaching definitions: r6=255,   r8=truncu(32,8,r24{1213}),   r9=truncu(32,8,r25{2060} + 1),
                r10=r10{2068},   r24=r24{1213},   r25=r25{2060} + 1,   r26=r26{2070},   r27=r27{1945},
                r28=r28{1946} - 8,   r29=r29{1947},   r30=255,   r31=r31{1949},   m[r28{0} - 4]=m[r28{0} - 4]{455},
                m[r28{0} - 8]=m[r28{0} - 8]{455},   m[r28{0} - 12]=m[r28{0} - 12]{455},
                m[r28{0} - 16]=m[r28{0} - 16]{455},   m[r28{0} - 520]=m[r28{0} - 520]{455},
                m[r28{0} - 572]=m[r28{0} - 572]{455},   m[r28{0} - 576]=m[r28{0} - 576]{455},
                m[r28{0} - 580]=m[r28{0} - 580]{455},   m[r28{0} - 4]=m[r28{0} - 4]{2222},
                m[r28{0} - 8]=m[r28{0} - 8]{2223},   m[r28{0} - 12]=m[r28{0} - 12]{2224},
                m[r28{0} - 16]=m[r28{0} - 16]{2225},   m[r28{0} - 520]=m[r28{0} - 520]{2226},
                m[r28{0} - 572]=m[r28{0} - 572]{2227},   m[r28{0} - 576]=m[r28{0} - 576]{2228},
                m[r28{0} - 580]=m[r28{0} - 580]{2229},   m[r28{0} - 864]=m[r28{0} - 864]{2243},   <all>=<all>{455},
                tmp1=(r24{1167} - r25{2060}) - 2,   tmpb=tmpb{2072},   tmph=tmph{1952},
                %flags=SUBFLAGS32( r24{1167} - 1, r25{2060} + 1, (r24{1167} - r25{2060}) - 2 ),   %ZF=%ZF{2074},
                %CF=%CF{2075}
              Live variables: eax in proc proc18
result:    0 *32* eax := -
dest is not lib
call: 1233 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL memset(
                *v** m[esp_18 - 4] := m[esp_18 - 4]
                *j32* m[esp_18 + 4] := m[esp_18 + 4]
                *union* m[esp_18] := m[esp_18]
              )
              Reaching definitions: r6=255,   r8=truncu(32,8,r24{1213}),   r9=truncu(32,8,r25{2060} + 1),   r10=0,
                r24=r24{1219},   r25=r25{1219},   r26=0,   r27=r27{1945},   r28=r28{1946} - 8,   r29=r29{1947},
                r30=255,   r31=r31{1949},   m[r28{0} - 4]=m[r28{0} - 4]{455},   m[r28{0} - 8]=m[r28{0} - 8]{455},
                m[r28{0} - 12]=m[r28{0} - 12]{455},   m[r28{0} - 16]=m[r28{0} - 16]{455},
                m[r28{0} - 520]=m[r28{0} - 520]{455},   m[r28{0} - 572]=m[r28{0} - 572]{455},
                m[r28{0} - 576]=m[r28{0} - 576]{455},   m[r28{0} - 580]=m[r28{0} - 580]{455},
                m[r28{0} - 4]=m[r28{0} - 4]{2222},   m[r28{0} - 8]=m[r28{0} - 8]{2223},
                m[r28{0} - 12]=m[r28{0} - 12]{2224},   m[r28{0} - 16]=m[r28{0} - 16]{2225},
                m[r28{0} - 520]=m[r28{0} - 520]{2226},   m[r28{0} - 572]=m[r28{0} - 572]{2227},
                m[r28{0} - 576]=m[r28{0} - 576]{2228},   m[r28{0} - 580]=m[r28{0} - 580]{2229},
                m[r28{0} - 864]=m[r28{0} - 864]{2243},   <all>=<all>{455},   tmp1=(r28{1946} - 8) + 12,
                tmpb=tmpb{2072},   tmph=tmph{1952},   %flags=LOGICALFLAGS32( 0 ),   %ZF=LOGICALFLAGS32( 0 ),
                %CF=LOGICALFLAGS32( 0 )
              Live variables:  in proc proc18
dest is not lib
call: 1238 {*u32* eax, *v* ecx, *j32* edx, *v* esp} := CALL strlen(
                *[c]** m[esp_18 - 4] := m[esp_18 - 4]
              )
              Reaching definitions: r6=255,   r8=truncu(32,8,r24{1213}),   r9=truncu(32,8,r25{2060} + 1),   r10=0,
                r24=r24{1233},   r25=r25{1233},   r26=r26{1233},   r27=r27{1945},   r28=r28{1946} - 8,   r29=r29{1947},
                r30=255,   r31=r31{1949},   m[r28{0} - 4]=m[r28{0} - 4]{455},   m[r28{0} - 8]=m[r28{0} - 8]{455},
                m[r28{0} - 12]=m[r28{0} - 12]{455},   m[r28{0} - 16]=m[r28{0} - 16]{455},
                m[r28{0} - 520]=m[r28{0} - 520]{455},   m[r28{0} - 572]=m[r28{0} - 572]{455},
                m[r28{0} - 576]=m[r28{0} - 576]{455},   m[r28{0} - 580]=m[r28{0} - 580]{455},
                m[r28{0} - 4]=m[r28{0} - 4]{2222},   m[r28{0} - 8]=m[r28{0} - 8]{2223},
                m[r28{0} - 12]=m[r28{0} - 12]{2224},   m[r28{0} - 16]=m[r28{0} - 16]{2225},
                m[r28{0} - 520]=m[r28{0} - 520]{2226},   m[r28{0} - 572]=m[r28{0} - 572]{2227},
                m[r28{0} - 576]=m[r28{0} - 576]{2228},   m[r28{0} - 580]=m[r28{0} - 580]{2229},
                m[r28{0} - 864]=m[r28{0} - 864]{2243},   <all>=<all>{455},   tmp1=(r28{1946} - 8) + 12,
                tmpb=tmpb{2072},   tmph=tmph{1952},   %flags=LOGICALFLAGS32( 0 ),   %ZF=LOGICALFLAGS32( 0 ),
                %CF=LOGICALFLAGS32( 0 )
              Live variables: eax in proc proc18
result:    0 *u32* eax := -
dest is not lib
call: 1288 {*v** eax_1, *v* ecx, *v** edx_1, *v* esp} := CALL GetProcAddress(
                *HANDLE* m[esp_18 - 4] := m[esp_18 - 4]
                *union* m[esp_18] := m[esp_18]
              )
              Reaching definitions: r6=255,   r8=truncu(32,8,r24{1238} - 1),   r9=truncu(32,8,r25{1282}),
                r10=r10{2092},   r24=r24{1238} - 1,   r25=r25{1282},   r26=r26{2094},   r27=r27{1945},
                r28=r28{1946} - 8,   r29=r29{1947},   r30=255,   r31=r31{1949},   m[r28{0} - 4]=m[r28{0} - 4]{455},
                m[r28{0} - 8]=m[r28{0} - 8]{455},   m[r28{0} - 12]=m[r28{0} - 12]{455},
                m[r28{0} - 16]=m[r28{0} - 16]{455},   m[r28{0} - 520]=m[r28{0} - 520]{455},
                m[r28{0} - 572]=m[r28{0} - 572]{455},   m[r28{0} - 576]=m[r28{0} - 576]{455},
                m[r28{0} - 580]=m[r28{0} - 580]{455},   m[r28{0} - 4]=m[r28{0} - 4]{2222},
                m[r28{0} - 8]=m[r28{0} - 8]{2223},   m[r28{0} - 12]=m[r28{0} - 12]{2224},
                m[r28{0} - 16]=m[r28{0} - 16]{2225},   m[r28{0} - 520]=m[r28{0} - 520]{2226},
                m[r28{0} - 572]=m[r28{0} - 572]{2227},   m[r28{0} - 576]=m[r28{0} - 576]{2228},
                m[r28{0} - 580]=m[r28{0} - 580]{2229},   m[r28{0} - 864]=m[r28{0} - 864]{2243},   <all>=<all>{455},
                tmp1=(r24{1238} - r25{2084}) - 2,   tmpb=tmpb{2096},   tmph=tmph{1952},
                %flags=SUBFLAGS32( r24{1238} - 1, r25{2084} + 1, (r24{1238} - r25{2084}) - 2 ),   %ZF=%ZF{2098},
                %CF=%CF{2099}
              Live variables: eax_1 in proc proc18
result:    0 *v** eax_1 := -
dest is not lib
call: 1395 {*32* eax, *j32* ecx, *v* edx, *v* esp} := CALL (
              )
              Reaching definitions: r6=truncu(32,16,r30{1372} + 104),   r8=4,   r9=176,
                r10=truncu(32,8,r29{1371} - 508),   r24=4,   r25=0x4013b0,   r26=r29{1371} - 508,   r27=r27{1371},
                r28=r28{1371} - 24,   r29=r29{1371},   r30=r30{1372} + 104,   r31=r31{1371},
                m[r28{0} - 4]=m[r28{0} - 4]{1371},   m[r28{0} - 8]=m[r28{0} - 8]{1371},
                m[r28{0} - 12]=m[r28{0} - 12]{1371},   m[r28{0} - 16]=m[r28{0} - 16]{1371},
                m[r28{0} - 520]=m[r28{0} - 520]{1371},   m[r28{0} - 572]=m[r28{0} - 572]{1371},
                m[r28{0} - 576]=m[r28{0} - 576]{1371},   m[r28{0} - 580]=m[r28{0} - 580]{1371},
                m[r28{0} - 4]=m[r28{0} - 4]{1371},   m[r28{0} - 8]=m[r28{0} - 8]{1371},
                m[r28{0} - 12]=m[r28{0} - 12]{1371},   m[r28{0} - 16]=m[r28{0} - 16]{1371},
                m[r28{0} - 520]=m[r28{0} - 520]{1371},   m[r28{0} - 572]=m[r28{0} - 572]{1371},
                m[r28{0} - 576]=m[r28{0} - 576]{1371},   m[r28{0} - 580]=m[r28{0} - 580]{1371},
                m[r28{0} - 864]=m[r28{0} - 864]{1371},   <all>=<all>{1371},   tmp1=r30{1372},   tmpb=tmpb{1371},
                tmph=tmph{1371},   %flags=ADDFLAGS32( r30{1372}, 104, r30{1372} + 104 ),
                %ZF=ADDFLAGS32( r30{1372}, 104, r30{1372} + 104 ),   %CF=ADDFLAGS32( r30{1372}, 104, r30{1372} + 104 )
              Live variables:  in proc proc18
dest is not lib
call: 1437 {*j32* eax, *v** ecx_1, *v** edx, *v* esp} := CALL NtYieldExecution(
              )
              Reaching definitions: r6=truncu(32,16,r30{2117} - 1),   r8=truncu(32,8,r24{1426}),
                r9=truncu(32,8,r31{1371} + 10),   r10=r10{2112},   r24=r24{1426},   r25=r25{2114},   r26=r26{2115},
                r27=r27{1371},   r28=(r28{1371} - 40) - 4,   r29=r29{1371},   r30=r30{2117} - 1,   r31=r31{1371},
                m[r28{0} - 4]=m[r28{0} - 4]{1371},   m[r28{0} - 8]=m[r28{0} - 8]{1371},
                m[r28{0} - 12]=m[r28{0} - 12]{1371},   m[r28{0} - 16]=m[r28{0} - 16]{1371},
                m[r28{0} - 520]=m[r28{0} - 520]{1371},   m[r28{0} - 572]=m[r28{0} - 572]{1371},
                m[r28{0} - 576]=m[r28{0} - 576]{1371},   m[r28{0} - 580]=m[r28{0} - 580]{1371},
                m[r28{0} - 4]=m[r28{0} - 4]{1371},   m[r28{0} - 8]=m[r28{0} - 8]{1371},
                m[r28{0} - 12]=m[r28{0} - 12]{1371},   m[r28{0} - 16]=m[r28{0} - 16]{1371},
                m[r28{0} - 520]=m[r28{0} - 520]{1371},   m[r28{0} - 572]=m[r28{0} - 572]{1371},
                m[r28{0} - 576]=m[r28{0} - 576]{1371},   m[r28{0} - 580]=m[r28{0} - 580]{1371},
                m[r28{0} - 864]=m[r28{0} - 864]{1371},   <all>=<all>{1371},   tmp1=r30{2117},   tmpb=tmpb{1371},
                tmph=tmph{1371},   %flags=LOGICALFLAGS8( m[(r30{2117} - 1) + r26{2115}] ),
                %ZF=LOGICALFLAGS8( m[(r30{2117} - 1) + r26{2115}] ),
                %CF=LOGICALFLAGS8( m[(r30{2117} - 1) + r26{2115}] )
              Live variables: eax,  ecx_1,  edx in proc proc18
result:    0 *j32* eax := -
result:    0 *v** ecx_1 := -
result:    0 *v** edx := -
dest is not lib
call: 1445 {*v** ebx, *32** esp_13, *32** ebp, *j32** edi_1} := CALL proc35(<all>)
              Reaching definitions: r6=r6{2122},   r8=r8{2123},   r9=truncu(32,8,edi + 10),   r10=r10{2124},
                r24=r24{2125},   r25=r25{2126},   r26=r26{2127},   r27=r27{1371},   r28=(r28{1371} - 40) - 4,
                r29=r29{1371},   r30=r30{2129},   r31=r31{1371},   m[r28{0} - 4]=m[esp - 4]{1371},
                m[r28{0} - 8]=m[esp - 8]{1371},   m[r28{0} - 12]=m[esp - 12]{1371},   m[r28{0} - 16]=m[esp - 16]{1371},
                m[r28{0} - 520]=m[esp - 520]{1371},   m[r28{0} - 572]=m[esp - 572]{1371},
                m[r28{0} - 576]=m[esp - 576]{1371},   m[r28{0} - 580]=m[esp - 580]{1371},
                m[r28{0} - 4]=m[r28{0} - 4]{1371},   m[r28{0} - 8]=m[r28{0} - 8]{1371},
                m[r28{0} - 12]=m[r28{0} - 12]{1371},   m[r28{0} - 16]=m[r28{0} - 16]{1371},
                m[r28{0} - 520]=m[r28{0} - 520]{1371},   m[r28{0} - 572]=m[r28{0} - 572]{1371},
                m[r28{0} - 576]=m[r28{0} - 576]{1371},   m[r28{0} - 580]=m[r28{0} - 580]{1371},
                m[r28{0} - 864]=m[esp - 864]{1371},   <all>=<all>{1371},   tmp1=tmp1{2130},   tmpb=tmpb{1371},
                tmph=tmph{1371},   %flags=%flags{2131},   %ZF=%ZF{2132},   %CF=%CF{2133}
              Live variables: ebp,  ebx,  edi_1,  esp_13,  local0,  local1,  local2,  local3,  local4,  local5,  local6,  local7,  local8 in proc proc18
result:    0 *v** ebx := -
result:    0 *32** esp_13 := -
result:    0 *32** ebp := -
result:    0 *j32** edi_1 := -
dest is not lib
call: 1504 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL HeapCreate(
              )
              Reaching definitions: r6=8,   r8=0,   r9=r9{1445},   r10=255,   r24=0,   r25=r25{1445},   r26=255,
                r27=r27{1445},   r28=r28{1445} - 8,   r29=r29{1445},   r30=8,   r31=r31{1445},
                m[r28{0} - 4]=m[r28{0} - 4]{1445},   m[r28{0} - 8]=m[r28{0} - 8]{1445},
                m[r28{0} - 12]=m[r28{0} - 12]{1445},   m[r28{0} - 16]=m[r28{0} - 16]{1445},
                m[r28{0} - 520]=m[r28{0} - 520]{1445},   m[r28{0} - 572]=m[r28{0} - 572]{1445},
                m[r28{0} - 576]=m[r28{0} - 576]{1445},   m[r28{0} - 580]=m[r28{0} - 580]{1445},
                m[r28{0} - 4]=m[r28{0} - 4]{1445},   m[r28{0} - 8]=m[r28{0} - 8]{1445},
                m[r28{0} - 12]=m[r28{0} - 12]{1445},   m[r28{0} - 16]=m[r28{0} - 16]{1445},
                m[r28{0} - 520]=m[r28{0} - 520]{1445},   m[r28{0} - 572]=m[r28{0} - 572]{1445},
                m[r28{0} - 576]=m[r28{0} - 576]{1445},   m[r28{0} - 580]=m[r28{0} - 580]{1445},
                m[r28{0} - 864]=m[r28{0} - 864]{1445},   <all>=<all>{1445},   tmp1=r28{1445},   tmpb=tmpb{1449},
                tmph=tmph{1445},   %flags=LOGICALFLAGS32( 0 ),   %ZF=LOGICALFLAGS32( 0 ),   %CF=LOGICALFLAGS32( 0 )
              Live variables: eax in proc proc18
result:    0 *32* eax := -
dest is not lib
call: 1516 {*32* eax_4, *v* ecx, *v* edx, *v* esp} := CALL HeapAlloc(
                *HANDLE* m[esp_13 - 16] := m[esp_13 - 16]
                *DWORD* m[esp_13 - 12] := m[esp_13 - 12]
                *DWORD* m[esp_13 - 8] := m[esp_13 - 8]
              )
              Reaching definitions: r6=8,   r8=0,   r9=truncu(32,8,r25{1505}),   r10=255,   r24=r24{1504},
                r25=r25{1505},   r26=r26{1504},   r27=r27{1445},   r28=r28{1445} - 20,   r29=r29{1445},   r30=8,
                r31=r31{1445},   m[r28{0} - 4]=m[r28{0} - 4]{1445},   m[r28{0} - 8]=m[r28{0} - 8]{1445},
                m[r28{0} - 12]=m[r28{0} - 12]{1445},   m[r28{0} - 16]=m[r28{0} - 16]{1445},
                m[r28{0} - 520]=m[r28{0} - 520]{1445},   m[r28{0} - 572]=m[r28{0} - 572]{1445},
                m[r28{0} - 576]=m[r28{0} - 576]{1445},   m[r28{0} - 580]=m[r28{0} - 580]{1445},
                m[r28{0} - 4]=m[r28{0} - 4]{1445},   m[r28{0} - 8]=m[r28{0} - 8]{1445},
                m[r28{0} - 12]=m[r28{0} - 12]{1445},   m[r28{0} - 16]=m[r28{0} - 16]{1445},
                m[r28{0} - 520]=m[r28{0} - 520]{1445},   m[r28{0} - 572]=m[r28{0} - 572]{1445},
                m[r28{0} - 576]=m[r28{0} - 576]{1445},   m[r28{0} - 580]=m[r28{0} - 580]{1445},
                m[r28{0} - 864]=m[r28{0} - 864]{1445},   <all>=<all>{1445},   tmp1=r28{1445} - 4,   tmpb=tmpb{1449},
                tmph=tmph{1445},   %flags=SUBFLAGS32( r28{1445} - 4, 12, r28{1445} - 16 ),   %ZF=(r28{1445} - 16) = 0,
                %CF=(r28{1445} - 4) <u 12
              Live variables: eax_4 in proc proc18
result:    0 *32* eax_4 := -
dest is not lib
call: 1538 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL memset(
                *v** m[esp_13 - 16] := m[esp_13 - 16]
                *i32* m[esp_13 - 12] := m[esp_13 - 12]
                *j32* m[esp_13 - 8] := m[esp_13 - 8]
              )
              Reaching definitions: r6=truncu(32,16,r24{1516}),   r8=truncu(32,8,r24{1520}),   r9=0,   r10=255,
                r24=r24{1520},   r25=0,   r26=255,   r27=r27{1445},   r28=r28{1445} - 20,   r29=r29{1445},
                r30=r24{1516},   r31=r31{1528},   m[r28{0} - 4]=m[r28{0} - 4]{1445},
                m[r28{0} - 8]=m[r28{0} - 8]{1445},   m[r28{0} - 12]=m[r28{0} - 12]{1445},
                m[r28{0} - 16]=m[r28{0} - 16]{1445},   m[r28{0} - 520]=m[r28{0} - 520]{1445},
                m[r28{0} - 572]=m[r28{0} - 572]{1445},   m[r28{0} - 576]=m[r28{0} - 576]{1445},
                m[r28{0} - 580]=m[r28{0} - 580]{1445},   m[r28{0} - 4]=m[r28{0} - 4]{1445},
                m[r28{0} - 8]=m[r28{0} - 8]{1445},   m[r28{0} - 12]=m[r28{0} - 12]{1445},
                m[r28{0} - 16]=m[r28{0} - 16]{1445},   m[r28{0} - 520]=m[r28{0} - 520]{1445},
                m[r28{0} - 572]=m[r28{0} - 572]{1445},   m[r28{0} - 576]=m[r28{0} - 576]{1445},
                m[r28{0} - 580]=m[r28{0} - 580]{1445},   m[r28{0} - 864]=m[r28{0} - 864]{1445},   <all>=<all>{1445},
                tmp1=r28{1445} - 4,   tmpb=tmpb{1449},   tmph=tmph{1445},   %flags=LOGICALFLAGS32( 0 ),
                %ZF=LOGICALFLAGS32( 0 ),   %CF=LOGICALFLAGS32( 0 )
              Live variables:  in proc proc18
dest is not lib
call: 1543 {*u32* eax, *v* ecx, *j32* edx, *v* esp} := CALL strlen(
                *[c]** m[esp_13 - 16] := m[esp_13 - 16]
              )
              Reaching definitions: r6=truncu(32,16,r24{1516}),   r8=truncu(32,8,r24{1520}),   r9=0,   r10=255,
                r24=r24{1538},   r25=r25{1538},   r26=r26{1538},   r27=r27{1445},   r28=r28{1445} - 20,   r29=r29{1445}
                r30=r24{1516},   r31=r31{1528},   m[r28{0} - 4]=m[r28{0} - 4]{1445},
                m[r28{0} - 8]=m[r28{0} - 8]{1445},   m[r28{0} - 12]=m[r28{0} - 12]{1445},
                m[r28{0} - 16]=m[r28{0} - 16]{1445},   m[r28{0} - 520]=m[r28{0} - 520]{1445},
                m[r28{0} - 572]=m[r28{0} - 572]{1445},   m[r28{0} - 576]=m[r28{0} - 576]{1445},
                m[r28{0} - 580]=m[r28{0} - 580]{1445},   m[r28{0} - 4]=m[r28{0} - 4]{1445},
                m[r28{0} - 8]=m[r28{0} - 8]{1445},   m[r28{0} - 12]=m[r28{0} - 12]{1445},
                m[r28{0} - 16]=m[r28{0} - 16]{1445},   m[r28{0} - 520]=m[r28{0} - 520]{1445},
                m[r28{0} - 572]=m[r28{0} - 572]{1445},   m[r28{0} - 576]=m[r28{0} - 576]{1445},
                m[r28{0} - 580]=m[r28{0} - 580]{1445},   m[r28{0} - 864]=m[r28{0} - 864]{1445},   <all>=<all>{1445},
                tmp1=r28{1445} - 4,   tmpb=tmpb{1449},   tmph=tmph{1445},   %flags=LOGICALFLAGS32( 0 ),
                %ZF=LOGICALFLAGS32( 0 ),   %CF=LOGICALFLAGS32( 0 )
              Live variables: eax in proc proc18
result:    0 *u32* eax := -
dest is not lib
call: 1589 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* m[esp_13 - 16] := m[esp_13 - 16]
                *c** m[esp_13 - 12] := m[esp_13 - 12]
              )
              Reaching definitions: r6=truncu(32,16,r24{1516}),   r8=truncu(32,8,r24{1583}),
                r9=truncu(32,8,r25{2175} + 1),   r10=r10{2167},   r24=r24{1583},   r25=r25{2175} + 1,   r26=r26{2168},
                r27=r27{1445},   r28=r28{1445} - 20,   r29=r29{1445},   r30=r24{1516},   r31=r31{1528},
                m[r28{0} - 4]=m[r28{0} - 4]{1445},   m[r28{0} - 8]=m[r28{0} - 8]{1445},
                m[r28{0} - 12]=m[r28{0} - 12]{1445},   m[r28{0} - 16]=m[r28{0} - 16]{1445},
                m[r28{0} - 520]=m[r28{0} - 520]{1445},   m[r28{0} - 572]=m[r28{0} - 572]{1445},
                m[r28{0} - 576]=m[r28{0} - 576]{1445},   m[r28{0} - 580]=m[r28{0} - 580]{1445},
                m[r28{0} - 4]=m[r28{0} - 4]{1445},   m[r28{0} - 8]=m[r28{0} - 8]{1445},
                m[r28{0} - 12]=m[r28{0} - 12]{1445},   m[r28{0} - 16]=m[r28{0} - 16]{1445},
                m[r28{0} - 520]=m[r28{0} - 520]{1445},   m[r28{0} - 572]=m[r28{0} - 572]{1445},
                m[r28{0} - 576]=m[r28{0} - 576]{1445},   m[r28{0} - 580]=m[r28{0} - 580]{1445},
                m[r28{0} - 864]=m[r28{0} - 864]{1445},   <all>=<all>{1445},   tmp1=(r24{1543} - r25{2175}) - 2,
                tmpb=tmpb{2169},   tmph=tmph{1445},
                %flags=SUBFLAGS32( r24{1543} - 1, r25{2175} + 1, (r24{1543} - r25{2175}) - 2 ),
                %ZF=((r24{1543} - r25{2175}) - 2) = 0,   %CF=(r24{1543} - 1) <u (r25{2175} + 1)
              Live variables: eax in proc proc18
result:    0 *32* eax := -
dest is not lib
call: 1486 {*u32* eax, *j32* ecx, *32* edx, *v* esp} := CALL wcslen(
                *union* m[esp] := m[esp]
              )
              Reaching definitions: r6=r6{2152},   r8=truncu(32,8,r24{1478}),   r9=truncu(32,8,r25{1480}),
                r10=r10{2155},   r24=r24{1478},   r25=r25{1480},   r26=r26{2158},   r27=r27{2159},   r28=r28{2142} - 4,
                r29=r29{2143},   r30=r30{2161},   r31=r31{2145},   m[r28{0} - 4]=m[r28{0} - 4]{1445},
                m[r28{0} - 8]=m[r28{0} - 8]{1445},   m[r28{0} - 12]=m[r28{0} - 12]{1445},
                m[r28{0} - 16]=m[r28{0} - 16]{1445},   m[r28{0} - 520]=m[r28{0} - 520]{1445},
                m[r28{0} - 572]=m[r28{0} - 572]{1445},   m[r28{0} - 576]=m[r28{0} - 576]{1445},
                m[r28{0} - 580]=m[r28{0} - 580]{1445},   m[r28{0} - 4]=m[r28{0} - 4]{2230},
                m[r28{0} - 8]=m[r28{0} - 8]{2231},   m[r28{0} - 12]=m[r28{0} - 12]{2232},
                m[r28{0} - 16]=m[r28{0} - 16]{2233},   m[r28{0} - 520]=m[r28{0} - 520]{2234},
                m[r28{0} - 572]=m[r28{0} - 572]{2235},   m[r28{0} - 576]=m[r28{0} - 576]{2236},
                m[r28{0} - 580]=m[r28{0} - 580]{2237},   m[r28{0} - 864]=m[r28{0} - 864]{2244},   <all>=<all>{1445},
                tmp1=tmp1{2162},   tmpb=tmpb{2147},   tmph=tmph{2163},   %flags=%flags{2164},   %ZF=%ZF{2165},
                %CF=%CF{2166}
              Live variables: eax in proc proc18
result:    0 *u32* eax := -
dest is not lib
call: 1465 {*32* eax, *j32* ecx, *v* edx, *v* esp} := CALL NtYieldExecution(
              )
              Reaching definitions: r6=r6{2152},   r8=truncu(32,8,r24{1478}),   r9=truncu(32,8,r25{1480}),
                r10=r10{2155},   r24=r24{1486},   r25=r25{1486},   r26=r26{1486},   r27=r27{2159},   r28=r28{2142} - 4,
                r29=r29{2143},   r30=r30{2161},   r31=r31{2145},   m[r28{0} - 4]=m[r28{0} - 4]{1445},
                m[r28{0} - 8]=m[r28{0} - 8]{1445},   m[r28{0} - 12]=m[r28{0} - 12]{1445},
                m[r28{0} - 16]=m[r28{0} - 16]{1445},   m[r28{0} - 520]=m[r28{0} - 520]{1445},
                m[r28{0} - 572]=m[r28{0} - 572]{1445},   m[r28{0} - 576]=m[r28{0} - 576]{1445},
                m[r28{0} - 580]=m[r28{0} - 580]{1445},   m[r28{0} - 4]=m[r28{0} - 4]{2230},
                m[r28{0} - 8]=m[r28{0} - 8]{2231},   m[r28{0} - 12]=m[r28{0} - 12]{2232},
                m[r28{0} - 16]=m[r28{0} - 16]{2233},   m[r28{0} - 520]=m[r28{0} - 520]{2234},
                m[r28{0} - 572]=m[r28{0} - 572]{2235},   m[r28{0} - 576]=m[r28{0} - 576]{2236},
                m[r28{0} - 580]=m[r28{0} - 580]{2237},   m[r28{0} - 864]=m[r28{0} - 864]{2244},   <all>=<all>{1445},
                tmp1=r24{1486} - r27{2159},   tmpb=tmpb{2147},   tmph=tmph{2163},
                %flags=SUBFLAGS32( r24{1486}, r27{2159}, r24{1486} - r27{2159} ),   %ZF=(r24{1486} - r27{2159}) = 0,
                %CF=r24{1486} <u r27{2159}
              Live variables:  in proc proc18
dest is not lib
call:  741 {*v* eax, *32* esi, *v* ecx, *v* edx, *32* ebx, *HWND** esp, *32** ebp, *32* edi} := CALL proc30(
              )
              Reaching definitions: r6=r6{1871},   r8=r8{1872},   r9=truncu(32,8,r25{1480}),   r10=r10{1873},
                r24=r24{1874},   r25=r25{1875},   r26=r26{1876},   r27=r27{2159},   r28=r28{2142} - 4,   r29=r29{2143},
                r30=r30{1878},   r31=r31{1879},   m[r28{0} - 4]=m[r28{0} - 4]{1445},
                m[r28{0} - 8]=m[r28{0} - 8]{1445},   m[r28{0} - 12]=m[r28{0} - 12]{1445},
                m[r28{0} - 16]=m[r28{0} - 16]{1445},   m[r28{0} - 520]=m[r28{0} - 520]{1445},
                m[r28{0} - 572]=m[r28{0} - 572]{1445},   m[r28{0} - 576]=m[r28{0} - 576]{1445},
                m[r28{0} - 580]=m[r28{0} - 580]{1445},   m[r28{0} - 4]=m[r28{0} - 4]{2230},
                m[r28{0} - 8]=m[r28{0} - 8]{2231},   m[r28{0} - 12]=m[r28{0} - 12]{2232},
                m[r28{0} - 16]=m[r28{0} - 16]{2233},   m[r28{0} - 520]=m[r28{0} - 520]{2234},
                m[r28{0} - 572]=m[r28{0} - 572]{2235},   m[r28{0} - 576]=m[r28{0} - 576]{2236},
                m[r28{0} - 580]=m[r28{0} - 580]{2237},   m[r28{0} - 864]=m[r28{0} - 864]{2244},   <all>=<all>{1445},
                tmp1=r24{1486} - r27{2159},   tmpb=tmpb{2147},   tmph=tmph{1880},   %flags=%flags{1881},
                %ZF=%ZF{1882},   %CF=%CF{1883}
              Live variables: esp in proc proc18
result:    0 *HWND** esp := -
dest is not lib
call:  747 {*HWND* eax, *v* ecx, *v* edx, *v* esp} := CALL GetActiveWindow(
              )
              Reaching definitions: r6=r6{1871},   r8=r8{1872},   r9=truncu(32,8,r25{1480}),   r10=r10{1873},
                r24=r24{741},   r25=r25{741},   r26=r26{741},   r27=r27{741},   r28=r28{741} - 4,   r29=r29{741},
                r30=r30{741},   r31=0,   m[r28{0} - 4]=m[r28{0} - 4]{1445},   m[r28{0} - 8]=m[r28{0} - 8]{1445},
                m[r28{0} - 12]=m[r28{0} - 12]{1445},   m[r28{0} - 16]=m[r28{0} - 16]{1445},
                m[r28{0} - 520]=m[r28{0} - 520]{1445},   m[r28{0} - 572]=m[r28{0} - 572]{1445},
                m[r28{0} - 576]=m[r28{0} - 576]{1445},   m[r28{0} - 580]=m[r28{0} - 580]{1445},
                m[r28{0} - 4]=m[r28{0} - 4]{2230},   m[r28{0} - 8]=m[r28{0} - 8]{2231},
                m[r28{0} - 12]=m[r28{0} - 12]{2232},   m[r28{0} - 16]=m[r28{0} - 16]{2233},
                m[r28{0} - 520]=m[r28{0} - 520]{2234},   m[r28{0} - 572]=m[r28{0} - 572]{2235},
                m[r28{0} - 576]=m[r28{0} - 576]{2236},   m[r28{0} - 580]=m[r28{0} - 580]{2237},
                m[r28{0} - 864]=m[r28{0} - 864]{2244},   <all>=<all>{1445},   tmp1=r24{1486} - r27{2159},
                tmpb=tmpb{2147},   tmph=tmph{1880},   %flags=LOGICALFLAGS32( 0 ),   %ZF=LOGICALFLAGS32( 0 ),
                %CF=LOGICALFLAGS32( 0 )
              Live variables: eax in proc proc18
result:    0 *HWND* eax := -
dest is not lib
call:  759 {*32* eax, *j32* ecx, *v* edx, *v* esp} := CALL MessageBoxW(
                *LPCWSTR* m[esp + 4] := m[esp + 4]
                *LPCWSTR* m[esp + 8] := m[esp + 8]
                *UINT* m[esp + 12] := m[esp + 12]
                *HWND* m[esp] := m[esp]
              )
              Reaching definitions: r6=r6{1871},   r8=r8{1872},   r9=truncu(32,8,r25{1480}),   r10=0,   r24=r24{747},
                r25=r25{747},   r26=0,   r27=r27{753},   r28=r28{741} - 4,   r29=r29{741},   r30=r30{741},   r31=0,
                m[r28{0} - 4]=m[r28{0} - 4]{1445},   m[r28{0} - 8]=m[r28{0} - 8]{1445},
                m[r28{0} - 12]=m[r28{0} - 12]{1445},   m[r28{0} - 16]=m[r28{0} - 16]{1445},
                m[r28{0} - 520]=m[r28{0} - 520]{1445},   m[r28{0} - 572]=m[r28{0} - 572]{1445},
                m[r28{0} - 576]=m[r28{0} - 576]{1445},   m[r28{0} - 580]=m[r28{0} - 580]{1445},
                m[r28{0} - 4]=m[r28{0} - 4]{2230},   m[r28{0} - 8]=m[r28{0} - 8]{2231},
                m[r28{0} - 12]=m[r28{0} - 12]{2232},   m[r28{0} - 16]=m[r28{0} - 16]{2233},
                m[r28{0} - 520]=m[r28{0} - 520]{2234},   m[r28{0} - 572]=m[r28{0} - 572]{2235},
                m[r28{0} - 576]=m[r28{0} - 576]{2236},   m[r28{0} - 580]=m[r28{0} - 580]{2237},
                m[r28{0} - 864]=m[r28{0} - 864]{2244},   <all>=<all>{1445},   tmp1=r24{1486} - r27{2159},
                tmpb=tmpb{2147},   tmph=tmph{1880},   %flags=LOGICALFLAGS32( 0 ),   %ZF=LOGICALFLAGS32( 0 ),
                %CF=LOGICALFLAGS32( 0 )
              Live variables:  in proc proc18
dest is not lib
call:  488 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL memset(
                *v** m[esp_7 - 12] := m[esp_7 - 12]
                *i32* m[esp_7 - 8] := m[esp_7 - 8]
                *j32* m[esp_7 - 4] := m[esp_7 - 4]
              )
              Reaching definitions: r6=r6{455},   r8=255,   r9=r9{466},   r10=0,   r24=255,   r25=r25{467},   r26=0,
                r27=r27{455},   r28=r28{455} - 16,   r29=r29{455},   r30=r30{455},   r31=r24{455},
                m[r28{0} - 4]=m[r28{0} - 4]{455},   m[r28{0} - 8]=m[r28{0} - 8]{455},
                m[r28{0} - 12]=m[r28{0} - 12]{455},   m[r28{0} - 16]=m[r28{0} - 16]{455},
                m[r28{0} - 520]=m[r28{0} - 520]{455},   m[r28{0} - 572]=m[r28{0} - 572]{455},
                m[r28{0} - 576]=m[r28{0} - 576]{455},   m[r28{0} - 580]=m[r28{0} - 580]{455},
                m[r28{0} - 4]=m[r28{0} - 4]{455},   m[r28{0} - 8]=m[r28{0} - 8]{455},
                m[r28{0} - 12]=m[r28{0} - 12]{455},   m[r28{0} - 16]=m[r28{0} - 16]{455},
                m[r28{0} - 520]=m[r28{0} - 520]{455},   m[r28{0} - 572]=m[r28{0} - 572]{455},
                m[r28{0} - 576]=m[r28{0} - 576]{455},   m[r28{0} - 580]=m[r28{0} - 580]{455},
                m[r28{0} - 864]=m[r28{0} - 864]{455},   <all>=<all>{455},   tmp1=r24{455},   tmpb=r9{466} & r10{461},
                tmph=tmph{455},   %flags=LOGICALFLAGS32( 0 ),   %ZF=LOGICALFLAGS32( 0 ),   %CF=LOGICALFLAGS32( 0 )
              Live variables:  in proc proc18
dest is not lib
call:  493 {*u32* eax, *v* ecx, *j32* edx, *v* esp} := CALL strlen(
                *[c]** m[esp_7 - 12] := m[esp_7 - 12]
              )
              Reaching definitions: r6=r6{455},   r8=255,   r9=r9{466},   r10=0,   r24=r24{488},   r25=r25{488},
                r26=r26{488},   r27=r27{455},   r28=r28{455} - 16,   r29=r29{455},   r30=r30{455},   r31=r24{455},
                m[r28{0} - 4]=m[r28{0} - 4]{455},   m[r28{0} - 8]=m[r28{0} - 8]{455},
                m[r28{0} - 12]=m[r28{0} - 12]{455},   m[r28{0} - 16]=m[r28{0} - 16]{455},
                m[r28{0} - 520]=m[r28{0} - 520]{455},   m[r28{0} - 572]=m[r28{0} - 572]{455},
                m[r28{0} - 576]=m[r28{0} - 576]{455},   m[r28{0} - 580]=m[r28{0} - 580]{455},
                m[r28{0} - 4]=m[r28{0} - 4]{455},   m[r28{0} - 8]=m[r28{0} - 8]{455},
                m[r28{0} - 12]=m[r28{0} - 12]{455},   m[r28{0} - 16]=m[r28{0} - 16]{455},
                m[r28{0} - 520]=m[r28{0} - 520]{455},   m[r28{0} - 572]=m[r28{0} - 572]{455},
                m[r28{0} - 576]=m[r28{0} - 576]{455},   m[r28{0} - 580]=m[r28{0} - 580]{455},
                m[r28{0} - 864]=m[r28{0} - 864]{455},   <all>=<all>{455},   tmp1=r24{455},   tmpb=r9{466} & r10{461},
                tmph=tmph{455},   %flags=LOGICALFLAGS32( 0 ),   %ZF=LOGICALFLAGS32( 0 ),   %CF=LOGICALFLAGS32( 0 )
              Live variables: eax in proc proc18
result:    0 *u32* eax := -
dest is not lib
call:  543 {*32* eax, *32* ecx, *32* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* m[esp_7 - 12] := m[esp_7 - 12]
                *c** m[esp_7 - 8] := m[esp_7 - 8]
              )
              Reaching definitions: r6=truncu(32,16,r30{537}),   r8=truncu(32,8,r24{493} - 1),
                r9=truncu(32,8,r25{1807} + 1),   r10=r10{1815},   r24=r24{493} - 1,   r25=r25{1807} + 1,
                r26=r26{1817},   r27=r27{455},   r28=r28{455} - 16,   r29=r29{455},   r30=r30{537},   r31=r24{455},
                m[r28{0} - 4]=m[r28{0} - 4]{455},   m[r28{0} - 8]=m[r28{0} - 8]{455},
                m[r28{0} - 12]=m[r28{0} - 12]{455},   m[r28{0} - 16]=m[r28{0} - 16]{455},
                m[r28{0} - 520]=m[r28{0} - 520]{455},   m[r28{0} - 572]=m[r28{0} - 572]{455},
                m[r28{0} - 576]=m[r28{0} - 576]{455},   m[r28{0} - 580]=m[r28{0} - 580]{455},
                m[r28{0} - 4]=m[r28{0} - 4]{455},   m[r28{0} - 8]=m[r28{0} - 8]{455},
                m[r28{0} - 12]=m[r28{0} - 12]{455},   m[r28{0} - 16]=m[r28{0} - 16]{455},
                m[r28{0} - 520]=m[r28{0} - 520]{455},   m[r28{0} - 572]=m[r28{0} - 572]{455},
                m[r28{0} - 576]=m[r28{0} - 576]{455},   m[r28{0} - 580]=m[r28{0} - 580]{455},
                m[r28{0} - 864]=m[r28{0} - 864]{455},   <all>=<all>{455},   tmp1=(r24{493} - r25{1807}) - 2,
                tmpb=tmpb{1819},   tmph=tmph{455},
                %flags=SUBFLAGS32( r24{493} - 1, r25{1807} + 1, (r24{493} - r25{1807}) - 2 ),   %ZF=%ZF{1821},
                %CF=%CF{1822}
              Live variables: eax,  ecx,  edx in proc proc18
result:    0 *32* eax := -
result:    0 *32* ecx := -
result:    0 *32* edx := -
dest is not lib
call:  572 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL memset(
                *v** m[esp_9 - 8] := m[esp_9 - 8]
                *i32* m[esp_9 - 4] := m[esp_9 - 4]
                *j32* m[esp_9] := m[esp_9]
              )
              Reaching definitions: r6=truncu(32,16,r24{553}),   r8=r8{553},   r9=255,   r10=r10{553},   r24=r24{553},
                r25=255,   r26=r26{553},   r27=r27{553},   r28=r28{553} - 12,   r29=r29{553},   r30=r24{553},   r31=0,
                m[r28{0} - 4]=m[r28{0} - 4]{553},   m[r28{0} - 8]=m[r28{0} - 8]{553},
                m[r28{0} - 12]=m[r28{0} - 12]{553},   m[r28{0} - 16]=m[r28{0} - 16]{553},
                m[r28{0} - 520]=m[r28{0} - 520]{553},   m[r28{0} - 572]=m[r28{0} - 572]{553},
                m[r28{0} - 576]=m[r28{0} - 576]{553},   m[r28{0} - 580]=m[r28{0} - 580]{553},
                m[r28{0} - 4]=m[r28{0} - 4]{553},   m[r28{0} - 8]=m[r28{0} - 8]{553},
                m[r28{0} - 12]=m[r28{0} - 12]{553},   m[r28{0} - 16]=m[r28{0} - 16]{553},
                m[r28{0} - 520]=m[r28{0} - 520]{553},   m[r28{0} - 572]=m[r28{0} - 572]{553},
                m[r28{0} - 576]=m[r28{0} - 576]{553},   m[r28{0} - 580]=m[r28{0} - 580]{553},
                m[r28{0} - 864]=m[r28{0} - 864]{553},   <all>=<all>{553},   tmp1=r24{553},   tmpb=tmpb{553},
                tmph=tmph{553},   %flags=LOGICALFLAGS32( 0 ),   %ZF=LOGICALFLAGS32( 0 ),   %CF=LOGICALFLAGS32( 0 )
              Live variables:  in proc proc18
dest is not lib
call:  577 {*u32* eax, *v* ecx, *j32* edx, *v* esp} := CALL strlen(
                *[c]** m[esp_9 - 8] := m[esp_9 - 8]
              )
              Reaching definitions: r6=truncu(32,16,r24{553}),   r8=r8{553},   r9=255,   r10=r10{553},   r24=r24{572},
                r25=r25{572},   r26=r26{572},   r27=r27{553},   r28=r28{553} - 12,   r29=r29{553},   r30=r24{553},
                r31=0,   m[r28{0} - 4]=m[r28{0} - 4]{553},   m[r28{0} - 8]=m[r28{0} - 8]{553},
                m[r28{0} - 12]=m[r28{0} - 12]{553},   m[r28{0} - 16]=m[r28{0} - 16]{553},
                m[r28{0} - 520]=m[r28{0} - 520]{553},   m[r28{0} - 572]=m[r28{0} - 572]{553},
                m[r28{0} - 576]=m[r28{0} - 576]{553},   m[r28{0} - 580]=m[r28{0} - 580]{553},
                m[r28{0} - 4]=m[r28{0} - 4]{553},   m[r28{0} - 8]=m[r28{0} - 8]{553},
                m[r28{0} - 12]=m[r28{0} - 12]{553},   m[r28{0} - 16]=m[r28{0} - 16]{553},
                m[r28{0} - 520]=m[r28{0} - 520]{553},   m[r28{0} - 572]=m[r28{0} - 572]{553},
                m[r28{0} - 576]=m[r28{0} - 576]{553},   m[r28{0} - 580]=m[r28{0} - 580]{553},
                m[r28{0} - 864]=m[r28{0} - 864]{553},   <all>=<all>{553},   tmp1=r24{553},   tmpb=tmpb{553},
                tmph=tmph{553},   %flags=LOGICALFLAGS32( 0 ),   %ZF=LOGICALFLAGS32( 0 ),   %CF=LOGICALFLAGS32( 0 )
              Live variables: eax in proc proc18
result:    0 *u32* eax := -
dest is not lib
call:  627 {*32* eax, *32* ecx, *32* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* m[esp_9 - 8] := m[esp_9 - 8]
                *c** m[esp_9 - 4] := m[esp_9 - 4]
              )
              Reaching definitions: r6=truncu(32,16,r24{553}),   r8=truncu(32,8,r24{577} - 1),
                r9=truncu(32,8,r25{1831} + 1),   r10=truncu(32,8,r26{621}),   r24=r24{577} - 1,   r25=r25{1831} + 1,
                r26=r26{621},   r27=r27{553},   r28=r28{553} - 12,   r29=r29{553},   r30=r24{553},   r31=0,
                m[r28{0} - 4]=m[r28{0} - 4]{553},   m[r28{0} - 8]=m[r28{0} - 8]{553},
                m[r28{0} - 12]=m[r28{0} - 12]{553},   m[r28{0} - 16]=m[r28{0} - 16]{553},
                m[r28{0} - 520]=m[r28{0} - 520]{553},   m[r28{0} - 572]=m[r28{0} - 572]{553},
                m[r28{0} - 576]=m[r28{0} - 576]{553},   m[r28{0} - 580]=m[r28{0} - 580]{553},
                m[r28{0} - 4]=m[r28{0} - 4]{553},   m[r28{0} - 8]=m[r28{0} - 8]{553},
                m[r28{0} - 12]=m[r28{0} - 12]{553},   m[r28{0} - 16]=m[r28{0} - 16]{553},
                m[r28{0} - 520]=m[r28{0} - 520]{553},   m[r28{0} - 572]=m[r28{0} - 572]{553},
                m[r28{0} - 576]=m[r28{0} - 576]{553},   m[r28{0} - 580]=m[r28{0} - 580]{553},
                m[r28{0} - 864]=m[r28{0} - 864]{553},   <all>=<all>{553},   tmp1=(r24{577} - r25{1831}) - 2,
                tmpb=tmpb{1843},   tmph=tmph{553},
                %flags=SUBFLAGS32( r24{577} - 1, r25{1831} + 1, (r24{577} - r25{1831}) - 2 ),   %ZF=%ZF{1845},
                %CF=%CF{1846}
              Live variables: eax,  ecx,  edx in proc proc18
result:    0 *32* eax := -
result:    0 *32* ecx := -
result:    0 *32* edx := -
dest is not lib
call:   36 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL memset(
                *c** local0 := a[param1]
                *i32* local1 := 0
                *j32* local2 := 255
              )
              Reaching definitions: r8=r8{0},   r9=0,   r10=0,   r24=0,   r25=0,   r26=0,   r27=0,   r28=r28{0} - 336,
                r29=r28{0} - 4,   r30=r28{0} - 284,   r31=255,   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r31{0},
                m[r28{0} - 12]=r30{0},   m[r28{0} - 16]=r27{0},   m[r28{0} - 284]=m[r28{0} - 284]{0},
                m[r28{0} - 288]=0,   m[r28{0} - 292]=0,   m[r28{0} - 296]=0,   m[r28{0} - 324]=255,   m[r28{0} - 328]=0
                m[r28{0} - 332]=r28{0} - 284,   m[r28{0} - 336]=%pc,   tmp1=r28{0} - 16,   tmpb=tmpb{0},
                %flags=LOGICALFLAGS32( 0 ),   %ZF=LOGICALFLAGS32( 0 ),   %CF=LOGICALFLAGS32( 0 )
              Live variables:  in proc proc20
dest is not lib
call:   41 {*u32* eax, *v* ecx, *j32* edx, *v* esp} := CALL strlen(
                *[c]** local0 := 0x404000
              )
              Reaching definitions: r8=r8{0},   r9=0,   r10=0,   r24=r24{36},   r25=r25{36},   r26=r26{36},   r27=0,
                r28=r28{0} - 336,   r29=r28{0} - 4,   r30=r28{0} - 284,   r31=255,   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=r31{0},   m[r28{0} - 12]=r30{0},   m[r28{0} - 16]=r27{0},
                m[r28{0} - 284]=m[r28{0} - 284]{0},   m[r28{0} - 288]=0,   m[r28{0} - 292]=0,   m[r28{0} - 296]=0,
                m[r28{0} - 324]=255,   m[r28{0} - 328]=0,   m[r28{0} - 332]=0x404000,   m[r28{0} - 336]=%pc,
                tmp1=r28{0} - 16,   tmpb=tmpb{0},   %flags=LOGICALFLAGS32( 0 ),   %ZF=LOGICALFLAGS32( 0 ),
                %CF=LOGICALFLAGS32( 0 )
              Live variables: eax in proc proc20
result:    0 *u32* eax := -
dest is not lib
call:   93 {*j32* eax, *32* ecx, *32* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local0 := ecx
                *c** local3 := a[param1]
              )
              Reaching definitions: r8=r8{0},   r9=truncu(32,8,r25{86}),   r10=r10{259},   r24=r24{41} - 1,
                r25=r25{86},   r26=r26{261},   r27=0,   r28=r28{0} - 336,   r29=r28{0} - 4,   r30=r28{0} - 288,
                r31=255,   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r31{0},   m[r28{0} - 12]=r30{0},
                m[r28{0} - 16]=r27{0},   m[r28{0} - 284]=m[r28{0} - 284]{0},   m[r28{0} - 288]=0,   m[r28{0} - 292]=0,
                m[r28{0} - 296]=0,   m[r28{0} - 324]=255,   m[r28{0} - 328]=r28{0} - 284,   m[r28{0} - 332]=r25{86},
                m[r28{0} - 336]=%pc,   tmp1=(r24{41} - r25{251}) - 2,   tmpb=tmpb{265},
                %flags=SUBFLAGS32( r24{41} - 1, r25{251} + 1, (r24{41} - r25{251}) - 2 ),   %ZF=%ZF{267},
                %CF=%CF{268}
              Live variables: eax,  ecx,  edx in proc proc20
result:    0 *j32* eax := -
result:    0 *32* ecx := -
result:    0 *32* edx := -
dest is not lib
call:  121 {*j32* eax, *32* ecx, *32* edx, *j32* esp} := CALL GetLastError(
              )
              Reaching definitions: r8=r8{149},   r9=r9{149},   r10=r10{149},   r24=r24{149},   r25=r25{149},
                r26=r26{149},   r27=r27{149},   r28=r28{149} - 12,   r29=r29{149},   r30=r30{149},   r31=r31{149},
                m[r28{0} - 4]=m[r28{0} - 4]{149},   m[r28{0} - 8]=m[r28{0} - 8]{149},
                m[r28{0} - 12]=m[r28{0} - 12]{149},   m[r28{0} - 16]=m[r28{0} - 16]{149},
                m[r28{0} - 284]=m[r28{0} - 284]{149},   m[r28{0} - 288]=m[r28{0} - 288]{149},
                m[r28{0} - 292]=m[r28{0} - 292]{149},   m[r28{0} - 296]=m[r28{0} - 296]{149},
                m[r28{0} - 324]=m[r28{0} - 324]{149},   m[r28{0} - 328]=m[r28{0} - 328]{149},
                m[r28{0} - 332]=m[r28{0} - 332]{149},   m[r28{0} - 336]=m[r28{0} - 336]{149},
                m[r28{0} - 4]=m[r28{0} - 4]{149},   m[r28{0} - 8]=m[r28{0} - 8]{149},
                m[r28{0} - 12]=m[r28{0} - 12]{149},   m[r28{0} - 16]=m[r28{0} - 16]{149},
                m[r28{0} - 284]=m[r28{0} - 284]{149},   m[r28{0} - 288]=m[r28{0} - 288]{149},
                m[r28{0} - 292]=m[r28{0} - 292]{149},   m[r28{0} - 296]=m[r28{0} - 296]{149},
                m[r28{0} - 324]=m[r28{0} - 324]{149},   m[r28{0} - 328]=m[r28{0} - 328]{149},
                m[r28{0} - 332]=m[r28{0} - 332]{149},   m[r28{0} - 336]=m[r28{0} - 336]{149},   <all>=<all>{149},
                tmp1=r24{149},   tmpb=tmpb{149},   %flags=LOGICALFLAGS32( r24{149} ),   %ZF=LOGICALFLAGS32( r24{149} ),
                %CF=LOGICALFLAGS32( r24{149} )
              Live variables: eax in proc proc20
result:    0 *j32* eax := -
dest is not lib
call:  132 {*j32* eax, *32* ecx, *32* edx, *v* esp} := CALL free(
                *v** m[esp_3 - 8] := m[esp_3 - 8]
              )
              Reaching definitions: r8=r8{149},   r9=r9{149},   r10=r10{149},   r24=r24{121},   r25=r25{121},
                r26=r26{121},   r27=r27{149},   r28=r28{149} - 12,   r29=r29{149},   r30=r30{149},   r31=r31{149},
                m[r28{0} - 4]=m[r28{0} - 4]{149},   m[r28{0} - 8]=m[r28{0} - 8]{149},
                m[r28{0} - 12]=m[r28{0} - 12]{149},   m[r28{0} - 16]=m[r28{0} - 16]{149},
                m[r28{0} - 284]=m[r28{0} - 284]{149},   m[r28{0} - 288]=m[r28{0} - 288]{149},
                m[r28{0} - 292]=m[r28{0} - 292]{149},   m[r28{0} - 296]=m[r28{0} - 296]{149},
                m[r28{0} - 324]=m[r28{0} - 324]{149},   m[r28{0} - 328]=m[r28{0} - 328]{149},
                m[r28{0} - 332]=m[r28{0} - 332]{149},   m[r28{0} - 336]=m[r28{0} - 336]{149},
                m[r28{0} - 4]=m[r28{0} - 4]{149},   m[r28{0} - 8]=m[r28{0} - 8]{149},
                m[r28{0} - 12]=m[r28{0} - 12]{149},   m[r28{0} - 16]=m[r28{0} - 16]{149},
                m[r28{0} - 284]=m[r28{0} - 284]{149},   m[r28{0} - 288]=m[r28{0} - 288]{149},
                m[r28{0} - 292]=m[r28{0} - 292]{149},   m[r28{0} - 296]=m[r28{0} - 296]{149},
                m[r28{0} - 324]=m[r28{0} - 324]{149},   m[r28{0} - 328]=m[r28{0} - 328]{149},
                m[r28{0} - 332]=m[r28{0} - 332]{149},   m[r28{0} - 336]=m[r28{0} - 336]{149},   <all>=<all>{149},
                tmp1=r27{149},   tmpb=tmpb{149},   %flags=LOGICALFLAGS32( r27{149} ),   %ZF=LOGICALFLAGS32( r27{149} ),
                %CF=LOGICALFLAGS32( r27{149} )
              Live variables:  in proc proc20
dest is not lib
call:  138 {*j32* eax, *32* ecx, *32* edx, *j32* esp_4} := CALL malloc(
                *size_t* m[esp_3 - 8] := m[esp_3 - 8]
              )
              Reaching definitions: r8=r8{149},   r9=r9{149},   r10=r10{149},   r24=r24{301},   r25=r25{302},
                r26=r26{303},   r27=r27{133},   r28=r28{149} - 12,   r29=r29{149},   r30=r30{149},   r31=r31{149},
                m[r28{0} - 4]=m[r28{0} - 4]{149},   m[r28{0} - 8]=m[r28{0} - 8]{149},
                m[r28{0} - 12]=m[r28{0} - 12]{149},   m[r28{0} - 16]=m[r28{0} - 16]{149},
                m[r28{0} - 284]=m[r28{0} - 284]{149},   m[r28{0} - 288]=m[r28{0} - 288]{149},
                m[r28{0} - 292]=m[r28{0} - 292]{149},   m[r28{0} - 296]=m[r28{0} - 296]{149},
                m[r28{0} - 324]=m[r28{0} - 324]{149},   m[r28{0} - 328]=m[r28{0} - 328]{149},
                m[r28{0} - 332]=m[r28{0} - 332]{149},   m[r28{0} - 336]=m[r28{0} - 336]{149},
                m[r28{0} - 4]=m[r28{0} - 4]{149},   m[r28{0} - 8]=m[r28{0} - 8]{149},
                m[r28{0} - 12]=m[r28{0} - 12]{149},   m[r28{0} - 16]=m[r28{0} - 16]{149},
                m[r28{0} - 284]=m[r28{0} - 284]{149},   m[r28{0} - 288]=m[r28{0} - 288]{149},
                m[r28{0} - 292]=m[r28{0} - 292]{149},   m[r28{0} - 296]=m[r28{0} - 296]{149},
                m[r28{0} - 324]=m[r28{0} - 324]{149},   m[r28{0} - 328]=m[r28{0} - 328]{149},
                m[r28{0} - 332]=m[r28{0} - 332]{149},   m[r28{0} - 336]=m[r28{0} - 336]{149},   <all>=<all>{149},
                tmp1=r27{149},   tmpb=tmpb{149},   %flags=LOGICALFLAGS32( r27{149} ),   %ZF=LOGICALFLAGS32( r27{149} ),
                %CF=LOGICALFLAGS32( r27{149} )
              Live variables: eax,  ecx,  edx,  esp_4 in proc proc20
result:    0 *j32* eax := -
result:    0 *32* ecx := -
result:    0 *32* edx := -
result:    0 *j32* esp_4 := -
dest is not lib
call:  231 {*32* eax, *32* ecx, *32* edx, *v* esp} := CALL free(
                *v** m[esp_3 - 8] := m[esp_3 - 8]
              )
              Reaching definitions: r8=r8{356},   r9=r9{357},   r10=truncu(32,8,r26{223}),   r24=r24{221},
                r25=r25{360},   r26=r26{223},   r27=r27{149},   r28=r28{149} - 12,   r29=r29{149},   r30=r30{220},
                r31=r31{222},   m[r28{0} - 4]=m[r28{0} - 4]{149},   m[r28{0} - 8]=m[r28{0} - 8]{149},
                m[r28{0} - 12]=m[r28{0} - 12]{149},   m[r28{0} - 16]=m[r28{0} - 16]{149},
                m[r28{0} - 284]=m[r28{0} - 284]{149},   m[r28{0} - 288]=m[r28{0} - 288]{149},
                m[r28{0} - 292]=m[r28{0} - 292]{149},   m[r28{0} - 296]=m[r28{0} - 296]{149},
                m[r28{0} - 324]=m[r28{0} - 324]{149},   m[r28{0} - 328]=m[r28{0} - 328]{149},
                m[r28{0} - 332]=m[r28{0} - 332]{149},   m[r28{0} - 336]=m[r28{0} - 336]{149},
                m[r28{0} - 4]=m[r28{0} - 4]{149},   m[r28{0} - 8]=m[r28{0} - 8]{149},
                m[r28{0} - 12]=m[r28{0} - 12]{149},   m[r28{0} - 16]=m[r28{0} - 16]{149},
                m[r28{0} - 284]=m[r28{0} - 284]{149},   m[r28{0} - 288]=m[r28{0} - 288]{149},
                m[r28{0} - 292]=m[r28{0} - 292]{149},   m[r28{0} - 296]=m[r28{0} - 296]{149},
                m[r28{0} - 324]=m[r28{0} - 324]{149},   m[r28{0} - 328]=m[r28{0} - 328]{149},
                m[r28{0} - 332]=m[r28{0} - 332]{149},   m[r28{0} - 336]=m[r28{0} - 336]{149},   <all>=<all>{149},
                tmp1=tmp1{364},   tmpb=tmpb{149},   %flags=%flags{365},   %ZF=%ZF{366},   %CF=%CF{367}
              Live variables:  in proc proc20
dest is not lib
call:    4 {*v* eax, *32* r30, *v* r25, *v* r26, *32* ebx, *HWND** esp, *32** ebp, *32* r31} := CALL proc30(
              )
              Reaching definitions: r28=r28{0} - 4,   m[r28{0} - 4]=%pc
              Live variables: ebp,  esp in proc proc30
result:    0 *HWND** esp := -
result:    0 *32** ebp := -
dest is not lib
call:   10 {*HWND* eax, *v* r25, *v* r26, *v* esp} := CALL GetActiveWindow(
              )
              Reaching definitions: r24=r24{4},   r25=r25{4},   r26=r26{4},   r27=r27{4},   r28=r28{4} - 4,
                r29=r29{4},   r30=r30{4},   r31=0,   m[r28{0} - 4]=%pc,   <all>=<all>{4},   tmp1=tmp1{4},
                %flags=LOGICALFLAGS32( 0 ),   %ZF=LOGICALFLAGS32( 0 ),   %CF=LOGICALFLAGS32( 0 )
              Live variables: eax in proc proc30
result:    0 *HWND* eax := -
dest is not lib
call:   21 {*32* eax, *32* r25, *v* r26, *v* esp} := CALL MessageBoxW(
                *LPCWSTR* m[esp + 4] := m[esp + 4]
                *LPCWSTR* m[esp + 8] := m[esp + 8]
                *UINT* m[esp + 12] := m[esp + 12]
                *HWND* m[esp] := m[esp]
              )
              Reaching definitions: r24=r24{10},   r25=r25{10},   r26=0,   r27=r27{15},   r28=r28{4} - 4,   r29=r29{4},
                r30=r30{4},   r31=0,   m[r28{0} - 4]=%pc,   <all>=<all>{4},   tmp1=tmp1{4},
                %flags=LOGICALFLAGS32( 0 ),   %ZF=LOGICALFLAGS32( 0 ),   %CF=LOGICALFLAGS32( 0 )
              Live variables:  in proc proc30
dest is not lib
call:   84 {*32* eax, *32* ecx, *v* edx, *v* esp} := CALL FindAtomA(
                *32** local0 := a[0x41414141]
              )
              Reaching definitions: r0=truncu(32,16,r24{76}),   r8=truncu(32,8,r24{76}),   r24=r24{76},   r25=r25{19},
                r26=r26{0},   r27=r27{0},   r28=r28{0} - 224,   r29=r28{0} - 4,   r30=r28{0} - 108,   r31=r31{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r31{0},   m[r28{0} - 12]=r30{0},   m[r28{0} - 16]=r27{0},
                m[r28{0} - 44]=truncu(32,16,r24{76}),   m[r28{0} - 48]=0x3357474e,   m[r28{0} - 52]=0x494d2d52,
                m[r28{0} - 56]=0x4854472d,   m[r28{0} - 60]=0x4a4c4a53,   m[r28{0} - 64]=0x2d322d48,
                m[r28{0} - 68]=0x452d3233,   m[r28{0} - 72]=0x57434347,   m[r28{0} - 76]=0x42494c2d,
                m[r28{0} - 80]=0x41414141,   m[r28{0} - 84]=0x41414141,   m[r28{0} - 88]=0x41414141,
                m[r28{0} - 92]=0x41414141,   m[r28{0} - 96]=0x41414141,   m[r28{0} - 100]=0x41414141,
                m[r28{0} - 104]=0x41414141,   m[r28{0} - 108]=0x41414141,   m[r28{0} - 124]=m[r28{0} - 124]{0},
                m[r28{0} - 128]=m[r28{0} - 128]{0},   m[r28{0} - 132]=m[r28{0} - 132]{0},
                m[r28{0} - 136]=m[r28{0} - 136]{0},   m[r28{0} - 140]=m[r28{0} - 140]{0},
                m[r28{0} - 144]=m[r28{0} - 144]{0},   m[r28{0} - 148]=m[r28{0} - 148]{0},
                m[r28{0} - 152]=m[r28{0} - 152]{0},   m[r28{0} - 156]=m[r28{0} - 156]{0},
                m[r28{0} - 188]=m[r28{0} - 188]{0},   m[r28{0} - 192]=m[r28{0} - 192]{0},
                m[r28{0} - 220]=r28{0} - 108,   m[r28{0} - 224]=%pc,   m[r28{0} - 316]=m[r28{0} - 316]{0},
                tmp1=r25{19},   %flags=LOGICALFLAGS32( r25{19} ),   %ZF=LOGICALFLAGS32( r25{19} ),
                %CF=LOGICALFLAGS32( r25{19} )
              Live variables:  in proc proc35
dest is not lib
call:  251 {*32** eax, *u16* ax, *32* ecx, *u32* edx, *v* esp} := CALL proc36(
                *i16* local3 := local3
                *u16* ax := ax
              )
              Reaching definitions: r0=r0{344},   r8=r8{345},   r24=r24{346},   r25=r25{347},   r26=r26{348},
                r27=r27{349},   r28=(r28{0} - 220) - 4,   r29=r28{0} - 4,   r30=r28{0} - 108,   r31=r31{352},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r31{0},   m[r28{0} - 12]=r30{0},   m[r28{0} - 16]=r27{0},
                m[r28{0} - 44]=truncu(32,16,r24{76}),   m[r28{0} - 48]=0x3357474e,   m[r28{0} - 52]=0x494d2d52,
                m[r28{0} - 56]=0x4854472d,   m[r28{0} - 60]=0x4a4c4a53,   m[r28{0} - 64]=0x2d322d48,
                m[r28{0} - 68]=0x452d3233,   m[r28{0} - 72]=0x57434347,   m[r28{0} - 76]=0x42494c2d,
                m[r28{0} - 80]=0x41414141,   m[r28{0} - 84]=0x41414141,   m[r28{0} - 88]=0x41414141,
                m[r28{0} - 92]=0x41414141,   m[r28{0} - 96]=0x41414141,   m[r28{0} - 100]=0x41414141,
                m[r28{0} - 104]=0x41414141,   m[r28{0} - 108]=0x41414141,   m[r28{0} - 124]=m[r28{0} - 124]{408},
                m[r28{0} - 128]=m[r28{0} - 128]{409},   m[r28{0} - 132]=m[r28{0} - 132]{410},
                m[r28{0} - 136]=m[r28{0} - 136]{411},   m[r28{0} - 140]=m[r28{0} - 140]{412},
                m[r28{0} - 144]=m[r28{0} - 144]{413},   m[r28{0} - 148]=m[r28{0} - 148]{414},
                m[r28{0} - 152]=m[r28{0} - 152]{415},   m[r28{0} - 156]=m[r28{0} - 156]{416},
                m[r28{0} - 188]=m[r28{0} - 188]{0},   m[r28{0} - 192]=zfill(16,32,truncu(32,16,r24{76})),
                m[r28{0} - 220]=r28{0} - 108,   m[r28{0} - 224]=%pc,   m[r28{0} - 316]=m[r28{0} - 316]{0},
                tmp1=tmp1{353},   tmpb=tmpb{354},   %flags=%flags{355},   %ZF=%ZF{356},   %CF=%CF{357}
              Live variables: eax in proc proc35
result:    0 *32** eax := -
dest is not lib
call:   99 {*32** eax_2, *v* ecx, *v* edx, *v* esp} := CALL malloc(
                *size_t* local1 := 60
              )
              Reaching definitions: r0=truncu(32,16,zfill(16,32,truncu(32,16,r24{76}))),
                r8=truncu(32,8,zfill(16,32,truncu(32,16,r24{76}))),   r24=zfill(16,32,truncu(32,16,r24{76})),
                r25=r25{84},   r26=r26{84},   r27=r27{0},   r28=r28{0} - 224,   r29=r28{0} - 4,   r30=r28{0} - 108,
                r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r31{0},   m[r28{0} - 12]=r30{0},
                m[r28{0} - 16]=r27{0},   m[r28{0} - 44]=truncu(32,16,r24{76}),   m[r28{0} - 48]=0x3357474e,
                m[r28{0} - 52]=0x494d2d52,   m[r28{0} - 56]=0x4854472d,   m[r28{0} - 60]=0x4a4c4a53,
                m[r28{0} - 64]=0x2d322d48,   m[r28{0} - 68]=0x452d3233,   m[r28{0} - 72]=0x57434347,
                m[r28{0} - 76]=0x42494c2d,   m[r28{0} - 80]=0x41414141,   m[r28{0} - 84]=0x41414141,
                m[r28{0} - 88]=0x41414141,   m[r28{0} - 92]=0x41414141,   m[r28{0} - 96]=0x41414141,
                m[r28{0} - 100]=0x41414141,   m[r28{0} - 104]=0x41414141,   m[r28{0} - 108]=0x41414141,
                m[r28{0} - 124]=m[r28{0} - 124]{0},   m[r28{0} - 128]=m[r28{0} - 128]{0},
                m[r28{0} - 132]=m[r28{0} - 132]{0},   m[r28{0} - 136]=m[r28{0} - 136]{0},
                m[r28{0} - 140]=m[r28{0} - 140]{0},   m[r28{0} - 144]=m[r28{0} - 144]{0},
                m[r28{0} - 148]=m[r28{0} - 148]{0},   m[r28{0} - 152]=m[r28{0} - 152]{0},
                m[r28{0} - 156]=m[r28{0} - 156]{0},   m[r28{0} - 188]=m[r28{0} - 188]{0},
                m[r28{0} - 192]=zfill(16,32,truncu(32,16,r24{76})),   m[r28{0} - 220]=60,   m[r28{0} - 224]=%pc,
                m[r28{0} - 316]=m[r28{0} - 316]{0},   tmp1=zfill(16,32,truncu(32,16,r24{76})),
                %flags=LOGICALFLAGS32( zfill(16,32,truncu(32,16,r24{76})) ),
                %ZF=LOGICALFLAGS32( zfill(16,32,truncu(32,16,r24{76})) ),
                %CF=LOGICALFLAGS32( zfill(16,32,truncu(32,16,r24{76})) )
              Live variables: eax_2 in proc proc35
result:    0 *32** eax_2 := -
dest is not lib
call:  287 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL abort(
              )
              Reaching definitions: r0=truncu(32,16,zfill(16,32,truncu(32,16,r24{76}))),
                r8=truncu(32,8,zfill(16,32,truncu(32,16,r24{76}))),   r24=r24{99},   r25=r25{99},   r26=r26{99},
                r27=r24{99},   r28=r28{0} - 224,   r29=r28{0} - 4,   r30=r28{0} - 108,   r31=r31{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r31{0},   m[r28{0} - 12]=r30{0},   m[r28{0} - 16]=r27{0},
                m[r28{0} - 44]=truncu(32,16,r24{76}),   m[r28{0} - 48]=0x3357474e,   m[r28{0} - 52]=0x494d2d52,
                m[r28{0} - 56]=0x4854472d,   m[r28{0} - 60]=0x4a4c4a53,   m[r28{0} - 64]=0x2d322d48,
                m[r28{0} - 68]=0x452d3233,   m[r28{0} - 72]=0x57434347,   m[r28{0} - 76]=0x42494c2d,
                m[r28{0} - 80]=0x41414141,   m[r28{0} - 84]=0x41414141,   m[r28{0} - 88]=0x41414141,
                m[r28{0} - 92]=0x41414141,   m[r28{0} - 96]=0x41414141,   m[r28{0} - 100]=0x41414141,
                m[r28{0} - 104]=0x41414141,   m[r28{0} - 108]=0x41414141,   m[r28{0} - 124]=m[r28{0} - 124]{0},
                m[r28{0} - 128]=m[r28{0} - 128]{0},   m[r28{0} - 132]=m[r28{0} - 132]{0},
                m[r28{0} - 136]=m[r28{0} - 136]{0},   m[r28{0} - 140]=m[r28{0} - 140]{0},
                m[r28{0} - 144]=m[r28{0} - 144]{0},   m[r28{0} - 148]=m[r28{0} - 148]{0},
                m[r28{0} - 152]=m[r28{0} - 152]{0},   m[r28{0} - 156]=m[r28{0} - 156]{0},
                m[r28{0} - 188]=m[r28{0} - 188]{0},   m[r28{0} - 192]=zfill(16,32,truncu(32,16,r24{76})),
                m[r28{0} - 220]=60,   m[r28{0} - 224]=%pc,   m[r28{0} - 316]=m[r28{0} - 316]{0},   tmp1=r24{99},
                %flags=LOGICALFLAGS32( r24{99} ),   %ZF=LOGICALFLAGS32( r24{99} ),   %CF=LOGICALFLAGS32( r24{99} )
              Live variables:  in proc proc35
dest is not lib
call:  219 {*32** eax, *32* ecx, *u32* edx, *v* esp} := CALL AddAtomA(
                *c** local0 := a[local2]
              )
              Reaching definitions: r0=truncu(32,16,r28{0} - 188),   r8=truncu(32,8,r28{0} - 188),   r24=r28{0} - 188,
                r25=r25{317} + r25{317},   r26=r26{318} - 1,   r27=r24{99},   r28=r28{0} - 224,   r29=r28{0} - 4,
                r30=r28{0} - 108,   r31=r31{313},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r31{0},
                m[r28{0} - 12]=r30{0},   m[r28{0} - 16]=r27{0},   m[r28{0} - 44]=truncu(32,16,r24{76}),
                m[r28{0} - 48]=0x3357474e,   m[r28{0} - 52]=0x494d2d52,   m[r28{0} - 56]=0x4854472d,
                m[r28{0} - 60]=0x4a4c4a53,   m[r28{0} - 64]=0x2d322d48,   m[r28{0} - 68]=0x452d3233,
                m[r28{0} - 72]=0x57434347,   m[r28{0} - 76]=0x42494c2d,   m[r28{0} - 80]=0x41414141,
                m[r28{0} - 84]=0x41414141,   m[r28{0} - 88]=0x41414141,   m[r28{0} - 92]=0x41414141,
                m[r28{0} - 96]=0x41414141,   m[r28{0} - 100]=0x41414141,   m[r28{0} - 104]=0x41414141,
                m[r28{0} - 108]=0x41414141,   m[r28{0} - 124]=truncu(32,16,r24{208}),   m[r28{0} - 128]=0x3357474e,
                m[r28{0} - 132]=0x494d2d52,   m[r28{0} - 136]=0x4854472d,   m[r28{0} - 140]=0x4a4c4a53,
                m[r28{0} - 144]=0x2d322d48,   m[r28{0} - 148]=0x452d3233,   m[r28{0} - 152]=0x57434347,
                m[r28{0} - 156]=0x42494c2d,   m[r28{0} - 188]=m[r28{0} - 188]{0},
                m[r28{0} - 192]=zfill(16,32,truncu(32,16,r24{76})),   m[r28{0} - 220]=r28{0} - 188,
                m[r28{0} - 224]=%pc,   m[r28{0} - 316]=m[r28{0} - 316]{0},   tmp1=r26{318},
                tmpb=truncu(32,8,r24{155}) & 32,   %flags=LOGICALFLAGS32( r26{318} - 1 ),
                %ZF=LOGICALFLAGS32( r26{318} - 1 ),   %CF=LOGICALFLAGS32( r26{318} - 1 )
              Live variables:  in proc proc35
dest is not lib
call:  278 {*32** eax, *u16* ax, *32* ecx, *32* edx, *v* esp} := CALL proc36(
                *i16* local3 := local3
                *u16* ax := truncu(32,16,edi_1)
              )
              Reaching definitions: r0=truncu(32,16,r31{220}),   r8=truncu(32,8,r31{220}),   r24=r31{220},
                r25=r25{219},   r26=r26{219},   r27=r24{99},   r28=r28{0} - 224,   r29=r28{0} - 4,   r30=r28{0} - 108,
                r31=r31{220},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r31{0},   m[r28{0} - 12]=r30{0},
                m[r28{0} - 16]=r27{0},   m[r28{0} - 44]=truncu(32,16,r24{76}),   m[r28{0} - 48]=0x3357474e,
                m[r28{0} - 52]=0x494d2d52,   m[r28{0} - 56]=0x4854472d,   m[r28{0} - 60]=0x4a4c4a53,
                m[r28{0} - 64]=0x2d322d48,   m[r28{0} - 68]=0x452d3233,   m[r28{0} - 72]=0x57434347,
                m[r28{0} - 76]=0x42494c2d,   m[r28{0} - 80]=0x41414141,   m[r28{0} - 84]=0x41414141,
                m[r28{0} - 88]=0x41414141,   m[r28{0} - 92]=0x41414141,   m[r28{0} - 96]=0x41414141,
                m[r28{0} - 100]=0x41414141,   m[r28{0} - 104]=0x41414141,   m[r28{0} - 108]=0x41414141,
                m[r28{0} - 124]=truncu(32,16,r24{208}),   m[r28{0} - 128]=0x3357474e,   m[r28{0} - 132]=0x494d2d52,
                m[r28{0} - 136]=0x4854472d,   m[r28{0} - 140]=0x4a4c4a53,   m[r28{0} - 144]=0x2d322d48,
                m[r28{0} - 148]=0x452d3233,   m[r28{0} - 152]=0x57434347,   m[r28{0} - 156]=0x42494c2d,
                m[r28{0} - 188]=m[r28{0} - 188]{0},   m[r28{0} - 192]=zfill(16,32,truncu(32,16,r24{76})),
                m[r28{0} - 220]=r28{0} - 188,   m[r28{0} - 224]=%pc,   m[r28{0} - 316]=m[r28{0} - 316]{0},
                tmp1=r31{220},   tmpb=truncu(32,8,r24{155}) & 32,   %flags=LOGICALFLAGS32( r31{220} ),
                %ZF=LOGICALFLAGS32( r31{220} ),   %CF=LOGICALFLAGS32( r31{220} )
              Live variables: ax,  eax in proc proc35
result:    0 *32** eax := -
result:    0 *u16* ax := -
dest is not lib
call:  236 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL free(
                *32** local0 := eax_2
              )
              Reaching definitions: r0=r0{334},   r8=r8{335},   r24=r24{336},   r25=r25{337},   r26=r26{338},
                r27=r24{99},   r28=(r28{0} - 220) - 4,   r29=r28{0} - 4,   r30=r28{0} - 108,   r31=r31{220},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r31{0},   m[r28{0} - 12]=r30{0},   m[r28{0} - 16]=r27{0},
                m[r28{0} - 44]=truncu(32,16,r24{76}),   m[r28{0} - 48]=0x3357474e,   m[r28{0} - 52]=0x494d2d52,
                m[r28{0} - 56]=0x4854472d,   m[r28{0} - 60]=0x4a4c4a53,   m[r28{0} - 64]=0x2d322d48,
                m[r28{0} - 68]=0x452d3233,   m[r28{0} - 72]=0x57434347,   m[r28{0} - 76]=0x42494c2d,
                m[r28{0} - 80]=0x41414141,   m[r28{0} - 84]=0x41414141,   m[r28{0} - 88]=0x41414141,
                m[r28{0} - 92]=0x41414141,   m[r28{0} - 96]=0x41414141,   m[r28{0} - 100]=0x41414141,
                m[r28{0} - 104]=0x41414141,   m[r28{0} - 108]=0x41414141,   m[r28{0} - 124]=truncu(32,16,r24{208}),
                m[r28{0} - 128]=0x3357474e,   m[r28{0} - 132]=0x494d2d52,   m[r28{0} - 136]=0x4854472d,
                m[r28{0} - 140]=0x4a4c4a53,   m[r28{0} - 144]=0x2d322d48,   m[r28{0} - 148]=0x452d3233,
                m[r28{0} - 152]=0x57434347,   m[r28{0} - 156]=0x42494c2d,   m[r28{0} - 188]=m[r28{0} - 188]{0},
                m[r28{0} - 192]=zfill(16,32,truncu(32,16,r24{76})),   m[r28{0} - 220]=r24{99},   m[r28{0} - 224]=%pc,
                m[r28{0} - 316]=m[r28{0} - 316]{0},   tmp1=r26{338},   tmpb=truncu(32,8,r24{155}) & 32,
                %flags=LOGICALFLAGS32( r26{338} ),   %ZF=LOGICALFLAGS32( r26{338} ),   %CF=LOGICALFLAGS32( r26{338} )
              Live variables:  in proc proc35
dest is not lib
call:  241 {*32* eax, *32* ecx, *v* edx, *v* esp} := CALL FindAtomA(
                *32** local0 := a[0x41414141]
              )
              Reaching definitions: r0=r0{334},   r8=r8{335},   r24=r24{236},   r25=r25{236},   r26=r26{236},
                r27=r24{99},   r28=(r28{0} - 220) - 4,   r29=r28{0} - 4,   r30=r28{0} - 108,   r31=r31{220},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r31{0},   m[r28{0} - 12]=r30{0},   m[r28{0} - 16]=r27{0},
                m[r28{0} - 44]=truncu(32,16,r24{76}),   m[r28{0} - 48]=0x3357474e,   m[r28{0} - 52]=0x494d2d52,
                m[r28{0} - 56]=0x4854472d,   m[r28{0} - 60]=0x4a4c4a53,   m[r28{0} - 64]=0x2d322d48,
                m[r28{0} - 68]=0x452d3233,   m[r28{0} - 72]=0x57434347,   m[r28{0} - 76]=0x42494c2d,
                m[r28{0} - 80]=0x41414141,   m[r28{0} - 84]=0x41414141,   m[r28{0} - 88]=0x41414141,
                m[r28{0} - 92]=0x41414141,   m[r28{0} - 96]=0x41414141,   m[r28{0} - 100]=0x41414141,
                m[r28{0} - 104]=0x41414141,   m[r28{0} - 108]=0x41414141,   m[r28{0} - 124]=truncu(32,16,r24{208}),
                m[r28{0} - 128]=0x3357474e,   m[r28{0} - 132]=0x494d2d52,   m[r28{0} - 136]=0x4854472d,
                m[r28{0} - 140]=0x4a4c4a53,   m[r28{0} - 144]=0x2d322d48,   m[r28{0} - 148]=0x452d3233,
                m[r28{0} - 152]=0x57434347,   m[r28{0} - 156]=0x42494c2d,   m[r28{0} - 188]=m[r28{0} - 188]{0},
                m[r28{0} - 192]=zfill(16,32,truncu(32,16,r24{76})),   m[r28{0} - 220]=r28{0} - 108,
                m[r28{0} - 224]=%pc,   m[r28{0} - 316]=m[r28{0} - 316]{0},   tmp1=r26{338},
                tmpb=truncu(32,8,r24{155}) & 32,   %flags=LOGICALFLAGS32( r26{338} ),   %ZF=LOGICALFLAGS32( r26{338} ),
                %CF=LOGICALFLAGS32( r26{338} )
              Live variables:  in proc proc35
dest is not lib
call:   21 {*i32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetAtomNameA(
                *ATOM* local0 := zfill(16,32,param2)
                *i16** local1 := a[param1]
                *i32* local2 := 66
              )
              Reaching definitions: r0=truncu(32,16,zfill(16,32,r0{0})),   r24=zfill(16,32,r0{0}),   r26=r28{0} - 92,
                r27=0,   r28=r28{0} - 112,   r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r27{0},
                m[r28{0} - 92]=m[r28{0} - 92]{0},   m[r28{0} - 100]=66,   m[r28{0} - 104]=r28{0} - 92,
                m[r28{0} - 108]=zfill(16,32,r0{0}),   m[r28{0} - 112]=%pc,   tmp1=r28{0} - 8,   tmpb=tmpb{0},
                %flags=LOGICALFLAGS32( 0 ),   %ZF=LOGICALFLAGS32( 0 ),   %CF=LOGICALFLAGS32( 0 )
              Live variables: eax in proc proc36
result:    0 *i32* eax := -
dest is not lib
call:   73 CALL proc38(
                *c** local3 := "%s:%u: failed assertion `%s'
"
              )
              Reaching definitions: r0=0x5080,   r24=0x405080,   r25=r25{97},   r26=r26{98},   r27=r27{99},
                r28=r28{0} - 112,   r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r27{0},
                m[r28{0} - 92]=m[r28{0} - 92]{0},   m[r28{0} - 96]=m[r28{0} - 96]{105},
                m[r28{0} - 100]=m[r28{0} - 100]{106},   m[r28{0} - 104]=0x405080,   m[r28{0} - 108]=0x405061,
                m[r28{0} - 112]=%pc,   tmp1=tmp1{100},   tmpb=tmpb{101},   %flags=%flags{102},   %ZF=%ZF{103},
                %CF=%CF{104}
              Live variables:  in proc proc36
dest is not lib
call:   23 {*32* eax, *v* r25, *v* r26} := CALL fprintf(
                *FILE** local0 := eax + 64
                *c** local1 := param1
              )
              Reaching definitions: r24=r24{15} + 64,   r28=r28{0} - 32,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} + 16]=m[r28{0} + 16]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 12]=m[r28{0} + 16]{0},
                m[r28{0} - 16]=m[r28{0} + 12]{0},   m[r28{0} - 20]=m[r28{0} + 8]{0},   m[r28{0} - 24]=m[r28{0} + 4]{0},
                m[r28{0} - 28]=r24{15} + 64,   m[r28{0} - 32]=%pc,   tmp1=r24{15},
                %flags=ADDFLAGS32( r24{15}, 64, r24{15} + 64 ),   %ZF=ADDFLAGS32( r24{15}, 64, r24{15} + 64 ),
                %CF=ADDFLAGS32( r24{15}, 64, r24{15} + 64 )
              Live variables:  in proc proc38
dest is not lib
call:   32 {*32* eax, *v* r25, *v* r26} := CALL fflush(
              )
              Reaching definitions: r24=r24{24} + 64,   r25=r25{23},   r26=r26{23},   r28=r28{0} - 32,   r29=r28{0} - 4
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} + 16]=m[r28{0} + 16]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 12]=m[r28{0} + 16]{0},
                m[r28{0} - 16]=m[r28{0} + 12]{0},   m[r28{0} - 20]=m[r28{0} + 8]{0},   m[r28{0} - 24]=m[r28{0} + 4]{0},
                m[r28{0} - 28]=r24{24} + 64,   m[r28{0} - 32]=%pc,   tmp1=r24{24},
                %flags=ADDFLAGS32( r24{24}, 64, r24{24} + 64 ),   %ZF=ADDFLAGS32( r24{24}, 64, r24{24} + 64 ),
                %CF=ADDFLAGS32( r24{24}, 64, r24{24} + 64 )
              Live variables:  in proc proc38
dest is not lib
call:   36 {*32* eax, *v* r25, *v* r26} := CALL abort(
              )
              Reaching definitions: r24=r24{32},   r25=r25{32},   r26=r26{32},   r28=r28{0} - 32,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} + 16]=m[r28{0} + 16]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 12]=m[r28{0} + 16]{0},
                m[r28{0} - 16]=m[r28{0} + 12]{0},   m[r28{0} - 20]=m[r28{0} + 8]{0},   m[r28{0} - 24]=m[r28{0} + 4]{0},
                m[r28{0} - 28]=r24{24} + 64,   m[r28{0} - 32]=%pc,   tmp1=r24{24},
                %flags=ADDFLAGS32( r24{24}, 64, r24{24} + 64 ),   %ZF=ADDFLAGS32( r24{24}, 64, r24{24} + 64 ),
                %CF=ADDFLAGS32( r24{24}, 64, r24{24} + 64 )
              Live variables:  in proc proc38
