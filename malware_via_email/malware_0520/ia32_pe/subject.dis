// fn00401007
// Return size: 0
void fn00401007()
fn00401007_entry:
	// succ:  l00401007
l00401007:
	esp = esp - 0x00000004
	Mem0[esp:word32] = ebp
	ebp = esp
	esi = esi + ecx
	SCZO = cond(esi)
	esi = esi + edi
	SCZO = cond(esi)
	edx = edx - 0x00000001
	SZO = cond(edx)
	ebx = ebx - 0x00000001
	SZO = cond(ebx)
	ebx = edx
	edi = edi + esi
	SCZO = cond(edi)
	branch Test(SG,S) l00401048
	// succ:  l00401016 l00401048
l00401016:
	esp = esp - 0x00000002
	Mem0[esp:word16] = cx
	cx = Mem0[esp:word16]
	esp = esp + 0x00000002
	bx = ebx
	branch Test(NS,S) l00401048
	// succ:  l0040101F l00401048
l0040101F:
l00401048:
	ebx = ebx + edx
	SCZO = cond(ebx)
	esi = esi + ecx
	SCZO = cond(esi)
	// succ:  l0040104B
l0040104B:
	edx = edx - esi
	SCZO = cond(edx)
	edx = edx ^ edi
	SZO = cond(edx)
	C = false
	ecx = ecx - 0x00000001
	SZO = cond(ecx)
	ecx = ebx
	ebx = eax
	ebx = ebx - 0x00000001
	SZO = cond(ebx)
	ecx = ecx ^ edi
	SZO = cond(ecx)
	C = false
	ebx = ebx + 0x00000001
	SZO = cond(ebx)
	branch Test(EQ,Z) l0040108C
	// succ:  l0040105B l0040108C
l0040105B:
	dx = dx
	branch Test(NE,Z) l0040108C
	// succ:  l00401060 l0040108C
l00401060:
	branch Test(GE,SO) l0040104B
	// succ:  l00401062 l0040104B
l00401062:
	dh = 0x12
	eax = eax - 0xFA8B911F - C
	SCZO = cond(eax)
	__fclex()
	edx = edx + eax
	SCZO = cond(edx)
	edx = eax
	esi = esi | eax
	SZO = cond(esi)
	C = false
	ecx = ecx - eax
	SCZO = cond(ecx)
	esi = esi + eax
	SCZO = cond(esi)
	edi = edi - 0x00000001
	SZO = cond(edi)
	branch Test(ULE,CZ) l00401255
	// succ:  l0040107C l00401255
l0040107C:
	branch Test(EQ,Z) l0040107E
	// succ:  l0040107E
l0040107E:
l0040108C:
l00401255:
fn00401007_exit:


