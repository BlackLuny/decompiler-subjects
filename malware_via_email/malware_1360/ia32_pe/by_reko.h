// subject.h
// Generated by decompiling subject.exe
// using Reko decompiler version VERSION

/*
// Equivalence classes ////////////
Eq_1: (struct "Globals")
	globals_t (in globals : (ptr (struct "Globals")))
Eq_2: DWORD
	T_2 (in eax : Eq_2)
	T_11 (in eax : word32)
Eq_3: (fn word32 (word32, byte))
	T_3 (in __rol : ptr32)
Eq_7: (fn word32 (word32, byte, bool))
	T_7 (in __rcl : ptr32)
// Type Variables ////////////
globals_t: (in globals : (ptr (struct "Globals")))
  Class: Eq_1
  DataType: (ptr Eq_1)
  OrigDataType: (ptr (struct "Globals"))
T_2: (in eax : Eq_2)
  Class: Eq_2
  DataType: Eq_2
  OrigDataType: DWORD
T_3: (in __rol : ptr32)
  Class: Eq_3
  DataType: (ptr Eq_3)
  OrigDataType: (ptr (fn T_6 (T_4, T_5)))
T_4: (in esi : word32)
  Class: Eq_4
  DataType: word32
  OrigDataType: word32
T_5: (in 0x12 : byte)
  Class: Eq_5
  DataType: byte
  OrigDataType: byte
T_6: (in __rol(esi, 0x12) : word32)
  Class: Eq_6
  DataType: word32
  OrigDataType: word32
T_7: (in __rcl : ptr32)
  Class: Eq_7
  DataType: (ptr Eq_7)
  OrigDataType: (ptr (fn T_10 (T_4, T_8, T_9)))
T_8: (in 0x1E : byte)
  Class: Eq_8
  DataType: byte
  OrigDataType: byte
T_9: (in false : bool)
  Class: Eq_9
  DataType: bool
  OrigDataType: bool
T_10: (in __rcl(esi, 0x1E, false) : word32)
  Class: Eq_10
  DataType: word32
  OrigDataType: word32
T_11: (in eax : word32)
  Class: Eq_2
  DataType: Eq_2
  OrigDataType: word32
*/
typedef struct Globals {
} Eq_1;

typedef DWORD Eq_2;

typedef word32 (Eq_3)(word32, byte);

typedef word32 (Eq_7)(word32, byte, bool);

