Unknown library function RealizePalette
Unknown library function GetModuleHandleA
COMPUTED JUMP at 0x4118da, pDest = r24
assgn   11 *32* %pc := m[0x4120a0]
is readonly
assgn   17 *32* %pc := m[0x41218c]
is readonly
assgn   21 *32* %pc := m[0x412104]
is readonly
assgn   29 *32* %pc := m[0x4120a0]
is readonly
assgn   33 *32* %pc := m[0x412024]
is readonly
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
in proc _start adding addrExp r28{0} - 4 to local table
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 32 to local table
in proc _start adding addrExp r28{0} - 32 to local table
in proc _start adding addrExp r28{0} - 32 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 32 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 40 to local table
finding final parameters for _start
potential param r28
found new parameter r28
after removing matching assigns (%pc).
in proc proc1 adding addrExp r28{0} - 4 to local table
finding final parameters for proc1
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
finding final parameters for proc1
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
local eax has type HANDLE that doesn't agree with type of define __size32 of a library, why?
local esp has type __size32 that doesn't agree with type of define void of a library, why?
local eax has type __size32 that doesn't agree with type of define HANDLE of a library, why?
local eax has type HANDLE that doesn't agree with type of define __size32 of a library, why?
dest is not lib
call:   12 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetCommandLineW(
              )
              Reaching definitions: r28=r28{0} - 28,   r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},
                m[r28{0} - 24]=0x431ab6,   m[r28{0} - 28]=%pc,   tmp1=r28{0} - 4,
                %flags=ADDFLAGS32( r28{0} - 4, -16, r28{0} - 20 ),   %ZF=ADDFLAGS32( r28{0} - 4, -16, r28{0} - 20 ),
                %CF=ADDFLAGS32( r28{0} - 4, -16, r28{0} - 20 )
              Live variables:  in proc _start
dest is not lib
call:   18 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL RealizePalette(
              )
              Reaching definitions: r24=r24{12},   r25=r25{12},   r26=r26{12},   r28=r28{0} - 32,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 24]=0x431ab6,   m[r28{0} - 28]=0,   m[r28{0} - 32]=%pc,
                tmp1=r28{0} - 4,   %flags=ADDFLAGS32( r28{0} - 4, -16, r28{0} - 20 ),
                %ZF=ADDFLAGS32( r28{0} - 4, -16, r28{0} - 20 ),   %CF=ADDFLAGS32( r28{0} - 4, -16, r28{0} - 20 )
              Live variables:  in proc _start
dest is not lib
call:   22 {*HANDLE* eax, *v* ecx, *v* edx, *v* esp} := CALL GetModuleHandleA(
              )
              Reaching definitions: r24=r24{18},   r25=r25{18},   r26=r26{18},   r28=r28{0} - 32,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 24]=0x431ab6,   m[r28{0} - 28]=0,   m[r28{0} - 32]=%pc,
                tmp1=r28{0} - 4,   %flags=ADDFLAGS32( r28{0} - 4, -16, r28{0} - 20 ),
                %ZF=ADDFLAGS32( r28{0} - 4, -16, r28{0} - 20 ),   %CF=ADDFLAGS32( r28{0} - 4, -16, r28{0} - 20 )
              Live variables: eax in proc _start
result:    0 *HANDLE* eax := -
dest is not lib
call:   30 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetCommandLineW(
              )
              Reaching definitions: r24=r24{22},   r25=r25{22},   r26=r26{22},   r28=r28{0} - 40,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 24]=0x431ab6,   m[r28{0} - 28]=0,   m[r28{0} - 32]=0x431ac0,
                m[r28{0} - 36]=r24{22},   m[r28{0} - 40]=%pc,   tmp1=r28{0} - 4,
                %flags=ADDFLAGS32( r28{0} - 4, -16, r28{0} - 20 ),   %ZF=ADDFLAGS32( r28{0} - 4, -16, r28{0} - 20 ),
                %CF=ADDFLAGS32( r28{0} - 4, -16, r28{0} - 20 )
              Live variables:  in proc _start
dest is not lib
call:   34 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local0 := eax
                *c** local1 := "ZwQueryOpenSubKeys"
              )
              Reaching definitions: r24=r24{30},   r25=r25{30},   r26=r26{30},   r28=r28{0} - 40,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 24]=0x431ab6,   m[r28{0} - 28]=0,   m[r28{0} - 32]=0x431ac0,
                m[r28{0} - 36]=r24{22},   m[r28{0} - 40]=%pc,   tmp1=r28{0} - 4,
                %flags=ADDFLAGS32( r28{0} - 4, -16, r28{0} - 20 ),   %ZF=ADDFLAGS32( r28{0} - 4, -16, r28{0} - 20 ),
                %CF=ADDFLAGS32( r28{0} - 4, -16, r28{0} - 20 )
              Live variables: eax,  ecx,  edx in proc _start
result:    0 *32* eax := -
result:    0 *v* ecx := -
result:    0 *v* edx := -
