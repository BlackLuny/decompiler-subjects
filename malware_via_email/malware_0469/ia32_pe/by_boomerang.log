Unknown library function AddUsersToEncryptedFile
Unknown library function AreAllAccessesGranted
Unknown library function VirtualProtect
assgn   23 *32* %pc := m[0x403004]
is readonly
assgn   37 *32* %pc := m[0x403000]
is readonly
assgn   54 *32* %pc := m[0x40300c]
is readonly
assgn  180 *32* %pc := m[0x403010]
is readonly
assgn  211 *32* %pc := m[0x403018]
is readonly
assgn  225 *32* %pc := m[0x403018]
is readonly
assgn  256 *32* %pc := m[0x403014]
is readonly
after removing matching assigns (%pc).
WARNING: size 0x10 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x10 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x10 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x10 meet with /*signed?*/int; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
in proc _start adding addrExp r28{0} - 72 to local table
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 20 to local table
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 32 to local table
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 8 to local table
TYPE ERROR: Existing type at address 0xfffffff8 is not structure or array type
in proc _start adding addrExp r28{0} - 16 to local table
TYPE ERROR: Existing type at address 0xfffffff0 is not structure or array type
in proc _start adding addrExp r28{0} - 20 to local table
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 32 to local table
in proc _start adding addrExp r28{0} - 36 to local table
TYPE ERROR: Existing type at address 0xffffffdc is not structure or array type
in proc _start adding addrExp r28{0} - 40 to local table
TYPE ERROR: Existing type at address 0xffffffd8 is not structure or array type
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 52 to local table
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 52 to local table
in proc _start adding addrExp r28{0} - 56 to local table
in proc _start adding addrExp r28{0} - 60 to local table
in proc _start adding addrExp r28{0} - 64 to local table
in proc _start adding addrExp r28{0} - 68 to local table
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 40 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffd8 existing type unsigned int but added type __size32 *
in proc _start adding addrExp r28{0} - 40 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffd8 existing type unsigned int but added type __size32 *
in proc _start adding addrExp r28{0} - 68 to local table
in proc _start adding addrExp r28{0} - 72 to local table
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 68 to local table
in proc _start adding addrExp r28{0} - 72 to local table
in proc _start adding addrExp r28{0} - 68 to local table
in proc _start adding addrExp r28{0} - 72 to local table
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 68 to local table
in proc _start adding addrExp r28{0} - 72 to local table
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 68 to local table
in proc _start adding addrExp r28{0} - 72 to local table
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 68 to local table
in proc _start adding addrExp r28{0} - 72 to local table
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 68 to local table
in proc _start adding addrExp r28{0} - 72 to local table
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 68 to local table
in proc _start adding addrExp r28{0} - 72 to local table
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 40 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffd8 existing type unsigned int but added type __size32 *
in proc _start adding addrExp r28{0} - 40 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffd8 existing type unsigned int but added type __size32 *
in proc _start adding addrExp r28{0} - 68 to local table
in proc _start adding addrExp r28{0} - 72 to local table
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 68 to local table
finding final parameters for _start
potential param r28
found new parameter r28
potential param r27
found new parameter r27
potential param r30
found new parameter r30
potential param r31
found new parameter r31
potential param tmph
potential param m[r28{0} - 76]
found new parameter m[r28{0} - 76]
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 40 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffd8 existing type unsigned int but added type __size32 *
in proc _start adding addrExp r28{0} - 40 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffd8 existing type unsigned int but added type __size32 *
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 40 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffd8 existing type unsigned int but added type __size32 *
local ecx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local edx has type unsigned int that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local ecx has type void that doesn't agree with type of define /*signed?*/int of a library, why?
local edx has type void that doesn't agree with type of define unsigned int of a library, why?
local ecx has type /*signed?*/int that doesn't agree with type of define unsigned int of a library, why?
local edx has type unsigned int that doesn't agree with type of define union { unsigned int x1; void * x2; } of a library, why?
local ecx has type unsigned int that doesn't agree with type of define void of a library, why?
local edx has type union { unsigned int x1; void * x2; } that doesn't agree with type of define void of a library, why?
dest is not lib
call:   24 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL AddUsersToEncryptedFile(
              )
              Reaching definitions: r2=r2{0},   r9=r9{0},   r24=r24{0} + r24{0},   r27=r27{0},   r28=r28{0} - 44,
                r29=0,   r30=r30{0},   r31=r31{0},   m[r28{0} - 8]=37,   m[r28{0} - 16]=228,   m[r28{0} - 20]=r27{0},
                m[r28{0} - 24]=r29{0},   m[r28{0} - 28]=r30{0},   m[r28{0} - 32]=r31{0},   m[r28{0} - 36]=0,
                m[r28{0} - 40]=0,   m[r28{0} - 44]=%pc,   m[r28{0} - 72]=m[r28{0} - 72]{0},
                m[r28{0} - 76]=m[r28{0} - 76]{0},   tmp1=r28{0},   tmph=tmph{0},   %flags=LOGICALFLAGS32( 0 ),
                %ZF=LOGICALFLAGS32( 0 ),   %CF=LOGICALFLAGS32( 0 )
              Live variables: eax in proc _start
result:    0 *32* eax := -
dest is not lib
call:   38 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL AreAllAccessesGranted(
              )
              Reaching definitions: r2=r2{0},   r9=r9{0},   r24=r24{24},   r25=r25{24},   r26=r26{24},   r27=r27{0},
                r28=r28{0} - 52,   r29=0,   r30=r30{0},   r31=r31{0},   m[r28{0} - 8]=37,   m[r28{0} - 16]=228,
                m[r28{0} - 20]=r27{0},   m[r28{0} - 24]=r29{0},   m[r28{0} - 28]=r30{0},   m[r28{0} - 32]=r31{0},
                m[r28{0} - 36]=0,   m[r28{0} - 40]=0,   m[r28{0} - 44]=-1,   m[r28{0} - 48]=-1,   m[r28{0} - 52]=%pc,
                m[r28{0} - 72]=m[r28{0} - 72]{0},   m[r28{0} - 76]=m[r28{0} - 76]{0},   tmp1=r24{24},   tmph=tmph{0},
                %flags=LOGICALFLAGS32( r24{24} ),   %ZF=LOGICALFLAGS32( r24{24} ),   %CF=LOGICALFLAGS32( r24{24} )
              Live variables: eax in proc _start
result:    0 *32* eax := -
dest is not lib
call:   55 {*32* eax, *j32* ecx, *u32* edx, *v* esp} := CALL VirtualProtect(
              )
              Reaching definitions: r2=r2{0},   r9=r9{0},   r24=r28{0} - 28,   r25=r25{38},   r26=r26{38},   r27=r27{0}
                r28=r28{0} - 68,   r29=0,   r30=r30{0},   r31=r31{0},   m[r28{0} - 8]=37,   m[r28{0} - 16]=228,
                m[r28{0} - 20]=r27{0},   m[r28{0} - 24]=m[r28{0} - 24]{415},   m[r28{0} - 28]=r30{0},
                m[r28{0} - 32]=r31{0},   m[r28{0} - 36]=0,   m[r28{0} - 40]=0,   m[r28{0} - 44]=-1,   m[r28{0} - 48]=-1
                m[r28{0} - 52]=r28{0} - 28,   m[r28{0} - 56]=64,   m[r28{0} - 60]=0x3000,   m[r28{0} - 64]=0x401000,
                m[r28{0} - 68]=%pc,   m[r28{0} - 72]=m[r28{0} - 72]{0},   m[r28{0} - 76]=m[r28{0} - 76]{0},
                tmp1=r24{38},   tmph=tmph{0},   %flags=LOGICALFLAGS32( r24{38} ),   %ZF=LOGICALFLAGS32( r24{38} ),
                %CF=LOGICALFLAGS32( r24{38} )
              Live variables: ecx,  edx in proc _start
result:    0 *j32* ecx := -
result:    0 *u32* edx := -
dest is not lib
call:  181 {*HANDLE* eax_4, *u32* ecx, *union* edx, *v* esp} := CALL LoadLibraryA(
                *LPCSTR* local4 := ecx + 0x401348
              )
              Reaching definitions: r2=r2{337},   r9=truncu(32,8,r25{170} + 0x401348),   r24=r24{339},
                r25=r25{170} + 0x401348,   r26=r26{341},   r27=0x401348,   r28=(r28{0} - 64) - 8,   r29=r29{343},
                r30=r30{344},   r31=r31{345},   m[r28{0} - 8]=37,   m[r28{0} - 16]=228,   m[r28{0} - 20]=r27{0},
                m[r28{0} - 24]=m[r28{0} - 24]{415},   m[r28{0} - 28]=r30{0},   m[r28{0} - 32]=r31{0},
                m[r28{0} - 36]=m[r28{0} - 36]{420},   m[r28{0} - 40]=m[r28{0} - 40]{422},   m[r28{0} - 44]=-1,
                m[r28{0} - 48]=-1,   m[r28{0} - 52]=r28{0} - 28,   m[r28{0} - 56]=64,   m[r28{0} - 60]=0x3000,
                m[r28{0} - 64]=0x401000,   m[r28{0} - 68]=r25{170} + 0x401348,   m[r28{0} - 72]=%pc,
                m[r28{0} - 76]=m[r28{0} - 76]{425},   tmp1=r25{170},   tmph=tmph{320},
                %flags=ADDFLAGS32( r25{170}, 0x401348, r25{170} + 0x401348 ),
                %ZF=ADDFLAGS32( r25{170}, 0x401348, r25{170} + 0x401348 ),
                %CF=ADDFLAGS32( r25{170}, 0x401348, r25{170} + 0x401348 )
              Live variables: eax_4,  ecx,  edx in proc _start
result:    0 *HANDLE* eax_4 := -
result:    0 *u32* ecx := -
result:    0 *union* edx := -
dest is not lib
call:  212 {*32* eax, *u32* ecx, *union* edx_3, *v* esp} := CALL GetProcAddress(
                *HANDLE* local5 := eax_4
                *union* local4 := edx
              )
              Reaching definitions: r2=truncu(32,16,r26{203}),   r9=r9{352},   r24=r24{353},   r25=r25{354},
                r26=r26{203},   r27=0x401348,   r28=(r28{0} - 64) - 12,   r29=r24{181},   r30=r30{357},   r31=r31{358},
                m[r28{0} - 8]=37,   m[r28{0} - 16]=228,   m[r28{0} - 20]=r27{0},   m[r28{0} - 24]=m[r28{0} - 24]{415},
                m[r28{0} - 28]=r30{0},   m[r28{0} - 32]=r31{0},   m[r28{0} - 36]=m[r28{0} - 36]{420},
                m[r28{0} - 40]=m[r28{0} - 40]{422},   m[r28{0} - 44]=-1,   m[r28{0} - 48]=-1,
                m[r28{0} - 52]=r28{0} - 28,   m[r28{0} - 56]=64,   m[r28{0} - 60]=0x3000,   m[r28{0} - 64]=0x401000,
                m[r28{0} - 68]=r26{203},   m[r28{0} - 72]=r24{181},   m[r28{0} - 76]=%pc,   tmp1=tmp1{359},
                tmph=tmph{320},   %flags=%flags{360},   %ZF=%ZF{361},   %CF=%CF{362}
              Live variables: eax,  ecx,  edx_3 in proc _start
result:    0 *32* eax := -
result:    0 *u32* ecx := -
result:    0 *union* edx_3 := -
dest is not lib
call:  226 {*32* eax, *u32* ecx, *union* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local5 := eax_4
                *union* local4 := eax_3 + 0x40134a
              )
              Reaching definitions: r2=r2{351},   r9=truncu(32,8,r25{354} * 5),   r24=r24{353} + 0x40134a,
                r25=r25{354} * 5,   r26=r26{355},   r27=0x401348,   r28=(r28{0} - 64) - 12,   r29=r24{181},
                r30=r30{357},   r31=r31{358},   m[r28{0} - 8]=37,   m[r28{0} - 16]=228,   m[r28{0} - 20]=r27{0},
                m[r28{0} - 24]=m[r28{0} - 24]{415},   m[r28{0} - 28]=r30{0},   m[r28{0} - 32]=r31{0},
                m[r28{0} - 36]=m[r28{0} - 36]{420},   m[r28{0} - 40]=m[r28{0} - 40]{422},   m[r28{0} - 44]=-1,
                m[r28{0} - 48]=-1,   m[r28{0} - 52]=r28{0} - 28,   m[r28{0} - 56]=64,   m[r28{0} - 60]=0x3000,
                m[r28{0} - 64]=0x401000,   m[r28{0} - 68]=r24{353} + 0x40134a,   m[r28{0} - 72]=r24{181},
                m[r28{0} - 76]=%pc,   tmp1=tmp1{359},   tmph=tmph{320},   %flags=%flags{360},   %ZF=%ZF{361},
                %CF=%CF{362}
              Live variables: eax,  ecx,  edx in proc _start
result:    0 *32* eax := -
result:    0 *u32* ecx := -
result:    0 *union* edx := -
dest is not lib
call:  257 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL ExitProcess(
                *UINT* m[esp - 4] := m[esp - 4]
              )
              Reaching definitions: r2=r2{251},   r9=r9{251},   r24=r24{251},   r25=r25{251},   r26=r26{251},
                r27=r27{251},   r28=r28{251} - 8,   r29=r29{251},   r30=r30{251},   r31=r31{251},
                m[r28{0} - 8]=m[r28{0} - 8]{251},   m[r28{0} - 16]=m[r28{0} - 16]{251},
                m[r28{0} - 20]=m[r28{0} - 20]{251},   m[r28{0} - 24]=m[r28{0} - 24]{251},
                m[r28{0} - 28]=m[r28{0} - 28]{251},   m[r28{0} - 32]=m[r28{0} - 32]{251},
                m[r28{0} - 36]=m[r28{0} - 36]{251},   m[r28{0} - 40]=m[r28{0} - 40]{251},
                m[r28{0} - 44]=m[r28{0} - 44]{251},   m[r28{0} - 48]=m[r28{0} - 48]{251},
                m[r28{0} - 52]=m[r28{0} - 52]{251},   m[r28{0} - 56]=m[r28{0} - 56]{251},
                m[r28{0} - 60]=m[r28{0} - 60]{251},   m[r28{0} - 64]=m[r28{0} - 64]{251},
                m[r28{0} - 68]=m[r28{0} - 68]{251},   m[r28{0} - 72]=m[r28{0} - 72]{251},
                m[r28{0} - 76]=m[r28{0} - 76]{251},   m[r28{0} - 8]=m[r28{0} - 8]{251},
                m[r28{0} - 16]=m[r28{0} - 16]{251},   m[r28{0} - 20]=m[r28{0} - 20]{251},
                m[r28{0} - 24]=m[r28{0} - 24]{251},   m[r28{0} - 28]=m[r28{0} - 28]{251},
                m[r28{0} - 32]=m[r28{0} - 32]{251},   m[r28{0} - 36]=m[r28{0} - 36]{251},
                m[r28{0} - 40]=m[r28{0} - 40]{251},   m[r28{0} - 44]=m[r28{0} - 44]{251},
                m[r28{0} - 48]=m[r28{0} - 48]{251},   m[r28{0} - 52]=m[r28{0} - 52]{251},
                m[r28{0} - 56]=m[r28{0} - 56]{251},   m[r28{0} - 60]=m[r28{0} - 60]{251},
                m[r28{0} - 64]=m[r28{0} - 64]{251},   m[r28{0} - 68]=m[r28{0} - 68]{251},
                m[r28{0} - 72]=m[r28{0} - 72]{251},   m[r28{0} - 76]=m[r28{0} - 76]{251},   <all>=<all>{251},
                tmp1=tmp1{251},   tmph=tmph{251},   %flags=%flags{251},   %ZF=%ZF{251},   %CF=%CF{251}
              Live variables:  in proc _start
