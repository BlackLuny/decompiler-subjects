INFO  an - ### holdec 1.1 Copyright 2003-2012 Raimar Falke
INFO  an - Using ./malware_via_email/malware_2458/ia32_pe/subject.exe as executable
read image                              : ............................................................ [ done ]
INFO  fG - Detected PE (Portable Executable)
INFO  ks - wrote ./malware_via_email/malware_2458/ia32_pe/subject.exe.info
INFO  fG - disassembleAndWrite: start a new loop with 1 extra block starts
Disassemble                             : ............................................................ [ done ]
INFO  fG - disassembleAndWrite: running multiline
INFO  ks - wrote ./malware_via_email/malware_2458/ia32_pe/subject.exe.info
Preprocessing 2076 asm lines            : ............................................................ [ done ]
INFO  ks - wrote ./malware_via_email/malware_2458/ia32_pe/subject.exe.info
INFO  fG - disassembleAndWrite: found no new addresses. will stop now.
INFO  ks - wrote ./malware_via_email/malware_2458/ia32_pe/subject.exe.info
Preprocessing 2409 asm lines            : ............................................................ [ done ]
INFO  ks - wrote ./malware_via_email/malware_2458/ia32_pe/subject.exe.info
INFO  fG - reading all asm lines ...
INFO  fG - ... read 2409 asm lines
create blocks                           : ............................................................ [ done ]
init blocks                             : ............................................................ [ done ]
WARN  M - The last line of the last block 376 is not a return or jump. Probably a data area.
Writing 24 methods to cache             : ............................................................ [ done ]
INFO  an - will decompile 24 functions
decompile F_00401010                    : ...INFO  ks - wrote ./malware_via_email/malware_2458/ia32_pe/subject.exe.info
......WARN  ac - Block 6 is already known to have a starting stack offset of -88 but when called from 4 it has an offset of -104
WARN  ac - Block 9 is already known to have a starting stack offset of -124 but when called from 8 it has an offset of -64
WARN  ac - Block 22 is already known to have a starting stack offset of -144 but when called from 21 it has an offset of -124
WARN  ac - Block 29 is already known to have a starting stack offset of -152 but when called from 24 it has an offset of -160
WARN  ac - Block 29 is already known to have a starting stack offset of -160 but when called from 25 it has an offset of -188
WARN  ac - Block 17 is already known to have a starting stack offset of -124 but when called from 16 it has an offset of -128
WARN  ac - Block 2 is already known to have a starting stack offset of -64 but when called from 33 it has an offset of -188
WARN  ac - Block 34 is already known to have a starting stack offset of -64 but when called from 33 it has an offset of -188
WARN  ac - Block 29 is already known to have a starting stack offset of -188 but when called from 28 it has an offset of -144
WARN  ac - Block 15 is already known to have a starting stack offset of -148 but when called from 14 it has an offset of -192
WARN  ac - Block 33 is already known to have a starting stack offset of -188 but when called from 31 it has an offset of -144
WARN  ac - Block 16 is already known to have a starting stack offset of -128 but when called from 15 it has an offset of -200
WARN  ac - Block 31 is already known to have a starting stack offset of -144 but when called from 30 it has an offset of -188
........ failed: A non-current expression of a variable is used in block L31 in reg_a39 = LOAD(ADD(reg_pp42, SEGMENT2ADDR(reg_pp43), 20)): The current setter is reg_zi19 while [reg_pp43] was found. Related expressions are [reg_pp14, reg_pp39, reg_zi19, reg_pp2, reg_pp22, reg_pp30, reg_pp20, reg_zi1, reg_pp43, reg_zi20]
decompile F_00401241                    : .WARN  ag - Referencing unknown line 00401010.0
..INFO  ks - wrote ./malware_via_email/malware_2458/ia32_pe/subject.exe.info
......WARN  ac - Block 1 is already known to have a starting stack offset of -8 but when called from 1 it has an offset of -12
WARN  ac - Block 2 is already known to have a starting stack offset of -8 but when called from 1 it has an offset of -12
................................................... [ done ]
decompile F_00401268                    : .WARN  ag - Referencing unknown line 00401241.0
WARN  ag - Referencing unknown line 00401241.0
WARN  ag - Referencing unknown line 00401a5a.0
WARN  ag - Referencing unknown line 00401a5a.0
..INFO  ks - wrote ./malware_via_email/malware_2458/ia32_pe/subject.exe.info
......WARN  ac - Block 2 is already known to have a starting stack offset of -40 but when called from 2 it has an offset of -44
WARN  ac - Block 3 is already known to have a starting stack offset of -40 but when called from 2 it has an offset of -44
................................................... [ done ]
decompile F_004012d3                    : ......................................WARN  d - may result in wrong values
WARN  d -   reg_pp24 = PHI(reg_24_local2, reg_24_local0) in Block6
WARN  d -   reg_24_local2 = ADD(reg_pp24, 2) in Block8
...................... [ done ]
decompile F_00401367                    : ............................................................ [ done ]
decompile F_0040138a                    : ............................................................ [ done ]
decompile F_00401390                    : .WARN  ag - Referencing unknown line 0040159a.0
WARN  ag - Referencing unknown line 00401a5a.0
..INFO  ks - wrote ./malware_via_email/malware_2458/ia32_pe/subject.exe.info
......WARN  ac - Block 9 is already known to have a starting stack offset of -40 but when called from 20 it has an offset of -56
WARN  ac - Block 10 is already known to have a starting stack offset of -40 but when called from 21 it has an offset of -88
WARN  ac - Block 10 is already known to have a starting stack offset of -88 but when called from 22 it has an offset of -40
WARN  ac - Block 9 is already known to have a starting stack offset of -56 but when called from 15 it has an offset of -40
................................................... [ done ]
decompile F_004014e5                    : .WARN  ag - Referencing unknown line 00401390.0
..INFO  ks - wrote ./malware_via_email/malware_2458/ia32_pe/subject.exe.info
......WARN  ac - Block 17 is already known to have a starting stack offset of -32 but when called from 16 it has an offset of -48
........ failed: A non-current expression of a variable is used in block L11 in reg_a13 = ADD(reg_a12, reg_pp15): The current setter is reg_d2 while [reg_pp15] was found. Related expressions are [reg_pp15, reg_d8, reg_d2, reg_d1]
decompile F_0040159a                    : .................................................ERROR ie - Caught an Exception while trying to construct regions. Will dump blocks and regions (if available).
java.lang.AssertionError: Found 0 jumps but expected one jump to block 13 in the jumps of block 12 (exit block of region 12)
	at holdec.ie.a(Unknown Source)
	at holdec.ie.a(Unknown Source)
	at holdec.ie.a(Unknown Source)
	at holdec.ie.b(Unknown Source)
	at holdec.ie.a(Unknown Source)
	at holdec.ie.f(Unknown Source)
	at holdec.ie.b(Unknown Source)
	at holdec.ie.a(Unknown Source)
	at holdec.dQ.e(Unknown Source)
	at holdec.eQ.a(Unknown Source)
	at holdec.eI.a(Unknown Source)
	at holdec.dQ.a(Unknown Source)
	at holdec.fG.a(Unknown Source)
	at holdec.an.a(Unknown Source)
	at holdec.an.<init>(Unknown Source)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:532)
	at holdec.Holdec.main(Unknown Source)
 failed: java.lang.AssertionError: Found 0 jumps but expected one jump to block 13 in the jumps of block 12 (exit block of region 12)
decompile F_004015e7                    : .WARN  ag - Referencing unknown line 0040166b.0
..INFO  ks - wrote ./malware_via_email/malware_2458/ia32_pe/subject.exe.info
......WARN  ac - Block 4 is already known to have a starting stack offset of -8 but when called from 5 it has an offset of -20
WARN  ac - Block 6 is already known to have a starting stack offset of -8 but when called from 5 it has an offset of -20
WARN  ac - Block 8 is already known to have a starting stack offset of 0 but when called from 7 it has an offset of -12
.............................WARN  d - may result in wrong values
WARN  d -   reg_pp9 = PHI(reg_var12, reg_var10) in Block4
WARN  d -   reg_var12 = ADD(reg_pp9, 20) in Block5
...........ERROR ie - Caught an Exception while trying to construct regions. Will dump blocks and regions (if available).
java.lang.AssertionError
	at holdec.iB.a(Unknown Source)
	at holdec.ie.l(Unknown Source)
	at holdec.ie.f(Unknown Source)
	at holdec.ie.b(Unknown Source)
	at holdec.ie.a(Unknown Source)
	at holdec.dQ.e(Unknown Source)
	at holdec.eQ.a(Unknown Source)
	at holdec.eI.a(Unknown Source)
	at holdec.dQ.a(Unknown Source)
	at holdec.fG.a(Unknown Source)
	at holdec.an.a(Unknown Source)
	at holdec.an.<init>(Unknown Source)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:532)
	at holdec.Holdec.main(Unknown Source)
 failed: java.lang.AssertionError
decompile F_00401639                    : ............................................................ [ done ]
decompile F_0040166b                    : .WARN  ag - Referencing unknown line 00401390.0
..INFO  ks - wrote ./malware_via_email/malware_2458/ia32_pe/subject.exe.info
......WARN  ac - Block 11 is already known to have a starting stack offset of -16 but when called from 10 it has an offset of -28
WARN  ac - Block 2 is already known to have a starting stack offset of -16 but when called from 11 it has an offset of -28
WARN  ac - Block 14 is already known to have a starting stack offset of -16 but when called from 13 it has an offset of -28
WARN  ac - Block 15 is already known to have a starting stack offset of -12 but when called from 14 it has an offset of -24
.............................WARN  d - may result in wrong values
WARN  d -   reg_pp26 = PHI(reg_var30, reg_var32) in Block7
WARN  d -   reg_var32 = ADD(reg_pp26, -12) in Block9
...................... [ done ]
decompile F_004016c9                    : ............................................................ [ done ]
decompile F_004016f7                    : .WARN  ag - Referencing unknown line 00401a35.0
..INFO  ks - wrote ./malware_via_email/malware_2458/ia32_pe/subject.exe.info
......WARN  ac - Block 4 is already known to have a starting stack offset of -16 but when called from 4 it has an offset of -20
WARN  ac - Block 6 is already known to have a starting stack offset of -12 but when called from 5 it has an offset of -16
WARN  ac - Block 7 is already known to have a starting stack offset of -8 but when called from 6 it has an offset of -12
................................................... [ done ]
decompile F_0040174b                    : ............................................................ [ done ]
decompile F_00401767                    : ............................................................ [ done ]
decompile F_00401799                    : .WARN  ag - Referencing unknown line 00401892.0
........WARN  ac - Block 12 is already known to have a starting stack offset of -28 but when called from 14 it has an offset of -36
WARN  ac - Block 13 is already known to have a starting stack offset of -28 but when called from 20 it has an offset of -36
............ failed: A non-current expression of a variable is used in block L5 in reg_c3 = LOAD(reg_pp2): The current setter is reg_c2 while [reg_pp2] was found. Related expressions are [reg_pp2, reg_c0, reg_c2]
decompile F_0040186e                    : ............................................................ [ done ]
decompile F_00401892                    : ...INFO  ks - wrote ./malware_via_email/malware_2458/ia32_pe/subject.exe.info
.............. failed: A non-current expression of a variable is used in block L5 in reg_d3 = UNSIGNED_EXTEND(LOAD(ADD(MULT(reg_pp7, 2), reg_d2, SEGMENT2ADDR(reg_pp5)))): The current setter is reg_a6 while [reg_pp7] was found. Related expressions are [reg_pp29, reg_a4, reg_a6, reg_a5, reg_pp7, reg_a45]
decompile F_00401a35                    : ...INFO  ks - wrote ./malware_via_email/malware_2458/ia32_pe/subject.exe.info
...................................WARN  d - may result in wrong values
WARN  d -   reg_pp6 = PHI(reg_var12, reg_var10) in Block2
WARN  d -   reg_var10 = ADD(InitValue(initial_value_of_esi), AND(LOAD(ADD(reg_pp6, 4)), 0x7fffffff), 16) in Block1
...................... [ done ]
decompile F_00401a5a                    : ...INFO  ks - wrote ./malware_via_email/malware_2458/ia32_pe/subject.exe.info
......................................................... [ done ]
decompile F_00401a70                    : .WARN  ag - Referencing unknown line 0040267c.0
WARN  ag - Referencing unknown line 00401799.0
WARN  ag - Referencing unknown line 0040138a.0
WARN  ag - Referencing unknown line 00401367.0
WARN  ag - Referencing unknown line 00401767.0
WARN  ag - Referencing unknown line 0040186e.0
WARN  ag - Referencing unknown line 00401390.0
WARN  ag - Referencing unknown line 00401639.0
WARN  ag - Referencing unknown line 00401390.0
WARN  ag - Referencing unknown line 004016c9.0
WARN  ag - Referencing unknown line 00401390.0
WARN  ag - Referencing unknown line 0040174b.0
WARN  ag - Referencing unknown line 00401390.0
WARN  ag - Referencing unknown line 004026b7.0
WARN  ag - Referencing unknown line 00401268.0
WARN  ag - Referencing unknown line 004014e5.0
WARN  ag - Referencing unknown line 004015e7.0
WARN  ag - Referencing unknown line 004016f7.0
WARN  ag - Referencing unknown line 004012d3.0
WARN  ag - Referencing unknown line 00401390.0
..INFO  ks - wrote ./malware_via_email/malware_2458/ia32_pe/subject.exe.info
......WARN  ac - Block 4 is already known to have a starting stack offset of -8 but when called from 3 it has an offset of -20
WARN  ac - Block 24 is already known to have a starting stack offset of -160 but when called from 22 it has an offset of -188
WARN  ac - Block 24 is already known to have a starting stack offset of -188 but when called from 23 it has an offset of -192
WARN  ac - Block 27 is already known to have a starting stack offset of -144 but when called from 25 it has an offset of -176
WARN  ac - Block 56 is already known to have a starting stack offset of -24 but when called from 27 it has an offset of -196
WARN  ac - Block 27 is already known to have a starting stack offset of -176 but when called from 26 it has an offset of -56
WARN  ac - Block 56 is already known to have a starting stack offset of -196 but when called from 13 it has an offset of -40
WARN  ac - Block 56 is already known to have a starting stack offset of -196 but when called from 29 it has an offset of -220
WARN  ac - Block 13 is already known to have a starting stack offset of -24 but when called from 14 it has an offset of -40
WARN  ac - Block 17 is already known to have a starting stack offset of -24 but when called from 14 it has an offset of -40
WARN  ac - Block 56 is already known to have a starting stack offset of -220 but when called from 32 it has an offset of -244
WARN  ac - Block 39 is already known to have a starting stack offset of -244 but when called from 38 it has an offset of -272
WARN  ac - Block 56 is already known to have a starting stack offset of -244 but when called from 39 it has an offset of -284
WARN  ac - Block 38 is already known to have a starting stack offset of -272 but when called from 37 it has an offset of -284
WARN  ac - Block 56 is already known to have a starting stack offset of -284 but when called from 50 it has an offset of -296
WARN  ac - Block 56 is already known to have a starting stack offset of -296 but when called from 54 it has an offset of -400
WARN  ac - Block 56 is already known to have a starting stack offset of -400 but when called from 55 it has an offset of -404
WARN  ac - Block 54 is already known to have a starting stack offset of -360 but when called from 53 it has an offset of -372
WARN  ac - Block 56 is already known to have a starting stack offset of -404 but when called from 58 it has an offset of -360
WARN  ac - Block 56 is already known to have a starting stack offset of -404 but when called from 59 it has an offset of -360
WARN  ac - Block 50 is already known to have a starting stack offset of -284 but when called from 41 it has an offset of -288
WARN  ac - Block 50 is already known to have a starting stack offset of -288 but when called from 42 it has an offset of -308
WARN  ac - Block 50 is already known to have a starting stack offset of -308 but when called from 49 it has an offset of -300
WARN  ac - Block 49 is already known to have a starting stack offset of -300 but when called from 48 it has an offset of -316
WARN  ac - Block 57 is already known to have a starting stack offset of -196 but when called from 31 it has an offset of -220
WARN  ac - Block 46 is already known to have a starting stack offset of -300 but when called from 45 it has an offset of -336
WARN  ac - Block 87 is already known to have a starting stack offset of -360 but when called from 85 it has an offset of -368
WARN  ac - Block 87 is already known to have a starting stack offset of -368 but when called from 86 it has an offset of -360
WARN  ac - Block 56 is already known to have a starting stack offset of -404 but when called from 93 it has an offset of -368
WARN  ac - Block 100 is already known to have a starting stack offset of -384 but when called from 101 it has an offset of -400
WARN  ac - Block 102 is already known to have a starting stack offset of -384 but when called from 101 it has an offset of -400
WARN  ac - Block 99 is already known to have a starting stack offset of -384 but when called from 95 it has an offset of -368
WARN  ac - Block 99 is already known to have a starting stack offset of -384 but when called from 96 it has an offset of -368
WARN  ac - Block 99 is already known to have a starting stack offset of -384 but when called from 97 it has an offset of -376
WARN  ac - Block 56 is already known to have a starting stack offset of -404 but when called from 108 it has an offset of -436
WARN  ac - Block 56 is already known to have a starting stack offset of -436 but when called from 112 it has an offset of -440
WARN  ac - Block 56 is already known to have a starting stack offset of -440 but when called from 113 it has an offset of -444
WARN  ac - Block 56 is already known to have a starting stack offset of -444 but when called from 117 it has an offset of -476
WARN  ac - Block 112 is already known to have a starting stack offset of -436 but when called from 110 it has an offset of -444
WARN  ac - Block 112 is already known to have a starting stack offset of -444 but when called from 111 it has an offset of -456
WARN  ac - Block 57 is already known to have a starting stack offset of -220 but when called from 123 it has an offset of -504
WARN  ac - Block 123 is already known to have a starting stack offset of -504 but when called from 122 it has an offset of -520
WARN  ac - Block 56 is already known to have a starting stack offset of -476 but when called from 107 it has an offset of -436
WARN  ac - Block 108 is already known to have a starting stack offset of -420 but when called from 107 it has an offset of -436
WARN  ac - Block 93 is already known to have a starting stack offset of -368 but when called from 92 it has an offset of -384
WARN  ac - Block 106 is already known to have a starting stack offset of -408 but when called from 104 it has an offset of -420
WARN  ac - Block 56 is already known to have a starting stack offset of -476 but when called from 71 it has an offset of -376
WARN  ac - Block 67 is already known to have a starting stack offset of -364 but when called from 65 it has an offset of -384
WARN  ac - Block 71 is already known to have a starting stack offset of -376 but when called from 69 it has an offset of -400
WARN  ac - Block 71 is already known to have a starting stack offset of -400 but when called from 67 it has an offset of -392
WARN  ac - Block 69 is already known to have a starting stack offset of -400 but when called from 68 it has an offset of -404
WARN  ac - Block 74 is already known to have a starting stack offset of -376 but when called from 73 it has an offset of -388
WARN  ac - Block 82 is already known to have a starting stack offset of -360 but when called from 74 it has an offset of -388
WARN  ac - Block 56 is already known to have a starting stack offset of -476 but when called from 80 it has an offset of -404
WARN  ac - Block 82 is already known to have a starting stack offset of -388 but when called from 81 it has an offset of -404
WARN  ac - Block 82 is already known to have a starting stack offset of -404 but when called from 79 it has an offset of -388
WARN  ac - Block 56 is already known to have a starting stack offset of -476 but when called from 90 it has an offset of -376
WARN  ac - Block 123 is already known to have a starting stack offset of -520 but when called from 120 it has an offset of -512
WARN  ac - Block 123 is already known to have a starting stack offset of -520 but when called from 121 it has an offset of -528
WARN  ac - Block 106 is already known to have a starting stack offset of -420 but when called from 105 it has an offset of -412
WARN  ac - Block 17 is already known to have a starting stack offset of -40 but when called from 15 it has an offset of -20
WARN  ac - Block 17 is already known to have a starting stack offset of -40 but when called from 16 it has an offset of -20
........ failed: A non-current expression of a variable is used in block L84 in if(CMP(reg_a129, ==, reg_pp100)) goto L87: The current setter is reg_b47 while [reg_pp100] was found. Related expressions are [reg_pp74, reg_b43, reg_pp117, reg_b44, reg_pp107, reg_pp69, reg_pp86, reg_b38, reg_b39, reg_pp100, reg_b49, reg_pp112, reg_pp81, reg_pp132, reg_b47, reg_b48, reg_b45, reg_b36, reg_b46, reg_b37]
decompile F_0040267c                    : ............................................................ [ done ]
decompile F_004026b7                    : ............................................................ [ done ]
