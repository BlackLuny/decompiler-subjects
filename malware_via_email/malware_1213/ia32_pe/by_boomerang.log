Unknown library function GetModuleHandleA
COMPUTED JUMP at 0x40125e, pDest = m[0x4092cc]
Unknown library function lstrcpyA
COMPUTED JUMP at 0x401a30, pDest = r26
assgn    8 *32* %pc := m[0x401008]
is readonly
assgn   18 *32* %pc := m[0x401004]
is readonly
after removing matching assigns (%pc).
in proc proc1 adding addrExp r28{0} - 4 to local table
in proc proc1 adding addrExp r28{0} - 8 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffff4 existing type unsigned int but added type char *
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 20 to local table
in proc proc1 adding addrExp r28{0} - 8 to local table
finding final parameters for proc1
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
assgn   19 *32* %pc := m[0x401010]
is readonly
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
in proc proc2 adding addrExp r28{0} - 4 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 16 to local table
in proc proc2 adding addrExp r28{0} - 20 to local table
in proc proc2 adding addrExp r28{0} - 24 to local table
in proc proc2 adding addrExp r28{0} - 28 to local table
in proc proc2 adding addrExp r28{0} - 32 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
finding final parameters for proc2
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
in proc proc9 adding addrExp r28{0} - 12 to local table
in proc proc9 adding addrExp r28{0} - 20 to local table
in proc proc9 adding addrExp r28{0} - 4 to local table
in proc proc9 adding addrExp r28{0} - 8 to local table
in proc proc9 adding addrExp r28{0} - 16 to local table
in proc proc9 adding addrExp r28{0} - 8 to local table
in proc proc9 adding addrExp r28{0} - 12 to local table
in proc proc9 adding addrExp r28{0} - 16 to local table
in proc proc9 adding addrExp r28{0} - 20 to local table
in proc proc9 adding addrExp r28{0} - 12 to local table
in proc proc9 adding addrExp r28{0} - 20 to local table
in proc proc9 adding addrExp r28{0} - 8 to local table
in proc proc9 adding addrExp r28{0} - 16 to local table
finding final parameters for proc9
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc3 ###
in proc proc3 adding addrExp r28{0} - 5 to local table
in proc proc3 adding addrExp r28{0} - 28 to local table
in proc proc3 adding addrExp r28{0} - 36 to local table
in proc proc3 adding addrExp r28{0} - 40 to local table
in proc proc3 adding addrExp r28{0} - 44 to local table
in proc proc3 adding addrExp r28{0} - 16 to local table
in proc proc3 adding addrExp r28{0} - 32 to local table
in proc proc3 adding addrExp r28{0} - 4 to local table
in proc proc3 adding addrExp r28{0} - 12 to local table
in proc proc3 adding addrExp r28{0} - 17 to local table
in proc proc3 adding addrExp r28{0} - 24 to local table
in proc proc3 adding addrExp r28{0} - 5 to local table
in proc proc3 adding addrExp r28{0} - 12 to local table
in proc proc3 adding addrExp r28{0} - 24 to local table
in proc proc3 adding addrExp r28{0} - 28 to local table
in proc proc3 adding addrExp r28{0} - 36 to local table
in proc proc3 adding addrExp r28{0} - 40 to local table
in proc proc3 adding addrExp r28{0} - 44 to local table
in proc proc3 adding addrExp r28{0} - 5 to local table
in proc proc3 adding addrExp r28{0} - 12 to local table
in proc proc3 adding addrExp r28{0} - 24 to local table
in proc proc3 adding addrExp r28{0} - 12 to local table
in proc proc3 adding addrExp r28{0} - 36 to local table
in proc proc3 adding addrExp r28{0} - 40 to local table
in proc proc3 adding addrExp r28{0} - 44 to local table
in proc proc3 adding addrExp r28{0} - 12 to local table
in proc proc3 adding addrExp r28{0} - 36 to local table
in proc proc3 adding addrExp r28{0} - 40 to local table
in proc proc3 adding addrExp r28{0} - 44 to local table
in proc proc3 adding addrExp r28{0} - 12 to local table
in proc proc3 adding addrExp r28{0} - 28 to local table
in proc proc3 adding addrExp r28{0} - 28 to local table
in proc proc3 adding addrExp r28{0} - 24 to local table
in proc proc3 adding addrExp r28{0} - 28 to local table
in proc proc3 adding addrExp r28{0} - 24 to local table
in proc proc3 adding addrExp r28{0} - 12 to local table
in proc proc3 adding addrExp r28{0} - 24 to local table
in proc proc3 adding addrExp r28{0} - 28 to local table
in proc proc3 adding addrExp r28{0} - 36 to local table
in proc proc3 adding addrExp r28{0} - 40 to local table
in proc proc3 adding addrExp r28{0} - 44 to local table
in proc proc3 adding addrExp r28{0} - 24 to local table
in proc proc3 adding addrExp r28{0} - 12 to local table
in proc proc3 adding addrExp r28{0} - 24 to local table
in proc proc3 adding addrExp r28{0} - 28 to local table
in proc proc3 adding addrExp r28{0} - 36 to local table
in proc proc3 adding addrExp r28{0} - 40 to local table
in proc proc3 adding addrExp r28{0} - 44 to local table
finding final parameters for proc3
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} - 28]
found new parameter m[r28{0} - 28]
potential param m[r28{0} - 36]
found new parameter m[r28{0} - 36]
potential param m[r28{0} - 40]
found new parameter m[r28{0} - 40]
potential param m[r28{0} - 44]
found new parameter m[r28{0} - 44]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} - 16]
found new parameter m[r28{0} - 16]
potential param m[r28{0} - 32]
found new parameter m[r28{0} - 32]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
assgn    6 *32* r24 := m[0x4092ac]
assgn   11 *32* r25 := m[0x4092ac]
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc6 ###
in proc proc6 adding addrExp r28{0} - 4 to local table
finding final parameters for proc6
potential param r28
found new parameter r28
potential param r24
found new parameter r24
potential param r26
found new parameter r26
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
assgn    9 *32* tmp1 := m[0x4092c4]
assgn   12 *32* r24 := m[0x4092b4]
assgn   37 *32* %pc := m[0x401010]
is readonly
assgn   40 *32* tmp1 := m[0x4092a4]
assgn   52 *32* r25 := m[0x4092a4]
assgn   62 *32* r26 := m[0x4092a4]
assgn  116 *32* r25 := m[0x4092a4]
assgn  135 *32* r30 := m[0x4092a4]
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc4 ###
in proc proc4 adding addrExp r28{0} - 8 to local table
in proc proc4 adding addrExp r28{0} - 16 to local table
in proc proc4 adding addrExp r28{0} - 28 to local table
in proc proc4 adding addrExp r28{0} - 12 to local table
in proc proc4 adding addrExp r28{0} - 4 to local table
in proc proc4 adding addrExp r28{0} - 40 to local table
in proc proc4 adding addrExp r28{0} - 36 to local table
in proc proc4 adding addrExp r28{0} - 36 to local table
in proc proc4 adding addrExp r28{0} - 36 to local table
in proc proc4 adding addrExp r28{0} - 32 to local table
in proc proc4 adding addrExp r28{0} - 20 to local table
in proc proc4 adding addrExp r28{0} - 44 to local table
in proc proc4 adding addrExp r28{0} - 48 to local table
in proc proc4 adding addrExp r28{0} - 52 to local table
in proc proc4 adding addrExp r28{0} - 56 to local table
in proc proc4 adding addrExp r28{0} - 60 to local table
in proc proc4 adding addrExp r28{0} - 44 to local table
in proc proc4 adding addrExp r28{0} - 48 to local table
in proc proc4 adding addrExp r28{0} - 52 to local table
in proc proc4 adding addrExp r28{0} - 56 to local table
in proc proc4 adding addrExp r28{0} - 24 to local table
in proc proc4 adding addrExp r28{0} - 12 to local table
in proc proc4 adding addrExp r28{0} - 8 to local table
in proc proc4 adding addrExp r28{0} - 12 to local table
in proc proc4 adding addrExp r28{0} - 16 to local table
in proc proc4 adding addrExp r28{0} - 28 to local table
in proc proc4 adding addrExp r28{0} - 16 to local table
in proc proc4 adding addrExp r28{0} - 28 to local table
in proc proc4 adding addrExp r28{0} - 8 to local table
in proc proc4 adding addrExp r28{0} - 8 to local table
in proc proc4 adding addrExp r28{0} - 8 to local table
in proc proc4 adding addrExp r28{0} - 12 to local table
in proc proc4 adding addrExp r28{0} - 8 to local table
in proc proc4 adding addrExp r28{0} - 12 to local table
in proc proc4 adding addrExp r28{0} - 16 to local table
in proc proc4 adding addrExp r28{0} - 28 to local table
finding final parameters for proc4
potential param r28
found new parameter r28
potential param r30
found new parameter r30
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
assgn    5 *32* r26 := m[0x4092c8]
after removing matching assigns (%pc).
in proc proc8 adding addrExp r28{0} - 4 to local table
finding final parameters for proc8
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
assgn    7 *32* r25 := m[0x4092c8]
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc7 ###
in proc proc7 adding addrExp r28{0} - 4 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
finding final parameters for proc7
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
assgn   16 *32* %pc := m[0x401014]
is readonly
assgn   43 *32* %pc := m[0x401010]
is readonly
assgn   80 *32* %pc := m[0x401000]
is readonly
assgn   86 *32* %pc := m[0x401004]
is readonly
assgn   95 *32* %pc := m[0x401000]
is readonly
assgn  101 *32* %pc := m[0x401004]
is readonly
assgn  207 *32* %pc := m[0x401000]
is readonly
assgn  238 *32* %pc := m[0x401018]
is readonly
assgn  357 *32* tmp1 := m[0x4092c4]
assgn  361 *32* r26 := m[0x4092b4]
assgn  453 *32* %pc := m[0x401000]
is readonly
assgn  459 *32* %pc := m[0x401004]
is readonly
assgn  462 *32* tmp1 := m[0x4092c4]
assgn  465 *32* r26 := m[0x4092b4]
assgn  505 *32* tmp1 := m[0x4092a4]
assgn  508 *32* tmp1 := m[0x4092c4]
assgn  511 *32* r25 := m[0x4092b4]
assgn  525 *32* r26 := m[0x4092b4]
assgn  568 *32* tmp1 := m[0x4092c4]
assgn  571 *32* r25 := m[0x4092b4]
assgn  611 *32* tmp1 := m[0x4092a4]
assgn  614 *32* tmp1 := m[0x4092c4]
assgn  631 *32* %pc := m[0x401010]
is readonly
assgn  643 *32* r24 := m[0x4092b4]
assgn  648 *32* %pc := m[0x401010]
is readonly
assgn  656 *32* %pc := m[0x40100c]
is readonly
assgn  665 *32* r26 := m[0x4092a4]
assgn  675 *32* tmp1 := m[0x4092c4]
assgn  679 *32* r25 := m[0x4092a4]
assgn  685 *32* r26 := m[0x4092b4]
assgn  696 *32* r24 := m[0x4092a4]
assgn  707 *32* r26 := m[0x4092a4]
assgn  713 *32* r25 := m[0x4092cc]
after removing matching assigns (%pc).
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc5 ###
in proc proc5 adding addrExp r28{0} - 228 to local table
in proc proc5 adding addrExp r28{0} - 8 to local table
in proc proc5 adding addrExp r28{0} - 16 to local table
in proc proc5 adding addrExp r28{0} - 60 to local table
in proc proc5 adding addrExp r28{0} - 232 to local table
in proc proc5 adding addrExp r28{0} - 236 to local table
in proc proc5 adding addrExp r28{0} - 240 to local table
in proc proc5 adding addrExp r28{0} - 4 to local table
in proc proc5 adding addrExp r28{0} - 196 to local table
in proc proc5 adding addrExp r28{0} - 200 to local table
in proc proc5 adding addrExp r28{0} - 204 to local table
in proc proc5 adding addrExp r28{0} - 208 to local table
in proc proc5 adding addrExp r28{0} - 188 to local table
in proc proc5 adding addrExp r28{0} - 64 to local table
in proc proc5 adding addrExp r28{0} - 44 to local table
in proc proc5 adding addrExp r28{0} - 208 to local table
in proc proc5 adding addrExp r28{0} - 212 to local table
in proc proc5 adding addrExp r28{0} - 216 to local table
in proc proc5 adding addrExp r28{0} - 220 to local table
in proc proc5 adding addrExp r28{0} - 224 to local table
in proc proc5 adding addrExp r28{0} - 52 to local table
in proc proc5 adding addrExp r28{0} - 208 to local table
in proc proc5 adding addrExp r28{0} - 212 to local table
in proc proc5 adding addrExp r28{0} - 216 to local table
in proc proc5 adding addrExp r28{0} - 220 to local table
in proc proc5 adding addrExp r28{0} - 208 to local table
in proc proc5 adding addrExp r28{0} - 212 to local table
in proc proc5 adding addrExp r28{0} - 216 to local table
in proc proc5 adding addrExp r28{0} - 216 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffff28 existing type DWORD but added type HANDLE
in proc proc5 adding addrExp r28{0} - 220 to local table
in proc proc5 adding addrExp r28{0} - 60 to local table
in proc proc5 adding addrExp r28{0} - 212 to local table
in proc proc5 adding addrExp r28{0} - 216 to local table
in proc proc5 adding addrExp r28{0} - 220 to local table
in proc proc5 adding addrExp r28{0} - 220 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffff24 existing type unsigned int but added type HANDLE
in proc proc5 adding addrExp r28{0} - 224 to local table
in proc proc5 adding addrExp r28{0} - 8 to local table
in proc proc5 adding addrExp r28{0} - 16 to local table
in proc proc5 adding addrExp r28{0} - 16 to local table
in proc proc5 adding addrExp r28{0} - 16 to local table
in proc proc5 adding addrExp r28{0} - 44 to local table
in proc proc5 adding addrExp r28{0} - 216 to local table
in proc proc5 adding addrExp r28{0} - 220 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffff24 existing type unsigned int but added type HANDLE
in proc proc5 adding addrExp r28{0} - 224 to local table
in proc proc5 adding addrExp r28{0} - 228 to local table
in proc proc5 adding addrExp r28{0} - 216 to local table
in proc proc5 adding addrExp r28{0} - 220 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffff24 existing type unsigned int but added type HANDLE
in proc proc5 adding addrExp r28{0} - 224 to local table
in proc proc5 adding addrExp r28{0} - 228 to local table
in proc proc5 adding addrExp r28{0} - 216 to local table
in proc proc5 adding addrExp r28{0} - 220 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffff24 existing type unsigned int but added type HANDLE
in proc proc5 adding addrExp r28{0} - 224 to local table
in proc proc5 adding addrExp r28{0} - 228 to local table
in proc proc5 adding addrExp r28{0} - 44 to local table
in proc proc5 adding addrExp r28{0} - 188 to local table
in proc proc5 adding addrExp r28{0} - 64 to local table
in proc proc5 adding addrExp r28{0} - 216 to local table
in proc proc5 adding addrExp r28{0} - 220 to local table
in proc proc5 adding addrExp r28{0} - 224 to local table
in proc proc5 adding addrExp r28{0} - 228 to local table
in proc proc5 adding addrExp r28{0} - 232 to local table
in proc proc5 adding addrExp r28{0} - 236 to local table
in proc proc5 adding addrExp r28{0} - 240 to local table
in proc proc5 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc5 adding addrExp r28{0} - 8 to local table
TYPE ERROR: Existing type at address 0xfffffff8 is not structure or array type
in proc proc5 adding addrExp r28{0} - 16 to local table
TYPE ERROR: Existing type at address 0xfffffff0 is not structure or array type
in proc proc5 adding addrExp r28{0} - 44 to local table
in proc proc5 adding addrExp r28{0} - 52 to local table
in proc proc5 adding addrExp r28{0} - 60 to local table
TYPE ERROR: Existing type at address 0xffffffc4 is not structure or array type
in proc proc5 adding addrExp r28{0} - 64 to local table
in proc proc5 adding addrExp r28{0} - 188 to local table
in proc proc5 adding addrExp r28{0} - 196 to local table
in proc proc5 adding addrExp r28{0} - 200 to local table
in proc proc5 adding addrExp r28{0} - 204 to local table
in proc proc5 adding addrExp r28{0} - 208 to local table
in proc proc5 adding addrExp r28{0} - 212 to local table
in proc proc5 adding addrExp r28{0} - 216 to local table
in proc proc5 adding addrExp r28{0} - 220 to local table
in proc proc5 adding addrExp r28{0} - 224 to local table
in proc proc5 adding addrExp r28{0} - 228 to local table
in proc proc5 adding addrExp r28{0} - 232 to local table
TYPE ERROR: Existing type at address 0xffffff18 is not structure or array type
in proc proc5 adding addrExp r28{0} - 236 to local table
TYPE ERROR: Existing type at address 0xffffff14 is not structure or array type
in proc proc5 adding addrExp r28{0} - 240 to local table
TYPE ERROR: Existing type at address 0xffffff10 is not structure or array type
in proc proc5 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc5 adding addrExp r28{0} - 8 to local table
TYPE ERROR: Existing type at address 0xfffffff8 is not structure or array type
in proc proc5 adding addrExp r28{0} - 16 to local table
TYPE ERROR: Existing type at address 0xfffffff0 is not structure or array type
in proc proc5 adding addrExp r28{0} - 44 to local table
in proc proc5 adding addrExp r28{0} - 52 to local table
in proc proc5 adding addrExp r28{0} - 60 to local table
TYPE ERROR: Existing type at address 0xffffffc4 is not structure or array type
in proc proc5 adding addrExp r28{0} - 64 to local table
in proc proc5 adding addrExp r28{0} - 188 to local table
in proc proc5 adding addrExp r28{0} - 196 to local table
in proc proc5 adding addrExp r28{0} - 200 to local table
in proc proc5 adding addrExp r28{0} - 204 to local table
in proc proc5 adding addrExp r28{0} - 208 to local table
in proc proc5 adding addrExp r28{0} - 212 to local table
in proc proc5 adding addrExp r28{0} - 216 to local table
in proc proc5 adding addrExp r28{0} - 220 to local table
in proc proc5 adding addrExp r28{0} - 224 to local table
in proc proc5 adding addrExp r28{0} - 228 to local table
in proc proc5 adding addrExp r28{0} - 232 to local table
TYPE ERROR: Existing type at address 0xffffff18 is not structure or array type
in proc proc5 adding addrExp r28{0} - 236 to local table
TYPE ERROR: Existing type at address 0xffffff14 is not structure or array type
in proc proc5 adding addrExp r28{0} - 240 to local table
TYPE ERROR: Existing type at address 0xffffff10 is not structure or array type
in proc proc5 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc5 adding addrExp r28{0} - 8 to local table
TYPE ERROR: Existing type at address 0xfffffff8 is not structure or array type
in proc proc5 adding addrExp r28{0} - 16 to local table
TYPE ERROR: Existing type at address 0xfffffff0 is not structure or array type
in proc proc5 adding addrExp r28{0} - 44 to local table
in proc proc5 adding addrExp r28{0} - 52 to local table
in proc proc5 adding addrExp r28{0} - 60 to local table
TYPE ERROR: Existing type at address 0xffffffc4 is not structure or array type
in proc proc5 adding addrExp r28{0} - 64 to local table
in proc proc5 adding addrExp r28{0} - 188 to local table
in proc proc5 adding addrExp r28{0} - 196 to local table
in proc proc5 adding addrExp r28{0} - 200 to local table
in proc proc5 adding addrExp r28{0} - 204 to local table
in proc proc5 adding addrExp r28{0} - 208 to local table
in proc proc5 adding addrExp r28{0} - 212 to local table
in proc proc5 adding addrExp r28{0} - 216 to local table
in proc proc5 adding addrExp r28{0} - 220 to local table
in proc proc5 adding addrExp r28{0} - 224 to local table
in proc proc5 adding addrExp r28{0} - 228 to local table
in proc proc5 adding addrExp r28{0} - 232 to local table
TYPE ERROR: Existing type at address 0xffffff18 is not structure or array type
in proc proc5 adding addrExp r28{0} - 236 to local table
TYPE ERROR: Existing type at address 0xffffff14 is not structure or array type
in proc proc5 adding addrExp r28{0} - 240 to local table
TYPE ERROR: Existing type at address 0xffffff10 is not structure or array type
in proc proc5 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc5 adding addrExp r28{0} - 8 to local table
TYPE ERROR: Existing type at address 0xfffffff8 is not structure or array type
in proc proc5 adding addrExp r28{0} - 16 to local table
TYPE ERROR: Existing type at address 0xfffffff0 is not structure or array type
in proc proc5 adding addrExp r28{0} - 44 to local table
in proc proc5 adding addrExp r28{0} - 52 to local table
in proc proc5 adding addrExp r28{0} - 60 to local table
TYPE ERROR: Existing type at address 0xffffffc4 is not structure or array type
in proc proc5 adding addrExp r28{0} - 64 to local table
in proc proc5 adding addrExp r28{0} - 188 to local table
in proc proc5 adding addrExp r28{0} - 196 to local table
in proc proc5 adding addrExp r28{0} - 200 to local table
in proc proc5 adding addrExp r28{0} - 204 to local table
in proc proc5 adding addrExp r28{0} - 208 to local table
in proc proc5 adding addrExp r28{0} - 212 to local table
in proc proc5 adding addrExp r28{0} - 216 to local table
in proc proc5 adding addrExp r28{0} - 220 to local table
in proc proc5 adding addrExp r28{0} - 224 to local table
in proc proc5 adding addrExp r28{0} - 228 to local table
in proc proc5 adding addrExp r28{0} - 232 to local table
TYPE ERROR: Existing type at address 0xffffff18 is not structure or array type
in proc proc5 adding addrExp r28{0} - 236 to local table
TYPE ERROR: Existing type at address 0xffffff14 is not structure or array type
in proc proc5 adding addrExp r28{0} - 240 to local table
TYPE ERROR: Existing type at address 0xffffff10 is not structure or array type
in proc proc5 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc5 adding addrExp r28{0} - 8 to local table
TYPE ERROR: Existing type at address 0xfffffff8 is not structure or array type
in proc proc5 adding addrExp r28{0} - 16 to local table
TYPE ERROR: Existing type at address 0xfffffff0 is not structure or array type
in proc proc5 adding addrExp r28{0} - 44 to local table
in proc proc5 adding addrExp r28{0} - 52 to local table
in proc proc5 adding addrExp r28{0} - 60 to local table
TYPE ERROR: Existing type at address 0xffffffc4 is not structure or array type
in proc proc5 adding addrExp r28{0} - 64 to local table
in proc proc5 adding addrExp r28{0} - 188 to local table
in proc proc5 adding addrExp r28{0} - 196 to local table
in proc proc5 adding addrExp r28{0} - 200 to local table
in proc proc5 adding addrExp r28{0} - 204 to local table
in proc proc5 adding addrExp r28{0} - 208 to local table
in proc proc5 adding addrExp r28{0} - 212 to local table
in proc proc5 adding addrExp r28{0} - 216 to local table
in proc proc5 adding addrExp r28{0} - 220 to local table
in proc proc5 adding addrExp r28{0} - 224 to local table
in proc proc5 adding addrExp r28{0} - 228 to local table
in proc proc5 adding addrExp r28{0} - 232 to local table
TYPE ERROR: Existing type at address 0xffffff18 is not structure or array type
in proc proc5 adding addrExp r28{0} - 236 to local table
TYPE ERROR: Existing type at address 0xffffff14 is not structure or array type
in proc proc5 adding addrExp r28{0} - 240 to local table
TYPE ERROR: Existing type at address 0xffffff10 is not structure or array type
in proc proc5 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc5 adding addrExp r28{0} - 8 to local table
TYPE ERROR: Existing type at address 0xfffffff8 is not structure or array type
in proc proc5 adding addrExp r28{0} - 16 to local table
TYPE ERROR: Existing type at address 0xfffffff0 is not structure or array type
in proc proc5 adding addrExp r28{0} - 44 to local table
in proc proc5 adding addrExp r28{0} - 52 to local table
in proc proc5 adding addrExp r28{0} - 60 to local table
TYPE ERROR: Existing type at address 0xffffffc4 is not structure or array type
in proc proc5 adding addrExp r28{0} - 64 to local table
in proc proc5 adding addrExp r28{0} - 188 to local table
in proc proc5 adding addrExp r28{0} - 196 to local table
in proc proc5 adding addrExp r28{0} - 200 to local table
in proc proc5 adding addrExp r28{0} - 204 to local table
in proc proc5 adding addrExp r28{0} - 208 to local table
in proc proc5 adding addrExp r28{0} - 212 to local table
in proc proc5 adding addrExp r28{0} - 216 to local table
in proc proc5 adding addrExp r28{0} - 220 to local table
in proc proc5 adding addrExp r28{0} - 224 to local table
in proc proc5 adding addrExp r28{0} - 228 to local table
in proc proc5 adding addrExp r28{0} - 232 to local table
TYPE ERROR: Existing type at address 0xffffff18 is not structure or array type
in proc proc5 adding addrExp r28{0} - 236 to local table
TYPE ERROR: Existing type at address 0xffffff14 is not structure or array type
in proc proc5 adding addrExp r28{0} - 240 to local table
TYPE ERROR: Existing type at address 0xffffff10 is not structure or array type
finding final parameters for proc5
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param tmp2
potential param tmpl
potential param m[r28{0} - 228]
found new parameter m[r28{0} - 228]
potential param r9
found new parameter r9
assgn   17 *32* %pc := m[0x401000]
is readonly
assgn   33 *32* tmp1 := m[0x4092c4]
assgn   44 *32* %pc := m[0x401018]
is readonly
assgn  121 *32* r25 := m[0x4092c0]
assgn  140 *32* r25 := m[24]
assgn  146 *32* tmp1 := m[0x4092c4]
assgn  182 *32* r25 := m[0x4092c0]
assgn  189 *32* r31 := m[0x4092b0]
assgn  190 *32* r27 := m[0x4092bc]
assgn  191 *32* r28 := m[0x4092b8]
assgn  192 *32* r30 := m[0x4092a8]
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
in proc _start adding addrExp r28{0} - 4 to local table
in proc _start adding addrExp r28{0} - 148 to local table
in proc _start adding addrExp r28{0} - 152 to local table
in proc _start adding addrExp r28{0} - 156 to local table
in proc _start adding addrExp r28{0} - 160 to local table
in proc _start adding addrExp r28{0} - 164 to local table
in proc _start adding addrExp r28{0} - 128 to local table
in proc _start adding addrExp r28{0} - 120 to local table
in proc _start adding addrExp r28{0} - 164 to local table
in proc _start adding addrExp r28{0} - 168 to local table
in proc _start adding addrExp r28{0} - 172 to local table
in proc _start adding addrExp r28{0} - 168 to local table
in proc _start adding addrExp r28{0} - 172 to local table
in proc _start adding addrExp r28{0} - 124 to local table
in proc _start adding addrExp r28{0} - 164 to local table
in proc _start adding addrExp r28{0} - 168 to local table
in proc _start adding addrExp r28{0} - 172 to local table
in proc _start adding addrExp r28{0} - 176 to local table
finding final parameters for _start
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc3 ###
in proc proc3 adding addrExp r28{0} - 28 to local table
in proc proc3 adding addrExp r28{0} - 36 to local table
in proc proc3 adding addrExp r28{0} - 40 to local table
in proc proc3 adding addrExp r28{0} - 44 to local table
in proc proc3 adding addrExp r28{0} - 16 to local table
in proc proc3 adding addrExp r28{0} - 32 to local table
in proc proc3 adding addrExp r28{0} - 12 to local table
in proc proc3 adding addrExp r28{0} - 24 to local table
in proc proc3 adding addrExp r28{0} - 12 to local table
in proc proc3 adding addrExp r28{0} - 24 to local table
in proc proc3 adding addrExp r28{0} - 28 to local table
in proc proc3 adding addrExp r28{0} - 36 to local table
in proc proc3 adding addrExp r28{0} - 40 to local table
in proc proc3 adding addrExp r28{0} - 44 to local table
in proc proc3 adding addrExp r28{0} - 12 to local table
in proc proc3 adding addrExp r28{0} - 24 to local table
in proc proc3 adding addrExp r28{0} - 12 to local table
in proc proc3 adding addrExp r28{0} - 36 to local table
in proc proc3 adding addrExp r28{0} - 40 to local table
in proc proc3 adding addrExp r28{0} - 44 to local table
in proc proc3 adding addrExp r28{0} - 12 to local table
in proc proc3 adding addrExp r28{0} - 28 to local table
in proc proc3 adding addrExp r28{0} - 28 to local table
in proc proc3 adding addrExp r28{0} - 24 to local table
in proc proc3 adding addrExp r28{0} - 28 to local table
in proc proc3 adding addrExp r28{0} - 24 to local table
in proc proc3 adding addrExp r28{0} - 12 to local table
in proc proc3 adding addrExp r28{0} - 24 to local table
in proc proc3 adding addrExp r28{0} - 28 to local table
in proc proc3 adding addrExp r28{0} - 36 to local table
in proc proc3 adding addrExp r28{0} - 40 to local table
in proc proc3 adding addrExp r28{0} - 44 to local table
in proc proc3 adding addrExp r28{0} - 24 to local table
in proc proc3 adding addrExp r28{0} - 12 to local table
in proc proc3 adding addrExp r28{0} - 24 to local table
in proc proc3 adding addrExp r28{0} - 28 to local table
in proc proc3 adding addrExp r28{0} - 36 to local table
in proc proc3 adding addrExp r28{0} - 40 to local table
in proc proc3 adding addrExp r28{0} - 44 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc4 ###
in proc proc4 adding addrExp r28{0} - 36 to local table
in proc proc4 adding addrExp r28{0} - 36 to local table
in proc proc4 adding addrExp r28{0} - 36 to local table
in proc proc4 adding addrExp r28{0} - 12 to local table
in proc proc4 adding addrExp r28{0} - 12 to local table
in proc proc4 adding addrExp r28{0} - 28 to local table
in proc proc4 adding addrExp r28{0} - 8 to local table
in proc proc4 adding addrExp r28{0} - 8 to local table
in proc proc4 adding addrExp r28{0} - 8 to local table
in proc proc4 adding addrExp r28{0} - 12 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc5 ###
in proc proc5 adding addrExp r28{0} - 228 to local table
in proc proc5 adding addrExp r28{0} - 44 to local table
in proc proc5 adding addrExp r28{0} - 216 to local table
in proc proc5 adding addrExp r28{0} - 220 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffff24 existing type unsigned int but added type HANDLE
in proc proc5 adding addrExp r28{0} - 224 to local table
in proc proc5 adding addrExp r28{0} - 16 to local table
in proc proc5 adding addrExp r28{0} - 16 to local table
in proc proc5 adding addrExp r28{0} - 16 to local table
in proc proc5 adding addrExp r28{0} - 44 to local table
in proc proc5 adding addrExp r28{0} - 216 to local table
in proc proc5 adding addrExp r28{0} - 220 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffff24 existing type unsigned int but added type HANDLE
in proc proc5 adding addrExp r28{0} - 224 to local table
in proc proc5 adding addrExp r28{0} - 228 to local table
in proc proc5 adding addrExp r28{0} - 216 to local table
in proc proc5 adding addrExp r28{0} - 220 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffff24 existing type unsigned int but added type HANDLE
in proc proc5 adding addrExp r28{0} - 224 to local table
in proc proc5 adding addrExp r28{0} - 228 to local table
in proc proc5 adding addrExp r28{0} - 216 to local table
in proc proc5 adding addrExp r28{0} - 220 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffff24 existing type unsigned int but added type HANDLE
in proc proc5 adding addrExp r28{0} - 224 to local table
in proc proc5 adding addrExp r28{0} - 228 to local table
in proc proc5 adding addrExp r28{0} - 44 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc6 ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc7 ###
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc9 adding addrExp r28{0} - 8 to local table
in proc proc9 adding addrExp r28{0} - 16 to local table
in proc proc9 adding addrExp r28{0} - 8 to local table
in proc proc9 adding addrExp r28{0} - 16 to local table
in proc proc9 adding addrExp r28{0} - 20 to local table
in proc proc9 adding addrExp r28{0} - 8 to local table
in proc proc9 adding addrExp r28{0} - 16 to local table
finding final parameters for proc1
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for _start
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for proc5
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param tmp2
potential param tmpl
potential param m[r28{0} - 228]
found new parameter m[r28{0} - 228]
potential param r9
found new parameter r9
finding final parameters for _start
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for proc2
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for _start
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for proc3
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} - 28]
found new parameter m[r28{0} - 28]
potential param m[r28{0} - 36]
found new parameter m[r28{0} - 36]
potential param m[r28{0} - 40]
found new parameter m[r28{0} - 40]
potential param m[r28{0} - 44]
found new parameter m[r28{0} - 44]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} - 16]
found new parameter m[r28{0} - 16]
potential param m[r28{0} - 32]
found new parameter m[r28{0} - 32]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
finding final parameters for _start
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for proc4
potential param r28
found new parameter r28
potential param r30
found new parameter r30
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for _start
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for proc5
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param tmp2
potential param tmpl
potential param m[r28{0} - 228]
found new parameter m[r28{0} - 228]
finding final parameters for _start
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for proc3
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} - 28]
found new parameter m[r28{0} - 28]
potential param m[r28{0} - 36]
found new parameter m[r28{0} - 36]
potential param m[r28{0} - 40]
found new parameter m[r28{0} - 40]
potential param m[r28{0} - 44]
found new parameter m[r28{0} - 44]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} - 16]
found new parameter m[r28{0} - 16]
potential param m[r28{0} - 32]
found new parameter m[r28{0} - 32]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
finding final parameters for _start
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for proc6
potential param r28
found new parameter r28
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
finding final parameters for proc4
potential param r28
found new parameter r28
potential param r30
found new parameter r30
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for proc5
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param tmp2
potential param tmpl
potential param m[r28{0} - 228]
found new parameter m[r28{0} - 228]
finding final parameters for proc7
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
finding final parameters for proc5
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param tmp2
potential param tmpl
potential param m[r28{0} - 228]
found new parameter m[r28{0} - 228]
finding final parameters for proc8
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for proc5
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param tmp2
potential param tmpl
potential param m[r28{0} - 228]
found new parameter m[r28{0} - 228]
finding final parameters for proc9
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for proc3
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} - 28]
found new parameter m[r28{0} - 28]
potential param m[r28{0} - 36]
found new parameter m[r28{0} - 36]
potential param m[r28{0} - 40]
found new parameter m[r28{0} - 40]
potential param m[r28{0} - 44]
found new parameter m[r28{0} - 44]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} - 16]
found new parameter m[r28{0} - 16]
potential param m[r28{0} - 32]
found new parameter m[r28{0} - 32]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
local ecx has type __size32 that doesn't agree with type of define void of a library, why?
local esp has type __size32 that doesn't agree with type of define void of a library, why?
local ecx has type void that doesn't agree with type of define __size32 of a library, why?
local ecx has type void that doesn't agree with type of define /*signed?*/int of a library, why?
local edx has type __size32 that doesn't agree with type of define void of a library, why?
local esp has type __size32 that doesn't agree with type of define void of a library, why?
local ecx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local esp has type __size32 that doesn't agree with type of define void of a library, why?
local eax has type __size32 * that doesn't agree with type of define __size32 of a library, why?
local ecx has type __size32 * that doesn't agree with type of define __size32 of a library, why?
local edx has type unsigned int that doesn't agree with type of define __size32 of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local eax has type void * that doesn't agree with type of define __size32 of a library, why?
local ecx has type int that doesn't agree with type of define void of a library, why?
local edx has type unsigned int that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local ecx has type void that doesn't agree with type of define __size32 ** of a library, why?
local edx has type void that doesn't agree with type of define __size32 of a library, why?
local esp has type void that doesn't agree with type of define void * of a library, why?
local eax has type __size32 that doesn't agree with type of define HANDLE of a library, why?
local ecx has type __size32 ** that doesn't agree with type of define void of a library, why?
local edx has type __size32 that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local eax has type HANDLE that doesn't agree with type of define __size32 of a library, why?
local eax has type __size32 that doesn't agree with type of define HANDLE of a library, why?
local eax has type HANDLE that doesn't agree with type of define void * of a library, why?
local ecx has type void that doesn't agree with type of define void * of a library, why?
local edx has type void that doesn't agree with type of define __size32 of a library, why?
local eax has type void * that doesn't agree with type of define __size32 of a library, why?
local ecx has type void * that doesn't agree with type of define void of a library, why?
local edx has type __size32 that doesn't agree with type of define void of a library, why?
local ecx has type void that doesn't agree with type of define __size32 of a library, why?
local edx has type void that doesn't agree with type of define __size32 of a library, why?
local ecx has type __size32 that doesn't agree with type of define void of a library, why?
local edx has type __size32 that doesn't agree with type of define void of a library, why?
dest is not lib
call:    9 {*32* eax, *v* ecx, *v* r26} := CALL GetCommandLineA(
              )
              Reaching definitions: r25=r25{0},   r28=r28{0} - 12,   r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r25{0},   m[r28{0} - 12]=%pc
              Live variables:  in proc proc1
dest is not lib
call:   19 {*32* eax, *32* ecx, *32* r26} := CALL GetProcAddress(
                *HANDLE* local0 := param1
                *c** local1 := param2
              )
              Reaching definitions: r24=m[r28{0} + 8]{0},   r25=m[r28{0} + 4]{0},   r26=r26{9},   r28=r28{0} - 20,
                r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r25{0},   m[r28{0} - 12]=m[r28{0} + 8]{0},
                m[r28{0} - 16]=m[r28{0} + 4]{0},   m[r28{0} - 20]=%pc
              Live variables: eax,  ecx in proc proc1
result:    0 *32* eax := -
result:    0 *32* ecx := -
dest is not lib
call:   18 {*32* eax_2, *j32* ecx, *v* edx, *v* esp} := CALL GetModuleHandleA(
              )
              Reaching definitions: r27=r27{0},   r28=r28{0} - 164,   r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 148]=r27{0},
                m[r28{0} - 152]=r30{0},   m[r28{0} - 156]=r31{0},   m[r28{0} - 160]=0,   m[r28{0} - 164]=%pc,
                tmp1=r28{0} - 4,   %flags=SUBFLAGS32( r28{0} - 4, 140, r28{0} - 144 ),   %ZF=(r28{0} - 144) = 0,
                %CF=(r28{0} - 4) <u 140
              Live variables: eax_2 in proc _start
result:    0 *32* eax_2 := -
dest is not lib
call:   45 {*HANDLE* eax, *v* ecx, *v* edx, *v* esp} := CALL LoadLibraryA(
                *LPCSTR* local0 := "advapi32.dll"
              )
              Reaching definitions: r24=m[r28{0} + 4]{0} & 0xffff,   r25=r25{209},   r26=r26{18},   r27=r27{0},
                r28=r28{0} - 172,   r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 120]=m[r28{0} + 4]{0},   m[r28{0} - 128]=r24{18},
                m[r28{0} - 148]=r27{0},   m[r28{0} - 152]=r30{0},   m[r28{0} - 156]=r31{0},   m[r28{0} - 160]=0,
                m[r28{0} - 164]=0x4091ec,   m[r28{0} - 168]=0x4091f8,   m[r28{0} - 172]=%pc,   tmp1=global13,
                %flags=SUBFLAGS32( m[0x4092c4], 0, global13 ),   %ZF=global13 = 0,   %CF=m[0x4092c4] <u 0
              Live variables: eax in proc _start
result:    0 *HANDLE* eax := -
dest is not lib
call:   51 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL proc1(
                *HANDLE* local0 := eax
                *c** local1 := "RegOpenKeyA"
              )
              Reaching definitions: r24=r24{45},   r25=r25{45},   r26=r26{45},   r27=r27{0},   r28=r28{0} - 172,
                r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 120]=m[r28{0} + 4]{0},   m[r28{0} - 128]=r24{18},   m[r28{0} - 148]=r27{0},
                m[r28{0} - 152]=r30{0},   m[r28{0} - 156]=r31{0},   m[r28{0} - 160]=0,   m[r28{0} - 164]=0x4091ec,
                m[r28{0} - 168]=r24{45},   m[r28{0} - 172]=%pc,   tmp1=global13,
                %flags=SUBFLAGS32( m[0x4092c4], 0, global13 ),   %ZF=global13 = 0,   %CF=m[0x4092c4] <u 0
              Live variables: eax,  ecx in proc _start
result:    0 *32* eax := -
result:    0 *v* ecx := -
dest is not lib
call:  113 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL proc2(
                *DWORD* local11 := m[esp - 4]
              )
              Reaching definitions: r8=r8{66},   r9=r9{66},   r24=r24{210},   r25=r25{211},   r26=r26{107},
                r27=r27{66},   r28=r28{66} - 8,   r29=r29{66},   r30=r30{66},   r31=r31{66},
                m[r28{0} + 4]=m[r28{0} + 4]{66},   m[r28{0} - 4]=m[r28{0} - 4]{66},
                m[r28{0} - 120]=m[r28{0} - 120]{66},   m[r28{0} - 124]=m[r28{0} - 124]{66},
                m[r28{0} - 128]=m[r28{0} - 128]{66},   m[r28{0} - 148]=m[r28{0} - 148]{66},
                m[r28{0} - 152]=m[r28{0} - 152]{66},   m[r28{0} - 156]=m[r28{0} - 156]{66},
                m[r28{0} - 160]=m[r28{0} - 160]{66},   m[r28{0} - 164]=m[r28{0} - 164]{66},
                m[r28{0} - 168]=m[r28{0} - 168]{66},   m[r28{0} - 172]=m[r28{0} - 172]{66},
                m[r28{0} - 176]=m[r28{0} - 176]{66},   m[r28{0} - 4]=m[r28{0} - 4]{66},
                m[r28{0} - 120]=m[r28{0} - 120]{66},   m[r28{0} - 124]=m[r28{0} - 124]{66},
                m[r28{0} - 128]=m[r28{0} - 128]{66},   m[r28{0} - 148]=m[r28{0} - 148]{66},
                m[r28{0} - 152]=m[r28{0} - 152]{66},   m[r28{0} - 156]=m[r28{0} - 156]{66},
                m[r28{0} - 160]=m[r28{0} - 160]{66},   m[r28{0} - 164]=m[r28{0} - 164]{66},
                m[r28{0} - 168]=m[r28{0} - 168]{66},   m[r28{0} - 172]=m[r28{0} - 172]{66},
                m[r28{0} - 176]=m[r28{0} - 176]{66},   <all>=<all>{66},   tmp1=tmp1{88},
                %flags=SUBFLAGS32( r26{87}, m[r29{66} - 136], tmp1{88} ),   %ZF=tmp1{88} = 0,
                %CF=r26{87} <u m[r29{66} - 136]
              Live variables: eax in proc _start
result:    0 *32* eax := -
dest is not lib
call:  133 {*32* eax, *8* r8, *8* r9, *v* ecx, *32* edx, *v* esp} := CALL proc3(
                *u32* m[esp - 60] := m[esp - 60]
                *j32* m[esp - 56] := m[esp - 56]
                *u8** m[esp - 52] := m[esp - 52]
                *u32* m[esp - 48] := m[esp - 48]
                *u32* m[esp - 44] := m[esp - 44]
                *u32* m[esp - 32] := m[esp - 32]
                *u8** m[esp - 12] := m[esp - 12]
                *v** m[esp - 8] := m[esp - 8]
                *u32* local11 := m[esp - 4]
              )
              Reaching definitions: r8=r8{66},   r9=r9{66},   r24=r24{118},   r25=global94,   r26=r26{124} + 8,
                r27=r27{66},   r28=r28{66} - 16,   r29=r29{66},   r30=r30{66},   r31=r31{66},
                m[r28{0} + 4]=m[r28{0} + 4]{66},   m[r28{0} - 4]=m[r28{0} - 4]{66},
                m[r28{0} - 120]=m[r28{0} - 120]{66},   m[r28{0} - 124]=m[r28{0} - 124]{66},
                m[r28{0} - 128]=m[r28{0} - 128]{66},   m[r28{0} - 148]=m[r28{0} - 148]{66},
                m[r28{0} - 152]=m[r28{0} - 152]{66},   m[r28{0} - 156]=m[r28{0} - 156]{66},
                m[r28{0} - 160]=m[r28{0} - 160]{66},   m[r28{0} - 164]=m[r28{0} - 164]{66},
                m[r28{0} - 168]=m[r28{0} - 168]{66},   m[r28{0} - 172]=m[r28{0} - 172]{66},
                m[r28{0} - 176]=m[r28{0} - 176]{66},   m[r28{0} - 4]=m[r28{0} - 4]{66},
                m[r28{0} - 120]=m[r28{0} - 120]{66},   m[r28{0} - 124]=m[r28{0} - 124]{66},
                m[r28{0} - 128]=m[r28{0} - 128]{66},   m[r28{0} - 148]=m[r28{0} - 148]{66},
                m[r28{0} - 152]=m[r28{0} - 152]{66},   m[r28{0} - 156]=m[r28{0} - 156]{66},
                m[r28{0} - 160]=m[r28{0} - 160]{66},   m[r28{0} - 164]=m[r28{0} - 164]{66},
                m[r28{0} - 168]=m[r28{0} - 168]{66},   m[r28{0} - 172]=m[r28{0} - 172]{66},
                m[r28{0} - 176]=m[r28{0} - 176]{66},   <all>=<all>{66},   tmp1=r26{124},
                %flags=ADDFLAGS32( r26{124}, 8, r26{124} + 8 ),   %ZF=ADDFLAGS32( r26{124}, 8, r26{124} + 8 ),
                %CF=ADDFLAGS32( r26{124}, 8, r26{124} + 8 )
              Live variables:  in proc _start
dest is not lib
call:  161 {*32* eax, *32* ecx, *32* edx, *v* esp} := CALL proc4(
                *32* m[esp - 8] := m[esp - 8]
                *32** local11 := m[esp - 4]
                *v** esi := esi
              )
              Reaching definitions: r8=r8{133},   r9=r9{133},   r24=r24{149},   r25=r25{154},   r26=r26{133},
                r27=r27{66},   r28=(r28{66} - 16) + 4,   r29=r29{66},   r30=r30{66},   r31=r31{66},
                m[r28{0} + 4]=m[r28{0} + 4]{66},   m[r28{0} - 4]=m[r28{0} - 4]{66},
                m[r28{0} - 120]=m[r28{0} - 120]{66},   m[r28{0} - 124]=m[r28{0} - 124]{66},
                m[r28{0} - 128]=m[r28{0} - 128]{66},   m[r28{0} - 148]=m[r28{0} - 148]{66},
                m[r28{0} - 152]=m[r28{0} - 152]{66},   m[r28{0} - 156]=m[r28{0} - 156]{66},
                m[r28{0} - 160]=m[r28{0} - 160]{66},   m[r28{0} - 164]=m[r28{0} - 164]{66},
                m[r28{0} - 168]=m[r28{0} - 168]{66},   m[r28{0} - 172]=m[r28{0} - 172]{66},
                m[r28{0} - 176]=m[r28{0} - 176]{66},   m[r28{0} - 4]=m[r28{0} - 4]{66},
                m[r28{0} - 120]=m[r28{0} - 120]{66},   m[r28{0} - 124]=m[r28{0} - 124]{66},
                m[r28{0} - 128]=m[r28{0} - 128]{66},   m[r28{0} - 148]=m[r28{0} - 148]{66},
                m[r28{0} - 152]=m[r28{0} - 152]{66},   m[r28{0} - 156]=m[r28{0} - 156]{66},
                m[r28{0} - 160]=m[r28{0} - 160]{66},   m[r28{0} - 164]=m[r28{0} - 164]{66},
                m[r28{0} - 168]=m[r28{0} - 168]{66},   m[r28{0} - 172]=m[r28{0} - 172]{66},
                m[r28{0} - 176]=m[r28{0} - 176]{66},   <all>=<all>{66},   tmp1=r25{152},
                %flags=SUBFLAGS32( r25{152}, m[r29{66} - 116], r25{154} ),   %ZF=r25{154} = 0,
                %CF=r25{152} <u m[r29{66} - 116]
              Live variables:  in proc _start
dest is not lib
call:  188 {*32* eax, *32* esi, *8* r9, *v* ecx, *v* edx, *v* esp, *32* ebp} := CALL proc5(
                *u32* m[esp - 236] := m[esp - 236]
                *32* local11 := m[esp - 4]
              )
              Reaching definitions: r8=r8{133},   r9=r9{133},   r24=r24{217},   r25=global94,   r26=r26{219},
                r27=r27{66},   r28=r28{66} - 8,   r29=r29{66},   r30=r30{66},   r31=r31{66},
                m[r28{0} + 4]=m[r28{0} + 4]{66},   m[r28{0} - 4]=m[r28{0} - 4]{66},
                m[r28{0} - 120]=m[r28{0} - 120]{66},   m[r28{0} - 124]=m[r28{0} - 124]{66},
                m[r28{0} - 128]=m[r28{0} - 128]{66},   m[r28{0} - 148]=m[r28{0} - 148]{66},
                m[r28{0} - 152]=m[r28{0} - 152]{66},   m[r28{0} - 156]=m[r28{0} - 156]{66},
                m[r28{0} - 160]=m[r28{0} - 160]{66},   m[r28{0} - 164]=m[r28{0} - 164]{66},
                m[r28{0} - 168]=m[r28{0} - 168]{66},   m[r28{0} - 172]=m[r28{0} - 172]{66},
                m[r28{0} - 176]=m[r28{0} - 176]{66},   m[r28{0} - 4]=m[r28{0} - 4]{66},
                m[r28{0} - 120]=m[r28{0} - 120]{66},   m[r28{0} - 124]=m[r28{0} - 124]{66},
                m[r28{0} - 128]=m[r28{0} - 128]{66},   m[r28{0} - 148]=m[r28{0} - 148]{66},
                m[r28{0} - 152]=m[r28{0} - 152]{66},   m[r28{0} - 156]=m[r28{0} - 156]{66},
                m[r28{0} - 160]=m[r28{0} - 160]{66},   m[r28{0} - 164]=m[r28{0} - 164]{66},
                m[r28{0} - 168]=m[r28{0} - 168]{66},   m[r28{0} - 172]=m[r28{0} - 172]{66},
                m[r28{0} - 176]=m[r28{0} - 176]{66},   <all>=<all>{66},   tmp1=r28{66} - 8,
                %flags=ADDFLAGS32( r28{66} - 8, 8, r28{66} ),   %ZF=%ZF{223},   %CF=%CF{224}
              Live variables:  in proc _start
dest is not lib
call:  178 {*32* eax, *32* ecx, *32* edx, *v* esp} := CALL proc4(
                *32* m[esp - 8] := m[esp - 8]
                *32** local11 := m[esp - 4]
                *v** esi := esi
              )
              Reaching definitions: r8=r8{133},   r9=r9{133},   r24=r24{171},   r25=0x401237,   r26=r26{166},
                r27=r27{66},   r28=(r28{66} - 16) + 4,   r29=r29{66},   r30=r30{66},   r31=r31{66},
                m[r28{0} + 4]=m[r28{0} + 4]{66},   m[r28{0} - 4]=m[r28{0} - 4]{66},
                m[r28{0} - 120]=m[r28{0} - 120]{66},   m[r28{0} - 124]=m[r28{0} - 124]{66},
                m[r28{0} - 128]=m[r28{0} - 128]{66},   m[r28{0} - 148]=m[r28{0} - 148]{66},
                m[r28{0} - 152]=m[r28{0} - 152]{66},   m[r28{0} - 156]=m[r28{0} - 156]{66},
                m[r28{0} - 160]=m[r28{0} - 160]{66},   m[r28{0} - 164]=m[r28{0} - 164]{66},
                m[r28{0} - 168]=m[r28{0} - 168]{66},   m[r28{0} - 172]=m[r28{0} - 172]{66},
                m[r28{0} - 176]=m[r28{0} - 176]{66},   m[r28{0} - 4]=m[r28{0} - 4]{66},
                m[r28{0} - 120]=m[r28{0} - 120]{66},   m[r28{0} - 124]=m[r28{0} - 124]{66},
                m[r28{0} - 128]=m[r28{0} - 128]{66},   m[r28{0} - 148]=m[r28{0} - 148]{66},
                m[r28{0} - 152]=m[r28{0} - 152]{66},   m[r28{0} - 156]=m[r28{0} - 156]{66},
                m[r28{0} - 160]=m[r28{0} - 160]{66},   m[r28{0} - 164]=m[r28{0} - 164]{66},
                m[r28{0} - 168]=m[r28{0} - 168]{66},   m[r28{0} - 172]=m[r28{0} - 172]{66},
                m[r28{0} - 176]=m[r28{0} - 176]{66},   <all>=<all>{66},   tmp1=r24{169},
                %flags=SUBFLAGS32( r24{169}, m[r29{66} - 124], r24{171} ),   %ZF=r24{171} = 0,
                %CF=r24{169} <u m[r29{66} - 124]
              Live variables:  in proc _start
dest is not lib
call:   20 {*32* eax, *32* r25, *32* r26} := CALL VirtualAlloc(
                *LPVOID* local0 := 0
                *DWORD* local1 := param1
                *DWORD* local2 := 0x3000
                *DWORD* local3 := 4
              )
              Reaching definitions: r24=m[r28{0} + 4]{0},   r28=r28{0} - 32,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 12]=1,   m[r28{0} - 16]=4,
                m[r28{0} - 20]=0x3000,   m[r28{0} - 24]=m[r28{0} + 4]{0},   m[r28{0} - 28]=0,   m[r28{0} - 32]=%pc,
                tmp1=r28{0} - 4,   %flags=SUBFLAGS32( r28{0} - 4, 8, r28{0} - 12 ),   %ZF=(r28{0} - 12) = 0,
                %CF=(r28{0} - 4) <u 8
              Live variables: eax in proc proc2
result:    0 *32* eax := -
dest is not lib
call:   80 {*u32* eax_1, *32* ecx, *32* edx, *v* esp} := CALL proc9(
                *u32** local4 := a[param6]
                *u8** local3 := ecx
              )
              Reaching definitions: r8=truncu(32,8,zfill(8,32,r9{10})),   r9=truncu(32,8,r25{69}),
                r24=zfill(8,32,r9{10}),   r25=r25{69},   r26=r28{0} - 16,   r28=(r28{0} - 32) - 12,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 5]=r8{18},   m[r28{0} - 12]=m[r28{0} - 12]{27},
                m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 17]=r9{10},   m[r28{0} - 24]=m[r28{0} - 24]{213},
                m[r28{0} - 28]=m[r28{0} - 28]{214},   m[r28{0} - 32]=m[r28{0} - 32]{0},   m[r28{0} - 36]=r25{69},
                m[r28{0} - 40]=r28{0} - 16,   m[r28{0} - 44]=%pc,   tmp1=m[r28{0} + 4]{0},
                %flags=ADDFLAGS32( m[r28{0} + 4]{0}, m[(r28{0} - 4) - 8], r25{69} ),
                %ZF=ADDFLAGS32( m[r28{0} + 4]{0}, m[(r28{0} - 4) - 8], r25{69} ),
                %CF=ADDFLAGS32( m[r28{0} + 4]{0}, m[(r28{0} - 4) - 8], r25{69} )
              Live variables: eax_1 in proc proc3
result:    0 *u32* eax_1 := -
dest is not lib
call:  104 {*u32* eax_1, *j32* ecx_1, *32* edx, *v* esp} := CALL proc9(
                *u32** local4 := a[param4]
                *u8** local3 := eax
              )
              Reaching definitions: r8=truncu(32,8,r24{92}),   r9=truncu(32,8,r28{0} - 32),   r24=r24{92},
                r25=r28{0} - 32,   r26=r26{80},   r28=(r28{0} - 32) - 12,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 5]=r8{18},   m[r28{0} - 12]=r24{85},
                m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 17]=r9{10},   m[r28{0} - 24]=m[r28{0} - 24]{213},
                m[r28{0} - 28]=m[r28{0} - 28]{214},   m[r28{0} - 32]=m[r28{0} - 32]{0},   m[r28{0} - 36]=r24{92},
                m[r28{0} - 40]=r28{0} - 32,   m[r28{0} - 44]=%pc,   tmp1=m[r28{0} + 4]{0},
                %flags=ADDFLAGS32( m[r28{0} + 4]{0}, m[r28{0} - 12], r24{92} ),
                %ZF=ADDFLAGS32( m[r28{0} + 4]{0}, m[r28{0} - 12], r24{92} ),
                %CF=ADDFLAGS32( m[r28{0} + 4]{0}, m[r28{0} - 12], r24{92} )
              Live variables: eax_1 in proc proc3
result:    0 *u32* eax_1 := -
dest is not lib
call:   38 {*32* eax, *32* ecx, *32* edx} := CALL VirtualAlloc(
                *LPVOID* local1 := 0
                *DWORD* local2 := eax_1
                *DWORD* local3 := 0x3000
                *DWORD* local4 := 64
              )
              Reaching definitions: r24=r24{30},   r25=r25{22},   r26=r25{22},   r28=r28{0} - 60,   r29=r28{0} - 4,
                r30=r30{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 12]=m[r28{0} - 12]{0},   m[r28{0} - 16]=m[r28{0} - 16]{0},
                m[r28{0} - 20]=r25{22},   m[r28{0} - 28]=m[r28{0} - 28]{0},   m[r28{0} - 32]=m[r28{0} - 36]{195},
                m[r28{0} - 36]=m[r28{0} - 36]{195},   m[r28{0} - 40]=r30{0},   m[r28{0} - 44]=64,
                m[r28{0} - 48]=0x3000,   m[r28{0} - 52]=r24{30},   m[r28{0} - 56]=0,   m[r28{0} - 60]=%pc,
                tmp1=m[r28{0} - 36]{195},
                %flags=ADDFLAGS32( m[r28{0} - 36]{195}, m[m[r28{0} - 36]{195} + 60], r25{22} ),
                %ZF=ADDFLAGS32( m[r28{0} - 36]{195}, m[m[r28{0} - 36]{195} + 60], r25{22} ),
                %CF=ADDFLAGS32( m[r28{0} - 36]{195}, m[m[r28{0} - 36]{195} + 60], r25{22} )
              Live variables: eax in proc proc4
result:    0 *32* eax := -
dest is not lib
call:   58 {*32* eax, *8* r9, *32** ecx, *32* edx} := CALL proc6(
                *32* local2 := global16
                *32** local5 := local0
                *u32* local4 := edx
              )
              Reaching definitions: r24=m[r28{0} - 36]{195},   r25=global16,   r26=r26{46},   r28=r28{0} - 56,
                r29=r28{0} - 4,   r30=r30{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 12]=m[r28{0} - 12]{0},
                m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 20]=r25{22},   m[r28{0} - 28]=m[r28{0} - 28]{0},
                m[r28{0} - 32]=m[r28{0} - 36]{195},   m[r28{0} - 36]=m[r28{0} - 36]{195},   m[r28{0} - 40]=r30{0},
                m[r28{0} - 44]=r26{46},   m[r28{0} - 48]=m[r28{0} - 36]{195},   m[r28{0} - 52]=global16,
                m[r28{0} - 56]=%pc,   m[r28{0} - 60]=%pc,   tmp1=global16,
                %flags=SUBFLAGS32( m[0x4092a4], 0, global16 ),   %ZF=global16 = 0,   %CF=m[0x4092a4] <u 0
              Live variables:  in proc proc4
dest is not lib
call:   17 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL lstrcpyA(
              )
              Reaching definitions: r9=r9{0},   r24=r28{0} - 180,   r28=r28{0} - 208,   r29=r28{0} - 4,   r30=r30{0},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{0},
                m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 60]=m[r28{0} - 60]{0},   m[r28{0} - 196]=r30{0},
                m[r28{0} - 200]=0x409210,   m[r28{0} - 204]=r28{0} - 180,   m[r28{0} - 208]=%pc,
                m[r28{0} - 228]=m[r28{0} - 228]{0},   m[r28{0} - 232]=m[r28{0} - 232]{0},
                m[r28{0} - 236]=m[r28{0} - 236]{0},   m[r28{0} - 240]=m[r28{0} - 240]{0},   tmp1=r28{0} - 4,
                tmp2=tmp2{0},   tmpl=tmpl{0},   %flags=SUBFLAGS32( r28{0} - 4, 188, r28{0} - 192 ),
                %ZF=(r28{0} - 192) = 0,   %CF=(r28{0} - 4) <u 188
              Live variables:  in proc proc5
dest is not lib
call:   44 {*32* eax_3, *32*** ecx, *32* edx, *v** esp} := CALL VirtualAlloc(
                *LPVOID* local1 := 0
                *DWORD* local2 := eax
                *DWORD* local3 := 0x3000
                *DWORD* local4 := 64
              )
              Reaching definitions: r9=r9{0},   r24=r24{36},   r25=(r24{23} + r26{27}) + 24,   r26=r24{23},
                r28=r28{0} - 224,   r29=r28{0} - 4,   r30=r30{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 16]=m[r28{0} - 16]{0},
                m[r28{0} - 44]=(r24{23} + r26{27}) + 24,   m[r28{0} - 60]=m[r28{0} - 60]{0},   m[r28{0} - 64]=r24{23},
                m[r28{0} - 188]=m[r28{0} + 4]{0},   m[r28{0} - 196]=r30{0},   m[r28{0} - 200]=0x409210,
                m[r28{0} - 204]=r28{0} - 180,   m[r28{0} - 208]=64,   m[r28{0} - 212]=0x3000,   m[r28{0} - 216]=r24{36}
                m[r28{0} - 220]=0,   m[r28{0} - 224]=%pc,   m[r28{0} - 228]=m[r28{0} - 228]{0},
                m[r28{0} - 232]=m[r28{0} - 232]{0},   m[r28{0} - 236]=m[r28{0} - 236]{0},
                m[r28{0} - 240]=m[r28{0} - 240]{0},   tmp1=m[r28{0} + 4]{0},   tmp2=tmp2{0},   tmpl=tmpl{0},
                %flags=ADDFLAGS32( m[r28{0} + 4]{0}, m[m[r28{0} + 4]{0} + 60], r24{23} ),
                %ZF=ADDFLAGS32( m[r28{0} + 4]{0}, m[m[r28{0} + 4]{0} + 60], r24{23} ),
                %CF=ADDFLAGS32( m[r28{0} + 4]{0}, m[m[r28{0} + 4]{0} + 60], r24{23} )
              Live variables: eax_3 in proc proc5
result:    0 *32* eax_3 := -
dest is not lib
call:   70 {*32* eax, *8* cl, *32* ecx, *32* edx, *v* esp} := CALL proc6(
                *32* local2 := eax_3
                *32* local3 := param2
                *u32* local4 := (edx + (r25 *! 40)) + 312
              )
              Reaching definitions: r9=r9{0},   r24=m[r28{0} + 4]{0},   r25=r24{44},
                r26=(r26{53} + (r25{55} *! 40)) + 312,   r28=r28{0} - 220,   r29=r28{0} - 4,   r30=r30{0},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{0},
                m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 44]=(r24{23} + r26{27}) + 24,   m[r28{0} - 52]=r24{44},
                m[r28{0} - 60]=m[r28{0} - 60]{0},   m[r28{0} - 64]=r24{23},   m[r28{0} - 188]=m[r28{0} + 4]{0},
                m[r28{0} - 196]=r30{0},   m[r28{0} - 200]=0x409210,   m[r28{0} - 204]=r28{0} - 180,
                m[r28{0} - 208]=(r26{53} + (r25{55} *! 40)) + 312,   m[r28{0} - 212]=m[r28{0} + 4]{0},
                m[r28{0} - 216]=r24{44},   m[r28{0} - 220]=%pc,   m[r28{0} - 224]=%pc,
                m[r28{0} - 228]=m[r28{0} - 228]{0},   m[r28{0} - 232]=m[r28{0} - 232]{0},
                m[r28{0} - 236]=m[r28{0} - 236]{0},   m[r28{0} - 240]=m[r28{0} - 240]{0},   tmp1=r24{44},
                tmp2=tmp2{0},   tmpl=tmpl{0},   %flags=IMULTFLAGS32( r25{55} *! 40 ),
                %ZF=IMULTFLAGS32( r25{55} *! 40 ),   %CF=IMULTFLAGS32( r25{55} *! 40 )
              Live variables: cl in proc proc5
result:    0 *8* cl := -
dest is not lib
call:   81 {*HANDLE* eax, *v* ecx, *v* edx, *v* esp} := CALL GetModuleHandleA(
              )
              Reaching definitions: r9=r9{70},   r24=r24{70},   r25=r25{70},   r26=r26{70},   r28=(r28{0} - 220) + 4,
                r29=r28{0} - 4,   r30=r30{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 16]=m[r28{0} - 16]{0},
                m[r28{0} - 44]=(r24{23} + r26{27}) + 24,   m[r28{0} - 52]=r24{44},   m[r28{0} - 60]=m[r28{0} - 60]{0},
                m[r28{0} - 64]=r24{23},   m[r28{0} - 188]=m[r28{0} + 4]{0},   m[r28{0} - 196]=r30{0},
                m[r28{0} - 200]=0x409210,   m[r28{0} - 204]=r28{0} - 180,   m[r28{0} - 208]=0x409224,
                m[r28{0} - 212]=0x409234,   m[r28{0} - 216]=%pc,   m[r28{0} - 220]=%pc,   m[r28{0} - 224]=%pc,
                m[r28{0} - 228]=m[r28{0} - 228]{0},   m[r28{0} - 232]=m[r28{0} - 232]{0},
                m[r28{0} - 236]=m[r28{0} - 236]{0},   m[r28{0} - 240]=m[r28{0} - 240]{0},   tmp1=(r28{0} - 220) + 4,
                tmp2=tmp2{0},   tmpl=tmpl{0},   %flags=ADDFLAGS32( r28{0} - 216, 12, r28{0} - 204 ),
                %ZF=ADDFLAGS32( r28{0} - 216, 12, r28{0} - 204 ),   %CF=ADDFLAGS32( r28{0} - 216, 12, r28{0} - 204 )
              Live variables: eax in proc proc5
result:    0 *HANDLE* eax := -
dest is not lib
call:   87 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local5 := eax
                *c** local6 := "kernel32.dll"
              )
              Reaching definitions: r9=r9{70},   r24=r24{81},   r25=r25{81},   r26=r26{81},   r28=r28{0} - 220,
                r29=r28{0} - 4,   r30=r30{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 16]=m[r28{0} - 16]{0},
                m[r28{0} - 44]=(r24{23} + r26{27}) + 24,   m[r28{0} - 52]=r24{44},   m[r28{0} - 60]=m[r28{0} - 60]{0},
                m[r28{0} - 64]=r24{23},   m[r28{0} - 188]=m[r28{0} + 4]{0},   m[r28{0} - 196]=r30{0},
                m[r28{0} - 200]=0x409210,   m[r28{0} - 204]=r28{0} - 180,   m[r28{0} - 208]=0x409224,
                m[r28{0} - 212]=0x409234,   m[r28{0} - 216]=r24{81},   m[r28{0} - 220]=%pc,   m[r28{0} - 224]=%pc,
                m[r28{0} - 228]=m[r28{0} - 228]{0},   m[r28{0} - 232]=m[r28{0} - 232]{0},
                m[r28{0} - 236]=m[r28{0} - 236]{0},   m[r28{0} - 240]=m[r28{0} - 240]{0},   tmp1=(r28{0} - 220) + 4,
                tmp2=tmp2{0},   tmpl=tmpl{0},   %flags=ADDFLAGS32( r28{0} - 216, 12, r28{0} - 204 ),
                %ZF=ADDFLAGS32( r28{0} - 216, 12, r28{0} - 204 ),   %CF=ADDFLAGS32( r28{0} - 216, 12, r28{0} - 204 )
              Live variables: eax in proc proc5
result:    0 *32* eax := -
dest is not lib
call:   96 {*HANDLE* eax, *v* ecx, *v* edx, *v* esp} := CALL GetModuleHandleA(
              )
              Reaching definitions: r9=r9{70},   r24=r24{87},   r25=r25{87},   r26=r26{87},   r28=r28{0} - 220,
                r29=r28{0} - 4,   r30=r30{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 16]=m[r28{0} - 16]{0},
                m[r28{0} - 44]=(r24{23} + r26{27}) + 24,   m[r28{0} - 52]=r24{44},   m[r28{0} - 60]=r24{87},
                m[r28{0} - 64]=r24{23},   m[r28{0} - 188]=m[r28{0} + 4]{0},   m[r28{0} - 196]=r30{0},
                m[r28{0} - 200]=0x409210,   m[r28{0} - 204]=r28{0} - 180,   m[r28{0} - 208]=0x409224,
                m[r28{0} - 212]=0x409244,   m[r28{0} - 216]=0x409258,   m[r28{0} - 220]=%pc,   m[r28{0} - 224]=%pc,
                m[r28{0} - 228]=m[r28{0} - 228]{0},   m[r28{0} - 232]=m[r28{0} - 232]{0},
                m[r28{0} - 236]=m[r28{0} - 236]{0},   m[r28{0} - 240]=m[r28{0} - 240]{0},   tmp1=(r28{0} - 220) + 4,
                tmp2=tmp2{0},   tmpl=tmpl{0},   %flags=ADDFLAGS32( r28{0} - 216, 12, r28{0} - 204 ),
                %ZF=ADDFLAGS32( r28{0} - 216, 12, r28{0} - 204 ),   %CF=ADDFLAGS32( r28{0} - 216, 12, r28{0} - 204 )
              Live variables: eax in proc proc5
result:    0 *HANDLE* eax := -
dest is not lib
call:  102 {*v** eax, *v** ecx, *32* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local1 := eax
                *c** local5 := "kernel32.dll"
              )
              Reaching definitions: r9=r9{70},   r24=r24{96},   r25=r25{96},   r26=r26{96},   r28=r28{0} - 224,
                r29=r28{0} - 4,   r30=r30{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 16]=m[r28{0} - 16]{0},
                m[r28{0} - 44]=(r24{23} + r26{27}) + 24,   m[r28{0} - 52]=r24{44},   m[r28{0} - 60]=r24{87},
                m[r28{0} - 64]=r24{23},   m[r28{0} - 188]=m[r28{0} + 4]{0},   m[r28{0} - 196]=r30{0},
                m[r28{0} - 200]=0x409210,   m[r28{0} - 204]=r28{0} - 180,   m[r28{0} - 208]=0x409224,
                m[r28{0} - 212]=0x409244,   m[r28{0} - 216]=0x409258,   m[r28{0} - 220]=r24{96},   m[r28{0} - 224]=%pc,
                m[r28{0} - 228]=m[r28{0} - 228]{0},   m[r28{0} - 232]=m[r28{0} - 232]{0},
                m[r28{0} - 236]=m[r28{0} - 236]{0},   m[r28{0} - 240]=m[r28{0} - 240]{0},   tmp1=(r28{0} - 220) + 4,
                tmp2=tmp2{0},   tmpl=tmpl{0},   %flags=ADDFLAGS32( r28{0} - 216, 12, r28{0} - 204 ),
                %ZF=ADDFLAGS32( r28{0} - 216, 12, r28{0} - 204 ),   %CF=ADDFLAGS32( r28{0} - 216, 12, r28{0} - 204 )
              Live variables: eax in proc proc5
result:    0 *v** eax := -
dest is not lib
call:  158 {*v** eax, *8* cl, *u32* r25, *v** edx, *v* esp} := CALL proc6(
                *u32* local7 := eax_1
                *HANDLE* local1 := ecx
                *u32* local2 := eax_4
              )
              Reaching definitions: r9=r9{724},   r24=r24{151},   r25=r25{144},   r26=m[r28{0} - 44]{899},
                r28=r28{0} - 228,   r29=r28{0} - 4,   r30=r30{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{102},   m[r28{0} - 16]=m[r28{0} - 16]{898},
                m[r28{0} - 44]=m[r28{0} - 44]{899},   m[r28{0} - 52]=r24{44},   m[r28{0} - 60]=r24{87},
                m[r28{0} - 64]=r24{23},   m[r28{0} - 188]=m[r28{0} + 4]{0},   m[r28{0} - 196]=r30{0},
                m[r28{0} - 200]=0x409210,   m[r28{0} - 204]=r28{0} - 180,   m[r28{0} - 208]=0x409224,
                m[r28{0} - 212]=0x409244,   m[r28{0} - 216]=r24{137},   m[r28{0} - 220]=r25{144},
                m[r28{0} - 224]=r24{151},   m[r28{0} - 228]=%pc,   m[r28{0} - 232]=m[r28{0} - 232]{0},
                m[r28{0} - 236]=m[r28{0} - 236]{0},   m[r28{0} - 240]=m[r28{0} - 240]{0},   tmp1=r24{44},
                tmp2=tmp2{133},   tmpl=tmpl{132},   %flags=ADDFLAGS32( r24{44}, m[m[r28{0} - 44]{899} + 12], r24{151} )
                %ZF=ADDFLAGS32( r24{44}, m[m[r28{0} - 44]{899} + 12], r24{151} ),
                %CF=ADDFLAGS32( r24{44}, m[m[r28{0} - 44]{899} + 12], r24{151} )
              Live variables: cl in proc proc5
result:    0 *8* cl := -
dest is not lib
call:  208 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetModuleHandleA(
              )
              Reaching definitions: r9=r9{193},   r24=r24{193},   r25=r25{193},   r26=r26{193},   r28=r28{193} - 12,
                r29=r29{193},   r30=r30{193},   m[r28{0} + 4]=m[r28{0} + 4]{193},   m[r28{0} - 4]=m[r28{0} - 4]{193},
                m[r28{0} - 8]=m[r28{0} - 8]{193},   m[r28{0} - 16]=m[r28{0} - 16]{193},
                m[r28{0} - 44]=m[r28{0} - 44]{193},   m[r28{0} - 52]=m[r28{0} - 52]{193},
                m[r28{0} - 60]=m[r28{0} - 60]{193},   m[r28{0} - 64]=m[r28{0} - 64]{193},
                m[r28{0} - 188]=m[r28{0} - 188]{193},   m[r28{0} - 196]=m[r28{0} - 196]{193},
                m[r28{0} - 200]=m[r28{0} - 200]{193},   m[r28{0} - 204]=m[r28{0} - 204]{193},
                m[r28{0} - 208]=m[r28{0} - 208]{193},   m[r28{0} - 212]=m[r28{0} - 212]{193},
                m[r28{0} - 216]=m[r28{0} - 216]{193},   m[r28{0} - 220]=m[r28{0} - 220]{193},
                m[r28{0} - 224]=m[r28{0} - 224]{193},   m[r28{0} - 228]=m[r28{0} - 228]{193},
                m[r28{0} - 232]=m[r28{0} - 232]{193},   m[r28{0} - 236]=m[r28{0} - 236]{193},
                m[r28{0} - 240]=m[r28{0} - 240]{193},   m[r28{0} - 4]=m[r28{0} - 4]{193},
                m[r28{0} - 8]=m[r28{0} - 8]{193},   m[r28{0} - 16]=m[r28{0} - 16]{193},
                m[r28{0} - 44]=m[r28{0} - 44]{193},   m[r28{0} - 52]=m[r28{0} - 52]{193},
                m[r28{0} - 60]=m[r28{0} - 60]{193},   m[r28{0} - 64]=m[r28{0} - 64]{193},
                m[r28{0} - 188]=m[r28{0} - 188]{193},   m[r28{0} - 196]=m[r28{0} - 196]{193},
                m[r28{0} - 200]=m[r28{0} - 200]{193},   m[r28{0} - 204]=m[r28{0} - 204]{193},
                m[r28{0} - 208]=m[r28{0} - 208]{193},   m[r28{0} - 212]=m[r28{0} - 212]{193},
                m[r28{0} - 216]=m[r28{0} - 216]{193},   m[r28{0} - 220]=m[r28{0} - 220]{193},
                m[r28{0} - 224]=m[r28{0} - 224]{193},   m[r28{0} - 228]=m[r28{0} - 228]{193},
                m[r28{0} - 232]=m[r28{0} - 232]{193},   m[r28{0} - 236]=m[r28{0} - 236]{193},
                m[r28{0} - 240]=m[r28{0} - 240]{193},   <all>=<all>{193},   tmp1=tmp1{195},   tmp2=tmp2{193},
                tmpl=tmpl{193},   %flags=SUBFLAGS32( m[r29{193} - 8], 0, tmp1{195} ),   %ZF=tmp1{195} = 0,
                %CF=m[r29{193} - 8] <u 0
              Live variables: eax in proc proc5
result:    0 *32* eax := -
dest is not lib
call:  214 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL proc1(
                *HANDLE* m[esp_1 - 12] := m[esp_1 - 12]
                *c** m[esp_1 - 8] := m[esp_1 - 8]
              )
              Reaching definitions: r9=r9{193},   r24=r24{208},   r25=r25{208},   r26=r26{208},   r28=r28{193} - 16,
                r29=r29{193},   r30=r30{193},   m[r28{0} + 4]=m[r28{0} + 4]{193},   m[r28{0} - 4]=m[r28{0} - 4]{193},
                m[r28{0} - 8]=m[r28{0} - 8]{193},   m[r28{0} - 16]=m[r28{0} - 16]{193},
                m[r28{0} - 44]=m[r28{0} - 44]{193},   m[r28{0} - 52]=m[r28{0} - 52]{193},
                m[r28{0} - 60]=m[r28{0} - 60]{193},   m[r28{0} - 64]=m[r28{0} - 64]{193},
                m[r28{0} - 188]=m[r28{0} - 188]{193},   m[r28{0} - 196]=m[r28{0} - 196]{193},
                m[r28{0} - 200]=m[r28{0} - 200]{193},   m[r28{0} - 204]=m[r28{0} - 204]{193},
                m[r28{0} - 208]=m[r28{0} - 208]{193},   m[r28{0} - 212]=m[r28{0} - 212]{193},
                m[r28{0} - 216]=m[r28{0} - 216]{193},   m[r28{0} - 220]=m[r28{0} - 220]{193},
                m[r28{0} - 224]=m[r28{0} - 224]{193},   m[r28{0} - 228]=m[r28{0} - 228]{193},
                m[r28{0} - 232]=m[r28{0} - 232]{193},   m[r28{0} - 236]=m[r28{0} - 236]{193},
                m[r28{0} - 240]=m[r28{0} - 240]{193},   m[r28{0} - 4]=m[r28{0} - 4]{193},
                m[r28{0} - 8]=m[r28{0} - 8]{193},   m[r28{0} - 16]=m[r28{0} - 16]{193},
                m[r28{0} - 44]=m[r28{0} - 44]{193},   m[r28{0} - 52]=m[r28{0} - 52]{193},
                m[r28{0} - 60]=m[r28{0} - 60]{193},   m[r28{0} - 64]=m[r28{0} - 64]{193},
                m[r28{0} - 188]=m[r28{0} - 188]{193},   m[r28{0} - 196]=m[r28{0} - 196]{193},
                m[r28{0} - 200]=m[r28{0} - 200]{193},   m[r28{0} - 204]=m[r28{0} - 204]{193},
                m[r28{0} - 208]=m[r28{0} - 208]{193},   m[r28{0} - 212]=m[r28{0} - 212]{193},
                m[r28{0} - 216]=m[r28{0} - 216]{193},   m[r28{0} - 220]=m[r28{0} - 220]{193},
                m[r28{0} - 224]=m[r28{0} - 224]{193},   m[r28{0} - 228]=m[r28{0} - 228]{193},
                m[r28{0} - 232]=m[r28{0} - 232]{193},   m[r28{0} - 236]=m[r28{0} - 236]{193},
                m[r28{0} - 240]=m[r28{0} - 240]{193},   <all>=<all>{193},   tmp1=tmp1{195},   tmp2=tmp2{193},
                tmpl=tmpl{193},   %flags=SUBFLAGS32( m[r29{193} - 8], 0, tmp1{195} ),   %ZF=tmp1{195} = 0,
                %CF=m[r29{193} - 8] <u 0
              Live variables: eax in proc proc5
result:    0 *32* eax := -
dest is not lib
call:  239 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL LoadLibraryA(
                *LPCSTR* m[esp_1 - 8] := m[esp_1 - 8]
              )
              Reaching definitions: r9=r9{193},   r24=r24{225},   r25=r25{229},   r26=r26{232},
                r28=(r28{193} - 4) - 8,   r29=r29{193},   r30=r30{193},   m[r28{0} + 4]=m[r28{0} + 4]{193},
                m[r28{0} - 4]=m[r28{0} - 4]{193},   m[r28{0} - 8]=m[r28{0} - 8]{193},
                m[r28{0} - 16]=m[r28{0} - 16]{193},   m[r28{0} - 44]=m[r28{0} - 44]{193},
                m[r28{0} - 52]=m[r28{0} - 52]{193},   m[r28{0} - 60]=m[r28{0} - 60]{193},
                m[r28{0} - 64]=m[r28{0} - 64]{193},   m[r28{0} - 188]=m[r28{0} - 188]{193},
                m[r28{0} - 196]=m[r28{0} - 196]{193},   m[r28{0} - 200]=m[r28{0} - 200]{193},
                m[r28{0} - 204]=m[r28{0} - 204]{193},   m[r28{0} - 208]=m[r28{0} - 208]{193},
                m[r28{0} - 212]=m[r28{0} - 212]{193},   m[r28{0} - 216]=m[r28{0} - 216]{193},
                m[r28{0} - 220]=m[r28{0} - 220]{193},   m[r28{0} - 224]=m[r28{0} - 224]{193},
                m[r28{0} - 228]=m[r28{0} - 228]{193},   m[r28{0} - 232]=m[r28{0} - 232]{193},
                m[r28{0} - 236]=m[r28{0} - 236]{193},   m[r28{0} - 240]=m[r28{0} - 240]{193},
                m[r28{0} - 4]=m[r28{0} - 4]{193},   m[r28{0} - 8]=m[r28{0} - 8]{193},
                m[r28{0} - 16]=m[r28{0} - 16]{193},   m[r28{0} - 44]=m[r28{0} - 44]{193},
                m[r28{0} - 52]=m[r28{0} - 52]{193},   m[r28{0} - 60]=m[r28{0} - 60]{193},
                m[r28{0} - 64]=m[r28{0} - 64]{193},   m[r28{0} - 188]=m[r28{0} - 188]{193},
                m[r28{0} - 196]=m[r28{0} - 196]{193},   m[r28{0} - 200]=m[r28{0} - 200]{193},
                m[r28{0} - 204]=m[r28{0} - 204]{193},   m[r28{0} - 208]=m[r28{0} - 208]{193},
                m[r28{0} - 212]=m[r28{0} - 212]{193},   m[r28{0} - 216]=m[r28{0} - 216]{193},
                m[r28{0} - 220]=m[r28{0} - 220]{193},   m[r28{0} - 224]=m[r28{0} - 224]{193},
                m[r28{0} - 228]=m[r28{0} - 228]{193},   m[r28{0} - 232]=m[r28{0} - 232]{193},
                m[r28{0} - 236]=m[r28{0} - 236]{193},   m[r28{0} - 240]=m[r28{0} - 240]{193},   <all>=<all>{193},
                tmp1=r26{230},   tmp2=tmp2{193},   tmpl=tmpl{193},
                %flags=ADDFLAGS32( r26{230}, m[r25{229} + 12], r26{232} ),
                %ZF=ADDFLAGS32( r26{230}, m[r25{229} + 12], r26{232} ),
                %CF=ADDFLAGS32( r26{230}, m[r25{229} + 12], r26{232} )
              Live variables: eax in proc proc5
result:    0 *32* eax := -
dest is not lib
call:  320 {*32* eax, *32*** ecx, *v* edx, *v* esp} := CALL proc1(
                *HANDLE* m[esp_1 - 12] := m[esp_1 - 12]
                *c** m[esp_1 - 8] := m[esp_1 - 8]
              )
              Reaching definitions: r9=r9{193},   r24=(r25{309} + r26{310}) + 2,   r25=r25{314},   r26=r26{310},
                r28=(r28{193} - 4) - 12,   r29=r29{193},   r30=r30{193},   m[r28{0} + 4]=m[r28{0} + 4]{193},
                m[r28{0} - 4]=m[r28{0} - 4]{193},   m[r28{0} - 8]=m[r28{0} - 8]{193},
                m[r28{0} - 16]=m[r28{0} - 16]{193},   m[r28{0} - 44]=m[r28{0} - 44]{193},
                m[r28{0} - 52]=m[r28{0} - 52]{193},   m[r28{0} - 60]=m[r28{0} - 60]{193},
                m[r28{0} - 64]=m[r28{0} - 64]{193},   m[r28{0} - 188]=m[r28{0} - 188]{193},
                m[r28{0} - 196]=m[r28{0} - 196]{193},   m[r28{0} - 200]=m[r28{0} - 200]{193},
                m[r28{0} - 204]=m[r28{0} - 204]{193},   m[r28{0} - 208]=m[r28{0} - 208]{193},
                m[r28{0} - 212]=m[r28{0} - 212]{193},   m[r28{0} - 216]=m[r28{0} - 216]{193},
                m[r28{0} - 220]=m[r28{0} - 220]{193},   m[r28{0} - 224]=m[r28{0} - 224]{193},
                m[r28{0} - 228]=m[r28{0} - 228]{193},   m[r28{0} - 232]=m[r28{0} - 232]{193},
                m[r28{0} - 236]=m[r28{0} - 236]{193},   m[r28{0} - 240]=m[r28{0} - 240]{193},
                m[r28{0} - 4]=m[r28{0} - 4]{193},   m[r28{0} - 8]=m[r28{0} - 8]{193},
                m[r28{0} - 16]=m[r28{0} - 16]{193},   m[r28{0} - 44]=m[r28{0} - 44]{193},
                m[r28{0} - 52]=m[r28{0} - 52]{193},   m[r28{0} - 60]=m[r28{0} - 60]{193},
                m[r28{0} - 64]=m[r28{0} - 64]{193},   m[r28{0} - 188]=m[r28{0} - 188]{193},
                m[r28{0} - 196]=m[r28{0} - 196]{193},   m[r28{0} - 200]=m[r28{0} - 200]{193},
                m[r28{0} - 204]=m[r28{0} - 204]{193},   m[r28{0} - 208]=m[r28{0} - 208]{193},
                m[r28{0} - 212]=m[r28{0} - 212]{193},   m[r28{0} - 216]=m[r28{0} - 216]{193},
                m[r28{0} - 220]=m[r28{0} - 220]{193},   m[r28{0} - 224]=m[r28{0} - 224]{193},
                m[r28{0} - 228]=m[r28{0} - 228]{193},   m[r28{0} - 232]=m[r28{0} - 232]{193},
                m[r28{0} - 236]=m[r28{0} - 236]{193},   m[r28{0} - 240]=m[r28{0} - 240]{193},   <all>=<all>{193},
                tmp1=tmp1{281},   tmp2=tmp2{193},   tmpl=tmpl{193},   %flags=LOGICALFLAGS32( r25{285} & 0x80000000 ),
                %ZF=LOGICALFLAGS32( r25{285} & 0x80000000 ),   %CF=LOGICALFLAGS32( r25{285} & 0x80000000 )
              Live variables: eax in proc proc5
result:    0 *32* eax := -
dest is not lib
call:  301 {*32* eax, *32*** ecx, *v* edx, *v* esp} := CALL proc1(
                *HANDLE* m[esp_1 - 12] := m[esp_1 - 12]
                *c** m[esp_1 - 8] := m[esp_1 - 8]
              )
              Reaching definitions: r9=r9{193},   r24=r24{290} & 0x7fffffff,   r25=r25{295},   r26=r26{289},
                r28=(r28{193} - 4) - 12,   r29=r29{193},   r30=r30{193},   m[r28{0} + 4]=m[r28{0} + 4]{193},
                m[r28{0} - 4]=m[r28{0} - 4]{193},   m[r28{0} - 8]=m[r28{0} - 8]{193},
                m[r28{0} - 16]=m[r28{0} - 16]{193},   m[r28{0} - 44]=m[r28{0} - 44]{193},
                m[r28{0} - 52]=m[r28{0} - 52]{193},   m[r28{0} - 60]=m[r28{0} - 60]{193},
                m[r28{0} - 64]=m[r28{0} - 64]{193},   m[r28{0} - 188]=m[r28{0} - 188]{193},
                m[r28{0} - 196]=m[r28{0} - 196]{193},   m[r28{0} - 200]=m[r28{0} - 200]{193},
                m[r28{0} - 204]=m[r28{0} - 204]{193},   m[r28{0} - 208]=m[r28{0} - 208]{193},
                m[r28{0} - 212]=m[r28{0} - 212]{193},   m[r28{0} - 216]=m[r28{0} - 216]{193},
                m[r28{0} - 220]=m[r28{0} - 220]{193},   m[r28{0} - 224]=m[r28{0} - 224]{193},
                m[r28{0} - 228]=m[r28{0} - 228]{193},   m[r28{0} - 232]=m[r28{0} - 232]{193},
                m[r28{0} - 236]=m[r28{0} - 236]{193},   m[r28{0} - 240]=m[r28{0} - 240]{193},
                m[r28{0} - 4]=m[r28{0} - 4]{193},   m[r28{0} - 8]=m[r28{0} - 8]{193},
                m[r28{0} - 16]=m[r28{0} - 16]{193},   m[r28{0} - 44]=m[r28{0} - 44]{193},
                m[r28{0} - 52]=m[r28{0} - 52]{193},   m[r28{0} - 60]=m[r28{0} - 60]{193},
                m[r28{0} - 64]=m[r28{0} - 64]{193},   m[r28{0} - 188]=m[r28{0} - 188]{193},
                m[r28{0} - 196]=m[r28{0} - 196]{193},   m[r28{0} - 200]=m[r28{0} - 200]{193},
                m[r28{0} - 204]=m[r28{0} - 204]{193},   m[r28{0} - 208]=m[r28{0} - 208]{193},
                m[r28{0} - 212]=m[r28{0} - 212]{193},   m[r28{0} - 216]=m[r28{0} - 216]{193},
                m[r28{0} - 220]=m[r28{0} - 220]{193},   m[r28{0} - 224]=m[r28{0} - 224]{193},
                m[r28{0} - 228]=m[r28{0} - 228]{193},   m[r28{0} - 232]=m[r28{0} - 232]{193},
                m[r28{0} - 236]=m[r28{0} - 236]{193},   m[r28{0} - 240]=m[r28{0} - 240]{193},   <all>=<all>{193},
                tmp1=tmp1{281},   tmp2=tmp2{193},   tmpl=tmpl{193},   %flags=LOGICALFLAGS32( r24{290} & 0x7fffffff ),
                %ZF=LOGICALFLAGS32( r24{290} & 0x7fffffff ),   %CF=LOGICALFLAGS32( r24{290} & 0x7fffffff )
              Live variables: eax in proc proc5
result:    0 *32* eax := -
dest is not lib
call:  454 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetModuleHandleA(
              )
              Reaching definitions: r9=r9{193},   r24=r24{804},   r25=r25{805},   r26=r26{806},
                r28=(r28{193} - 4) - 12,   r29=r29{193},   r30=r30{807},   m[r28{0} + 4]=m[r28{0} + 4]{193},
                m[r28{0} - 4]=m[r28{0} - 4]{193},   m[r28{0} - 8]=m[r28{0} - 8]{193},
                m[r28{0} - 16]=m[r28{0} - 16]{193},   m[r28{0} - 44]=m[r28{0} - 44]{193},
                m[r28{0} - 52]=m[r28{0} - 52]{193},   m[r28{0} - 60]=m[r28{0} - 60]{193},
                m[r28{0} - 64]=m[r28{0} - 64]{193},   m[r28{0} - 188]=m[r28{0} - 188]{193},
                m[r28{0} - 196]=m[r28{0} - 196]{193},   m[r28{0} - 200]=m[r28{0} - 200]{193},
                m[r28{0} - 204]=m[r28{0} - 204]{193},   m[r28{0} - 208]=m[r28{0} - 208]{193},
                m[r28{0} - 212]=m[r28{0} - 212]{193},   m[r28{0} - 216]=m[r28{0} - 216]{193},
                m[r28{0} - 220]=m[r28{0} - 220]{193},   m[r28{0} - 224]=m[r28{0} - 224]{193},
                m[r28{0} - 228]=m[r28{0} - 228]{193},   m[r28{0} - 232]=m[r28{0} - 232]{193},
                m[r28{0} - 236]=m[r28{0} - 236]{193},   m[r28{0} - 240]=m[r28{0} - 240]{193},
                m[r28{0} - 4]=m[r28{0} - 4]{193},   m[r28{0} - 8]=m[r28{0} - 8]{193},
                m[r28{0} - 16]=m[r28{0} - 16]{193},   m[r28{0} - 44]=m[r28{0} - 44]{193},
                m[r28{0} - 52]=m[r28{0} - 52]{193},   m[r28{0} - 60]=m[r28{0} - 60]{193},
                m[r28{0} - 64]=m[r28{0} - 64]{193},   m[r28{0} - 188]=m[r28{0} - 188]{193},
                m[r28{0} - 196]=m[r28{0} - 196]{193},   m[r28{0} - 200]=m[r28{0} - 200]{193},
                m[r28{0} - 204]=m[r28{0} - 204]{193},   m[r28{0} - 208]=m[r28{0} - 208]{193},
                m[r28{0} - 212]=m[r28{0} - 212]{193},   m[r28{0} - 216]=m[r28{0} - 216]{193},
                m[r28{0} - 220]=m[r28{0} - 220]{193},   m[r28{0} - 224]=m[r28{0} - 224]{193},
                m[r28{0} - 228]=m[r28{0} - 228]{193},   m[r28{0} - 232]=m[r28{0} - 232]{193},
                m[r28{0} - 236]=m[r28{0} - 236]{193},   m[r28{0} - 240]=m[r28{0} - 240]{193},   <all>=<all>{193},
                tmp1=tmp1{808},   tmp2=tmp2{193},   tmpl=tmpl{193},   %flags=%flags{809},   %ZF=%ZF{810},
                %CF=%CF{811}
              Live variables: eax in proc proc5
result:    0 *32* eax := -
dest is not lib
call:  460 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* m[esp_1 - 16] := m[esp_1 - 16]
                *c** m[esp_1 - 12] := m[esp_1 - 12]
              )
              Reaching definitions: r9=r9{193},   r24=r24{454},   r25=r25{454},   r26=r26{454},
                r28=(r28{193} - 4) - 16,   r29=r29{193},   r30=r30{807},   m[r28{0} + 4]=m[r28{0} + 4]{193},
                m[r28{0} - 4]=m[r28{0} - 4]{193},   m[r28{0} - 8]=m[r28{0} - 8]{193},
                m[r28{0} - 16]=m[r28{0} - 16]{193},   m[r28{0} - 44]=m[r28{0} - 44]{193},
                m[r28{0} - 52]=m[r28{0} - 52]{193},   m[r28{0} - 60]=m[r28{0} - 60]{193},
                m[r28{0} - 64]=m[r28{0} - 64]{193},   m[r28{0} - 188]=m[r28{0} - 188]{193},
                m[r28{0} - 196]=m[r28{0} - 196]{193},   m[r28{0} - 200]=m[r28{0} - 200]{193},
                m[r28{0} - 204]=m[r28{0} - 204]{193},   m[r28{0} - 208]=m[r28{0} - 208]{193},
                m[r28{0} - 212]=m[r28{0} - 212]{193},   m[r28{0} - 216]=m[r28{0} - 216]{193},
                m[r28{0} - 220]=m[r28{0} - 220]{193},   m[r28{0} - 224]=m[r28{0} - 224]{193},
                m[r28{0} - 228]=m[r28{0} - 228]{193},   m[r28{0} - 232]=m[r28{0} - 232]{193},
                m[r28{0} - 236]=m[r28{0} - 236]{193},   m[r28{0} - 240]=m[r28{0} - 240]{193},
                m[r28{0} - 4]=m[r28{0} - 4]{193},   m[r28{0} - 8]=m[r28{0} - 8]{193},
                m[r28{0} - 16]=m[r28{0} - 16]{193},   m[r28{0} - 44]=m[r28{0} - 44]{193},
                m[r28{0} - 52]=m[r28{0} - 52]{193},   m[r28{0} - 60]=m[r28{0} - 60]{193},
                m[r28{0} - 64]=m[r28{0} - 64]{193},   m[r28{0} - 188]=m[r28{0} - 188]{193},
                m[r28{0} - 196]=m[r28{0} - 196]{193},   m[r28{0} - 200]=m[r28{0} - 200]{193},
                m[r28{0} - 204]=m[r28{0} - 204]{193},   m[r28{0} - 208]=m[r28{0} - 208]{193},
                m[r28{0} - 212]=m[r28{0} - 212]{193},   m[r28{0} - 216]=m[r28{0} - 216]{193},
                m[r28{0} - 220]=m[r28{0} - 220]{193},   m[r28{0} - 224]=m[r28{0} - 224]{193},
                m[r28{0} - 228]=m[r28{0} - 228]{193},   m[r28{0} - 232]=m[r28{0} - 232]{193},
                m[r28{0} - 236]=m[r28{0} - 236]{193},   m[r28{0} - 240]=m[r28{0} - 240]{193},   <all>=<all>{193},
                tmp1=tmp1{808},   tmp2=tmp2{193},   tmpl=tmpl{193},   %flags=%flags{809},   %ZF=%ZF{810},
                %CF=%CF{811}
              Live variables: eax,  ecx in proc proc5
result:    0 *32* eax := -
result:    0 *v* ecx := -
dest is not lib
call:  657 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL CloseHandle(
                *HANDLE* m[esp_8 - 4] := m[esp_8 - 4]
              )
              Reaching definitions: r9=r9{864},   r24=r24{865},   r25=r25{651},   r26=r26{867},   r28=r28{868} - 8,
                r29=r29{869},   r30=r30{870},   m[r28{0} + 4]=m[r28{0} + 4]{1032},   m[r28{0} - 4]=m[r28{0} - 4]{193},
                m[r28{0} - 8]=m[r28{0} - 8]{193},   m[r28{0} - 16]=m[r28{0} - 16]{193},
                m[r28{0} - 44]=m[r28{0} - 44]{193},   m[r28{0} - 52]=m[r28{0} - 52]{193},
                m[r28{0} - 60]=m[r28{0} - 60]{193},   m[r28{0} - 64]=m[r28{0} - 64]{193},
                m[r28{0} - 188]=m[r28{0} - 188]{193},   m[r28{0} - 196]=m[r28{0} - 196]{193},
                m[r28{0} - 200]=m[r28{0} - 200]{193},   m[r28{0} - 204]=m[r28{0} - 204]{193},
                m[r28{0} - 208]=m[r28{0} - 208]{193},   m[r28{0} - 212]=m[r28{0} - 212]{193},
                m[r28{0} - 216]=m[r28{0} - 216]{193},   m[r28{0} - 220]=m[r28{0} - 220]{193},
                m[r28{0} - 224]=m[r28{0} - 224]{193},   m[r28{0} - 228]=m[r28{0} - 228]{193},
                m[r28{0} - 232]=m[r28{0} - 232]{193},   m[r28{0} - 236]=m[r28{0} - 236]{193},
                m[r28{0} - 240]=m[r28{0} - 240]{193},   m[r28{0} - 4]=m[r28{0} - 4]{988},
                m[r28{0} - 8]=m[r28{0} - 8]{989},   m[r28{0} - 16]=m[r28{0} - 16]{990},
                m[r28{0} - 44]=m[r28{0} - 44]{991},   m[r28{0} - 52]=m[r28{0} - 52]{992},
                m[r28{0} - 60]=m[r28{0} - 60]{993},   m[r28{0} - 64]=m[r28{0} - 64]{994},
                m[r28{0} - 188]=m[r28{0} - 188]{995},   m[r28{0} - 196]=m[r28{0} - 196]{996},
                m[r28{0} - 200]=m[r28{0} - 200]{997},   m[r28{0} - 204]=m[r28{0} - 204]{998},
                m[r28{0} - 208]=m[r28{0} - 208]{999},   m[r28{0} - 212]=m[r28{0} - 212]{1000},
                m[r28{0} - 216]=m[r28{0} - 216]{1001},   m[r28{0} - 220]=m[r28{0} - 220]{1002},
                m[r28{0} - 224]=m[r28{0} - 224]{1003},   m[r28{0} - 228]=m[r28{0} - 228]{1004},
                m[r28{0} - 232]=m[r28{0} - 232]{1005},   m[r28{0} - 236]=m[r28{0} - 236]{1006},
                m[r28{0} - 240]=m[r28{0} - 240]{1007},   <all>=<all>{193},   tmp1=tmp1{871},   tmp2=tmp2{872},
                tmpl=tmpl{873},   %flags=%flags{874},   %ZF=%ZF{875},   %CF=%CF{876}
              Live variables:  in proc proc5
dest is not lib
call:  671 {*32* eax, *8* cl, *32* ecx, *32* edx, *v* esp} := CALL proc6(
                *32* m[esp_8 - 12] := m[esp_8 - 12]
                *32* m[esp_8 - 8] := m[esp_8 - 8]
                *u32* m[esp_8 - 4] := m[esp_8 - 4]
              )
              Reaching definitions: r9=r9{864},   r24=r24{659},   r25=r25{662},   r26=r26{665},   r28=r28{868} - 16,
                r29=r29{869},   r30=r30{870},   m[r28{0} + 4]=m[r28{0} + 4]{1032},   m[r28{0} - 4]=m[r28{0} - 4]{193},
                m[r28{0} - 8]=m[r28{0} - 8]{193},   m[r28{0} - 16]=m[r28{0} - 16]{193},
                m[r28{0} - 44]=m[r28{0} - 44]{193},   m[r28{0} - 52]=m[r28{0} - 52]{193},
                m[r28{0} - 60]=m[r28{0} - 60]{193},   m[r28{0} - 64]=m[r28{0} - 64]{193},
                m[r28{0} - 188]=m[r28{0} - 188]{193},   m[r28{0} - 196]=m[r28{0} - 196]{193},
                m[r28{0} - 200]=m[r28{0} - 200]{193},   m[r28{0} - 204]=m[r28{0} - 204]{193},
                m[r28{0} - 208]=m[r28{0} - 208]{193},   m[r28{0} - 212]=m[r28{0} - 212]{193},
                m[r28{0} - 216]=m[r28{0} - 216]{193},   m[r28{0} - 220]=m[r28{0} - 220]{193},
                m[r28{0} - 224]=m[r28{0} - 224]{193},   m[r28{0} - 228]=m[r28{0} - 228]{193},
                m[r28{0} - 232]=m[r28{0} - 232]{193},   m[r28{0} - 236]=m[r28{0} - 236]{193},
                m[r28{0} - 240]=m[r28{0} - 240]{193},   m[r28{0} - 4]=m[r28{0} - 4]{988},
                m[r28{0} - 8]=m[r28{0} - 8]{989},   m[r28{0} - 16]=m[r28{0} - 16]{990},
                m[r28{0} - 44]=m[r28{0} - 44]{991},   m[r28{0} - 52]=m[r28{0} - 52]{992},
                m[r28{0} - 60]=m[r28{0} - 60]{993},   m[r28{0} - 64]=m[r28{0} - 64]{994},
                m[r28{0} - 188]=m[r28{0} - 188]{995},   m[r28{0} - 196]=m[r28{0} - 196]{996},
                m[r28{0} - 200]=m[r28{0} - 200]{997},   m[r28{0} - 204]=m[r28{0} - 204]{998},
                m[r28{0} - 208]=m[r28{0} - 208]{999},   m[r28{0} - 212]=m[r28{0} - 212]{1000},
                m[r28{0} - 216]=m[r28{0} - 216]{1001},   m[r28{0} - 220]=m[r28{0} - 220]{1002},
                m[r28{0} - 224]=m[r28{0} - 224]{1003},   m[r28{0} - 228]=m[r28{0} - 228]{1004},
                m[r28{0} - 232]=m[r28{0} - 232]{1005},   m[r28{0} - 236]=m[r28{0} - 236]{1006},
                m[r28{0} - 240]=m[r28{0} - 240]{1007},   <all>=<all>{193},   tmp1=tmp1{871},   tmp2=tmp2{872},
                tmpl=tmpl{873},   %flags=%flags{874},   %ZF=%ZF{875},   %CF=%CF{876}
              Live variables:  in proc proc5
dest is not lib
call:  702 {*32* eax, *32* ecx, *32* edx, *v* esp} := CALL proc8(
                *32* m[esp_8 - 4] := m[esp_8 - 4]
              )
              Reaching definitions: r9=r9{671},   r24=global16,   r25=r25{671},   r26=r26{671},   r28=r28{868} - 8,
                r29=r29{869},   r30=r30{870},   m[r28{0} + 4]=m[r28{0} + 4]{1032},   m[r28{0} - 4]=m[r28{0} - 4]{193},
                m[r28{0} - 8]=m[r28{0} - 8]{193},   m[r28{0} - 16]=m[r28{0} - 16]{193},
                m[r28{0} - 44]=m[r28{0} - 44]{193},   m[r28{0} - 52]=m[r28{0} - 52]{193},
                m[r28{0} - 60]=m[r28{0} - 60]{193},   m[r28{0} - 64]=m[r28{0} - 64]{193},
                m[r28{0} - 188]=m[r28{0} - 188]{193},   m[r28{0} - 196]=m[r28{0} - 196]{193},
                m[r28{0} - 200]=m[r28{0} - 200]{193},   m[r28{0} - 204]=m[r28{0} - 204]{193},
                m[r28{0} - 208]=m[r28{0} - 208]{193},   m[r28{0} - 212]=m[r28{0} - 212]{193},
                m[r28{0} - 216]=m[r28{0} - 216]{193},   m[r28{0} - 220]=m[r28{0} - 220]{193},
                m[r28{0} - 224]=m[r28{0} - 224]{193},   m[r28{0} - 228]=m[r28{0} - 228]{193},
                m[r28{0} - 232]=m[r28{0} - 232]{193},   m[r28{0} - 236]=m[r28{0} - 236]{193},
                m[r28{0} - 240]=m[r28{0} - 240]{193},   m[r28{0} - 4]=m[r28{0} - 4]{988},
                m[r28{0} - 8]=m[r28{0} - 8]{989},   m[r28{0} - 16]=m[r28{0} - 16]{990},
                m[r28{0} - 44]=m[r28{0} - 44]{991},   m[r28{0} - 52]=m[r28{0} - 52]{992},
                m[r28{0} - 60]=m[r28{0} - 60]{993},   m[r28{0} - 64]=m[r28{0} - 64]{994},
                m[r28{0} - 188]=m[r28{0} - 188]{995},   m[r28{0} - 196]=m[r28{0} - 196]{996},
                m[r28{0} - 200]=m[r28{0} - 200]{997},   m[r28{0} - 204]=m[r28{0} - 204]{998},
                m[r28{0} - 208]=m[r28{0} - 208]{999},   m[r28{0} - 212]=m[r28{0} - 212]{1000},
                m[r28{0} - 216]=m[r28{0} - 216]{1001},   m[r28{0} - 220]=m[r28{0} - 220]{1002},
                m[r28{0} - 224]=m[r28{0} - 224]{1003},   m[r28{0} - 228]=m[r28{0} - 228]{1004},
                m[r28{0} - 232]=m[r28{0} - 232]{1005},   m[r28{0} - 236]=m[r28{0} - 236]{1006},
                m[r28{0} - 240]=m[r28{0} - 240]{1007},   <all>=<all>{193},   tmp1=global13,   tmp2=tmp2{872},
                tmpl=tmpl{873},   %flags=SUBFLAGS32( m[0x4092c4], 0, global13 ),   %ZF=global13 = 0,
                %CF=m[0x4092c4] <u 0
              Live variables:  in proc proc5
dest is not lib
call:  691 {*32* eax, *32* ecx, *32* edx, *v* esp} := CALL proc7(
                *j32* m[esp_8 - 8] := m[esp_8 - 8]
                *32** m[esp_8 - 4] := m[esp_8 - 4]
              )
              Reaching definitions: r9=r9{671},   r24=r24{678},   r25=r25{681},   r26=global66,
                r28=(r28{868} - 16) + 4,   r29=r29{869},   r30=r30{870},   m[r28{0} + 4]=m[r28{0} + 4]{1032},
                m[r28{0} - 4]=m[r28{0} - 4]{193},   m[r28{0} - 8]=m[r28{0} - 8]{193},
                m[r28{0} - 16]=m[r28{0} - 16]{193},   m[r28{0} - 44]=m[r28{0} - 44]{193},
                m[r28{0} - 52]=m[r28{0} - 52]{193},   m[r28{0} - 60]=m[r28{0} - 60]{193},
                m[r28{0} - 64]=m[r28{0} - 64]{193},   m[r28{0} - 188]=m[r28{0} - 188]{193},
                m[r28{0} - 196]=m[r28{0} - 196]{193},   m[r28{0} - 200]=m[r28{0} - 200]{193},
                m[r28{0} - 204]=m[r28{0} - 204]{193},   m[r28{0} - 208]=m[r28{0} - 208]{193},
                m[r28{0} - 212]=m[r28{0} - 212]{193},   m[r28{0} - 216]=m[r28{0} - 216]{193},
                m[r28{0} - 220]=m[r28{0} - 220]{193},   m[r28{0} - 224]=m[r28{0} - 224]{193},
                m[r28{0} - 228]=m[r28{0} - 228]{193},   m[r28{0} - 232]=m[r28{0} - 232]{193},
                m[r28{0} - 236]=m[r28{0} - 236]{193},   m[r28{0} - 240]=m[r28{0} - 240]{193},
                m[r28{0} - 4]=m[r28{0} - 4]{988},   m[r28{0} - 8]=m[r28{0} - 8]{989},
                m[r28{0} - 16]=m[r28{0} - 16]{990},   m[r28{0} - 44]=m[r28{0} - 44]{991},
                m[r28{0} - 52]=m[r28{0} - 52]{992},   m[r28{0} - 60]=m[r28{0} - 60]{993},
                m[r28{0} - 64]=m[r28{0} - 64]{994},   m[r28{0} - 188]=m[r28{0} - 188]{995},
                m[r28{0} - 196]=m[r28{0} - 196]{996},   m[r28{0} - 200]=m[r28{0} - 200]{997},
                m[r28{0} - 204]=m[r28{0} - 204]{998},   m[r28{0} - 208]=m[r28{0} - 208]{999},
                m[r28{0} - 212]=m[r28{0} - 212]{1000},   m[r28{0} - 216]=m[r28{0} - 216]{1001},
                m[r28{0} - 220]=m[r28{0} - 220]{1002},   m[r28{0} - 224]=m[r28{0} - 224]{1003},
                m[r28{0} - 228]=m[r28{0} - 228]{1004},   m[r28{0} - 232]=m[r28{0} - 232]{1005},
                m[r28{0} - 236]=m[r28{0} - 236]{1006},   m[r28{0} - 240]=m[r28{0} - 240]{1007},   <all>=<all>{193},
                tmp1=global16,   tmp2=tmp2{872},   tmpl=tmpl{873},
                %flags=ADDFLAGS32( global16, m[r24{678} + 40], r25{681} ),
                %ZF=ADDFLAGS32( global16, m[r24{678} + 40], r25{681} ),
                %CF=ADDFLAGS32( global16, m[r24{678} + 40], r25{681} )
              Live variables:  in proc proc5
dest is not lib
call:  649 {*32* eax, *32* ecx, *32* edx, *v** esp_8} := CALL VirtualAlloc(
                *LPVOID* m[esp_8 - 16] := m[esp_8 - 16]
                *DWORD* m[esp_8 - 12] := m[esp_8 - 12]
                *DWORD* m[esp_8 - 8] := m[esp_8 - 8]
                *DWORD* m[esp_8 - 4] := m[esp_8 - 4]
              )
              Reaching definitions: r9=r9{851},   r24=global66,   r25=r25{639},   r26=r26{640},   r28=r28{855} - 20,
                r29=r29{856},   r30=r30{857},   m[r28{0} + 4]=m[r28{0} + 4]{1031},   m[r28{0} - 4]=m[r28{0} - 4]{193},
                m[r28{0} - 8]=m[r28{0} - 8]{193},   m[r28{0} - 16]=m[r28{0} - 16]{193},
                m[r28{0} - 44]=m[r28{0} - 44]{193},   m[r28{0} - 52]=m[r28{0} - 52]{193},
                m[r28{0} - 60]=m[r28{0} - 60]{193},   m[r28{0} - 64]=m[r28{0} - 64]{193},
                m[r28{0} - 188]=m[r28{0} - 188]{193},   m[r28{0} - 196]=m[r28{0} - 196]{193},
                m[r28{0} - 200]=m[r28{0} - 200]{193},   m[r28{0} - 204]=m[r28{0} - 204]{193},
                m[r28{0} - 208]=m[r28{0} - 208]{193},   m[r28{0} - 212]=m[r28{0} - 212]{193},
                m[r28{0} - 216]=m[r28{0} - 216]{193},   m[r28{0} - 220]=m[r28{0} - 220]{193},
                m[r28{0} - 224]=m[r28{0} - 224]{193},   m[r28{0} - 228]=m[r28{0} - 228]{193},
                m[r28{0} - 232]=m[r28{0} - 232]{193},   m[r28{0} - 236]=m[r28{0} - 236]{193},
                m[r28{0} - 240]=m[r28{0} - 240]{193},   m[r28{0} - 4]=m[r28{0} - 4]{968},
                m[r28{0} - 8]=m[r28{0} - 8]{969},   m[r28{0} - 16]=m[r28{0} - 16]{970},
                m[r28{0} - 44]=m[r28{0} - 44]{971},   m[r28{0} - 52]=m[r28{0} - 52]{972},
                m[r28{0} - 60]=m[r28{0} - 60]{973},   m[r28{0} - 64]=m[r28{0} - 64]{974},
                m[r28{0} - 188]=m[r28{0} - 188]{975},   m[r28{0} - 196]=m[r28{0} - 196]{976},
                m[r28{0} - 200]=m[r28{0} - 200]{977},   m[r28{0} - 204]=m[r28{0} - 204]{978},
                m[r28{0} - 208]=m[r28{0} - 208]{979},   m[r28{0} - 212]=m[r28{0} - 212]{980},
                m[r28{0} - 216]=m[r28{0} - 216]{981},   m[r28{0} - 220]=m[r28{0} - 220]{982},
                m[r28{0} - 224]=m[r28{0} - 224]{983},   m[r28{0} - 228]=m[r28{0} - 228]{984},
                m[r28{0} - 232]=m[r28{0} - 232]{985},   m[r28{0} - 236]=m[r28{0} - 236]{986},
                m[r28{0} - 240]=m[r28{0} - 240]{987},   <all>=<all>{193},   tmp1=global13,   tmp2=tmp2{859},
                tmpl=tmpl{860},   %flags=SUBFLAGS32( m[0x4092c4], 0, global13 ),   %ZF=global13 = 0,
                %CF=m[0x4092c4] <u 0
              Live variables: eax,  esp_8 in proc proc5
result:    0 *32* eax := -
result:    0 *v** esp_8 := -
dest is not lib
call:  632 {*32* eax, *32* ecx, *32* edx, *v** esp_8} := CALL VirtualAlloc(
                *LPVOID* m[esp_8 - 16] := m[esp_8 - 16]
                *DWORD* m[esp_8 - 12] := m[esp_8 - 12]
                *DWORD* m[esp_8 - 8] := m[esp_8 - 8]
                *DWORD* m[esp_8 - 4] := m[esp_8 - 4]
              )
              Reaching definitions: r9=r9{851},   r24=r24{626},   r25=r25{622},   r26=r26{625},   r28=r28{855} - 20,
                r29=r29{856},   r30=r30{857},   m[r28{0} + 4]=m[r28{0} + 4]{1031},   m[r28{0} - 4]=m[r28{0} - 4]{193},
                m[r28{0} - 8]=m[r28{0} - 8]{193},   m[r28{0} - 16]=m[r28{0} - 16]{193},
                m[r28{0} - 44]=m[r28{0} - 44]{193},   m[r28{0} - 52]=m[r28{0} - 52]{193},
                m[r28{0} - 60]=m[r28{0} - 60]{193},   m[r28{0} - 64]=m[r28{0} - 64]{193},
                m[r28{0} - 188]=m[r28{0} - 188]{193},   m[r28{0} - 196]=m[r28{0} - 196]{193},
                m[r28{0} - 200]=m[r28{0} - 200]{193},   m[r28{0} - 204]=m[r28{0} - 204]{193},
                m[r28{0} - 208]=m[r28{0} - 208]{193},   m[r28{0} - 212]=m[r28{0} - 212]{193},
                m[r28{0} - 216]=m[r28{0} - 216]{193},   m[r28{0} - 220]=m[r28{0} - 220]{193},
                m[r28{0} - 224]=m[r28{0} - 224]{193},   m[r28{0} - 228]=m[r28{0} - 228]{193},
                m[r28{0} - 232]=m[r28{0} - 232]{193},   m[r28{0} - 236]=m[r28{0} - 236]{193},
                m[r28{0} - 240]=m[r28{0} - 240]{193},   m[r28{0} - 4]=m[r28{0} - 4]{968},
                m[r28{0} - 8]=m[r28{0} - 8]{969},   m[r28{0} - 16]=m[r28{0} - 16]{970},
                m[r28{0} - 44]=m[r28{0} - 44]{971},   m[r28{0} - 52]=m[r28{0} - 52]{972},
                m[r28{0} - 60]=m[r28{0} - 60]{973},   m[r28{0} - 64]=m[r28{0} - 64]{974},
                m[r28{0} - 188]=m[r28{0} - 188]{975},   m[r28{0} - 196]=m[r28{0} - 196]{976},
                m[r28{0} - 200]=m[r28{0} - 200]{977},   m[r28{0} - 204]=m[r28{0} - 204]{978},
                m[r28{0} - 208]=m[r28{0} - 208]{979},   m[r28{0} - 212]=m[r28{0} - 212]{980},
                m[r28{0} - 216]=m[r28{0} - 216]{981},   m[r28{0} - 220]=m[r28{0} - 220]{982},
                m[r28{0} - 224]=m[r28{0} - 224]{983},   m[r28{0} - 228]=m[r28{0} - 228]{984},
                m[r28{0} - 232]=m[r28{0} - 232]{985},   m[r28{0} - 236]=m[r28{0} - 236]{986},
                m[r28{0} - 240]=m[r28{0} - 240]{987},   <all>=<all>{193},   tmp1=global13,   tmp2=tmp2{859},
                tmpl=tmpl{860},   %flags=SUBFLAGS32( m[0x4092c4], 0, global13 ),   %ZF=global13 = 0,
                %CF=m[0x4092c4] <u 0
              Live variables: eax,  esp_8 in proc proc5
result:    0 *32* eax := -
result:    0 *v** esp_8 := -
