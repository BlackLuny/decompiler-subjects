INFO  an - ### holdec 1.1 Copyright 2003-2012 Raimar Falke
INFO  an - Using ./malware_via_email/malware_0789/ia32_pe/subject.exe as executable
read image                              : ............................................................ [ done ]
INFO  fG - Detected PE (Portable Executable)
INFO  ks - wrote ./malware_via_email/malware_0789/ia32_pe/subject.exe.info
INFO  fG - disassembleAndWrite: start a new loop with 1 extra block starts
Disassemble                             : ............................................................ [ done ]
INFO  fG - disassembleAndWrite: running multiline
INFO  ks - wrote ./malware_via_email/malware_0789/ia32_pe/subject.exe.info
Preprocessing 1782 asm lines            : ............................................................ [ done ]
INFO  ks - wrote ./malware_via_email/malware_0789/ia32_pe/subject.exe.info
INFO  fG - disassembleAndWrite: found no new addresses. will stop now.
INFO  ks - wrote ./malware_via_email/malware_0789/ia32_pe/subject.exe.info
Preprocessing 1897 asm lines            : ............................................................ [ done ]
INFO  ks - wrote ./malware_via_email/malware_0789/ia32_pe/subject.exe.info
INFO  fG - reading all asm lines ...
INFO  fG - ... read 1897 asm lines
WARN  w - Address 00403000.0 is excluded by the address filter. Maybe outside text section?
create blocks                           : ............................................................ [ done ]
init blocks                             : ............................................................ [ done ]
Writing 11 methods to cache             : ............................................................ [ done ]
INFO  an - will decompile 11 functions
decompile F_00401000                    : .........WARN  ac - Block 2 is already known to have a starting stack offset of -32 but when called from 1 it has an offset of -36
................. failed: Can't find a setter for reg_12_local in block 0
decompile F_00401090                    : .WARN  ag - Referencing unknown line 00401260.0
WARN  ag - Referencing unknown line 00401260.0
........WARN  ac - Block 2 is already known to have a starting stack offset of -60 but when called from 1 it has an offset of -64
........ failed: A non-current expression of a variable is used in block L10 in reg_c17 = MULT(LOAD(ADD(SEGMENT2ADDR(reg_pp14), 4211048)), reg_c16): The current setter is reg_zj8 while [reg_pp14] was found. Related expressions are [reg_zj8, reg_pp14, reg_zj7, reg_zj9, reg_pp7, reg_zj3, reg_zj6]
decompile F_00401260                    : .......................... failed: Expression reg_12_local0 already has a parent (reg_12_local0 = reg_12_local0) and so can't be added to me (reg_12_local0 = reg_12_local0)
decompile F_004012f0                    : .......................... failed: Can't find a setter for reg_56_local in block 0
decompile F_00401360                    : .WARN  ag - Referencing unknown line 004027d0.0
WARN  ag - Referencing unknown line 004012f0.0
WARN  ag - Referencing unknown line 004027d0.0
WARN  ag - Referencing unknown line 00401000.0
WARN  ag - Referencing unknown line 004027d0.0
WARN  ag - Referencing unknown line 00401090.0
WARN  ag - Referencing unknown line 00401d90.0
WARN  ag - Referencing unknown line 00401d90.0
WARN  ag - Referencing unknown line 00402010.0
WARN  ag - Referencing unknown line 00402790.0
..INFO  ks - wrote ./malware_via_email/malware_0789/ia32_pe/subject.exe.info
......WARN  ac - Block 7 is already known to have a starting stack offset of -528 but when called from 6 it has an offset of -532
WARN  ac - Block 10 is already known to have a starting stack offset of -536 but when called from 9 it has an offset of -532
WARN  ac - Block 46 is already known to have a starting stack offset of -468 but when called from 13 it has an offset of -592
WARN  ac - Block 46 is already known to have a starting stack offset of -592 but when called from 17 it has an offset of -620
WARN  ac - Block 46 is already known to have a starting stack offset of -620 but when called from 19 it has an offset of -628
WARN  ac - Block 46 is already known to have a starting stack offset of -628 but when called from 23 it has an offset of -664
WARN  ac - Block 46 is already known to have a starting stack offset of -664 but when called from 25 it has an offset of -668
WARN  ac - Block 28 is already known to have a starting stack offset of -676 but when called from 27 it has an offset of -680
WARN  ac - Block 30 is already known to have a starting stack offset of -688 but when called from 29 it has an offset of -692
WARN  ac - Block 40 is already known to have a starting stack offset of -700 but when called from 39 it has an offset of -704
WARN  ac - Block 43 is already known to have a starting stack offset of -708 but when called from 41 it has an offset of -704
WARN  ac - Block 45 is already known to have a starting stack offset of -712 but when called from 44 it has an offset of -716
WARN  ac - Block 32 is already known to have a starting stack offset of -696 but when called from 31 it has an offset of -700
WARN  ac - Block 46 is already known to have a starting stack offset of -668 but when called from 45 it has an offset of -712
................................................... [ done ]
decompile F_00401d90                    : .WARN  ag - Referencing unknown line 00401000.0
........WARN  ac - Block 3 is already known to have a starting stack offset of -64 but when called from 2 it has an offset of -68
WARN  ac - Block 18 is already known to have a starting stack offset of -68 but when called from 6 it has an offset of -84
................................................... [ done ]
decompile F_00402010                    : .WARN  ag - Referencing unknown line 00401000.0
WARN  ag - Referencing unknown line 00401000.0
WARN  ag - Referencing unknown line 00401000.0
WARN  ag - Referencing unknown line 00402640.0
WARN  ag - Referencing unknown line 00402720.0
..INFO  ks - wrote ./malware_via_email/malware_0789/ia32_pe/subject.exe.info
......WARN  ac - Block 10 is already known to have a starting stack offset of -104 but when called from 32 it has an offset of -108
WARN  ac - Block 71 is already known to have a starting stack offset of -104 but when called from 16 it has an offset of -108
WARN  ac - Block 71 is already known to have a starting stack offset of -108 but when called from 28 it has an offset of -116
WARN  ac - Block 71 is already known to have a starting stack offset of -116 but when called from 14 it has an offset of -112
WARN  ac - Block 23 is already known to have a starting stack offset of -108 but when called from 31 it has an offset of -116
WARN  ac - Block 54 is already known to have a starting stack offset of -156 but when called from 52 it has an offset of -168
WARN  ac - Block 71 is already known to have a starting stack offset of -116 but when called from 53 it has an offset of -168
WARN  ac - Block 71 is already known to have a starting stack offset of -168 but when called from 70 it has an offset of -152
WARN  ac - Block 58 is already known to have a starting stack offset of -156 but when called from 56 it has an offset of -168
WARN  ac - Block 67 is already known to have a starting stack offset of -152 but when called from 61 it has an offset of -180
WARN  ac - Block 67 is already known to have a starting stack offset of -180 but when called from 65 it has an offset of -196
WARN  ac - Block 71 is already known to have a starting stack offset of -168 but when called from 66 it has an offset of -196
WARN  ac - Block 71 is already known to have a starting stack offset of -196 but when called from 45 it has an offset of -128
WARN  ac - Block 17 is already known to have a starting stack offset of -108 but when called from 15 it has an offset of -112
................................................... [ done ]
INFO  eI -   pass construct regions took too long: 3.036sec.
INFO  eI -   pass Flow transformations of regions took too long: 4.245sec.
INFO  eI -   pass construct regions took too long: 3.594sec.
decompile F_00402640                    : .......................... failed: Can't find a setter for reg_4_local in block 0
decompile F_00402720                    : .......................... failed: Can't find a setter for reg_20_local in block 0
decompile F_00402790                    : .......................... failed: Can't find a setter for reg_28_local in block 0
decompile F_004027d0                    : .......................... failed: Can't find a setter for reg_20_local in block 0
