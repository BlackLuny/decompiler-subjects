Unknown library function GetProcessHeap
assgn   25 *32* %pc := m[0x403034]
is readonly
assgn   31 *32* %pc := m[0x403038]
is readonly
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure WinMain ###
in proc WinMain adding addrExp r28{0} - 20 to local table
in proc WinMain adding addrExp r28{0} - 12 to local table
in proc WinMain adding addrExp r28{0} - 8 to local table
in proc WinMain adding addrExp r28{0} - 4 to local table
in proc WinMain adding addrExp r28{0} - 28 to local table
in proc WinMain adding addrExp r28{0} - 12 to local table
in proc WinMain adding addrExp r28{0} - 32 to local table
in proc WinMain adding addrExp r28{0} - 36 to local table
in proc WinMain adding addrExp r28{0} - 40 to local table
in proc WinMain adding addrExp r28{0} - 40 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffd8 existing type unsigned int but added type HANDLE
in proc WinMain adding addrExp r28{0} - 44 to local table
in proc WinMain adding addrExp r28{0} - 28 to local table
in proc WinMain adding addrExp r28{0} - 8 to local table
could not set type for unknown parameter expression m[r28{0} + 4]
in proc WinMain adding addrExp r28{0} - 8 to local table
could not set type for unknown parameter expression m[r28{0} + 8]
could not set type for unknown parameter expression m[r28{0} + 12]
could not set type for unknown parameter expression m[r28{0} + 16]
local esp has type void * that doesn't agree with type of define void of a library, why?
local eax has type HANDLE that doesn't agree with type of define __size32 of a library, why?
dest is not lib
call:   26 {*HANDLE* eax, *v* r25, *v* r26} := CALL GetProcessHeap(
              )
              Reaching definitions: r24=(0x1f7e5 << m[r28{0} - 20]{0}) >>A m[r28{0} - 12]{0},   r25=m[r28{0} + 4]{0},
                r28=r28{0} - 40,   r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},
                m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} + 16]=m[r28{0} + 16]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 12]=(0x1f7e5 << m[r28{0} - 20]{0}) >>A m[r28{0} - 12]{0},
                m[r28{0} - 20]=m[r28{0} - 20]{0},   m[r28{0} - 28]=0,   m[r28{0} - 32]=m[r28{0} + 4]{0},
                m[r28{0} - 36]=0,   m[r28{0} - 40]=%pc,   tmp1=0x1f7e5 << m[r28{0} - 20]{0},
                %flags=SARFLAGS( (0x1f7e5 << m[r28{0} - 20]{0}) >>A m[r28{0} - 12]{0}, 0x1f7e5 << m[r28{0} - 20]{0}, m[r28{0} - 12]{0} ),
                %ZF=SARFLAGS( (0x1f7e5 << m[r28{0} - 20]{0}) >>A m[r28{0} - 12]{0}, 0x1f7e5 << m[r28{0} - 20]{0}, m[r28{0} - 12]{0} ),
                %CF=SARFLAGS( (0x1f7e5 << m[r28{0} - 20]{0}) >>A m[r28{0} - 12]{0}, 0x1f7e5 << m[r28{0} - 20]{0}, m[r28{0} - 12]{0} )
              Live variables: eax in proc WinMain
result:    0 *HANDLE* eax := -
dest is not lib
call:   32 {*32* eax, *v* r25, *v* r26} := CALL HeapAlloc(
                *DWORD* local0 := hInstance
                *DWORD* local1 := 0
                *HANDLE* local2 := eax
              )
              Reaching definitions: r24=r24{26},   r25=r25{26},   r26=r26{26},   r28=r28{0} - 44,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} + 16]=m[r28{0} + 16]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{0},
                m[r28{0} - 12]=(0x1f7e5 << m[r28{0} - 20]{0}) >>A m[r28{0} - 12]{0},   m[r28{0} - 20]=m[r28{0} - 20]{0}
                m[r28{0} - 28]=0,   m[r28{0} - 32]=m[r28{0} + 4]{0},   m[r28{0} - 36]=0,   m[r28{0} - 40]=r24{26},
                m[r28{0} - 44]=%pc,   tmp1=0x1f7e5 << m[r28{0} - 20]{0},
                %flags=SARFLAGS( (0x1f7e5 << m[r28{0} - 20]{0}) >>A m[r28{0} - 12]{0}, 0x1f7e5 << m[r28{0} - 20]{0}, m[r28{0} - 12]{0} ),
                %ZF=SARFLAGS( (0x1f7e5 << m[r28{0} - 20]{0}) >>A m[r28{0} - 12]{0}, 0x1f7e5 << m[r28{0} - 20]{0}, m[r28{0} - 12]{0} ),
                %CF=SARFLAGS( (0x1f7e5 << m[r28{0} - 20]{0}) >>A m[r28{0} - 12]{0}, 0x1f7e5 << m[r28{0} - 20]{0}, m[r28{0} - 12]{0} )
              Live variables: eax in proc WinMain
result:    0 *32* eax := -
