// fn00401101
// Return size: 0
void fn00401101()
fn00401101_entry:
	goto l00401101
	// succ:  l00401101
l00401006:
	edi = edi | ecx
	SZO = cond(edi)
	C = false
	ebx = esi
	edi = edi ^ ecx
	SZO = cond(edi)
	C = false
	ebx = edi
	bl = bl - al
	SCZO = cond(bl)
	bh = bh + al
	SCZO = cond(bh)
	goto l0040105A
	// succ:  l0040105A
l00401019:
	edi = edi + ebx
	SCZO = cond(edi)
	ebx = ebx | esi
	SZO = cond(ebx)
	C = false
	edi = edi ^ eax
	SZO = cond(edi)
	C = false
	ebx = ebx | ecx
	SZO = cond(ebx)
	C = false
	edi = edi | edx
	SZO = cond(edi)
	C = false
	ebx = ebx + edx
	SCZO = cond(ebx)
	ebx = ebx | edx
	SZO = cond(ebx)
	C = false
	ebx = ebx | esi
	SZO = cond(ebx)
	C = false
	branch Test(SG,S) l004010CE
	// succ:  l0040102F l004010CE
l0040102F:
	v14 = edx
	edx = edx
	edx = v14
	// succ:  l00401036
l00401036:
	branch Test(NS,S) l004010CE
	// succ:  l0040103C l004010CE
l0040103C:
	C = __aaa(al, ah, &al, &ah)
	ebp = ebp - 0x00000001
	SZO = cond(ebp)
	SCZO = cond(ch - Mem0[ecx + 0x0000005B:byte])
	esp = esp - 0x00000004
	Mem0[esp:word32] = ds
	esp = esp - 0x00000004
	Mem0[esp:word32] = 0xDF2B4FE5
	esp = ebp
	ebp = Mem0[esp:word32]
	esp = esp + 0x00000004
	ecx = ecx - ebx
	SCZO = cond(ecx)
	ebx = ebx ^ eax
	SZO = cond(ebx)
	C = false
	eax = eax + edi
	SCZO = cond(eax)
	edi = edi - 0x00000001
	SZO = cond(edi)
	eax = eax - 0x00000001
	SZO = cond(eax)
	goto l00401087
	// succ:  l00401087
l0040105A:
l00401072:
	ebx = ebx ^ edi
	SZO = cond(ebx)
	C = false
	ebx = ebx + edx
	SCZO = cond(ebx)
	edi = edi + ecx
	SCZO = cond(edi)
	edi = edi + edx
	SCZO = cond(edi)
	ebx = ebx - 0x00000001
	SZO = cond(ebx)
	edi = edi ^ ebx
	SZO = cond(edi)
	C = false
	edi = edi + edx
	SCZO = cond(edi)
	goto l00401019
	// succ:  l00401019
l00401087:
	esi = esi + 0x00000001
	SZO = cond(esi)
	ecx = ecx + edx
	SCZO = cond(ecx)
	esi = esi + ecx
	SCZO = cond(esi)
	edx = edx + 0x00000001
	SZO = cond(edx)
	edi = edi - 0x00000001
	SZO = cond(edi)
	edi = edi - eax
	SCZO = cond(edi)
	goto l0040111D
	// succ:  l0040111D
l00401099:
	edi = edi ^ ecx
	SZO = cond(edi)
	C = false
	bl = bl - ah
	SCZO = cond(bl)
	edi = edi - ecx
	SCZO = cond(edi)
	edi = edi - 0x00000001
	SZO = cond(edi)
	edi = edi + 0x00000001
	SZO = cond(edi)
	edi = ecx
	bh = dl
	ebx = ebx + 0x00000001
	SZO = cond(ebx)
	ebx = ebx ^ eax
	SZO = cond(ebx)
	C = false
	// succ:  l004010AE
l004010AE:
	bh = bh + dl
	SCZO = cond(bh)
	ebx = ebx + esi
	SCZO = cond(ebx)
	ebx = ebx - edx
	SCZO = cond(ebx)
	bh = bh - dh
	SCZO = cond(bh)
	bl = bl - cl
	SCZO = cond(bl)
	ebx = ebx - 0x00000001
	SZO = cond(ebx)
	ebx = ebx + esi
	SCZO = cond(ebx)
	bh = bh ^ ch
	SZO = cond(bh)
	C = false
	branch Test(OV,O) l00401006
	// succ:  l004010C3 l00401006
l004010C3:
l004010CE:
	edi = ebx
	ebx = ebx - 0x00000001
	SZO = cond(ebx)
	ebx = ebx + ecx
	SCZO = cond(ebx)
	ebx = ebx | edx
	SZO = cond(ebx)
	C = false
	ebx = ebx | eax
	SZO = cond(ebx)
	C = false
	edi = edi | eax
	SZO = cond(edi)
	C = false
	goto l00401099
	// succ:  l00401099
l00401101:
	esp = esp - 0x00000004
	Mem0[esp:word32] = ebp
	ebp = esp
	ebx = ebx - 0x00000001
	SZO = cond(ebx)
	ebx = ebx + 0x00000001
	SZO = cond(ebx)
	edi = edi - ecx
	SCZO = cond(edi)
	edi = edi ^ esi
	SZO = cond(edi)
	C = false
	ebx = ebx ^ eax
	SZO = cond(ebx)
	C = false
	edi = ecx
	edi = edi ^ eax
	SZO = cond(edi)
	C = false
	edi = ebx
	goto l00401072
	// succ:  l00401072
l0040111D:
	edi = eax
	esi = esi + 0x00000001
	SZO = cond(esi)
	edi = edi - 0x00000001
	SZO = cond(edi)
	esi = esi + ecx
	SCZO = cond(esi)
	edi = edi - ecx
	SCZO = cond(edi)
	esi = esi + 0x00000001
	SZO = cond(esi)
	edi = edi + ebx
	SCZO = cond(edi)
	esi = esi - 0x00000001
	SZO = cond(esi)
	eax = eax | edx
	SZO = cond(eax)
	C = false
	// succ:  l00401143
l00401143:
fn00401101_exit:


