// subject.h
// Generated by decompiling subject.exe
// using Reko decompiler version VERSION

/*
// Equivalence classes ////////////
Eq_1: (struct "Globals" (55C200 (arr Eq_48 192) a55C200))
	globals_t (in globals : (ptr (struct "Globals")))
Eq_2: DWORD
	T_2 (in eax : Eq_2)
	T_11 (in dwEraseType : DWORD)
	T_14 (in 0x00000000 : word32)
	T_16 (in EraseTape((void *) 0x00000333, 0x00000000, 0xFFFFFFFF) : DWORD)
	T_44 (in eax_37 : Eq_2)
Eq_8: (fn Eq_2 (Eq_10, Eq_2, Eq_12))
	T_8 (in EraseTape : ptr32)
	T_9 (in signature of EraseTape : void)
Eq_10: HANDLE
	T_10 (in hDevice : HANDLE)
	T_13 (in 0x00000333 : word32)
Eq_12: BOOL
	T_12 (in bImmediate : BOOL)
	T_15 (in 0xFFFFFFFF : word32)
Eq_17: DWORD
	T_17 (in 0xBF23DFF9 : word32)
Eq_18: DWORD
	T_18 (in EraseTape((void *) 0x00000333, 0x00000000, 0xFFFFFFFF) + 0xBF23DFF9 : word32)
Eq_23: (fn word32 (word32, byte))
	T_23 (in __ror : ptr32)
Eq_32: (union "Eq_32" (int32 u0) (ptr32 u1))
	T_32 (in edi_28 : Eq_32)
	T_34 (in edi_29 + 0x00000006 : word32)
	T_37 (in 0x0055C67E : word32)
Eq_48: (struct "Eq_48" 0006 (0 word32 dw0000))
	T_48
	T_49
	T_50
	T_51
// Type Variables ////////////
globals_t: (in globals : (ptr (struct "Globals")))
  Class: Eq_1
  DataType: (ptr Eq_1)
  OrigDataType: (ptr (struct "Globals"))
T_2: (in eax : Eq_2)
  Class: Eq_2
  DataType: Eq_2
  OrigDataType: DWORD
T_3: (in edi_29 : (ptr word32))
  Class: Eq_3
  DataType: (ptr word32)
  OrigDataType: (ptr (struct (0 T_7 t0000)))
T_4: (in 0x0055C200 : word32)
  Class: Eq_3
  DataType: (ptr word32)
  OrigDataType: word32
T_5: (in 0x00000000 : word32)
  Class: Eq_5
  DataType: word32
  OrigDataType: word32
T_6: (in edi_29 + 0x00000000 : word32)
  Class: Eq_6
  DataType: word32
  OrigDataType: word32
T_7: (in Mem0[edi_29 + 0x00000000:word32] : word32)
  Class: Eq_7
  DataType: word32
  OrigDataType: word32
T_8: (in EraseTape : ptr32)
  Class: Eq_8
  DataType: (ptr Eq_8)
  OrigDataType: (ptr (fn T_16 (T_13, T_14, T_15)))
T_9: (in signature of EraseTape : void)
  Class: Eq_8
  DataType: (ptr Eq_8)
  OrigDataType: 
T_10: (in hDevice : HANDLE)
  Class: Eq_10
  DataType: Eq_10
  OrigDataType: 
T_11: (in dwEraseType : DWORD)
  Class: Eq_2
  DataType: Eq_2
  OrigDataType: 
T_12: (in bImmediate : BOOL)
  Class: Eq_12
  DataType: Eq_12
  OrigDataType: 
T_13: (in 0x00000333 : word32)
  Class: Eq_10
  DataType: Eq_10
  OrigDataType: HANDLE
T_14: (in 0x00000000 : word32)
  Class: Eq_2
  DataType: Eq_2
  OrigDataType: DWORD
T_15: (in 0xFFFFFFFF : word32)
  Class: Eq_12
  DataType: Eq_12
  OrigDataType: BOOL
T_16: (in EraseTape((void *) 0x00000333, 0x00000000, 0xFFFFFFFF) : DWORD)
  Class: Eq_2
  DataType: Eq_2
  OrigDataType: DWORD
T_17: (in 0xBF23DFF9 : word32)
  Class: Eq_17
  DataType: Eq_17
  OrigDataType: (union (DWORD u1))
T_18: (in EraseTape((void *) 0x00000333, 0x00000000, 0xFFFFFFFF) + 0xBF23DFF9 : word32)
  Class: Eq_18
  DataType: Eq_18
  OrigDataType: DWORD
T_19: (in Mem0[edi_29 + 0x00000000:word32] + (EraseTape((void *) 0x00000333, 0x00000000, 0xFFFFFFFF) + 0xBF23DFF9) : word32)
  Class: Eq_7
  DataType: word32
  OrigDataType: word32
T_20: (in 0x00000000 : word32)
  Class: Eq_20
  DataType: word32
  OrigDataType: word32
T_21: (in edi_29 + 0x00000000 : word32)
  Class: Eq_21
  DataType: (ptr word32)
  OrigDataType: (ptr word32)
T_22: (in Mem23[edi_29 + 0x00000000:word32] : word32)
  Class: Eq_7
  DataType: word32
  OrigDataType: word32
T_23: (in __ror : ptr32)
  Class: Eq_23
  DataType: (ptr Eq_23)
  OrigDataType: (ptr (fn T_28 (T_26, T_27)))
T_24: (in 0x00000000 : word32)
  Class: Eq_24
  DataType: word32
  OrigDataType: word32
T_25: (in edi_29 + 0x00000000 : word32)
  Class: Eq_25
  DataType: (ptr word32)
  OrigDataType: (ptr word32)
T_26: (in Mem23[edi_29 + 0x00000000:word32] : word32)
  Class: Eq_7
  DataType: word32
  OrigDataType: word32
T_27: (in 0x10 : byte)
  Class: Eq_27
  DataType: byte
  OrigDataType: byte
T_28: (in __ror(*edi_29, 0x10) : word32)
  Class: Eq_7
  DataType: word32
  OrigDataType: word32
T_29: (in 0x00000000 : word32)
  Class: Eq_29
  DataType: word32
  OrigDataType: word32
T_30: (in edi_29 + 0x00000000 : word32)
  Class: Eq_30
  DataType: (ptr word32)
  OrigDataType: (ptr word32)
T_31: (in Mem25[edi_29 + 0x00000000:word32] : word32)
  Class: Eq_7
  DataType: word32
  OrigDataType: word32
T_32: (in edi_28 : Eq_32)
  Class: Eq_32
  DataType: Eq_32
  OrigDataType: (union (int32 u1) (ptr32 u0))
T_33: (in 0x00000006 : word32)
  Class: Eq_33
  DataType: int32
  OrigDataType: int32
T_34: (in edi_29 + 0x00000006 : word32)
  Class: Eq_32
  DataType: Eq_32
  OrigDataType: ptr32
T_35: (in 0x00000002 : word32)
  Class: Eq_35
  DataType: ui32
  OrigDataType: ui32
T_36: (in edi_28 - 0x00000002 : word32)
  Class: Eq_3
  DataType: (ptr word32)
  OrigDataType: ptr32
T_37: (in 0x0055C67E : word32)
  Class: Eq_32
  DataType: int32
  OrigDataType: int32
T_38: (in edi_28 <= 0x0055C67E : bool)
  Class: Eq_38
  DataType: bool
  OrigDataType: bool
T_39: (in esp_32 : word32)
  Class: Eq_39
  DataType: word32
  OrigDataType: word32
T_40: (in edi_33 : word32)
  Class: Eq_40
  DataType: word32
  OrigDataType: word32
T_41: (in SCZO_34 : byte)
  Class: Eq_41
  DataType: byte
  OrigDataType: byte
T_42: (in esi_35 : word32)
  Class: Eq_42
  DataType: word32
  OrigDataType: word32
T_43: (in ebx_36 : word32)
  Class: Eq_43
  DataType: word32
  OrigDataType: word32
T_44: (in eax_37 : Eq_2)
  Class: Eq_2
  DataType: Eq_2
  OrigDataType: word32
T_45: (in C_38 : byte)
  Class: Eq_45
  DataType: byte
  OrigDataType: byte
T_46: (in SZO_39 : byte)
  Class: Eq_46
  DataType: byte
  OrigDataType: byte
T_47: (in 0x0055C200 : word32)
  Class: Eq_47
  DataType: (ptr code)
  OrigDataType: (ptr code)
T_48:
  Class: Eq_48
  DataType: Eq_48
  OrigDataType: (struct 0006 (0 T_7 t0000))
T_49:
  Class: Eq_48
  DataType: Eq_48
  OrigDataType: (struct 0006 (0 T_22 t0000))
T_50:
  Class: Eq_48
  DataType: Eq_48
  OrigDataType: (struct 0006 (0 T_26 t0000))
T_51:
  Class: Eq_48
  DataType: Eq_48
  OrigDataType: (struct 0006 (0 T_31 t0000))
*/
typedef struct Globals {
	Eq_48 a55C200[192];	// 55C200
} Eq_1;

typedef DWORD Eq_2;

typedef DWORD (Eq_8)(HANDLE, DWORD, BOOL);

typedef HANDLE Eq_10;

typedef BOOL Eq_12;

typedef DWORD Eq_17;

typedef DWORD Eq_18;

typedef word32 (Eq_23)(word32, byte);

typedef union Eq_32 {
	int32 u0;
	ptr32 u1;
} Eq_32;

typedef struct Eq_48 {	// size: 6 6
	word32 dw0000;	// 0
} Eq_48;

