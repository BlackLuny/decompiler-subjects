Using options:
13141AAA: warning: Unable to resolve imported reference ADVAPI32.dll!GetSecurityInfo.
13141AF4: warning: Unable to resolve imported reference ADVAPI32.dll!SetEntriesInAclA.
13141B0B: warning: Unable to resolve imported reference ADVAPI32.dll!SetSecurityInfo.
13142174: warning: Can't determine size of jump vector; probing only one entry.
1314214C: warning: Can't determine size of jump vector; probing only one entry.
1314225B: warning: Can't determine size of jump vector; probing only one entry.
13142131: warning: Procedure fn131420F0 previously had a return address of 4 bytes on the stack, but now seems to have a return address of 0 bytes on the stack.
13142178: warning: The call or jump table has invalid addresses; stopping.
13142165: warning: No valid entries could be found in jump vector.
1314216C: warning: No valid entries could be found in jump vector.
13142304: warning: The call or jump table has invalid addresses; stopping.
131422F9: warning: No valid entries could be found in jump vector.
13142300: warning: Can't determine size of jump vector; probing only one entry.
131422D3: warning: Can't determine size of jump vector; probing only one entry.
131420D4: warning: Unable to resolve imported reference KERNEL32.dll!CreateToolhelp32Snapshot.
131420CE: warning: Unable to resolve imported reference KERNEL32.dll!Process32First.
131420C8: warning: Unable to resolve imported reference KERNEL32.dll!Process32Next.
fn13142676: error: An error occurred during data flow analysis.
    The given key was not present in the dictionary.
       at System.Collections.Generic.Dictionary`2.get_Item(TKey key)
   at Decompiler.Analysis.Aliases.Def(Identifier idar)
   at Decompiler.Analysis.Aliases.VisitAssignment(Assignment ass)
   at Decompiler.Core.Code.Assignment.Accept(InstructionVisitor v)
   at Decompiler.Analysis.Aliases.Transform()
   at Decompiler.Analysis.DataFlowAnalysis.BuildExpressionTrees()
: error: Error when reconstructing types.
    Invalid pointer size.
Parameter name: byteSize
       at Decompiler.Core.Types.Pointer..ctor(DataType pointee, Int32 byteSize)
   at Decompiler.Typing.DataTypeBuilder.MemoryAccessCommon(Expression tBase, Expression tStruct, Int32 offset, DataType tField, Int32 structPtrSize)
   at Decompiler.Typing.DataTypeBuilder.MemAccessTrait(Expression tBase, Expression tStruct, Int32 structPtrSize, Expression tField, Int32 offset)
   at Decompiler.Typing.TraitCollector.VisitDereference(Dereference deref)
   at Decompiler.Core.Expressions.Dereference.Accept[T](ExpressionVisitor`1 v)
   at Decompiler.Typing.TraitCollector.VisitStore(Store store)
   at Decompiler.Core.Code.Store.Accept[T](InstructionVisitor`1 visitor)
   at Decompiler.Typing.TraitCollector.CollectProgramTraits(Program prog)
   at Decompiler.Typing.TypeAnalyzer.RewriteProgram(Program prog)
   at Decompiler.DecompilerDriver.ReconstructTypes()
rewriting: Register word32 fn13141340(Register word32 edx, Register word32 ebx, Register word32 ebp, Register selector es, Register selector ds, Register selector fs, Register selector gs, Stack word32 dwArg04)
rewriting: void fn131413D7(Register word32 ecx, Stack word32 dwArg04, Stack word32 dwArg08)
rewriting: Register word32 fn13141442(Stack word32 dwArg04)
rewriting: Register word32 fn13141454(Stack word32 dwArg04, Stack word32 dwArg08)
rewriting: Register word32 fn13141492(Stack word32 dwArg04, Stack word32 dwArg08, Stack word32 dwArg0C, Stack word32 dwArg10, Stack word32 dwArg14, Register out ptr32 edxOut)
rewriting: Register word32 fn131414E2(Stack word32 dwArg08, Stack word32 dwArg0C, Stack word32 dwArg10, Register out ptr32 edxOut)
rewriting: Register word32 fn1314153E(Stack word32 dwArg04, Stack word32 dwArg08, Register out ptr32 edxOut)
rewriting: FlagGroup bool fn13141558(Register word32 ebp, Stack word32 dwArg04, Stack word32 dwArg10, Stack word32 dwArg18, Register out ptr32 eaxOut, Register out ptr32 edxOut)
rewriting: FlagGroup bool fn131415DD(Register word32 ebp, Register selector es, Register selector ds, Register selector fs, Register selector gs, Stack word32 dwArg04, Register out ptr32 eaxOut, Register out ptr32 edxOut)
rewriting: Register word32 fn1314177C(Stack word32 dwArg04, Stack word32 dwArg08)
rewriting: Register word32 fn131417F3(Stack word32 dwArg04, Stack word32 dwArg08, Stack word32 dwArg0C, Register out ptr32 ediOut)
rewriting: Register word32 fn131418AE()
rewriting: Register word32 fn1314195D()
rewriting: Register word32 fn131419C3(Stack word32 dwArg04, Stack word32 dwArg08, Stack word32 dwArg0C, Stack word32 dwArg10, Register out ptr32 edxOut, Register out ptr32 ediOut)
rewriting: void fn13141A0C(Stack word32 dwArg00)
rewriting: Register word32 fn13141A19(Register word32 edx, Register word32 ebx, Register word32 ebp, Register selector es, Register selector ds, Register selector fs, Register selector gs, Register out ptr32 ediOut)
rewriting: Register word32 fn13141B39()
rewriting: Register word32 fn13141BDF(Stack word32 dwArg04, Stack word32 dwArg08, Stack word32 dwArg0C, Register out ptr32 edxOut)
rewriting: Register word32 fn13141C57(Register word32 ecx, Stack word32 dwArg04, Stack word32 dwArg08, Stack word32 dwArg0C, Register out ptr32 edxOut)
rewriting: Register word32 fn13141CFF(Stack word32 dwArg00)
rewriting: void fn13141DC8()
rewriting: Register word32 fn13141E2C(Register word32 edx, Register word32 ebx, Register word32 ebp, Register word32 esi, Register word32 edi, Register selector es, Register selector ds, Register selector fs, Register selector gs, Register out ptr32 ebxOut)
rewriting: void fn13142093(Register word32 edx, Register word32 ebx, Register word32 ebp, Register word32 esi, Register word32 edi, Register selector es, Register selector ds, Register selector fs, Register selector gs)
rewriting: Register word32 fn131420E0(Register word32 eax, Register word32 ecx, Register word32 edx, Register word32 ebx, Register word32 ebp, Register word32 esi, Register word32 edi, Register selector es, Register selector ds, Register selector fs, Register selector gs, Stack word32 dwArg00)
rewriting: FlagGroup byte fn131420F0(Stack word32 dwArg04, Stack word32 dwArg08, Stack word32 dwArg0C, Register out ptr32 ebxOut)
fn131420F0: error: An error occurred while rewriting procedure to high-level language.
    The given key was not present in the dictionary.
       at System.Collections.Generic.Dictionary`2.get_Item(TKey key)
   at Decompiler.Core.Lib.DominatorGraph`1.BuildDominanceFrontiers(DirectedGraph`1 graph, Dictionary`2 idoms)
   at Decompiler.Core.Lib.DominatorGraph`1..ctor(DirectedGraph`1 graph, T entryNode)
   at Decompiler.Structure.ProcedureStructureBuilder.AnalyzeGraph()
   at Decompiler.Structure.StructureAnalysis.BuildProcedureStructure()
   at Decompiler.Structure.StructureAnalysis.Structure()
   at Decompiler.DecompilerDriver.StructureProgram()
rewriting: void fn131425EF(Stack word32 dwArg04, Stack word32 dwArg08, Stack word32 dwArg0C)
rewriting: void fn13142676(Stack word32 dwArg04, Stack word32 dwArg08, Stack word32 dwArg0C)
rewriting: void fn1314276D()
malware_via_email/malware_0009/ia32_pe/subject.exe: error: An internal error occurred while decompiling.
    Unable to cast object of type 'Decompiler.Core.Types.StructureType' to type 'Decompiler.Core.Types.EquivalenceClass'.
       at Decompiler.Core.Output.GlobalDataWriter.WriteGlobals(Formatter formatter)
   at Decompiler.DecompilerDriver.WriteGlobals(Program program, TextWriter w)
   at Decompiler.DecompilerDriver.<>c__DisplayClass1b.<WriteDecompilerProducts>b__17(TextWriter w)
   at Decompiler.CmdLine.CmdLineHost.WriteGlobals(Program program, Action`1 writer)
   at Decompiler.DecompilerDriver.WriteDecompilerProducts()
   at Decompiler.DecompilerDriver.StructureProgram()
   at Decompiler.DecompilerDriver.Decompile(String filename)
