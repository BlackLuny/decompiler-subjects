Unknown library function lstrcpyA
Unknown library function GetModuleHandleA
Unknown library function StgCreateStorageEx
assgn   95 *32* %pc := m[0x405424]
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc1 ###
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 20 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 8 to local table
in proc proc1 adding addrExp r28{0} - 40 to local table
in proc proc1 adding addrExp r28{0} - 52 to local table
in proc proc1 adding addrExp r28{0} - 56 to local table
in proc proc1 adding addrExp r28{0} - 64 to local table
in proc proc1 adding addrExp r28{0} - 4 to local table
in proc proc1 adding addrExp r28{0} - 72 to local table
in proc proc1 adding addrExp r28{0} - 76 to local table
in proc proc1 adding addrExp r28{0} - 80 to local table
in proc proc1 adding addrExp r28{0} - 24 to local table
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 20 to local table
in proc proc1 adding addrExp r28{0} - 20 to local table
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 48 to local table
in proc proc1 adding addrExp r28{0} - 28 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 84 to local table
in proc proc1 adding addrExp r28{0} - 88 to local table
in proc proc1 adding addrExp r28{0} - 92 to local table
in proc proc1 adding addrExp r28{0} - 96 to local table
in proc proc1 adding addrExp r28{0} - 100 to local table
in proc proc1 adding addrExp r28{0} - 104 to local table
in proc proc1 adding addrExp r28{0} - 108 to local table
in proc proc1 adding addrExp r28{0} - 112 to local table
in proc proc1 adding addrExp r28{0} - 116 to local table
in proc proc1 adding addrExp r28{0} - 36 to local table
in proc proc1 adding addrExp r28{0} - 32 to local table
in proc proc1 adding addrExp r28{0} - 40 to local table
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 52 to local table
in proc proc1 adding addrExp r28{0} - 56 to local table
in proc proc1 adding addrExp r28{0} - 64 to local table
in proc proc1 adding addrExp r28{0} - 64 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 64 to local table
in proc proc1 adding addrExp r28{0} - 56 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 56 to local table
in proc proc1 adding addrExp r28{0} - 64 to local table
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 40 to local table
in proc proc1 adding addrExp r28{0} - 52 to local table
in proc proc1 adding addrExp r28{0} - 56 to local table
in proc proc1 adding addrExp r28{0} - 64 to local table
in proc proc1 adding addrExp r28{0} - 8 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 8 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 40 to local table
in proc proc1 adding addrExp r28{0} - 52 to local table
in proc proc1 adding addrExp r28{0} - 56 to local table
in proc proc1 adding addrExp r28{0} - 64 to local table
finding final parameters for proc1
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} - 16]
found new parameter m[r28{0} - 16]
potential param m[r28{0} - 12]
found new parameter m[r28{0} - 12]
potential param m[r28{0} - 8]
found new parameter m[r28{0} - 8]
assgn   41 *32* %pc := m[0x4053a4]
assgn  104 *32* m[r28 - 4] := m[0x40591c]
assgn  108 *32* %pc := m[0x4056b4]
assgn  183 *32* m[r28 - 4] := m[0x40591c]
assgn  187 *32* %pc := m[0x4056b8]
assgn  213 *32* m[r28 - 4] := m[0x405920]
assgn  217 *32* %pc := m[0x4056bc]
assgn  266 *32* m[r28 - 4] := m[0x405920]
assgn  270 *32* %pc := m[0x4056c0]
assgn  305 *32* m[r28 - 4] := m[0x405920]
assgn  309 *32* %pc := m[0x4056c4]
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc2 ###
in proc proc2 adding addrExp r28{0} - 16 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 8 to local table
in proc proc2 adding addrExp r28{0} - 4 to local table
in proc proc2 adding addrExp r28{0} - 40 to local table
in proc proc2 adding addrExp r28{0} - 44 to local table
in proc proc2 adding addrExp r28{0} - 48 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 52 to local table
in proc proc2 adding addrExp r28{0} - 56 to local table
in proc proc2 adding addrExp r28{0} - 16 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 16 to local table
in proc proc2 adding addrExp r28{0} - 56 to local table
in proc proc2 adding addrExp r28{0} - 60 to local table
in proc proc2 adding addrExp r28{0} - 64 to local table
in proc proc2 adding addrExp r28{0} - 68 to local table
in proc proc2 adding addrExp r28{0} - 72 to local table
in proc proc2 adding addrExp r28{0} - 76 to local table
finding final parameters for proc2
potential param r28
found new parameter r28
potential param m[r28{0} - 16]
found new parameter m[r28{0} - 16]
potential param m[r28{0} - 12]
found new parameter m[r28{0} - 12]
potential param m[r28{0} - 8]
found new parameter m[r28{0} - 8]
potential param global10
potential param global11
potential param global12
potential param global13
potential param global14
assgn   13 *32* m[r28 - 4] := m[0x405028]
assgn   17 *32* %pc := m[0x405394]
assgn  289 *32* %pc := m[0x405398]
assgn  328 *32* m[r28 - 4] := m[0x40500c]
assgn  334 *32* %pc := m[0x40539c]
assgn  341 *32* m[r28 - 4] := m[0x405000]
assgn  347 *32* %pc := m[0x4053a0]
assgn  384 *32* m[r28 - 4] := m[0x405010]
assgn  390 *32* %pc := m[0x4053a0]
assgn  445 *32* %pc := m[0x4053a0]
assgn  547 *32* %pc := m[0x4056b0]
assgn  560 *32* m[r28 - 4] := m[0x40502c]
assgn  564 *32* %pc := m[0x4056cc]
assgn  811 *32* m[r28 - 4] := m[0x405018]
assgn  815 *32* %pc := m[0x4056cc]
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure main ###
in proc main adding addrExp r28{0} - 16 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 100 to local table
in proc main adding addrExp r28{0} - 96 to local table
in proc main adding addrExp r28{0} - 92 to local table
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 20 to local table
in proc main adding addrExp r28{0} - 24 to local table
in proc main adding addrExp r28{0} - 32 to local table
in proc main adding addrExp r28{0} - 4 to local table
in proc main adding addrExp r28{0} - 64 to local table
in proc main adding addrExp r28{0} - 68 to local table
in proc main adding addrExp r28{0} - 72 to local table
in proc main adding addrExp r28{0} - 76 to local table
in proc main adding addrExp r28{0} - 80 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 76 to local table
in proc main adding addrExp r28{0} - 80 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffb0 existing type unsigned int but added type void *
in proc main adding addrExp r28{0} - 84 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 76 to local table
in proc main adding addrExp r28{0} - 80 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffb0 existing type unsigned int but added type void *
in proc main adding addrExp r28{0} - 84 to local table
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 76 to local table
in proc main adding addrExp r28{0} - 80 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffb0 existing type unsigned int but added type void *
in proc main adding addrExp r28{0} - 84 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 76 to local table
in proc main adding addrExp r28{0} - 80 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffb0 existing type unsigned int but added type void *
in proc main adding addrExp r28{0} - 84 to local table
in proc main adding addrExp r28{0} - 16 to local table
in proc main adding addrExp r28{0} - 16 to local table
in proc main adding addrExp r28{0} - 76 to local table
in proc main adding addrExp r28{0} - 80 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffb0 existing type unsigned int but added type void *
in proc main adding addrExp r28{0} - 84 to local table
in proc main adding addrExp r28{0} - 16 to local table
in proc main adding addrExp r28{0} - 16 to local table
in proc main adding addrExp r28{0} - 76 to local table
in proc main adding addrExp r28{0} - 80 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffb0 existing type unsigned int but added type void *
in proc main adding addrExp r28{0} - 84 to local table
in proc main adding addrExp r28{0} - 16 to local table
in proc main adding addrExp r28{0} - 16 to local table
in proc main adding addrExp r28{0} - 76 to local table
in proc main adding addrExp r28{0} - 80 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffb0 existing type unsigned int but added type void *
in proc main adding addrExp r28{0} - 84 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 20 to local table
in proc main adding addrExp r28{0} - 24 to local table
in proc main adding addrExp r28{0} - 24 to local table
in proc main adding addrExp r28{0} - 20 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 76 to local table
in proc main adding addrExp r28{0} - 80 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffb0 existing type unsigned int but added type void *
in proc main adding addrExp r28{0} - 84 to local table
in proc main adding addrExp r28{0} - 76 to local table
in proc main adding addrExp r28{0} - 80 to local table
in proc main adding addrExp r28{0} - 84 to local table
in proc main adding addrExp r28{0} - 88 to local table
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 76 to local table
in proc main adding addrExp r28{0} - 80 to local table
in proc main adding addrExp r28{0} - 84 to local table
in proc main adding addrExp r28{0} - 16 to local table
in proc main adding addrExp r28{0} - 84 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffac existing type unsigned int but added type LPSTR
in proc main adding addrExp r28{0} - 88 to local table
in proc main adding addrExp r28{0} - 92 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 84 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffac existing type unsigned int but added type LPSTR
in proc main adding addrExp r28{0} - 88 to local table
in proc main adding addrExp r28{0} - 92 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 32 to local table
in proc main adding addrExp r28{0} - 32 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 84 to local table
in proc main adding addrExp r28{0} - 88 to local table
in proc main adding addrExp r28{0} - 92 to local table
in proc main adding addrExp r28{0} - 16 to local table
in proc main adding addrExp r28{0} - 16 to local table
in proc main adding addrExp r28{0} - 16 to local table
in proc main adding addrExp r28{0} - 16 to local table
in proc main adding addrExp r28{0} - 16 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 84 to local table
in proc main adding addrExp r28{0} - 88 to local table
in proc main adding addrExp r28{0} - 92 to local table
in proc main adding addrExp r28{0} - 96 to local table
in proc main adding addrExp r28{0} - 100 to local table
in proc main adding addrExp r28{0} - 104 to local table
in proc main adding addrExp r28{0} - 108 to local table
in proc main adding addrExp r28{0} - 112 to local table
in proc main adding addrExp r28{0} - 116 to local table
in proc main adding addrExp r28{0} - 120 to local table
in proc main adding addrExp r28{0} - 124 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure main ###
in proc main adding addrExp r28{0} - 16 to local table
in proc main adding addrExp r28{0} - 100 to local table
in proc main adding addrExp r28{0} - 96 to local table
in proc main adding addrExp r28{0} - 92 to local table
in proc main adding addrExp r28{0} - 8 to local table
could not set type for unknown parameter expression m[r28{0} + 4]
could not set type for unknown parameter expression m[r28{0} + 8]
could not set type for unknown parameter expression m[r28{0} + 12]
in proc main adding addrExp r28{0} - 76 to local table
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 16 to local table
in proc main adding addrExp r28{0} - 16 to local table
in proc main adding addrExp r28{0} - 16 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 24 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 16 to local table
in proc main adding addrExp r28{0} - 84 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffac existing type unsigned int but added type LPSTR
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 84 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffac existing type unsigned int but added type LPSTR
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 32 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 16 to local table
in proc main adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 8 to local table
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 20 to local table
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 48 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 40 to local table
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 52 to local table
in proc proc1 adding addrExp r28{0} - 56 to local table
in proc proc1 adding addrExp r28{0} - 64 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 64 to local table
in proc proc1 adding addrExp r28{0} - 56 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 56 to local table
in proc proc1 adding addrExp r28{0} - 64 to local table
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 16 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc2 ###
in proc proc2 adding addrExp r28{0} - 16 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 8 to local table
finding final parameters for proc1
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} - 16]
found new parameter m[r28{0} - 16]
potential param m[r28{0} - 12]
found new parameter m[r28{0} - 12]
potential param m[r28{0} - 8]
found new parameter m[r28{0} - 8]
finding final parameters for proc2
potential param r28
found new parameter r28
potential param m[r28{0} - 16]
found new parameter m[r28{0} - 16]
potential param m[r28{0} - 12]
found new parameter m[r28{0} - 12]
potential param m[r28{0} - 8]
found new parameter m[r28{0} - 8]
potential param global10
potential param global11
potential param global12
potential param global13
potential param global14
local ecx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local edx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local eax has type void * that doesn't agree with type of define __size32 of a library, why?
local ecx has type void that doesn't agree with type of define /*signed?*/int of a library, why?
local edx has type void that doesn't agree with type of define /*signed?*/int of a library, why?
local ecx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local edx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local ecx has type void that doesn't agree with type of define unsigned int of a library, why?
local edx has type void that doesn't agree with type of define /*signed?*/int of a library, why?
local ecx has type unsigned int that doesn't agree with type of define /*signed?*/int of a library, why?
local edx has type /*signed?*/int that doesn't agree with type of define unsigned int of a library, why?
local ecx has type /*signed?*/int that doesn't agree with type of define unsigned int of a library, why?
local edx has type unsigned int that doesn't agree with type of define int of a library, why?
local eax has type int that doesn't agree with type of define unsigned int of a library, why?
local edx has type int that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local ecx has type __size32 that doesn't agree with type of define void of a library, why?
local edx has type __size32 that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
dest is not lib
call:   18 {*v** eax, *v* ecx, *v* edx, *v* esp} := CALL LoadLibraryA(
                *LPCSTR* local5 := local53
              )
              Reaching definitions: r27=r27{0},   r28=r28{0} - 80,   r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 12]=m[r28{0} - 12]{0},
                m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 20]=m[r28{0} - 20]{0},
                m[r28{0} - 24]=m[r28{0} - 24]{0},   m[r28{0} - 32]=m[r28{0} - 32]{0},   m[r28{0} - 64]=r27{0},
                m[r28{0} - 68]=r30{0},   m[r28{0} - 72]=r31{0},   m[r28{0} - 76]=m[r28{0} - 76]{13},
                m[r28{0} - 80]=%pc,   m[r28{0} - 92]=m[r28{0} - 92]{0},   m[r28{0} - 96]=m[r28{0} - 96]{0},
                m[r28{0} - 100]=m[r28{0} - 100]{0},   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 56, r28{0} - 60 ),   %ZF=(r28{0} - 60) = 0,   %CF=(r28{0} - 4) <u 56
              Live variables: eax in proc main
result:    0 *v** eax := -
dest is not lib
call:   43 {*32* eax, *32* esi, *32* ecx, *32* edx, *v** ebx_2, *v* esp, *32* edi} := CALL proc1(
                *u32* local1 := local1
                *u32* local2 := local2
                *u32* local3 := local3
                *v** local6 := eax
                *u32* local7 :=  *u32*0xbfc26d0b
              )
              Reaching definitions: r24=(m[r28{0} - 16]{0} + m[r28{0} - 16]{0}) << r26{29},   r25=r26{29},
                r26=r26{29},   r27=r24{18},   r28=r28{0} - 84,   r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{0},
                m[r28{0} - 12]=(m[r28{0} - 16]{0} + m[r28{0} - 16]{0}) << r26{29},   m[r28{0} - 16]=m[r28{0} - 16]{0},
                m[r28{0} - 20]=m[r28{0} - 20]{0},   m[r28{0} - 24]=m[r28{0} - 24]{0},
                m[r28{0} - 32]=m[r28{0} - 32]{0},   m[r28{0} - 64]=r27{0},   m[r28{0} - 68]=r30{0},
                m[r28{0} - 72]=r31{0},   m[r28{0} - 76]=0xbfc26d0b,   m[r28{0} - 80]=r24{18},   m[r28{0} - 84]=%pc,
                m[r28{0} - 92]=m[r28{0} - 92]{0},   m[r28{0} - 96]=m[r28{0} - 96]{0},
                m[r28{0} - 100]=m[r28{0} - 100]{0},   tmp1=m[r28{0} - 16]{0} + m[r28{0} - 16]{0},
                %flags=SALFLAGS32( (m[r28{0} - 16]{0} + m[r28{0} - 16]{0}) << r26{29}, m[r28{0} - 16]{0} + m[r28{0} - 16]{0}, r26{29} ),
                %ZF=SALFLAGS32( (m[r28{0} - 16]{0} + m[r28{0} - 16]{0}) << r26{29}, m[r28{0} - 16]{0} + m[r28{0} - 16]{0}, r26{29} ),
                %CF=SALFLAGS32( (m[r28{0} - 16]{0} + m[r28{0} - 16]{0}) << r26{29}, m[r28{0} - 16]{0} + m[r28{0} - 16]{0}, r26{29} )
              Live variables: eax,  ebx_2 in proc main
result:    0 *32* eax := -
result:    0 *v** ebx_2 := -
dest is not lib
call:   54 {*32* eax, *32* esi, *32* ecx, *32* edx, *v** ebx_3, *v* esp, *32* edi} := CALL proc1(
                *u32* local1 := local1
                *u32* local2 := local2
                *u32* local3 := local3
                *v** local6 := ebx_2
                *u32* local7 := 0x634c5f6a
              )
              Reaching definitions: r24=r24{43},   r25=r25{43},   r26=r26{43},   r27=r27{43},   r28=r28{0} - 84,
                r29=r28{0} - 4,   r30=r30{43},   r31=r31{43},   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 12]=0,   m[r28{0} - 16]=m[r28{0} - 16]{0},
                m[r28{0} - 20]=m[r28{0} - 20]{0},   m[r28{0} - 24]=m[r28{0} - 24]{0},
                m[r28{0} - 32]=m[r28{0} - 32]{0},   m[r28{0} - 64]=r27{0},   m[r28{0} - 68]=r30{0},
                m[r28{0} - 72]=r31{0},   m[r28{0} - 76]=0x634c5f6a,   m[r28{0} - 80]=r27{43},   m[r28{0} - 84]=%pc,
                m[r28{0} - 92]=m[r28{0} - 92]{0},   m[r28{0} - 96]=m[r28{0} - 96]{0},
                m[r28{0} - 100]=m[r28{0} - 100]{0},   tmp1=m[r28{0} - 16]{0} + m[r28{0} - 16]{0},
                %flags=LOGICALFLAGS32( m[r28{0} - 12] ),   %ZF=LOGICALFLAGS32( m[r28{0} - 12] ),
                %CF=LOGICALFLAGS32( m[r28{0} - 12] )
              Live variables: eax,  ebx_3 in proc main
result:    0 *32* eax := -
result:    0 *v** ebx_3 := -
dest is not lib
call:   83 {*32* eax, *32* esi, *32* ecx, *32* edx, *v** ebx_4, *v* esp, *32* edi} := CALL proc1(
                *u32* local1 := local1
                *u32* local2 := local2
                *u32* local3 := local3
                *v** local6 := ebx_3
                *u32* local7 := 0x7f23b939
              )
              Reaching definitions: r24=r24{73},   r25=(m[r28{0} - 16]{0} + m[r28{0} - 16]{0}) + 165,
                r26=m[r28{0} - 8]{0} + m[r28{0} - 8]{0},   r27=r27{54},   r28=r28{0} - 84,   r29=r28{0} - 4,
                r30=r30{70},   r31=(m[r28{0} - 16]{0} + m[r28{0} - 16]{0}) >> r25{62},   m[r28{0} + 4]=m[r28{0} + 4]{0}
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=r24{73},   m[r28{0} - 12]=0,   m[r28{0} - 16]=m[r28{0} - 16]{0},
                m[r28{0} - 20]=m[r28{0} - 20]{0},   m[r28{0} - 24]=m[r28{0} - 24]{0},
                m[r28{0} - 32]=m[r28{0} - 32]{0},   m[r28{0} - 64]=r27{0},   m[r28{0} - 68]=r30{0},
                m[r28{0} - 72]=r31{0},   m[r28{0} - 76]=0x7f23b939,   m[r28{0} - 80]=r27{54},   m[r28{0} - 84]=%pc,
                m[r28{0} - 92]=m[r28{0} - 92]{0},   m[r28{0} - 96]=m[r28{0} - 96]{0},
                m[r28{0} - 100]=m[r28{0} - 100]{0},   tmp1=(m[r28{0} - 16]{0} + m[r28{0} - 16]{0}) >> r25{62},
                %flags=LOGICALFLAGS32( r24{73} ),   %ZF=LOGICALFLAGS32( r24{73} ),   %CF=LOGICALFLAGS32( r24{73} )
              Live variables: eax,  ebx_4 in proc main
result:    0 *32* eax := -
result:    0 *v** ebx_4 := -
dest is not lib
call:  125 {*32* eax, *32* esi, *32* ecx, *u32* edx, *v** ebx_5, *v* esp, *32* edi} := CALL proc1(
                *u32* local1 := local1
                *u32* local2 := local2
                *u32* local3 := local3
                *v** local6 := ebx_4
                *u32* local7 := 0x53eee623
              )
              Reaching definitions: r24=r24{110} | 93,   r25=(r24{73} * 3) + 0xad2,   r26=(0 + 0) + 93,   r27=r27{83},
                r28=r28{0} - 84,   r29=r28{0} - 4,   r30=r24{73},   r31=(r24{73} + r24{73}) + 0x827,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{73},   m[r28{0} - 12]=r24{110} | 93,
                m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 20]=m[r28{0} - 20]{0},
                m[r28{0} - 24]=m[r28{0} - 24]{0},   m[r28{0} - 32]=m[r28{0} - 32]{0},   m[r28{0} - 64]=r27{0},
                m[r28{0} - 68]=r30{0},   m[r28{0} - 72]=r31{0},   m[r28{0} - 76]=0x53eee623,   m[r28{0} - 80]=r27{83},
                m[r28{0} - 84]=%pc,   m[r28{0} - 92]=m[r28{0} - 92]{0},   m[r28{0} - 96]=m[r28{0} - 96]{0},
                m[r28{0} - 100]=m[r28{0} - 100]{0},   tmp1=0 + 0,   %flags=LOGICALFLAGS32( r24{110} | 93 ),
                %ZF=LOGICALFLAGS32( r24{110} | 93 ),   %CF=LOGICALFLAGS32( r24{110} | 93 )
              Live variables: eax,  ebx_5 in proc main
result:    0 *32* eax := -
result:    0 *v** ebx_5 := -
dest is not lib
call:  157 {*32* eax, *32* esi, *32* ecx, *j32* edx, *v** ebx_6, *v* esp, *32* edi} := CALL proc1(
                *u32* local1 := local1
                *u32* local2 := local2
                *u32* local3 := local3
                *v** local6 := ebx_5
                *u32* local7 := 0x53eece23
              )
              Reaching definitions: r24=r24{924} + 2,   r25=((r24{110} | 93) + (r24{110} | 93)) + 148,   r26=r26{141},
                r27=r27{125},   r28=r28{0} - 84,   r29=r28{0} - 4,   r30=r30{125},   r31=r31{125},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{73},   m[r28{0} - 12]=r24{110} | 93,
                m[r28{0} - 16]=r26{141},   m[r28{0} - 20]=m[r28{0} - 20]{0},   m[r28{0} - 24]=m[r28{0} - 24]{0},
                m[r28{0} - 32]=m[r28{0} - 32]{0},   m[r28{0} - 64]=r27{0},   m[r28{0} - 68]=r30{0},
                m[r28{0} - 72]=r31{0},   m[r28{0} - 76]=0x53eece23,   m[r28{0} - 80]=r27{125},   m[r28{0} - 84]=%pc,
                m[r28{0} - 92]=m[r28{0} - 92]{0},   m[r28{0} - 96]=m[r28{0} - 96]{0},
                m[r28{0} - 100]=m[r28{0} - 100]{0},   tmp1=r24{924},   %flags=SUBFLAGS32( r24{924} + 2, 2, r24{924} ),
                %ZF=r24{924} = 0,   %CF=(r24{924} + 2) <u 2
              Live variables: eax,  ebx_6 in proc main
result:    0 *32* eax := -
result:    0 *v** ebx_6 := -
dest is not lib
call:  180 {*32* eax, *32* esi, *32* ecx, *j32* edx, *v** ebx_7, *v* esp, *32* edi} := CALL proc1(
                *u32* local1 := local1
                *u32* local2 := local2
                *u32* local3 := local3
                *v** local6 := ebx_6
                *u32* local7 := 0x57b58f4
              )
              Reaching definitions: r24=r24{931} - 1,   r25=(r24{73} + r24{73}) + 33,   r26=r26{164},   r27=r27{157},
                r28=r28{0} - 84,   r29=r28{0} - 4,   r30=r30{157},   r31=r31{157},   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=r24{73},   m[r28{0} - 12]=r24{110} | 93,   m[r28{0} - 16]=r26{164},
                m[r28{0} - 20]=m[r28{0} - 20]{0},   m[r28{0} - 24]=m[r28{0} - 24]{0},
                m[r28{0} - 32]=m[r28{0} - 32]{0},   m[r28{0} - 64]=r27{0},   m[r28{0} - 68]=r30{0},
                m[r28{0} - 72]=r31{0},   m[r28{0} - 76]=0x57b58f4,   m[r28{0} - 80]=r27{157},   m[r28{0} - 84]=%pc,
                m[r28{0} - 92]=m[r28{0} - 92]{0},   m[r28{0} - 96]=m[r28{0} - 96]{0},
                m[r28{0} - 100]=m[r28{0} - 100]{0},   tmp1=r24{931} - 1,   %flags=LOGICALFLAGS32( r24{931} - 1 ),
                %ZF=LOGICALFLAGS32( r24{931} - 1 ),   %CF=LOGICALFLAGS32( r24{931} - 1 )
              Live variables: eax,  ebx_7 in proc main
result:    0 *32* eax := -
result:    0 *v** ebx_7 := -
dest is not lib
call:  199 {*32* eax, *j32* esi, *j32* ecx, *u32* edx, *v** ebx_8, *v* esp, *32* edi} := CALL proc1(
                *u32* local1 := local1
                *u32* local2 := local2
                *u32* local3 := local3
                *v** local6 := ebx_7
                *u32* local7 :=  *u32*0x9a06e721
              )
              Reaching definitions: r24=r24{938} - 2,   r25=r25{180},   r26=(r24{110} | 93) + (r24{110} | 93),
                r27=r27{180},   r28=r28{0} - 84,   r29=r28{0} - 4,   r30=r30{180},   r31=r31{180},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{73},   m[r28{0} - 12]=r24{110} | 93,
                m[r28{0} - 16]=m[r28{0} - 16]{187},   m[r28{0} - 20]=m[r28{0} - 20]{0},
                m[r28{0} - 24]=m[r28{0} - 24]{0},   m[r28{0} - 32]=m[r28{0} - 32]{0},   m[r28{0} - 64]=r27{0},
                m[r28{0} - 68]=r30{0},   m[r28{0} - 72]=r31{0},   m[r28{0} - 76]=0x9a06e721,   m[r28{0} - 80]=r27{180},
                m[r28{0} - 84]=%pc,   m[r28{0} - 92]=m[r28{0} - 92]{0},   m[r28{0} - 96]=m[r28{0} - 96]{0},
                m[r28{0} - 100]=m[r28{0} - 100]{0},   tmp1=r24{938},   %flags=SUBFLAGS32( r24{938}, 2, r24{938} - 2 ),
                %ZF=(r24{938} - 2) = 0,   %CF=r24{938} <u 2
              Live variables: eax,  ebx_8 in proc main
result:    0 *32* eax := -
result:    0 *v** ebx_8 := -
dest is not lib
call:  279 {*32* eax, *i32* esi, *32* ecx, *32* edx, *32* ebx_9, *v* esp, *u32* edi} := CALL proc1(
                *u32* local1 := local1
                *u32* local2 := local2
                *u32* local3 := local3
                *v** local6 := ebx_8
                *u32* local7 :=  *u32*0xb65f67e9
              )
              Reaching definitions: r24=r24{944} + 2,   r25=r26{256},   r26=r26{263},   r27=r27{199},   r28=r28{0} - 84
                r29=r28{0} - 4,   r30=(m[r28{0} - 24]{208} + 0x689) & r25{232},   r31=0,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{73},   m[r28{0} - 12]=r26{263},
                m[r28{0} - 16]=m[r28{0} - 16]{187},   m[r28{0} - 20]=r24{73} + r24{73},
                m[r28{0} - 24]=m[r28{0} - 24]{208},   m[r28{0} - 32]=m[r28{0} - 32]{0},   m[r28{0} - 64]=r27{0},
                m[r28{0} - 68]=r30{0},   m[r28{0} - 72]=r31{0},   m[r28{0} - 76]=0xb65f67e9,   m[r28{0} - 80]=r27{199},
                m[r28{0} - 84]=%pc,   m[r28{0} - 92]=m[r28{0} - 92]{0},   m[r28{0} - 96]=m[r28{0} - 96]{0},
                m[r28{0} - 100]=m[r28{0} - 100]{0},   tmp1=r24{944} - 1,
                %flags=SUBFLAGS32( r24{944} + 2, 3, r24{944} - 1 ),   %ZF=(r24{944} - 1) = 0,   %CF=(r24{944} + 2) <u 3
              Live variables: eax,  ebx_9 in proc main
result:    0 *32* eax := -
result:    0 *32* ebx_9 := -
dest is not lib
call:  290 {*32* eax, *j32* ecx, *j32* edx, *v* esp} := CALL GetModuleFileNameA(
                *HMODULE* local10 := 0
                *LPSTR* local6 := ""
                *DWORD* local7 := 260
              )
              Reaching definitions: r24=r24{279},   r25=r25{279},   r26=r26{279},   r27=r27{279},   r28=r28{0} - 88,
                r29=r28{0} - 4,   r30=r30{279},   r31=r31{279},   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=r24{73},   m[r28{0} - 12]=r26{263},   m[r28{0} - 16]=m[r28{0} - 16]{187},
                m[r28{0} - 20]=r24{73} + r24{73},   m[r28{0} - 24]=m[r28{0} - 24]{208},
                m[r28{0} - 32]=m[r28{0} - 32]{0},   m[r28{0} - 64]=r27{0},   m[r28{0} - 68]=r30{0},
                m[r28{0} - 72]=r31{0},   m[r28{0} - 76]=260,   m[r28{0} - 80]=0x4056d0,   m[r28{0} - 84]=0,
                m[r28{0} - 88]=%pc,   m[r28{0} - 92]=m[r28{0} - 92]{0},   m[r28{0} - 96]=m[r28{0} - 96]{0},
                m[r28{0} - 100]=m[r28{0} - 100]{0},   tmp1=r24{944} - 1,
                %flags=SUBFLAGS32( r24{944} + 2, 3, r24{944} - 1 ),   %ZF=(r24{944} - 1) = 0,   %CF=(r24{944} + 2) <u 3
              Live variables:  in proc main
dest is not lib
call:  335 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL lstrcpyA(
              )
              Reaching definitions: r24=r24{953} - 2,   r25=r30{302} ^ r31{307},   r26=r26{319} | (r30{302} ^ r31{307})
                r27=r27{279},   r28=r28{0} - 84,   r29=r28{0} - 4,   r30=m[r28{0} - 8]{1036} + 0x14df,   r31=r31{307},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r26{319} | (r30{302} ^ r31{307}),   m[r28{0} - 12]=r26{263},
                m[r28{0} - 16]=m[r28{0} - 16]{187},   m[r28{0} - 20]=r24{73} + r24{73},
                m[r28{0} - 24]=m[r28{0} - 24]{208},   m[r28{0} - 32]=m[r28{0} - 32]{0},   m[r28{0} - 64]=r27{0},
                m[r28{0} - 68]=r30{0},   m[r28{0} - 72]=r31{0},   m[r28{0} - 76]=global35,   m[r28{0} - 80]=0x4057d4,
                m[r28{0} - 84]=%pc,   m[r28{0} - 88]=%pc,   m[r28{0} - 92]=m[r28{0} - 92]{0},
                m[r28{0} - 96]=m[r28{0} - 96]{0},   m[r28{0} - 100]=m[r28{0} - 100]{0},   tmp1=r24{953},
                %flags=SUBFLAGS32( r24{953}, 2, r24{953} - 2 ),   %ZF=(r24{953} - 2) = 0,   %CF=r24{953} <u 2
              Live variables:  in proc main
dest is not lib
call:  348 {*32* eax, *u32* ecx, *j32* edx, *v* esp} := CALL lstrcatA(
                *LPSTR* local12 := ""
                *LPSTR* local11 := local11
              )
              Reaching definitions: r24=(r26{319} | (r30{302} ^ r31{307})) + (r26{319} | (r30{302} ^ r31{307})),
                r25=r25{335},   r26=r26{335},   r27=r27{279},   r28=r28{0} - 92,   r29=r28{0} - 4,
                r30=m[r28{0} - 8]{1036} + 0x14df,   r31=r31{307},   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=r26{319} | (r30{302} ^ r31{307}),   m[r28{0} - 12]=r26{263},
                m[r28{0} - 16]=m[r28{0} - 16]{340},   m[r28{0} - 20]=r24{73} + r24{73},
                m[r28{0} - 24]=m[r28{0} - 24]{208},   m[r28{0} - 32]=m[r28{0} - 32]{0},   m[r28{0} - 64]=r27{0},
                m[r28{0} - 68]=r30{0},   m[r28{0} - 72]=r31{0},   m[r28{0} - 76]=global35,   m[r28{0} - 80]=0x4057d4,
                m[r28{0} - 84]=m[r28{0} - 84]{341},   m[r28{0} - 88]=0x4057d4,   m[r28{0} - 92]=%pc,
                m[r28{0} - 96]=m[r28{0} - 96]{0},   m[r28{0} - 100]=m[r28{0} - 100]{0},
                tmp1=r26{319} | (r30{302} ^ r31{307}),
                %flags=ADDFLAGS32( r26{319} | (r30{302} ^ r31{307}), (r26{319} | (r30{302} ^ r31{307})) + (r26{319} | (r30{302} ^ r31{307})), (r26{319} | (r30{302} ^ r31{307})) + (r26{319} | (r30{302} ^ r31{307})) ),
                %ZF=ADDFLAGS32( r26{319} | (r30{302} ^ r31{307}), (r26{319} | (r30{302} ^ r31{307})) + (r26{319} | (r30{302} ^ r31{307})), (r26{319} | (r30{302} ^ r31{307})) + (r26{319} | (r30{302} ^ r31{307})) ),
                %CF=ADDFLAGS32( r26{319} | (r30{302} ^ r31{307}), (r26{319} | (r30{302} ^ r31{307})) + (r26{319} | (r30{302} ^ r31{307})), (r26{319} | (r30{302} ^ r31{307})) + (r26{319} | (r30{302} ^ r31{307})) )
              Live variables:  in proc main
dest is not lib
call:  391 {*32* eax, *j32* ecx, *u32* edx, *v* esp} := CALL lstrcatA(
                *LPSTR* local12 := ""
                *LPSTR* local11 := local11
              )
              Reaching definitions: r24=r24{962} + 4,   r25=m[r28{0} - 12]{1037} * 8,   r26=r26{373} | 0xffffe4f4,
                r27=r27{279},   r28=r28{0} - 92,   r29=r28{0} - 4,
                r30=((r26{319} | (r30{302} ^ r31{307})) + (r26{319} | (r30{302} ^ r31{307}))) + 209,   r31=r31{307},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r26{319} | (r30{302} ^ r31{307}),
                m[r28{0} - 12]=r26{373} | 0xffffe4f4,   m[r28{0} - 16]=m[r28{0} - 16]{340},
                m[r28{0} - 20]=r24{73} + r24{73},   m[r28{0} - 24]=m[r28{0} - 24]{208},
                m[r28{0} - 32]=m[r28{0} - 32]{0},   m[r28{0} - 64]=r27{0},   m[r28{0} - 68]=r30{0},
                m[r28{0} - 72]=r31{0},   m[r28{0} - 76]=global35,   m[r28{0} - 80]=0x4057d4,
                m[r28{0} - 84]=m[r28{0} - 84]{384},   m[r28{0} - 88]=0x4057d4,   m[r28{0} - 92]=%pc,
                m[r28{0} - 96]=m[r28{0} - 96]{0},   m[r28{0} - 100]=m[r28{0} - 100]{0},   tmp1=r24{962} - 2,
                %flags=SUBFLAGS32( r24{962} + 4, 6, r24{962} - 2 ),   %ZF=(r24{962} - 2) = 0,   %CF=(r24{962} + 4) <u 6
              Live variables:  in proc main
dest is not lib
call:  446 {*32* eax, *u32* ecx, *i32* edx, *v* esp} := CALL lstrcatA(
                *LPSTR* local12 := ""
                *LPSTR* local11 := ""
              )
              Reaching definitions: r24=r24{970} - 4,   r25=r25{428},   r26=r26{432},   r27=r27{279},   r28=r28{0} - 92
                r29=r28{0} - 4,   r30=0 << r25{406},   r31=m[r28{0} - 12]{1038} + 0x15fd,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r26{319} | (r30{302} ^ r31{307}),   m[r28{0} - 12]=r26{432},
                m[r28{0} - 16]=m[r28{0} - 16]{340},   m[r28{0} - 20]=r24{73} + r24{73},
                m[r28{0} - 24]=m[r28{0} - 24]{208},   m[r28{0} - 32]=m[r28{0} - 32]{401},   m[r28{0} - 64]=r27{0},
                m[r28{0} - 68]=r30{0},   m[r28{0} - 72]=r31{0},   m[r28{0} - 76]=global35,   m[r28{0} - 80]=0x4057d4,
                m[r28{0} - 84]=0x4056d0,   m[r28{0} - 88]=0x4057d4,   m[r28{0} - 92]=%pc,
                m[r28{0} - 96]=m[r28{0} - 96]{0},   m[r28{0} - 100]=m[r28{0} - 100]{0},   tmp1=r24{970},
                %flags=SUBFLAGS32( r24{970}, 4, r24{970} - 4 ),   %ZF=(r24{970} - 4) = 0,   %CF=r24{970} <u 4
              Live variables:  in proc main
dest is not lib
call:  576 {*32* eax, *32* esi, *32* ecx, *32* edx, *32* ebx, *v* esp, *32* edi} := CALL proc1(
                *u32* m[esp_2 - 28] := m[esp_2 - 28]
                *u32* m[esp_2 - 24] := m[esp_2 - 24]
                *u32* m[esp_2 - 20] := m[esp_2 - 20]
                *v** m[esp_2 - 8] := m[esp_2 - 8]
                *u32* m[esp_2 - 4] := m[esp_2 - 4]
              )
              Reaching definitions: r24=r24{565},   r25=r25{565},   r26=r26{565},   r27=r24{565},   r28=r28{565} - 12,
                r29=r29{565},   r30=r30{565},   r31=r31{565},   m[r28{0} + 4]=m[r28{0} + 4]{565},
                m[r28{0} + 8]=m[r28{0} + 8]{565},   m[r28{0} + 12]=m[r28{0} + 12]{565},
                m[r28{0} - 4]=m[r28{0} - 4]{565},   m[r28{0} - 8]=m[r28{0} - 8]{565},
                m[r28{0} - 12]=m[r28{0} - 12]{565},   m[r28{0} - 16]=m[r28{0} - 16]{565},
                m[r28{0} - 20]=m[r28{0} - 20]{565},   m[r28{0} - 24]=m[r28{0} - 24]{565},
                m[r28{0} - 32]=m[r28{0} - 32]{565},   m[r28{0} - 64]=m[r28{0} - 64]{565},
                m[r28{0} - 68]=m[r28{0} - 68]{565},   m[r28{0} - 72]=m[r28{0} - 72]{565},
                m[r28{0} - 76]=m[r28{0} - 76]{565},   m[r28{0} - 80]=m[r28{0} - 80]{565},
                m[r28{0} - 84]=m[r28{0} - 84]{565},   m[r28{0} - 88]=m[r28{0} - 88]{565},
                m[r28{0} - 92]=m[r28{0} - 92]{565},   m[r28{0} - 96]=m[r28{0} - 96]{565},
                m[r28{0} - 100]=m[r28{0} - 100]{565},   m[r28{0} - 104]=m[r28{0} - 104]{565},
                m[r28{0} - 108]=m[r28{0} - 108]{565},   m[r28{0} - 112]=m[r28{0} - 112]{565},
                m[r28{0} - 116]=m[r28{0} - 116]{565},   m[r28{0} - 120]=m[r28{0} - 120]{565},
                m[r28{0} - 124]=m[r28{0} - 124]{565},   m[r28{0} - 4]=m[r28{0} - 4]{565},
                m[r28{0} - 8]=m[r28{0} - 8]{565},   m[r28{0} - 12]=m[r28{0} - 12]{565},
                m[r28{0} - 16]=m[r28{0} - 16]{565},   m[r28{0} - 20]=m[r28{0} - 20]{565},
                m[r28{0} - 24]=m[r28{0} - 24]{565},   m[r28{0} - 32]=m[r28{0} - 32]{565},
                m[r28{0} - 64]=m[r28{0} - 64]{565},   m[r28{0} - 68]=m[r28{0} - 68]{565},
                m[r28{0} - 72]=m[r28{0} - 72]{565},   m[r28{0} - 76]=m[r28{0} - 76]{565},
                m[r28{0} - 80]=m[r28{0} - 80]{565},   m[r28{0} - 84]=m[r28{0} - 84]{565},
                m[r28{0} - 88]=m[r28{0} - 88]{565},   m[r28{0} - 92]=m[r28{0} - 92]{565},
                m[r28{0} - 96]=m[r28{0} - 96]{565},   m[r28{0} - 100]=m[r28{0} - 100]{565},
                m[r28{0} - 104]=m[r28{0} - 104]{565},   m[r28{0} - 108]=m[r28{0} - 108]{565},
                m[r28{0} - 112]=m[r28{0} - 112]{565},   m[r28{0} - 116]=m[r28{0} - 116]{565},
                m[r28{0} - 120]=m[r28{0} - 120]{565},   m[r28{0} - 124]=m[r28{0} - 124]{565},   <all>=<all>{565},
                tmp1=tmp1{565},   %flags=LOGICALFLAGS32( m[r29{565} - 4] ),   %ZF=LOGICALFLAGS32( m[r29{565} - 4] ),
                %CF=LOGICALFLAGS32( m[r29{565} - 4] )
              Live variables: eax,  ebx in proc main
result:    0 *32* eax := -
result:    0 *32* ebx := -
dest is not lib
call:  633 {*32* eax, *32* esi, *32* ecx, *32* edx, *32* ebx, *v* esp, *32* edi} := CALL proc1(
                *u32* m[esp_2 - 28] := m[esp_2 - 28]
                *u32* m[esp_2 - 24] := m[esp_2 - 24]
                *u32* m[esp_2 - 20] := m[esp_2 - 20]
                *v** m[esp_2 - 8] := m[esp_2 - 8]
                *u32* m[esp_2 - 4] := m[esp_2 - 4]
              )
              Reaching definitions: r24=r24{623},   r25=r30{588} & r31{600},   r26=r26{584},   r27=r27{576},
                r28=r28{565} - 12,   r29=r29{565},   r30=r30{606},   r31=r26{584} * 4,
                m[r28{0} + 4]=m[r28{0} + 4]{565},   m[r28{0} + 8]=m[r28{0} + 8]{565},
                m[r28{0} + 12]=m[r28{0} + 12]{565},   m[r28{0} - 4]=m[r28{0} - 4]{565},
                m[r28{0} - 8]=m[r28{0} - 8]{565},   m[r28{0} - 12]=m[r28{0} - 12]{565},
                m[r28{0} - 16]=m[r28{0} - 16]{565},   m[r28{0} - 20]=m[r28{0} - 20]{565},
                m[r28{0} - 24]=m[r28{0} - 24]{565},   m[r28{0} - 32]=m[r28{0} - 32]{565},
                m[r28{0} - 64]=m[r28{0} - 64]{565},   m[r28{0} - 68]=m[r28{0} - 68]{565},
                m[r28{0} - 72]=m[r28{0} - 72]{565},   m[r28{0} - 76]=m[r28{0} - 76]{565},
                m[r28{0} - 80]=m[r28{0} - 80]{565},   m[r28{0} - 84]=m[r28{0} - 84]{565},
                m[r28{0} - 88]=m[r28{0} - 88]{565},   m[r28{0} - 92]=m[r28{0} - 92]{565},
                m[r28{0} - 96]=m[r28{0} - 96]{565},   m[r28{0} - 100]=m[r28{0} - 100]{565},
                m[r28{0} - 104]=m[r28{0} - 104]{565},   m[r28{0} - 108]=m[r28{0} - 108]{565},
                m[r28{0} - 112]=m[r28{0} - 112]{565},   m[r28{0} - 116]=m[r28{0} - 116]{565},
                m[r28{0} - 120]=m[r28{0} - 120]{565},   m[r28{0} - 124]=m[r28{0} - 124]{565},
                m[r28{0} - 4]=m[r28{0} - 4]{565},   m[r28{0} - 8]=m[r28{0} - 8]{565},
                m[r28{0} - 12]=m[r28{0} - 12]{565},   m[r28{0} - 16]=m[r28{0} - 16]{565},
                m[r28{0} - 20]=m[r28{0} - 20]{565},   m[r28{0} - 24]=m[r28{0} - 24]{565},
                m[r28{0} - 32]=m[r28{0} - 32]{565},   m[r28{0} - 64]=m[r28{0} - 64]{565},
                m[r28{0} - 68]=m[r28{0} - 68]{565},   m[r28{0} - 72]=m[r28{0} - 72]{565},
                m[r28{0} - 76]=m[r28{0} - 76]{565},   m[r28{0} - 80]=m[r28{0} - 80]{565},
                m[r28{0} - 84]=m[r28{0} - 84]{565},   m[r28{0} - 88]=m[r28{0} - 88]{565},
                m[r28{0} - 92]=m[r28{0} - 92]{565},   m[r28{0} - 96]=m[r28{0} - 96]{565},
                m[r28{0} - 100]=m[r28{0} - 100]{565},   m[r28{0} - 104]=m[r28{0} - 104]{565},
                m[r28{0} - 108]=m[r28{0} - 108]{565},   m[r28{0} - 112]=m[r28{0} - 112]{565},
                m[r28{0} - 116]=m[r28{0} - 116]{565},   m[r28{0} - 120]=m[r28{0} - 120]{565},
                m[r28{0} - 124]=m[r28{0} - 124]{565},   <all>=<all>{565},   tmp1=r24{578} - (r26{584} * 5),
                %flags=LOGICALFLAGS32( r24{623} ),   %ZF=LOGICALFLAGS32( r24{623} ),   %CF=LOGICALFLAGS32( r24{623} )
              Live variables: eax,  ebx in proc main
result:    0 *32* eax := -
result:    0 *32* ebx := -
dest is not lib
call:  676 {*32* eax, *32* esi, *32* ecx, *32* edx, *32* ebx, *v* esp, *32* edi} := CALL proc1(
                *u32* m[esp_2 - 28] := m[esp_2 - 28]
                *u32* m[esp_2 - 24] := m[esp_2 - 24]
                *u32* m[esp_2 - 20] := m[esp_2 - 20]
                *v** m[esp_2 - 8] := m[esp_2 - 8]
                *u32* m[esp_2 - 4] := m[esp_2 - 4]
              )
              Reaching definitions: r24=r24{662} ^ r26{664},   r25=r24{635} + 0x10ad,   r26=r26{664},   r27=r27{633},
                r28=r28{565} - 12,   r29=r29{565},   r30=r25{637} + r25{637},   r31=r31{644} >> (r25{648} + 48),
                m[r28{0} + 4]=m[r28{0} + 4]{565},   m[r28{0} + 8]=m[r28{0} + 8]{565},
                m[r28{0} + 12]=m[r28{0} + 12]{565},   m[r28{0} - 4]=m[r28{0} - 4]{565},
                m[r28{0} - 8]=m[r28{0} - 8]{565},   m[r28{0} - 12]=m[r28{0} - 12]{565},
                m[r28{0} - 16]=m[r28{0} - 16]{565},   m[r28{0} - 20]=m[r28{0} - 20]{565},
                m[r28{0} - 24]=m[r28{0} - 24]{565},   m[r28{0} - 32]=m[r28{0} - 32]{565},
                m[r28{0} - 64]=m[r28{0} - 64]{565},   m[r28{0} - 68]=m[r28{0} - 68]{565},
                m[r28{0} - 72]=m[r28{0} - 72]{565},   m[r28{0} - 76]=m[r28{0} - 76]{565},
                m[r28{0} - 80]=m[r28{0} - 80]{565},   m[r28{0} - 84]=m[r28{0} - 84]{565},
                m[r28{0} - 88]=m[r28{0} - 88]{565},   m[r28{0} - 92]=m[r28{0} - 92]{565},
                m[r28{0} - 96]=m[r28{0} - 96]{565},   m[r28{0} - 100]=m[r28{0} - 100]{565},
                m[r28{0} - 104]=m[r28{0} - 104]{565},   m[r28{0} - 108]=m[r28{0} - 108]{565},
                m[r28{0} - 112]=m[r28{0} - 112]{565},   m[r28{0} - 116]=m[r28{0} - 116]{565},
                m[r28{0} - 120]=m[r28{0} - 120]{565},   m[r28{0} - 124]=m[r28{0} - 124]{565},
                m[r28{0} - 4]=m[r28{0} - 4]{565},   m[r28{0} - 8]=m[r28{0} - 8]{565},
                m[r28{0} - 12]=m[r28{0} - 12]{565},   m[r28{0} - 16]=m[r28{0} - 16]{565},
                m[r28{0} - 20]=m[r28{0} - 20]{565},   m[r28{0} - 24]=m[r28{0} - 24]{565},
                m[r28{0} - 32]=m[r28{0} - 32]{565},   m[r28{0} - 64]=m[r28{0} - 64]{565},
                m[r28{0} - 68]=m[r28{0} - 68]{565},   m[r28{0} - 72]=m[r28{0} - 72]{565},
                m[r28{0} - 76]=m[r28{0} - 76]{565},   m[r28{0} - 80]=m[r28{0} - 80]{565},
                m[r28{0} - 84]=m[r28{0} - 84]{565},   m[r28{0} - 88]=m[r28{0} - 88]{565},
                m[r28{0} - 92]=m[r28{0} - 92]{565},   m[r28{0} - 96]=m[r28{0} - 96]{565},
                m[r28{0} - 100]=m[r28{0} - 100]{565},   m[r28{0} - 104]=m[r28{0} - 104]{565},
                m[r28{0} - 108]=m[r28{0} - 108]{565},   m[r28{0} - 112]=m[r28{0} - 112]{565},
                m[r28{0} - 116]=m[r28{0} - 116]{565},   m[r28{0} - 120]=m[r28{0} - 120]{565},
                m[r28{0} - 124]=m[r28{0} - 124]{565},   <all>=<all>{565},   tmp1=r31{644} >> (r25{648} + 48),
                %flags=LOGICALFLAGS32( r24{662} ^ r26{664} ),   %ZF=LOGICALFLAGS32( r24{662} ^ r26{664} ),
                %CF=LOGICALFLAGS32( r24{662} ^ r26{664} )
              Live variables: eax,  ebx in proc main
result:    0 *32* eax := -
result:    0 *32* ebx := -
dest is not lib
call:  727 {*32* eax, *32* esi, *j32* ecx, *j32* edx, *32* ebx, *v* esp, *j32* edi} := CALL proc1(
                *u32* m[esp_2 - 28] := m[esp_2 - 28]
                *u32* m[esp_2 - 24] := m[esp_2 - 24]
                *u32* m[esp_2 - 20] := m[esp_2 - 20]
                *v** m[esp_2 - 8] := m[esp_2 - 8]
                *u32* m[esp_2 - 4] := m[esp_2 - 4]
              )
              Reaching definitions: r24=r24{717},   r25=(r24{678} + r24{678}) + 923,   r26=(r24{678} + r24{678}) + 923,
                r27=r27{676},   r28=r28{565} - 12,   r29=r29{565},   r30=r30{680},   r31=(r31{694} + 0x257f) & r25{692}
                m[r28{0} + 4]=m[r28{0} + 4]{565},   m[r28{0} + 8]=m[r28{0} + 8]{565},
                m[r28{0} + 12]=m[r28{0} + 12]{565},   m[r28{0} - 4]=m[r28{0} - 4]{565},
                m[r28{0} - 8]=m[r28{0} - 8]{565},   m[r28{0} - 12]=m[r28{0} - 12]{565},
                m[r28{0} - 16]=m[r28{0} - 16]{565},   m[r28{0} - 20]=m[r28{0} - 20]{565},
                m[r28{0} - 24]=m[r28{0} - 24]{565},   m[r28{0} - 32]=m[r28{0} - 32]{565},
                m[r28{0} - 64]=m[r28{0} - 64]{565},   m[r28{0} - 68]=m[r28{0} - 68]{565},
                m[r28{0} - 72]=m[r28{0} - 72]{565},   m[r28{0} - 76]=m[r28{0} - 76]{565},
                m[r28{0} - 80]=m[r28{0} - 80]{565},   m[r28{0} - 84]=m[r28{0} - 84]{565},
                m[r28{0} - 88]=m[r28{0} - 88]{565},   m[r28{0} - 92]=m[r28{0} - 92]{565},
                m[r28{0} - 96]=m[r28{0} - 96]{565},   m[r28{0} - 100]=m[r28{0} - 100]{565},
                m[r28{0} - 104]=m[r28{0} - 104]{565},   m[r28{0} - 108]=m[r28{0} - 108]{565},
                m[r28{0} - 112]=m[r28{0} - 112]{565},   m[r28{0} - 116]=m[r28{0} - 116]{565},
                m[r28{0} - 120]=m[r28{0} - 120]{565},   m[r28{0} - 124]=m[r28{0} - 124]{565},
                m[r28{0} - 4]=m[r28{0} - 4]{565},   m[r28{0} - 8]=m[r28{0} - 8]{565},
                m[r28{0} - 12]=m[r28{0} - 12]{565},   m[r28{0} - 16]=m[r28{0} - 16]{565},
                m[r28{0} - 20]=m[r28{0} - 20]{565},   m[r28{0} - 24]=m[r28{0} - 24]{565},
                m[r28{0} - 32]=m[r28{0} - 32]{565},   m[r28{0} - 64]=m[r28{0} - 64]{565},
                m[r28{0} - 68]=m[r28{0} - 68]{565},   m[r28{0} - 72]=m[r28{0} - 72]{565},
                m[r28{0} - 76]=m[r28{0} - 76]{565},   m[r28{0} - 80]=m[r28{0} - 80]{565},
                m[r28{0} - 84]=m[r28{0} - 84]{565},   m[r28{0} - 88]=m[r28{0} - 88]{565},
                m[r28{0} - 92]=m[r28{0} - 92]{565},   m[r28{0} - 96]=m[r28{0} - 96]{565},
                m[r28{0} - 100]=m[r28{0} - 100]{565},   m[r28{0} - 104]=m[r28{0} - 104]{565},
                m[r28{0} - 108]=m[r28{0} - 108]{565},   m[r28{0} - 112]=m[r28{0} - 112]{565},
                m[r28{0} - 116]=m[r28{0} - 116]{565},   m[r28{0} - 120]=m[r28{0} - 120]{565},
                m[r28{0} - 124]=m[r28{0} - 124]{565},   <all>=<all>{565},   tmp1=r24{708},
                %flags=LOGICALFLAGS32( r24{717} ),   %ZF=LOGICALFLAGS32( r24{717} ),   %CF=LOGICALFLAGS32( r24{717} )
              Live variables: eax,  ebx in proc main
result:    0 *32* eax := -
result:    0 *32* ebx := -
dest is not lib
call:  775 {*32* eax, *u32* esi, *j32* ecx, *j32* edx, *32* ebx, *v* esp, *j32* edi} := CALL proc1(
                *u32* m[esp_2 - 28] := m[esp_2 - 28]
                *u32* m[esp_2 - 24] := m[esp_2 - 24]
                *u32* m[esp_2 - 20] := m[esp_2 - 20]
                *v** m[esp_2 - 8] := m[esp_2 - 8]
                *u32* m[esp_2 - 4] := m[esp_2 - 4]
              )
              Reaching definitions: r24=r24{995} - 2,   r25=r25{754},   r26=r26{759} | r25{754},   r27=r27{727},
                r28=r28{565} - 12,   r29=r29{565},   r30=(r25{737} + r25{737}) + 6,
                r31=r31{744} >> (r25{737} + r25{737}),   m[r28{0} + 4]=m[r28{0} + 4]{565},
                m[r28{0} + 8]=m[r28{0} + 8]{565},   m[r28{0} + 12]=m[r28{0} + 12]{565},
                m[r28{0} - 4]=m[r28{0} - 4]{565},   m[r28{0} - 8]=m[r28{0} - 8]{565},
                m[r28{0} - 12]=m[r28{0} - 12]{565},   m[r28{0} - 16]=m[r28{0} - 16]{565},
                m[r28{0} - 20]=m[r28{0} - 20]{565},   m[r28{0} - 24]=m[r28{0} - 24]{565},
                m[r28{0} - 32]=m[r28{0} - 32]{565},   m[r28{0} - 64]=m[r28{0} - 64]{565},
                m[r28{0} - 68]=m[r28{0} - 68]{565},   m[r28{0} - 72]=m[r28{0} - 72]{565},
                m[r28{0} - 76]=m[r28{0} - 76]{565},   m[r28{0} - 80]=m[r28{0} - 80]{565},
                m[r28{0} - 84]=m[r28{0} - 84]{565},   m[r28{0} - 88]=m[r28{0} - 88]{565},
                m[r28{0} - 92]=m[r28{0} - 92]{565},   m[r28{0} - 96]=m[r28{0} - 96]{565},
                m[r28{0} - 100]=m[r28{0} - 100]{565},   m[r28{0} - 104]=m[r28{0} - 104]{565},
                m[r28{0} - 108]=m[r28{0} - 108]{565},   m[r28{0} - 112]=m[r28{0} - 112]{565},
                m[r28{0} - 116]=m[r28{0} - 116]{565},   m[r28{0} - 120]=m[r28{0} - 120]{565},
                m[r28{0} - 124]=m[r28{0} - 124]{565},   m[r28{0} - 4]=m[r28{0} - 4]{565},
                m[r28{0} - 8]=m[r28{0} - 8]{565},   m[r28{0} - 12]=m[r28{0} - 12]{565},
                m[r28{0} - 16]=m[r28{0} - 16]{565},   m[r28{0} - 20]=m[r28{0} - 20]{565},
                m[r28{0} - 24]=m[r28{0} - 24]{565},   m[r28{0} - 32]=m[r28{0} - 32]{565},
                m[r28{0} - 64]=m[r28{0} - 64]{565},   m[r28{0} - 68]=m[r28{0} - 68]{565},
                m[r28{0} - 72]=m[r28{0} - 72]{565},   m[r28{0} - 76]=m[r28{0} - 76]{565},
                m[r28{0} - 80]=m[r28{0} - 80]{565},   m[r28{0} - 84]=m[r28{0} - 84]{565},
                m[r28{0} - 88]=m[r28{0} - 88]{565},   m[r28{0} - 92]=m[r28{0} - 92]{565},
                m[r28{0} - 96]=m[r28{0} - 96]{565},   m[r28{0} - 100]=m[r28{0} - 100]{565},
                m[r28{0} - 104]=m[r28{0} - 104]{565},   m[r28{0} - 108]=m[r28{0} - 108]{565},
                m[r28{0} - 112]=m[r28{0} - 112]{565},   m[r28{0} - 116]=m[r28{0} - 116]{565},
                m[r28{0} - 120]=m[r28{0} - 120]{565},   m[r28{0} - 124]=m[r28{0} - 124]{565},   <all>=<all>{565},
                tmp1=r24{995},   %flags=SUBFLAGS32( r24{995}, 2, r24{995} - 2 ),   %ZF=(r24{995} - 2) = 0,
                %CF=r24{995} <u 2
              Live variables: eax,  ebx in proc main
result:    0 *32* eax := -
result:    0 *32* ebx := -
dest is not lib
call:  837 {*32* eax, *u32* esi, *32* ecx, *j32* edx, *u32* ebx_1, *v* esp, *j32* edi} := CALL proc1(
                *u32* m[esp - 28] := m[esp - 28]
                *u32* local9 := m[esp - 24]
                *u32* local23 := m[esp - 20]
                *v** local4 := m[esp - 8]
                *u32* local24 := m[esp - 4]
              )
              Reaching definitions: r24=r24{827},   r25=r25{816},   r26=r24{818} * 4,   r27=r24{816},
                r28=r28{816} - 12,   r29=r29{816},   r30=r30{816},   r31=r31{816},   m[r28{0} + 4]=m[r28{0} + 4]{816},
                m[r28{0} + 8]=m[r28{0} + 8]{816},   m[r28{0} + 12]=m[r28{0} + 12]{816},
                m[r28{0} - 4]=m[r28{0} - 4]{816},   m[r28{0} - 8]=m[r28{0} - 8]{816},
                m[r28{0} - 12]=m[r28{0} - 12]{816},   m[r28{0} - 16]=m[r28{0} - 16]{816},
                m[r28{0} - 20]=m[r28{0} - 20]{816},   m[r28{0} - 24]=m[r28{0} - 24]{816},
                m[r28{0} - 32]=m[r28{0} - 32]{816},   m[r28{0} - 64]=m[r28{0} - 64]{816},
                m[r28{0} - 68]=m[r28{0} - 68]{816},   m[r28{0} - 72]=m[r28{0} - 72]{816},
                m[r28{0} - 76]=m[r28{0} - 76]{816},   m[r28{0} - 80]=m[r28{0} - 80]{816},
                m[r28{0} - 84]=m[r28{0} - 84]{816},   m[r28{0} - 88]=m[r28{0} - 88]{816},
                m[r28{0} - 92]=m[r28{0} - 92]{816},   m[r28{0} - 96]=m[r28{0} - 96]{816},
                m[r28{0} - 100]=m[r28{0} - 100]{816},   m[r28{0} - 104]=m[r28{0} - 104]{816},
                m[r28{0} - 108]=m[r28{0} - 108]{816},   m[r28{0} - 112]=m[r28{0} - 112]{816},
                m[r28{0} - 116]=m[r28{0} - 116]{816},   m[r28{0} - 120]=m[r28{0} - 120]{816},
                m[r28{0} - 124]=m[r28{0} - 124]{816},   m[r28{0} - 4]=m[r28{0} - 4]{816},
                m[r28{0} - 8]=m[r28{0} - 8]{816},   m[r28{0} - 12]=m[r28{0} - 12]{816},
                m[r28{0} - 16]=m[r28{0} - 16]{816},   m[r28{0} - 20]=m[r28{0} - 20]{816},
                m[r28{0} - 24]=m[r28{0} - 24]{816},   m[r28{0} - 32]=m[r28{0} - 32]{816},
                m[r28{0} - 64]=m[r28{0} - 64]{816},   m[r28{0} - 68]=m[r28{0} - 68]{816},
                m[r28{0} - 72]=m[r28{0} - 72]{816},   m[r28{0} - 76]=m[r28{0} - 76]{816},
                m[r28{0} - 80]=m[r28{0} - 80]{816},   m[r28{0} - 84]=m[r28{0} - 84]{816},
                m[r28{0} - 88]=m[r28{0} - 88]{816},   m[r28{0} - 92]=m[r28{0} - 92]{816},
                m[r28{0} - 96]=m[r28{0} - 96]{816},   m[r28{0} - 100]=m[r28{0} - 100]{816},
                m[r28{0} - 104]=m[r28{0} - 104]{816},   m[r28{0} - 108]=m[r28{0} - 108]{816},
                m[r28{0} - 112]=m[r28{0} - 112]{816},   m[r28{0} - 116]=m[r28{0} - 116]{816},
                m[r28{0} - 120]=m[r28{0} - 120]{816},   m[r28{0} - 124]=m[r28{0} - 124]{816},   <all>=<all>{816},
                tmp1=r24{818},   %flags=LOGICALFLAGS32( r24{827} ),   %ZF=LOGICALFLAGS32( r24{827} ),
                %CF=LOGICALFLAGS32( r24{827} )
              Live variables: eax in proc main
result:    0 *32* eax := -
dest is not lib
call:  886 {*32* eax, *32* esi, *32* ecx, *32* edx, *32* ebx, *32** esp, *32** ebp, *32* edi} := CALL proc2(
                *32* local23 := m[esp - 20]
                *32* local0 := m[esp - 16]
                *32* local8 := m[esp - 12]
              )
              Reaching definitions: r24=r24{1013} - 5,   r25=(r27{846} * 8) + 0x9e7,   r26=r26{876},   r27=r27{846},
                r28=r28{816} - 4,   r29=r29{816},   r30=r27{846} * 8,   r31=r31{867},
                m[r28{0} + 4]=m[r28{0} + 4]{816},   m[r28{0} + 8]=m[r28{0} + 8]{816},
                m[r28{0} + 12]=m[r28{0} + 12]{816},   m[r28{0} - 4]=m[r28{0} - 4]{816},
                m[r28{0} - 8]=m[r28{0} - 8]{816},   m[r28{0} - 12]=m[r28{0} - 12]{816},
                m[r28{0} - 16]=m[r28{0} - 16]{816},   m[r28{0} - 20]=m[r28{0} - 20]{816},
                m[r28{0} - 24]=m[r28{0} - 24]{816},   m[r28{0} - 32]=m[r28{0} - 32]{816},
                m[r28{0} - 64]=m[r28{0} - 64]{816},   m[r28{0} - 68]=m[r28{0} - 68]{816},
                m[r28{0} - 72]=m[r28{0} - 72]{816},   m[r28{0} - 76]=m[r28{0} - 76]{816},
                m[r28{0} - 80]=m[r28{0} - 80]{816},   m[r28{0} - 84]=m[r28{0} - 84]{816},
                m[r28{0} - 88]=m[r28{0} - 88]{816},   m[r28{0} - 92]=m[r28{0} - 92]{816},
                m[r28{0} - 96]=m[r28{0} - 96]{816},   m[r28{0} - 100]=m[r28{0} - 100]{816},
                m[r28{0} - 104]=m[r28{0} - 104]{816},   m[r28{0} - 108]=m[r28{0} - 108]{816},
                m[r28{0} - 112]=m[r28{0} - 112]{816},   m[r28{0} - 116]=m[r28{0} - 116]{816},
                m[r28{0} - 120]=m[r28{0} - 120]{816},   m[r28{0} - 124]=m[r28{0} - 124]{816},
                m[r28{0} - 4]=m[r28{0} - 4]{816},   m[r28{0} - 8]=m[r28{0} - 8]{816},
                m[r28{0} - 12]=m[r28{0} - 12]{816},   m[r28{0} - 16]=m[r28{0} - 16]{816},
                m[r28{0} - 20]=m[r28{0} - 20]{816},   m[r28{0} - 24]=m[r28{0} - 24]{816},
                m[r28{0} - 32]=m[r28{0} - 32]{816},   m[r28{0} - 64]=m[r28{0} - 64]{816},
                m[r28{0} - 68]=m[r28{0} - 68]{816},   m[r28{0} - 72]=m[r28{0} - 72]{816},
                m[r28{0} - 76]=m[r28{0} - 76]{816},   m[r28{0} - 80]=m[r28{0} - 80]{816},
                m[r28{0} - 84]=m[r28{0} - 84]{816},   m[r28{0} - 88]=m[r28{0} - 88]{816},
                m[r28{0} - 92]=m[r28{0} - 92]{816},   m[r28{0} - 96]=m[r28{0} - 96]{816},
                m[r28{0} - 100]=m[r28{0} - 100]{816},   m[r28{0} - 104]=m[r28{0} - 104]{816},
                m[r28{0} - 108]=m[r28{0} - 108]{816},   m[r28{0} - 112]=m[r28{0} - 112]{816},
                m[r28{0} - 116]=m[r28{0} - 116]{816},   m[r28{0} - 120]=m[r28{0} - 120]{816},
                m[r28{0} - 124]=m[r28{0} - 124]{816},   <all>=<all>{816},   tmp1=r24{1013},
                %flags=SUBFLAGS32( r24{1013}, 5, r24{1013} - 5 ),   %ZF=(r24{1013} - 5) = 0,   %CF=r24{1013} <u 5
              Live variables: ebp in proc main
result:    0 *32** ebp := -
dest is not lib
call:   96 {*u32* eax, *v* edx} := CALL StgCreateStorageEx(
              )
              Reaching definitions: r24=r24{74},   r25=m[r28{0} - 20]{27},   r26=r26{54},   r27=m[r28{0} + 4]{0},
                r28=r28{0} - 116,   r29=r28{0} - 4,   r30=m[r28{0} + 8]{0},
                r31=m[r28{0} - 20]{27} >> m[r28{0} - 20]{27},   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{0},
                m[r28{0} - 12]=r24{74},   m[r28{0} - 16]=r26{54},   m[r28{0} - 20]=m[r28{0} - 20]{27},
                m[r28{0} - 24]=r26{16} + m[r28{0} + 4]{0},   m[r28{0} - 28]=r24{67} + m[r28{0} + 4]{0},
                m[r28{0} - 40]=m[r28{0} - 40]{0},   m[r28{0} - 48]=m[r28{0} - 48]{66},
                m[r28{0} - 52]=m[r28{0} - 52]{0},   m[r28{0} - 56]=m[r28{0} - 56]{0},
                m[r28{0} - 64]=m[r28{0} - 64]{0},   m[r28{0} - 72]=r27{0},   m[r28{0} - 76]=r30{0},
                m[r28{0} - 80]=r31{0},   m[r28{0} - 84]=0,   m[r28{0} - 88]=0,   m[r28{0} - 92]=0,   m[r28{0} - 96]=0,
                m[r28{0} - 100]=0,   m[r28{0} - 104]=0,   m[r28{0} - 108]=0,   m[r28{0} - 112]=0,   m[r28{0} - 116]=%pc
                tmp1=r24{67},   tmpb=tmpb{0},   %flags=LOGICALFLAGS32( r24{74} ),   %ZF=LOGICALFLAGS32( r24{74} ),
                %CF=LOGICALFLAGS32( r24{74} )
              Live variables: eax in proc proc1
result:    0 *u32* eax := -
dest is not lib
call:   42 {*32* eax_1, *v* ecx, *v* edx, *v* esp} := CALL GetModuleHandleA(
              )
              Reaching definitions: r24=r24{34},   r25=0x818,   r26=r26{23} + 0xb92,   r27=r27{0},   r28=r28{0} - 56,
                r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{0},
                m[r28{0} - 12]=r24{34},   m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 40]=r27{0},
                m[r28{0} - 44]=r30{0},   m[r28{0} - 48]=r31{0},   m[r28{0} - 52]=0,   m[r28{0} - 56]=%pc,
                tmp1=r24{19} >> (r26{23} + 0xb92),   %flags=SALFLAGS32( r24{34}, r24{19} >> (r26{23} + 0xb92), 0x818 ),
                %ZF=SALFLAGS32( r24{34}, r24{19} >> (r26{23} + 0xb92), 0x818 ),
                %CF=SALFLAGS32( r24{34}, r24{19} >> (r26{23} + 0xb92), 0x818 )
              Live variables: eax_1 in proc proc2
result:    0 *32* eax_1 := -
