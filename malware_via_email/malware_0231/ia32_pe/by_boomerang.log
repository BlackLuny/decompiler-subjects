Unknown library function lstrcpyA
Unknown library function GetModuleHandleA
Unknown library function StgCreateStorageEx
assgn   96 *32* %pc := m[0x405424]
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc1 ###
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 20 to local table
in proc proc1 adding addrExp r28{0} - 8 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 36 to local table
in proc proc1 adding addrExp r28{0} - 48 to local table
in proc proc1 adding addrExp r28{0} - 56 to local table
in proc proc1 adding addrExp r28{0} - 60 to local table
in proc proc1 adding addrExp r28{0} - 64 to local table
in proc proc1 adding addrExp r28{0} - 4 to local table
in proc proc1 adding addrExp r28{0} - 72 to local table
in proc proc1 adding addrExp r28{0} - 76 to local table
in proc proc1 adding addrExp r28{0} - 80 to local table
in proc proc1 adding addrExp r28{0} - 24 to local table
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 20 to local table
in proc proc1 adding addrExp r28{0} - 20 to local table
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 52 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 84 to local table
in proc proc1 adding addrExp r28{0} - 88 to local table
in proc proc1 adding addrExp r28{0} - 92 to local table
in proc proc1 adding addrExp r28{0} - 96 to local table
in proc proc1 adding addrExp r28{0} - 100 to local table
in proc proc1 adding addrExp r28{0} - 104 to local table
in proc proc1 adding addrExp r28{0} - 108 to local table
in proc proc1 adding addrExp r28{0} - 112 to local table
in proc proc1 adding addrExp r28{0} - 116 to local table
in proc proc1 adding addrExp r28{0} - 32 to local table
in proc proc1 adding addrExp r28{0} - 28 to local table
in proc proc1 adding addrExp r28{0} - 48 to local table
in proc proc1 adding addrExp r28{0} - 8 to local table
in proc proc1 adding addrExp r28{0} - 36 to local table
in proc proc1 adding addrExp r28{0} - 48 to local table
in proc proc1 adding addrExp r28{0} - 36 to local table
in proc proc1 adding addrExp r28{0} - 8 to local table
in proc proc1 adding addrExp r28{0} - 48 to local table
in proc proc1 adding addrExp r28{0} - 56 to local table
in proc proc1 adding addrExp r28{0} - 60 to local table
in proc proc1 adding addrExp r28{0} - 64 to local table
in proc proc1 adding addrExp r28{0} - 64 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 64 to local table
in proc proc1 adding addrExp r28{0} - 60 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 60 to local table
in proc proc1 adding addrExp r28{0} - 64 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 8 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 36 to local table
in proc proc1 adding addrExp r28{0} - 48 to local table
in proc proc1 adding addrExp r28{0} - 56 to local table
in proc proc1 adding addrExp r28{0} - 60 to local table
in proc proc1 adding addrExp r28{0} - 64 to local table
in proc proc1 adding addrExp r28{0} - 8 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 8 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 36 to local table
in proc proc1 adding addrExp r28{0} - 48 to local table
in proc proc1 adding addrExp r28{0} - 56 to local table
in proc proc1 adding addrExp r28{0} - 60 to local table
in proc proc1 adding addrExp r28{0} - 64 to local table
finding final parameters for proc1
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} - 8]
found new parameter m[r28{0} - 8]
potential param m[r28{0} - 12]
found new parameter m[r28{0} - 12]
assgn   63 *32* %pc := m[0x405394]
assgn  161 *32* m[r28 - 4] := m[0x4056b0]
assgn  165 *32* %pc := m[0x4056c0]
assgn  202 *32* m[r28 - 4] := m[0x4056b0]
assgn  206 *32* %pc := m[0x4056c4]
assgn  269 *32* m[r28 - 4] := m[0x4056b4]
assgn  273 *32* %pc := m[0x405994]
assgn  355 *32* m[r28 - 4] := m[0x4056b4]
assgn  359 *32* %pc := m[0x405998]
assgn  388 *32* m[r28 - 4] := m[0x4056b4]
assgn  392 *32* %pc := m[0x40599c]
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc2 ###
in proc proc2 adding addrExp r28{0} - 8 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 16 to local table
in proc proc2 adding addrExp r28{0} - 4 to local table
in proc proc2 adding addrExp r28{0} - 36 to local table
in proc proc2 adding addrExp r28{0} - 40 to local table
in proc proc2 adding addrExp r28{0} - 44 to local table
in proc proc2 adding addrExp r28{0} - 8 to local table
in proc proc2 adding addrExp r28{0} - 48 to local table
in proc proc2 adding addrExp r28{0} - 52 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 16 to local table
in proc proc2 adding addrExp r28{0} - 16 to local table
in proc proc2 adding addrExp r28{0} - 28 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 52 to local table
in proc proc2 adding addrExp r28{0} - 56 to local table
in proc proc2 adding addrExp r28{0} - 60 to local table
in proc proc2 adding addrExp r28{0} - 64 to local table
in proc proc2 adding addrExp r28{0} - 68 to local table
in proc proc2 adding addrExp r28{0} - 72 to local table
finding final parameters for proc2
potential param r28
found new parameter r28
potential param m[r28{0} - 8]
found new parameter m[r28{0} - 8]
potential param m[r28{0} - 12]
found new parameter m[r28{0} - 12]
potential param m[r28{0} - 16]
found new parameter m[r28{0} - 16]
potential param global11
potential param global12
potential param global13
potential param global14
potential param global15
assgn   13 *32* m[r28 - 4] := m[0x405024]
assgn   17 *32* %pc := m[0x4053c0]
assgn  273 *32* %pc := m[0x4053c4]
assgn  299 *32* m[r28 - 4] := m[0x40501c]
assgn  305 *32* %pc := m[0x4053c8]
assgn  328 *32* m[r28 - 4] := m[0x405004]
assgn  334 *32* %pc := m[0x4053ac]
assgn  363 *32* m[r28 - 4] := m[0x405018]
assgn  369 *32* %pc := m[0x4053ac]
assgn  392 *32* %pc := m[0x4053ac]
assgn  512 *32* %pc := m[0x405ec4]
assgn  558 *32* m[r28 - 4] := m[0x405000]
assgn  562 *32* %pc := m[0x4059a0]
assgn  748 *32* m[r28 - 4] := m[0x405014]
assgn  752 *32* %pc := m[0x4059a0]
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure main ###
in proc main adding addrExp r28{0} - 16 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 72 to local table
in proc main adding addrExp r28{0} - 68 to local table
in proc main adding addrExp r28{0} - 4 to local table
in proc main adding addrExp r28{0} - 40 to local table
in proc main adding addrExp r28{0} - 44 to local table
in proc main adding addrExp r28{0} - 48 to local table
in proc main adding addrExp r28{0} - 52 to local table
in proc main adding addrExp r28{0} - 56 to local table
in proc main adding addrExp r28{0} - 16 to local table
in proc main adding addrExp r28{0} - 16 to local table
in proc main adding addrExp r28{0} - 52 to local table
in proc main adding addrExp r28{0} - 56 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffc8 existing type unsigned int but added type void *
in proc main adding addrExp r28{0} - 60 to local table
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 52 to local table
in proc main adding addrExp r28{0} - 56 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffc8 existing type unsigned int but added type void *
in proc main adding addrExp r28{0} - 60 to local table
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 52 to local table
in proc main adding addrExp r28{0} - 56 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffc8 existing type unsigned int but added type void *
in proc main adding addrExp r28{0} - 60 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 52 to local table
in proc main adding addrExp r28{0} - 56 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffc8 existing type unsigned int but added type void *
in proc main adding addrExp r28{0} - 60 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 52 to local table
in proc main adding addrExp r28{0} - 56 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffc8 existing type unsigned int but added type void *
in proc main adding addrExp r28{0} - 60 to local table
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 52 to local table
in proc main adding addrExp r28{0} - 56 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffc8 existing type unsigned int but added type void *
in proc main adding addrExp r28{0} - 60 to local table
in proc main adding addrExp r28{0} - 16 to local table
in proc main adding addrExp r28{0} - 52 to local table
in proc main adding addrExp r28{0} - 56 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffc8 existing type unsigned int but added type void *
in proc main adding addrExp r28{0} - 60 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 52 to local table
in proc main adding addrExp r28{0} - 56 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffc8 existing type unsigned int but added type void *
in proc main adding addrExp r28{0} - 60 to local table
in proc main adding addrExp r28{0} - 52 to local table
in proc main adding addrExp r28{0} - 56 to local table
in proc main adding addrExp r28{0} - 60 to local table
in proc main adding addrExp r28{0} - 64 to local table
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 52 to local table
in proc main adding addrExp r28{0} - 56 to local table
in proc main adding addrExp r28{0} - 60 to local table
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 60 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffc4 existing type unsigned int but added type LPSTR
in proc main adding addrExp r28{0} - 64 to local table
in proc main adding addrExp r28{0} - 68 to local table
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 60 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffc4 existing type unsigned int but added type LPSTR
in proc main adding addrExp r28{0} - 64 to local table
in proc main adding addrExp r28{0} - 68 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 60 to local table
in proc main adding addrExp r28{0} - 64 to local table
in proc main adding addrExp r28{0} - 68 to local table
in proc main adding addrExp r28{0} - 16 to local table
in proc main adding addrExp r28{0} - 16 to local table
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 60 to local table
in proc main adding addrExp r28{0} - 64 to local table
in proc main adding addrExp r28{0} - 68 to local table
in proc main adding addrExp r28{0} - 72 to local table
in proc main adding addrExp r28{0} - 76 to local table
in proc main adding addrExp r28{0} - 80 to local table
in proc main adding addrExp r28{0} - 84 to local table
in proc main adding addrExp r28{0} - 88 to local table
in proc main adding addrExp r28{0} - 92 to local table
in proc main adding addrExp r28{0} - 96 to local table
in proc main adding addrExp r28{0} - 100 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure main ###
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 72 to local table
in proc main adding addrExp r28{0} - 68 to local table
could not set type for unknown parameter expression m[r28{0} + 4]
could not set type for unknown parameter expression m[r28{0} + 8]
could not set type for unknown parameter expression m[r28{0} + 12]
in proc main adding addrExp r28{0} - 52 to local table
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 60 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffc4 existing type unsigned int but added type LPSTR
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 60 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffc4 existing type unsigned int but added type LPSTR
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 12 to local table
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 8 to local table
in proc main adding addrExp r28{0} - 8 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc1 ###
in proc proc1 adding addrExp r28{0} - 8 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 20 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 48 to local table
in proc proc1 adding addrExp r28{0} - 8 to local table
in proc proc1 adding addrExp r28{0} - 48 to local table
in proc proc1 adding addrExp r28{0} - 8 to local table
in proc proc1 adding addrExp r28{0} - 48 to local table
in proc proc1 adding addrExp r28{0} - 56 to local table
in proc proc1 adding addrExp r28{0} - 60 to local table
in proc proc1 adding addrExp r28{0} - 64 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 64 to local table
in proc proc1 adding addrExp r28{0} - 60 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 60 to local table
in proc proc1 adding addrExp r28{0} - 64 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 8 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc2 ###
in proc proc2 adding addrExp r28{0} - 8 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 16 to local table
in proc proc2 adding addrExp r28{0} - 16 to local table
in proc proc2 adding addrExp r28{0} - 28 to local table
finding final parameters for proc1
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} - 8]
found new parameter m[r28{0} - 8]
potential param m[r28{0} - 12]
found new parameter m[r28{0} - 12]
finding final parameters for proc2
potential param r28
found new parameter r28
potential param m[r28{0} - 8]
found new parameter m[r28{0} - 8]
potential param m[r28{0} - 12]
found new parameter m[r28{0} - 12]
potential param m[r28{0} - 16]
found new parameter m[r28{0} - 16]
potential param global11
potential param global12
potential param global13
potential param global14
potential param global15
local ecx has type unsigned int that doesn't agree with type of define __size32 of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local eax has type int that doesn't agree with type of define __size32 of a library, why?
local edx has type unsigned int that doesn't agree with type of define /*signed?*/int of a library, why?
local ecx has type __size32 that doesn't agree with type of define /*signed?*/int of a library, why?
local edx has type /*signed?*/int that doesn't agree with type of define unsigned int of a library, why?
local ecx has type /*signed?*/int that doesn't agree with type of define unsigned int of a library, why?
local edx has type unsigned int that doesn't agree with type of define /*signed?*/int of a library, why?
local ecx has type unsigned int that doesn't agree with type of define __size32 of a library, why?
local edx has type /*signed?*/int that doesn't agree with type of define unsigned int of a library, why?
local ecx has type __size32 that doesn't agree with type of define void of a library, why?
local edx has type unsigned int that doesn't agree with type of define void of a library, why?
local eax has type int that doesn't agree with type of define unsigned int of a library, why?
local ecx has type int that doesn't agree with type of define /*signed?*/int of a library, why?
local edx has type int that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local eax has type /*signed?*/int that doesn't agree with type of define __size32 of a library, why?
local ecx has type int that doesn't agree with type of define void of a library, why?
local edx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
dest is not lib
call:   18 {*v** eax_1, *32* ecx, *u32* edx, *v* esp} := CALL LoadLibraryA(
                *LPCSTR* local4 := local45
              )
              Reaching definitions: r27=r27{0},   r28=r28{0} - 56,   r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 12]=m[r28{0} - 12]{0},
                m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 40]=r27{0},   m[r28{0} - 44]=r30{0},
                m[r28{0} - 48]=r31{0},   m[r28{0} - 52]=m[r28{0} - 52]{13},   m[r28{0} - 56]=%pc,
                m[r28{0} - 68]=m[r28{0} - 68]{0},   m[r28{0} - 72]=m[r28{0} - 72]{0},   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 32, r28{0} - 36 ),   %ZF=(r28{0} - 36) = 0,   %CF=(r28{0} - 4) <u 32
              Live variables: eax_1 in proc main
result:    0 *v** eax_1 := -
dest is not lib
call:   56 {*32* eax, *32* esi, *32* ecx, *32* edx, *v** ebx_1, *v* esp, *32* edi} := CALL proc1(
                *u32* local2 := local2
                *u32* local3 := local3
                *v** local5 := eax_1
                *u32* local6 := 0x76514b47
              )
              Reaching definitions: r24=r24{882} - 2,   r25=m[r28{0} - 8]{0} + 0x26f7,   r26=r26{42},   r27=r24{18},
                r28=r28{0} - 60,   r29=r28{0} - 4,   r30=0,   r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 12]=m[r28{0} - 12]{0},   m[r28{0} - 16]=r26{42},
                m[r28{0} - 40]=r27{0},   m[r28{0} - 44]=r30{0},   m[r28{0} - 48]=r31{0},   m[r28{0} - 52]=0x76514b47,
                m[r28{0} - 56]=r24{18},   m[r28{0} - 60]=%pc,   m[r28{0} - 68]=m[r28{0} - 68]{0},
                m[r28{0} - 72]=m[r28{0} - 72]{0},   tmp1=r24{882},   %flags=SUBFLAGS32( r24{882}, 2, r24{882} - 2 ),
                %ZF=(r24{882} - 2) = 0,   %CF=r24{882} <u 2
              Live variables: eax,  ebx_1 in proc main
result:    0 *32* eax := -
result:    0 *v** ebx_1 := -
dest is not lib
call:   90 {*32* eax, *32* esi, *32* ecx, *32* edx, *v** ebx_2, *v* esp, *32* edi} := CALL proc1(
                *u32* local2 := local2
                *u32* local3 := local3
                *v** local5 := ebx_1
                *u32* local6 :=  *u32*0xaadf7926
              )
              Reaching definitions: r24=r24{77} + r26{62},   r25=r25{69},   r26=r26{62},   r27=r27{56},
                r28=r28{0} - 60,   r29=r28{0} - 4,   r30=m[r28{0} - 12]{0} + 0x1c28,   r31=r31{56},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{77} + r26{62},   m[r28{0} - 12]=m[r28{0} - 12]{0},
                m[r28{0} - 16]=r26{42},   m[r28{0} - 40]=r27{0},   m[r28{0} - 44]=r30{0},   m[r28{0} - 48]=r31{0},
                m[r28{0} - 52]=0xaadf7926,   m[r28{0} - 56]=r27{56},   m[r28{0} - 60]=%pc,
                m[r28{0} - 68]=m[r28{0} - 68]{0},   m[r28{0} - 72]=m[r28{0} - 72]{0},   tmp1=r24{77},
                %flags=ADDFLAGS32( r24{77}, r26{62}, r24{77} + r26{62} ),
                %ZF=ADDFLAGS32( r24{77}, r26{62}, r24{77} + r26{62} ),
                %CF=ADDFLAGS32( r24{77}, r26{62}, r24{77} + r26{62} )
              Live variables: eax,  ebx_2 in proc main
result:    0 *32* eax := -
result:    0 *v** ebx_2 := -
dest is not lib
call:  131 {*32* eax, *j32* esi, *32* ecx, *u32* edx, *v** ebx_3, *v* esp, *32* edi} := CALL proc1(
                *u32* local2 := local2
                *u32* local3 := local3
                *v** local5 := ebx_2
                *u32* local6 :=  *u32*0xb2b88f55
              )
              Reaching definitions: r24=r24{115} | ((r24{77} + r26{62}) + (r24{77} + r26{62})),   r25=r24{107} + 253,
                r26=(r24{77} + r26{62}) + (r24{77} + r26{62}),   r27=r27{90},   r28=r28{0} - 60,   r29=r28{0} - 4,
                r30=r30{99} >> (r26{42} + r26{42}),   r31=r31{90},   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 8]{123},   m[r28{0} - 12]=m[r28{0} - 12]{0},   m[r28{0} - 16]=r26{42},
                m[r28{0} - 40]=r27{0},   m[r28{0} - 44]=r30{0},   m[r28{0} - 48]=r31{0},   m[r28{0} - 52]=0xb2b88f55,
                m[r28{0} - 56]=r27{90},   m[r28{0} - 60]=%pc,   m[r28{0} - 68]=m[r28{0} - 68]{0},
                m[r28{0} - 72]=m[r28{0} - 72]{0},   tmp1=r24{77} + r26{62},
                %flags=LOGICALFLAGS32( r24{115} | ((r24{77} + r26{62}) + (r24{77} + r26{62})) ),
                %ZF=LOGICALFLAGS32( r24{115} | ((r24{77} + r26{62}) + (r24{77} + r26{62})) ),
                %CF=LOGICALFLAGS32( r24{115} | ((r24{77} + r26{62}) + (r24{77} + r26{62})) )
              Live variables: eax,  ebx_3 in proc main
result:    0 *32* eax := -
result:    0 *v** ebx_3 := -
dest is not lib
call:  177 {*32* eax, *32* esi, *32* ecx, *32* edx, *v** ebx_4, *v* esp, *32* edi} := CALL proc1(
                *u32* local2 := local2
                *u32* local3 := local3
                *v** local5 := ebx_3
                *u32* local6 :=  *u32*0x9a7dd04f
              )
              Reaching definitions: r24=r24{890} + 5,   r25=(r26{42} + r26{42}) + 0x1f57,   r26=r26{161},
                r27=r27{131},   r28=r28{0} - 60,   r29=r28{0} - 4,   r30=r30{149},   r31=0xffffedc0,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{123},   m[r28{0} - 12]=r26{161},
                m[r28{0} - 16]=r26{42},   m[r28{0} - 40]=r27{0},   m[r28{0} - 44]=r30{0},   m[r28{0} - 48]=r31{0},
                m[r28{0} - 52]=0x9a7dd04f,   m[r28{0} - 56]=r27{131},   m[r28{0} - 60]=%pc,
                m[r28{0} - 68]=m[r28{0} - 68]{0},   m[r28{0} - 72]=m[r28{0} - 72]{0},   tmp1=r24{890} - 4,
                %flags=SUBFLAGS32( r24{890} + 5, 9, r24{890} - 4 ),   %ZF=(r24{890} - 4) = 0,   %CF=(r24{890} + 5) <u 9
              Live variables: eax,  ebx_4 in proc main
result:    0 *32* eax := -
result:    0 *v** ebx_4 := -
dest is not lib
call:  203 {*32* eax, *32* esi, *32* ecx, *32* edx, *v** ebx_5, *v* esp, *32* edi} := CALL proc1(
                *u32* local2 := local2
                *u32* local3 := local3
                *v** local5 := ebx_4
                *u32* local6 :=  *u32*0x9a7df84f
              )
              Reaching definitions: r24=r24{187} ^ (m[r28{0} - 8]{123} + 0x22ad),   r25=r26{42} + 0x1e8c,
                r26=m[r28{0} - 8]{123} + 0x22ad,   r27=r27{177},   r28=r28{0} - 60,   r29=r28{0} - 4,   r30=r30{177},
                r31=r31{177},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},
                m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{123},
                m[r28{0} - 12]=m[r28{0} - 12]{195},   m[r28{0} - 16]=r26{42},   m[r28{0} - 40]=r27{0},
                m[r28{0} - 44]=r30{0},   m[r28{0} - 48]=r31{0},   m[r28{0} - 52]=0x9a7df84f,   m[r28{0} - 56]=r27{177},
                m[r28{0} - 60]=%pc,   m[r28{0} - 68]=m[r28{0} - 68]{0},   m[r28{0} - 72]=m[r28{0} - 72]{0},
                tmp1=m[r28{0} - 8]{123},   %flags=LOGICALFLAGS32( r24{187} ^ (m[r28{0} - 8]{123} + 0x22ad) ),
                %ZF=LOGICALFLAGS32( r24{187} ^ (m[r28{0} - 8]{123} + 0x22ad) ),
                %CF=LOGICALFLAGS32( r24{187} ^ (m[r28{0} - 8]{123} + 0x22ad) )
              Live variables: eax,  ebx_5 in proc main
result:    0 *32* eax := -
result:    0 *v** ebx_5 := -
dest is not lib
call:  232 {*32* eax, *32* esi, *32* ecx, *32* edx, *v** ebx_6, *v* esp, *32* edi} := CALL proc1(
                *u32* local2 := local2
                *u32* local3 := local3
                *v** local5 := ebx_5
                *u32* local6 :=  *u32*0x8c687eb8
              )
              Reaching definitions: r24=r24{222},   r25=(r26{42} * 8) + 0x1a83,
                r26=(m[r28{0} - 12]{195} + m[r28{0} - 12]{195}) + 185,   r27=r27{203},   r28=r28{0} - 60,
                r29=r28{0} - 4,   r30=r30{203},   r31=r31{203},   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=r24{222},   m[r28{0} - 12]=m[r28{0} - 12]{195},   m[r28{0} - 16]=r26{42},
                m[r28{0} - 40]=r27{0},   m[r28{0} - 44]=r30{0},   m[r28{0} - 48]=r31{0},   m[r28{0} - 52]=0x8c687eb8,
                m[r28{0} - 56]=r27{203},   m[r28{0} - 60]=%pc,   m[r28{0} - 68]=m[r28{0} - 68]{0},
                m[r28{0} - 72]=m[r28{0} - 72]{0},   tmp1=r26{212},   %flags=LOGICALFLAGS32( r24{222} ),
                %ZF=LOGICALFLAGS32( r24{222} ),   %CF=LOGICALFLAGS32( r24{222} )
              Live variables: eax,  ebx_6 in proc main
result:    0 *32* eax := -
result:    0 *v** ebx_6 := -
dest is not lib
call:  246 {*32* eax, *32* esi, *32* ecx, *32* edx, *v** ebx_7, *v* esp, *32* edi} := CALL proc1(
                *u32* local2 := local2
                *u32* local3 := local3
                *v** local5 := ebx_6
                *u32* local6 := 0x77dd504f
              )
              Reaching definitions: r24=r24{222} + r24{222},   r25=r25{232},   r26=r26{232},   r27=r27{232},
                r28=r28{0} - 60,   r29=r28{0} - 4,   r30=r30{232},   r31=r31{232},   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=r24{222},   m[r28{0} - 12]=m[r28{0} - 12]{195},   m[r28{0} - 16]=r24{222} + r24{222},
                m[r28{0} - 40]=r27{0},   m[r28{0} - 44]=r30{0},   m[r28{0} - 48]=r31{0},   m[r28{0} - 52]=0x77dd504f,
                m[r28{0} - 56]=r27{232},   m[r28{0} - 60]=%pc,   m[r28{0} - 68]=m[r28{0} - 68]{0},
                m[r28{0} - 72]=m[r28{0} - 72]{0},   tmp1=r24{222},
                %flags=ADDFLAGS32( r24{222}, r24{222} + r24{222}, r24{222} + r24{222} ),
                %ZF=ADDFLAGS32( r24{222}, r24{222} + r24{222}, r24{222} + r24{222} ),
                %CF=ADDFLAGS32( r24{222}, r24{222} + r24{222}, r24{222} + r24{222} )
              Live variables: eax,  ebx_7 in proc main
result:    0 *32* eax := -
result:    0 *v** ebx_7 := -
dest is not lib
call:  263 {*32* eax, *u32* esi, *32* ecx, *32* edx, *32* ebx_8, *v* esp, *u32* edi} := CALL proc1(
                *u32* local2 := local2
                *u32* local3 := local3
                *v** local5 := ebx_7
                *u32* local6 := 0x3f4c41a5
              )
              Reaching definitions: r24=r24{253},   r25=r25{246},   r26=(m[r28{0} - 12]{195} * 4) + 0xb5d,
                r27=r27{246},   r28=r28{0} - 60,   r29=r28{0} - 4,   r30=r30{246},   r31=r31{246},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{222},   m[r28{0} - 12]=r24{253},
                m[r28{0} - 16]=r24{222} + r24{222},   m[r28{0} - 40]=r27{0},   m[r28{0} - 44]=r30{0},
                m[r28{0} - 48]=r31{0},   m[r28{0} - 52]=0x3f4c41a5,   m[r28{0} - 56]=r27{246},   m[r28{0} - 60]=%pc,
                m[r28{0} - 68]=m[r28{0} - 68]{0},   m[r28{0} - 72]=m[r28{0} - 72]{0},   tmp1=m[r28{0} - 12]{195},
                %flags=LOGICALFLAGS32( r24{253} ),   %ZF=LOGICALFLAGS32( r24{253} ),   %CF=LOGICALFLAGS32( r24{253} )
              Live variables: eax,  ebx_8 in proc main
result:    0 *32* eax := -
result:    0 *32* ebx_8 := -
dest is not lib
call:  274 {*32* eax, *32* ecx, *j32* edx, *v* esp} := CALL GetModuleFileNameA(
                *HMODULE* local7 := 0
                *LPSTR* local5 := 0x405ec8
                *DWORD* local6 := 260
              )
              Reaching definitions: r24=r24{263},   r25=r25{263},   r26=r26{263},   r27=r27{263},   r28=r28{0} - 64,
                r29=r28{0} - 4,   r30=r30{263},   r31=r31{263},   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=r24{222},   m[r28{0} - 12]=r24{253},   m[r28{0} - 16]=r24{222} + r24{222},
                m[r28{0} - 40]=r27{0},   m[r28{0} - 44]=r30{0},   m[r28{0} - 48]=r31{0},   m[r28{0} - 52]=260,
                m[r28{0} - 56]=0x405ec8,   m[r28{0} - 60]=0,   m[r28{0} - 64]=%pc,   m[r28{0} - 68]=m[r28{0} - 68]{0},
                m[r28{0} - 72]=m[r28{0} - 72]{0},   tmp1=m[r28{0} - 12]{195},   %flags=LOGICALFLAGS32( r24{253} ),
                %ZF=LOGICALFLAGS32( r24{253} ),   %CF=LOGICALFLAGS32( r24{253} )
              Live variables:  in proc main
dest is not lib
call:  306 {*32* eax, *j32* ecx, *u32* edx, *v* esp} := CALL lstrcpyA(
              )
              Reaching definitions: r24=r24{899} + 4,   r25=(r24{253} + r24{253}) + 187,
                r26=(r24{253} + r24{253}) | r30{288},   r27=r27{263},   r28=r28{0} - 60,   r29=r28{0} - 4,
                r30=r30{288},   r31=r31{263},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},
                m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=(r24{253} + r24{253}) | r30{288},   m[r28{0} - 12]=r24{253},
                m[r28{0} - 16]=r24{222} + r24{222},   m[r28{0} - 40]=r27{0},   m[r28{0} - 44]=r30{0},
                m[r28{0} - 48]=r31{0},   m[r28{0} - 52]=global35,   m[r28{0} - 56]=0x405db0,   m[r28{0} - 60]=%pc,
                m[r28{0} - 64]=%pc,   m[r28{0} - 68]=m[r28{0} - 68]{0},   m[r28{0} - 72]=m[r28{0} - 72]{0},
                tmp1=r24{899} - 2,   %flags=SUBFLAGS32( r24{899} + 4, 6, r24{899} - 2 ),   %ZF=(r24{899} - 2) = 0,
                %CF=(r24{899} + 4) <u 6
              Live variables:  in proc main
dest is not lib
call:  335 {*32* eax, *u32* ecx, *j32* edx, *v* esp} := CALL lstrcatA(
                *LPSTR* local9 := 0x405db0
                *LPSTR* local8 := local8
              )
              Reaching definitions: r24=r24{907} - 3,   r25=r26{316},   r26=r26{321},   r27=r27{263},   r28=r28{0} - 68
                r29=r28{0} - 4,   r30=(r24{253} * 8) + 0x2350,   r31=r31{263},   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=r26{321},   m[r28{0} - 12]=r24{253},   m[r28{0} - 16]=r24{222} + r24{222},
                m[r28{0} - 40]=r27{0},   m[r28{0} - 44]=r30{0},   m[r28{0} - 48]=r31{0},   m[r28{0} - 52]=global35,
                m[r28{0} - 56]=0x405db0,   m[r28{0} - 60]=m[r28{0} - 60]{328},   m[r28{0} - 64]=0x405db0,
                m[r28{0} - 68]=%pc,   m[r28{0} - 72]=m[r28{0} - 72]{0},   tmp1=r24{907},
                %flags=SUBFLAGS32( r24{907}, 3, r24{907} - 3 ),   %ZF=(r24{907} - 3) = 0,   %CF=r24{907} <u 3
              Live variables:  in proc main
dest is not lib
call:  370 {*32* eax, *32* ecx, *u32* edx, *v* esp} := CALL lstrcatA(
                *LPSTR* local9 := 0x405db0
                *LPSTR* local8 := local8
              )
              Reaching definitions: r24=r24{915} - 1,   r25=m[r28{0} - 8]{968} + m[r28{0} - 8]{968},
                r26=r26{351} | (m[r28{0} - 8]{968} + m[r28{0} - 8]{968}),   r27=r27{263},   r28=r28{0} - 68,
                r29=r28{0} - 4,   r30=r24{253} + r24{253},   r31=m[r28{0} - 8]{968},   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 8]{356},   m[r28{0} - 12]=r24{253},   m[r28{0} - 16]=r24{222} + r24{222},
                m[r28{0} - 40]=r27{0},   m[r28{0} - 44]=r30{0},   m[r28{0} - 48]=r31{0},   m[r28{0} - 52]=global35,
                m[r28{0} - 56]=0x405db0,   m[r28{0} - 60]=m[r28{0} - 60]{363},   m[r28{0} - 64]=0x405db0,
                m[r28{0} - 68]=%pc,   m[r28{0} - 72]=m[r28{0} - 72]{0},   tmp1=r24{915} - 1,
                %flags=LOGICALFLAGS32( r24{915} - 1 ),   %ZF=LOGICALFLAGS32( r24{915} - 1 ),
                %CF=LOGICALFLAGS32( r24{915} - 1 )
              Live variables:  in proc main
dest is not lib
call:  393 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL lstrcatA(
                *LPSTR* local9 := 0x405db0
                *LPSTR* local8 := 0x405ec8
              )
              Reaching definitions: r24=r24{924} + 1,   r25=(m[r28{0} - 8]{356} * 8) + 0x1008,   r26=r26{377},
                r27=r27{263},   r28=r28{0} - 68,   r29=r28{0} - 4,   r30=r24{253} + r24{253},   r31=m[r28{0} - 8]{968},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{356},   m[r28{0} - 12]=r26{377},
                m[r28{0} - 16]=r24{222} + r24{222},   m[r28{0} - 40]=r27{0},   m[r28{0} - 44]=r30{0},
                m[r28{0} - 48]=r31{0},   m[r28{0} - 52]=global35,   m[r28{0} - 56]=0x405db0,   m[r28{0} - 60]=0x405ec8,
                m[r28{0} - 64]=0x405db0,   m[r28{0} - 68]=%pc,   m[r28{0} - 72]=m[r28{0} - 72]{0},   tmp1=r24{924} - 1,
                %flags=SUBFLAGS32( r24{924} + 1, 2, r24{924} - 1 ),   %ZF=(r24{924} - 1) = 0,   %CF=(r24{924} + 1) <u 2
              Live variables:  in proc main
dest is not lib
call:  581 {*32* eax, *32* esi, *32* ecx, *32* edx, *32* ebx, *v* esp, *32* edi} := CALL proc1(
                *u32* m[esp_2 - 24] := m[esp_2 - 24]
                *u32* m[esp_2 - 20] := m[esp_2 - 20]
                *v** m[esp_2 - 8] := m[esp_2 - 8]
                *u32* m[esp_2 - 4] := m[esp_2 - 4]
              )
              Reaching definitions: r24=r24{940} - 1,   r25=r25{563},   r26=r26{563},   r27=r24{563},
                r28=r28{563} - 12,   r29=r29{563},   r30=r30{563},   r31=r31{563},   m[r28{0} + 4]=m[r28{0} + 4]{563},
                m[r28{0} + 8]=m[r28{0} + 8]{563},   m[r28{0} + 12]=m[r28{0} + 12]{563},
                m[r28{0} - 4]=m[r28{0} - 4]{563},   m[r28{0} - 8]=m[r28{0} - 8]{563},
                m[r28{0} - 12]=m[r28{0} - 12]{563},   m[r28{0} - 16]=m[r28{0} - 16]{563},
                m[r28{0} - 40]=m[r28{0} - 40]{563},   m[r28{0} - 44]=m[r28{0} - 44]{563},
                m[r28{0} - 48]=m[r28{0} - 48]{563},   m[r28{0} - 52]=m[r28{0} - 52]{563},
                m[r28{0} - 56]=m[r28{0} - 56]{563},   m[r28{0} - 60]=m[r28{0} - 60]{563},
                m[r28{0} - 64]=m[r28{0} - 64]{563},   m[r28{0} - 68]=m[r28{0} - 68]{563},
                m[r28{0} - 72]=m[r28{0} - 72]{563},   m[r28{0} - 76]=m[r28{0} - 76]{563},
                m[r28{0} - 80]=m[r28{0} - 80]{563},   m[r28{0} - 84]=m[r28{0} - 84]{563},
                m[r28{0} - 88]=m[r28{0} - 88]{563},   m[r28{0} - 92]=m[r28{0} - 92]{563},
                m[r28{0} - 96]=m[r28{0} - 96]{563},   m[r28{0} - 100]=m[r28{0} - 100]{563},
                m[r28{0} - 4]=m[r28{0} - 4]{563},   m[r28{0} - 8]=m[r28{0} - 8]{563},
                m[r28{0} - 12]=m[r28{0} - 12]{563},   m[r28{0} - 16]=m[r28{0} - 16]{563},
                m[r28{0} - 40]=m[r28{0} - 40]{563},   m[r28{0} - 44]=m[r28{0} - 44]{563},
                m[r28{0} - 48]=m[r28{0} - 48]{563},   m[r28{0} - 52]=m[r28{0} - 52]{563},
                m[r28{0} - 56]=m[r28{0} - 56]{563},   m[r28{0} - 60]=m[r28{0} - 60]{563},
                m[r28{0} - 64]=m[r28{0} - 64]{563},   m[r28{0} - 68]=m[r28{0} - 68]{563},
                m[r28{0} - 72]=m[r28{0} - 72]{563},   m[r28{0} - 76]=m[r28{0} - 76]{563},
                m[r28{0} - 80]=m[r28{0} - 80]{563},   m[r28{0} - 84]=m[r28{0} - 84]{563},
                m[r28{0} - 88]=m[r28{0} - 88]{563},   m[r28{0} - 92]=m[r28{0} - 92]{563},
                m[r28{0} - 96]=m[r28{0} - 96]{563},   m[r28{0} - 100]=m[r28{0} - 100]{563},   <all>=<all>{563},
                tmp1=r24{940} - 1,   %flags=LOGICALFLAGS32( r24{940} - 1 ),   %ZF=LOGICALFLAGS32( r24{940} - 1 ),
                %CF=LOGICALFLAGS32( r24{940} - 1 )
              Live variables: eax,  ebx in proc main
result:    0 *32* eax := -
result:    0 *32* ebx := -
dest is not lib
call:  617 {*32* eax, *32* esi, *32* ecx, *32* edx, *32* ebx, *v* esp, *32* edi} := CALL proc1(
                *u32* m[esp_2 - 24] := m[esp_2 - 24]
                *u32* m[esp_2 - 20] := m[esp_2 - 20]
                *v** m[esp_2 - 8] := m[esp_2 - 8]
                *u32* m[esp_2 - 4] := m[esp_2 - 4]
              )
              Reaching definitions: r24=r24{605} | r30{597},   r25=(r25{594} + r25{594}) + 4,   r26=r26{584} * 8,
                r27=r27{581},   r28=r28{563} - 12,   r29=r29{563},   r30=r30{597},   r31=(r24{583} + r24{583}) + 0xfb2,
                m[r28{0} + 4]=m[r28{0} + 4]{563},   m[r28{0} + 8]=m[r28{0} + 8]{563},
                m[r28{0} + 12]=m[r28{0} + 12]{563},   m[r28{0} - 4]=m[r28{0} - 4]{563},
                m[r28{0} - 8]=m[r28{0} - 8]{563},   m[r28{0} - 12]=m[r28{0} - 12]{563},
                m[r28{0} - 16]=m[r28{0} - 16]{563},   m[r28{0} - 40]=m[r28{0} - 40]{563},
                m[r28{0} - 44]=m[r28{0} - 44]{563},   m[r28{0} - 48]=m[r28{0} - 48]{563},
                m[r28{0} - 52]=m[r28{0} - 52]{563},   m[r28{0} - 56]=m[r28{0} - 56]{563},
                m[r28{0} - 60]=m[r28{0} - 60]{563},   m[r28{0} - 64]=m[r28{0} - 64]{563},
                m[r28{0} - 68]=m[r28{0} - 68]{563},   m[r28{0} - 72]=m[r28{0} - 72]{563},
                m[r28{0} - 76]=m[r28{0} - 76]{563},   m[r28{0} - 80]=m[r28{0} - 80]{563},
                m[r28{0} - 84]=m[r28{0} - 84]{563},   m[r28{0} - 88]=m[r28{0} - 88]{563},
                m[r28{0} - 92]=m[r28{0} - 92]{563},   m[r28{0} - 96]=m[r28{0} - 96]{563},
                m[r28{0} - 100]=m[r28{0} - 100]{563},   m[r28{0} - 4]=m[r28{0} - 4]{563},
                m[r28{0} - 8]=m[r28{0} - 8]{563},   m[r28{0} - 12]=m[r28{0} - 12]{563},
                m[r28{0} - 16]=m[r28{0} - 16]{563},   m[r28{0} - 40]=m[r28{0} - 40]{563},
                m[r28{0} - 44]=m[r28{0} - 44]{563},   m[r28{0} - 48]=m[r28{0} - 48]{563},
                m[r28{0} - 52]=m[r28{0} - 52]{563},   m[r28{0} - 56]=m[r28{0} - 56]{563},
                m[r28{0} - 60]=m[r28{0} - 60]{563},   m[r28{0} - 64]=m[r28{0} - 64]{563},
                m[r28{0} - 68]=m[r28{0} - 68]{563},   m[r28{0} - 72]=m[r28{0} - 72]{563},
                m[r28{0} - 76]=m[r28{0} - 76]{563},   m[r28{0} - 80]=m[r28{0} - 80]{563},
                m[r28{0} - 84]=m[r28{0} - 84]{563},   m[r28{0} - 88]=m[r28{0} - 88]{563},
                m[r28{0} - 92]=m[r28{0} - 92]{563},   m[r28{0} - 96]=m[r28{0} - 96]{563},
                m[r28{0} - 100]=m[r28{0} - 100]{563},   <all>=<all>{563},   tmp1=r26{584},
                %flags=LOGICALFLAGS32( r24{605} | r30{597} ),   %ZF=LOGICALFLAGS32( r24{605} | r30{597} ),
                %CF=LOGICALFLAGS32( r24{605} | r30{597} )
              Live variables: eax,  ebx in proc main
result:    0 *32* eax := -
result:    0 *32* ebx := -
dest is not lib
call:  628 {*32* eax, *32* esi, *32* ecx, *32* edx, *32* ebx, *v* esp, *32* edi} := CALL proc1(
                *u32* m[esp_2 - 24] := m[esp_2 - 24]
                *u32* m[esp_2 - 20] := m[esp_2 - 20]
                *v** m[esp_2 - 8] := m[esp_2 - 8]
                *u32* m[esp_2 - 4] := m[esp_2 - 4]
              )
              Reaching definitions: r24=r24{617},   r25=r25{617},   r26=r26{617},   r27=r27{617},   r28=r28{563} - 12,
                r29=r29{563},   r30=r30{617},   r31=r31{617},   m[r28{0} + 4]=m[r28{0} + 4]{563},
                m[r28{0} + 8]=m[r28{0} + 8]{563},   m[r28{0} + 12]=m[r28{0} + 12]{563},
                m[r28{0} - 4]=m[r28{0} - 4]{563},   m[r28{0} - 8]=m[r28{0} - 8]{563},
                m[r28{0} - 12]=m[r28{0} - 12]{563},   m[r28{0} - 16]=m[r28{0} - 16]{563},
                m[r28{0} - 40]=m[r28{0} - 40]{563},   m[r28{0} - 44]=m[r28{0} - 44]{563},
                m[r28{0} - 48]=m[r28{0} - 48]{563},   m[r28{0} - 52]=m[r28{0} - 52]{563},
                m[r28{0} - 56]=m[r28{0} - 56]{563},   m[r28{0} - 60]=m[r28{0} - 60]{563},
                m[r28{0} - 64]=m[r28{0} - 64]{563},   m[r28{0} - 68]=m[r28{0} - 68]{563},
                m[r28{0} - 72]=m[r28{0} - 72]{563},   m[r28{0} - 76]=m[r28{0} - 76]{563},
                m[r28{0} - 80]=m[r28{0} - 80]{563},   m[r28{0} - 84]=m[r28{0} - 84]{563},
                m[r28{0} - 88]=m[r28{0} - 88]{563},   m[r28{0} - 92]=m[r28{0} - 92]{563},
                m[r28{0} - 96]=m[r28{0} - 96]{563},   m[r28{0} - 100]=m[r28{0} - 100]{563},
                m[r28{0} - 4]=m[r28{0} - 4]{563},   m[r28{0} - 8]=m[r28{0} - 8]{563},
                m[r28{0} - 12]=m[r28{0} - 12]{563},   m[r28{0} - 16]=m[r28{0} - 16]{563},
                m[r28{0} - 40]=m[r28{0} - 40]{563},   m[r28{0} - 44]=m[r28{0} - 44]{563},
                m[r28{0} - 48]=m[r28{0} - 48]{563},   m[r28{0} - 52]=m[r28{0} - 52]{563},
                m[r28{0} - 56]=m[r28{0} - 56]{563},   m[r28{0} - 60]=m[r28{0} - 60]{563},
                m[r28{0} - 64]=m[r28{0} - 64]{563},   m[r28{0} - 68]=m[r28{0} - 68]{563},
                m[r28{0} - 72]=m[r28{0} - 72]{563},   m[r28{0} - 76]=m[r28{0} - 76]{563},
                m[r28{0} - 80]=m[r28{0} - 80]{563},   m[r28{0} - 84]=m[r28{0} - 84]{563},
                m[r28{0} - 88]=m[r28{0} - 88]{563},   m[r28{0} - 92]=m[r28{0} - 92]{563},
                m[r28{0} - 96]=m[r28{0} - 96]{563},   m[r28{0} - 100]=m[r28{0} - 100]{563},   <all>=<all>{563},
                tmp1=r26{584},   %flags=LOGICALFLAGS32( m[r29{563} - 4] ),   %ZF=LOGICALFLAGS32( m[r29{563} - 4] ),
                %CF=LOGICALFLAGS32( m[r29{563} - 4] )
              Live variables: eax,  ebx in proc main
result:    0 *32* eax := -
result:    0 *32* ebx := -
dest is not lib
call:  669 {*32* eax, *32* esi, *32* ecx, *32* edx, *32* ebx, *v* esp, *32* edi} := CALL proc1(
                *u32* m[esp_2 - 24] := m[esp_2 - 24]
                *u32* m[esp_2 - 20] := m[esp_2 - 20]
                *v** m[esp_2 - 8] := m[esp_2 - 8]
                *u32* m[esp_2 - 4] := m[esp_2 - 4]
              )
              Reaching definitions: r24=r24{656} ^ (r30{635} + r30{635}),   r25=r30{635} * 4,   r26=r30{635} + r30{635}
                r27=r27{628},   r28=r28{563} - 12,   r29=r29{563},   r30=r30{635},   r31=r31{646},
                m[r28{0} + 4]=m[r28{0} + 4]{563},   m[r28{0} + 8]=m[r28{0} + 8]{563},
                m[r28{0} + 12]=m[r28{0} + 12]{563},   m[r28{0} - 4]=m[r28{0} - 4]{563},
                m[r28{0} - 8]=m[r28{0} - 8]{563},   m[r28{0} - 12]=m[r28{0} - 12]{563},
                m[r28{0} - 16]=m[r28{0} - 16]{563},   m[r28{0} - 40]=m[r28{0} - 40]{563},
                m[r28{0} - 44]=m[r28{0} - 44]{563},   m[r28{0} - 48]=m[r28{0} - 48]{563},
                m[r28{0} - 52]=m[r28{0} - 52]{563},   m[r28{0} - 56]=m[r28{0} - 56]{563},
                m[r28{0} - 60]=m[r28{0} - 60]{563},   m[r28{0} - 64]=m[r28{0} - 64]{563},
                m[r28{0} - 68]=m[r28{0} - 68]{563},   m[r28{0} - 72]=m[r28{0} - 72]{563},
                m[r28{0} - 76]=m[r28{0} - 76]{563},   m[r28{0} - 80]=m[r28{0} - 80]{563},
                m[r28{0} - 84]=m[r28{0} - 84]{563},   m[r28{0} - 88]=m[r28{0} - 88]{563},
                m[r28{0} - 92]=m[r28{0} - 92]{563},   m[r28{0} - 96]=m[r28{0} - 96]{563},
                m[r28{0} - 100]=m[r28{0} - 100]{563},   m[r28{0} - 4]=m[r28{0} - 4]{563},
                m[r28{0} - 8]=m[r28{0} - 8]{563},   m[r28{0} - 12]=m[r28{0} - 12]{563},
                m[r28{0} - 16]=m[r28{0} - 16]{563},   m[r28{0} - 40]=m[r28{0} - 40]{563},
                m[r28{0} - 44]=m[r28{0} - 44]{563},   m[r28{0} - 48]=m[r28{0} - 48]{563},
                m[r28{0} - 52]=m[r28{0} - 52]{563},   m[r28{0} - 56]=m[r28{0} - 56]{563},
                m[r28{0} - 60]=m[r28{0} - 60]{563},   m[r28{0} - 64]=m[r28{0} - 64]{563},
                m[r28{0} - 68]=m[r28{0} - 68]{563},   m[r28{0} - 72]=m[r28{0} - 72]{563},
                m[r28{0} - 76]=m[r28{0} - 76]{563},   m[r28{0} - 80]=m[r28{0} - 80]{563},
                m[r28{0} - 84]=m[r28{0} - 84]{563},   m[r28{0} - 88]=m[r28{0} - 88]{563},
                m[r28{0} - 92]=m[r28{0} - 92]{563},   m[r28{0} - 96]=m[r28{0} - 96]{563},
                m[r28{0} - 100]=m[r28{0} - 100]{563},   <all>=<all>{563},   tmp1=r24{630} + r24{630},
                %flags=LOGICALFLAGS32( r24{656} ^ (r30{635} + r30{635}) ),
                %ZF=LOGICALFLAGS32( r24{656} ^ (r30{635} + r30{635}) ),
                %CF=LOGICALFLAGS32( r24{656} ^ (r30{635} + r30{635}) )
              Live variables: eax,  ebx in proc main
result:    0 *32* eax := -
result:    0 *32* ebx := -
dest is not lib
call:  725 {*32* eax, *32* esi, *32* ecx, *32* edx, *32* ebx, *v* esp, *32* edi} := CALL proc1(
                *u32* m[esp_2 - 24] := m[esp_2 - 24]
                *u32* m[esp_2 - 20] := m[esp_2 - 20]
                *v** m[esp_2 - 8] := m[esp_2 - 8]
                *u32* m[esp_2 - 4] := m[esp_2 - 4]
              )
              Reaching definitions: r24=r24{715},   r25=r25{708},   r26=r26{689} ^ r25{708},   r27=r27{669},
                r28=r28{563} - 12,   r29=r29{563},   r30=r30{675},   r31=r31{705},   m[r28{0} + 4]=m[r28{0} + 4]{563},
                m[r28{0} + 8]=m[r28{0} + 8]{563},   m[r28{0} + 12]=m[r28{0} + 12]{563},
                m[r28{0} - 4]=m[r28{0} - 4]{563},   m[r28{0} - 8]=m[r28{0} - 8]{563},
                m[r28{0} - 12]=m[r28{0} - 12]{563},   m[r28{0} - 16]=m[r28{0} - 16]{563},
                m[r28{0} - 40]=m[r28{0} - 40]{563},   m[r28{0} - 44]=m[r28{0} - 44]{563},
                m[r28{0} - 48]=m[r28{0} - 48]{563},   m[r28{0} - 52]=m[r28{0} - 52]{563},
                m[r28{0} - 56]=m[r28{0} - 56]{563},   m[r28{0} - 60]=m[r28{0} - 60]{563},
                m[r28{0} - 64]=m[r28{0} - 64]{563},   m[r28{0} - 68]=m[r28{0} - 68]{563},
                m[r28{0} - 72]=m[r28{0} - 72]{563},   m[r28{0} - 76]=m[r28{0} - 76]{563},
                m[r28{0} - 80]=m[r28{0} - 80]{563},   m[r28{0} - 84]=m[r28{0} - 84]{563},
                m[r28{0} - 88]=m[r28{0} - 88]{563},   m[r28{0} - 92]=m[r28{0} - 92]{563},
                m[r28{0} - 96]=m[r28{0} - 96]{563},   m[r28{0} - 100]=m[r28{0} - 100]{563},
                m[r28{0} - 4]=m[r28{0} - 4]{563},   m[r28{0} - 8]=m[r28{0} - 8]{563},
                m[r28{0} - 12]=m[r28{0} - 12]{563},   m[r28{0} - 16]=m[r28{0} - 16]{563},
                m[r28{0} - 40]=m[r28{0} - 40]{563},   m[r28{0} - 44]=m[r28{0} - 44]{563},
                m[r28{0} - 48]=m[r28{0} - 48]{563},   m[r28{0} - 52]=m[r28{0} - 52]{563},
                m[r28{0} - 56]=m[r28{0} - 56]{563},   m[r28{0} - 60]=m[r28{0} - 60]{563},
                m[r28{0} - 64]=m[r28{0} - 64]{563},   m[r28{0} - 68]=m[r28{0} - 68]{563},
                m[r28{0} - 72]=m[r28{0} - 72]{563},   m[r28{0} - 76]=m[r28{0} - 76]{563},
                m[r28{0} - 80]=m[r28{0} - 80]{563},   m[r28{0} - 84]=m[r28{0} - 84]{563},
                m[r28{0} - 88]=m[r28{0} - 88]{563},   m[r28{0} - 92]=m[r28{0} - 92]{563},
                m[r28{0} - 96]=m[r28{0} - 96]{563},   m[r28{0} - 100]=m[r28{0} - 100]{563},   <all>=<all>{563},
                tmp1=r24{671},   %flags=LOGICALFLAGS32( r24{715} ),   %ZF=LOGICALFLAGS32( r24{715} ),
                %CF=LOGICALFLAGS32( r24{715} )
              Live variables: eax,  ebx,  edi in proc main
result:    0 *32* eax := -
result:    0 *32* ebx := -
result:    0 *32* edi := -
dest is not lib
call:  800 {*32* eax, *32* esi, *32* ecx, *32* edx, *32* ebx, *v* esp, *32* edi} := CALL proc1(
                *u32* m[esp - 24] := m[esp - 24]
                *u32* m[esp - 20] := m[esp - 20]
                *v** local1 := m[esp - 8]
                *u32* local21 := m[esp - 4]
              )
              Reaching definitions: r24=r24{945} - 4,   r25=r25{776},   r26=r26{784} | r25{776},   r27=r24{753},
                r28=r28{753} - 12,   r29=r29{753},   r30=r30{764} + 0x577,   r31=r31{769} << (r30{764} + r30{764}),
                m[r28{0} + 4]=m[r28{0} + 4]{753},   m[r28{0} + 8]=m[r28{0} + 8]{753},
                m[r28{0} + 12]=m[r28{0} + 12]{753},   m[r28{0} - 4]=m[r28{0} - 4]{753},
                m[r28{0} - 8]=m[r28{0} - 8]{753},   m[r28{0} - 12]=m[r28{0} - 12]{753},
                m[r28{0} - 16]=m[r28{0} - 16]{753},   m[r28{0} - 40]=m[r28{0} - 40]{753},
                m[r28{0} - 44]=m[r28{0} - 44]{753},   m[r28{0} - 48]=m[r28{0} - 48]{753},
                m[r28{0} - 52]=m[r28{0} - 52]{753},   m[r28{0} - 56]=m[r28{0} - 56]{753},
                m[r28{0} - 60]=m[r28{0} - 60]{753},   m[r28{0} - 64]=m[r28{0} - 64]{753},
                m[r28{0} - 68]=m[r28{0} - 68]{753},   m[r28{0} - 72]=m[r28{0} - 72]{753},
                m[r28{0} - 76]=m[r28{0} - 76]{753},   m[r28{0} - 80]=m[r28{0} - 80]{753},
                m[r28{0} - 84]=m[r28{0} - 84]{753},   m[r28{0} - 88]=m[r28{0} - 88]{753},
                m[r28{0} - 92]=m[r28{0} - 92]{753},   m[r28{0} - 96]=m[r28{0} - 96]{753},
                m[r28{0} - 100]=m[r28{0} - 100]{753},   m[r28{0} - 4]=m[r28{0} - 4]{753},
                m[r28{0} - 8]=m[r28{0} - 8]{753},   m[r28{0} - 12]=m[r28{0} - 12]{753},
                m[r28{0} - 16]=m[r28{0} - 16]{753},   m[r28{0} - 40]=m[r28{0} - 40]{753},
                m[r28{0} - 44]=m[r28{0} - 44]{753},   m[r28{0} - 48]=m[r28{0} - 48]{753},
                m[r28{0} - 52]=m[r28{0} - 52]{753},   m[r28{0} - 56]=m[r28{0} - 56]{753},
                m[r28{0} - 60]=m[r28{0} - 60]{753},   m[r28{0} - 64]=m[r28{0} - 64]{753},
                m[r28{0} - 68]=m[r28{0} - 68]{753},   m[r28{0} - 72]=m[r28{0} - 72]{753},
                m[r28{0} - 76]=m[r28{0} - 76]{753},   m[r28{0} - 80]=m[r28{0} - 80]{753},
                m[r28{0} - 84]=m[r28{0} - 84]{753},   m[r28{0} - 88]=m[r28{0} - 88]{753},
                m[r28{0} - 92]=m[r28{0} - 92]{753},   m[r28{0} - 96]=m[r28{0} - 96]{753},
                m[r28{0} - 100]=m[r28{0} - 100]{753},   <all>=<all>{753},   tmp1=r24{945},
                %flags=SUBFLAGS32( r24{945}, 4, r24{945} - 4 ),   %ZF=(r24{945} - 4) = 0,   %CF=r24{945} <u 4
              Live variables: eax in proc main
result:    0 *32* eax := -
dest is not lib
call:  816 {*32* eax, *j32* esi, *j32* ecx, *j32* edx, *u32* ebx_9, *32** esp, *32** ebp, *32* edi} := CALL proc2(
                *32* m[esp - 20] := m[esp - 20]
                *32* local20 := m[esp - 16]
                *32* local0 := m[esp - 12]
              )
              Reaching definitions: r24=r24{810},   r25=r25{800},   r26=r26{806} + 0x1e9e,   r27=r27{800},
                r28=r28{753} - 4,   r29=r29{753},   r30=r30{800},   r31=r31{800},   m[r28{0} + 4]=m[r28{0} + 4]{753},
                m[r28{0} + 8]=m[r28{0} + 8]{753},   m[r28{0} + 12]=m[r28{0} + 12]{753},
                m[r28{0} - 4]=m[r28{0} - 4]{753},   m[r28{0} - 8]=m[r28{0} - 8]{753},
                m[r28{0} - 12]=m[r28{0} - 12]{753},   m[r28{0} - 16]=m[r28{0} - 16]{753},
                m[r28{0} - 40]=m[r28{0} - 40]{753},   m[r28{0} - 44]=m[r28{0} - 44]{753},
                m[r28{0} - 48]=m[r28{0} - 48]{753},   m[r28{0} - 52]=m[r28{0} - 52]{753},
                m[r28{0} - 56]=m[r28{0} - 56]{753},   m[r28{0} - 60]=m[r28{0} - 60]{753},
                m[r28{0} - 64]=m[r28{0} - 64]{753},   m[r28{0} - 68]=m[r28{0} - 68]{753},
                m[r28{0} - 72]=m[r28{0} - 72]{753},   m[r28{0} - 76]=m[r28{0} - 76]{753},
                m[r28{0} - 80]=m[r28{0} - 80]{753},   m[r28{0} - 84]=m[r28{0} - 84]{753},
                m[r28{0} - 88]=m[r28{0} - 88]{753},   m[r28{0} - 92]=m[r28{0} - 92]{753},
                m[r28{0} - 96]=m[r28{0} - 96]{753},   m[r28{0} - 100]=m[r28{0} - 100]{753},
                m[r28{0} - 4]=m[r28{0} - 4]{753},   m[r28{0} - 8]=m[r28{0} - 8]{753},
                m[r28{0} - 12]=m[r28{0} - 12]{753},   m[r28{0} - 16]=m[r28{0} - 16]{753},
                m[r28{0} - 40]=m[r28{0} - 40]{753},   m[r28{0} - 44]=m[r28{0} - 44]{753},
                m[r28{0} - 48]=m[r28{0} - 48]{753},   m[r28{0} - 52]=m[r28{0} - 52]{753},
                m[r28{0} - 56]=m[r28{0} - 56]{753},   m[r28{0} - 60]=m[r28{0} - 60]{753},
                m[r28{0} - 64]=m[r28{0} - 64]{753},   m[r28{0} - 68]=m[r28{0} - 68]{753},
                m[r28{0} - 72]=m[r28{0} - 72]{753},   m[r28{0} - 76]=m[r28{0} - 76]{753},
                m[r28{0} - 80]=m[r28{0} - 80]{753},   m[r28{0} - 84]=m[r28{0} - 84]{753},
                m[r28{0} - 88]=m[r28{0} - 88]{753},   m[r28{0} - 92]=m[r28{0} - 92]{753},
                m[r28{0} - 96]=m[r28{0} - 96]{753},   m[r28{0} - 100]=m[r28{0} - 100]{753},   <all>=<all>{753},
                tmp1=r26{806},   %flags=LOGICALFLAGS32( r24{810} ),   %ZF=LOGICALFLAGS32( r24{810} ),
                %CF=LOGICALFLAGS32( r24{810} )
              Live variables: ebp in proc main
result:    0 *32** ebp := -
dest is not lib
call:   97 {*u32* eax, *j32* ecx, *v* edx} := CALL StgCreateStorageEx(
              )
              Reaching definitions: r24=r24{69} + m[r28{0} + 4]{0},   r25=r25{50},   r26=m[r28{0} + 4]{0},
                r27=m[r28{0} + 8]{0},   r28=r28{0} - 116,   r29=r28{0} - 4,   r30=r24{63} + m[r28{0} + 4]{0},
                r31=m[r28{0} - 20]{24} + 69,   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 12]=m[r28{0} - 12]{76},
                m[r28{0} - 16]=r26{55},   m[r28{0} - 20]=m[r28{0} - 20]{24},
                m[r28{0} - 24]=r26{15} + m[r28{0} + 4]{0},   m[r28{0} - 36]=m[r28{0} - 36]{0},
                m[r28{0} - 48]=m[r28{0} - 48]{0},   m[r28{0} - 52]=r24{69} + m[r28{0} + 4]{0},
                m[r28{0} - 56]=m[r28{0} - 56]{0},   m[r28{0} - 60]=m[r28{0} - 60]{0},
                m[r28{0} - 64]=m[r28{0} - 64]{0},   m[r28{0} - 72]=r27{0},   m[r28{0} - 76]=r30{0},
                m[r28{0} - 80]=r31{0},   m[r28{0} - 84]=0,   m[r28{0} - 88]=0,   m[r28{0} - 92]=0,   m[r28{0} - 96]=0,
                m[r28{0} - 100]=0,   m[r28{0} - 104]=0,   m[r28{0} - 108]=0,   m[r28{0} - 112]=0,   m[r28{0} - 116]=%pc
                tmp1=m[r28{0} - 12]{0},   tmpb=tmpb{0},
                %flags=SALFLAGS32( m[(r28{0} - 4) - 8], m[r28{0} - 12]{0}, 1 ),
                %ZF=SALFLAGS32( m[(r28{0} - 4) - 8], m[r28{0} - 12]{0}, 1 ),
                %CF=SALFLAGS32( m[(r28{0} - 4) - 8], m[r28{0} - 12]{0}, 1 )
              Live variables: eax in proc proc1
result:    0 *u32* eax := -
dest is not lib
call:   64 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetModuleHandleA(
              )
              Reaching definitions: r24=r26{45} << r24{51},   r25=r24{51},   r26=r26{45},
                r27=r30{35} >> (m[r28{0} - 16]{0} + m[r28{0} - 16]{0}),   r28=r28{0} - 52,   r29=r28{0} - 4,
                r30=r30{35},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r26{45} << r24{51},
                m[r28{0} - 12]=m[r28{0} - 12]{0},   m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 36]=r27{0},
                m[r28{0} - 40]=r30{0},   m[r28{0} - 44]=r31{0},   m[r28{0} - 48]=0,   m[r28{0} - 52]=%pc,
                tmp1=r26{45},   %flags=SALFLAGS32( r26{45} << r24{51}, r26{45}, r24{51} ),
                %ZF=SALFLAGS32( r26{45} << r24{51}, r26{45}, r24{51} ),
                %CF=SALFLAGS32( r26{45} << r24{51}, r26{45}, r24{51} )
              Live variables: eax in proc proc2
result:    0 *32* eax := -
