Unknown library function AddAce
Unknown library function AreAllAccessesGranted
Unknown library function VirtualProtect
assgn   26 *32* %pc := m[0x403004]
is readonly
assgn   38 *32* %pc := m[0x403000]
is readonly
assgn   50 *32* %pc := m[0x40300c]
is readonly
assgn   63 *32* %pc := m[0x403010]
is readonly
assgn  161 *32* %pc := m[0x403014]
is readonly
assgn  193 *32* %pc := m[0x40301c]
is readonly
assgn  206 *32* %pc := m[0x40301c]
is readonly
assgn  236 *32* %pc := m[0x403018]
is readonly
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 84 to local table
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 20 to local table
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 32 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 52 to local table
in proc _start adding addrExp r28{0} - 52 to local table
in proc _start adding addrExp r28{0} - 56 to local table
in proc _start adding addrExp r28{0} - 60 to local table
in proc _start adding addrExp r28{0} - 60 to local table
in proc _start adding addrExp r28{0} - 64 to local table
in proc _start adding addrExp r28{0} - 60 to local table
in proc _start adding addrExp r28{0} - 64 to local table
in proc _start adding addrExp r28{0} - 68 to local table
in proc _start adding addrExp r28{0} - 72 to local table
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 52 to local table
in proc _start adding addrExp r28{0} - 52 to local table
in proc _start adding addrExp r28{0} - 52 to local table
in proc _start adding addrExp r28{0} - 52 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffcc existing type unsigned int but added type __size32 *
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 52 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffcc existing type unsigned int but added type __size32 *
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 84 to local table
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 84 to local table
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 84 to local table
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 84 to local table
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 84 to local table
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 84 to local table
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 84 to local table
in proc _start adding addrExp r28{0} - 52 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffcc existing type unsigned int but added type __size32 *
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 52 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffcc existing type unsigned int but added type __size32 *
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 84 to local table
in proc _start adding addrExp r28{0} - 76 to local table
finding final parameters for _start
potential param r28
found new parameter r28
potential param r31
found new parameter r31
potential param m[r28{0} - 84]
found new parameter m[r28{0} - 84]
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
in proc _start adding addrExp r28{0} - 84 to local table
in proc _start adding addrExp r28{0} - 52 to local table
in proc _start adding addrExp r28{0} - 52 to local table
in proc _start adding addrExp r28{0} - 52 to local table
in proc _start adding addrExp r28{0} - 52 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffcc existing type unsigned int but added type __size32 *
in proc _start adding addrExp r28{0} - 52 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffcc existing type unsigned int but added type __size32 *
in proc _start adding addrExp r28{0} - 84 to local table
in proc _start adding addrExp r28{0} - 84 to local table
in proc _start adding addrExp r28{0} - 84 to local table
in proc _start adding addrExp r28{0} - 84 to local table
in proc _start adding addrExp r28{0} - 52 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffcc existing type unsigned int but added type __size32 *
local ecx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local edx has type unsigned int that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local eax has type __size32 that doesn't agree with type of define /*signed?*/int of a library, why?
local eax has type /*signed?*/int that doesn't agree with type of define __size32 of a library, why?
local ecx has type void that doesn't agree with type of define /*signed?*/int of a library, why?
local edx has type void that doesn't agree with type of define unsigned int of a library, why?
local edx_1 has type unsigned short * that doesn't agree with type of define void * of a library, why?
local ecx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local edx has type unsigned int that doesn't agree with type of define void of a library, why?
dest is not lib
call:   27 {*32* eax_1, *v* ecx, *v* edx, *v* esp} := CALL AddAce(
              )
              Reaching definitions: r9=r9{0},   r27=r27{0},   r28=r28{0} - 52,   r29=r29{0},   r30=0,   r31=r31{0},
                m[r28{0} - 16]=r27{0},   m[r28{0} - 20]=r29{0},   m[r28{0} - 24]=r30{0},   m[r28{0} - 28]=r31{0},
                m[r28{0} - 32]=0,   m[r28{0} - 36]=0,   m[r28{0} - 40]=0,   m[r28{0} - 44]=0,   m[r28{0} - 48]=0,
                m[r28{0} - 52]=%pc,   m[r28{0} - 80]=m[r28{0} - 80]{0},   m[r28{0} - 84]=m[r28{0} - 84]{0},
                tmp1=r28{0},   %flags=LOGICALFLAGS32( 0 ),   %ZF=LOGICALFLAGS32( 0 ),   %CF=LOGICALFLAGS32( 0 )
              Live variables: eax_1 in proc _start
result:    0 *32* eax_1 := -
dest is not lib
call:   39 {*j32* eax, *v* ecx, *v* edx, *v* esp} := CALL AreAllAccessesGranted(
              )
              Reaching definitions: r9=r9{0},   r24=r24{27},   r25=r25{27},   r26=r26{27},   r27=r24{27} + 37,
                r28=r28{0} - 60,   r29=r29{0},   r30=0,   r31=r31{0},   m[r28{0} - 16]=r27{0},   m[r28{0} - 20]=r29{0},
                m[r28{0} - 24]=r30{0},   m[r28{0} - 28]=r31{0},   m[r28{0} - 32]=0,   m[r28{0} - 36]=0,
                m[r28{0} - 40]=0,   m[r28{0} - 44]=0,   m[r28{0} - 48]=0,   m[r28{0} - 52]=-1,   m[r28{0} - 56]=-1,
                m[r28{0} - 60]=%pc,   m[r28{0} - 80]=m[r28{0} - 80]{0},   m[r28{0} - 84]=m[r28{0} - 84]{0},
                tmp1=r24{27},   %flags=ADDFLAGS32( r24{27}, 37, r24{27} + 37 ),
                %ZF=ADDFLAGS32( r24{27}, 37, r24{27} + 37 ),   %CF=ADDFLAGS32( r24{27}, 37, r24{27} + 37 )
              Live variables: eax in proc _start
result:    0 *j32* eax := -
dest is not lib
call:   51 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL CloseHandle(
                *HANDLE* local0 := 89
              )
              Reaching definitions: r9=r9{0},   r24=r24{39},   r25=r25{39},   r26=r26{39},   r27=r27{239},
                r28=r28{0} - 64,   r29=r29{0},   r30=0,   r31=r31{0},   m[r28{0} - 16]=r27{0},   m[r28{0} - 20]=r29{0},
                m[r28{0} - 24]=r30{0},   m[r28{0} - 28]=r31{0},   m[r28{0} - 32]=0,   m[r28{0} - 36]=0,
                m[r28{0} - 40]=0,   m[r28{0} - 44]=0,   m[r28{0} - 48]=0,   m[r28{0} - 52]=-1,   m[r28{0} - 56]=-1,
                m[r28{0} - 60]=89,   m[r28{0} - 64]=%pc,   m[r28{0} - 80]=m[r28{0} - 80]{0},
                m[r28{0} - 84]=m[r28{0} - 84]{0},   tmp1=tmp1{240},   %flags=%flags{241},   %ZF=%ZF{242},
                %CF=%CF{243}
              Live variables:  in proc _start
dest is not lib
call:   64 {*32* eax, *j32* ecx, *u32* edx, *v* esp} := CALL VirtualProtect(
              )
              Reaching definitions: r9=r9{0},   r24=r28{0} - 40,   r25=r25{51},   r26=r26{51},   r27=r27{239},
                r28=r28{0} - 76,   r29=r29{0},   r30=0,   r31=r31{0},   m[r28{0} - 16]=r27{0},   m[r28{0} - 20]=r29{0},
                m[r28{0} - 24]=r30{0},   m[r28{0} - 28]=r31{0},   m[r28{0} - 32]=0,   m[r28{0} - 36]=0,
                m[r28{0} - 40]=0,   m[r28{0} - 44]=0,   m[r28{0} - 48]=0,   m[r28{0} - 52]=-1,   m[r28{0} - 56]=-1,
                m[r28{0} - 60]=r28{0} - 40,   m[r28{0} - 64]=64,   m[r28{0} - 68]=0x3000,   m[r28{0} - 72]=0x401000,
                m[r28{0} - 76]=%pc,   m[r28{0} - 80]=m[r28{0} - 80]{0},   m[r28{0} - 84]=m[r28{0} - 84]{0},
                tmp1=tmp1{240},   %flags=%flags{241},   %ZF=%ZF{242},   %CF=%CF{243}
              Live variables: ecx,  edx in proc _start
result:    0 *j32* ecx := -
result:    0 *u32* edx := -
dest is not lib
call:  162 {*j32* eax_3, *32** ecx_1, *u32* edx, *v* esp} := CALL LoadLibraryA(
                *LPCSTR* local4 := edx + 0x400ff8
              )
              Reaching definitions: r9=r9{288},   r24=r24{289},   r25=r25{290},   r26=r26{153} + 0x400ff8,
                r27=r27{292},   r28=(r28{0} - 72) - 8,   r29=0x400ff8,   r30=r30{294},   r31=r31{295},
                m[r28{0} - 16]=r27{0},   m[r28{0} - 20]=r29{0},   m[r28{0} - 24]=r30{0},   m[r28{0} - 28]=r31{0},
                m[r28{0} - 32]=0,   m[r28{0} - 36]=0,   m[r28{0} - 40]=0,   m[r28{0} - 44]=0,
                m[r28{0} - 48]=m[r28{0} - 48]{356},   m[r28{0} - 52]=m[r28{0} - 52]{357},   m[r28{0} - 56]=-1,
                m[r28{0} - 60]=r28{0} - 40,   m[r28{0} - 64]=64,   m[r28{0} - 68]=0x3000,   m[r28{0} - 72]=0x401000,
                m[r28{0} - 76]=r26{153} + 0x400ff8,   m[r28{0} - 80]=%pc,   m[r28{0} - 84]=m[r28{0} - 84]{360},
                tmp1=r26{153},   %flags=ADDFLAGS32( r26{153}, 0x400ff8, r26{153} + 0x400ff8 ),
                %ZF=ADDFLAGS32( r26{153}, 0x400ff8, r26{153} + 0x400ff8 ),
                %CF=ADDFLAGS32( r26{153}, 0x400ff8, r26{153} + 0x400ff8 )
              Live variables: eax_3,  ecx_1 in proc _start
result:    0 *j32* eax_3 := -
result:    0 *32** ecx_1 := -
dest is not lib
call:  207 {*32* eax, *32** ecx_1, *v** edx_1, *v* esp} := CALL GetProcAddress(
                *union* local5 := edi
                *c** local4 := eax + 0x400ffa
              )
              Reaching definitions: r9=truncu(32,8,r24{302} + 0x400ffa),   r24=r24{302},   r25=r24{302} + 0x400ffa,
                r26=r26{304},   r27=r27{305},   r28=(r28{0} - 72) - 12,   r29=0x400ff8,   r30=r30{307},   r31=r31{308},
                m[r28{0} - 16]=r27{0},   m[r28{0} - 20]=r29{0},   m[r28{0} - 24]=r30{0},   m[r28{0} - 28]=r31{0},
                m[r28{0} - 32]=0,   m[r28{0} - 36]=0,   m[r28{0} - 40]=0,   m[r28{0} - 44]=0,   m[r28{0} - 48]=r24{162}
                m[r28{0} - 52]=m[r28{0} - 52]{357},   m[r28{0} - 56]=-1,   m[r28{0} - 60]=r28{0} - 40,
                m[r28{0} - 64]=64,   m[r28{0} - 68]=0x3000,   m[r28{0} - 72]=0x401000,
                m[r28{0} - 76]=r24{302} + 0x400ffa,   m[r28{0} - 80]=r31{308},   m[r28{0} - 84]=%pc,   tmp1=tmp1{309},
                %flags=%flags{310},   %ZF=%ZF{311},   %CF=%CF{312}
              Live variables: eax,  ecx_1 in proc _start
result:    0 *32* eax := -
result:    0 *32** ecx_1 := -
dest is not lib
call:  194 {*32* eax, *32** ecx_1, *v** edx_1, *v* esp} := CALL GetProcAddress(
                *union* local5 := edi
                *union* local4 := eax
              )
              Reaching definitions: r9=r9{301},   r24=r24{186},   r25=r25{303},   r26=r26{304},   r27=r27{305},
                r28=(r28{0} - 72) - 12,   r29=0x400ff8,   r30=r30{307},   r31=r31{308},   m[r28{0} - 16]=r27{0},
                m[r28{0} - 20]=r29{0},   m[r28{0} - 24]=r30{0},   m[r28{0} - 28]=r31{0},   m[r28{0} - 32]=0,
                m[r28{0} - 36]=0,   m[r28{0} - 40]=0,   m[r28{0} - 44]=0,   m[r28{0} - 48]=r24{162},
                m[r28{0} - 52]=m[r28{0} - 52]{357},   m[r28{0} - 56]=-1,   m[r28{0} - 60]=r28{0} - 40,
                m[r28{0} - 64]=64,   m[r28{0} - 68]=0x3000,   m[r28{0} - 72]=0x401000,   m[r28{0} - 76]=r24{186},
                m[r28{0} - 80]=r31{308},   m[r28{0} - 84]=%pc,   tmp1=tmp1{309},   %flags=%flags{310},   %ZF=%ZF{311},
                %CF=%CF{312}
              Live variables: eax,  ecx_1 in proc _start
result:    0 *32* eax := -
result:    0 *32** ecx_1 := -
dest is not lib
call:  237 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL ExitProcess(
                *UINT* m[esp - 4] := m[esp - 4]
              )
              Reaching definitions: r9=r9{231},   r24=r24{231},   r25=r25{231},   r26=r26{231},   r27=r27{231},
                r28=r28{231} - 8,   r29=r29{231},   r30=r30{231},   r31=r31{231},   m[r28{0} - 16]=m[r28{0} - 16]{231},
                m[r28{0} - 20]=m[r28{0} - 20]{231},   m[r28{0} - 24]=m[r28{0} - 24]{231},
                m[r28{0} - 28]=m[r28{0} - 28]{231},   m[r28{0} - 32]=m[r28{0} - 32]{231},
                m[r28{0} - 36]=m[r28{0} - 36]{231},   m[r28{0} - 40]=m[r28{0} - 40]{231},
                m[r28{0} - 44]=m[r28{0} - 44]{231},   m[r28{0} - 48]=m[r28{0} - 48]{231},
                m[r28{0} - 52]=m[r28{0} - 52]{231},   m[r28{0} - 56]=m[r28{0} - 56]{231},
                m[r28{0} - 60]=m[r28{0} - 60]{231},   m[r28{0} - 64]=m[r28{0} - 64]{231},
                m[r28{0} - 68]=m[r28{0} - 68]{231},   m[r28{0} - 72]=m[r28{0} - 72]{231},
                m[r28{0} - 76]=m[r28{0} - 76]{231},   m[r28{0} - 80]=m[r28{0} - 80]{231},
                m[r28{0} - 84]=m[r28{0} - 84]{231},   m[r28{0} - 16]=m[r28{0} - 16]{231},
                m[r28{0} - 20]=m[r28{0} - 20]{231},   m[r28{0} - 24]=m[r28{0} - 24]{231},
                m[r28{0} - 28]=m[r28{0} - 28]{231},   m[r28{0} - 32]=m[r28{0} - 32]{231},
                m[r28{0} - 36]=m[r28{0} - 36]{231},   m[r28{0} - 40]=m[r28{0} - 40]{231},
                m[r28{0} - 44]=m[r28{0} - 44]{231},   m[r28{0} - 48]=m[r28{0} - 48]{231},
                m[r28{0} - 52]=m[r28{0} - 52]{231},   m[r28{0} - 56]=m[r28{0} - 56]{231},
                m[r28{0} - 60]=m[r28{0} - 60]{231},   m[r28{0} - 64]=m[r28{0} - 64]{231},
                m[r28{0} - 68]=m[r28{0} - 68]{231},   m[r28{0} - 72]=m[r28{0} - 72]{231},
                m[r28{0} - 76]=m[r28{0} - 76]{231},   m[r28{0} - 80]=m[r28{0} - 80]{231},
                m[r28{0} - 84]=m[r28{0} - 84]{231},   <all>=<all>{231},   tmp1=tmp1{231},   %flags=%flags{231},
                %ZF=%ZF{231},   %CF=%CF{231}
              Live variables:  in proc _start
