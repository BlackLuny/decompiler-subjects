// subject.h
// Generated by decompiling subject.exe
// using Reko decompiler version VERSION

/*
// Equivalence classes ////////////
Eq_1: (struct "Globals")
	globals_t (in globals : (ptr (struct "Globals")))
Eq_2: DWORD
	T_2 (in eax : Eq_2)
	T_12 (in eax_26 : Eq_2)
Eq_16: (segment "Eq_16")
	T_16 (in fs_30 : (ptr Eq_16))
Eq_17: (segment "Eq_17" (0 ui32 dw0000) (18 (ptr ptr32) ptr0018))
	T_17 (in fs : selector)
Eq_23: (union "Eq_23" (ptr32 u0) ((memptr (ptr Eq_17) ui32) u1))
	T_23 (in 0x00000000 : ptr32)
// Type Variables ////////////
globals_t: (in globals : (ptr (struct "Globals")))
  Class: Eq_1
  DataType: (ptr Eq_1)
  OrigDataType: (ptr (struct "Globals"))
T_2: (in eax : Eq_2)
  Class: Eq_2
  DataType: Eq_2
  OrigDataType: DWORD
T_3: (in ecx_15 : word32)
  Class: Eq_3
  DataType: word32
  OrigDataType: word32
T_4: (in 0x7FFFFC75 : word32)
  Class: Eq_3
  DataType: word32
  OrigDataType: word32
T_5: (in 0x00000001 : word32)
  Class: Eq_5
  DataType: word32
  OrigDataType: word32
T_6: (in ecx_15 - 0x00000001 : word32)
  Class: Eq_3
  DataType: word32
  OrigDataType: word32
T_7: (in 0x00000000 : word32)
  Class: Eq_3
  DataType: word32
  OrigDataType: word32
T_8: (in ecx_15 != 0x00000000 : bool)
  Class: Eq_8
  DataType: bool
  OrigDataType: bool
T_9: (in esp_23 : word32)
  Class: Eq_9
  DataType: word32
  OrigDataType: word32
T_10: (in ecx_24 : word32)
  Class: Eq_10
  DataType: word32
  OrigDataType: word32
T_11: (in SCZO_25 : byte)
  Class: Eq_11
  DataType: byte
  OrigDataType: byte
T_12: (in eax_26 : Eq_2)
  Class: Eq_2
  DataType: Eq_2
  OrigDataType: word32
T_13: (in SZO_27 : byte)
  Class: Eq_13
  DataType: byte
  OrigDataType: byte
T_14: (in C_28 : byte)
  Class: Eq_14
  DataType: byte
  OrigDataType: byte
T_15: (in ebx_29 : word32)
  Class: Eq_15
  DataType: word32
  OrigDataType: word32
T_16: (in fs_30 : (ptr Eq_16))
  Class: Eq_16
  DataType: (ptr Eq_16)
  OrigDataType: (ptr (segment))
T_17: (in fs : selector)
  Class: Eq_17
  DataType: (ptr Eq_17)
  OrigDataType: (ptr (segment (0 T_24 t0000) (18 T_19 t0018)))
T_18: (in 0x00000018 : word32)
  Class: Eq_18
  DataType: (memptr (ptr Eq_17) (ptr ptr32))
  OrigDataType: (memptr T_17 (struct (0 T_19 t0000)))
T_19: (in Mem0[fs:0x00000018:word32] : word32)
  Class: Eq_19
  DataType: (ptr ptr32)
  OrigDataType: (ptr (struct (0 T_22 t0000)))
T_20: (in 0x00000000 : word32)
  Class: Eq_20
  DataType: word32
  OrigDataType: word32
T_21: (in Mem0[fs:0x00000018:word32] + 0x00000000 : word32)
  Class: Eq_21
  DataType: word32
  OrigDataType: word32
T_22: (in Mem0[Mem0[fs:0x00000018:word32] + 0x00000000:word32] : word32)
  Class: Eq_22
  DataType: ptr32
  OrigDataType: ptr32
T_23: (in 0x00000000 : ptr32)
  Class: Eq_23
  DataType: Eq_23
  OrigDataType: (union (ptr32 u0) ((memptr T_17 (struct (0 ui32 dw0000))) u1))
T_24: (in Mem0[fs:0x00000000:word32] : word32)
  Class: Eq_24
  DataType: ui32
  OrigDataType: ui32
T_25: (in *fs->ptr0018 - fs->dw0000 : word32)
  Class: Eq_25
  DataType: ptr32
  OrigDataType: ptr32
T_26: (in 0x004020BA : word32)
  Class: Eq_26
  DataType: int32
  OrigDataType: int32
T_27: (in *fs->ptr0018 - fs->dw0000 + 0x004020BA : word32)
  Class: Eq_27
  DataType: (ptr code)
  OrigDataType: (ptr code)
*/
typedef struct Globals {
} Eq_1;

typedef DWORD Eq_2;

typedef struct Eq_16 {
} Eq_16;

typedef struct Eq_17 {
	ui32 dw0000;	// 0
	ptr32 * ptr0018;	// 18
} Eq_17;

typedef union Eq_23 {
	ptr32 u0;
	ui32 Eq_17::* u1;
} Eq_23;

