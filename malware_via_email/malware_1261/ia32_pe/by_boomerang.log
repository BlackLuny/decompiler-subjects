Unknown library function GetTickCount
Unknown library function GetCurrentProcessId
Unknown library function RpcStringFreeW
Unknown library function VirtualProtect
COMPUTED JUMP at 0x401c14, pDest = r31
assgn   45 *32* %pc := m[0x4020f4]
is readonly
assgn   57 *32* %pc := m[0x4020e8]
is readonly
assgn   61 *32* %pc := m[0x4020c4]
is readonly
assgn   82 *32* %pc := m[0x402118]
is readonly
assgn  128 *32* %pc := m[0x4020b8]
is readonly
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
in proc _start adding addrExp r28{0} - 4 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 20 to local table
in proc _start adding addrExp r28{0} - 20 to local table
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 32 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 40 to local table
finding final parameters for _start
local eax has type /*signed?*/int that doesn't agree with type of define __size32 of a library, why?
local eax has type __size32 that doesn't agree with type of define /*signed?*/int of a library, why?
local eax has type /*signed?*/int that doesn't agree with type of define __size32 of a library, why?
dest is not lib
call:   46 {*32* eax, *v* r25, *j32* r26, *v* r28} := CALL GetCommandLineA(
              )
              Reaching definitions: r24=r24{11} - r31{0},   r25=r25{0} | 0x1edb0dbf,   r26=r26{30} - 108,   r27=r27{38}
                r28=r28{0} - 16,   r30=r30{0},   r31=r31{0} + 69,   m[r28{0} - 4]=r27{0},   m[r28{0} - 8]=r31{0},
                m[r28{0} - 12]=r30{0},   m[r28{0} - 16]=%pc,   tmp1=r31{0},
                %flags=ADDFLAGS32( r31{0}, 69, r31{0} + 69 ),   %ZF=ADDFLAGS32( r31{0}, 69, r31{0} + 69 ),
                %CF=ADDFLAGS32( r31{0}, 69, r31{0} + 69 )
              Live variables:  in proc _start
dest is not lib
call:   58 {*32* eax, *v* r25, *v* r26, *v* r28} := CALL GetTickCount(
              )
              Reaching definitions: r24=r24{46} + 0x67c3a9f7,   r25=r25{46},   r26=r26{46} | r27{38},   r27=r27{38},
                r28=r28{0} - 16,   r30=r30{0},   r31=r31{0} + 165,   m[r28{0} - 4]=r27{0},   m[r28{0} - 8]=r31{0},
                m[r28{0} - 12]=r30{0},   m[r28{0} - 16]=%pc,   tmp1=r31{0} + 69,
                %flags=LOGICALFLAGS32( r26{46} | r27{38} ),   %ZF=LOGICALFLAGS32( r26{46} | r27{38} ),
                %CF=LOGICALFLAGS32( r26{46} | r27{38} )
              Live variables:  in proc _start
dest is not lib
call:   62 {*j32* eax, *j32* r25, *j32* r26, *v* r28} := CALL GetCurrentProcessId(
              )
              Reaching definitions: r24=r24{58},   r25=r25{58},   r26=r26{58},   r27=r27{38},   r28=r28{0} - 16,
                r30=r30{0},   r31=r31{0} + 165,   m[r28{0} - 4]=r27{0},   m[r28{0} - 8]=r31{0},   m[r28{0} - 12]=r30{0}
                m[r28{0} - 16]=%pc,   tmp1=r31{0} + 69,   %flags=LOGICALFLAGS32( r26{46} | r27{38} ),
                %ZF=LOGICALFLAGS32( r26{46} | r27{38} ),   %CF=LOGICALFLAGS32( r26{46} | r27{38} )
              Live variables:  in proc _start
dest is not lib
call:   83 {*j32* eax, *v* r25, *32* r26, *v* r28} := CALL RpcStringFreeW(
              )
              Reaching definitions: r24=r24{62} + 1,   r25=r25{62} + 88,   r26=r26{62} ^ r25{62},
                r27=r27{38} | 0x5a932131,   r28=r28{0} - 20,   r30=r30{0} ^ -66,   r31=(r31{0} - r24{62}) + 164,
                m[r28{0} - 4]=r27{0},   m[r28{0} - 8]=r31{0},   m[r28{0} - 12]=r30{0},   m[r28{0} - 16]=0,
                m[r28{0} - 20]=%pc,   tmp1=r31{0} + 165,
                %flags=SUBFLAGS32( r31{0} + 165, r24{62} + 1, (r31{0} - r24{62}) + 164 ),
                %ZF=((r31{0} - r24{62}) + 164) = 0,   %CF=(r31{0} + 165) <u (r24{62} + 1)
              Live variables: eax in proc _start
result:    0 *j32* eax := -
dest is not lib
call:  129 {*32* eax, *j32* r25, *j32* r26, *v* r28} := CALL VirtualProtect(
              )
              Reaching definitions: r24=r24{116} ^ -54,   r25=2,   r26=(r24{83} + r24{83}) + 0x80377e,   r27=r27{105},
                r28=r28{0} - 40,   r30=r30{91} | 115,   r31=r24{83} + 0x401bbf,   m[r28{0} - 4]=r27{0},
                m[r28{0} - 8]=r31{0},   m[r28{0} - 12]=r30{0},   m[r28{0} - 16]=0,   m[r28{0} - 20]=0,
                m[r28{0} - 24]=r28{0} - 20,   m[r28{0} - 28]=64,   m[r28{0} - 32]=0xb46,   m[r28{0} - 36]=0x401000,
                m[r28{0} - 40]=%pc,   tmp1=r24{83} + 0x401bbf,
                %flags=ADDFLAGS32( r24{83} + 0x401bbf, r24{83} + 0x401bbf, (r24{83} + r24{83}) + 0x80377e ),
                %ZF=ADDFLAGS32( r24{83} + 0x401bbf, r24{83} + 0x401bbf, (r24{83} + r24{83}) + 0x80377e ),
                %CF=ADDFLAGS32( r24{83} + 0x401bbf, r24{83} + 0x401bbf, (r24{83} + r24{83}) + 0x80377e )
              Live variables:  in proc _start
