Unknown library function AreAnyAccessesGranted
Unknown library function VirtualProtect
assgn   12 *32* r31 := m[0x403004]
is readonly
assgn 1383 *32* %pc := m[0x403000]
is readonly
assgn 1402 *32* %pc := m[0x40300c]
is readonly
assgn 1505 *32* %pc := m[0x403010]
is readonly
assgn 1549 *32* %pc := m[0x403018]
is readonly
assgn 1563 *32* %pc := m[0x403018]
is readonly
assgn 1594 *32* %pc := m[0x403014]
is readonly
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
in proc _start adding addrExp r28{0} - 20 to local table
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 32 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 52 to local table
in proc _start adding addrExp r28{0} - 56 to local table
finding final parameters for _start
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
local eax has type __size32 that doesn't agree with type of define /*signed?*/int of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local eax has type /*signed?*/int that doesn't agree with type of define __size32 of a library, why?
local ecx has type void that doesn't agree with type of define /*signed?*/int of a library, why?
local edx has type void that doesn't agree with type of define union { unsigned int x3; void * x4; } of a library, why?
local eax has type __size32 that doesn't agree with type of define unsigned int of a library, why?
local eax has type unsigned int that doesn't agree with type of define __size32 of a library, why?
local ecx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local edx has type union { unsigned int x3; void * x4; } that doesn't agree with type of define void of a library, why?
dest is not lib
call: 1384 {*j32* eax, *v* ecx, *v* edx, *v* esp} := CALL AreAnyAccessesGranted(
              )
              Reaching definitions: r1=r1{1372},   r9=r9{1372},   r24=r24{1372},   r25=r25{1372},   r26=r26{1372},
                r27=r27{1372},   r28=r28{1372} - 12,   r29=r29{1372},   r30=r30{1372} + r24{1372},
                r31=r27{1372} + (r31{1372} * 2),   m[r28{0} - 20]=m[r28{0} - 20]{1372},
                m[r28{0} - 24]=m[r28{0} - 24]{1372},   m[r28{0} - 28]=m[r28{0} - 28]{1372},
                m[r28{0} - 32]=m[r28{0} - 32]{1372},   m[r28{0} - 36]=m[r28{0} - 36]{1372},
                m[r28{0} - 40]=m[r28{0} - 40]{1372},   m[r28{0} - 44]=m[r28{0} - 44]{1372},
                m[r28{0} - 48]=m[r28{0} - 48]{1372},   m[r28{0} - 52]=m[r28{0} - 52]{1372},
                m[r28{0} - 56]=m[r28{0} - 56]{1372},   m[r28{0} - 20]=m[r28{0} - 20]{1372},
                m[r28{0} - 24]=m[r28{0} - 24]{1372},   m[r28{0} - 28]=m[r28{0} - 28]{1372},
                m[r28{0} - 32]=m[r28{0} - 32]{1372},   m[r28{0} - 36]=m[r28{0} - 36]{1372},
                m[r28{0} - 40]=m[r28{0} - 40]{1372},   m[r28{0} - 44]=m[r28{0} - 44]{1372},
                m[r28{0} - 48]=m[r28{0} - 48]{1372},   m[r28{0} - 52]=m[r28{0} - 52]{1372},
                m[r28{0} - 56]=m[r28{0} - 56]{1372},   <all>=<all>{1372},   tmp1=r30{1372},
                %flags=ADDFLAGS32( r30{1372}, r24{1372}, r30{1372} + r24{1372} ),
                %ZF=ADDFLAGS32( r30{1372}, r24{1372}, r30{1372} + r24{1372} ),
                %CF=ADDFLAGS32( r30{1372}, r24{1372}, r30{1372} + r24{1372} )
              Live variables: eax in proc _start
result:    0 *j32* eax := -
dest is not lib
call: 1403 {*32* eax, *j32* ecx, *union* edx, *v* esp} := CALL VirtualProtect(
              )
              Reaching definitions: r1=r1{1372},   r9=r9{1372},   r24=r28{1372} + 8,   r25=r25{1384},   r26=r26{1384},
                r27=r27{1372},   r28=r28{1372} - 28,   r29=r29{1372},   r30=r30{1597},
                r31=r27{1372} + (r31{1372} * 2),   m[r28{0} - 20]=m[r28{0} - 20]{1372},
                m[r28{0} - 24]=m[r28{0} - 24]{1372},   m[r28{0} - 28]=m[r28{0} - 28]{1372},
                m[r28{0} - 32]=m[r28{0} - 32]{1372},   m[r28{0} - 36]=m[r28{0} - 36]{1372},
                m[r28{0} - 40]=m[r28{0} - 40]{1372},   m[r28{0} - 44]=m[r28{0} - 44]{1372},
                m[r28{0} - 48]=m[r28{0} - 48]{1372},   m[r28{0} - 52]=m[r28{0} - 52]{1372},
                m[r28{0} - 56]=m[r28{0} - 56]{1372},   m[r28{0} - 20]=m[r28{0} - 20]{1372},
                m[r28{0} - 24]=m[r28{0} - 24]{1372},   m[r28{0} - 28]=m[r28{0} - 28]{1372},
                m[r28{0} - 32]=m[r28{0} - 32]{1372},   m[r28{0} - 36]=m[r28{0} - 36]{1372},
                m[r28{0} - 40]=m[r28{0} - 40]{1372},   m[r28{0} - 44]=m[r28{0} - 44]{1372},
                m[r28{0} - 48]=m[r28{0} - 48]{1372},   m[r28{0} - 52]=m[r28{0} - 52]{1372},
                m[r28{0} - 56]=m[r28{0} - 56]{1372},   <all>=<all>{1372},   tmp1=tmp1{1598},   %flags=%flags{1599},
                %ZF=%ZF{1600},   %CF=%CF{1601}
              Live variables: ecx in proc _start
result:    0 *j32* ecx := -
dest is not lib
call: 1506 {*u32* eax, *32** r25, *union* edx, *v* esp} := CALL LoadLibraryA(
                *LPCSTR* m[esp_80 - 28] := m[esp_80 - 28]
              )
              Reaching definitions: r1=r1{1648},   r9=r9{1649},   r24=r24{1650},   r25=r25{1651},
                r26=r26{1497} + r29{1655},   r27=r27{1653},   r28=(r28{1372} - 24) - 8,   r29=r29{1655},
                r30=r30{1656},   r31=r31{1657},   m[r28{0} - 20]=m[r28{0} - 20]{1372},
                m[r28{0} - 24]=m[r28{0} - 24]{1372},   m[r28{0} - 28]=m[r28{0} - 28]{1372},
                m[r28{0} - 32]=m[r28{0} - 32]{1372},   m[r28{0} - 36]=m[r28{0} - 36]{1372},
                m[r28{0} - 40]=m[r28{0} - 40]{1372},   m[r28{0} - 44]=m[r28{0} - 44]{1372},
                m[r28{0} - 48]=m[r28{0} - 48]{1372},   m[r28{0} - 52]=m[r28{0} - 52]{1372},
                m[r28{0} - 56]=m[r28{0} - 56]{1372},   m[r28{0} - 20]=m[r28{0} - 20]{1372},
                m[r28{0} - 24]=m[r28{0} - 24]{1372},   m[r28{0} - 28]=m[r28{0} - 28]{1372},
                m[r28{0} - 32]=m[r28{0} - 32]{1372},   m[r28{0} - 36]=m[r28{0} - 36]{1372},
                m[r28{0} - 40]=m[r28{0} - 40]{1372},   m[r28{0} - 44]=m[r28{0} - 44]{1372},
                m[r28{0} - 48]=m[r28{0} - 48]{1372},   m[r28{0} - 52]=m[r28{0} - 52]{1372},
                m[r28{0} - 56]=m[r28{0} - 56]{1372},   <all>=<all>{1372},   tmp1=r26{1497},
                %flags=ADDFLAGS32( r26{1497}, r29{1655}, r26{1497} + r29{1655} ),
                %ZF=ADDFLAGS32( r26{1497}, r29{1655}, r26{1497} + r29{1655} ),
                %CF=ADDFLAGS32( r26{1497}, r29{1655}, r26{1497} + r29{1655} )
              Live variables: r25,  eax in proc _start
result:    0 *u32* eax := -
result:    0 *32** r25 := -
dest is not lib
call: 1564 {*u32* eax, *32** r25, *union* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* m[esp_80 - 32] := m[esp_80 - 32]
                *c** m[esp_80 - 28] := m[esp_80 - 28]
              )
              Reaching definitions: r1=truncu(32,16,(r25{1534} + r26{1553}) + 2),
                r9=truncu(32,8,(r25{1534} + r26{1553}) + 2),   r24=r24{1667},   r25=(r25{1534} + r26{1553}) + 2,
                r26=r26{1553},   r27=r27{1670},   r28=(r28{1372} - 24) - 12,   r29=r29{1672},
                r30=r24{1667} + (r30{1673} * 4),   r31=r31{1674},   m[r28{0} - 20]=m[r28{0} - 20]{1372},
                m[r28{0} - 24]=m[r28{0} - 24]{1372},   m[r28{0} - 28]=m[r28{0} - 28]{1372},
                m[r28{0} - 32]=m[r28{0} - 32]{1372},   m[r28{0} - 36]=m[r28{0} - 36]{1372},
                m[r28{0} - 40]=m[r28{0} - 40]{1372},   m[r28{0} - 44]=m[r28{0} - 44]{1372},
                m[r28{0} - 48]=m[r28{0} - 48]{1372},   m[r28{0} - 52]=m[r28{0} - 52]{1372},
                m[r28{0} - 56]=m[r28{0} - 56]{1372},   m[r28{0} - 20]=m[r28{0} - 20]{1372},
                m[r28{0} - 24]=m[r28{0} - 24]{1372},   m[r28{0} - 28]=m[r28{0} - 28]{1372},
                m[r28{0} - 32]=m[r28{0} - 32]{1372},   m[r28{0} - 36]=m[r28{0} - 36]{1372},
                m[r28{0} - 40]=m[r28{0} - 40]{1372},   m[r28{0} - 44]=m[r28{0} - 44]{1372},
                m[r28{0} - 48]=m[r28{0} - 48]{1372},   m[r28{0} - 52]=m[r28{0} - 52]{1372},
                m[r28{0} - 56]=m[r28{0} - 56]{1372},   <all>=<all>{1372},   tmp1=r25{1534},
                %flags=LOGICALFLAGS32( r25{1534} ),   %ZF=LOGICALFLAGS32( r25{1534} ),
                %CF=LOGICALFLAGS32( r25{1534} )
              Live variables: r25,  eax in proc _start
result:    0 *u32* eax := -
result:    0 *32** r25 := -
dest is not lib
call: 1550 {*u32* eax, *32** r25, *union* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* m[esp_80 - 32] := m[esp_80 - 32]
                *c** m[esp_80 - 28] := m[esp_80 - 28]
              )
              Reaching definitions: r1=truncu(32,16,zfill(16,32,truncu(32,16,r25{1534}))),
                r9=truncu(32,8,zfill(16,32,truncu(32,16,r25{1534}))),   r24=r24{1667},
                r25=zfill(16,32,truncu(32,16,r25{1534})),   r26=r26{1669},   r27=r27{1670},   r28=(r28{1372} - 24) - 12
                r29=r29{1672},   r30=r24{1667} + (r30{1673} * 4),   r31=r31{1674},
                m[r28{0} - 20]=m[r28{0} - 20]{1372},   m[r28{0} - 24]=m[r28{0} - 24]{1372},
                m[r28{0} - 28]=m[r28{0} - 28]{1372},   m[r28{0} - 32]=m[r28{0} - 32]{1372},
                m[r28{0} - 36]=m[r28{0} - 36]{1372},   m[r28{0} - 40]=m[r28{0} - 40]{1372},
                m[r28{0} - 44]=m[r28{0} - 44]{1372},   m[r28{0} - 48]=m[r28{0} - 48]{1372},
                m[r28{0} - 52]=m[r28{0} - 52]{1372},   m[r28{0} - 56]=m[r28{0} - 56]{1372},
                m[r28{0} - 20]=m[r28{0} - 20]{1372},   m[r28{0} - 24]=m[r28{0} - 24]{1372},
                m[r28{0} - 28]=m[r28{0} - 28]{1372},   m[r28{0} - 32]=m[r28{0} - 32]{1372},
                m[r28{0} - 36]=m[r28{0} - 36]{1372},   m[r28{0} - 40]=m[r28{0} - 40]{1372},
                m[r28{0} - 44]=m[r28{0} - 44]{1372},   m[r28{0} - 48]=m[r28{0} - 48]{1372},
                m[r28{0} - 52]=m[r28{0} - 52]{1372},   m[r28{0} - 56]=m[r28{0} - 56]{1372},   <all>=<all>{1372},
                tmp1=r25{1534},   %flags=LOGICALFLAGS32( r25{1534} ),   %ZF=LOGICALFLAGS32( r25{1534} ),
                %CF=LOGICALFLAGS32( r25{1534} )
              Live variables: r25,  eax in proc _start
result:    0 *u32* eax := -
result:    0 *32** r25 := -
dest is not lib
call: 1595 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL ExitProcess(
                *UINT* m[esp - 4] := m[esp - 4]
              )
              Reaching definitions: r1=r1{1589},   r9=r9{1589},   r24=r24{1589},   r25=r25{1589},   r26=r26{1589},
                r27=r27{1589},   r28=r28{1589} - 8,   r29=r29{1589},   r30=r30{1589},   r31=r31{1589},
                m[r28{0} - 20]=m[r28{0} - 20]{1589},   m[r28{0} - 24]=m[r28{0} - 24]{1589},
                m[r28{0} - 28]=m[r28{0} - 28]{1589},   m[r28{0} - 32]=m[r28{0} - 32]{1589},
                m[r28{0} - 36]=m[r28{0} - 36]{1589},   m[r28{0} - 40]=m[r28{0} - 40]{1589},
                m[r28{0} - 44]=m[r28{0} - 44]{1589},   m[r28{0} - 48]=m[r28{0} - 48]{1589},
                m[r28{0} - 52]=m[r28{0} - 52]{1589},   m[r28{0} - 56]=m[r28{0} - 56]{1589},
                m[r28{0} - 20]=m[r28{0} - 20]{1589},   m[r28{0} - 24]=m[r28{0} - 24]{1589},
                m[r28{0} - 28]=m[r28{0} - 28]{1589},   m[r28{0} - 32]=m[r28{0} - 32]{1589},
                m[r28{0} - 36]=m[r28{0} - 36]{1589},   m[r28{0} - 40]=m[r28{0} - 40]{1589},
                m[r28{0} - 44]=m[r28{0} - 44]{1589},   m[r28{0} - 48]=m[r28{0} - 48]{1589},
                m[r28{0} - 52]=m[r28{0} - 52]{1589},   m[r28{0} - 56]=m[r28{0} - 56]{1589},   <all>=<all>{1589},
                tmp1=tmp1{1589},   %flags=%flags{1589},   %ZF=%ZF{1589},   %CF=%CF{1589}
              Live variables:  in proc _start
