Unknown library function VirtualProtect
Unknown library function CreateJobSet
assgn    3 *32* %pc := m[0x401008]
is readonly
assgn    8 *32* r24 := m[24]
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
in proc proc1 adding addrExp r28{0} - 4 to local table
finding final parameters for proc1
potential param r29
found new parameter r29
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
in proc proc2 adding addrExp r28{0} - 4 to local table
in proc proc2 adding addrExp r28{0} - 8 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
finding final parameters for proc2
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
assgn   80 *32* %pc := m[0x401004]
is readonly
assgn  143 *32* %pc := m[0x401000]
is readonly
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
in proc _start adding addrExp r28{0} - 32 to local table
in proc _start adding addrExp r28{0} - 4 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 20 to local table
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 8 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffff8 existing type unsigned int but added type void *
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} to local table
finding final parameters for _start
potential param r28
found new parameter r28
potential param r29
found new parameter r29
potential param m[r28{0} - 32]
found new parameter m[r28{0} - 32]
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
in proc _start adding addrExp r28{0} - 32 to local table
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 20 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 28 to local table
finding final parameters for proc1
potential param r29
found new parameter r29
finding final parameters for _start
potential param r28
found new parameter r28
potential param r29
found new parameter r29
potential param m[r28{0} - 32]
found new parameter m[r28{0} - 32]
finding final parameters for _start
potential param r28
found new parameter r28
potential param r29
found new parameter r29
potential param m[r28{0} - 32]
found new parameter m[r28{0} - 32]
finding final parameters for proc2
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for _start
potential param r28
found new parameter r28
potential param r29
found new parameter r29
potential param m[r28{0} - 32]
found new parameter m[r28{0} - 32]
local ecx has type __size32 * that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
dest is not lib
call:    4 {*32* eax, *32* r25, *32* r26, *v* r28} := CALL CreateJobSet(
              )
              Reaching definitions: r28=r28{0} - 4,   r29=r29{0},   m[r28{0} - 4]=%pc
              Live variables:  in proc proc1
dest is not lib
call:   14 {*v* eax, *v* ecx, *v* r26, *v** esp_1} := CALL proc1(
                *32** ebp := a[param2]
              )
              Reaching definitions: r8=0 - r8{0},   r24=(r24{0}@31:8) | zfill(8,32,0 - r8{0}),   r28=r28{0} - 36,
                r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},   m[r28{0} - 32]=m[r28{0} - 32]{0},   m[r28{0} - 36]=%pc,
                tmp1=r28{0} - 4,   tmpb=r8{0},   %flags=SUBFLAGS32( r28{0} - 4, 28, r28{0} - 32 ),
                %ZF=(r28{0} - 32) = 0,   %CF=(r28{0} - 4) <u 28
              Live variables: esp_1 in proc _start
result:    0 *v** esp_1 := -
dest is not lib
call:   81 {*32* eax, *v* ecx, *v* r26, *v* esp} := CALL VirtualProtect(
              )
              Reaching definitions: r8=truncu(32,8,r28{0} - 8),   r24=r28{0} - 8,   r25=r25{55},   r26=r26{14},
                r28=r28{14} - 20,   r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},   m[r28{0} - 12]=m[r28{0} - 12]{25},
                m[r28{0} - 16]=m[r28{0} - 16]{21},   m[r28{0} - 20]=m[r28{0} - 20]{59},   m[r28{0} - 24]=r24{64},
                m[r28{0} - 32]=m[r28{0} - 32]{0},   m[r28{0} - 36]=%pc,   tmp1=r24{50} + 223,   tmpb=r8{0},
                %flags=SUBFLAGS32( r24{50} + 223, m[(r28{0} - 4) - 28], r24{64} ),   %ZF=r24{64} = 0,
                %CF=(r24{50} + 223) <u m[(r28{0} - 4) - 28]
              Live variables:  in proc _start
dest is not lib
call:  144 {*v** eax_2, *v* ecx, *32* r26, *v* esp} := CALL VirtualAlloc(
                *LPVOID* m[esp_1 - 32] := m[esp_1 - 32]
                *DWORD* m[esp_1 - 28] := m[esp_1 - 28]
                *DWORD* m[esp_1 - 24] := m[esp_1 - 24]
                *DWORD* m[esp_1 - 20] := m[esp_1 - 20]
              )
              Reaching definitions: r8=r8{223},   r10=r10{130},   r24=r24{224},   r25=r25{97},
                r26=(0@31:8) | zfill(8,32,r10{130}),   r27=r27{124} + r24{64},   r28=r28{14} - 36,   r29=r28{0} - 4,
                r30=r24{64},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{246},
                m[r28{0} - 12]=m[r28{0} - 12]{25},   m[r28{0} - 16]=m[r28{0} - 16]{21},
                m[r28{0} - 20]=m[r28{0} - 20]{59},   m[r28{0} - 24]=r24{64},
                m[r28{0} - 28]=(0@31:8) | zfill(8,32,r10{130}),   m[r28{0} - 32]=m[r28{0} - 32]{0},
                m[r28{0} - 36]=%pc,   tmp1=r27{124},   tmpb=r8{0},   %flags=LOGICALFLAGS32( 0 ),
                %ZF=LOGICALFLAGS32( 0 ),   %CF=LOGICALFLAGS32( 0 )
              Live variables: eax_2 in proc _start
result:    0 *v** eax_2 := -
dest is not lib
call:  155 {*8* r8, *32* ecx, *v* esp} := CALL proc2(
                *32* m[esp_1 - 28] := m[esp_1 - 28]
                *8** m[esp_1 - 24] := m[esp_1 - 24]
                *8** m[esp_1 - 20] := m[esp_1 - 20]
              )
              Reaching definitions: r8=r8{223},   r10=r10{130},   r24=r24{144},   r25=r25{144},   r26=r26{144},
                r27=r27{124} + r24{64},   r28=r28{14} - 32,   r29=r28{0} - 4,   r30=r24{64},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=r24{144},   m[r28{0} - 12]=m[r28{0} - 12]{25},   m[r28{0} - 16]=m[r28{0} - 16]{21},
                m[r28{0} - 20]=m[r28{0} - 20]{59},   m[r28{0} - 24]=r24{64},
                m[r28{0} - 28]=(0@31:8) | zfill(8,32,r10{130}),   m[r28{0} - 32]=m[r28{0} - 32]{0},
                m[r28{0} - 36]=%pc,   tmp1=r27{124},   tmpb=r8{0},   %flags=LOGICALFLAGS32( 0 ),
                %ZF=LOGICALFLAGS32( 0 ),   %CF=LOGICALFLAGS32( 0 )
              Live variables:  in proc _start
dest is not lib
call:  177 {*8* r8, *32* ecx, *v* esp} := CALL proc2(
                *32* m[esp_1 - 28] := m[esp_1 - 28]
                *8** m[esp_1 - 24] := m[esp_1 - 24]
                *8** m[esp_1 - 20] := m[esp_1 - 20]
              )
              Reaching definitions: r8=truncu(32,8,r24{167}),   r10=r10{130},   r24=r24{167},   r25=20,   r26=r26{144},
                r27=r27{124} + r24{64},   r28=(r28{14} - 16) - 16,   r29=r28{0} - 4,   r30=r30{235},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{144},   m[r28{0} - 12]=m[r28{0} - 12]{25},
                m[r28{0} - 16]=m[r28{0} - 16]{21},   m[r28{0} - 20]=m[r28{0} - 20]{59},   m[r28{0} - 24]=r24{64},
                m[r28{0} - 28]=m[r28{0} - 28]{247},   m[r28{0} - 32]=m[r28{0} - 32]{0},   m[r28{0} - 36]=%pc,
                tmp1=r24{64},   tmpb=r8{0},   %flags=ADDFLAGS32( r24{64}, m[20 + r30{235}], r24{167} ),
                %ZF=ADDFLAGS32( r24{64}, m[20 + r30{235}], r24{167} ),
                %CF=ADDFLAGS32( r24{64}, m[20 + r30{235}], r24{167} )
              Live variables:  in proc _start
dest is not lib
call:  216 {*8* r8, *32* ecx, *v* esp} := CALL proc2(
                *32* m[esp_1 - 28] := m[esp_1 - 28]
                *8** m[esp_1 - 24] := m[esp_1 - 24]
                *8** m[esp_1 - 20] := m[esp_1 - 20]
              )
              Reaching definitions: r8=116,   r10=r10{130},   r24=0x401174,   r25=0xaabbccdd,   r26=r26{144},
                r27=r27{124} + r24{64},   r28=(r28{14} - 16) - 16,   r29=r28{0} - 4,   r30=r30{235} + 40,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{144},   m[r28{0} - 12]=m[r28{0} - 12]{25},
                m[r28{0} - 16]=m[r28{0} - 16]{21},   m[r28{0} - 20]=m[r28{0} - 20]{59},   m[r28{0} - 24]=r24{64},
                m[r28{0} - 28]=m[r28{0} - 28]{182},   m[r28{0} - 32]=m[r28{0} - 32]{0},   m[r28{0} - 36]=%pc,
                m[r28{0}]=r24{185} + r24{144},   tmp1=tmp1{202},   tmpb=r8{0},
                %flags=SUBFLAGS32( m[r24{241} + 4], 0xaabbccdd, tmp1{202} ),   %ZF=tmp1{202} = 0,
                %CF=m[r24{241} + 4] <u 0xaabbccdd
              Live variables:  in proc _start
