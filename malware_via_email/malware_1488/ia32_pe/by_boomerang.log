Unknown library function BindMoniker
Unknown library function GetACP
COMPUTED JUMP at 0x131015aa, pDest = r24
assgn   20 *32* %pc := m[0x131020e8]
is readonly
assgn   27 *32* %pc := m[0x131020cc]
is readonly
after removing matching assigns (%pc).
in proc _start adding addrExp r28{0} - 4 to local table
in proc _start adding addrExp r28{0} - 608 to local table
in proc _start adding addrExp r28{0} - 820 to local table
in proc _start adding addrExp r28{0} - 824 to local table
in proc _start adding addrExp r28{0} - 828 to local table
in proc _start adding addrExp r28{0} - 832 to local table
in proc _start adding addrExp r28{0} - 836 to local table
in proc _start adding addrExp r28{0} - 836 to local table
in proc _start adding addrExp r28{0} - 608 to local table
in proc _start adding addrExp r28{0} - 836 to local table
finding final parameters for _start
local eax has type __size32 that doesn't agree with type of define unsigned int of a library, why?
dest is not lib
call:   21 {*32* eax, *v* r25, *v* r26, *v* r28} := CALL BindMoniker(
              )
              Reaching definitions: r24=0,   r28=r28{0} - 836,   r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},
                m[r28{0} - 608]=r28{0} - 4,   m[r28{0} - 820]=0,   m[r28{0} - 824]=0x90f7f,   m[r28{0} - 828]=0x1000,
                m[r28{0} - 832]=0xf0000,   m[r28{0} - 836]=%pc,   tmp1=r28{0} - 4,   %flags=LOGICALFLAGS32( 0 ),
                %ZF=LOGICALFLAGS32( 0 ),   %CF=LOGICALFLAGS32( 0 )
              Live variables: eax in proc _start
result:    0 *32* eax := -
found seq with more than one outedge!
taken branch is first out edge
dest is not lib
call:   28 {*u32* eax, *v* r25, *v* r26, *v* r28} := CALL GetACP(
              )
              Reaching definitions: r24=r24{21},   r25=r25{21},   r26=r26{21},   r28=r28{0} - 836,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 608]=r28{0} - 4,   m[r28{0} - 820]=0,   m[r28{0} - 824]=0x90f7f,
                m[r28{0} - 828]=0x1000,   m[r28{0} - 832]=0xf0000,   m[r28{0} - 836]=%pc,   tmp1=r24{21} + 0x7ff8ffa9,
                %flags=SUBFLAGS32( r24{21}, 0x80070057, r24{21} + 0x7ff8ffa9 ),   %ZF=(r24{21} + 0x7ff8ffa9) = 0,
                %CF=r24{21} <u 0x80070057
              Live variables: eax in proc _start
result:    0 *u32* eax := -
