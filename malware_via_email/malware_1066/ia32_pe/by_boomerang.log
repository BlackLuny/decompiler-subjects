Unknown library function GetProcessHeap
assgn   14 *32* %pc := m[0x401018]
is readonly
assgn   20 *32* %pc := m[0x401014]
is readonly
after removing matching assigns (%pc).
in proc WinMain adding addrExp r28{0} - 4 to local table
in proc WinMain adding addrExp r28{0} - 8 to local table
in proc WinMain adding addrExp r28{0} - 8 to local table
in proc WinMain adding addrExp r28{0} - 12 to local table
in proc WinMain adding addrExp r28{0} - 16 to local table
in proc WinMain adding addrExp r28{0} - 20 to local table
in proc WinMain adding addrExp r28{0} - 20 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffec existing type unsigned int but added type HANDLE
in proc WinMain adding addrExp r28{0} - 24 to local table
in proc WinMain adding addrExp r28{0} - 8 to local table
could not set type for unknown parameter expression m[r28{0} + 4]
could not set type for unknown parameter expression m[r28{0} + 8]
could not set type for unknown parameter expression m[r28{0} + 12]
could not set type for unknown parameter expression m[r28{0} + 16]
local esp has type __size32 that doesn't agree with type of define void of a library, why?
local eax has type HANDLE that doesn't agree with type of define __size32 of a library, why?
dest is not lib
call:   15 {*HANDLE* eax, *v* r25, *v* r26} := CALL GetProcessHeap(
              )
              Reaching definitions: r24=m[r28{0} + 4]{0},   r25=r25{0},   r28=r28{0} - 20,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} + 16]=m[r28{0} + 16]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=1,
                m[r28{0} - 12]=m[r28{0} + 4]{0},   m[r28{0} - 16]=0,   m[r28{0} - 20]=%pc
              Live variables: eax in proc WinMain
result:    0 *HANDLE* eax := -
dest is not lib
call:   21 {*32* eax, *32* r25, *32* r26} := CALL HeapAlloc(
                *DWORD* local0 := hInstance
                *DWORD* local1 := 0
                *HANDLE* local2 := eax
              )
              Reaching definitions: r24=r24{15},   r25=r25{15},   r26=r26{15},   r28=r28{0} - 24,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} + 16]=m[r28{0} + 16]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=1,
                m[r28{0} - 12]=m[r28{0} + 4]{0},   m[r28{0} - 16]=0,   m[r28{0} - 20]=r24{15},   m[r28{0} - 24]=%pc
              Live variables: eax in proc WinMain
result:    0 *32* eax := -
