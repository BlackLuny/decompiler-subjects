Unknown library function WSAConnect
Unknown library function OleClone
Unknown library function OleLoad
Unknown library function RegDeleteValueW
Unknown library function OleSave
Unknown library function RegDeleteValueA
after removing matching assigns (%pc).
finding final parameters for proc3
assgn   27 *32* %pc := m[0x402c88]
assgn   73 *32* %pc := m[0x402c88]
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc1 ###
in proc proc1 adding addrExp r28{0} - 4 to local table
in proc proc1 adding addrExp r28{0} - 8 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 96 to local table
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 20 to local table
in proc proc1 adding addrExp r28{0} - 24 to local table
in proc proc1 adding addrExp r28{0} - 28 to local table
in proc proc1 adding addrExp r28{0} - 32 to local table
in proc proc1 adding addrExp r28{0} - 36 to local table
in proc proc1 adding addrExp r28{0} - 40 to local table
in proc proc1 adding addrExp r28{0} - 44 to local table
in proc proc1 adding addrExp r28{0} - 8 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 44 to local table
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 48 to local table
in proc proc1 adding addrExp r28{0} - 52 to local table
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 96 to local table
in proc proc1 adding addrExp r28{0} - 56 to local table
in proc proc1 adding addrExp r28{0} - 60 to local table
in proc proc1 adding addrExp r28{0} - 64 to local table
in proc proc1 adding addrExp r28{0} - 68 to local table
in proc proc1 adding addrExp r28{0} - 72 to local table
in proc proc1 adding addrExp r28{0} - 76 to local table
in proc proc1 adding addrExp r28{0} - 80 to local table
in proc proc1 adding addrExp r28{0} - 84 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 8 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 20 to local table
in proc proc1 adding addrExp r28{0} - 24 to local table
in proc proc1 adding addrExp r28{0} - 84 to local table
in proc proc1 adding addrExp r28{0} - 88 to local table
in proc proc1 adding addrExp r28{0} - 24 to local table
in proc proc1 adding addrExp r28{0} - 24 to local table
in proc proc1 adding addrExp r28{0} - 24 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 20 to local table
in proc proc1 adding addrExp r28{0} - 20 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 84 to local table
in proc proc1 adding addrExp r28{0} - 84 to local table
in proc proc1 adding addrExp r28{0} - 88 to local table
in proc proc1 adding addrExp r28{0} - 8 to local table
in proc proc1 adding addrExp r28{0} - 8 to local table
in proc proc1 adding addrExp r28{0} - 8 to local table
in proc proc1 adding addrExp r28{0} - 8 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 20 to local table
in proc proc1 adding addrExp r28{0} - 24 to local table
in proc proc1 adding addrExp r28{0} - 84 to local table
in proc proc1 adding addrExp r28{0} - 88 to local table
in proc proc1 adding addrExp r28{0} - 84 to local table
in proc proc1 adding addrExp r28{0} - 88 to local table
in proc proc1 adding addrExp r28{0} - 28 to local table
in proc proc1 adding addrExp r28{0} - 32 to local table
in proc proc1 adding addrExp r28{0} - 36 to local table
in proc proc1 adding addrExp r28{0} - 40 to local table
in proc proc1 adding addrExp r28{0} - 44 to local table
in proc proc1 adding addrExp r28{0} - 48 to local table
in proc proc1 adding addrExp r28{0} - 52 to local table
in proc proc1 adding addrExp r28{0} - 56 to local table
in proc proc1 adding addrExp r28{0} - 60 to local table
in proc proc1 adding addrExp r28{0} - 64 to local table
in proc proc1 adding addrExp r28{0} - 68 to local table
in proc proc1 adding addrExp r28{0} - 72 to local table
in proc proc1 adding addrExp r28{0} - 76 to local table
in proc proc1 adding addrExp r28{0} - 80 to local table
in proc proc1 adding addrExp r28{0} - 84 to local table
in proc proc1 adding addrExp r28{0} - 96 to local table
in proc proc1 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type void * does not resolve to compound or array
in proc proc1 adding addrExp r28{0} - 8 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 20 to local table
in proc proc1 adding addrExp r28{0} - 24 to local table
in proc proc1 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type void * does not resolve to compound or array
in proc proc1 adding addrExp r28{0} - 8 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 20 to local table
in proc proc1 adding addrExp r28{0} - 24 to local table
in proc proc1 adding addrExp r28{0} - 28 to local table
in proc proc1 adding addrExp r28{0} - 32 to local table
in proc proc1 adding addrExp r28{0} - 36 to local table
in proc proc1 adding addrExp r28{0} - 40 to local table
in proc proc1 adding addrExp r28{0} - 44 to local table
in proc proc1 adding addrExp r28{0} - 48 to local table
in proc proc1 adding addrExp r28{0} - 52 to local table
in proc proc1 adding addrExp r28{0} - 56 to local table
in proc proc1 adding addrExp r28{0} - 60 to local table
in proc proc1 adding addrExp r28{0} - 64 to local table
in proc proc1 adding addrExp r28{0} - 68 to local table
in proc proc1 adding addrExp r28{0} - 72 to local table
in proc proc1 adding addrExp r28{0} - 76 to local table
in proc proc1 adding addrExp r28{0} - 80 to local table
in proc proc1 adding addrExp r28{0} - 84 to local table
in proc proc1 adding addrExp r28{0} - 88 to local table
in proc proc1 adding addrExp r28{0} - 96 to local table
finding final parameters for proc1
assgn   27 *32* %pc := m[0x402c88]
assgn   73 *32* %pc := m[0x402c88]
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc4 ###
in proc proc4 adding addrExp r28{0} - 4 to local table
in proc proc4 adding addrExp r28{0} - 8 to local table
in proc proc4 adding addrExp r28{0} - 12 to local table
in proc proc4 adding addrExp r28{0} - 96 to local table
in proc proc4 adding addrExp r28{0} - 16 to local table
in proc proc4 adding addrExp r28{0} - 20 to local table
in proc proc4 adding addrExp r28{0} - 24 to local table
in proc proc4 adding addrExp r28{0} - 28 to local table
in proc proc4 adding addrExp r28{0} - 32 to local table
in proc proc4 adding addrExp r28{0} - 36 to local table
in proc proc4 adding addrExp r28{0} - 40 to local table
in proc proc4 adding addrExp r28{0} - 44 to local table
in proc proc4 adding addrExp r28{0} - 8 to local table
in proc proc4 adding addrExp r28{0} - 12 to local table
in proc proc4 adding addrExp r28{0} - 44 to local table
in proc proc4 adding addrExp r28{0} - 16 to local table
in proc proc4 adding addrExp r28{0} - 48 to local table
in proc proc4 adding addrExp r28{0} - 52 to local table
in proc proc4 adding addrExp r28{0} - 16 to local table
in proc proc4 adding addrExp r28{0} - 96 to local table
in proc proc4 adding addrExp r28{0} - 56 to local table
in proc proc4 adding addrExp r28{0} - 60 to local table
in proc proc4 adding addrExp r28{0} - 64 to local table
in proc proc4 adding addrExp r28{0} - 68 to local table
in proc proc4 adding addrExp r28{0} - 72 to local table
in proc proc4 adding addrExp r28{0} - 76 to local table
in proc proc4 adding addrExp r28{0} - 80 to local table
in proc proc4 adding addrExp r28{0} - 84 to local table
in proc proc4 adding addrExp r28{0} - 12 to local table
in proc proc4 adding addrExp r28{0} - 12 to local table
in proc proc4 adding addrExp r28{0} - 8 to local table
in proc proc4 adding addrExp r28{0} - 12 to local table
in proc proc4 adding addrExp r28{0} - 20 to local table
in proc proc4 adding addrExp r28{0} - 24 to local table
in proc proc4 adding addrExp r28{0} - 84 to local table
in proc proc4 adding addrExp r28{0} - 88 to local table
in proc proc4 adding addrExp r28{0} - 24 to local table
in proc proc4 adding addrExp r28{0} - 24 to local table
in proc proc4 adding addrExp r28{0} - 24 to local table
in proc proc4 adding addrExp r28{0} - 12 to local table
in proc proc4 adding addrExp r28{0} - 20 to local table
in proc proc4 adding addrExp r28{0} - 20 to local table
in proc proc4 adding addrExp r28{0} - 12 to local table
in proc proc4 adding addrExp r28{0} - 84 to local table
in proc proc4 adding addrExp r28{0} - 84 to local table
in proc proc4 adding addrExp r28{0} - 88 to local table
in proc proc4 adding addrExp r28{0} - 8 to local table
in proc proc4 adding addrExp r28{0} - 8 to local table
in proc proc4 adding addrExp r28{0} - 8 to local table
in proc proc4 adding addrExp r28{0} - 8 to local table
in proc proc4 adding addrExp r28{0} - 12 to local table
in proc proc4 adding addrExp r28{0} - 20 to local table
in proc proc4 adding addrExp r28{0} - 24 to local table
in proc proc4 adding addrExp r28{0} - 84 to local table
in proc proc4 adding addrExp r28{0} - 88 to local table
in proc proc4 adding addrExp r28{0} - 84 to local table
in proc proc4 adding addrExp r28{0} - 88 to local table
in proc proc4 adding addrExp r28{0} - 28 to local table
in proc proc4 adding addrExp r28{0} - 32 to local table
in proc proc4 adding addrExp r28{0} - 36 to local table
in proc proc4 adding addrExp r28{0} - 40 to local table
in proc proc4 adding addrExp r28{0} - 44 to local table
in proc proc4 adding addrExp r28{0} - 48 to local table
in proc proc4 adding addrExp r28{0} - 52 to local table
in proc proc4 adding addrExp r28{0} - 56 to local table
in proc proc4 adding addrExp r28{0} - 60 to local table
in proc proc4 adding addrExp r28{0} - 64 to local table
in proc proc4 adding addrExp r28{0} - 68 to local table
in proc proc4 adding addrExp r28{0} - 72 to local table
in proc proc4 adding addrExp r28{0} - 76 to local table
in proc proc4 adding addrExp r28{0} - 80 to local table
in proc proc4 adding addrExp r28{0} - 84 to local table
in proc proc4 adding addrExp r28{0} - 96 to local table
in proc proc4 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type void * does not resolve to compound or array
in proc proc4 adding addrExp r28{0} - 8 to local table
in proc proc4 adding addrExp r28{0} - 12 to local table
in proc proc4 adding addrExp r28{0} - 16 to local table
in proc proc4 adding addrExp r28{0} - 20 to local table
in proc proc4 adding addrExp r28{0} - 24 to local table
in proc proc4 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type void * does not resolve to compound or array
in proc proc4 adding addrExp r28{0} - 8 to local table
in proc proc4 adding addrExp r28{0} - 12 to local table
in proc proc4 adding addrExp r28{0} - 16 to local table
in proc proc4 adding addrExp r28{0} - 20 to local table
in proc proc4 adding addrExp r28{0} - 24 to local table
in proc proc4 adding addrExp r28{0} - 28 to local table
in proc proc4 adding addrExp r28{0} - 32 to local table
in proc proc4 adding addrExp r28{0} - 36 to local table
in proc proc4 adding addrExp r28{0} - 40 to local table
in proc proc4 adding addrExp r28{0} - 44 to local table
in proc proc4 adding addrExp r28{0} - 48 to local table
in proc proc4 adding addrExp r28{0} - 52 to local table
in proc proc4 adding addrExp r28{0} - 56 to local table
in proc proc4 adding addrExp r28{0} - 60 to local table
in proc proc4 adding addrExp r28{0} - 64 to local table
in proc proc4 adding addrExp r28{0} - 68 to local table
in proc proc4 adding addrExp r28{0} - 72 to local table
in proc proc4 adding addrExp r28{0} - 76 to local table
in proc proc4 adding addrExp r28{0} - 80 to local table
in proc proc4 adding addrExp r28{0} - 84 to local table
in proc proc4 adding addrExp r28{0} - 88 to local table
in proc proc4 adding addrExp r28{0} - 96 to local table
finding final parameters for proc4
assgn   27 *32* %pc := m[0x402c88]
assgn   73 *32* %pc := m[0x402c88]
assgn  302 *32* %pc := m[0x402c88]
assgn  371 *32* %pc := m[0x402c88]
assgn  395 *32* %pc := m[0x403040]
assgn  417 *32* %pc := m[0x40294c]
assgn  432 *32* %pc := m[0x402c0c]
assgn  460 *32* %pc := m[0x40293c]
assgn  468 *32* %pc := m[0x402c5c]
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
in proc _start adding addrExp r28{0} - 96 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 20 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 32 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 96 to local table
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 4 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 20 to local table
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 96 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 32 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 52 to local table
in proc _start adding addrExp r28{0} - 56 to local table
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 96 to local table
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 20 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 32 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 96 to local table
TYPE ERROR: Existing type at address 0xffffffa0 is not structure or array type
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 20 to local table
in proc _start adding addrExp r28{0} - 20 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 32 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 20 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 32 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 96 to local table
TYPE ERROR: Existing type at address 0xffffffa0 is not structure or array type
finding final parameters for _start
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc1 ###
in proc proc1 adding addrExp r28{0} - 8 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 8 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 8 to local table
in proc proc1 adding addrExp r28{0} - 8 to local table
in proc proc1 adding addrExp r28{0} - 8 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc4 ###
in proc proc4 adding addrExp r28{0} - 8 to local table
in proc proc4 adding addrExp r28{0} - 12 to local table
in proc proc4 adding addrExp r28{0} - 16 to local table
in proc proc4 adding addrExp r28{0} - 16 to local table
in proc proc4 adding addrExp r28{0} - 12 to local table
in proc proc4 adding addrExp r28{0} - 8 to local table
in proc proc4 adding addrExp r28{0} - 12 to local table
in proc proc4 adding addrExp r28{0} - 12 to local table
in proc proc4 adding addrExp r28{0} - 12 to local table
in proc proc4 adding addrExp r28{0} - 8 to local table
in proc proc4 adding addrExp r28{0} - 8 to local table
in proc proc4 adding addrExp r28{0} - 8 to local table
finding final parameters for _start
finding final parameters for proc1
finding final parameters for _start
finding final parameters for proc4
finding final parameters for _start
local ecx has type __size32 that doesn't agree with type of define void of a library, why?
local esp has type union { void * x2595; /*signed?*/int x2596; } that doesn't agree with type of define void of a library, why?
local eax has type __size32 that doesn't agree with type of define /*signed?*/int of a library, why?
local ecx has type void that doesn't agree with type of define __size32 of a library, why?
local edx has type /*signed?*/int that doesn't agree with type of define unsigned int of a library, why?
local eax has type /*signed?*/int that doesn't agree with type of define union { /*signed?*/int x2571; __size32 * x2572; } of a library, why?
local esp has type void that doesn't agree with type of define void * of a library, why?
local eax has type union { /*signed?*/int x2571; __size32 * x2572; } that doesn't agree with type of define /*signed?*/int of a library, why?
local ecx has type __size32 that doesn't agree with type of define void of a library, why?
local edx has type unsigned int that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local eax has type /*signed?*/int that doesn't agree with type of define __size32 of a library, why?
local ecx has type void that doesn't agree with type of define __size32 of a library, why?
local edx has type void that doesn't agree with type of define /*signed?*/int of a library, why?
local esp has type void that doesn't agree with type of define void * of a library, why?
local ecx has type __size32 that doesn't agree with type of define void of a library, why?
local edx has type /*signed?*/int that doesn't agree with type of define __size32 of a library, why?
local edx has type __size32 that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local eax has type __size32 that doesn't agree with type of define union { /*signed?*/int x2571; __size32 * x2572; } of a library, why?
local ecx has type void that doesn't agree with type of define __size32 of a library, why?
local edx has type void that doesn't agree with type of define unsigned int of a library, why?
local esp has type void that doesn't agree with type of define void * of a library, why?
local eax has type union { /*signed?*/int x2571; __size32 * x2572; } that doesn't agree with type of define /*signed?*/int of a library, why?
local ecx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local esp has type unsigned int that doesn't agree with type of define void of a library, why?
local eax has type __size32 that doesn't agree with type of define unsigned int of a library, why?
local ecx has type void that doesn't agree with type of define union { unsigned int x45; __size32 * x46; } of a library, why?
local edx has type /*signed?*/int that doesn't agree with type of define unsigned int of a library, why?
local eax has type unsigned int that doesn't agree with type of define union { unsigned int x45; __size32 * x46; } of a library, why?
local ecx has type union { unsigned int x45; __size32 * x46; } that doesn't agree with type of define /*signed?*/int of a library, why?
local esp has type void that doesn't agree with type of define unsigned int of a library, why?
local ecx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local esp has type unsigned int that doesn't agree with type of define void of a library, why?
local eax has type __size32 that doesn't agree with type of define unsigned int of a library, why?
local ecx has type void that doesn't agree with type of define union { unsigned int x1329; __size32 * x1330; } of a library, why?
local edx has type /*signed?*/int that doesn't agree with type of define unsigned int of a library, why?
local eax has type unsigned int that doesn't agree with type of define union { unsigned int x1329; __size32 * x1330; } of a library, why?
local ecx has type union { unsigned int x1329; __size32 * x1330; } that doesn't agree with type of define /*signed?*/int of a library, why?
local esp has type void that doesn't agree with type of define unsigned int of a library, why?
dest is not lib
call:  303 {*j32* eax, *v* ecx, *v* edx, *v* esp} := CALL WSAConnect(
              )
              Reaching definitions: r10=r10{0},   r11=r11{0},   r25=r25{0},   r26=-596,   r27=r27{0},   r28=r28{0} - 56
                r29=r28{0} - 4,   r30=r30{0},   r31=r28{0} - 96,   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r30{0},
                m[r28{0} - 12]=r31{0},   m[r28{0} - 16]=r27{0},   m[r28{0} - 20]=r25{0},   m[r28{0} - 24]=-596,
                m[r28{0} - 28]=r28{0} - 96,   m[r28{0} - 32]=r28{0} - 96,   m[r28{0} - 36]=r28{0} - 96,
                m[r28{0} - 40]=r28{0} - 96,   m[r28{0} - 44]=r28{0} - 96,   m[r28{0} - 48]=r28{0} - 96,
                m[r28{0} - 52]=r28{0} - 96,   m[r28{0} - 56]=%pc,   m[r28{0} - 76]=m[r28{0} - 76]{0},
                m[r28{0} - 80]=m[r28{0} - 80]{0},   m[r28{0} - 96]=0,   tmp1=0,   %flags=ADDFLAGS32( 0, -596, -596 ),
                %ZF=ADDFLAGS32( 0, -596, -596 ),   %CF=ADDFLAGS32( 0, -596, -596 )
              Live variables: eax in proc _start
result:    0 *j32* eax := -
dest is not lib
call:   28 {*32* eax, *v* ecx, *j32* edx, *v* esp} := CALL WSAConnect(
              )
              Reaching definitions: r8=r8{769},   r10=r10{0},   r11=r11{0},   r24=r24{770},   r25=r25{771},
                r26=r28{773} - 96,   r27=r28{0} - 96,   r28=r28{773} - 44,   r29=r28{773} - 4,   r30=r28{0} - 96,
                r31=r28{0} - 96,   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r30{0},   m[r28{0} - 12]=r31{0},
                m[r28{0} - 16]=0,   m[r28{0} - 20]=r25{0},   m[r28{0} - 24]=-596,   m[r28{0} - 28]=r28{0} - 96,
                m[r28{0} - 32]=r28{0} - 96,   m[r28{0} - 36]=r28{0} - 96,   m[r28{0} - 40]=r28{0} - 96,
                m[r28{0} - 44]=r28{0} - 96,   m[r28{0} - 48]=r28{0} - 96,   m[r28{0} - 52]=r28{0} - 96,
                m[r28{0} - 56]=%pc,   m[r28{0} - 76]=m[r28{0} - 76]{0},   m[r28{0} - 80]=m[r28{0} - 80]{0},
                m[r28{0} - 96]=0,   tmp1=tmp1{774},   %flags=%flags{775},   %ZF=%ZF{776},   %CF=%CF{777}
              Live variables: eax,  edx in proc _start
result:    0 *32* eax := -
result:    0 *j32* edx := -
dest is not lib
call:   74 {*j32* eax, *32* ecx, *u32* edx, *v* esp} := CALL WSAConnect(
              )
              Reaching definitions: r8=truncu(32,8,r24{28} + 1),   r10=r10{0},   r11=r11{0},   r24=r24{28} + 1,
                r25=r28{773} - 96,   r26=r26{28} & (r24{28} + 1),   r27=r28{0} - 96,   r28=r28{773} - 84,
                r29=r28{773} - 4,   r30=r28{0} - 96,   r31=r28{0} - 96,   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r30{0},
                m[r28{0} - 12]=r31{0},   m[r28{0} - 16]=0,   m[r28{0} - 20]=r25{0},   m[r28{0} - 24]=-596,
                m[r28{0} - 28]=r28{0} - 96,   m[r28{0} - 32]=r28{0} - 96,   m[r28{0} - 36]=r28{0} - 96,
                m[r28{0} - 40]=r28{0} - 96,   m[r28{0} - 44]=r28{0} - 96,   m[r28{0} - 48]=r28{0} - 96,
                m[r28{0} - 52]=r28{0} - 96,   m[r28{0} - 56]=%pc,   m[r28{0} - 76]=m[r28{0} - 76]{0},
                m[r28{0} - 80]=m[r28{0} - 80]{0},   m[r28{0} - 96]=0,   tmp1=tmp1{52},
                %flags=ADDFLAGS32( tmp1{52}, -1, m[r28{773} - 16] ),   %ZF=ADDFLAGS32( tmp1{52}, -1, m[r28{773} - 16] )
                %CF=ADDFLAGS32( tmp1{52}, -1, m[r28{773} - 16] )
              Live variables: eax,  edx in proc _start
result:    0 *j32* eax := -
result:    0 *u32* edx := -
dest is not lib
call:  224 *v* esp := CALL proc3(
              )
              Reaching definitions: r8=truncu(32,8,r27{190}),   r10=-1,
                r11=truncu(32,8,((~r24{140} & 255) + (r27{167} + (LOGICALFLAGS32( ~r24{140} & 255 )))) + 1),
                r24=r27{190},   r25=r25{782},   r26=0,
                r27=0 - ((r27{201}@31:8) | zfill(8,32,truncu(32,8,((~r24{140} & 255) + (r27{167} + (LOGICALFLAGS32( ~r24{140} & 255 )))) + 1))),
                r28=r28{773} - 88,   r29=r28{773} - 4,   r30=r30{98},   r31=r31{99},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=r30{0},   m[r28{0} - 12]=r31{0},   m[r28{0} - 16]=0,   m[r28{0} - 20]=r25{0},
                m[r28{0} - 24]=-596,   m[r28{0} - 28]=r28{0} - 96,   m[r28{0} - 32]=r28{0} - 96,
                m[r28{0} - 36]=r28{0} - 96,   m[r28{0} - 40]=r28{0} - 96,   m[r28{0} - 44]=r28{0} - 96,
                m[r28{0} - 48]=r28{0} - 96,   m[r28{0} - 52]=r28{0} - 96,   m[r28{0} - 56]=%pc,
                m[r28{0} - 76]=m[r28{0} - 76]{0},   m[r28{0} - 80]=m[r28{0} - 80]{0},   m[r28{0} - 96]=0,
                tmp1=(r27{201}@31:8) | zfill(8,32,truncu(32,8,((~r24{140} & 255) + (r27{167} + (LOGICALFLAGS32( ~r24{140} & 255 )))) + 1)),
                %flags=SUBFLAGS32( 0, (r27{201}@31:8) | zfill(8,32,truncu(32,8,((~r24{140} & 255) + (r27{167} + (LOGICALFLAGS32( ~r24{140} & 255 )))) + 1)), 0 - ((r27{201}@31:8) | zfill(8,32,truncu(32,8,((~r24{140} & 255) + (r27{167} + (LOGICALFLAGS32( ~r24{140} & 255 )))) + 1))) ),
                %ZF=(0 - ((r27{201}@31:8) | zfill(8,32,truncu(32,8,((~r24{140} & 255) + (r27{167} + (LOGICALFLAGS32( ~r24{140} & 255 )))) + 1)))) = 0,
                %CF=0 <u ((r27{201}@31:8) | zfill(8,32,truncu(32,8,((~r24{140} & 255) + (r27{167} + (LOGICALFLAGS32( ~r24{140} & 255 )))) + 1)))
              Live variables:  in proc _start
dest is not lib
call:   80 {*union* eax, *32* ecx, *u32* edx, *v** esp} := CALL VirtualAlloc(
                *LPVOID* m[esp_2 - 76] := m[esp_2 - 76]
                *DWORD* m[esp_2 - 72] := m[esp_2 - 72]
                *DWORD* m[esp_2 - 68] := m[esp_2 - 68]
                *DWORD* m[esp_2 - 64] := m[esp_2 - 64]
              )
              Reaching definitions: r8=truncu(32,8,r24{74} + 1),   r10=r10{0},   r11=r11{0},   r24=r24{74} + 1,
                r25=r25{74},   r26=r26{74},   r27=r28{0} - 96,   r28=(r28{773} - 84) + 4,   r29=r28{773} - 4,
                r30=r28{0} - 96,   r31=r28{0} - 96,   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r30{0},
                m[r28{0} - 12]=r31{0},   m[r28{0} - 16]=0,   m[r28{0} - 20]=r25{0},   m[r28{0} - 24]=-596,
                m[r28{0} - 28]=r28{0} - 96,   m[r28{0} - 32]=r28{0} - 96,   m[r28{0} - 36]=r28{0} - 96,
                m[r28{0} - 40]=r28{0} - 96,   m[r28{0} - 44]=r28{0} - 96,   m[r28{0} - 48]=r28{0} - 96,
                m[r28{0} - 52]=r28{0} - 96,   m[r28{0} - 56]=%pc,   m[r28{0} - 76]=m[r28{0} - 76]{0},
                m[r28{0} - 80]=m[r28{0} - 80]{0},   m[r28{0} - 96]=0,   tmp1=r24{74},
                %flags=LOGICALFLAGS32( r24{74} + 1 ),   %ZF=LOGICALFLAGS32( r24{74} + 1 ),
                %CF=LOGICALFLAGS32( r24{74} + 1 )
              Live variables:  in proc _start
dest is not lib
call:  372 {*32* eax, *32* ecx, *j32* edx, *v** esp} := CALL WSAConnect(
              )
              Reaching definitions: r8=truncu(32,8,r28{0} - 96),   r10=r10{0},   r11=r11{0},   r24=r28{0} - 96,
                r25=0xfffe,   r26=(r28{0} - 96) ^ r24{303},   r27=r28{0} - 96,   r28=r28{320} - 48,   r29=r28{0} - 4,
                r30=r28{0} - 96,   r31=r28{0} - 96,   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r30{0},
                m[r28{0} - 12]=r31{0},   m[r28{0} - 16]=0,   m[r28{0} - 20]=r25{0},   m[r28{0} - 24]=-596,
                m[r28{0} - 28]=r28{0} - 96,   m[r28{0} - 32]=r28{0} - 96,   m[r28{0} - 36]=r28{0} - 96,
                m[r28{0} - 40]=r28{0} - 96,   m[r28{0} - 44]=r28{0} - 96,   m[r28{0} - 48]=r28{0} - 96,
                m[r28{0} - 52]=r28{0} - 96,   m[r28{0} - 56]=%pc,   m[r28{0} - 76]=m[r28{0} - 76]{0},
                m[r28{0} - 80]=m[r28{0} - 80]{0},   m[r28{0} - 96]=0,   tmp1=r24{303} + 0x1120532,
                %flags=SUBFLAGS32( r24{303} + 16, 0xfeedfade, r24{303} + 0x1120532 ),   %ZF=(r24{303} + 0x1120532) = 0,
                %CF=(r24{303} + 16) <u 0xfeedfade
              Live variables: eax,  ecx,  esp in proc _start
result:    0 *32* eax := -
result:    0 *32* ecx := -
result:    0 *v** esp := -
dest is not lib
call:  396 {*32* eax, *v* ecx, *32* edx, *v** esp} := CALL OleClone(
              )
              Reaching definitions: r8=truncu(32,8,r24{372} + 1),   r10=r10{0},   r11=r11{0},   r24=r24{372} + 1,
                r25=r25{372},   r26=r26{372},   r27=r28{0} - 96,   r28=r28{320} - 68,   r29=r28{0} - 4,
                r30=r28{0} - 96,   r31=r28{0} - 80,   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r30{0},
                m[r28{0} - 12]=r31{0},   m[r28{0} - 16]=0,   m[r28{0} - 20]=r25{0},   m[r28{0} - 24]=-596,
                m[r28{0} - 28]=r28{0} - 96,   m[r28{0} - 32]=r28{0} - 96,   m[r28{0} - 36]=r28{0} - 96,
                m[r28{0} - 40]=r28{0} - 96,   m[r28{0} - 44]=r28{0} - 96,   m[r28{0} - 48]=r28{0} - 96,
                m[r28{0} - 52]=r28{0} - 96,   m[r28{0} - 56]=%pc,   m[r28{0} - 76]=m[r28{0} - 76]{0},
                m[r28{0} - 80]=0,   m[r28{0} - 96]=0,   tmp1=r28{0} - 96,   %flags=SUBFLAGS32( r28{0} - 96, 0, 0 ),
                %ZF=1,   %CF=(r28{0} - 96) <u 0
              Live variables: eax,  esp in proc _start
result:    0 *32* eax := -
result:    0 *v** esp := -
dest is not lib
call:  461 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL OleSave(
              )
              Reaching definitions: r8=r8{808},   r10=r10{0},   r11=r11{0},   r24=r24{809},   r25=r25{810},
                r26=r26{811},   r27=r28{0} - 96,   r28=r28{812} - 24,   r29=r28{0} - 4,   r30=r28{0} - 96,   r31=0,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r30{0},   m[r28{0} - 12]=r31{0},   m[r28{0} - 16]=0,
                m[r28{0} - 20]=r25{0},   m[r28{0} - 24]=-596,   m[r28{0} - 28]=r28{0} - 96,
                m[r28{0} - 32]=r28{0} - 96,   m[r28{0} - 36]=r28{0} - 96,   m[r28{0} - 40]=r28{0} - 96,
                m[r28{0} - 44]=r28{0} - 96,   m[r28{0} - 48]=r28{0} - 96,   m[r28{0} - 52]=r28{0} - 96,
                m[r28{0} - 56]=%pc,   m[r28{0} - 76]=m[r28{0} - 76]{0},   m[r28{0} - 80]=0,   m[r28{0} - 96]=0,
                tmp1=0,   %flags=SUBFLAGS32( 0, 0, 0 ),   %ZF=0 = 0,   %CF=0 <u 0
              Live variables:  in proc _start
dest is not lib
call:  469 {*union* eax, *32* ecx, *u32* edx, *v** esp} := CALL RegDeleteValueA(
              )
              Reaching definitions: r8=r8{808},   r10=r10{0},   r11=r11{0},   r24=r24{461},   r25=r25{461},
                r26=r26{461},   r27=r28{0} - 96,   r28=r28{812} - 32,   r29=r28{0} - 4,   r30=r28{0} - 96,   r31=0,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r30{0},   m[r28{0} - 12]=r31{0},   m[r28{0} - 16]=0,
                m[r28{0} - 20]=r25{0},   m[r28{0} - 24]=-596,   m[r28{0} - 28]=r28{0} - 96,
                m[r28{0} - 32]=r28{0} - 96,   m[r28{0} - 36]=r28{0} - 96,   m[r28{0} - 40]=r28{0} - 96,
                m[r28{0} - 44]=r28{0} - 96,   m[r28{0} - 48]=r28{0} - 96,   m[r28{0} - 52]=r28{0} - 96,
                m[r28{0} - 56]=%pc,   m[r28{0} - 76]=m[r28{0} - 76]{0},   m[r28{0} - 80]=0,   m[r28{0} - 96]=0,
                tmp1=0,   %flags=SUBFLAGS32( 0, 0, 0 ),   %ZF=1,   %CF=0
              Live variables:  in proc _start
dest is not lib
call:  418 {*32* eax, *v* ecx, *32* edx, *v** esp} := CALL OleLoad(
              )
              Reaching definitions: r8=truncu(32,8,r24{396} + 0xfe7b9a),   r10=r10{0},   r11=r11{0},
                r24=r24{396} + 0xfe7b9a,   r25=r25{396},   r26=r26{396},   r27=r28{0} - 96,   r28=r28{320} - 84,
                r29=r28{0} - 4,   r30=r28{0} - 96,   r31=0,   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r30{0},
                m[r28{0} - 12]=r31{0},   m[r28{0} - 16]=0,   m[r28{0} - 20]=r25{0},   m[r28{0} - 24]=-596,
                m[r28{0} - 28]=r28{0} - 96,   m[r28{0} - 32]=r28{0} - 96,   m[r28{0} - 36]=r28{0} - 96,
                m[r28{0} - 40]=r28{0} - 96,   m[r28{0} - 44]=r28{0} - 96,   m[r28{0} - 48]=r28{0} - 96,
                m[r28{0} - 52]=r28{0} - 96,   m[r28{0} - 56]=%pc,   m[r28{0} - 76]=m[r28{0} - 76]{0},
                m[r28{0} - 80]=0,   m[r28{0} - 96]=0,   tmp1=r28{0} - 80,   %flags=SUBFLAGS32( r28{0} - 80, 0, 0 ),
                %ZF=1,   %CF=(r28{0} - 80) <u 0
              Live variables: eax,  esp in proc _start
result:    0 *32* eax := -
result:    0 *v** esp := -
dest is not lib
call:  433 {*32* eax, *v* ecx, *32* edx, *v** esp} := CALL RegDeleteValueW(
              )
              Reaching definitions: r8=truncu(32,8,r24{418} + 0xfe7b9a),   r10=r10{0},   r11=r11{0},
                r24=r24{418} + 0xfe7b9a,   r25=r25{418},   r26=r26{418},   r27=r28{0} - 96,   r28=r28{320} - 92,
                r29=r28{0} - 4,   r30=r28{0} - 96,   r31=0,   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r30{0},
                m[r28{0} - 12]=r31{0},   m[r28{0} - 16]=0,   m[r28{0} - 20]=r25{0},   m[r28{0} - 24]=-596,
                m[r28{0} - 28]=r28{0} - 96,   m[r28{0} - 32]=r28{0} - 96,   m[r28{0} - 36]=r28{0} - 96,
                m[r28{0} - 40]=r28{0} - 96,   m[r28{0} - 44]=r28{0} - 96,   m[r28{0} - 48]=r28{0} - 96,
                m[r28{0} - 52]=r28{0} - 96,   m[r28{0} - 56]=%pc,   m[r28{0} - 76]=m[r28{0} - 76]{0},
                m[r28{0} - 80]=0,   m[r28{0} - 96]=0,   tmp1=r24{418} + 0x7ff8ffa9,
                %flags=SUBFLAGS32( r24{418} + 0xfe7b9a, 0x81057bf1, r24{418} + 0x7ff8ffa9 ),
                %ZF=(r24{418} + 0x7ff8ffa9) = 0,   %CF=(r24{418} + 0xfe7b9a) <u 0x81057bf1
              Live variables: eax,  esp in proc _start
result:    0 *32* eax := -
result:    0 *v** esp := -
dest is not lib
call:  604 {*v* eax, *8* r8, *8* r10, *8* r11, *v* ecx, *32* edx, *32* ebx, *v** esp, *v** ebp, *32* edi} := CALL proc1(
              )
              Reaching definitions: r8=123,   r10=r10{0},   r11=r11{0},   r24=0x800ff97b,   r25=-1,   r26=r28{0} - 428,
                r27=0,   r28=r28{320} - 108,   r29=r28{0} - 4,   r30=r28{0} - 428,   r31=~-48,   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=48,   m[r28{0} - 12]=r31{0},   m[r28{0} - 16]=0x407000,   m[r28{0} - 20]=r28{0} - 428,
                m[r28{0} - 24]=-596,   m[r28{0} - 28]=0,   m[r28{0} - 32]=r28{0} - 412,   m[r28{0} - 36]=r28{0} - 96,
                m[r28{0} - 40]=r28{0} - 96,   m[r28{0} - 44]=0x4147c8,   m[r28{0} - 48]=r28{0} - 96,
                m[r28{0} - 52]=r28{0} - 96,   m[r28{0} - 56]=%pc,   m[r28{0} - 76]=0,   m[r28{0} - 80]=0,
                m[r28{0} - 96]=0,   tmp1=47,   %flags=SUBFLAGS32( 47, -1, m[r28{0} - 8] ),   %ZF=m[r28{0} - 8] = 0,
                %CF=47 <u -1
              Live variables: ebp,  esp in proc _start
result:    0 *v** esp := -
result:    0 *v** ebp := -
dest is not lib
call:  640 {*j32* eax, *32* ecx, *u32* edx, *v** esp} := CALL VirtualAlloc(
                *LPVOID* m[esp - 16] := m[esp - 16]
                *DWORD* m[esp - 12] := m[esp - 12]
                *DWORD* m[esp - 8] := m[esp - 8]
                *DWORD* local0 := m[esp - 4]
              )
              Reaching definitions: r8=r8{604},   r10=r10{604},   r11=r11{604},   r24=r24{604},   r25=r25{604},
                r26=64,   r27=r27{616},   r28=r28{604} - 20,   r29=r29{604},   r30=r28{0} - 428,   r31=r29{604} - 36,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=48,   m[r28{0} - 12]=r31{0},   m[r28{0} - 16]=0x407000,
                m[r28{0} - 20]=r28{0} - 428,   m[r28{0} - 24]=-596,   m[r28{0} - 28]=0,   m[r28{0} - 32]=r28{0} - 412,
                m[r28{0} - 36]=r28{0} - 96,   m[r28{0} - 40]=r28{0} - 96,   m[r28{0} - 44]=0x4147c8,
                m[r28{0} - 48]=r28{0} - 96,   m[r28{0} - 52]=r28{0} - 96,   m[r28{0} - 56]=%pc,   m[r28{0} - 76]=0,
                m[r28{0} - 80]=0,   m[r28{0} - 96]=0,   tmp1=r26{615},   %flags=LOGICALFLAGS32( m[r29{604} - 24] ),
                %ZF=LOGICALFLAGS32( m[r29{604} - 24] ),   %CF=LOGICALFLAGS32( m[r29{604} - 24] )
              Live variables: eax,  esp in proc _start
result:    0 *j32* eax := -
result:    0 *v** esp := -
dest is not lib
call:  697 {*32* eax, *j8* r8, *8* r10, *8* r11, *v* ecx, *u32* edx, *j32* ebx, *v** esp, *v** ebp, *32* edi} := CALL proc4(
              )
              Reaching definitions: r8=truncu(32,8,r24{683}),   r10=r10{849},   r11=r11{850},   r24=r24{683},
                r25=r25{690},   r26=r26{679},   r27=r27{670},   r28=r28{855} - 20,   r29=r29{856},   r30=r30{669},
                r31=r31{676},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=48,   m[r28{0} - 12]=r31{0},
                m[r28{0} - 16]=0x407000,   m[r28{0} - 20]=r28{0} - 428,   m[r28{0} - 24]=-596,   m[r28{0} - 28]=0,
                m[r28{0} - 32]=r28{0} - 412,   m[r28{0} - 36]=r28{0} - 96,   m[r28{0} - 40]=r28{0} - 96,
                m[r28{0} - 44]=0x4147c8,   m[r28{0} - 48]=r28{0} - 96,   m[r28{0} - 52]=r28{0} - 96,
                m[r28{0} - 56]=%pc,   m[r28{0} - 76]=0,   m[r28{0} - 80]=0,   m[r28{0} - 96]=0,   tmp1=r25{688},
                %flags=ADDFLAGS32( r25{688}, m[r29{856} - 24], r25{690} ),
                %ZF=ADDFLAGS32( r25{688}, m[r29{856} - 24], r25{690} ),
                %CF=ADDFLAGS32( r25{688}, m[r29{856} - 24], r25{690} )
              Live variables: ebp,  esp in proc _start
result:    0 *v** esp := -
result:    0 *v** ebp := -
