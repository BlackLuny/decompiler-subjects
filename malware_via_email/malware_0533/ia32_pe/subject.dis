// fn0040103A
// Return size: 0
void fn0040103A()
fn0040103A_entry:
	// succ:  l0040103A
l0040103A:
	esp = fp
	v3 = Mem0[esp:word32]
	Mem0[esp:word32] = eax
	eax = v3
fn0040103A_exit:


// fn00401057
// Return size: 0
void fn00401057()
fn00401057_entry:
	// succ:  l00401057
l00401057:
	edi = edi + 0x00000001
	SZO = cond(edi)
	ebx = ebx + esi
	SCZO = cond(ebx)
	edi = edi - ecx
	SCZO = cond(edi)
	ecx = ecx + 0x00000001
	SZO = cond(ecx)
	ecx = ecx + eax
	SCZO = cond(ecx)
	edx = edx - ecx
	SCZO = cond(edx)
	esi = esi | eax
	SZO = cond(esi)
	C = false
	edx = edx | ebx
	SZO = cond(edx)
	C = false
	branch Test(LT,SO) l00401065_thunk_fn0040122D
	goto l0040106B
	// succ:  l0040106B l00401065_thunk_fn0040122D
l00401065_thunk_fn0040122D:
	call fn0040122D (retsize: 0;)
	return
	// succ:  fn00401057_exit
l0040106B:
	v13 = bh
	bh = bh
	bh = v13
	bh = bh
	branch Test(GE,SO) l0040106F_thunk_fn0040122D
	goto l00401075
	// succ:  l00401075 l0040106F_thunk_fn0040122D
l0040106F_thunk_fn0040122D:
	call fn0040122D (retsize: 0;)
	return
	// succ:  fn00401057_exit
l00401075:
	v14 = Mem0[esi + 0x0000004B:word32] + ebx
	Mem0[esi + 0x0000004B:word32] = v14
	SCZO = cond(v14)
	edi = 0x1B30FBAD
	// succ:  l00401078_thunk_fn0040107D
l00401078_thunk_fn0040107D:
	call fn0040107D (retsize: 0;)
	return
	// succ:  fn00401057_exit
fn00401057_exit:


// fn0040107D
// Return size: 0
void fn0040107D()
fn0040107D_entry:
	// succ:  l0040107D
l0040107D:
	dh = dh + 0xE7 + C
	SCZO = cond(dh)
	dl = -dl
	SCZO = cond(dl)
	C = dl == 0x00
	dl = dl + 0x01
	SZO = cond(dl)
	bh = bh + 0x35 + C
	SCZO = cond(bh)
	dl = dl + 0xBB + C
	SCZO = cond(dl)
	ebx = ebx - 0x00000001
	SZO = cond(ebx)
	cl = ~cl
	esi = eax
	ch = ch - 0xDB - C
	SCZO = cond(ch)
	call fn0040119F (retsize: 4;)
	esp = esp | esi
	SZO = cond(esp)
	C = false
	esp = esp - 0x00000004
	Mem0[esp:word32] = esp
	Mem0[ebx - 0x00000029 + ecx * 0x00000004:word32] = ebx
	// succ:  l0040109A_thunk_fn0040109C
l0040109A_thunk_fn0040109C:
	call fn0040109C (retsize: 0;)
	return
	// succ:  fn0040107D_exit
fn0040107D_exit:


// fn0040109C
// Return size: 0
void fn0040109C()
fn0040109C_entry:
	// succ:  l0040109C
l0040109C:
	ecx = ecx + 0x00000001
	SZO = cond(ecx)
	ebx = ebx ^ eax
	SZO = cond(ebx)
	C = false
	ebx = ebx ^ ecx
	SZO = cond(ebx)
	C = false
	ebx = edi
	edx = edx + 0x00000001
	SZO = cond(edx)
	ecx = ecx + edx
	SCZO = cond(ecx)
	branch Test(LE,SZO) l004010A8_thunk_fn004012BF
	goto l004010AE
	// succ:  l004010AE l004010A8_thunk_fn004012BF
l004010A8_thunk_fn004012BF:
	call fn004012BF (retsize: 0;)
	return
	// succ:  fn0040109C_exit
l004010AE:
	esp = esp - 0x00000002
	Mem0[esp:word16] = di
	di = Mem0[esp:word16]
	esp = esp + 0x00000002
	branch Test(GT,SZO) l004010B2_thunk_fn004012BF
	goto l004010B8
	// succ:  l004010B8 l004010B2_thunk_fn004012BF
l004010B2_thunk_fn004012BF:
	call fn004012BF (retsize: 0;)
	return
	// succ:  fn0040109C_exit
l004010B8:
	bl = bl + dl
	SCZO = cond(bl)
	v15 = Mem0[edi:byte] | ah
	Mem0[edi:byte] = v15
	SZO = cond(Mem0[edi:byte])
	C = false
	eax = __indw(0x5E)
	// succ:  l004010BC_thunk_fn004010BE
l004010BC_thunk_fn004010BE:
	call fn004010BE (retsize: 0;)
	return
	// succ:  fn0040109C_exit
fn0040109C_exit:


// fn004010BE
// Return size: 0
void fn004010BE()
fn004010BE_entry:
	// succ:  l004010BE
l004010BE:
	esp = fp
	ebx = ebx + eax
	SCZO = cond(ebx)
	ebx = ebx ^ eax
	SZO = cond(ebx)
	C = false
	edi = edi + 0x00000001
	SZO = cond(edi)
	edi = edi - ebx
	SCZO = cond(edi)
	edi = edi + 0x00000001
	SZO = cond(edi)
	ecx = ecx + eax
	SCZO = cond(ecx)
	edi = edi - 0x00000001
	SZO = cond(edi)
	edx = edx + 0x00000001
	SZO = cond(edx)
	ebx = ebx + 0x00000001
	SZO = cond(ebx)
	eax = eax & 0xEEEEEEEE
	SZO = cond(eax)
	C = false
	branch Test(ULE,CZ) l004010D0_thunk_fn0040109C
	goto l004010D0_thunk_fn004010D2
	// succ:  l004010D0_thunk_fn004010D2 l004010D0_thunk_fn0040109C
l004010BE:
	ebx = ebx + eax
	SCZO = cond(ebx)
	ebx = ebx ^ eax
	SZO = cond(ebx)
	C = false
	edi = edi + 0x00000001
	SZO = cond(edi)
	edi = edi - ebx
	SCZO = cond(edi)
	edi = edi + 0x00000001
	SZO = cond(edi)
	ecx = ecx + eax
	SCZO = cond(ecx)
	edi = edi - 0x00000001
	SZO = cond(edi)
	edx = edx + 0x00000001
	SZO = cond(edx)
	ebx = ebx + 0x00000001
	SZO = cond(ebx)
	eax = eax & 0xEEEEEEEE
	SZO = cond(eax)
	C = false
	branch Test(ULE,CZ) l0040109C
	goto l004010D0_thunk_fn004010D2
	// succ:  l004010D0_thunk_fn004010D2 l004010D0_thunk_fn0040109C
l004010D0_thunk_fn0040109C:
	call fn0040109C (retsize: 0;)
	return
	// succ:  fn004010BE_exit
l004010D0_thunk_fn0040109C:
	call fn0040109C (retsize: 0;)
	return
	// succ:  fn004010BE_exit
l004010D0_thunk_fn004010D2:
	call fn004010D2 (retsize: 0;)
	return
	// succ:  fn004010BE_exit l004010D0_thunk_fn004010D2
l004010D0_thunk_fn004010D2:
	call fn004010D2 (retsize: 0;)
	return
	// succ:  fn004010BE_exit
l004010D0_thunk_fn004010D2:
	call fn004010D2 (retsize: 0;)
	return
	// succ:  fn004010BE_exit
fn004010BE_exit:


// fn004010D2
// Return size: 0
void fn004010D2()
fn004010D2_entry:
	call fn0040109C (retsize: 0;)
	return
	// succ:  l004010D2 fn004010D2_exit
l004010D2:
	dx = dx
	branch Test(UGT,CZ) l0040109C
	goto l004010D7
	// succ:  l004010D7 l004010D5_thunk_fn0040109C
l004010D5_thunk_fn0040109C:
	call fn0040109C (retsize: 0;)
	return
	// succ:  fn004010D2_exit
l004010D7:
	al = al + 0x24 + C
	SCZO = cond(al)
	v8 = eax
	eax = esi
	esi = v8
	esi = 0xDE3341EE
	// succ:  l004010DA_thunk_fn004010DF
l004010DA_thunk_fn004010DF:
	call fn004010DF (retsize: 0;)
	return
	// succ:  fn004010D2_exit
fn004010D2_exit:


// fn004010DC
// Return size: 0
void fn004010DC()
fn004010DC_entry:
	// succ:  l004010DC
l004010DC:
	ecx = ecx + 0x00000001
	SZO = cond(ecx)
	ebx = ebx ^ esi
	SZO = cond(ebx)
	C = false
	// succ:  l004010DD_thunk_fn004010DF
l004010DD_thunk_fn004010DF:
	call fn004010DF (retsize: 0;)
	return
	// succ:  fn004010DC_exit
fn004010DC_exit:


// fn004010DF
// Return size: 0
void fn004010DF()
fn004010DF_entry:
	// succ:  l004010DF
l004010DF:
	esp = fp
	edx = edx + 0x00000001
	SZO = cond(edx)
	ecx = ecx - 0x00000001
	SZO = cond(ecx)
	edx = edx + edi
	SCZO = cond(edx)
	ecx = ecx + ebx
	SCZO = cond(ecx)
	edi = edi | eax
	SZO = cond(edi)
	C = false
	ebx = esi
	eax = Mem0[fs:0x00000030:word32]
	branch Test(LE,SZO) l004010EF_thunk_fn00401057
	goto l004010EF_thunk_fn004010F5
	// succ:  l004010EF_thunk_fn004010F5 l004010EF_thunk_fn00401057
l004010DF:
	edx = edx + 0x00000001
	SZO = cond(edx)
	ecx = ecx - 0x00000001
	SZO = cond(ecx)
	edx = edx + edi
	SCZO = cond(edx)
	ecx = ecx + ebx
	SCZO = cond(ecx)
	edi = edi | eax
	SZO = cond(edi)
	C = false
	ebx = esi
	eax = Mem0[fs:0x00000030:word32]
	branch Test(LE,SZO) l00401057
	goto l004010EF_thunk_fn004010F5
	// succ:  l004010EF_thunk_fn004010F5 l004010EF_thunk_fn00401057
l004010EF_thunk_fn00401057:
	call fn00401057 (retsize: 0;)
	return
	// succ:  fn004010DF_exit
l004010EF_thunk_fn00401057:
	call fn00401057 (retsize: 0;)
	return
	// succ:  fn004010DF_exit
l004010EF_thunk_fn004010F5:
	call fn004010F5 (retsize: 0;)
	return
	// succ:  fn004010DF_exit l004010EF_thunk_fn004010F5
l004010EF_thunk_fn004010F5:
	call fn004010F5 (retsize: 0;)
	return
	// succ:  fn004010DF_exit
l004010EF_thunk_fn004010F5:
	call fn004010F5 (retsize: 0;)
	return
	// succ:  fn004010DF_exit
fn004010DF_exit:


// fn004010F5
// Return size: 0
void fn004010F5()
fn004010F5_entry:
	// succ:  l004010F5
l004010F5:
fn004010F5_exit:


// fn00401106
// Return size: 0
void fn00401106()
fn00401106_entry:
	// succ:  l00401106
l00401106:
	esp = fp
	ch = ch - bl
	SCZO = cond(ch)
	ch = ch + 0x91 + C
	SCZO = cond(ch)
	esi = esi + edi
	SCZO = cond(esi)
	ebx = ebx ^ esi
	SZO = cond(ebx)
	C = false
	ecx = edx
	ebx = ebx - 0x00000001
	SZO = cond(ebx)
	dl = 0xEF
	edx = edx - esi
	SCZO = cond(edx)
	dl = -dl
	SCZO = cond(dl)
	C = dl == 0x00
	goto l0040135F
	// succ:  l0040135F
l00401106:
l0040135F:
	edi = edi - edx
	SCZO = cond(edi)
	dl = dl - 0xA3 - C
	SCZO = cond(dl)
	ecx = edi
	ecx = ebx
	ecx = esi
	edx = ecx
	esi = esi + ebx
	SCZO = cond(esi)
	edi = edi ^ ebx
	SZO = cond(edi)
	C = false
	ebx = ebx + 0x00000001
	SZO = cond(ebx)
fn00401106_exit:


// fn00401158
// Return size: 0
void fn00401158()
fn00401158_entry:
	// succ:  l00401158
l00401158:
	esp = fp
	esp = esp + 0x00000004
	// succ:  l00401158_thunk_fn00401159
l00401158_thunk_fn00401159:
	call fn00401159 (retsize: 0;)
	return
	// succ:  fn00401158_exit
fn00401158_exit:


// fn00401159
// Return size: 0
void fn00401159()
fn00401159_entry:
	// succ:  l00401159
l00401159:
	esp = fp
	al = al & 0x04
	SZO = cond(al)
	C = false
	ebx = ebx ^ esi
	SZO = cond(ebx)
	C = false
	esi = esi + edi
	SCZO = cond(esi)
	edi = edi ^ ebx
	SZO = cond(edi)
	C = false
	ebx = ebx - 0x00000001
	SZO = cond(ebx)
	ebx = ebx + 0x00000001
	SZO = cond(ebx)
	edi = edi + 0x00000001
	SZO = cond(edi)
	edi = edi - 0x00000001
	SZO = cond(edi)
	ebx = ecx
	edx = edx ^ esi
	SZO = cond(edx)
	C = false
	call fn0040103A (retsize: 4;)
	ds = Mem0[esp:selector]
	esp = esp + 0x00000002
	edi = edi - ebp
	SCZO = cond(edi)
	__outb(dx, al)
	SCZO = cond(eax - Mem0[edi:word32])
	edi = edi + 0x00000004
	esp = esp - 0x00000001
	SZO = cond(esp)
	cs = bx
	ecx = ecx - edx
	SCZO = cond(ecx)
	edi = edi + 0x00000001
	SZO = cond(edi)
	eax = eax | ebx
	SZO = cond(eax)
	C = false
	eax = eax + esi
	SCZO = cond(eax)
	esi = ebx
	edi = ebx
	edi = ecx
	edx = ecx
	goto l00401186_thunk_fn0040137B
	// succ:  l00401186_thunk_fn0040137B
l00401159:
	ebx = ebx ^ esi
	SZO = cond(ebx)
	C = false
	esi = esi + edi
	SCZO = cond(esi)
	edi = edi ^ ebx
	SZO = cond(edi)
	C = false
	ebx = ebx - 0x00000001
	SZO = cond(ebx)
	ebx = ebx + 0x00000001
	SZO = cond(ebx)
	edi = edi + 0x00000001
	SZO = cond(edi)
	edi = edi - 0x00000001
	SZO = cond(edi)
	ebx = ecx
	edx = edx ^ esi
	SZO = cond(edx)
	C = false
	call fn0040103A (retsize: 4;)
	ds = Mem0[esp:selector]
	esp = esp + 0x00000002
	edi = edi - ebp
	SCZO = cond(edi)
	__outb(dx, al)
	SCZO = cond(eax - Mem0[edi:word32])
	edi = edi + 0x00000004
	esp = esp - 0x00000001
	SZO = cond(esp)
	cs = bx
	ecx = ecx - edx
	SCZO = cond(ecx)
	edi = edi + 0x00000001
	SZO = cond(edi)
	eax = eax | ebx
	SZO = cond(eax)
	C = false
	eax = eax + esi
	SCZO = cond(eax)
	esi = ebx
	edi = ebx
	edi = ecx
	edx = ecx
	// succ:  l00401181_thunk_fn0040137B
l00401181_thunk_fn0040137B:
	call fn0040137B (retsize: 0;)
	return
	// succ:  fn00401159_exit
l00401186_thunk_fn0040137B:
	call fn0040137B (retsize: 0;)
	return
	// succ:  fn00401159_exit
fn00401159_exit:


// fn0040118B
// Return size: 0
void fn0040118B()
fn0040118B_entry:
	// succ:  l0040118B
l0040118B:
	esp = fp
	Mem0[esp:word32] = edi
fn0040118B_exit:


// fn0040119F
// Return size: 0
void fn0040119F()
fn0040119F_entry:
	// succ:  l0040119F
l0040119F:
	esp = fp
	esp = esp + 0x00000004
	dh = dh - 0x01
	SZO = cond(dh)
	esi = esi + 0x00000001
	SZO = cond(esi)
	edi = edi | edx
	SZO = cond(edi)
	C = false
	cl = cl - 0xA2 - C
	SCZO = cond(cl)
	edx = esi
	dh = dh - ah
	SCZO = cond(dh)
	dh = bh
fn0040119F_exit:


// fn004011BB
// Return size: 0
void fn004011BB()
fn004011BB_entry:
	// succ:  l004011BB
l004011BB:
	esp = fp
	ecx = ecx + edx
	SCZO = cond(ecx)
	ecx = ecx | esi
	SZO = cond(ecx)
	C = false
	esi = esi ^ edi
	SZO = cond(esi)
	C = false
	ecx = ecx | edx
	SZO = cond(ecx)
	C = false
	esi = esi | edi
	SZO = cond(esi)
	C = false
	esi = esi - eax
	SCZO = cond(esi)
	goto l004011C7_thunk_fn004011EB
	// succ:  l004011C7_thunk_fn004011EB
l004011BB:
l004011C7_thunk_fn004011EB:
	call fn004011EB (retsize: 0;)
	return
	// succ:  fn004011BB_exit
fn004011BB_exit:


// fn004011D1
// Return size: 0
void fn004011D1()
fn004011D1_entry:
	// succ:  l004011D1
l004011D1:
	esi = esi - ecx
	SCZO = cond(esi)
	ecx = edi
	edi = edi - ebx
	SCZO = cond(edi)
	esi = esi - edx
	SCZO = cond(esi)
	esi = esi | ecx
	SZO = cond(esi)
	C = false
	esi = esi - eax
	SCZO = cond(esi)
	ebx = ebx - esi
	SCZO = cond(ebx)
	branch Test(OV,O) l0040124B
	// succ:  l004011E1 l0040124B
l004011E1:
	si = esi
	branch Test(NO,O) l0040124B
	// succ:  l004011E6 l0040124B
l004011E6:
	esp = esp - 0x00000004
	Mem0[esp:word32] = ecx
	edx = edx - 0x00000001
	SZO = cond(edx)
	Mem0[edi:word32] = __in(edx)
	edi = edi + 0x00000004
	branch Test(OV,O) l00401233
l0040124B:
	esi = esi + 0x00000001
	SZO = cond(esi)
	// succ:  l0040124B_thunk_fn00401233
l0040124B_thunk_fn00401233:
	call fn00401233 (retsize: 0;)
	return
	// succ:  fn004011D1_exit
fn004011D1_exit:


// fn004011EB
// Return size: 0
void fn004011EB()
fn004011EB_entry:
	goto l004011EB
	// succ:  l004011EB
l004011EA_thunk_fn00401233:
	call fn00401233 (retsize: 0;)
	return
	// succ:  fn004011EB_exit
l004011EB:
	esp = fp
	edi = edi + 0x00000001
	SZO = cond(edi)
	goto l004011EB_thunk_fn004011EC
	// succ:  l004011EB_thunk_fn004011EC
l004011EB:
	call fn004011EC (retsize: 0;)
	return
	// succ:  l004011EB_thunk_fn004011EC l004011EA_thunk_fn00401233 fn004011EB_exit
l004011EB_thunk_fn004011EC:
	call fn004011EC (retsize: 0;)
	return
	// succ:  fn004011EB_exit
l004011EB_thunk_fn004011EC:
	call fn004011EC (retsize: 0;)
	return
	// succ:  fn004011EB_exit
fn004011EB_exit:


// fn004011EC
// Return size: 0
void fn004011EC()
fn004011EC_entry:
	goto l004011EC
	// succ:  l004011EC
l00401132:
	esi = esi + 0x00000001
	SZO = cond(esi)
	eax = Mem0[eax + 0x00000008:word32]
	ebx = ebx - ecx
	SCZO = cond(ebx)
	ebx = ebx | edi
	SZO = cond(ebx)
	C = false
	edx = edx + edi
	SCZO = cond(edx)
	edi = edx
	edi = edi - esi
	SCZO = cond(edi)
	edx = edx ^ edi
	SZO = cond(edx)
	C = false
	branch Test(LT,SO) l00401142_thunk_fn004010BE
	goto l00401148
	// succ:  l00401148 l00401142_thunk_fn004010BE
l00401142_thunk_fn004010BE:
	call fn004010BE (retsize: 0;)
	return
	// succ:  fn004011EC_exit
l00401148:
	v18 = al
	al = al
	al = v18
	esp = esp - 0x00000002
	Mem0[esp:word16] = si
	si = Mem0[esp:word16]
	esp = esp + 0x00000002
	branch Test(GE,SO) l0040114E_thunk_fn004010BE
	goto l00401154
	// succ:  l00401154 l0040114E_thunk_fn004010BE
l0040114E_thunk_fn004010BE:
	call fn004010BE (retsize: 0;)
	return
	// succ:  fn004011EC_exit
l00401154:
	esp = esp - 0x00000004
	Mem0[esp:word32] = 0x8DD4BE21
	// succ:  l00401154_thunk_fn00401159
l00401154_thunk_fn00401159:
	call fn00401159 (retsize: 0;)
	return
	// succ:  fn004011EC_exit
l004011EC:
	edx = edx ^ ebx
	SZO = cond(edx)
	C = false
	edx = edi
	edx = edx - 0x00000001
	SZO = cond(edx)
	ebx = ebx + ecx
	SCZO = cond(ebx)
	ebx = ebx + eax
	SCZO = cond(ebx)
	edx = edx - 0x00000001
	SZO = cond(edx)
	edi = edi ^ ecx
	SZO = cond(edi)
	C = false
	ecx = ecx + edi
	SCZO = cond(ecx)
	esi = esi | edx
	SZO = cond(esi)
	C = false
	branch Test(OV,O) l00401132
	// succ:  l00401202 l00401132
l00401202:
	v12 = edi
	edi = edi
	edi = v12
	branch Test(NO,O) l00401132
	// succ:  l0040120A l00401132
l0040120A:
	ds = Mem0[esp:selector]
	esp = esp + 0x00000002
	al = al & 0x93
	SZO = cond(al)
	C = false
	ecx = ecx - 0x00000001
	branch ecx != 0x00000000 l00401212
	// succ:  l0040120F l00401212
l0040120F:
	ecx = ebx
	// succ:  l00401212
l00401212:
	edi = edi + esi
	SCZO = cond(edi)
	ecx = ecx | eax
	SZO = cond(ecx)
	C = false
	ecx = ecx - edx
	SCZO = cond(ecx)
	edi = edx
	branch Test(ULT,C) l004012DE
	goto l00401220
	// succ:  l00401220 l0040121A_thunk_fn004012DE
l0040121A_thunk_fn004012DE:
	call fn004012DE (retsize: 0;)
	return
	// succ:  fn004011EC_exit
l00401220:
	v16 = esi
	esi = esi
	esi = v16
fn004011EC_exit:


// fn0040122D
// Return size: 0
void fn0040122D()
fn0040122D_entry:
	// succ:  l0040122D
l0040122D:
	esp = fp
	ebx = ebx + edi
	SCZO = cond(ebx)
	edx = edx + ebx
	SCZO = cond(edx)
	esi = esi | edi
	SZO = cond(esi)
	C = false
	goto l00401231_thunk_fn00401233
	// succ:  l00401231_thunk_fn00401233
l0040122D:
l00401231_thunk_fn00401233:
	call fn00401233 (retsize: 0;)
	return
	// succ:  fn0040122D_exit
fn0040122D_exit:


// fn00401233
// Return size: 0
void fn00401233()
fn00401233_entry:
	// succ:  l00401233
l00401233:
	edi = edi + ebx
	SCZO = cond(edi)
	ebx = ebx | edx
	SZO = cond(ebx)
	C = false
	edi = edi + eax
	SCZO = cond(edi)
	eax = Mem0[eax + 0x00000090:word32]
	ecx = ecx - 0x00000001
	SZO = cond(ecx)
	edi = ecx
	call fn0040118B (retsize: 4;)
	eax = eax & 0x46B6A069
	SZO = cond(eax)
	C = false
	// succ:  l0040124C
l0040124C:
	edx = edx + ecx
	SCZO = cond(edx)
	edx = edx - 0x00000001
	SZO = cond(edx)
	ecx = ecx - edi
	SCZO = cond(ecx)
	edi = edi + ecx
	SCZO = cond(edi)
	edx = edx | eax
	SZO = cond(edx)
	C = false
	ecx = ecx | edi
	SZO = cond(ecx)
	C = false
	esi = esi + edi
	SCZO = cond(esi)
	ecx = ecx | esi
	SZO = cond(ecx)
	C = false
	ebx = ebx - ecx
	SCZO = cond(ebx)
	branch Test(ULE,CZ) l00401342
	// succ:  l00401263 l00401342
l00401263:
	// succ:  l00401268
l00401268:
	// succ:  l0040126D
l0040126D:
	branch Test(UGT,CZ) l00401342
	// succ:  l00401273 l00401342
l00401273:
	esp = esp - 0x00000004
	Mem0[esp:word32] = cs
	v14 = eax
	eax = ebp
	ebp = v14
	return
	// succ:  fn00401233_exit
l00401342:
	edx = edx + eax
	SCZO = cond(edx)
	dl = -dl
	SCZO = cond(dl)
	C = dl == 0x00
	bh = 0x68
	edx = edx + edi
	SCZO = cond(edx)
	cl = -cl
	SCZO = cond(cl)
	C = cl == 0x00
	dl = dl | cl
	SZO = cond(dl)
	C = false
	ebx = ebx | eax
	SZO = cond(ebx)
	C = false
	edx = edx ^ esi
	SZO = cond(edx)
	C = false
	ch = ch - ah
	SCZO = cond(ch)
	// succ:  l00401352_thunk_fn0040107D
l00401352_thunk_fn0040107D:
	call fn0040107D (retsize: 0;)
	return
	// succ:  fn00401233_exit
fn00401233_exit:


// fn0040129C
// Return size: 0
void fn0040129C()
fn0040129C_entry:
	// succ:  l0040129C
l0040129C:
	esp = esp + 0x00000004
	bh = bh - 0xD1 - C
	SCZO = cond(bh)
	dl = dl - al
	SCZO = cond(dl)
	ecx = ecx - esi
	SCZO = cond(ecx)
	cl = cl + 0x4C
	SCZO = cond(cl)
	edi = edi - ebx
	SCZO = cond(edi)
	branch Test(OV,O) l004012AC_thunk_fn00401106
	goto l004012B2
	// succ:  l004012B2 l004012AC_thunk_fn00401106
l004012AC_thunk_fn00401106:
	call fn00401106 (retsize: 0;)
	return
	// succ:  fn0040129C_exit
l004012B2:
fn0040129C_exit:


// fn004012BF
// Return size: 0
void fn004012BF()
fn004012BF_entry:
	// succ:  l004012BF
l004012BF:
	esp = fp
	ecx = ecx - ebx
	SCZO = cond(ecx)
	ebx = ebx | edx
	SZO = cond(ebx)
	C = false
	ecx = eax
	esi = esi | edx
	SZO = cond(esi)
	C = false
	edx = edx ^ ebx
	SZO = cond(edx)
	C = false
	esi = esi + eax
	SCZO = cond(esi)
	eax = eax - 0xEEEEEEEE
	SCZO = cond(eax)
	esi = esi - eax
	SCZO = cond(esi)
	call fn00401158 (retsize: 4;)
	v11 = Mem0[ebx + 0x85F6CC5F:word32] << 0xFFFFFFD4
	Mem0[ebx + 0x85F6CC5F:word32] = v11
	SCZO = cond(v11)
	goto l004012D7_thunk_fn004012DE
	// succ:  l004012D7_thunk_fn004012DE
l004012BF:
l004012D7_thunk_fn004012DE:
	call fn004012DE (retsize: 0;)
	return
	// succ:  fn004012BF_exit
fn004012BF_exit:


// fn004012DE
// Return size: 0
void fn004012DE()
fn004012DE_entry:
	// succ:  l004012DE
l004012DE:
	ebx = ebx | edi
	SZO = cond(ebx)
	C = false
	edx = edx + edi
	SCZO = cond(edx)
	esi = esi ^ ebx
	SZO = cond(esi)
	C = false
	ecx = ecx - esi
	SCZO = cond(ecx)
	ebx = ebx - edi
	SCZO = cond(ebx)
	esi = edx
	ecx = ecx | edx
	SZO = cond(ecx)
	C = false
	ebx = eax
	eax = Mem0[eax:word32]
	branch Test(LE,SZO) l004012F0_thunk_fn004011BB
	goto l004012F6
	// succ:  l004012F6 l004012F0_thunk_fn004011BB
l004012F0_thunk_fn004011BB:
	call fn004011BB (retsize: 0;)
	return
	// succ:  fn004012DE_exit
l004012F6:
	cl = cl
	branch Test(GT,SZO) l004012F8_thunk_fn004011BB
	goto l004012FE
	// succ:  l004012FE l004012F8_thunk_fn004011BB
l004012F8_thunk_fn004011BB:
	call fn004011BB (retsize: 0;)
	return
	// succ:  fn004012DE_exit
l004012FE:
fn004012DE_exit:


// fn00401302
// Return size: 6
void fn00401302()
fn00401302_entry:
	// succ:  l00401302
l00401302:
	esp = fp
	esp = esp - 0x00000004
	Mem0[esp:word32] = ebp
	ebp = esp
	ebx = ebx | ecx
	SZO = cond(ebx)
	C = false
	edi = edi - 0x00000001
	SZO = cond(edi)
	edx = edx - edi
	SCZO = cond(edx)
	ecx = ecx + 0x00000001
	SZO = cond(ecx)
	esi = edx
	edi = edi + 0x00000001
	SZO = cond(edi)
	edx = edx ^ eax
	SZO = cond(edx)
	C = false
	edi = edi | edx
	SZO = cond(edi)
	C = false
	edi = edi - edx
	SCZO = cond(edi)
fn00401302_exit:


// fn00401314
// Return size: 0
void fn00401314()
fn00401314_entry:
	// succ:  l00401314
l00401314:
	esp = fp
	goto l00401314_thunk_fn004011D1
	// succ:  l00401314_thunk_fn004011D1
l00401314:
	call fn004011D1 (retsize: 0;)
	return
	// succ:  l00401314_thunk_fn004011D1 fn00401314_exit
l00401314_thunk_fn004011D1:
	call fn004011D1 (retsize: 0;)
	return
	// succ:  fn00401314_exit
l00401314_thunk_fn004011D1:
	call fn004011D1 (retsize: 0;)
	return
	// succ:  fn00401314_exit
fn00401314_exit:


// fn0040137B
// Return size: 0
void fn0040137B()
fn0040137B_entry:
	// succ:  l0040137B
l0040137B:
	call fn00402705 (retsize: 4;)
	branch Test(NS,S) l00401380_thunk_fn00401314
	goto l00401382
	// succ:  l00401382 l00401380_thunk_fn00401314
l00401380_thunk_fn00401314:
	call fn00401314 (retsize: 0;)
	return
	// succ:  fn0040137B_exit
l00401382:
	esp = esp + 0x00000001
	SZO = cond(esp)
fn0040137B_exit:


// fn0040200B
// Return size: 4
void fn0040200B()
fn0040200B_entry:
	// succ:  l0040200B
l0040200B:
	esp = fp
	edx = edx + 0x00000001
	SZO = cond(edx)
	bh = al
	dh = 0x7E
	bh = bh - bl
	SCZO = cond(bh)
	edx = edx | esi
	SZO = cond(edx)
	C = false
	dh = dh - 0x01
	SZO = cond(dh)
	esi = esi + 0x00000001
	SZO = cond(esi)
	goto l00402017_thunk_fn004023C1
	// succ:  l00402017_thunk_fn004023C1
l0040200B:
l00402017_thunk_fn004023C1:
	call fn004023C1 (retsize: 4;)
	return
	// succ:  fn0040200B_exit
fn0040200B_exit:


// fn00402024
// Return size: 0
void fn00402024()
fn00402024_entry:
	// succ:  l00402024
l00402024:
fn00402024_exit:


// fn00402064
// Return size: 0
void fn00402064()
fn00402064_entry:
	// succ:  l00402064
l00402064:
	esp = fp
	bh = -bh
	SCZO = cond(bh)
	C = bh == 0x00
	bl = 0x44
	bh = 0x19
	ebx = ebx + 0x00000001
	SZO = cond(ebx)
	bl = -bl
	SCZO = cond(bl)
	C = bl == 0x00
	edi = edi ^ eax
	SZO = cond(edi)
	C = false
	bl = bl | dl
	SZO = cond(bl)
	C = false
	bl = bl - ah
	SCZO = cond(bl)
	bl = bl + 0x01
	SZO = cond(bl)
	branch Test(LE,SZO) l00402075_thunk_fn00402A91
	goto l0040207B
	// succ:  l0040207B l00402075_thunk_fn00402A91
l00402064:
l00402075_thunk_fn00402A91:
	call fn00402A91 (retsize: 0;)
	return
	// succ:  fn00402064_exit
l0040207B:
	branch Test(NO,O) l0040207D
	// succ:  l0040207D
l0040207D:
	branch Test(GT,SZO) l0040207D_thunk_fn00402A91
	goto l00402083
	// succ:  l00402083 l0040207D_thunk_fn00402A91
l0040207D_thunk_fn00402A91:
	call fn00402A91 (retsize: 0;)
	return
	// succ:  fn00402064_exit
l00402083:
	branch Test(NE,Z) l00402083_thunk_fn004020ED
	goto l00402085
	// succ:  l00402085 l00402083_thunk_fn004020ED
l00402083_thunk_fn004020ED:
	call fn004020ED (retsize: 0;)
	return
	// succ:  fn00402064_exit
l00402085:
	ds = Mem0[esp:selector]
	esp = esp + 0x00000002
	esi = esi + Mem0[edi:word32] + C
	SCZO = cond(esi)
	// succ:  l00402086_thunk_fn00402088
l00402086_thunk_fn00402088:
	call fn00402088 (retsize: 0;)
	return
	// succ:  fn00402064_exit
fn00402064_exit:


// fn00402088
// Return size: 0
void fn00402088()
fn00402088_entry:
	// succ:  l00402088
l00402088:
	esp = fp
	Mem0[esp - 0x00000010:word32] = Mem0[esp:word32]
	esp = esp + 0x00000004
	al = cl
	esi = esi | edi
	SZO = cond(esi)
	C = false
	ebx = ebx ^ edx
	SZO = cond(ebx)
	C = false
	ah = ah + 0xD1 + C
	SCZO = cond(ah)
	eax = eax + ecx
	SCZO = cond(eax)
	edi = edi + 0x00000001
	SZO = cond(edi)
	esp = esp - 0x00000004
	Mem0[esp:word32] = Mem0[ecx:word32]
	branch Test(LE,SZO) l0040209A_thunk_fn00402759
	goto l004020A0
	// succ:  l004020A0 l0040209A_thunk_fn00402759
l0040209A_thunk_fn00402759:
	call fn00402759 (retsize: 0;)
	return
	// succ:  fn00402088_exit
l004020A0:
	branch Test(UGE,C) l004020A2
	// succ:  l004020A2
l004020A2:
	eax = eax
	branch Test(GT,SZO) l004020A4_thunk_fn00402759
	goto l004020AA
	// succ:  l004020AA l004020A4_thunk_fn00402759
l004020A4_thunk_fn00402759:
	call fn00402759 (retsize: 0;)
	return
	// succ:  fn00402088_exit
l004020AA:
fn00402088_exit:


// fn004020B2
// Return size: 0
void fn004020B2()
fn004020B2_entry:
	// succ:  l004020B2
l004020B2:
	esp = fp
	eax = eax + 0x00000001
	SZO = cond(eax)
	dl = cl
	dl = dl + 0xB2
	SCZO = cond(dl)
	esi = ecx
	edx = edx - esi
	SCZO = cond(edx)
	dl = ah
	dh = 0xD7
	dh = dh - 0x01
	SZO = cond(dh)
	dl = dl ^ bl
	SZO = cond(dl)
	C = false
	dl = ah
	goto l004020C6_thunk_fn00402AF4
	// succ:  l004020C6_thunk_fn00402AF4
l004020B2:
l004020C6_thunk_fn00402AF4:
	call fn00402AF4 (retsize: 0;)
	return
	// succ:  fn004020B2_exit
fn004020B2_exit:


// fn004020D1
// Return size: 0
void fn004020D1()
fn004020D1_entry:
	// succ:  l004020D1
l004020D1:
	v3 = Mem0[esp:word32]
	Mem0[esp:word32] = eax
	eax = v3
	v5 = di
	di = di
	di = v5
	eax = Mem0[esp:word32]
	esp = esp + 0x00000004
	al = al | bl
	SZO = cond(al)
	C = false
	edx = edx - edi
	SCZO = cond(edx)
	bh = bh + dh
	SCZO = cond(bh)
	ebx = ebx ^ edx
	SZO = cond(ebx)
	C = false
	dh = dh - dl
	SCZO = cond(dh)
	call fn00402DDF (retsize: 4;)
	// succ:  l98A7_4F06
l98A7_4F06:
fn004020D1_exit:


// fn004020ED
// Return size: 0
void fn004020ED()
fn004020ED_entry:
	// succ:  l004020ED
l004020ED:
	esp = fp
	SCZO = cond(Mem0[esi:byte] - Mem0[edi:byte])
	esi = esi + 0x00000001
	edi = edi + 0x00000001
	goto l004020ED_thunk_fn004020EE
	// succ:  l004020ED_thunk_fn004020EE
l004020ED:
l004020ED_thunk_fn004020EE:
	call fn004020EE (retsize: 0;)
	return
	// succ:  fn004020ED_exit
fn004020ED_exit:


// fn004020EE
// Return size: 0
void fn004020EE()
fn004020EE_entry:
	// succ:  l004020EE
l004020EE:
	esp = fp
	bl = ch
	edi = edi + edx
	SCZO = cond(edi)
	bl = bl - 0x01
	SZO = cond(bl)
	esi = edx
	edi = edi - esi
	SCZO = cond(edi)
	eax = eax ^ 0xFFFFFEC8
	SZO = cond(eax)
	C = false
	bh = bh ^ bl
	SZO = cond(bh)
	C = false
	bh = -bh
	SCZO = cond(bh)
	C = bh == 0x00
	esi = esi - ecx
	SCZO = cond(esi)
	goto l00402103_thunk_fn00402A02
	// succ:  l00402103_thunk_fn00402A02
l004020EE:
l00402103_thunk_fn00402A02:
	call fn00402A02 (retsize: 0;)
	return
	// succ:  fn004020EE_exit
fn004020EE_exit:


// fn0040210E
// Return size: 6
void fn0040210E()
fn0040210E_entry:
	// succ:  l0040210E
l0040210E:
	bh = bh | dl
	SZO = cond(bh)
	C = false
	bh = bh + 0x50
	SCZO = cond(bh)
	bl = bl | bh
	SZO = cond(bl)
	C = false
	bh = bh - 0x8F - C
	SCZO = cond(bh)
	cl = cl - 0x47 - C
	SCZO = cond(cl)
	bl = bl | ah
	SZO = cond(bl)
	C = false
	bh = bh ^ bl
	SZO = cond(bh)
	C = false
	call fn0040265B (retsize: 4;)
	esp = esp + 0xFFFFFFFC
	eax = 0x8620C87D
	return
	// succ:  fn0040210E_exit
fn0040210E_exit:


// fn0040212A
// Return size: 0
void fn0040212A()
fn0040212A_entry:
	// succ:  l0040212A
l0040212A:
	esp = fp
	eax = eax + ebx
	SCZO = cond(eax)
	bl = bl | bh
	SZO = cond(bl)
	C = false
	bl = bl | dh
	SZO = cond(bl)
	C = false
	bl = bl + 0x92 + C
	SCZO = cond(bl)
	bh = bh ^ al
	SZO = cond(bh)
	C = false
	esi = esi + 0x00000001
	SZO = cond(esi)
	bh = bh - al
	SCZO = cond(bh)
	ebx = ebx - edi
	SCZO = cond(ebx)
l0040212A:
fn0040212A_exit:


// fn00402147
// Return size: 0
void fn00402147()
fn00402147_entry:
	// succ:  l00402147
l00402147:
	esp = fp
	dl = dl - 0x38 - C
	SCZO = cond(dl)
	esi = edx
	dh = bl
	dl = dl + 0xAF
	SCZO = cond(dl)
	esi = esi + 0x00000001
	SZO = cond(esi)
	edx = edx + 0x00000001
	SZO = cond(edx)
	edx = edx ^ esi
	SZO = cond(edx)
	C = false
	dl = -dl
	SCZO = cond(dl)
	C = dl == 0x00
	dh = 0x3E
	dh = 0x0C
	call fn00402EEC (retsize: 4;)
	esp = esp + 0x00001F1A
	al = al & 0x1F
	SZO = cond(al)
	C = false
	v13 = Mem0[ebx + 0xD40299C2:word32] + edx + C
	Mem0[ebx + 0xD40299C2:word32] = v13
	SCZO = cond(v13)
	goto l00402162_thunk_fn00402168
	// succ:  l00402162_thunk_fn00402168
l00402147:
l00402162_thunk_fn00402168:
	call fn00402168 (retsize: 0;)
	return
	// succ:  fn00402147_exit
fn00402147_exit:


// fn00402166
// Return size: 0
void fn00402166()
fn00402166_entry:
	// succ:  l00402166
l00402166:
	esp = fp
	dl = dl + ah
	SCZO = cond(dl)
	goto l00402166_thunk_fn00402168
	// succ:  l00402166_thunk_fn00402168
l00402166:
l00402166_thunk_fn00402168:
	call fn00402168 (retsize: 0;)
	return
	// succ:  fn00402166_exit
fn00402166_exit:


// fn00402168
// Return size: 0
void fn00402168()
fn00402168_entry:
	// succ:  l00402168
l00402168:
	esp = fp
	bl = bl - bh
	SCZO = cond(bl)
	dl = dl ^ cl
	SZO = cond(dl)
	C = false
	bh = bh | dl
	SZO = cond(bh)
	C = false
	dh = dh + 0x4F + C
	SCZO = cond(dh)
	ah = ah + 0x47
	SCZO = cond(ah)
	ah = -ah
	SCZO = cond(ah)
	C = ah == 0x00
	edx = edx | eax
	SZO = cond(edx)
	C = false
	edx = edx ^ esi
	SZO = cond(edx)
	C = false
	eax = Mem0[esp:word32]
	esp = esp + 0x00000004
	branch Test(ULT,C) l0040217B_thunk_fn00402E5A
	goto l0040217B_thunk_fn00402181
	// succ:  l0040217B_thunk_fn00402181 l0040217B_thunk_fn00402E5A
l00402168:
	bl = bl - bh
	SCZO = cond(bl)
	dl = dl ^ cl
	SZO = cond(dl)
	C = false
	bh = bh | dl
	SZO = cond(bh)
	C = false
	dh = dh + 0x4F + C
	SCZO = cond(dh)
	ah = ah + 0x47
	SCZO = cond(ah)
	ah = -ah
	SCZO = cond(ah)
	C = ah == 0x00
	edx = edx | eax
	SZO = cond(edx)
	C = false
	edx = edx ^ esi
	SZO = cond(edx)
	C = false
	eax = Mem0[esp:word32]
	esp = esp + 0x00000004
	branch Test(ULT,C) l00402E5A
	goto l0040217B_thunk_fn00402181
	// succ:  l0040217B_thunk_fn00402181 l0040217B_thunk_fn00402E5A
l0040217B_thunk_fn00402181:
	call fn00402181 (retsize: 0;)
	return
	// succ:  fn00402168_exit l0040217B_thunk_fn00402181
l0040217B_thunk_fn00402181:
	call fn00402181 (retsize: 0;)
	return
	// succ:  fn00402168_exit
l0040217B_thunk_fn00402181:
	call fn00402181 (retsize: 0;)
	return
	// succ:  fn00402168_exit
l0040217B_thunk_fn00402E5A:
	call fn00402E5A (retsize: 0;)
	return
	// succ:  fn00402168_exit
l0040217B_thunk_fn00402E5A:
	call fn00402E5A (retsize: 0;)
	return
	// succ:  fn00402168_exit
fn00402168_exit:


// fn00402181
// Return size: 0
void fn00402181()
fn00402181_entry:
	// succ:  l00402181
l00402181:
	// succ:  l00402186
l00402186:
	di = di
	branch Test(UGE,C) l00402189_thunk_fn00402E5A
	goto l0040218F
	// succ:  l0040218F l00402189_thunk_fn00402E5A
l00402189_thunk_fn00402E5A:
	call fn00402E5A (retsize: 0;)
	return
	// succ:  fn00402181_exit
l0040218F:
	v7 = Mem0[ebx + 0xA3F00CEE:word32] + ecx + C
	Mem0[ebx + 0xA3F00CEE:word32] = v7
	SCZO = cond(v7)
fn00402181_exit:


// fn00402197
// Return size: 0
void fn00402197()
fn00402197_entry:
	// succ:  l00402197
l00402197:
	esp = fp
	bh = bh + dh
	SCZO = cond(bh)
	bh = bh - 0xB4 - C
	SCZO = cond(bh)
	bh = bh + 0x01
	SZO = cond(bh)
	bh = bh - 0x4A - C
	SCZO = cond(bh)
	edi = edi - esi
	SCZO = cond(edi)
	bh = bh - ah
	SCZO = cond(bh)
	branch Test(ULE,CZ) l004021A5_thunk_fn0040223B
	goto l004021AB
	// succ:  l004021AB l004021A5_thunk_fn0040223B
l00402197:
l004021A5_thunk_fn0040223B:
	call fn0040223B (retsize: 0;)
	return
	// succ:  fn00402197_exit
l004021AB:
	dx = dx
	branch Test(UGT,CZ) l004021AE_thunk_fn0040223B
	goto l004021B4
	// succ:  l004021B4 l004021AE_thunk_fn0040223B
l004021AE_thunk_fn0040223B:
	call fn0040223B (retsize: 0;)
	return
	// succ:  fn00402197_exit
l004021B4:
	ebp = Mem0[esp:word32]
	esp = esp + 0x00000004
	branch Test(LE,SZO) l004021B5_thunk_fn004021D9
	goto l004021B7
	// succ:  l004021B7 l004021B5_thunk_fn004021D9
l004021B5_thunk_fn004021D9:
	call fn004021D9 (retsize: 0;)
	return
	// succ:  fn00402197_exit
l004021B7:
	v16 = Mem0[ebx + 0x00000064:byte] + bl
	Mem0[ebx + 0x00000064:byte] = v16
	SCZO = cond(v16)
	// succ:  l004021B7_thunk_fn004021BA
l004021B7_thunk_fn004021BA:
	call fn004021BA (retsize: 0;)
	return
	// succ:  fn00402197_exit
fn00402197_exit:


// fn004021BA
// Return size: 0
void fn004021BA()
fn004021BA_entry:
	// succ:  l004021BA
l004021BA:
	esp = fp
	bl = bl + 0x01
	SZO = cond(bl)
	bh = bh + 0x66 + C
	SCZO = cond(bh)
	ebx = ebx | edi
	SZO = cond(ebx)
	C = false
	bl = -bl
	SCZO = cond(bl)
	C = bl == 0x00
	bh = bh + ch
	SCZO = cond(bh)
	bh = bh - dl
	SCZO = cond(bh)
	branch Test(ULE,CZ) l004021C7_thunk_fn00402C3F
	goto l004021CD
	// succ:  l004021CD l004021C7_thunk_fn00402C3F
l004021BA:
l004021C7_thunk_fn00402C3F:
	call fn00402C3F (retsize: 0;)
	return
	// succ:  fn004021BA_exit
l004021CD:
	ax = ax
	edi = edi
	branch Test(UGT,CZ) l004021D2_thunk_fn00402C3F
	goto l004021D8
	// succ:  l004021D8 l004021D2_thunk_fn00402C3F
l004021D2_thunk_fn00402C3F:
	call fn00402C3F (retsize: 0;)
	return
	// succ:  fn004021BA_exit
l004021D8:
	edx_eax = (int64) eax
	// succ:  l004021D8_thunk_fn004021D9
l004021D8_thunk_fn004021D9:
	call fn004021D9 (retsize: 0;)
	return
	// succ:  fn004021BA_exit
fn004021BA_exit:


// fn004021D9
// Return size: 0
void fn004021D9()
fn004021D9_entry:
	// succ:  l004021D9
l004021D9:
	esp = fp
	ebp = ebp - Mem0[esi:word32]
	SCZO = cond(ebp)
	ebx = ebx - ebp
	SCZO = cond(ebx)
	goto l004021DB_thunk_fn004021DD
	// succ:  l004021DB_thunk_fn004021DD
l004021D9:
	ebp = ebp - Mem0[esi:word32]
	SCZO = cond(ebp)
	ebx = ebx - ebp
	SCZO = cond(ebx)
	goto l004021DB_thunk_fn004021DD
	// succ:  l004021DB_thunk_fn004021DD
l004021DB_thunk_fn004021DD:
	call fn004021DD (retsize: 0;)
	return
	// succ:  fn004021D9_exit
l004021DB_thunk_fn004021DD:
	call fn004021DD (retsize: 0;)
	return
	// succ:  fn004021D9_exit
fn004021D9_exit:


// fn004021DD
// Return size: 0
void fn004021DD()
fn004021DD_entry:
	// succ:  l004021DD
l004021DD:
	bl = bl | al
	SZO = cond(bl)
	C = false
	bh = bh - bl
	SCZO = cond(bh)
	edx = edx + ecx
	SCZO = cond(edx)
	cl = -cl
	SCZO = cond(cl)
	C = cl == 0x00
	edi = edi + 0x00000001
	SZO = cond(edi)
	cl = cl + bh
	SCZO = cond(cl)
	branch Test(OV,O) l0040292E
	// succ:  l004021EE l0040292E
l004021EE:
	dx = edx
	branch Test(NO,O) l0040292E
	// succ:  l004021F7 l0040292E
l004021F7:
	eax = (int32) ax
l0040292E:
	bl = bl + al
	SCZO = cond(bl)
	// succ:  l0040292E_thunk_fn00402930
l0040292E_thunk_fn00402930:
	call fn00402930 (retsize: 0;)
	return
	// succ:  fn004021DD_exit
fn004021DD_exit:


// fn004021FB
// Return size: 0
void fn004021FB()
fn004021FB_entry:
	// succ:  l004021FB
l004021FB:
	esp = fp
	Mem0[esp - 0x00000018:word32] = Mem0[esp:word32]
	esp = esp + 0x00000004
	edi = edi - ecx
	SCZO = cond(edi)
	dh = dh + 0x29 + C
	SCZO = cond(dh)
	ah = ah ^ cl
	SZO = cond(ah)
	C = false
	cl = dl
	esp = esp - 0x00000004
	Mem0[esp:word32] = 0x00003000
	dh = dh + 0x08
	SCZO = cond(dh)
	al = al + 0x01
	SZO = cond(al)
	ah = cl
	ch = ch - 0x01
	SZO = cond(ch)
fn004021FB_exit:


// fn00402222
// Return size: 0
void fn00402222()
fn00402222_entry:
	// succ:  l00402222
l00402222:
	esp = fp
	ch = ch - dl
	SCZO = cond(ch)
	cl = cl + 0xA4
	SCZO = cond(cl)
	dl = dl - 0x5D - C
	SCZO = cond(dl)
	ah = ah + cl
	SCZO = cond(ah)
	bh = bh | ah
	SZO = cond(bh)
	C = false
	al = al + 0x01
	SZO = cond(al)
	edx = edx - 0x00000001
	SZO = cond(edx)
	goto l00402231_thunk_fn00402784
	// succ:  l00402231_thunk_fn00402784
l00402222:
l00402231_thunk_fn00402784:
	call fn00402784 (retsize: 0;)
	return
	// succ:  fn00402222_exit
fn00402222_exit:


// fn0040223B
// Return size: 0
void fn0040223B()
fn0040223B_entry:
	// succ:  l0040223B
l0040223B:
	esp = fp
	bh = bh - dl
	SCZO = cond(bh)
	eax = eax + 0x00000078
	esi = esi - ebx
	SCZO = cond(esi)
	bh = al
	bh = bh + ah
	SCZO = cond(bh)
	esi = esi + 0x00000001
	SZO = cond(esi)
	bh = bh | dl
	SZO = cond(bh)
	C = false
	goto l00402249_thunk_fn004027D8
	// succ:  l00402249_thunk_fn004027D8
l0040223B:
l00402249_thunk_fn004027D8:
	call fn004027D8 (retsize: 0;)
	return
	// succ:  fn0040223B_exit
fn0040223B_exit:


// fn00402254
// Return size: 0
void fn00402254()
fn00402254_entry:
	// succ:  l00402254
l00402254:
	edi = edi ^ eax
	SZO = cond(edi)
	C = false
	esi = esi + ecx
	SCZO = cond(esi)
	bl = -bl
	SCZO = cond(bl)
	C = bl == 0x00
	bl = bl + 0x01
	SZO = cond(bl)
	ebx = edx
	ebx = ebx + 0x00000001
	SZO = cond(ebx)
	esi = edi
	bh = bh | ch
	SZO = cond(bh)
	C = false
	bl = -bl
	SCZO = cond(bl)
	C = bl == 0x00
	ebx = ebx + 0x00000001
	SZO = cond(ebx)
	branch Test(SG,S) l00402266_thunk_fn00402D44
	goto l0040226C
	// succ:  l0040226C l00402266_thunk_fn00402D44
l00402266_thunk_fn00402D44:
	call fn00402D44 (retsize: 0;)
	return
	// succ:  fn00402254_exit
l0040226C:
	v16 = ah
	ah = ah
	ah = v16
	esp = esp - 0x00000004
	Mem0[esp:word32] = ecx
	ecx = Mem0[esp:word32]
	esp = esp + 0x00000004
	branch Test(NS,S) l00402270_thunk_fn00402D44
	goto l00402276
	// succ:  l00402276 l00402270_thunk_fn00402D44
l00402270_thunk_fn00402D44:
	call fn00402D44 (retsize: 0;)
	return
	// succ:  fn00402254_exit
l00402276:
	// succ:  lBE0A_4840
lBE0A_4840:
fn00402254_exit:


// fn0040227B
// Return size: 0
void fn0040227B()
fn0040227B_entry:
	// succ:  l0040227B
l0040227B:
	esp = esp + 0x00000004
	ah = ~ah
	bl = bl - 0x01
	SZO = cond(bl)
	ch = cl
	dl = dl + 0x80
	SCZO = cond(dl)
	cl = cl + 0xFE
	SCZO = cond(cl)
	bh = dl
	branch Test(PE,P) l004023DF
	// succ:  l00402293 l004023DF
l00402293:
l004023DF:
	eax = eax | ecx
	SZO = cond(eax)
	C = false
	cl = cl + 0x01
	SZO = cond(cl)
	esi = esi + 0x00000001
	SZO = cond(esi)
	ah = ah - 0xC0 - C
	SCZO = cond(ah)
	cl = ~cl
	call fn004023EE (retsize: 4;)
	// succ:  l004023E9_thunk_fn004023EE
l004023E9_thunk_fn004023EE:
	call fn004023EE (retsize: 0;)
	return
	// succ:  fn0040227B_exit
fn0040227B_exit:


// fn0040229F
// Return size: 0
void fn0040229F()
fn0040229F_entry:
	// succ:  l0040229F
l0040229F:
	esp = fp
	ch = ch - cl
	SCZO = cond(ch)
	ch = ch + 0x01
	SZO = cond(ch)
	edi = edi + edx
	SCZO = cond(edi)
	esi = esi + 0x00000001
	SZO = cond(esi)
	dh = dh | bh
	SZO = cond(dh)
	C = false
	ebx = ebx + edx
	SCZO = cond(ebx)
	edi = edi - ecx
	SCZO = cond(edi)
	branch Test(SG,S) l004022F6
	goto l004022AE
	// succ:  l004022AE l004022AC_thunk_fn004022F6
l0040229F:
l004022AC_thunk_fn004022F6:
	call fn004022F6 (retsize: 0;)
	return
	// succ:  fn0040229F_exit
l004022AE:
	branch Test(PE,P) l004022B0
	// succ:  l004022B0
l004022B0:
	dl = dl
	branch Test(NS,S) l004022F6
	goto l004022B4
	// succ:  l004022B4 l004022B2_thunk_fn004022F6
l004022B2_thunk_fn004022F6:
	call fn004022F6 (retsize: 0;)
	return
	// succ:  fn0040229F_exit
l004022B4:
	int3()
l00402303_thunk_fn004027C3:
	call fn004027C3 (retsize: 0;)
	return
	// succ:  fn0040229F_exit
fn0040229F_exit:


// fn004022BA
// Return size: 0
void fn004022BA()
fn004022BA_entry:
	// succ:  l004022BA
l004022BA:
	ebx = ebx ^ 0x11331BB7
	SZO = cond(ebx)
	C = false
	ch = ch + 0x83 + C
	SCZO = cond(ch)
	dh = dh ^ al
	SZO = cond(dh)
	C = false
	cl = dh
	dh = -dh
	SCZO = cond(dh)
	C = dh == 0x00
	cl = cl - 0x01
	SZO = cond(cl)
	cl = cl ^ al
	SZO = cond(cl)
	C = false
	dl = dl - bl
	SCZO = cond(dl)
	call fn00402E39 (retsize: 4;)
	eax = Mem0[esi:word32]
	esi = esi + 0x00000004
	v15 = (Mem0[cs:edx:word32] & 0x00000001 << 0x01) != 0x00000000
	Mem0[cs:edx:word32] = __rcr(Mem0[cs:edx:word32], 0x01, C)
	C = v15
	// succ:  l004022D5_thunk_fn004022D8
l004022D5_thunk_fn004022D8:
	call fn004022D8 (retsize: 0;)
	return
	// succ:  fn004022BA_exit
fn004022BA_exit:


// fn004022D8
// Return size: 0
void fn004022D8()
fn004022D8_entry:
	// succ:  l004022D8
l004022D8:
	esp = fp
	bh = bh + 0x98 + C
	SCZO = cond(bh)
	cl = cl - 0x8A - C
	SCZO = cond(cl)
	bl = ~bl
	cl = cl - bl
	SCZO = cond(cl)
	esp = esp - 0x00000004
	Mem0[esp:word32] = eax
	ebx = ebx - 0x00000001
	SZO = cond(ebx)
	cl = cl - dl
	SCZO = cond(cl)
	dl = dl ^ dh
	SZO = cond(dl)
	C = false
	bh = bh + 0x01
	SZO = cond(bh)
	esi = esi + 0x00000001
	SZO = cond(esi)
	call fn004029D8 (retsize: 4;)
	esi = esi + 0x00000001
	SZO = cond(esi)
	es = Mem0[esp:selector]
	esp = esp + 0x00000002
	v16 = Mem0[ebp - 0x0000003A:word32] << 0x00000015
	Mem0[ebp - 0x0000003A:word32] = v16
	SCZO = cond(v16)
	goto l004022F2_thunk_fn004022F6
	// succ:  l004022F2_thunk_fn004022F6
l004022D8:
	bh = bh + 0x98 + C
	SCZO = cond(bh)
	cl = cl - 0x8A - C
	SCZO = cond(cl)
	bl = ~bl
	cl = cl - bl
	SCZO = cond(cl)
	esp = esp - 0x00000004
	Mem0[esp:word32] = eax
	ebx = ebx - 0x00000001
	SZO = cond(ebx)
	cl = cl - dl
	SCZO = cond(cl)
	dl = dl ^ dh
	SZO = cond(dl)
	C = false
	bh = bh + 0x01
	SZO = cond(bh)
	esi = esi + 0x00000001
	SZO = cond(esi)
l004022F2_thunk_fn004022F6:
	call fn004022F6 (retsize: 0;)
	return
	// succ:  fn004022D8_exit
fn004022D8_exit:


// fn004022F6
// Return size: 0
void fn004022F6()
fn004022F6_entry:
	// succ:  l004022F6
l004022F6:
	ch = ch ^ dl
	SZO = cond(ch)
	C = false
	ch = ch - bh
	SCZO = cond(ch)
	ch = ch - 0xB1 - C
	SCZO = cond(ch)
	dh = dh - 0x01
	SZO = cond(dh)
	bh = bh + 0x01
	SZO = cond(bh)
	bl = bl - 0x01
	SZO = cond(bl)
	goto l00402303_thunk_fn004027C3
	// succ:  l00402303_thunk_fn004027C3
fn004022F6_exit:


// fn00402334
// Return size: 0
void fn00402334()
fn00402334_entry:
	// succ:  l00402334
l00402334:
	esp = fp
	__outw(dx, ax)
	bl = -bl
	SCZO = cond(bl)
	C = bl == 0x00
	ch = ch ^ ah
	SZO = cond(ch)
	C = false
	edx = eax
	dl = -dl
	SCZO = cond(dl)
	C = dl == 0x00
	ecx = ecx | edi
	SZO = cond(ecx)
	C = false
	ch = ch + cl
	SCZO = cond(ch)
	goto l00402341_thunk_fn00402024
	// succ:  l00402341_thunk_fn00402024
l00402334:
	bl = -bl
	SCZO = cond(bl)
	C = bl == 0x00
	ch = ch ^ ah
	SZO = cond(ch)
	C = false
	edx = eax
	dl = -dl
	SCZO = cond(dl)
	C = dl == 0x00
	ecx = ecx | edi
	SZO = cond(ecx)
	C = false
	ch = ch + cl
	SCZO = cond(ch)
	// succ:  l0040233E_thunk_fn00402024
l0040233E_thunk_fn00402024:
	call fn00402024 (retsize: 0;)
	return
	// succ:  fn00402334_exit
l00402341_thunk_fn00402024:
	call fn00402024 (retsize: 0;)
	return
	// succ:  fn00402334_exit
fn00402334_exit:


// fn0040234D
// Return size: 4
void fn0040234D()
fn0040234D_entry:
	// succ:  l0040234D
l0040234D:
	esp = fp
	v3 = Mem0[esp:word32]
	Mem0[esp:word32] = edi
	edi = v3
	bl = bl
	edi = Mem0[esp:word32]
	esp = esp + 0x00000004
	bh = bh + 0x01
	SZO = cond(bh)
	bh = bh + 0x01
	SZO = cond(bh)
	bl = cl
	bh = -bh
	SCZO = cond(bh)
	C = bh == 0x00
	call fn004024D1 (retsize: 4;)
	ebx = ebx + 0x00000001
	SZO = cond(ebx)
	al = __inb(0xD9)
	ebx = ebx + Mem0[ebp + 0x00000070:word32]
	SCZO = cond(ebx)
	rArg0 = rArg0 * Mem0[ebx + 0xF6DD8A02:real32]
	// succ:  l00402366_thunk_fn0040236C
l00402366_thunk_fn0040236C:
	call fn0040236C (retsize: 4;)
	return
	// succ:  fn0040234D_exit
fn0040234D_exit:


// fn00402367
// Return size: 4
void fn00402367()
fn00402367_entry:
	// succ:  l00402367
l00402367:
	esp = fp
	eax = Mem0[edx:word32]
	bl = ch
	cl = ~cl
	goto l0040236B_thunk_fn0040236C
	// succ:  l0040236B_thunk_fn0040236C
l00402367:
l0040236B_thunk_fn0040236C:
	call fn0040236C (retsize: 4;)
	return
	// succ:  fn00402367_exit
fn00402367_exit:


// fn0040236C
// Return size: 4
void fn0040236C()
fn0040236C_entry:
	// succ:  l0040236C
l0040236C:
	esp = fp
	v3 = (Mem0[ebx + 0xF6CDFEF2:word32] & 0x00000001 << 0x01) != 0x00000000
	Mem0[ebx + 0xF6CDFEF2:word32] = __ror(Mem0[ebx + 0xF6CDFEF2:word32], 0x01)
	C = v3
	v8 = Mem0[edx:word32] - (real64) rArg0
	Mem0[edx:word32] = v8
	int3()
	bh = bh | cl
	SZO = cond(bh)
	C = false
	branch Test(OV,O) l00402377_thunk_fn0040200B
	goto l00402377_thunk_fn0040237D
	// succ:  l00402377_thunk_fn0040237D l00402377_thunk_fn0040200B
l0040236C:
	esi = edx
	ch = ch - 0x01
	SZO = cond(ch)
	dl = -dl
	SCZO = cond(dl)
	C = dl == 0x00
	cl = cl - ah
	SCZO = cond(cl)
	bh = bh | cl
	SZO = cond(bh)
	C = false
	branch Test(OV,O) l00402377_thunk_fn0040200B
	// succ:  l00402376_thunk_fn0040237D l00402377_thunk_fn0040200B
l00402376_thunk_fn0040237D:
	call fn0040237D (retsize: 0;)
	return
	// succ:  fn0040236C_exit
l00402377_thunk_fn0040200B:
	call fn0040200B (retsize: 4;)
	return
	// succ:  fn0040236C_exit
l00402377_thunk_fn0040200B:
	call fn0040200B (retsize: 4;)
	return
	// succ:  fn0040236C_exit
l00402377_thunk_fn0040237D:
	call fn0040237D (retsize: 0;)
	return
	// succ:  fn0040236C_exit l00402377_thunk_fn0040237D
l00402377_thunk_fn0040237D:
	call fn0040237D (retsize: 0;)
	return
	// succ:  fn0040236C_exit
fn0040236C_exit:


// fn0040237D
// Return size: 0
void fn0040237D()
fn0040237D_entry:
	// succ:  l0040237D
l0040237D:
	// succ:  l00402382
l00402382:
	v3 = dh
	dh = dh
	dh = v3
	branch Test(NO,O) l00402384_thunk_fn0040200B
	goto l0040238A
	// succ:  l0040238A l00402384_thunk_fn0040200B
l00402384_thunk_fn0040200B:
	call fn0040200B (retsize: 4;)
	return
	// succ:  fn0040237D_exit
l0040238A:
fn0040237D_exit:


// fn0040238F
// Return size: 0
void fn0040238F()
fn0040238F_entry:
	// succ:  l0040238F
l0040238F:
	esp = fp
	bl = bh
	bh = bh + 0xCE + C
	SCZO = cond(bh)
	bl = 0xBE
	esi = esi ^ ecx
	SZO = cond(esi)
	C = false
	bh = ~bh
	bl = 0x2B
	esi = esi + 0x00000001
	SZO = cond(esi)
	call fn00402461 (retsize: 4;)
	SZO = cond(al & 0x46)
	C = false
	eax = (int32) ax
l0040238F:
fn0040238F_exit:


// fn004023A7
// Return size: 0
void fn004023A7()
fn004023A7_entry:
	// succ:  l004023A7
l004023A7:
	esp = fp
	dl = ~dl
	esi = esi + 0x00000001
	SZO = cond(esi)
	esi = esi - ecx
	SCZO = cond(esi)
	dl = dl - 0x01
	SZO = cond(dl)
	dh = ~dh
	esi = esi - ebx
	SCZO = cond(esi)
	dl = dl ^ dh
	SZO = cond(dl)
	C = false
	dh = ah
	edx = edx - ecx
	SCZO = cond(edx)
	goto l004023B8_thunk_fn004020B2
	// succ:  l004023B8_thunk_fn004020B2
l004023A7:
l004023B8_thunk_fn004020B2:
	call fn004020B2 (retsize: 0;)
	return
	// succ:  fn004023A7_exit
fn004023A7_exit:


// fn004023C1
// Return size: 4
void fn004023C1()
fn004023C1_entry:
	// succ:  l004023C1
l004023C1:
	esp = fp
	edi = edi + edx
	SCZO = cond(edi)
	bh = ch
	esi = esi - 0x00000001
	SZO = cond(esi)
	esp = esp - 0x00000004
	Mem0[esp:word32] = 0x00000000
	edi = edi ^ eax
	SZO = cond(edi)
	C = false
	ecx = ecx + 0x00000001
	SZO = cond(ecx)
	edi = edi ^ ebx
	SZO = cond(edi)
	C = false
	bl = bl + ch
	SCZO = cond(bl)
	edx = ebx
	dl = 0x4A
	goto l004023D3_thunk_fn00402B17
	// succ:  l004023D3_thunk_fn00402B17
l004023C1:
l004023D3_thunk_fn00402B17:
	call fn00402B17 (retsize: 4;)
	return
	// succ:  fn004023C1_exit
fn004023C1_exit:


// fn004023EE
// Return size: 0
void fn004023EE()
fn004023EE_entry:
	// succ:  l004023EE
l004023EE:
	esp = fp
	ecx = ecx ^ edi
	SZO = cond(ecx)
	C = false
	// succ:  l004023F0_thunk_fn004028B3
l004023F0_thunk_fn004028B3:
	call fn004028B3 (retsize: 0;)
	return
	// succ:  fn004023EE_exit
fn004023EE_exit:


// fn0040242A
// Return size: 0
void fn0040242A()
fn0040242A_entry:
	// succ:  l0040242A
l0040242A:
	esp = fp
	Mem0[esp - 0x0000000C:word32] = Mem0[esp:word32]
	esp = esp + 0x00000004
	ch = Mem0[edi:byte]
	dh = 0x38
	dl = dl + 0x01
	SZO = cond(dl)
	dh = ~dh
	dl = dl + 0x01
	SZO = cond(dl)
	// succ:  l00402438_thunk_fn00402147
l00402438_thunk_fn00402147:
	call fn00402147 (retsize: 0;)
	return
	// succ:  fn0040242A_exit
fn0040242A_exit:


// fn00402461
// Return size: 0
void fn00402461()
fn00402461_entry:
	// succ:  l00402461
l00402461:
	esp = fp
	esp = esp + 0x00000004
	ebx = ebx + 0x00000001
	SZO = cond(ebx)
	eax = eax + ecx
	SCZO = cond(eax)
	bh = bh + 0x29
	SCZO = cond(bh)
	edi = edi | ebx
	SZO = cond(edi)
	C = false
	edi = edi + ecx
	SCZO = cond(edi)
	edi = edi + 0x00000001
	SZO = cond(edi)
	bh = bh - 0x01
	SZO = cond(bh)
	ebx = ebx | esi
	SZO = cond(ebx)
	C = false
	// succ:  l00402474_thunk_fn0040252D
l00402474_thunk_fn0040252D:
	call fn0040252D (retsize: 0;)
	return
	// succ:  fn00402461_exit
fn00402461_exit:


// fn004024A0
// Return size: 0
void fn004024A0()
fn004024A0_entry:
	goto l004024A0
	// succ:  l004024A0
l004023F9:
	dl = dl | bh
	SZO = cond(dl)
	C = false
	edx = ebx
	esi = esi + 0x00000001
	SZO = cond(esi)
	esi = esi ^ edx
	SZO = cond(esi)
	C = false
	edx = edx - 0x8E20AA5F
	SCZO = cond(edx)
	esi = esi + edx
	SCZO = cond(esi)
	esi = ecx
	esi = esi + 0x00000001
	SZO = cond(esi)
	esi = esi ^ edi
	SZO = cond(esi)
	C = false
	branch Test(SG,S) l0040240D_thunk_fn004025E9
	goto l00402413
	// succ:  l00402413 l0040240D_thunk_fn004025E9
l0040240D_thunk_fn004025E9:
	call fn004025E9 (retsize: 0;)
	return
	// succ:  fn004024A0_exit
l00402413:
	cx = cx
	// succ:  l0040241C
l0040241C:
	branch Test(NS,S) l0040241C_thunk_fn004025E9
	goto l00402422
	// succ:  l00402422 l0040241C_thunk_fn004025E9
l0040241C_thunk_fn004025E9:
	call fn004025E9 (retsize: 0;)
	return
	// succ:  fn004024A0_exit
l00402422:
	v18 = Mem0[ecx + 0x0000003F:word32] & edx
	Mem0[ecx + 0x0000003F:word32] = v18
	SZO = cond(Mem0[ecx + 0x0000003F:word32])
	C = false
l004024A0:
	dh = cl
	dh = dh ^ dl
	SZO = cond(dh)
	C = false
	dl = bh
	edx = edx ^ eax
	SZO = cond(edx)
	C = false
	dl = dl - 0x44 - C
	SCZO = cond(dl)
	dl = dl + dh
	SCZO = cond(dl)
	edx = edx + edi
	SCZO = cond(edx)
	edx = ecx
	edx = edx ^ eax
	SZO = cond(edx)
	C = false
	branch Test(OV,O) l004023F9
	// succ:  l004024B9 l004023F9
l004024B9:
	// succ:  l004024BF
l004024BF:
	// succ:  l004024C5
l004024C5:
	branch Test(NO,O) l004023F9
	// succ:  l004024CB l004023F9
l004024CB:
	eax = eax + 0xBD9716E6 + C
	SCZO = cond(eax)
	return
	// succ:  fn004024A0_exit
fn004024A0_exit:


// fn004024D1
// Return size: 0
void fn004024D1()
fn004024D1_entry:
	// succ:  l004024D1
l004024D1:
	esp = fp
	Mem0[esp - 0x00000014:word32] = Mem0[esp:word32]
	esp = esp + 0x00000004
	bl = bl ^ cl
	SZO = cond(bl)
	C = false
	bh = 0x8B
	bl = bl + 0x01
	SZO = cond(bl)
	bl = bl - dh
	SCZO = cond(bl)
	eax = ecx
	call fn00402E79 (retsize: 4;)
fn004024D1_exit:


// fn00402509
// Return size: 0
void fn00402509()
fn00402509_entry:
	// succ:  l00402509
l00402509:
	esp = fp
	Mem0[esp - 0x00000034:word32] = Mem0[esp:word32]
	esp = esp + 0x00000004
	dh = dh ^ ch
	SZO = cond(dh)
	C = false
	dh = dh - 0xA9 - C
	SCZO = cond(dh)
	dh = dh + 0x01
	SZO = cond(dh)
	dl = dl + 0xD5
	SCZO = cond(dl)
	edx = edx | eax
	SZO = cond(edx)
	C = false
	edx = edx | ebx
	SZO = cond(edx)
	C = false
	dl = dl + dh
	SCZO = cond(dl)
	ch = ch - 0x0A
	SCZO = cond(ch)
	// succ:  l00402520_thunk_fn004026A5
l00402520_thunk_fn004026A5:
	call fn004026A5 (retsize: 0;)
	return
	// succ:  fn00402509_exit
fn00402509_exit:


// fn0040252D
// Return size: 0
void fn0040252D()
fn0040252D_entry:
	// succ:  l0040252D
l0040252D:
	esp = fp
	bl = bl + al
	SCZO = cond(bl)
	bl = bl + dl
	SCZO = cond(bl)
	bh = al
	bl = bl - bh
	SCZO = cond(bl)
	bl = bl + dh
	SCZO = cond(bl)
	edi = edi | eax
	SZO = cond(edi)
	C = false
	esi = esi | ecx
	SZO = cond(esi)
	C = false
	ebx = ebx - 0x00000001
	SZO = cond(ebx)
	esp = esp - 0x00000004
	Mem0[esp:word32] = Mem0[eax + 0x00000010:word32]
	esi = esi | ecx
	SZO = cond(esi)
	C = false
	goto l00402541_thunk_fn004021BA
	// succ:  l00402541_thunk_fn004021BA
l0040252D:
l00402541_thunk_fn004021BA:
	call fn004021BA (retsize: 0;)
	return
	// succ:  fn0040252D_exit
fn0040252D_exit:


// fn00402567
// Return size: 0
void fn00402567()
fn00402567_entry:
	// succ:  l00402567
l00402567:
	esp = fp
	bl = bl + 0x01
	SZO = cond(bl)
	bh = bh + 0x12 + C
	SCZO = cond(bh)
	bl = bl | al
	SZO = cond(bl)
	C = false
	bl = bl + 0x44
	SCZO = cond(bl)
	ebx = ebx + 0x00000001
	SZO = cond(ebx)
	ebx = ebx + 0x00000001
	SZO = cond(ebx)
	bl = bl + bh
	SCZO = cond(bl)
	call fn00402CE1 (retsize: 4;)
	esp = esp + 0xFFFFF5F7
	eax = eax & 0xC15CF0A6
	SZO = cond(eax)
	C = false
	al = __inb(0x68)
	goto l0040257F_thunk_fn00402581
	// succ:  l0040257F_thunk_fn00402581
l00402567:
l0040257F_thunk_fn00402581:
	call fn00402581 (retsize: 0;)
	return
	// succ:  fn00402567_exit
fn00402567_exit:


// fn00402581
// Return size: 0
void fn00402581()
fn00402581_entry:
	// succ:  l00402581
l00402581:
	esp = fp
	bl = bl | bh
	SZO = cond(bl)
	C = false
	ebx = ebx - edi
	SCZO = cond(ebx)
	edi = edi ^ esi
	SZO = cond(edi)
	C = false
	bl = -bl
	SCZO = cond(bl)
	C = bl == 0x00
	bl = bl + 0xA2 + C
	SCZO = cond(bl)
	bl = ~bl
	bh = bh + 0xA9
	SCZO = cond(bh)
	goto l0040258E_thunk_fn00402591
	// succ:  l0040258E_thunk_fn00402591
l00402581:
l0040258E_thunk_fn00402591:
	call fn00402591 (retsize: 0;)
	return
	// succ:  fn00402581_exit
l00402596_thunk_fn0040259C:
	call fn0040259C (retsize: 0;)
	return
	// succ:  fn00402581_exit l00402596_thunk_fn0040259C
l00402596_thunk_fn0040259C:
	call fn0040259C (retsize: 0;)
	return
	// succ:  fn00402581_exit
l00402596_thunk_fn00402A4A:
	call fn00402A4A (retsize: 0;)
	return
	// succ:  fn00402581_exit
fn00402581_exit:


// fn00402591
// Return size: 0
void fn00402591()
fn00402591_entry:
	// succ:  l00402591
l00402591:
	esp = fp
	bh = bh + 0x01
	SZO = cond(bh)
	esp = esp - 0x00000004
	Mem0[esp:word32] = Mem0[edx + 0x00000008:word32]
	branch Test(ULE,CZ) l00402596_thunk_fn00402A4A
	// succ:  l00402596_thunk_fn0040259C l00402596_thunk_fn00402A4A l00402596_thunk_fn0040259C l00402596_thunk_fn00402A4A
l00402591:
	bh = bh + 0x01
	SZO = cond(bh)
	esp = esp - 0x00000004
	Mem0[esp:word32] = Mem0[edx + 0x00000008:word32]
	branch Test(ULE,CZ) l00402596_thunk_fn00402A4A
l00402596_thunk_fn0040259C:
	call fn0040259C (retsize: 0;)
	return
	// succ:  fn00402591_exit l00402596_thunk_fn0040259C
l00402596_thunk_fn0040259C:
	call fn0040259C (retsize: 0;)
	return
	// succ:  fn00402591_exit
l00402596_thunk_fn00402A4A:
	call fn00402A4A (retsize: 0;)
	return
	// succ:  fn00402591_exit
fn00402591_exit:


// fn00402597
// Return size: 0
void fn00402597()
fn00402597_entry:
	// succ:  l00402597
l00402597:
	esp = fp
	v3 = Mem0[esi + 0xE9000004:byte]
	Mem0[esi + 0xE9000004:byte] = ch
	ch = v3
	goto l00402597_thunk_fn0040259C
	// succ:  l00402597_thunk_fn0040259C
l00402597:
l00402597_thunk_fn0040259C:
	call fn0040259C (retsize: 0;)
	return
	// succ:  fn00402597_exit
fn00402597_exit:


// fn0040259C
// Return size: 0
void fn0040259C()
fn0040259C_entry:
	// succ:  l0040259C
l0040259C:
	esp = fp
	goto l004025A1
	// succ:  l004025A1
l0040259C:
	v5 = Mem0[eax:byte] + al
	Mem0[eax:byte] = v5
	SCZO = cond(v5)
	v7 = Mem0[eax:byte] + al
	Mem0[eax:byte] = v7
	SCZO = cond(v7)
	// succ:  l0040259E_thunk_fn004025A7
l0040259E_thunk_fn004025A7:
	call fn004025A7 (retsize: 0;)
	return
	// succ:  fn0040259C_exit
l004025A1:
	// succ:  l004025A1_thunk_fn004025A7
l004025A1_thunk_fn004025A7:
	call fn004025A7 (retsize: 0;)
	return
	// succ:  fn0040259C_exit
fn0040259C_exit:


// fn004025A7
// Return size: 0
void fn004025A7()
fn004025A7_entry:
	// succ:  l004025A7
l004025A7:
	branch Test(UGT,CZ) l004025A7_thunk_fn00402A4A
	goto l004025AD
	// succ:  l004025AD l004025A7_thunk_fn00402A4A
l004025A7_thunk_fn00402A4A:
	call fn00402A4A (retsize: 0;)
	return
	// succ:  fn004025A7_exit
l004025AD:
	eax = eax - 0x778B4B49
	SCZO = cond(eax)
	__outdw(edx, eax)
	esi = esi + 0x00000004
	// succ:  l004025B2_thunk_fn004025B3
l004025B2_thunk_fn004025B3:
	call fn004025B3 (retsize: 0;)
	return
	// succ:  fn004025A7_exit
fn004025A7_exit:


// fn004025B3
// Return size: 0
void fn004025B3()
fn004025B3_entry:
	// succ:  l004025B3
l004025B3:
	esp = fp
	Mem0[esp - 0x0000002C:word32] = Mem0[esp:word32]
	esp = esp + 0x00000004
	bh = 0x18
	edx = esi
	ch = ch + bh
	SCZO = cond(ch)
	call eax (retsize: 4;)
	ch = ch | cl
	SZO = cond(ch)
	C = false
	bl = bl + 0x62 + C
	SCZO = cond(bl)
	ecx = ecx - 0x00000001
	SZO = cond(ecx)
	call fn00402EAD (retsize: 4;)
	edx = edx + 0x00000001
	SZO = cond(edx)
	SCZDOP = Mem0[esp:word32]
	esp = esp + 0x00000004
	branch Test(OV,O) l004025CC_thunk_fn00402591
	goto l004025CC_thunk_fn004025CE
	// succ:  l004025CC_thunk_fn004025CE l004025CC_thunk_fn00402591
l004025CC_thunk_fn00402591:
	call fn00402591 (retsize: 0;)
	return
	// succ:  fn004025B3_exit
l004025CC_thunk_fn004025CE:
	call fn004025CE (retsize: 0;)
	return
	// succ:  fn004025B3_exit l004025CC_thunk_fn004025CE
l004025CC_thunk_fn004025CE:
	call fn004025CE (retsize: 0;)
	return
	// succ:  fn004025B3_exit
fn004025B3_exit:


// fn004025CE
// Return size: 0
void fn004025CE()
fn004025CE_entry:
	// succ:  l004025CE
l004025CE:
	esp = fp
	bh = bh ^ al
	SZO = cond(bh)
	C = false
	bh = dl
	bl = bl - ah
	SCZO = cond(bl)
	bh = -bh
	SCZO = cond(bh)
	C = bh == 0x00
	esi = ebx
	edi = ebx
	edi = eax
	call fn00402681 (retsize: 4;)
	ecx = ecx - 0x00000001
	branch Test(NE,Z) && ecx != 0x00000000 l004025E1_thunk_fn00402648
	goto l004025E3
	// succ:  l004025E3 l004025E1_thunk_fn00402648
l004025CE:
l004025E1_thunk_fn00402648:
	call fn00402648 (retsize: 0;)
	return
	// succ:  fn004025CE_exit
l004025E3:
	v17 = eax
	eax = esp
	esp = v17
	ebx = 0xBB9E4CDC
	// succ:  l004025E4_thunk_fn004025E9
l004025E4_thunk_fn004025E9:
	call fn004025E9 (retsize: 0;)
	return
	// succ:  fn004025CE_exit
fn004025CE_exit:


// fn004025E9
// Return size: 0
void fn004025E9()
fn004025E9_entry:
	// succ:  l004025E9
l004025E9:
	esp = fp
	esi = esi ^ ebx
	SZO = cond(esi)
	C = false
	SCZO = cond(edx - 0x71DF55A1)
	branch Test(NE,Z) l004025F1_thunk_fn00402E45
	goto l004025F7
	// succ:  l004025F7 l004025F1_thunk_fn00402E45
l004025E9:
l004025F1_thunk_fn00402E45:
	call fn00402E45 (retsize: 0;)
	return
	// succ:  fn004025E9_exit
l004025F7:
	esi = esi | edi
	SZO = cond(esi)
	C = false
	ch = ~ch
	bl = -bl
	SCZO = cond(bl)
	C = bl == 0x00
	bl = bl - 0xDF - C
	SCZO = cond(bl)
	branch Test(SG,S) l00402600_thunk_fn00402729
	goto l00402606
	// succ:  l00402606 l00402600_thunk_fn00402729
l00402600_thunk_fn00402729:
	call fn00402729 (retsize: 0;)
	return
	// succ:  fn004025E9_exit
l00402606:
	cl = cl
	branch Test(LE,SZO) l0040260A
	// succ:  l0040260A
l0040260A:
	branch Test(NS,S) l0040260A_thunk_fn00402729
	goto l00402610
	// succ:  l00402610 l0040260A_thunk_fn00402729
l0040260A_thunk_fn00402729:
	call fn00402729 (retsize: 0;)
	return
	// succ:  fn004025E9_exit
l00402610:
	ch = ch & Mem0[ebx:byte]
	SZO = cond(ch)
	C = false
	branch Test(NS,S) l00402612_thunk_fn00402597
	goto l00402614
	// succ:  l00402614 l00402612_thunk_fn00402597
l00402612_thunk_fn00402597:
	call fn00402597 (retsize: 0;)
	return
	// succ:  fn004025E9_exit
l00402614:
	v16 = Mem0[edi + 0xFED82444:word32] - ecx - C
	Mem0[edi + 0xFED82444:word32] = v16
	SCZO = cond(v16)
	// succ:  l00402614_thunk_fn0040261A
l00402614_thunk_fn0040261A:
	call fn0040261A (retsize: 0;)
	return
	// succ:  fn004025E9_exit
fn004025E9_exit:


// fn00402615
// Return size: 0
void fn00402615()
fn00402615_entry:
	// succ:  l00402615
l00402615:
	esp = fp
	Mem0[esp - 0x00000028:word32] = Mem0[esp:word32]
	esp = esp + 0x00000004
	ah = ah + 0x01
	SZO = cond(ah)
	call fn004021FB (retsize: 4;)
	// succ:  l00402619_thunk_fn0040261A l00402628_thunk_fn0040262D
l00402619_thunk_fn0040261A:
	call fn0040261A (retsize: 0;)
	return
	// succ:  fn00402615_exit
l00402628_thunk_fn0040262D:
	call fn0040262D (retsize: 0;)
	return
	// succ:  fn00402615_exit
fn00402615_exit:


// fn0040261A
// Return size: 0
void fn0040261A()
fn0040261A_entry:
	// succ:  l0040261A
l0040261A:
	esp = fp
	es_ecx = Mem0[ebx + 0x03BFB1CE:segptr32]
	v8 = Mem0[edi + 0xB2D1F656:word32] << 0xFFFFFFBC
	Mem0[edi + 0xB2D1F656:word32] = v8
	SCZO = cond(v8)
	edi = edi - 0x00000001
	SZO = cond(edi)
	call fn004021FB (retsize: 4;)
	goto l00402628_thunk_fn0040262D
	// succ:  l00402628_thunk_fn0040262D
l0040261A:
	ecx = esi
	cl = 0xBF
	eax = eax + ecx
	SCZO = cond(eax)
	bh = 0x56
	cl = ~cl
	dl = 0xBC
	edi = edi - 0x00000001
	SZO = cond(edi)
l00402628_thunk_fn0040262D:
	call fn0040262D (retsize: 0;)
	return
	// succ:  fn0040261A_exit
fn0040261A_exit:


// fn0040262D
// Return size: 0
void fn0040262D()
fn0040262D_entry:
	// succ:  l0040262D
l0040262D:
	esp = fp
	__outb(edx, al)
	esi = esi + 0x00000001
	v6 = Mem0[edx - 0x0000001E:byte] & 0x79
	Mem0[edx - 0x0000001E:byte] = v6
	SZO = cond(Mem0[edx - 0x0000001E:byte])
	C = false
	v10 = Mem0[edx - 0x00000064:word32] + eax
	Mem0[edx - 0x00000064:word32] = v10
	SCZO = cond(v10)
	goto l00402632_thunk_fn00402635
	// succ:  l00402632_thunk_fn00402635
l0040262D:
	__outb(edx, al)
	esi = esi + 0x00000001
	v12 = Mem0[edx - 0x0000001E:byte] & 0x79
	Mem0[edx - 0x0000001E:byte] = v12
	SZO = cond(Mem0[edx - 0x0000001E:byte])
	C = false
	v13 = Mem0[edx - 0x00000064:word32] + eax
	Mem0[edx - 0x00000064:word32] = v13
	SCZO = cond(v13)
	goto l00402632_thunk_fn00402635
	// succ:  l00402632_thunk_fn00402635
l00402632_thunk_fn00402635:
	call fn00402635 (retsize: 0;)
	return
	// succ:  fn0040262D_exit
l00402632_thunk_fn00402635:
	call fn00402635 (retsize: 0;)
	return
	// succ:  fn0040262D_exit
fn0040262D_exit:


// fn00402635
// Return size: 0
void fn00402635()
fn00402635_entry:
	// succ:  l00402635
l00402635:
	esp = fp
	esi = esi | ecx
	SZO = cond(esi)
	C = false
	dh = dh - 0xBA - C
	SCZO = cond(dh)
	dl = dl + 0xB4
	SCZO = cond(dl)
	esi = edx
	edi = edi + 0x00000001
	SZO = cond(edi)
	edx = ecx
	dl = dl - 0xC9 - C
	SCZO = cond(dl)
	dl = dl - 0x01
	SZO = cond(dl)
	branch Test(EQ,Z) l00402647_thunk_fn004023A7
l00402635:
fn00402635_exit:


// fn00402648
// Return size: 0
void fn00402648()
fn00402648_entry:
	goto l00402648
	// succ:  l00402648
l00402647_thunk_fn004023A7:
	call fn004023A7 (retsize: 0;)
	return
	// succ:  fn00402648_exit
l00402648:
	esp = fp
	SZO = cond(Mem0[edx - 0x00000003:byte] & bl)
	C = false
l00402648:
	// succ:  l0040264D l00402647_thunk_fn004023A7
l0040264D:
	branch Test(PO,P) l0040264F
	// succ:  l0040264F
l0040264F:
	branch Test(NE,Z) l0040264F_thunk_fn004023A7
	goto l00402655
	// succ:  l00402655 l0040264F_thunk_fn004023A7
l0040264F_thunk_fn004023A7:
	call fn004023A7 (retsize: 0;)
	return
	// succ:  fn00402648_exit
l00402655:
fn00402648_exit:


// fn0040265B
// Return size: 4
void fn0040265B()
fn0040265B_entry:
	// succ:  l0040265B
l0040265B:
	esp = fp
	Mem0[esp - 0x00000020:word32] = Mem0[esp:word32]
	esp = esp + 0x00000004
	ebx = ebx + 0x00000001
	SZO = cond(ebx)
	esi = esi - 0x00000001
	SZO = cond(esi)
	bh = bh | cl
	SZO = cond(bh)
	C = false
	cl = cl - 0x01
	SZO = cond(cl)
	bl = bl ^ cl
	SZO = cond(bl)
	C = false
	cl = cl - 0xD3 - C
	SCZO = cond(cl)
	branch Test(LE,SZO) l0040266A_thunk_fn00402367
	goto l00402670
	// succ:  l00402670 l0040266A_thunk_fn00402367
l0040266A_thunk_fn00402367:
	call fn00402367 (retsize: 4;)
	return
	// succ:  fn0040265B_exit
l00402670:
	// succ:  l00402676
l00402676:
	branch Test(GT,SZO) l00402676_thunk_fn00402367
	goto l0040267C
	// succ:  l0040267C l00402676_thunk_fn00402367
l00402676_thunk_fn00402367:
	call fn00402367 (retsize: 4;)
	return
	// succ:  fn0040265B_exit
l0040267C:
	al = Mem0[edx + 0x8F8E94B2:byte]
	// succ:  l0040267C_thunk_fn00402682
l0040267C_thunk_fn00402682:
	call fn00402682 (retsize: 0;)
	return
	// succ:  fn0040265B_exit
fn0040265B_exit:


// fn00402681
// Return size: 0
void fn00402681()
fn00402681_entry:
	// succ:  l00402681
l00402681:
	esp = fp
	Mem0[esp - 0x00000034:word32] = Mem0[esp:word32]
	esp = esp + 0x00000004
	// succ:  l00402681_thunk_fn00402682
l00402681_thunk_fn00402682:
	call fn00402682 (retsize: 0;)
	return
	// succ:  fn00402681_exit
fn00402681_exit:


// fn00402682
// Return size: 0
void fn00402682()
fn00402682_entry:
	// succ:  l00402682
l00402682:
	esp = fp
	esp = esp + 0x00000001
	SZO = cond(esp)
	al = al & 0xCC
	SZO = cond(al)
	C = false
	esi = esi + 0x00000001
	SZO = cond(esi)
	ebx = ebx + 0x00000001
	SZO = cond(ebx)
	bh = bh + 0x01
	SZO = cond(bh)
	ebx = ebx - edi
	SCZO = cond(ebx)
	bl = 0xCC
	branch Test(PE,P) l0040268D_thunk_fn004021DD
	goto l00402693
	// succ:  l00402693 l0040268D_thunk_fn004021DD
l00402682:
	esi = esi + 0x00000001
	SZO = cond(esi)
	ebx = ebx + 0x00000001
	SZO = cond(ebx)
	bh = bh + 0x01
	SZO = cond(bh)
	ebx = ebx - edi
	SCZO = cond(ebx)
	bl = 0xCC
	branch Test(PE,P) TMP!
l0040268D_thunk_fn004021DD:
	call fn004021DD (retsize: 0;)
	return
	// succ:  fn00402682_exit
l00402693:
	bx = bx
	v14 = ecx
	ecx = ecx
	ecx = v14
	branch Test(PO,P) l00402698_thunk_fn004021DD
	goto l0040269E
	// succ:  l0040269E l00402698_thunk_fn004021DD
l00402698_thunk_fn004021DD:
	call fn004021DD (retsize: 0;)
	return
	// succ:  fn00402682_exit
l0040269E:
	ah = ah + 0xA7
	SCZO = cond(ah)
	bh = bh | ah
	SZO = cond(bh)
	C = false
	edx = edx - 0x00000001
	SZO = cond(edx)
	al = al + Mem0[eax + 0xDA8052D6:byte]
	SCZO = cond(al)
	// succ:  l004026A4_thunk_fn004026AA
l004026A4_thunk_fn004026AA:
	call fn004026AA (retsize: 0;)
	return
	// succ:  fn00402682_exit
fn00402682_exit:


// fn004026A5
// Return size: 0
void fn004026A5()
fn004026A5_entry:
	// succ:  l004026A5
l004026A5:
	esp = fp
	dh = dh + 0x52 + C
	SCZO = cond(dh)
	dl = dl - 0xDF - C
	SCZO = cond(dl)
	goto l004026A8_thunk_fn004026AA
	// succ:  l004026A8_thunk_fn004026AA
l004026A5:
l004026A8_thunk_fn004026AA:
	call fn004026AA (retsize: 0;)
	return
	// succ:  fn004026A5_exit
fn004026A5_exit:


// fn004026AA
// Return size: 0
void fn004026AA()
fn004026AA_entry:
	// succ:  l004026AA
l004026AA:
	esp = fp
	rLoc1 = (real64) Mem0[edx:int64]
	goto l004026AA_thunk_fn004026AC
	// succ:  l004026AA_thunk_fn004026AC
l004026AA:
	dl = dl - bl
	SCZO = cond(dl)
	edx = edx + edi
	SCZO = cond(edx)
	dl = dl | ah
	SZO = cond(dl)
	C = false
	dl = dl ^ ah
	SZO = cond(dl)
	C = false
	dl = dl + 0x01
	SZO = cond(dl)
	dh = dh + 0x01
	SZO = cond(dh)
	call fn00402831 (retsize: 4;)
	esp = esp - 0x00000004
	Mem0[esp:word32] = esp
	Mem0[edi:byte] = al
	edi = edi + 0x00000001
	ebx = 0x4F8853A2
	goto l004026BE_thunk_fn004026C3
	// succ:  l004026BE_thunk_fn004026C3
l004026AA_thunk_fn004026AC:
	call fn004026AC (retsize: 0;)
	return
	// succ:  fn004026AA_exit
l004026BE_thunk_fn004026C3:
	call fn004026C3 (retsize: 0;)
	return
	// succ:  fn004026AA_exit
fn004026AA_exit:


// fn004026AC
// Return size: 0
void fn004026AC()
fn004026AC_entry:
	// succ:  l004026AC
l004026AC:
	esp = fp
	v4 = (Mem0[ebx:word32] & 0x00000001 << 0x20 - cl) != 0x00000000
	Mem0[ebx:word32] = __rol(Mem0[ebx:word32], cl)
	C = v4
	al = Mem0[ebx + (uint32) al:byte]
	dl = dl | ah
	SZO = cond(dl)
	C = false
	dl = dl ^ ah
	SZO = cond(dl)
	C = false
	dl = dl + 0x01
	SZO = cond(dl)
	dh = dh + 0x01
	SZO = cond(dh)
	call fn00402831 (retsize: 4;)
	esp = esp - 0x00000004
	Mem0[esp:word32] = esp
	Mem0[edi:byte] = al
	edi = edi + 0x00000001
	ebx = 0x4F8853A2
	goto l004026BE_thunk_fn004026C3
	// succ:  l004026BE_thunk_fn004026C3
l004026AC:
	v14 = (Mem0[ebx:word32] & 0x00000001 << 0x20 - cl) != 0x00000000
	Mem0[ebx:word32] = __rol(Mem0[ebx:word32], cl)
	C = v14
	al = Mem0[ebx + (uint32) al:byte]
	dl = dl | ah
	SZO = cond(dl)
	C = false
	dl = dl ^ ah
	SZO = cond(dl)
	C = false
	dl = dl + 0x01
	SZO = cond(dl)
	dh = dh + 0x01
	SZO = cond(dh)
	call fn00402831 (retsize: 4; FPU: 1;)
	esp = esp - 0x00000004
	Mem0[esp:word32] = esp
	Mem0[edi:byte] = al
	edi = edi + 0x00000001
	ebx = 0x4F8853A2
	goto l004026BE_thunk_fn004026C3
	// succ:  l004026BE_thunk_fn004026C3
l004026BE_thunk_fn004026C3:
	call fn004026C3 (retsize: 0;)
	return
	// succ:  fn004026AC_exit
l004026BE_thunk_fn004026C3:
	call fn004026C3 (retsize: 0;)
	return
	// succ:  fn004026AC_exit
fn004026AC_exit:


// fn004026C2
// Return size: 0
void fn004026C2()
fn004026C2_entry:
	// succ:  l004026C2
l004026C2:
	esp = fp
	edi = edi - 0x00000001
	SZO = cond(edi)
	goto l004026C2_thunk_fn004026C3
	// succ:  l004026C2_thunk_fn004026C3
l004026C2:
l004026C2_thunk_fn004026C3:
	call fn004026C3 (retsize: 0;)
	return
	// succ:  fn004026C2_exit
l004026D2_thunk_fn0040212A:
	call fn0040212A (retsize: 0;)
	return
	// succ:  fn004026C2_exit
fn004026C2_exit:


// fn004026C3
// Return size: 0
void fn004026C3()
fn004026C3_entry:
	// succ:  l004026C3
l004026C3:
	esp = fp
	esi = esi - ebx
	SCZO = cond(esi)
	esi = esi - eax
	SCZO = cond(esi)
	eax = eax + edx
	SCZO = cond(eax)
	edi = eax
	esi = esi - 0x00000001
	SZO = cond(esi)
	esi = edx
	edi = edi ^ edx
	SZO = cond(edi)
	C = false
	esi = esi - ecx
	SCZO = cond(esi)
	// succ:  l004026D2_thunk_fn0040212A l004026D2_thunk_fn0040212A
l004026C3:
	esi = esi - ebx
	SCZO = cond(esi)
	esi = esi - eax
	SCZO = cond(esi)
	eax = eax + edx
	SCZO = cond(eax)
	edi = eax
	esi = esi - 0x00000001
	SZO = cond(esi)
	esi = edx
	edi = edi ^ edx
	SZO = cond(edi)
	C = false
	esi = esi - ecx
	SCZO = cond(esi)
l004026D2_thunk_fn0040212A:
	call fn0040212A (retsize: 0;)
	return
	// succ:  fn004026C3_exit
fn004026C3_exit:


// fn004026DD
// Return size: 0
void fn004026DD()
fn004026DD_entry:
	// succ:  l004026DD
l004026DD:
	esp = fp
	bl = 0x67
	bh = 0x93
	ebx = ecx
	bh = 0x74
	bl = bl ^ ch
	SZO = cond(bl)
	C = false
	ebx = ebx - edx
	SCZO = cond(ebx)
	esi = esi + 0x00000001
	SZO = cond(esi)
	branch Test(EQ,Z) l004026EA_thunk_fn00402567
	goto l004026F0
	// succ:  l004026F0 l004026EA_thunk_fn00402567
l004026DD:
l004026EA_thunk_fn00402567:
	call fn00402567 (retsize: 0;)
	return
	// succ:  fn004026DD_exit
l004026F0:
	// succ:  l004026F6
l004026F6:
	ah = ah
	branch Test(NE,Z) l004026F8_thunk_fn00402567
	goto l004026FE
	// succ:  l004026FE l004026F8_thunk_fn00402567
l004026F8_thunk_fn00402567:
	call fn00402567 (retsize: 0;)
	return
	// succ:  fn004026DD_exit
l004026FE:
	esp = esp - 0x00000004
	Mem0[esp:word32] = 0xFFFFFFB5
	D = true
	Mem0[edi:byte] = al
	edi = edi - 0x00000001
fn004026DD_exit:


// fn00402705
// Return size: 0
void fn00402705()
fn00402705_entry:
	// succ:  l00402705
l00402705:
	esp = fp
	ecx = ecx ^ eax
	SZO = cond(ecx)
	C = false
	edx = edx ^ esi
	SZO = cond(edx)
	C = false
	bl = bl + 0x55
	SCZO = cond(bl)
	esi = ecx
	ebx = ecx
	ecx = ecx - edx
	SCZO = cond(ecx)
	dl = dl - 0x01
	SZO = cond(dl)
	edi = edi - ecx
	SCZO = cond(edi)
	ch = ~ch
	cl = -cl
	SCZO = cond(cl)
	C = cl == 0x00
	edi = ecx
	call fn00402E92 (retsize: 4;)
	__lock()
	dl = 0x53
	SCZO = cond(Mem0[esi:word32] - Mem0[edi:word32])
	esi = esi + 0x00000004
	edi = edi + 0x00000004
	v16 = Mem0[ecx + edx * 0x00000008:word32] - 0xFFFFFF8A
	Mem0[ecx + edx * 0x00000008:word32] = v16
	SCZO = cond(v16)
	// succ:  l00402726_thunk_fn0040272A
l00402726_thunk_fn0040272A:
	call fn0040272A (retsize: 0;)
	return
	// succ:  fn00402705_exit
fn00402705_exit:


// fn00402729
// Return size: 0
void fn00402729()
fn00402729_entry:
	// succ:  l00402729
l00402729:
	esp = fp
	ah = dl
	goto l00402729_thunk_fn0040272A
	// succ:  l00402729_thunk_fn0040272A
l00402729:
l00402729_thunk_fn0040272A:
	call fn0040272A (retsize: 0;)
	return
	// succ:  fn00402729_exit
fn00402729_exit:


// fn0040272A
// Return size: 0
void fn0040272A()
fn0040272A_entry:
	// succ:  l0040272A
l0040272A:
	esp = fp
	ecx = ecx - 0x00000001
	branch ecx != 0x00000000 l0040272A_thunk_fn004026AC
	goto l0040272C
	// succ:  l0040272C l0040272A_thunk_fn004026AC
l0040272A:
	ah = ah - 0xF0 - C
	SCZO = cond(ah)
	ah = ~ah
	dh = dh - 0x01
	SZO = cond(dh)
	cl = 0x79
	dl = dl | dh
	SZO = cond(dl)
	C = false
	dh = dh + 0xB3
	SCZO = cond(dh)
	dl = -dl
	SCZO = cond(dl)
	C = dl == 0x00
	al = al + 0xC2 + C
	SCZO = cond(al)
	eax = eax - edx
	SCZO = cond(eax)
	goto l0040273D_thunk_fn00402746
	// succ:  l0040273D_thunk_fn00402746
l0040272A_thunk_fn004026AC:
	call fn004026AC (retsize: 0;)
	return
	// succ:  fn0040272A_exit
l0040272C:
	rArg0 = rArg0 / rArg0
	ah = ~ah
	dh = dh - 0x01
	SZO = cond(dh)
	cl = 0x79
	dl = dl | dh
	SZO = cond(dl)
	C = false
	dh = dh + 0xB3
	SCZO = cond(dh)
	dl = -dl
	SCZO = cond(dl)
	C = dl == 0x00
	al = al + 0xC2 + C
	SCZO = cond(al)
	eax = eax - edx
	SCZO = cond(eax)
	goto l0040273E_thunk_fn00402740
	// succ:  l0040273E_thunk_fn00402740
l0040273D_thunk_fn00402746:
	call fn00402746 (retsize: 0;)
	return
	// succ:  fn0040272A_exit
l0040273E_thunk_fn00402740:
	call fn00402740 (retsize: 0;)
	return
	// succ:  fn0040272A_exit
fn0040272A_exit:


// fn00402740
// Return size: 0
void fn00402740()
fn00402740_entry:
	// succ:  l00402740
l00402740:
	esp = fp
	branch Test(LT,SO) l00402740_thunk_fn00402222
	goto l00402740_thunk_fn00402746
	// succ:  l00402740_thunk_fn00402746 l00402740_thunk_fn00402222
l00402740:
	branch Test(LT,SO) l00402740_thunk_fn00402222
	goto l00402740_thunk_fn00402746
	// succ:  l00402740_thunk_fn00402746 l00402740_thunk_fn00402222
l00402740_thunk_fn00402222:
	call fn00402222 (retsize: 0;)
	return
	// succ:  fn00402740_exit
l00402740_thunk_fn00402222:
	call fn00402222 (retsize: 0;)
	return
	// succ:  fn00402740_exit
l00402740_thunk_fn00402746:
	call fn00402746 (retsize: 0;)
	return
	// succ:  fn00402740_exit l00402740_thunk_fn00402746
l00402740_thunk_fn00402746:
	call fn00402746 (retsize: 0;)
	return
	// succ:  fn00402740_exit
l00402740_thunk_fn00402746:
	call fn00402746 (retsize: 0;)
	return
	// succ:  fn00402740_exit
fn00402740_exit:


// fn00402746
// Return size: 0
void fn00402746()
fn00402746_entry:
	goto l00402746
	// succ:  l00402746
l0040273F:
	call fn00402740 (retsize: 0;)
	return
	// succ:  l00402740 fn00402746_exit
l00402746:
	v3 = bx
	bx = bx
	bx = v3
	v5 = bh
	bh = bh
	bh = v5
	branch Test(GE,SO) l0040274B_thunk_fn00402222
	goto l00402751
	// succ:  l00402751 l0040274B_thunk_fn00402222
l0040274B_thunk_fn00402222:
	call fn00402222 (retsize: 0;)
	return
	// succ:  fn00402746_exit
l00402751:
	es = Mem0[esp:selector]
	esp = esp + 0x00000002
	esp = esp - 0x00000004
	Mem0[esp:word32] = cs
	eax = __indw(dx)
	SCZO = cond(Mem0[esi:word32] - Mem0[edi:word32])
	esi = esi + 0x00000004
	edi = edi + 0x00000004
	ecx = ecx - 0x00000001
	branch ecx != 0x00000000 l0040273F
	// succ:  l00402758 l0040273F
l00402758:
	return
	// succ:  fn00402746_exit
fn00402746_exit:


// fn00402759
// Return size: 0
void fn00402759()
fn00402759_entry:
	// succ:  l00402759
l00402759:
	esp = fp
	bl = bl + 0xF0
	SCZO = cond(bl)
	dh = ah
	edi = edi ^ eax
	SZO = cond(edi)
	C = false
	ah = ah + 0x01
	SZO = cond(ah)
	bh = bh - 0x01
	SZO = cond(bh)
	ebx = ebx - 0x00000001
	SZO = cond(ebx)
	bh = bh - 0x01
	SZO = cond(bh)
	bh = bh - ah
	SCZO = cond(bh)
	branch Test(LE,SZO) l00402769_thunk_fn00402166
l00402759:
l00402769_thunk_fn00402166:
	call fn00402166 (retsize: 0;)
	return
	// succ:  fn00402759_exit
l0040276F:
	// succ:  l00402775
l00402775:
	esp = esp - 0x00000002
	Mem0[esp:word16] = bx
	bx = Mem0[esp:word16]
	esp = esp + 0x00000002
	branch Test(GT,SZO) l00402779_thunk_fn00402166
	goto l0040277F
	// succ:  l0040277F l00402779_thunk_fn00402166
l00402779_thunk_fn00402166:
	call fn00402166 (retsize: 0;)
	return
	// succ:  fn00402759_exit
l0040277F:
	dh = 0x05
	esp = esp - 0x00000004
	Mem0[esp:word32] = edi
	__cli()
	esi = esi + 0x00000001
	SZO = cond(esi)
	// succ:  l00402783_thunk_fn00402785
l00402783_thunk_fn00402785:
	call fn00402785 (retsize: 0;)
	return
	// succ:  fn00402759_exit
fn00402759_exit:


// fn00402784
// Return size: 0
void fn00402784()
fn00402784_entry:
	// succ:  l00402784
l00402784:
	esp = fp
	esi = esi + 0x00000001
	SZO = cond(esi)
	goto l00402784_thunk_fn00402785
	// succ:  l00402784_thunk_fn00402785
l00402784:
l00402784_thunk_fn00402785:
	call fn00402785 (retsize: 0;)
	return
	// succ:  fn00402784_exit
fn00402784_exit:


// fn00402785
// Return size: 0
void fn00402785()
fn00402785_entry:
	// succ:  l00402785
l00402785:
	esp = fp
	ecx = ecx + 0x00000001
	SZO = cond(ecx)
	ch = ch - ah
	SCZO = cond(ch)
	edi = edi - esi
	SCZO = cond(edi)
	edi = edi - ecx
	SCZO = cond(edi)
	bh = bh + 0xB7
	SCZO = cond(bh)
	branch Test(ULT,C) l00402C19_in_fn00402785
	goto l0040278F_thunk_fn00402795
	// succ:  l0040278F_thunk_fn00402795 l00402C19_in_fn00402785
l00402785:
	ecx = ecx + 0x00000001
	SZO = cond(ecx)
	ch = ch - ah
	SCZO = cond(ch)
	edi = edi - esi
	SCZO = cond(edi)
	edi = edi - ecx
	SCZO = cond(edi)
	bh = bh + 0xB7
	SCZO = cond(bh)
	branch Test(ULT,C) l00402C19_in_fn00402784
	goto l0040278F_thunk_fn00402795
	// succ:  l0040278F_thunk_fn00402795 l00402C19_in_fn00402784
l0040278F_thunk_fn00402795:
	call fn00402795 (retsize: 0;)
	return
	// succ:  fn00402785_exit l0040278F_thunk_fn00402795
l0040278F_thunk_fn00402795:
	call fn00402795 (retsize: 0;)
	return
	// succ:  fn00402785_exit
l0040278F_thunk_fn00402795:
	call fn00402795 (retsize: 0;)
	return
	// succ:  fn00402785_exit
l00402C19_in_fn00402784:
	return
	// succ:  fn00402785_exit
l00402C19_in_fn00402785:
	return
	// succ:  fn00402785_exit
fn00402785_exit:


// fn00402795
// Return size: 0
void fn00402795()
fn00402795_entry:
	// succ:  l00402795
l00402795:
	esp = esp - 0x00000004
	Mem0[esp:word32] = esi
	esi = Mem0[esp:word32]
	esp = esp + 0x00000004
	v5 = ch
	ch = ch
	ch = v5
	branch Test(UGE,C) l00402C19_in_fn00402784
	// succ:  l0040279F l00402C19_in_fn00402784
l0040279F:
	al = 0x58
	ah = 0x7E
	SZO = cond(Mem0[0x24648D68:byte] & ch)
	C = false
	// succ:  l004027A3_thunk_fn004027A9
l004027A3_thunk_fn004027A9:
	call fn004027A9 (retsize: 0;)
	return
	// succ:  fn00402795_exit
l00402C19_in_fn00402784:
	return
	// succ:  fn00402795_exit
fn00402795_exit:


// fn004027A6
// Return size: 0
void fn004027A6()
fn004027A6_entry:
	// succ:  l004027A6
l004027A6:
	esp = fp
	esp = esp + 0x00000004
	// succ:  l004027A6_thunk_fn004027A9
l004027A6_thunk_fn004027A9:
	call fn004027A9 (retsize: 0;)
	return
	// succ:  fn004027A6_exit
fn004027A6_exit:


// fn004027A9
// Return size: 0
void fn004027A9()
fn004027A9_entry:
	// succ:  l004027A9
l004027A9:
	esp = fp
	al = al + 0xF6
	SCZO = cond(al)
	rArg6 = rArg0 / rArg6
l004027A9:
	dh = -dh
	SCZO = cond(dh)
	C = dh == 0x00
	bl = -bl
	SCZO = cond(bl)
	C = bl == 0x00
	eax = eax ^ ebx
	SZO = cond(eax)
	C = false
	al = al + 0x82
	SCZO = cond(al)
	edx = edx ^ ecx
	SZO = cond(edx)
	C = false
	dl = dl ^ cl
	SZO = cond(dl)
	C = false
	al = al + 0x01
	SZO = cond(al)
fn004027A9_exit:


// fn004027C3
// Return size: 0
void fn004027C3()
fn004027C3_entry:
	// succ:  l004027C3
l004027C3:
	esp = fp
	ch = ch + 0x01
	SZO = cond(ch)
	dl = dl - 0x01
	SZO = cond(dl)
	bl = 0xE1
	ch = ~ch
	esi = esi + 0x00000001
	SZO = cond(esi)
	bh = bh + 0x91 + C
	SCZO = cond(bh)
	goto l004027CF_thunk_fn00402C90
	// succ:  l004027CF_thunk_fn00402C90
l004027C3:
l004027CF_thunk_fn00402C90:
	call fn00402C90 (retsize: 0;)
	return
	// succ:  fn004027C3_exit
fn004027C3_exit:


// fn004027D8
// Return size: 0
void fn004027D8()
fn004027D8_entry:
	// succ:  l004027D8
l004027D8:
	esp = fp
	ebx = edi
	bh = ~bh
	bh = 0xF1
	bh = bh - 0x01
	SZO = cond(bh)
	bh = bh | bl
	SZO = cond(bh)
	C = false
	edi = ecx
	edi = edi ^ ebx
	SZO = cond(edi)
	C = false
	ebx = ebx ^ edi
	SZO = cond(ebx)
	C = false
	bh = bh - bl
	SCZO = cond(bh)
	goto l004027EA_thunk_fn00402874
	// succ:  l004027EA_thunk_fn00402874
l004027D8:
l004027EA_thunk_fn00402874:
	call fn00402874 (retsize: 0;)
	return
	// succ:  fn004027D8_exit
fn004027D8_exit:


// fn004027F5
// Return size: 0
void fn004027F5()
fn004027F5_entry:
	// succ:  l004027F5
l004027F5:
	esp = fp
	bh = bh | cl
	SZO = cond(bh)
	C = false
	eax = ~eax
	bl = bl + 0x01
	SZO = cond(bl)
	bl = bl | bh
	SZO = cond(bl)
	C = false
	bh = 0xA4
	bl = bl + dh
	SCZO = cond(bl)
	ebx = ebx ^ ecx
	SZO = cond(ebx)
	C = false
	ebx = ebx - 0x00000001
	SZO = cond(ebx)
	bl = -bl
	SCZO = cond(bl)
	C = bl == 0x00
	bl = dh
	branch Test(LE,SZO) l00402813
	goto l0040280A
	// succ:  l0040280A l00402813
l004027F5:
l0040280A:
	v13 = di
	di = di
	di = v13
	branch Test(GT,SZO) l00402813
	// succ:  l0040280F l00402813
l0040280F:
	esp = esp - 0x00000004
	Mem0[esp:word32] = ebp
	ebp = esp
	esp = esp - 0xFFFFDA96
	// succ:  l00402813
l00402813:
	bh = bh - dh
	SCZO = cond(bh)
	bl = bl - 0xF4 - C
	SCZO = cond(bl)
	esi = edi
	// succ:  l00402818_thunk_fn0040281A
l00402818_thunk_fn0040281A:
	call fn0040281A (retsize: 0;)
	return
	// succ:  fn004027F5_exit
fn004027F5_exit:


// fn0040281A
// Return size: 0
void fn0040281A()
fn0040281A_entry:
	// succ:  l0040281A
l0040281A:
	esp = fp
	eax = eax | eax
	SZO = cond(eax)
	C = false
	branch Test(NE,Z) l0040281C_thunk_fn0040291C
	goto l0040281C_thunk_fn00402822
	// succ:  l0040281C_thunk_fn00402822 l0040281C_thunk_fn0040291C
l0040281A:
	eax = eax | eax
	SZO = cond(eax)
	C = false
	branch Test(NE,Z) l0040281C_thunk_fn0040291C
	goto l0040281C_thunk_fn00402822
	// succ:  l0040281C_thunk_fn00402822 l0040281C_thunk_fn0040291C
l0040281C_thunk_fn00402822:
	call fn00402822 (retsize: 0;)
	return
	// succ:  fn0040281A_exit l0040281C_thunk_fn00402822
l0040281C_thunk_fn00402822:
	call fn00402822 (retsize: 0;)
	return
	// succ:  fn0040281A_exit
l0040281C_thunk_fn00402822:
	call fn00402822 (retsize: 0;)
	return
	// succ:  fn0040281A_exit
l0040281C_thunk_fn0040291C:
	call fn0040291C (retsize: 0;)
	return
	// succ:  fn0040281A_exit
l0040281C_thunk_fn0040291C:
	call fn0040291C (retsize: 0;)
	return
	// succ:  fn0040281A_exit
fn0040281A_exit:


// fn00402822
// Return size: 6
void fn00402822()
fn00402822_entry:
	// succ:  l00402822
l00402822:
	ebx = ebx + ecx
	SCZO = cond(ebx)
	ebx = ebx - 0x00000001
	SZO = cond(ebx)
	bh = bh + dh
	SCZO = cond(bh)
	call fn0040234D (retsize: 4;)
	esp = esp + 0xFFFFFFFC
	ah = ah ^ Mem0[edx:byte]
	SZO = cond(ah)
	C = false
	return
	// succ:  fn00402822_exit
fn00402822_exit:


// fn00402831
// Return size: 0
void fn00402831()
fn00402831_entry:
	// succ:  l00402831
l00402831:
	esp = fp
	Mem0[esp:word32] = eax
fn00402831_exit:


// fn0040284D
// Return size: 0
void fn0040284D()
fn0040284D_entry:
	// succ:  l0040284D
l0040284D:
	esp = fp
	dh = dh + 0x1E
	SCZO = cond(dh)
	ch = ch - cl
	SCZO = cond(ch)
	cl = cl + 0x5F
	SCZO = cond(cl)
	ch = ch - 0x01
	SZO = cond(ch)
	ch = ch + 0x01
	SZO = cond(ch)
	ch = ~ch
	dl = dl ^ al
	SZO = cond(dl)
	C = false
	edx = edx + ebx
	SCZO = cond(edx)
	branch Test(EQ,Z) l0040285F_thunk_fn00402CBA
	goto l00402865
	// succ:  l00402865 l0040285F_thunk_fn00402CBA
l0040284D:
l0040285F_thunk_fn00402CBA:
	call fn00402CBA (retsize: 0;)
	return
	// succ:  fn0040284D_exit
l00402865:
	v14 = si
	si = si
	si = v14
	branch Test(NE,Z) l00402868_thunk_fn00402CBA
	goto l0040286E
	// succ:  l0040286E l00402868_thunk_fn00402CBA
l00402868_thunk_fn00402CBA:
	call fn00402CBA (retsize: 0;)
	return
	// succ:  fn0040284D_exit
l0040286E:
	SCZO = cond(al - 0x22)
	eax = eax - 0xB75635BE - C
	SCZO = cond(eax)
	// succ:  l00402870_thunk_fn00402875
l00402870_thunk_fn00402875:
	call fn00402875 (retsize: 0;)
	return
	// succ:  fn0040284D_exit
fn0040284D_exit:


// fn00402874
// Return size: 0
void fn00402874()
fn00402874_entry:
	// succ:  l00402874
l00402874:
	esp = fp
	bh = 0x12
	call fn00402DB4 (retsize: 4;)
	// succ:  l00402874_thunk_fn00402875 l00402880_thunk_fn00402885
l00402874:
l00402874_thunk_fn00402875:
	call fn00402875 (retsize: 0;)
	return
	// succ:  fn00402874_exit
l00402880_thunk_fn00402885:
	call fn00402885 (retsize: 0;)
	return
	// succ:  fn00402874_exit
fn00402874_exit:


// fn00402875
// Return size: 0
void fn00402875()
fn00402875_entry:
	// succ:  l00402875
l00402875:
	esp = fp
	dh = dh + dh + C
	SCZO = cond(dh)
	v8 = Mem0[edx:word32] << cl
	Mem0[edx:word32] = v8
	SCZO = cond(v8)
	v10 = Mem0[ebx:byte] - 0x01
	Mem0[ebx:byte] = v10
	SZO = cond(v10)
	rArg0 = rArg0 * (real64) Mem0[edx + 0xE8F10BF9:word16]
	C = __das(al, &al)
	eax = eax + 0x59BD0000
	SCZO = cond(eax)
	goto l00402882_thunk_fn00402885
	// succ:  l00402882_thunk_fn00402885
l00402875:
	bl = ~bl
	bh = bh ^ dh
	SZO = cond(bh)
	C = false
	ebx = ebx | esi
	SZO = cond(ebx)
	C = false
	bh = cl
	esi = esi | ecx
	SZO = cond(esi)
	C = false
l00402882_thunk_fn00402885:
	call fn00402885 (retsize: 0;)
	return
	// succ:  fn00402875_exit
fn00402875_exit:


// fn00402885
// Return size: 0
void fn00402885()
fn00402885_entry:
	// succ:  l00402885
l00402885:
	esp = fp
	ebp = 0x785BC859
	v4 = Mem0[ebp - 0x00000073:word32] ^ 0x8A042464
	Mem0[ebp - 0x00000073:word32] = v4
	SZO = cond(Mem0[ebp - 0x00000073:word32])
	C = false
	goto l0040288A_thunk_fn00402891
	// succ:  l0040288A_thunk_fn00402891
l00402885:
	esp = esp - 0x00000004
	Mem0[esp:word32] = ebp
	ebp = esp
	esp = esp - 0x0000765F
	branch Test(NE,Z) l0040288B_thunk_fn0040281A
	goto l0040288D
	// succ:  l0040288D l0040288B_thunk_fn0040281A
l0040288A_thunk_fn00402891:
	call fn00402891 (retsize: 0;)
	return
	// succ:  fn00402885_exit
l0040288B_thunk_fn0040281A:
	call fn0040281A (retsize: 0;)
	return
	// succ:  fn00402885_exit
l0040288D:
	al = al & 0x04
	SZO = cond(al)
	C = false
	// succ:  l0040288D_thunk_fn00402890
l0040288D_thunk_fn00402890:
	call fn00402890 (retsize: 0;)
	return
	// succ:  fn00402885_exit
fn00402885_exit:


// fn0040288C
// Return size: 0
void fn0040288C()
fn0040288C_entry:
	// succ:  l0040288C
l0040288C:
	esp = fp
	esp = esp + 0x00000004
	// succ:  l0040288C_thunk_fn00402890
l0040288C_thunk_fn00402890:
	call fn00402890 (retsize: 0;)
	return
	// succ:  fn0040288C_exit
fn0040288C_exit:


// fn00402890
// Return size: 0
void fn00402890()
fn00402890_entry:
	// succ:  l00402890
l00402890:
	esp = fp
	bl = dl
	goto l00402890_thunk_fn00402892
	// succ:  l00402890_thunk_fn00402892
l00402890:
	bl = dl
	// succ:  l00402890_thunk_fn00402891
l00402890_thunk_fn00402891:
	call fn00402891 (retsize: 0;)
	return
	// succ:  fn00402890_exit
l00402890_thunk_fn00402892:
	call fn00402892 (retsize: 0;)
	return
	// succ:  fn00402890_exit
fn00402890_exit:


// fn00402891
// Return size: 0
void fn00402891()
fn00402891_entry:
	// succ:  l00402891
l00402891:
	esp = fp
	rArg0 = rArg0 / (real64) Mem0[ebx:word32]
	goto l00402891_thunk_fn00402892
	// succ:  l00402891_thunk_fn00402892
l00402891:
	ebx = ebx ^ esi
	SZO = cond(ebx)
	C = false
	bh = bh ^ cl
	SZO = cond(bh)
	C = false
	esi = esi ^ ebx
	SZO = cond(esi)
	C = false
	ch = 0x42
	bl = bl + ch
	SCZO = cond(bl)
	branch Test(OV,O) l0040289C_thunk_fn004022D8
	goto l0040289B_thunk_fn004028A2
	// succ:  l0040289B_thunk_fn004028A2 l0040289C_thunk_fn004022D8
l00402891_thunk_fn00402892:
	call fn00402892 (retsize: 0;)
	return
	// succ:  fn00402891_exit
l0040289B_thunk_fn004028A2:
	call fn004028A2 (retsize: 0;)
	return
	// succ:  fn00402891_exit
l0040289C_thunk_fn004022D8:
	call fn004022D8 (retsize: 0;)
	return
	// succ:  fn00402891_exit
fn00402891_exit:


// fn00402892
// Return size: 0
void fn00402892()
fn00402892_entry:
	// succ:  l00402892
l00402892:
	esp = fp
	ebx = ebx ^ esi
	SZO = cond(ebx)
	C = false
	bh = bh ^ cl
	SZO = cond(bh)
	C = false
	esi = esi ^ ebx
	SZO = cond(esi)
	C = false
	ch = 0x42
	bl = bl + ch
	SCZO = cond(bl)
	branch Test(OV,O) l0040289C_thunk_fn004022D8
	goto l0040289C_thunk_fn004028A2
	// succ:  l0040289C_thunk_fn004028A2 l0040289C_thunk_fn004022D8
l00402892:
	rArg0 = rArg0 / (real64) Mem0[edx:word16]
	C = true
	esi = esi ^ ebx
	SZO = cond(esi)
	C = false
	ch = 0x42
	bl = bl + ch
	SCZO = cond(bl)
	branch Test(OV,O) l0040289C_thunk_fn004022D8
	goto l0040289C_thunk_fn004028A2
	// succ:  l0040289C_thunk_fn004028A2 l0040289C_thunk_fn004022D8
l0040289C_thunk_fn004022D8:
	call fn004022D8 (retsize: 0;)
	return
	// succ:  fn00402892_exit
l0040289C_thunk_fn004022D8:
	call fn004022D8 (retsize: 0;)
	return
	// succ:  fn00402892_exit
l0040289C_thunk_fn004028A2:
	call fn004028A2 (retsize: 0;)
	return
	// succ:  fn00402892_exit l0040289C_thunk_fn004028A2
l0040289C_thunk_fn004028A2:
	call fn004028A2 (retsize: 0;)
	return
	// succ:  fn00402892_exit
l0040289C_thunk_fn004028A2:
	call fn004028A2 (retsize: 0;)
	return
	// succ:  fn00402892_exit l0040289C_thunk_fn004028A2
l0040289C_thunk_fn004028A2:
	call fn004028A2 (retsize: 0;)
	return
	// succ:  fn00402892_exit
fn00402892_exit:


// fn004028A2
// Return size: 0
void fn004028A2()
fn004028A2_entry:
	// succ:  l004028A2
l004028A2:
	bx = bx
	branch Test(NO,O) l004028A5_thunk_fn004022D8
	goto l004028AB
	// succ:  l004028AB l004028A5_thunk_fn004022D8
l004028A5_thunk_fn004022D8:
	call fn004022D8 (retsize: 0;)
	return
	// succ:  fn004028A2_exit
l004028AB:
	esp = esp - 0x00000004
	Mem0[esp:word32] = cs
	esi = esi - 0x00000001
	SZO = cond(esi)
	esp = esp - 0x00000004
	Mem0[esp:word32] = SCZDOP
	v10 = Mem0[esi:byte] >> cl
	Mem0[esi:byte] = v10
	SCZO = cond(v10)
	ecx = ecx - 0x00000001
	SZO = cond(ecx)
	ebx = ebx >>u 0xFFFFFF80
	SCZO = cond(ebx)
	// succ:  l004028B1_thunk_fn004028B4
l004028B1_thunk_fn004028B4:
	call fn004028B4 (retsize: 0;)
	return
	// succ:  fn004028A2_exit
fn004028A2_exit:


// fn004028B3
// Return size: 0
void fn004028B3()
fn004028B3_entry:
	// succ:  l004028B3
l004028B3:
	esp = fp
	cl = cl + 0xC9 + C
	SCZO = cond(cl)
	call fn00402A2B (retsize: 4;)
	// succ:  l004028B3_thunk_fn004028B4 l004028C2_thunk_fn004028C7
l004028B3:
l004028B3_thunk_fn004028B4:
	call fn004028B4 (retsize: 0;)
	return
	// succ:  fn004028B3_exit
l004028C2_thunk_fn004028C7:
	call fn004028C7 (retsize: 0;)
	return
	// succ:  fn004028B3_exit
fn004028B3_exit:


// fn004028B4
// Return size: 0
void fn004028B4()
fn004028B4_entry:
	// succ:  l004028B4
l004028B4:
	esp = fp
	v3 = (ecx & 0x00000001 << 0x01) != 0x00000000
	ecx = __ror(ecx, 0x01)
	C = v3
	eax = eax | edx
	SZO = cond(eax)
	C = false
	cl = dl
	bl = -bl
	SCZO = cond(bl)
	C = bl == 0x00
	esi = esi + 0x00000001
	SZO = cond(esi)
	edi = edi ^ edx
	SZO = cond(edi)
	C = false
	ah = ah + 0x55 + C
	SCZO = cond(ah)
	call fn00402A2B (retsize: 4;)
	goto l004028C2_thunk_fn004028C7
	// succ:  l004028C2_thunk_fn004028C7
l004028B4:
	eax = eax | edx
	SZO = cond(eax)
	C = false
	cl = dl
	bl = -bl
	SCZO = cond(bl)
	C = bl == 0x00
	esi = esi + 0x00000001
	SZO = cond(esi)
	edi = edi ^ edx
	SZO = cond(edi)
	C = false
	ah = ah + 0x55 + C
	SCZO = cond(ah)
l004028C2_thunk_fn004028C7:
	call fn004028C7 (retsize: 0;)
	return
	// succ:  fn004028B4_exit
fn004028B4_exit:


// fn004028C7
// Return size: 0
void fn004028C7()
fn004028C7_entry:
	// succ:  l004028C7
l004028C7:
	esp = fp
	esi = 0x24A29CA9
	goto l004028C7_thunk_fn004028CC
	// succ:  l004028C7_thunk_fn004028CC
l004028C7:
	esi = 0x24A29CA9
	goto l004028C7_thunk_fn004028CC
	// succ:  l004028C7_thunk_fn004028CC
l004028C7_thunk_fn004028CC:
	call fn004028CC (retsize: 0;)
	return
	// succ:  fn004028C7_exit
l004028C7_thunk_fn004028CC:
	call fn004028CC (retsize: 0;)
	return
	// succ:  fn004028C7_exit
fn004028C7_exit:


// fn004028CC
// Return size: 0
void fn004028CC()
fn004028CC_entry:
	// succ:  l004028CC
l004028CC:
	esp = fp
	dh = dh - 0x01
	SZO = cond(dh)
	dh = -dh
	SCZO = cond(dh)
	C = dh == 0x00
	dl = dl | dh
	SZO = cond(dl)
	C = false
	edx = edi
	esi = eax
	dh = dh + 0x01
	SZO = cond(dh)
	dh = dh + cl
	SCZO = cond(dh)
	edx = edx + ecx
	SCZO = cond(edx)
	branch Test(LT,SO) l004028DC_thunk_fn00402A70
	goto l004028DC_thunk_fn004028E2
	// succ:  l004028DC_thunk_fn004028E2 l004028DC_thunk_fn00402A70
l004028CC:
	dh = dh - 0x01
	SZO = cond(dh)
	dh = -dh
	SCZO = cond(dh)
	C = dh == 0x00
	dl = dl | dh
	SZO = cond(dl)
	C = false
	edx = edi
	esi = eax
	dh = dh + 0x01
	SZO = cond(dh)
	dh = dh + cl
	SCZO = cond(dh)
	edx = edx + ecx
	SCZO = cond(edx)
	branch Test(LT,SO) l004028DC_thunk_fn00402A70
	goto l004028DC_thunk_fn004028E2
	// succ:  l004028DC_thunk_fn004028E2 l004028DC_thunk_fn00402A70
l004028DC_thunk_fn004028E2:
	call fn004028E2 (retsize: 0;)
	return
	// succ:  fn004028CC_exit l004028DC_thunk_fn004028E2
l004028DC_thunk_fn004028E2:
	call fn004028E2 (retsize: 0;)
	return
	// succ:  fn004028CC_exit
l004028DC_thunk_fn004028E2:
	call fn004028E2 (retsize: 0;)
	return
	// succ:  fn004028CC_exit
l004028DC_thunk_fn00402A70:
	call fn00402A70 (retsize: 0;)
	return
	// succ:  fn004028CC_exit
l004028DC_thunk_fn00402A70:
	call fn00402A70 (retsize: 0;)
	return
	// succ:  fn004028CC_exit
fn004028CC_exit:


// fn004028E2
// Return size: 0
void fn004028E2()
fn004028E2_entry:
	// succ:  l004028E2
l004028E2:
	esp = esp - 0x00000002
	Mem0[esp:word16] = si
	si = Mem0[esp:word16]
	esp = esp + 0x00000002
	branch Test(GE,SO) l004028E6_thunk_fn00402A70
	goto l004028EC
	// succ:  l004028EC l004028E6_thunk_fn00402A70
l004028E6_thunk_fn00402A70:
	call fn00402A70 (retsize: 0;)
	return
	// succ:  fn004028E2_exit
l004028EC:
	al = al + 0x88
	SCZO = cond(al)
	branch Test(UGT,CZ) l004028EE_thunk_fn00402924
	goto l004028F0
	// succ:  l004028F0 l004028EE_thunk_fn00402924
l004028EE_thunk_fn00402924:
	call fn00402924 (retsize: 0;)
	return
	// succ:  fn004028E2_exit
l004028F0:
	ecx = Mem0[esp:word32]
	esp = esp + 0x00000004
fn004028E2_exit:


// fn004028F4
// Return size: 0
void fn004028F4()
fn004028F4_entry:
	// succ:  l004028F4
l004028F4:
	esp = fp
	esp = esp + 0x00000004
	dl = dl - 0x01
	SZO = cond(dl)
	dl = dl - 0x01
	SZO = cond(dl)
	ebx = ebx - esi
	SCZO = cond(ebx)
	dh = ch
	bh = 0x56
	dl = -dl
	SCZO = cond(dl)
	C = dl == 0x00
	edx = (word32) al
	bh = bh + bl
	SCZO = cond(bh)
	edi = ecx
	// succ:  l0040290B_thunk_fn004026DD
l0040290B_thunk_fn004026DD:
	call fn004026DD (retsize: 0;)
	return
	// succ:  fn004028F4_exit
fn004028F4_exit:


// fn00402914
// Return size: 0
void fn00402914()
fn00402914_entry:
	// succ:  l00402914
l00402914:
	esp = fp
	Mem0[esp - 0x00000024:word32] = Mem0[esp:word32]
	esp = esp + 0x00000004
	bl = -bl
	SCZO = cond(bl)
	C = bl == 0x00
	eax = eax ^ ebx
	SZO = cond(eax)
	C = false
	// succ:  l0040291A_thunk_fn0040291C
l0040291A_thunk_fn0040291C:
	call fn0040291C (retsize: 0;)
	return
	// succ:  fn00402914_exit
fn00402914_exit:


// fn0040291C
// Return size: 0
void fn0040291C()
fn0040291C_entry:
	// succ:  l0040291C
l0040291C:
	esp = fp
	ecx = ecx - 0x00000001
	SZO = cond(ecx)
	ah = ah ^ ch
	SZO = cond(ah)
	C = false
	al = al + 0xB7 + C
	SCZO = cond(al)
l0040291C:
	ecx = ecx - 0x00000001
	SZO = cond(ecx)
	ah = ah ^ ch
	SZO = cond(ah)
	C = false
	al = al + 0xB7 + C
	SCZO = cond(al)
	// succ:  l0040291F_thunk_fn00402C78
l0040291F_thunk_fn00402C78:
	call fn00402C78 (retsize: 0;)
	return
	// succ:  fn0040291C_exit
fn0040291C_exit:


// fn00402924
// Return size: 0
void fn00402924()
fn00402924_entry:
	goto l00402924
	// succ:  l00402924
l00402922_thunk_fn00402C78:
	call fn00402C78 (retsize: 0;)
	return
	// succ:  fn00402924_exit
l00402924:
	esp = fp
	eax = eax + Mem0[eax:word32]
	SCZO = cond(eax)
	v7 = Mem0[edx - 0x00000069:byte] + dh
	Mem0[edx - 0x00000069:byte] = v7
	SCZO = cond(v7)
	eax = Mem0[esp:word32]
	esp = esp + 0x00000004
	__cli()
	eax = eax & 0xD8021A2B
	SZO = cond(eax)
	C = false
	goto l0040292B_thunk_fn00402930
	// succ:  l0040292B_thunk_fn00402930
l00402924:
	goto l00402922_thunk_fn00402C78
	// succ:  l00402922_thunk_fn00402C78
l0040292B_thunk_fn00402930:
	call fn00402930 (retsize: 0;)
	return
	// succ:  fn00402924_exit
fn00402924_exit:


// fn00402930
// Return size: 0
void fn00402930()
fn00402930_entry:
	// succ:  l00402930
l00402930:
	esp = fp
	cl = 0x47
	edi = edi | esi
	SZO = cond(edi)
	C = false
	cl = ~cl
	esi = esi + 0x00000001
	SZO = cond(esi)
	bl = bl - dl
	SCZO = cond(bl)
	cl = cl - 0x01
	SZO = cond(cl)
	edx = edx + 0x00000004
	SCZO = cond(edx)
	branch Test(ULE,CZ) l00402941_thunk_fn0040210E
	goto l00402941_thunk_fn00402947
	// succ:  l00402941_thunk_fn00402947 l00402941_thunk_fn0040210E
l00402930:
	cl = 0x47
	edi = edi | esi
	SZO = cond(edi)
	C = false
	cl = ~cl
	esi = esi + 0x00000001
	SZO = cond(esi)
	bl = bl - dl
	SCZO = cond(bl)
	cl = cl - 0x01
	SZO = cond(cl)
	edx = edx + 0x00000004
	SCZO = cond(edx)
	branch Test(ULE,CZ) l0040210E
	goto l00402941_thunk_fn00402947
	// succ:  l00402941_thunk_fn00402947 l00402941_thunk_fn0040210E
l00402941_thunk_fn0040210E:
	call fn0040210E (retsize: 0;)
	return
	// succ:  fn00402930_exit
l00402941_thunk_fn0040210E:
	call fn0040210E (retsize: 0;)
	return
	// succ:  fn00402930_exit
l00402941_thunk_fn00402947:
	call fn00402947 (retsize: 0;)
	return
	// succ:  fn00402930_exit l00402941_thunk_fn00402947
l00402941_thunk_fn00402947:
	call fn00402947 (retsize: 0;)
	return
	// succ:  fn00402930_exit
l00402941_thunk_fn00402947:
	call fn00402947 (retsize: 0;)
	return
	// succ:  fn00402930_exit
fn00402930_exit:


// fn00402947
// Return size: 0
void fn00402947()
fn00402947_entry:
	// succ:  l00402947
l00402947:
fn00402947_exit:


// fn00402955
// Return size: 0
void fn00402955()
fn00402955_entry:
	// succ:  l00402955
l00402955:
	esp = fp
	Mem0[esp - 0x00000024:word32] = Mem0[esp:word32]
	esp = esp + 0x00000004
	ch = -ch
	SCZO = cond(ch)
	C = ch == 0x00
	bl = bl + ch
	SCZO = cond(bl)
	dl = dl + ch
	SCZO = cond(dl)
	bl = bl | ch
	SZO = cond(bl)
	C = false
	dl = -dl
	SCZO = cond(dl)
	C = dl == 0x00
	bh = bh + bl
	SCZO = cond(bh)
	ebx = ebx + 0x00000001
	SZO = cond(ebx)
	bh = ~bh
	// succ:  l00402B53
l00402B53:
	edx = edx - ebx
	SCZO = cond(edx)
	cl = -cl
	SCZO = cond(cl)
	C = cl == 0x00
	dh = dh + al
	SCZO = cond(dh)
	edx = edx ^ eax
	SZO = cond(edx)
	C = false
	bl = bl - bh
	SCZO = cond(bl)
	ebx = ebx + esi
	SCZO = cond(ebx)
	ch = dh
	dl = ~dl
fn00402955_exit:


// fn0040298E
// Return size: 0
void fn0040298E()
fn0040298E_entry:
	// succ:  l0040298E
l0040298E:
	esp = esp + 0x00000004
	bh = bh - 0x67 - C
	SCZO = cond(bh)
	bh = bh - bl
	SCZO = cond(bh)
	bh = bh - dl
	SCZO = cond(bh)
	bh = bh + 0x00 + C
	SCZO = cond(bh)
	bl = bl | ah
	SZO = cond(bl)
	C = false
	edi = edi | eax
	SZO = cond(edi)
	C = false
	bl = bh
	branch Test(SG,S) l004029A2_thunk_fn004020EE
	goto l004029A8
	// succ:  l004029A8 l004029A2_thunk_fn004020EE
l004029A2_thunk_fn004020EE:
	call fn004020EE (retsize: 0;)
	return
	// succ:  fn0040298E_exit
l004029A8:
	v13 = edi
	edi = edi
	edi = v13
	di = edi
	branch Test(NS,S) l004029AD_thunk_fn004020EE
	goto l004029B3
	// succ:  l004029B3 l004029AD_thunk_fn004020EE
l004029AD_thunk_fn004020EE:
	call fn004020EE (retsize: 0;)
	return
	// succ:  fn0040298E_exit
l004029B3:
	SZO = cond(al & dl)
	C = false
	esp = esp - 0x00000004
	Mem0[esp:word32] = 0xFFFFFFBF
	// succ:  l004029B5_thunk_fn00402F14
l004029B5_thunk_fn00402F14:
	call fn00402F14 (retsize: 0;)
	return
	// succ:  fn0040298E_exit
fn0040298E_exit:


// fn004029D8
// Return size: 0
void fn004029D8()
fn004029D8_entry:
	// succ:  l004029D8
l004029D8:
	Mem0[esp - 0x00000030:word32] = Mem0[esp:word32]
	esp = esp + 0x00000004
	cl = ~cl
	dl = ch
	ebx = eax
	esi = esi - 0x00000001
	SZO = cond(esi)
	dh = al
	cl = -cl
	SCZO = cond(cl)
	C = cl == 0x00
	dh = bh
	branch Test(ULT,C) l00402BAB
	// succ:  l004029EF l00402BAB
l004029EF:
l00402BAB:
	ecx = edi
	ecx = ebx
	dh = dh + 0x7C
	SCZO = cond(dh)
	esi = esi | ecx
	SZO = cond(esi)
	C = false
	esi = esi + 0x00000001
	SZO = cond(esi)
	cl = cl | dh
	SZO = cond(cl)
	C = false
	cl = ~cl
	ch = ch + 0x5B
	SCZO = cond(ch)
	eax = eax - 0x00000C49
	SCZO = cond(eax)
	dl = dl + ch
	SCZO = cond(dl)
	branch Test(ULT,C) l00402BC4_thunk_fn00402AB2
	goto l00402BCA
	// succ:  l00402BCA l00402BC4_thunk_fn00402AB2
l00402BC4_thunk_fn00402AB2:
	call fn00402AB2 (retsize: 0;)
	return
	// succ:  fn004029D8_exit
l00402BCA:
fn004029D8_exit:


// fn00402A02
// Return size: 0
void fn00402A02()
fn00402A02_entry:
	// succ:  l00402A02
l00402A02:
	esp = fp
	bl = bl + 0x01
	SZO = cond(bl)
	ebx = ebx | esi
	SZO = cond(ebx)
	C = false
	bh = ~bh
	bh = -bh
	SCZO = cond(bh)
	C = bh == 0x00
	bl = bh
	bl = bl ^ ah
	SZO = cond(bl)
	C = false
	bl = bl ^ ch
	SZO = cond(bl)
	C = false
	bl = cl
	bl = bl ^ dh
	SZO = cond(bl)
	C = false
	esi = esi | edi
	SZO = cond(esi)
	C = false
	branch Test(ULE,CZ) l00402A16_thunk_fn004027F5
	goto l00402A1C
	// succ:  l00402A1C l00402A16_thunk_fn004027F5
l00402A02:
l00402A16_thunk_fn004027F5:
	call fn004027F5 (retsize: 0;)
	return
	// succ:  fn00402A02_exit
l00402A1C:
	bx = bx
fn00402A02_exit:


// fn00402A2B
// Return size: 0
void fn00402A2B()
fn00402A2B_entry:
	// succ:  l00402A2B
l00402A2B:
	esp = fp
	esp = esp + 0x00000004
	ch = ch - cl
	SCZO = cond(ch)
	edx = esi
	dh = dh - cl
	SCZO = cond(dh)
	edx = ecx
	eax = eax ^ esi
	SZO = cond(eax)
	C = false
	cl = cl | bl
	SZO = cond(cl)
	C = false
	dh = 0x67
	ch = ch + 0x82 + C
	SCZO = cond(ch)
	call fn00402B30 (retsize: 4;)
	ch = 0x09
	esp = 0x85B33DD6
	// succ:  l00402A47_thunk_fn00402A4C
l00402A47_thunk_fn00402A4C:
	call fn00402A4C (retsize: 0;)
	return
	// succ:  fn00402A2B_exit
fn00402A2B_exit:


// fn00402A4A
// Return size: 0
void fn00402A4A()
fn00402A4A_entry:
	// succ:  l00402A4A
l00402A4A:
	esp = fp
	bl = 0x85
	goto l00402A4A_thunk_fn00402A4C
	// succ:  l00402A4A_thunk_fn00402A4C
l00402A4A:
l00402A4A_thunk_fn00402A4C:
	call fn00402A4C (retsize: 0;)
	return
	// succ:  fn00402A4A_exit
fn00402A4A_exit:


// fn00402A4C
// Return size: 0
void fn00402A4C()
fn00402A4C_entry:
	// succ:  l00402A4C
l00402A4C:
	esp = fp
	edi = edi + 0x00000001
	SZO = cond(edi)
	bl = bl + 0x01
	SZO = cond(bl)
	esi = esi + 0x00000001
	SZO = cond(esi)
	bl = bl + 0x2A + C
	SCZO = cond(bl)
	bl = bl + 0x96
	SCZO = cond(bl)
	bl = 0x14
	branch Test(ULT,C) l00402A58_thunk_fn00402197
	goto l00402A58_thunk_fn00402A5E
	// succ:  l00402A58_thunk_fn00402A5E l00402A58_thunk_fn00402197
l00402A4C:
	edi = edi + 0x00000001
	SZO = cond(edi)
	bl = bl + 0x01
	SZO = cond(bl)
	esi = esi + 0x00000001
	SZO = cond(esi)
	bl = bl + 0x2A + C
	SCZO = cond(bl)
	bl = bl + 0x96
	SCZO = cond(bl)
	bl = 0x14
	branch Test(ULT,C) l00402A58_thunk_fn00402197
	goto l00402A58_thunk_fn00402A5E
	// succ:  l00402A58_thunk_fn00402A5E l00402A58_thunk_fn00402197
l00402A58_thunk_fn00402197:
	call fn00402197 (retsize: 0;)
	return
	// succ:  fn00402A4C_exit
l00402A58_thunk_fn00402197:
	call fn00402197 (retsize: 0;)
	return
	// succ:  fn00402A4C_exit
l00402A58_thunk_fn00402A5E:
	call fn00402A5E (retsize: 0;)
	return
	// succ:  fn00402A4C_exit l00402A58_thunk_fn00402A5E
l00402A58_thunk_fn00402A5E:
	call fn00402A5E (retsize: 0;)
	return
	// succ:  fn00402A4C_exit
l00402A58_thunk_fn00402A5E:
	call fn00402A5E (retsize: 0;)
	return
	// succ:  fn00402A4C_exit
fn00402A4C_exit:


// fn00402A5E
// Return size: 0
void fn00402A5E()
fn00402A5E_entry:
	// succ:  l00402A5E
l00402A5E:
	branch Test(ULT,C) l00402A60
	// succ:  l00402A60
l00402A60:
	v4 = ecx
	ecx = ecx
	ecx = v4
	branch Test(UGE,C) l00402A62_thunk_fn00402197
	goto l00402A68
	// succ:  l00402A68 l00402A62_thunk_fn00402197
l00402A62_thunk_fn00402197:
	call fn00402197 (retsize: 0;)
	return
	// succ:  fn00402A5E_exit
l00402A68:
	ds = Mem0[esi:selector]
	al = __inb(dx)
	esp = esp - 0x00000004
	Mem0[esp:word32] = ss
	v12 = (edx & 0x00000001 << 0x20 - 0x02) != 0x00000000
	edx = __rcl(edx, 0x02, C)
	C = v12
	edi = 0x4E4AC2FE
	// succ:  l00402A6F_thunk_fn00402A74
l00402A6F_thunk_fn00402A74:
	call fn00402A74 (retsize: 0;)
	return
	// succ:  fn00402A5E_exit
fn00402A5E_exit:


// fn00402A70
// Return size: 0
void fn00402A70()
fn00402A70_entry:
	// succ:  l00402A70
l00402A70:
	esp = fp
	dl = dl + 0x01
	SZO = cond(dl)
	edx = edx - 0x00000001
	SZO = cond(edx)
	esi = esi - 0x00000001
	SZO = cond(esi)
	goto l00402A73_thunk_fn00402A74
	// succ:  l00402A73_thunk_fn00402A74
l00402A70:
l00402A73_thunk_fn00402A74:
	call fn00402A74 (retsize: 0;)
	return
	// succ:  fn00402A70_exit
fn00402A70_exit:


// fn00402A74
// Return size: 0
void fn00402A74()
fn00402A74_entry:
	// succ:  l00402A74
l00402A74:
	esp = fp
	esi = esi + 0x00000001
	SZO = cond(esi)
	esi = esi ^ edx
	SZO = cond(esi)
	C = false
	dh = dh + dl
	SCZO = cond(dh)
	dh = dh + 0x86 + C
	SCZO = cond(dh)
	branch Test(LE,SZO) l00402A7C_thunk_fn00402F29
	goto l00402A7C_thunk_fn00402A82
	// succ:  l00402A7C_thunk_fn00402A82 l00402A7C_thunk_fn00402F29
l00402A74:
	esi = esi + 0x00000001
	SZO = cond(esi)
	esi = esi ^ edx
	SZO = cond(esi)
	C = false
	dh = dh + dl
	SCZO = cond(dh)
	dh = dh + 0x86 + C
	SCZO = cond(dh)
	branch Test(LE,SZO) l00402F29
	goto l00402A7C_thunk_fn00402A82
	// succ:  l00402A7C_thunk_fn00402A82 l00402A7C_thunk_fn00402F29
l00402A7C_thunk_fn00402A82:
	call fn00402A82 (retsize: 0;)
	return
	// succ:  fn00402A74_exit l00402A7C_thunk_fn00402A82
l00402A7C_thunk_fn00402A82:
	call fn00402A82 (retsize: 0;)
	return
	// succ:  fn00402A74_exit
l00402A7C_thunk_fn00402A82:
	call fn00402A82 (retsize: 0;)
	return
	// succ:  fn00402A74_exit
l00402A7C_thunk_fn00402F29:
	call fn00402F29 (retsize: 0;)
	return
	// succ:  fn00402A74_exit
l00402A7C_thunk_fn00402F29:
	call fn00402F29 (retsize: 0;)
	return
	// succ:  fn00402A74_exit
fn00402A74_exit:


// fn00402A82
// Return size: 0
void fn00402A82()
fn00402A82_entry:
	// succ:  l00402A82
l00402A82:
	// succ:  l00402A87
l00402A87:
	branch Test(GT,SZO) l00402F29
	goto l00402A8D
	// succ:  l00402A8D l00402A87_thunk_fn00402F29
l00402A87_thunk_fn00402F29:
	call fn00402F29 (retsize: 0;)
	return
	// succ:  fn00402A82_exit
l00402A8D:
	SCZO = cond(al - Mem0[edi:byte])
	edi = edi + 0x00000001
	eax = Mem0[0xDE0BD272:word32]
	// succ:  l00402A8E_thunk_fn00402A93
l00402A8E_thunk_fn00402A93:
	call fn00402A93 (retsize: 0;)
	return
	// succ:  fn00402A82_exit
fn00402A82_exit:


// fn00402A91
// Return size: 0
void fn00402A91()
fn00402A91_entry:
	// succ:  l00402A91
l00402A91:
	esp = fp
	ebx = ebx | esi
	SZO = cond(ebx)
	C = false
	goto l00402A91_thunk_fn00402A93
	// succ:  l00402A91_thunk_fn00402A93
l00402A91:
l00402A91_thunk_fn00402A93:
	call fn00402A93 (retsize: 0;)
	return
	// succ:  fn00402A91_exit
l00402A9E_thunk_fn0040238F:
	call fn0040238F (retsize: 0;)
	return
	// succ:  fn00402A91_exit
l00402A9E_thunk_fn00402AA4:
	call fn00402AA4 (retsize: 0;)
	return
	// succ:  fn00402A91_exit l00402A9E_thunk_fn00402AA4
l00402A9E_thunk_fn00402AA4:
	call fn00402AA4 (retsize: 0;)
	return
	// succ:  fn00402A91_exit
fn00402A91_exit:


// fn00402A93
// Return size: 0
void fn00402A93()
fn00402A93_entry:
	// succ:  l00402A93
l00402A93:
	esp = fp
	eax = Mem0[eax:word32]
	bh = bh + dh
	SCZO = cond(bh)
	bl = bl + 0x46 + C
	SCZO = cond(bl)
	bh = bh - al
	SCZO = cond(bh)
	bh = bh - cl
	SCZO = cond(bh)
	branch Test(EQ,Z) l00402A9E_thunk_fn0040238F
	// succ:  l00402A9E_thunk_fn00402AA4 l00402A9E_thunk_fn0040238F l00402A9E_thunk_fn00402AA4 l00402A9E_thunk_fn0040238F
l00402A93:
	eax = Mem0[eax:word32]
	bh = bh + dh
	SCZO = cond(bh)
	bl = bl + 0x46 + C
	SCZO = cond(bl)
	bh = bh - al
	SCZO = cond(bh)
	bh = bh - cl
	SCZO = cond(bh)
	branch Test(EQ,Z) l00402A9E_thunk_fn0040238F
l00402A9E_thunk_fn0040238F:
	call fn0040238F (retsize: 0;)
	return
	// succ:  fn00402A93_exit
l00402A9E_thunk_fn00402AA4:
	call fn00402AA4 (retsize: 0;)
	return
	// succ:  fn00402A93_exit
l00402AAF:
	// succ:  fn00402A93_exit
fn00402A93_exit:


// fn00402AA4
// Return size: 0
void fn00402AA4()
fn00402AA4_entry:
	// succ:  l00402AA4
l00402AA4:
	eax = eax
	branch Test(GE,SO) l00402AA8
	// succ:  l00402AA8
l00402AA8:
	branch Test(NE,Z) l00402AA8_thunk_fn0040238F
	goto l00402AAE
	// succ:  l00402AAE l00402AA8_thunk_fn0040238F
l00402AA8_thunk_fn0040238F:
	call fn0040238F (retsize: 0;)
	return
	// succ:  fn00402AA4_exit
l00402AAE:
	ebx = 0x035B5166
	// succ:  l00402AAE_thunk_fn00402AB3
l00402AAE_thunk_fn00402AB3:
	call fn00402AB3 (retsize: 0;)
	return
fn00402AA4_exit:


// fn00402AB2
// Return size: 0
void fn00402AB2()
fn00402AB2_entry:
	// succ:  l00402AB2
l00402AB2:
	esp = fp
	ebx = ebx + eax
	SCZO = cond(ebx)
	call fn00402955 (retsize: 4;)
	// succ:  l00402AB2_thunk_fn00402AB3 l00402AC0_thunk_fn00402AC5
l00402AB2:
l00402AB2_thunk_fn00402AB3:
	call fn00402AB3 (retsize: 0;)
	return
	// succ:  fn00402AB2_exit
l00402AC0_thunk_fn00402AC5:
	call fn00402AC5 (retsize: 0;)
	return
	// succ:  fn00402AB2_exit
fn00402AB2_exit:


// fn00402AB3
// Return size: 0
void fn00402AB3()
fn00402AB3_entry:
	// succ:  l00402AB3
l00402AB3:
	esp = fp
	rArg0 = rArg0 / rArg6
l00402AB3:
	bl = -bl
	SCZO = cond(bl)
	C = bl == 0x00
	ecx = ecx - ebx
	SCZO = cond(ecx)
	bh = bh + 0x01
	SZO = cond(bh)
	bh = -bh
	SCZO = cond(bh)
	C = bh == 0x00
	esi = esi + eax
	SCZO = cond(esi)
	ecx = ecx - eax
	SCZO = cond(ecx)
fn00402AB3_exit:


// fn00402AC5
// Return size: 0
void fn00402AC5()
fn00402AC5_entry:
	// succ:  l00402AC5
l00402AC5:
	esp = fp
	al = al - 0xB8 - C
	SCZO = cond(al)
	ecx = ecx - 0x00000001
	branch Test(NE,Z) && ecx != 0x00000000 TMP!
l00402AC5:
fn00402AC5_exit:


// fn00402ACD
// Return size: 0
void fn00402ACD()
fn00402ACD_entry:
	// succ:  l00402ACD
l00402ACD:
	esp = fp
	ch = ch + 0x01
	SZO = cond(ch)
	ch = ch + 0x30 + C
	SCZO = cond(ch)
	cl = cl - bl
	SCZO = cond(cl)
	edx = edx + ebx
	SCZO = cond(edx)
	ecx = eax
	dh = ~dh
	dh = dh - 0x01
	SZO = cond(dh)
	branch Test(SG,S) l00402BD5
	goto l00402AE2
	// succ:  l00402AE2 l00402BD5
l00402ACD:
l00402AE2:
	v15 = ecx
	ecx = ecx
	ecx = v15
	branch Test(GT,SZO) l00402AE6
	// succ:  l00402AE6
l00402AE6:
	branch Test(NS,S) l00402BD5
	// succ:  l00402AEC l00402BD5
l00402AEC:
	__hlt()
l00402BD5:
	edx = ebx
	ch = -ch
	SCZO = cond(ch)
	C = ch == 0x00
	esi = esi ^ edi
	SZO = cond(esi)
	C = false
	ch = ch - 0x13 - C
	SCZO = cond(ch)
	esi = esi + edi
	SCZO = cond(esi)
	esi = ebx
	dh = dh | dl
	SZO = cond(dh)
	C = false
	call fn0040242A (retsize: 4;)
	v20 = Mem0[ecx + 0xCFFE409A:byte] & ah
	Mem0[ecx + 0xCFFE409A:byte] = v20
	SZO = cond(Mem0[ecx + 0xCFFE409A:byte])
	C = false
	// succ:  l00402BE9_thunk_fn00402BEF
l00402BE9_thunk_fn00402BEF:
	call fn00402BEF (retsize: 0;)
	return
	// succ:  fn00402ACD_exit
fn00402ACD_exit:


// fn00402AF4
// Return size: 0
void fn00402AF4()
fn00402AF4_entry:
	// succ:  l00402AF4
l00402AF4:
	esp = fp
	dl = dl - 0x01
	SZO = cond(dl)
	esi = esi - 0x00000001
	SZO = cond(esi)
	esi = esi + edi
	SCZO = cond(esi)
	dl = -dl
	SCZO = cond(dl)
	C = dl == 0x00
	ebx = ebx - 0x00000001
	SZO = cond(ebx)
	dl = dl + 0x55 + C
	SCZO = cond(dl)
	branch Test(ULE,CZ) l004024A0
	goto l00402B05
	// succ:  l00402B05 l00402AFF_thunk_fn004024A0
l00402AF4:
l00402AFF_thunk_fn004024A0:
	call fn004024A0 (retsize: 0;)
	return
	// succ:  fn00402AF4_exit
l00402B05:
	v11 = bl
	bl = bl
	bl = v11
	branch Test(UGE,C) l00402B09
	// succ:  l00402B09
l00402B09:
	branch Test(UGT,CZ) l004024A0
	goto l00402B0F
	// succ:  l00402B0F l00402B09_thunk_fn004024A0
l00402B09_thunk_fn004024A0:
	call fn004024A0 (retsize: 0;)
	return
	// succ:  fn00402AF4_exit
l00402B0F:
	esi = 0xA1D3E160
	esp = esp - 0x00000001
	SZO = cond(esp)
fn00402AF4_exit:


// fn00402B17
// Return size: 4
void fn00402B17()
fn00402B17_entry:
	// succ:  l00402B17
l00402B17:
	esp = fp
	dh = dh + 0x01
	SZO = cond(dh)
	esi = esi + 0x00000001
	SZO = cond(esi)
	cl = cl | ah
	SZO = cond(cl)
	C = false
	ecx = ecx + 0x00000001
	SZO = cond(ecx)
	bl = bl - ch
	SCZO = cond(bl)
	esi = esi - edi
	SCZO = cond(esi)
	bh = bh + cl
	SCZO = cond(bh)
	call fn004025B3 (retsize: 4;)
	v15 = Mem0[edi + 0x00000049:word32] + 0x00000001
	Mem0[edi + 0x00000049:word32] = v15
	SZO = cond(v15)
	esp = esp - 0x00000004
	Mem0[esp:word32] = edx
	return
	// succ:  fn00402B17_exit
l00402B17:
fn00402B17_exit:


// fn00402B30
// Return size: 0
void fn00402B30()
fn00402B30_entry:
	goto l00402B30
	// succ:  l00402B30
l004024EC:
	edi = ecx
	edi = edi | ebx
	SZO = cond(edi)
	C = false
	ebx = ebx + edi
	SCZO = cond(ebx)
	bl = bl - cl
	SCZO = cond(bl)
	bh = bh ^ al
	SZO = cond(bh)
	C = false
	edx = edx - esi
	SCZO = cond(edx)
	bl = bl - 0x01
	SZO = cond(bl)
	edi = edi | ecx
	SZO = cond(edi)
	C = false
	ebx = ebx ^ ecx
	SZO = cond(ebx)
	C = false
	call fn00402914 (retsize: 4;)
	esp = esp + 0x00000001
	SZO = cond(esp)
	SCZO = cond(Mem0[eax + 0x00000048:byte] - ah)
	C = __das(al, &al)
	SCZO = cond(Mem0[esi:byte] - Mem0[edi:byte])
	esi = esi + 0x00000001
	edi = edi + 0x00000001
	// succ:  l00402508_thunk_fn00402509
l00402508_thunk_fn00402509:
	call fn00402509 (retsize: 0;)
	return
	// succ:  fn00402B30_exit
l00402B30:
	esp = fp
	Mem0[esp - 0x00000010:word32] = Mem0[esp:word32]
	esp = esp + 0x00000004
	ebx = ebx ^ edx
	SZO = cond(ebx)
	C = false
	bh = ~bh
	bh = bh | cl
	SZO = cond(bh)
	C = false
	bl = bl + 0x5E
	SCZO = cond(bl)
	ecx = Mem0[esp:word32]
	esp = esp + 0x00000004
	bh = bh + ch
	SCZO = cond(bh)
	ah = ~ah
	al = al - ah
	SCZO = cond(al)
	ah = ah - ch
	SCZO = cond(ah)
	goto l004024EC
	// succ:  l004024EC
fn00402B30_exit:


// fn00402B80
// Return size: 0
void fn00402B80()
fn00402B80_entry:
	// succ:  l00402B80
l00402B80:
	Mem0[esp - 0x00000020:word32] = Mem0[esp:word32]
	esp = esp + 0x00000004
	dl = 0x78
	bh = bh - al
	SCZO = cond(bh)
	ch = 0xDD
	ch = ch - 0xB9 - C
	SCZO = cond(ch)
	ebx = 0x11331731
	ecx = ecx | eax
	SZO = cond(ecx)
	C = false
	dh = ~dh
	edx = edx ^ ebx
	SZO = cond(edx)
	C = false
	dh = dh - 0x01
	SZO = cond(dh)
	branch Test(SG,S) l00402B9A_thunk_fn0040284D
	goto l00402BA0
	// succ:  l00402BA0 l00402B9A_thunk_fn0040284D
l00402B9A_thunk_fn0040284D:
	call fn0040284D (retsize: 0;)
	return
	// succ:  fn00402B80_exit
l00402BA0:
fn00402B80_exit:


// fn00402BEF
// Return size: 0
void fn00402BEF()
fn00402BEF_entry:
	// succ:  l00402BEF
l00402BEF:
	esp = fp
	ebx = ebx | eax
	SZO = cond(ebx)
	C = false
	bl = bl + dh
	SCZO = cond(bl)
	bh = bh + 0x24 + C
	SCZO = cond(bh)
	esi = esi + 0x00000001
	SZO = cond(esi)
	bh = -bh
	SCZO = cond(bh)
	C = bh == 0x00
	edx = eax + 0x000000F8
	bh = 0x99
	bh = bh + ah
	SCZO = cond(bh)
	bh = bh + bl
	SCZO = cond(bh)
	branch Test(EQ,Z) l00402C05_thunk_fn00402581
	// succ:  l00402C05_thunk_fn00402C0B l00402C05_thunk_fn00402581 l00402C05_thunk_fn00402C0B l00402C05_thunk_fn00402581
l00402BEF:
	ebx = ebx | eax
	SZO = cond(ebx)
	C = false
	bl = bl + dh
	SCZO = cond(bl)
	bh = bh + 0x24 + C
	SCZO = cond(bh)
	esi = esi + 0x00000001
	SZO = cond(esi)
	bh = -bh
	SCZO = cond(bh)
	C = bh == 0x00
	edx = eax + 0x000000F8
	bh = 0x99
	bh = bh + ah
	SCZO = cond(bh)
	bh = bh + bl
	SCZO = cond(bh)
	branch Test(EQ,Z) l00402C05_thunk_fn00402581
l00402C05_thunk_fn00402581:
	call fn00402581 (retsize: 0;)
	return
	// succ:  fn00402BEF_exit
l00402C05_thunk_fn00402C0B:
	call fn00402C0B (retsize: 0;)
	return
	// succ:  fn00402BEF_exit
fn00402BEF_exit:


// fn00402C0B
// Return size: 0
void fn00402C0B()
fn00402C0B_entry:
	// succ:  l00402C0B
l00402C0B:
	v3 = dl
	dl = dl
	dl = v3
	branch Test(NE,Z) l00402C0D_thunk_fn00402581
	goto l00402C13
	// succ:  l00402C13 l00402C0D_thunk_fn00402581
l00402C0D_thunk_fn00402581:
	call fn00402581 (retsize: 0;)
	return
	// succ:  fn00402C0B_exit
l00402C13:
	al = al ^ 0x2E
	SZO = cond(al)
	C = false
	v10 = Mem0[edi:real64] / rArg0
	Mem0[edi:real64] = v10
	ebp = ebp - Mem0[ebx:word32] - C
	SCZO = cond(ebp)
	// succ:  l00402C19
l00402C19:
	return
	// succ:  fn00402C0B_exit
fn00402C0B_exit:


// fn00402C3F
// Return size: 0
void fn00402C3F()
fn00402C3F_entry:
	// succ:  l00402C3F
l00402C3F:
	esp = fp
	bl = ch
	bl = bl ^ ch
	SZO = cond(bl)
	C = false
	esi = esi + 0x00000001
	SZO = cond(esi)
	edi = edi + esi
	SCZO = cond(edi)
	bh = bh + 0xF4 + C
	SCZO = cond(bh)
	bl = ~bl
	bl = bl + dl
	SCZO = cond(bl)
	bl = bl - 0xBF - C
	SCZO = cond(bl)
	edx = Mem0[esp:word32]
	esp = esp + 0x00000004
	ebx = ebx ^ esi
	SZO = cond(ebx)
	C = false
	goto l00402C53_thunk_fn004025CE
	// succ:  l00402C53_thunk_fn004025CE
l00402C3F:
l00402C53_thunk_fn004025CE:
	call fn004025CE (retsize: 0;)
	return
	// succ:  fn00402C3F_exit
fn00402C3F_exit:


// fn00402C60
// Return size: 0
void fn00402C60()
fn00402C60_entry:
	// succ:  l00402C60
l00402C60:
	bl = ~bl
	edi = edi ^ ecx
	SZO = cond(edi)
	C = false
	eax = eax - 0x00000001
	SZO = cond(eax)
	edi = edi | esi
	SZO = cond(edi)
	C = false
	dh = dh + 0x84 + C
	SCZO = cond(dh)
	eax = edi
	goto l00402C6C_thunk_fn00402D0D
	// succ:  l00402C6C_thunk_fn00402D0D
fn00402C60_exit:


// fn00402C78
// Return size: 0
void fn00402C78()
fn00402C78_entry:
	// succ:  l00402C78
l00402C78:
	ah = -ah
	SCZO = cond(ah)
	C = ah == 0x00
	eax = eax - ecx
	SCZO = cond(eax)
	ebx = ebx ^ ecx
	SZO = cond(ebx)
	C = false
	edi = edi - esi
	SCZO = cond(edi)
	edi = edi ^ ecx
	SZO = cond(edi)
	C = false
	dh = 0xE3
	call fn004027A6 (retsize: 4;)
fn00402C78_exit:


// fn00402C90
// Return size: 0
void fn00402C90()
fn00402C90_entry:
	goto l00402C90
	// succ:  l00402C90
l00402333:
	ch = ch | bh
	SZO = cond(ch)
	C = false
	// succ:  l00402333_thunk_fn00402334
l00402333_thunk_fn00402334:
	call fn00402334 (retsize: 0;)
	return
	// succ:  fn00402C90_exit
l00402C90:
	esp = fp
	ebx = ebx - esi
	SCZO = cond(ebx)
	bl = -bl
	SCZO = cond(bl)
	C = bl == 0x00
	dh = dh - ch
	SCZO = cond(dh)
	bl = ~bl
	dh = dh + 0xFA + C
	SCZO = cond(dh)
	edx = esi
	edi = Mem0[esp:word32]
	esp = esp + 0x00000004
	dl = dl + bh
	SCZO = cond(dl)
	branch Test(LT,SO) l00402333
	goto l00402CA6
	// succ:  l00402CA6 l00402333
l00402C90:
l00402CA6:
	esp = esp - 0x00000002
	Mem0[esp:word16] = ax
	ax = Mem0[esp:word16]
	esp = esp + 0x00000002
	// succ:  l00402CAF
l00402CAF:
	branch Test(GE,SO) l00402333
	// succ:  l00402CB5 l00402333
l00402CB5:
	v21 = eax
	eax = ebx
	ebx = v21
	Mem0[eax + 0xD980594E:word32] = 0xD1DD80A5
	// succ:  l00402CB6_thunk_fn00402CBA
l00402CB6_thunk_fn00402CBA:
	call fn00402CBA (retsize: 0;)
	return
	// succ:  fn00402C90_exit
fn00402C90_exit:


// fn00402CBA
// Return size: 0
void fn00402CBA()
fn00402CBA_entry:
	// succ:  l00402CBA
l00402CBA:
	esp = fp
	cl = cl - 0xA5 - C
	SCZO = cond(cl)
	ch = ch - 0xD1 - C
	SCZO = cond(ch)
	ch = ch - dh
	SCZO = cond(ch)
	dl = dl - 0xD6 - C
	SCZO = cond(dl)
	goto l00402CC5
	// succ:  l00402CC5
l00402CBA:
	ch = ch - dh
	SCZO = cond(ch)
	dl = dl - 0xD6 - C
	SCZO = cond(dl)
	edx = edx ^ eax
	SZO = cond(edx)
	C = false
	cl = cl + 0x79 + C
	SCZO = cond(cl)
	branch Test(SG,S) TMP!
l00402CC5:
	edx = edx ^ eax
	SZO = cond(edx)
	C = false
	cl = cl + 0x79 + C
	SCZO = cond(cl)
	branch Test(SG,S) l00402CCA_thunk_fn004022BA
	goto l00402CD0
	// succ:  l00402CD0 l00402CCA_thunk_fn004022BA
l00402CCA_thunk_fn004022BA:
	call fn004022BA (retsize: 0;)
	return
	// succ:  fn00402CBA_exit
l00402CD0:
	ebx = ebx
	v14 = edi
	edi = edi
	edi = v14
	branch Test(NS,S) l00402CD4_thunk_fn004022BA
	goto l00402CDA
	// succ:  l00402CDA l00402CD4_thunk_fn004022BA
l00402CD4_thunk_fn004022BA:
	call fn004022BA (retsize: 0;)
	return
	// succ:  fn00402CBA_exit
l00402CDA:
	v16 = eax
	eax = ecx
	ecx = v16
	branch Test(PE,P) l00402CC5
	// succ:  l00402CDD l00402CC5
l00402CDD:
	al = al - 0x72
	SCZO = cond(al)
	SCZO = cond(cl - bl)
	// succ:  l00402CDF_thunk_fn00402CE1
l00402CDF_thunk_fn00402CE1:
	call fn00402CE1 (retsize: 0;)
	return
	// succ:  fn00402CBA_exit
fn00402CBA_exit:


// fn00402CE1
// Return size: 0
void fn00402CE1()
fn00402CE1_entry:
	// succ:  l00402CE1
l00402CE1:
	esp = fp
	Mem0[esp:word32] = ecx
	edi = edi
	ecx = Mem0[esp:word32]
	esp = esp + 0x00000004
	bl = bl + ah
	SCZO = cond(bl)
	bh = bh - cl
	SCZO = cond(bh)
	ebx = esi
	bh = bh | cl
	SZO = cond(bh)
	C = false
	ebx = (word32) ah
	esi = edi
	edi = edi - 0x00000001
	SZO = cond(edi)
	branch Test(ULT,C) l00402CF5_thunk_fn00402D90
	goto l00402CFB
	// succ:  l00402CFB l00402CF5_thunk_fn00402D90
l00402CF5_thunk_fn00402D90:
	call fn00402D90 (retsize: 0;)
	return
	// succ:  fn00402CE1_exit
l00402CFB:
	v14 = edi
	edi = edi
	edi = v14
	// succ:  l00402D02
l00402D02:
	branch Test(UGE,C) l00402D02_thunk_fn00402D90
	goto l00402D08
	// succ:  l00402D08 l00402D02_thunk_fn00402D90
l00402D02_thunk_fn00402D90:
	call fn00402D90 (retsize: 0;)
	return
	// succ:  fn00402CE1_exit
l00402D08:
	D = true
	return
	// succ:  fn00402CE1_exit
fn00402CE1_exit:


// fn00402D0D
// Return size: 0
void fn00402D0D()
fn00402D0D_entry:
	// succ:  l00402D0D
l00402D0D:
	esp = fp
	ecx = ecx << 0x0000000F
	SCZO = cond(ecx)
	ebx = ebx + 0x00000001
	SZO = cond(ebx)
	bh = bh + 0xCB + C
	SCZO = cond(bh)
	bh = bh - 0x1C - C
	SCZO = cond(bh)
	bl = dl
	ah = ah + 0x4F
	SCZO = cond(ah)
	eax = eax ^ edi
	SZO = cond(eax)
	C = false
	call fn00402088 (retsize: 4;)
	esp = esp - 0x00000004
	Mem0[esp:word32] = SCZDOP
	C = false
	branch Test(OV,O) l00402D25_thunk_fn00402D66
	goto l00402D27
	// succ:  l00402D27 l00402D25_thunk_fn00402D66
l00402D0D:
l00402D25_thunk_fn00402D66:
	call fn00402D66 (retsize: 0;)
	return
	// succ:  fn00402D0D_exit
l00402D27:
fn00402D0D_exit:


// fn00402D28
// Return size: 0
void fn00402D28()
fn00402D28_entry:
	// succ:  l00402D28
l00402D28:
	esp = fp
	dh = dh ^ dl
	SZO = cond(dh)
	C = false
	ebx = ebx ^ eax
	SZO = cond(ebx)
	C = false
	cl = -cl
	SCZO = cond(cl)
	C = cl == 0x00
	ecx = ecx | eax
	SZO = cond(ecx)
	C = false
	ebx = ebx + 0x00000001
	SZO = cond(ebx)
	ch = ch + 0xB7
	SCZO = cond(ch)
	ebx = ebx + esi
	SCZO = cond(ebx)
	esi = ecx
	call fn0040288C (retsize: 4;)
	esi = esi | Mem0[edx + 0x00000052:word32]
	SZO = cond(esi)
	C = false
	ah = 0x81
	al = __inb(dx)
	edx = edx_eax % Mem0[ebx:byte]
	eax = edx_eax /u Mem0[ebx:byte]
	SCZO = cond(eax)
l00402D28:
fn00402D28_exit:


// fn00402D44
// Return size: 0
void fn00402D44()
fn00402D44_entry:
	goto l00402D44
	// succ:  l00402D44
l00402C05_thunk_fn00402581:
	call fn00402581 (retsize: 0;)
	return
	// succ:  fn00402D44_exit
l00402C05_thunk_fn00402C0B:
	call fn00402C0B (retsize: 0;)
	return
	// succ:  fn00402D44_exit l00402C05_thunk_fn00402C0B
l00402C05_thunk_fn00402C0B:
	call fn00402C0B (retsize: 0;)
	return
	// succ:  fn00402D44_exit
l00402D44:
	esp = fp
	edi = edi ^ esi
	SZO = cond(edi)
	C = false
	goto l00402D45
	// succ:  l00402D45
l00402D44:
l00402D59_thunk_fn00402D66:
	call fn00402D66 (retsize: 0;)
	return
	// succ:  fn00402D44_exit
l00402D60:
	esp = esp - 0x00000002
	Mem0[esp:word16] = si
	si = Mem0[esp:word16]
	esp = esp + 0x00000002
	v15 = si
	si = si
	si = v15
	// succ:  l00402D64_thunk_fn00402D66
l00402D64_thunk_fn00402D66:
	call fn00402D66 (retsize: 0;)
	return
	// succ:  fn00402D44_exit
fn00402D44_exit:


// fn00402D66
// Return size: 0
void fn00402D66()
fn00402D66_entry:
	goto l00402D66
	// succ:  l00402D66
l00402BED:
	bh = bh - 0x01
	SZO = cond(bh)
	// succ:  l00402BED_thunk_fn00402BEF
l00402BED_thunk_fn00402BEF:
	call fn00402BEF (retsize: 0;)
	return
	// succ:  fn00402D66_exit
l00402D66:
	esp = fp
	SZO = cond(Mem0[edi:byte] & 0x8D)
	C = false
	SCZO = cond(dh - 0xFF)
l00402D66:
	branch Test(GE,SO) l00402BED
	// succ:  l00402D6D l00402BED
l00402D6D:
	__outb(dx, al)
	branch Test(ULE,CZ) l00402D6E_thunk_fn00402DEA
	goto l00402D70
	// succ:  l00402D70 l00402D6E_thunk_fn00402DEA
l00402D6E_thunk_fn00402DEA:
	call fn00402DEA (retsize: 0;)
	return
	// succ:  fn00402D66_exit
l00402D70:
	v15 = Mem0[edx:byte] - cl
	Mem0[edx:byte] = v15
	SCZO = cond(v15)
fn00402D66_exit:


// fn00402D71
// Return size: 0
void fn00402D71()
fn00402D71_entry:
	// succ:  l00402D71
l00402D71:
	esp = fp
	cl = cl | dh
	SZO = cond(cl)
	C = false
	ch = ch + 0x7B
	SCZO = cond(ch)
	Mem0[esp - 0x00000008:word32] = eax
	edx = edx | esi
	SZO = cond(edx)
	C = false
	ch = ch - 0xDA - C
	SCZO = cond(ch)
	ch = ch + 0xDF + C
	SCZO = cond(ch)
	bh = bh ^ bl
	SZO = cond(bh)
	C = false
	goto l00402E1E
	// succ:  l00402E1E
l00402D71:
l00402E1E:
	ch = ch + 0x9C + C
	SCZO = cond(ch)
	ebx = ebx - edx
	SCZO = cond(ebx)
	ebx = ebx + 0x00000001
	SZO = cond(ebx)
	edi = edi + ecx
	SCZO = cond(edi)
	bh = bh | ch
	SZO = cond(bh)
	C = false
	dh = bh
	dh = dh - 0x23 - C
	SCZO = cond(dh)
	cl = cl - 0x01
	SZO = cond(cl)
	// succ:  l00402E2F_thunk_fn0040229F
l00402E2F_thunk_fn0040229F:
	call fn0040229F (retsize: 0;)
	return
	// succ:  fn00402D71_exit
fn00402D71_exit:


// fn00402D90
// Return size: 0
void fn00402D90()
fn00402D90_entry:
	// succ:  l00402D90
l00402D90:
	esp = fp
	esi = eax
	edi = edi ^ ebx
	SZO = cond(edi)
	C = false
	esi = esi | edi
	SZO = cond(esi)
	C = false
	edi = ebx
	edi = edi - eax
	SCZO = cond(edi)
	eax = eax >>u 0x00000010
	SCZO = cond(eax)
	branch Test(LE,SZO) l00402D9D_thunk_fn004026C2
	goto l00402DA3
	// succ:  l00402DA3 l00402D9D_thunk_fn004026C2
l00402D90:
l00402D9D_thunk_fn004026C2:
	call fn004026C2 (retsize: 0;)
	return
	// succ:  fn00402D90_exit
l00402DA3:
	dh = dh
fn00402D90_exit:


// fn00402DB4
// Return size: 0
void fn00402DB4()
fn00402DB4_entry:
	// succ:  l00402DB4
l00402DB4:
	esp = fp
	Mem0[esp:word32] = edx
	v4 = bl
	bl = bl
	bl = v4
	// succ:  l00402DBE
l00402DBE:
	edx = Mem0[esp:word32]
	esp = esp + 0x00000004
	eax = eax + 0x00000008
	SCZO = cond(eax)
	bh = bh + 0x1D + C
	SCZO = cond(bh)
	ebx = ebx - 0x00000001
	SZO = cond(ebx)
	ebx = ebx - eax
	SCZO = cond(ebx)
	ebx = esi
	branch Test(EQ,Z) l00402DCA_thunk_fn00402064
	goto l00402DD0
	// succ:  l00402DD0 l00402DCA_thunk_fn00402064
l00402DCA_thunk_fn00402064:
	call fn00402064 (retsize: 0;)
	return
	// succ:  fn00402DB4_exit
l00402DD0:
	bh = bh
	branch Test(PE,P) l00402DD4
	// succ:  l00402DD4
l00402DD4:
	branch Test(NE,Z) l00402DD4_thunk_fn00402064
	goto l00402DDA
	// succ:  l00402DDA l00402DD4_thunk_fn00402064
l00402DD4_thunk_fn00402064:
	call fn00402064 (retsize: 0;)
	return
	// succ:  fn00402DB4_exit
l00402DDA:
	edx = edx & Mem0[eax + 0x873F2515:word32]
	SZO = cond(edx)
	C = false
	// succ:  l00402DDA_thunk_fn00402DE0
l00402DDA_thunk_fn00402DE0:
	call fn00402DE0 (retsize: 0;)
	return
	// succ:  fn00402DB4_exit
fn00402DB4_exit:


// fn00402DDF
// Return size: 0
void fn00402DDF()
fn00402DDF_entry:
	goto l00402DDF
	// succ:  l00402DDF
l00402C6C_thunk_fn00402D0D:
	call fn00402D0D (retsize: 0;)
	return
	// succ:  fn00402DDF_exit
l00402DDF:
	esp = fp
	v3 = Mem0[esp:word32]
	Mem0[esp:word32] = eax
	eax = v3
	// succ:  l00402DDF_thunk_fn00402DE0
l00402DDF_thunk_fn00402DE0:
	call fn00402DE0 (retsize: 0;)
	return
	// succ:  fn00402DDF_exit
fn00402DDF_exit:


// fn00402DE0
// Return size: 0
void fn00402DE0()
fn00402DE0_entry:
	// succ:  l00402DE0
l00402DE0:
	esp = fp
	al = al + 0x24
	SCZO = cond(al)
	bx = ebx
	eax = Mem0[esp:word32]
	esp = esp + 0x00000004
	ecx = ecx >>u 0x0000000F
	SCZO = cond(ecx)
	edx = edx - eax
	SCZO = cond(edx)
	goto l00402DE9_thunk_fn00402DEB
	// succ:  l00402DE9_thunk_fn00402DEB
l00402DE0:
	bx = ebx
	eax = Mem0[esp:word32]
	esp = esp + 0x00000004
	ecx = ecx >>u 0x0000000F
	SCZO = cond(ecx)
	edx = edx - eax
	SCZO = cond(edx)
	// succ:  l00402DE7_thunk_fn00402DEA
l00402DE7_thunk_fn00402DEA:
	call fn00402DEA (retsize: 0;)
	return
	// succ:  fn00402DE0_exit
l00402DE9_thunk_fn00402DEB:
	call fn00402DEB (retsize: 0;)
	return
	// succ:  fn00402DE0_exit
fn00402DE0_exit:


// fn00402DEA
// Return size: 0
void fn00402DEA()
fn00402DEA_entry:
	// succ:  l00402DEA
l00402DEA:
	esp = fp
	v3 = (Mem0[eax + 0x18B684D6:byte] & 0x01 << 0x08 - 0x01) != 0x00
	Mem0[eax + 0x18B684D6:byte] = __rol(Mem0[eax + 0x18B684D6:byte], 0x01)
	C = v3
	goto l00402DEA_thunk_fn00402DEB
	// succ:  l00402DEA_thunk_fn00402DEB
l00402DEA:
	dh = dh + 0x84 + C
	SCZO = cond(dh)
	dh = 0x18
	eax = eax ^ edx
	SZO = cond(eax)
	C = false
	bl = ~bl
	ah = ~ah
	goto l00402DF3_thunk_fn00402C60
	// succ:  l00402DF3_thunk_fn00402C60
l00402DEA_thunk_fn00402DEB:
	call fn00402DEB (retsize: 0;)
	return
	// succ:  fn00402DEA_exit
l00402DF3_thunk_fn00402C60:
	call fn00402C60 (retsize: 0;)
	return
	// succ:  fn00402DEA_exit
fn00402DEA_exit:


// fn00402DEB
// Return size: 0
void fn00402DEB()
fn00402DEB_entry:
	// succ:  l00402DEB
l00402DEB:
	esp = fp
	dh = dh + 0x84 + C
	SCZO = cond(dh)
	dh = 0x18
	eax = eax ^ edx
	SZO = cond(eax)
	C = false
	bl = ~bl
	ah = ~ah
	goto l00402DF6_thunk_fn00402C60
	// succ:  l00402DF6_thunk_fn00402C60
l00402DEB:
	eax = eax ^ edx
	SZO = cond(eax)
	C = false
	bl = ~bl
	ah = ~ah
	goto l00402DF6_thunk_fn00402C60
	// succ:  l00402DF6_thunk_fn00402C60
l00402DF6_thunk_fn00402C60:
	call fn00402C60 (retsize: 0;)
	return
	// succ:  fn00402DEB_exit
l00402DF6_thunk_fn00402C60:
	call fn00402C60 (retsize: 0;)
	return
	// succ:  fn00402DEB_exit
fn00402DEB_exit:


// fn00402E39
// Return size: 0
void fn00402E39()
fn00402E39_entry:
	// succ:  l00402E39
l00402E39:
	esp = fp
	v3 = Mem0[esp:word32]
	Mem0[esp:word32] = eax
	eax = v3
	branch Test(LE,SZO) l00402E3E
	// succ:  l00402E3E
l00402E3E:
	eax = Mem0[esp:word32]
	esp = esp + 0x00000004
	dl = ~dl
	ch = ch + dl
	SCZO = cond(ch)
	dh = dh - bl
	SCZO = cond(dh)
	// succ:  l00402E43_thunk_fn00402E45
l00402E43_thunk_fn00402E45:
	call fn00402E45 (retsize: 0;)
	return
	// succ:  fn00402E39_exit
fn00402E39_exit:


// fn00402E45
// Return size: 0
void fn00402E45()
fn00402E45_entry:
	// succ:  l00402E45
l00402E45:
	esp = fp
	esi = ebx
	dh = -dh
	SCZO = cond(dh)
	C = dh == 0x00
	ch = -ch
	SCZO = cond(ch)
	C = ch == 0x00
	cl = cl + 0x01
	SZO = cond(cl)
	goto l00402E4D_thunk_fn00402ACD
	// succ:  l00402E4D_thunk_fn00402ACD
l00402E45:
	esi = ebx
	dh = -dh
	SCZO = cond(dh)
	C = dh == 0x00
	ch = -ch
	SCZO = cond(ch)
	C = ch == 0x00
	cl = cl + 0x01
	SZO = cond(cl)
	goto l00402E4D_thunk_fn00402ACD
	// succ:  l00402E4D_thunk_fn00402ACD
l00402E4D_thunk_fn00402ACD:
	call fn00402ACD (retsize: 0;)
	return
	// succ:  fn00402E45_exit
l00402E4D_thunk_fn00402ACD:
	call fn00402ACD (retsize: 0;)
	return
	// succ:  fn00402E45_exit
fn00402E45_exit:


// fn00402E5A
// Return size: 0
void fn00402E5A()
fn00402E5A_entry:
	// succ:  l00402E5A
l00402E5A:
	dl = ~dl
	edx = edx - 0x00000001
	SZO = cond(edx)
	dh = 0xBD
	edx = edx + edi
	SCZO = cond(edx)
	bl = bl - 0x01
	SZO = cond(bl)
	bl = ~bl
	dl = ~dl
	bh = bh | cl
	SZO = cond(bh)
	C = false
	edx = edx | edi
	SZO = cond(edx)
	C = false
	bl = bl - 0x33 - C
	SCZO = cond(bl)
	call fn004028F4 (retsize: 4;)
	esi = esi ^ esi
	SZO = cond(esi)
	C = false
	branch Test(NE,Z) l00402E75_thunk_fn00402E9F
	goto l00402E77
	// succ:  l00402E77 l00402E75_thunk_fn00402E9F
l00402E75_thunk_fn00402E9F:
	call fn00402E9F (retsize: 0;)
	return
	// succ:  fn00402E5A_exit
l00402E77:
	esp = esp - 0x00000004
	Mem0[esp:word32] = 0x00000007
	// succ:  l00402E77_thunk_fn00402E79
l00402E77_thunk_fn00402E79:
	call fn00402E79 (retsize: 0;)
	return
	// succ:  fn00402E5A_exit
fn00402E5A_exit:


// fn00402E79
// Return size: 0
void fn00402E79()
fn00402E79_entry:
	// succ:  l00402E79
l00402E79:
	esp = fp
	esp = esp + 0x00000004
	bh = bh ^ ch
	SZO = cond(bh)
	C = false
	bl = bl ^ dl
	SZO = cond(bl)
	C = false
	bl = bl - dh
	SCZO = cond(bl)
	esi = esi + 0x00000001
	SZO = cond(esi)
	esi = esi + 0x00000001
	SZO = cond(esi)
fn00402E79_exit:


// fn00402E92
// Return size: 0
void fn00402E92()
fn00402E92_entry:
	// succ:  l00402E92
l00402E92:
	esp = fp
	esp = esp + 0x00000004
	esp = esp - 0x00000004
	Mem0[esp:word32] = 0x00000040
	edx = edx - eax
	SCZO = cond(edx)
	al = al - 0x01
	SZO = cond(al)
	al = al | dl
	SZO = cond(al)
	C = false
	al = 0x7B
	call fn00402615 (retsize: 4;)
	// succ:  l00402E9E_thunk_fn00402E9F l00402EA2_thunk_fn00402EA7
l00402E9E_thunk_fn00402E9F:
	call fn00402E9F (retsize: 0;)
	return
	// succ:  fn00402E92_exit
l00402EA2_thunk_fn00402EA7:
	call fn00402EA7 (retsize: 0;)
	return
	// succ:  fn00402E92_exit
fn00402E92_exit:


// fn00402E9F
// Return size: 0
void fn00402E9F()
fn00402E9F_entry:
	// succ:  l00402E9F
l00402E9F:
	esp = fp
	branch Test(PO,P) l00402ECB
	goto l00402EA1
	// succ:  l00402EA1 l00402ECB
l00402E9F:
	ch = ch - bh
	SCZO = cond(ch)
l00402EA1:
	__outw(dx, ax)
	call fn00402615 (retsize: 4;)
	// succ:  l00402EA2_thunk_fn00402EA7
l00402EA2_thunk_fn00402EA7:
	call fn00402EA7 (retsize: 0;)
	return
	// succ:  fn00402E9F_exit
l00402ECB:
	v12 = Mem0[eax:word32] >>u 0x00000001
	Mem0[eax:word32] = v12
	SCZO = cond(v12)
	eax = __indw(0x1E)
	ebp = Mem0[edx:word32]
	esp = esp - 0x00000004
	Mem0[esp:word32] = ebp
	ebp = esp
	esp = esp - 0xFFFFF8F6
	esp = esp - 0x00000004
	Mem0[esp:word32] = cs
	bh = bh + al
	SCZO = cond(bh)
	eax = eax + 0x00000C49
	SCZO = cond(eax)
	edx = edx - ebx
	SCZO = cond(edx)
	// succ:  l00402EE0_thunk_fn00402D28
l00402EE0_thunk_fn00402D28:
	call fn00402D28 (retsize: 0;)
	return
	// succ:  fn00402E9F_exit
fn00402E9F_exit:


// fn00402EA7
// Return size: 0
void fn00402EA7()
fn00402EA7_entry:
	// succ:  l00402EA7
l00402EA7:
	esp = fp
	branch Test(SG,S) l00402EA7_thunk_fn00402F14
	goto l00402EA7_thunk_fn00402EA9
	// succ:  l00402EA7_thunk_fn00402EA9 l00402EA7_thunk_fn00402F14
l00402EA7:
	branch Test(SG,S) l00402EA7_thunk_fn00402F14
	goto l00402EA7_thunk_fn00402EA9
	// succ:  l00402EA7_thunk_fn00402EA9 l00402EA7_thunk_fn00402F14
l00402EA7_thunk_fn00402EA9:
	call fn00402EA9 (retsize: 0;)
	return
	// succ:  fn00402EA7_exit l00402EA7_thunk_fn00402EA9
l00402EA7_thunk_fn00402EA9:
	call fn00402EA9 (retsize: 0;)
	return
	// succ:  fn00402EA7_exit
l00402EA7_thunk_fn00402EA9:
	call fn00402EA9 (retsize: 0;)
	return
	// succ:  fn00402EA7_exit
l00402EA7_thunk_fn00402F14:
	call fn00402F14 (retsize: 0;)
	return
	// succ:  fn00402EA7_exit
l00402EA7_thunk_fn00402F14:
	call fn00402F14 (retsize: 0;)
	return
	// succ:  fn00402EA7_exit
fn00402EA7_exit:


// fn00402EA9
// Return size: 0
void fn00402EA9()
fn00402EA9_entry:
	// succ:  l00402EA9
l00402EA9:
	SCZDOP = Mem0[esp:word32]
	esp = esp + 0x00000004
	ebx = ebx ^ ebx
	SZO = cond(ebx)
	C = false
	// succ:  l00402EAB_thunk_fn00402EAD
l00402EAB_thunk_fn00402EAD:
	call fn00402EAD (retsize: 0;)
	return
	// succ:  fn00402EA9_exit
fn00402EA9_exit:


// fn00402EAD
// Return size: 0
void fn00402EAD()
fn00402EAD_entry:
	// succ:  l00402EAD
l00402EAD:
	esp = fp
	Mem0[esp - 0x00000034:word32] = Mem0[esp:word32]
	esp = esp + 0x00000004
	dh = dh + 0xE8
	SCZO = cond(dh)
	ch = ch ^ bl
	SZO = cond(ch)
	C = false
	bh = bh - 0x01
	SZO = cond(bh)
	edi = edi | ebx
	SZO = cond(edi)
	C = false
	cl = cl + 0xEE + C
	SCZO = cond(cl)
	bh = -bh
	SCZO = cond(bh)
	C = bh == 0x00
	cl = cl | al
	SZO = cond(cl)
	C = false
	ebx = ebx + edi
	SCZO = cond(ebx)
	// succ:  l00402EC3_thunk_fn00402D71
l00402EC3_thunk_fn00402D71:
	call fn00402D71 (retsize: 0;)
	return
	// succ:  fn00402EAD_exit
fn00402EAD_exit:


// fn00402EEC
// Return size: 0
void fn00402EEC()
fn00402EEC_entry:
	goto l00402EEC
	// succ:  l00402EEC
l0040230F:
	v12 = (ch & 0x01 << 0x08) != 0x00
	ch = __ror(ch, 0x08)
	C = v12
	dh = dh - 0x3A - C
	SCZO = cond(dh)
	dl = -dl
	SCZO = cond(dl)
	C = dl == 0x00
	dh = bl
	edx = ebx
	dl = -dl
	SCZO = cond(dl)
	C = dl == 0x00
	esi = esi - 0x00000001
	SZO = cond(esi)
	branch Test(OV,O) l00402E03
	// succ:  l00402324 l00402E03
l00402324:
	esi = esi
	eax = eax
	branch Test(NO,O) l00402E03
	// succ:  l0040232E l00402E03
l0040232E:
	edx = edx + 0x00000001
	SZO = cond(edx)
	ax = dh *u al
	SCZO = cond(ax)
	esp = esp - 0x00000004
	Mem0[esp:word32] = ebx
	bh = 0x0A
	// succ:  l00402332_thunk_fn00402334
l00402332_thunk_fn00402334:
	call fn00402334 (retsize: 0;)
	return
	// succ:  fn00402EEC_exit
l00402E03:
	esi = esi + edi
	SCZO = cond(esi)
	dh = dh - 0x01
	SZO = cond(dh)
	dh = dh - 0x2D - C
	SCZO = cond(dh)
	edx = edx ^ ecx
	SZO = cond(edx)
	C = false
	esi = esi + 0x00000001
	SZO = cond(esi)
	dh = dh ^ dl
	SZO = cond(dh)
	C = false
	dl = 0xAE
	call fn00402509 (retsize: 4;)
	Mem0[0xD26CF445:byte] = al
	return
	// succ:  fn00402EEC_exit
l00402EEC:
	esp = fp
	Mem0[esp - 0x0000002C:word32] = Mem0[esp:word32]
	esp = esp + 0x00000004
	dh = ~dh
	esi = esi + ebx
	SCZO = cond(esi)
	dh = dh ^ ch
	SZO = cond(dh)
	C = false
	edx = edx - 0x00000001
	SZO = cond(edx)
	dl = dl - 0x01
	SZO = cond(dl)
	goto l0040230F
	// succ:  l0040230F
fn00402EEC_exit:


// fn00402F14
// Return size: 0
void fn00402F14()
fn00402F14_entry:
	goto l00402F14
	// succ:  l00402F14
l0040243D:
	Mem0[eax + 0x8978ED38:word16] = __fstcw()
	al = al + 0x24
	SCZO = cond(al)
	ah = ah
	eax = Mem0[esp:word32]
	esp = esp + 0x00000004
	dl = dl - 0x29 - C
	SCZO = cond(dl)
	dh = dh - 0xF3 - C
	SCZO = cond(dh)
	dh = dl
	dl = dl | cl
	SZO = cond(dl)
	C = false
	dh = dh + dl
	SCZO = cond(dh)
	dh = -dh
	SCZO = cond(dh)
	C = dh == 0x00
	goto l00402972
	// succ:  l00402972
l0040247E:
	dl = dl | al
	SZO = cond(dl)
	C = false
	dl = dl + dh
	SCZO = cond(dl)
	dh = 0x5B
	edx = edx - 0x00000001
	SZO = cond(edx)
	dl = dl + 0x6F + C
	SCZO = cond(dl)
	ch = ch ^ 0x29
	SZO = cond(ch)
	C = false
	dl = dl | ch
	SZO = cond(dl)
	C = false
	branch Test(LE,SZO) l0040248D_thunk_fn004028CC
	goto l00402493
	// succ:  l00402493 l0040248D_thunk_fn004028CC
l0040248D_thunk_fn004028CC:
	call fn004028CC (retsize: 0;)
	return
	// succ:  fn00402F14_exit
l00402493:
	branch Test(NS,S) l00402495
	// succ:  l00402495
l00402495:
	branch Test(GT,SZO) l00402495_thunk_fn004028CC
	goto l0040249B
	// succ:  l0040249B l00402495_thunk_fn004028CC
l00402495_thunk_fn004028CC:
	call fn004028CC (retsize: 0;)
	return
	// succ:  fn00402F14_exit
l0040249B:
	branch Test(UGT,CZ) l0040243D
	// succ:  l0040249D l0040243D
l0040249D:
	v19 = eax
	eax = ecx
	ecx = v19
	edx = edx - esi
	SCZO = cond(edx)
	// succ:  l0040249E_thunk_fn004024A0
l0040249E_thunk_fn004024A0:
	call fn004024A0 (retsize: 0;)
	return
	// succ:  fn00402F14_exit
l00402972:
	dl = dl + 0x01
	SZO = cond(dl)
	dl = ~dl
	esi = esi + 0x00000001
	SZO = cond(esi)
	dl = 0xCF
	esi = esi | ebx
	SZO = cond(esi)
	C = false
	esi = esi + edx
	SCZO = cond(esi)
	dl = dl - 0x01
	SZO = cond(dl)
	esi = esi + eax
	SCZO = cond(esi)
	dh = dh + 0xD8 + C
	SCZO = cond(dh)
	dl = ~dl
	// succ:  l004029B7
l004029B7:
	dl = cl
	dh = dh + 0x01
	SZO = cond(dh)
	dh = dh + 0x97
	SCZO = cond(dh)
	dl = dl ^ al
	SZO = cond(dl)
	C = false
	ch = ~ch
	esi = esi + 0x00000001
	SZO = cond(esi)
	branch Test(ULT,C) l00402F02
	// succ:  l004029C9 l00402F02
l004029C9:
l00402F02:
	esi = esi - 0x00000001
	SZO = cond(esi)
	edx = ebx
	dl = -dl
	SCZO = cond(dl)
	C = dl == 0x00
	dh = dh - bh
	SCZO = cond(dh)
	dh = dh + cl
	SCZO = cond(dh)
	dl = dl - 0x01
	SZO = cond(dl)
	dh = dh - 0xC2 - C
	SCZO = cond(dh)
	esi = esi - 0x00000001
	SZO = cond(esi)
	esi = esi + edx
	SCZO = cond(esi)
	branch Test(LE,SZO) l0040247E
l00402F14:
	esp = fp
	fs = Mem0[ebp - 0x0000000B:selector]
l00402F14:
	// succ:  l00402F19 l0040247E
l00402F19:
	si = esi
	branch Test(GT,SZO) l0040247E
	// succ:  l00402F22 l0040247E
l00402F22:
	SCZO = cond(esi - Mem0[ebp + 0x10D9B57F:word32])
	v10 = eax
	eax = esp
	esp = v10
	// succ:  l00402F28_thunk_fn00402F29
l00402F28_thunk_fn00402F29:
	call fn00402F29 (retsize: 0;)
	return
	// succ:  fn00402F14_exit
fn00402F14_exit:


// fn00402F29
// Return size: 0
void fn00402F29()
fn00402F29_entry:
	goto l00402F29
	// succ:  l00402F29
l0040254D:
	Mem0[eax:byte] = ch
	dl = dl - ah
	SCZO = cond(dl)
	edx = esi
	dh = -dh
	SCZO = cond(dh)
	C = dh == 0x00
	esi = esi - edx
	SCZO = cond(esi)
	edx = edx - edi
	SCZO = cond(edx)
	dl = dl - 0x01
	SZO = cond(dl)
	// succ:  l0040255B_thunk_fn00402635
l0040255B_thunk_fn00402635:
	call fn00402635 (retsize: 0;)
	return
	// succ:  fn00402F29_exit
l00402F29:
	dh = dh + ah
	SCZO = cond(dh)
	dl = dl + al
	SCZO = cond(dl)
	dl = ah
	edx = edx - eax
	SCZO = cond(edx)
	edx = edx ^ edi
	SZO = cond(edx)
	C = false
	dh = dh - 0x01
	SZO = cond(dh)
	dh = dh - cl
	SCZO = cond(dh)
	dh = dh + al
	SCZO = cond(dh)
	dh = dh - 0x01
	SZO = cond(dh)
	edx = edx | ebx
	SZO = cond(edx)
	C = false
	goto l0040254D
	// succ:  l0040254D
fn00402F29_exit:


