// subject.h
// Generated by decompiling subject.exe
// using Reko decompiler version VERSION

/*
// Equivalence classes ////////////
Eq_1: (struct "Globals")
	globals_t (in globals : (ptr (struct "Globals")))
Eq_2: (union "Eq_2" (DWORD u0) (HMODULE u1))
	T_2 (in eax : Eq_2)
	T_5 (in GetCurrentThreadId() : DWORD)
	T_10 (in GetModuleHandleA(tArg04) : HMODULE)
Eq_3: (fn Eq_2 ())
	T_3 (in GetCurrentThreadId : ptr32)
	T_4 (in signature of GetCurrentThreadId : void)
Eq_6: (fn Eq_2 (Eq_8))
	T_6 (in GetModuleHandleA : ptr32)
	T_7 (in signature of GetModuleHandleA : void)
Eq_8: LPCSTR
	T_8 (in lpModuleName : LPCSTR)
	T_9 (in tArg04 : LPCSTR)
// Type Variables ////////////
globals_t: (in globals : (ptr (struct "Globals")))
  Class: Eq_1
  DataType: (ptr Eq_1)
  OrigDataType: (ptr (struct "Globals"))
T_2: (in eax : Eq_2)
  Class: Eq_2
  DataType: Eq_2
  OrigDataType: DWORD
T_3: (in GetCurrentThreadId : ptr32)
  Class: Eq_3
  DataType: (ptr Eq_3)
  OrigDataType: (ptr (fn T_5 ()))
T_4: (in signature of GetCurrentThreadId : void)
  Class: Eq_3
  DataType: (ptr Eq_3)
  OrigDataType: 
T_5: (in GetCurrentThreadId() : DWORD)
  Class: Eq_2
  DataType: Eq_2
  OrigDataType: DWORD
T_6: (in GetModuleHandleA : ptr32)
  Class: Eq_6
  DataType: (ptr Eq_6)
  OrigDataType: (ptr (fn T_10 (T_9)))
T_7: (in signature of GetModuleHandleA : void)
  Class: Eq_6
  DataType: (ptr Eq_6)
  OrigDataType: 
T_8: (in lpModuleName : LPCSTR)
  Class: Eq_8
  DataType: Eq_8
  OrigDataType: 
T_9: (in tArg04 : LPCSTR)
  Class: Eq_8
  DataType: Eq_8
  OrigDataType: LPCSTR
T_10: (in GetModuleHandleA(tArg04) : HMODULE)
  Class: Eq_2
  DataType: Eq_2
  OrigDataType: HMODULE
*/
typedef struct Globals {
} Eq_1;

typedef union Eq_2 {
	DWORD u0;
	HMODULE u1;
} Eq_2;

typedef Eq_2 (Eq_3)();

typedef Eq_2 (Eq_6)(LPCSTR);

typedef LPCSTR Eq_8;

