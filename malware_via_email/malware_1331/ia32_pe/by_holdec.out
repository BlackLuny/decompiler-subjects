INFO  an - ### holdec 1.1 Copyright 2003-2012 Raimar Falke
INFO  an - Using ./malware_via_email/malware_1331/ia32_pe/subject.exe as executable
read image                              : ............................................................ [ done ]
INFO  fG - Detected PE (Portable Executable)
INFO  ks - wrote ./malware_via_email/malware_1331/ia32_pe/subject.exe.info
INFO  fG - disassembleAndWrite: start a new loop with 1 extra block starts
Disassemble                             : ............................................................ [ done ]
INFO  fG - disassembleAndWrite: running multiline
INFO  ks - wrote ./malware_via_email/malware_1331/ia32_pe/subject.exe.info
Preprocessing 1190 asm lines            : ............................................................ [ done ]
INFO  ks - wrote ./malware_via_email/malware_1331/ia32_pe/subject.exe.info
INFO  fG - disassembleAndWrite: found no new addresses. will stop now.
INFO  ks - wrote ./malware_via_email/malware_1331/ia32_pe/subject.exe.info
Preprocessing 1368 asm lines            : ............................................................ [ done ]
INFO  ks - wrote ./malware_via_email/malware_1331/ia32_pe/subject.exe.info
INFO  fG - reading all asm lines ...
INFO  fG - ... read 1368 asm lines
WARN  w - Address 003e2000.0 is excluded by the address filter. Maybe outside text section?
create blocks                           : ............................................................ [ done ]
init blocks                             : ............................................................ [ done ]
Writing 20 methods to cache             : ............................................................ [ done ]
INFO  an - will decompile 20 functions
decompile F_003e1000                    : ............................................................ [ done ]
decompile F_003e1021                    : .WARN  ag - Referencing unknown line 003e18f3.0
........................................................... [ done ]
decompile F_003e1060                    : ............................................................ [ done ]
decompile F_003e1073                    : .WARN  ag - Referencing unknown line 003e1060.0
........WARN  ac - Block 6 is already known to have a starting stack offset of -44 but when called from 10 it has an offset of -52
WARN  ac - Block 1 is already known to have a starting stack offset of -40 but when called from 11 it has an offset of -44
...................... failed: A non-current expression of a variable is used in block L10 in (void) STORE(ADD(local, 32), ADD(LOAD(ADD(reg_pp19, -12)), 4)): The current setter is reg_var26 while [reg_pp19] was found. Related expressions are [reg_var21, reg_var20, reg_var26, reg_pp19, reg_pp18]
decompile F_003e1197                    : ............................................................ [ done ]
decompile F_003e11a0                    : .........WARN  ac - Block 2 is already known to have a starting stack offset of -16 but when called from 1 it has an offset of -56
.............................WARN  d - may result in wrong values
WARN  d -   reg_pp6 = PHI(reg_var12, reg_var10) in Block2
WARN  d -   reg_var12 = ADD(reg_pp6, -40) in Block3
...................... [ done ]
decompile F_003e1300                    : ............................................................ [ done ]
decompile F_003e1320                    : .WARN  ag - Referencing unknown line 003e14f0.0
WARN  ag - Referencing unknown line 003e11a0.0
WARN  ag - Referencing unknown line 003e1300.0
WARN  ag - Referencing unknown line 003e1300.0
WARN  ag - Referencing unknown line 003e1000.0
WARN  ag - Referencing unknown line 003e1021.0
WARN  ag - Referencing unknown line 003e1500.0
WARN  ag - Referencing unknown line 003e1000.0
WARN  ag - Referencing unknown line 003e1073.0
WARN  ag - Referencing unknown line 003e16a9.0
WARN  ag - Referencing unknown line 003e1197.0
........WARN  ac - Block 10 is already known to have a starting stack offset of -52 but when called from 3 it has an offset of -68
WARN  ac - Block 10 is already known to have a starting stack offset of -68 but when called from 5 it has an offset of -84
WARN  ac - Block 10 is already known to have a starting stack offset of -84 but when called from 9 it has an offset of -112
................................................... [ done ]
decompile F_003e14d3                    : .WARN  ag - Referencing unknown line 003e1320.0
........................................................... [ done ]
decompile F_003e14f0                    : ............................................................ [ done ]
decompile F_003e1500                    : .WARN  ag - Referencing unknown line 003e18f3.0
.....................................WARN  d - may result in wrong values
WARN  d -   reg_pp8 = PHI(reg_36_local0, reg_36_local1) in Block2
WARN  d -   reg_36_local1 = ADD(reg_pp8, 1) in Block1
...................... [ done ]
decompile F_003e15d1                    : ............................................................ [ done ]
decompile F_003e16a9                    : .WARN  ag - Referencing unknown line 003e15d1.0
........WARN  ac - Block 2 is already known to have a starting stack offset of -32 but when called from 1 it has an offset of -48
................................................... [ done ]
decompile F_003e1750                    : ............................................................ [ done ]
decompile F_003e17a0                    : ............................................................ [ done ]
decompile F_003e17fe                    : .........WARN  ac - Block 2 is already known to have a starting stack offset of -4 but when called from 1 it has an offset of -16
................................................... [ done ]
decompile F_003e18f3                    : ............................................................ [ done ]
decompile F_003e1a40                    : .WARN  ag - Referencing unknown line 003e1a5b.0
........................................................... [ done ]
decompile F_003e1a5b                    : ................. failed: A non-current expression of a variable is used in block L4 in (void) STORE(ADD(reg_c0, SEGMENT2ADDR(reg_pp6)), reg_zb12): The current setter is reg_zj1 while [reg_pp6] was found. Related expressions are [reg_pp12, reg_pp8, reg_pp6, reg_zj5, reg_zj0, reg_zj2, reg_zj1]
decompile F_003e1b18                    : .WARN  ag - Referencing unknown line 003e1a5b.0
WARN  ag - Referencing unknown line 003e1a5b.0
........................................................... [ done ]
