Unknown library function CreatePipe
Unknown library function CreateThread
Unknown library function VirtualProtect
Unknown library function ReadFile
assgn    4 *32* r24 := m[24]
after removing matching assigns (%pc).
in proc proc2 adding addrExp r28{0} - 4 to local table
finding final parameters for proc2
assgn   45 *32* %pc := m[0x3e2010]
is readonly
assgn   68 *32* %pc := m[0x3e200c]
is readonly
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc3 ###
in proc proc3 adding addrExp r28{0} - 4 to local table
in proc proc3 adding addrExp r28{0} - 16 to local table
in proc proc3 adding addrExp r28{0} - 16 to local table
in proc proc3 adding addrExp r28{0} - 16 to local table
finding final parameters for proc3
potential param r28
found new parameter r28
potential param r24
found new parameter r24
potential param r26
found new parameter r26
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
assgn   16 *32* %pc := m[0x3e2014]
is readonly
assgn   27 *32* %pc := m[0x3e2014]
is readonly
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc4 ###
in proc proc4 adding addrExp r28{0} - 4 to local table
in proc proc4 adding addrExp r28{0} - 8 to local table
in proc proc4 adding addrExp r28{0} - 8 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffff8 existing type /*signed?*/int but added type HANDLE
in proc proc4 adding addrExp r28{0} - 8 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffff8 existing type /*signed?*/int but added type HANDLE
in proc proc4 adding addrExp r28{0} - 12 to local table
in proc proc4 adding addrExp r28{0} - 8 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffff8 existing type /*signed?*/int but added type HANDLE
in proc proc4 adding addrExp r28{0} - 8 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffff8 existing type /*signed?*/int but added type HANDLE
in proc proc4 adding addrExp r28{0} - 12 to local table
finding final parameters for proc4
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc5 ###
in proc proc5 adding addrExp r28{0} to local table
in proc proc5 adding addrExp r28{0} - 4 to local table
in proc proc5 adding addrExp r28{0} - 8 to local table
in proc proc5 adding addrExp r28{0} - 12 to local table
in proc proc5 adding addrExp r28{0} - 16 to local table
in proc proc5 adding addrExp r28{0} - 8 to local table
in proc proc5 adding addrExp r28{0} - 16 to local table
in proc proc5 adding addrExp r28{0} - 16 to local table
finding final parameters for proc5
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0}]
found new parameter m[r28{0}]
after removing matching assigns (%pc).
in proc proc10 adding addrExp r28{0} - 4 to local table
finding final parameters for proc10
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc11 ###
in proc proc11 adding addrExp r28{0} - 4 to local table
in proc proc11 adding addrExp r28{0} - 8 to local table
in proc proc11 adding addrExp r28{0} - 12 to local table
in proc proc11 adding addrExp r28{0} - 8 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffff8 existing type /*signed?*/int but added type unsigned char *
in proc proc11 adding addrExp r28{0} - 12 to local table
in proc proc11 adding addrExp r28{0} - 12 to local table
in proc proc11 adding addrExp r28{0} - 12 to local table
in proc proc11 adding addrExp r28{0} - 12 to local table
in proc proc11 adding addrExp r28{0} - 12 to local table
finding final parameters for proc11
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
assgn   47 *32* %pc := m[0x3e2000]
is readonly
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
in proc proc6 adding addrExp r28{0} - 4 to local table
in proc proc6 adding addrExp r28{0} - 8 to local table
in proc proc6 adding addrExp r28{0} - 8 to local table
in proc proc6 adding addrExp r28{0} - 12 to local table
in proc proc6 adding addrExp r28{0} - 12 to local table
in proc proc6 adding addrExp r28{0} - 16 to local table
in proc proc6 adding addrExp r28{0} - 20 to local table
in proc proc6 adding addrExp r28{0} - 20 to local table
in proc proc6 adding addrExp r28{0} - 24 to local table
in proc proc6 adding addrExp r28{0} - 12 to local table
in proc proc6 adding addrExp r28{0} - 16 to local table
in proc proc6 adding addrExp r28{0} - 20 to local table
in proc proc6 adding addrExp r28{0} - 24 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffe8 existing type unsigned int but added type unsigned char *
in proc proc6 adding addrExp r28{0} - 24 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffe8 existing type unsigned int but added type unsigned char *
in proc proc6 adding addrExp r28{0} - 28 to local table
finding final parameters for proc6
potential param r28
found new parameter r28
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc7 ###
in proc proc7 adding addrExp r28{0} - 24 to local table
in proc proc7 adding addrExp r28{0} - 28 to local table
in proc proc7 adding addrExp r28{0} - 32 to local table
in proc proc7 adding addrExp r28{0} - 36 to local table
in proc proc7 adding addrExp r28{0} - 40 to local table
in proc proc7 adding addrExp r28{0} - 44 to local table
in proc proc7 adding addrExp r28{0} - 52 to local table
in proc proc7 adding addrExp r28{0} - 56 to local table
in proc proc7 adding addrExp r28{0} - 60 to local table
in proc proc7 adding addrExp r28{0} - 4 to local table
in proc proc7 adding addrExp r28{0} - 48 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 20 to local table
in proc proc7 adding addrExp r28{0} - 20 to local table
in proc proc7 adding addrExp r28{0} - 20 to local table
in proc proc7 adding addrExp r28{0} - 24 to local table
in proc proc7 adding addrExp r28{0} - 28 to local table
in proc proc7 adding addrExp r28{0} - 32 to local table
in proc proc7 adding addrExp r28{0} - 36 to local table
in proc proc7 adding addrExp r28{0} - 40 to local table
in proc proc7 adding addrExp r28{0} - 44 to local table
in proc proc7 adding addrExp r28{0} - 48 to local table
in proc proc7 adding addrExp r28{0} - 52 to local table
in proc proc7 adding addrExp r28{0} - 56 to local table
in proc proc7 adding addrExp r28{0} - 60 to local table
in proc proc7 adding addrExp r28{0} - 48 to local table
in proc proc7 adding addrExp r28{0} - 48 to local table
in proc proc7 adding addrExp r28{0} - 40 to local table
in proc proc7 adding addrExp r28{0} - 24 to local table
in proc proc7 adding addrExp r28{0} - 44 to local table
in proc proc7 adding addrExp r28{0} - 48 to local table
in proc proc7 adding addrExp r28{0} - 44 to local table
in proc proc7 adding addrExp r28{0} - 44 to local table
in proc proc7 adding addrExp r28{0} - 48 to local table
in proc proc7 adding addrExp r28{0} - 48 to local table
in proc proc7 adding addrExp r28{0} - 28 to local table
in proc proc7 adding addrExp r28{0} - 48 to local table
in proc proc7 adding addrExp r28{0} - 32 to local table
in proc proc7 adding addrExp r28{0} - 36 to local table
in proc proc7 adding addrExp r28{0} - 48 to local table
in proc proc7 adding addrExp r28{0} - 52 to local table
in proc proc7 adding addrExp r28{0} - 52 to local table
in proc proc7 adding addrExp r28{0} - 56 to local table
in proc proc7 adding addrExp r28{0} - 56 to local table
in proc proc7 adding addrExp r28{0} - 60 to local table
finding final parameters for proc7
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r9
found new parameter r9
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc13 ###
in proc proc13 adding addrExp r28{0} - 4 to local table
finding final parameters for proc13
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
assgn   52 *32* %pc := m[0x3e2008]
is readonly
assgn  144 *32* %pc := m[0x3e2004]
is readonly
assgn  175 *32* %pc := m[0x3e2004]
is readonly
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc8 ###
in proc proc8 adding addrExp r28{0} - 16 to local table
in proc proc8 adding addrExp r28{0} - 20 to local table
in proc proc8 adding addrExp r28{0} - 24 to local table
in proc proc8 adding addrExp r28{0} - 28 to local table
in proc proc8 adding addrExp r28{0} - 32 to local table
in proc proc8 adding addrExp r28{0} - 36 to local table
in proc proc8 adding addrExp r28{0} - 40 to local table
in proc proc8 adding addrExp r28{0} - 48 to local table
in proc proc8 adding addrExp r28{0} - 52 to local table
in proc proc8 adding addrExp r28{0} to local table
in proc proc8 adding addrExp r28{0} - 4 to local table
in proc proc8 adding addrExp r28{0} - 12 to local table
in proc proc8 adding addrExp r28{0} - 44 to local table
in proc proc8 adding addrExp r28{0} - 44 to local table
in proc proc8 adding addrExp r28{0} - 8 to local table
in proc proc8 adding addrExp r28{0} - 8 to local table
in proc proc8 adding addrExp r28{0} - 16 to local table
in proc proc8 adding addrExp r28{0} - 20 to local table
in proc proc8 adding addrExp r28{0} - 24 to local table
in proc proc8 adding addrExp r28{0} - 28 to local table
in proc proc8 adding addrExp r28{0} - 32 to local table
in proc proc8 adding addrExp r28{0} - 36 to local table
in proc proc8 adding addrExp r28{0} - 40 to local table
in proc proc8 adding addrExp r28{0} - 44 to local table
in proc proc8 adding addrExp r28{0} - 48 to local table
in proc proc8 adding addrExp r28{0} - 52 to local table
in proc proc8 adding addrExp r28{0} - 16 to local table
in proc proc8 adding addrExp r28{0} - 20 to local table
in proc proc8 adding addrExp r28{0} - 32 to local table
in proc proc8 adding addrExp r28{0} - 44 to local table
in proc proc8 adding addrExp r28{0} - 44 to local table
in proc proc8 adding addrExp r28{0} - 48 to local table
in proc proc8 adding addrExp r28{0} - 28 to local table
in proc proc8 adding addrExp r28{0} - 44 to local table
in proc proc8 adding addrExp r28{0} - 44 to local table
in proc proc8 adding addrExp r28{0} - 16 to local table
in proc proc8 adding addrExp r28{0} - 16 to local table
in proc proc8 adding addrExp r28{0} - 16 to local table
in proc proc8 adding addrExp r28{0} - 44 to local table
in proc proc8 adding addrExp r28{0} - 24 to local table
in proc proc8 adding addrExp r28{0} - 16 to local table
in proc proc8 adding addrExp r28{0} - 20 to local table
in proc proc8 adding addrExp r28{0} - 24 to local table
in proc proc8 adding addrExp r28{0} - 36 to local table
in proc proc8 adding addrExp r28{0} - 40 to local table
in proc proc8 adding addrExp r28{0} - 44 to local table
in proc proc8 adding addrExp r28{0} - 48 to local table
in proc proc8 adding addrExp r28{0} - 52 to local table
in proc proc8 adding addrExp r28{0} - 44 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffd4 existing type union { union { /*signed?*/int x51; char x52; } x49; char x50; } * but added type union { unsigned int x47; void * x48; } *
in proc proc8 adding addrExp r28{0} - 44 to local table
in proc proc8 adding addrExp r28{0} - 48 to local table
in proc proc8 adding addrExp r28{0} - 48 to local table
in proc proc8 adding addrExp r28{0} - 48 to local table
in proc proc8 adding addrExp r28{0} - 52 to local table
in proc proc8 adding addrExp r28{0} - 44 to local table
in proc proc8 adding addrExp r28{0} - 36 to local table
in proc proc8 adding addrExp r28{0} - 44 to local table
in proc proc8 adding addrExp r28{0} - 48 to local table
in proc proc8 adding addrExp r28{0} - 52 to local table
in proc proc8 adding addrExp r28{0} - 20 to local table
in proc proc8 adding addrExp r28{0} - 44 to local table
in proc proc8 adding addrExp r28{0} - 44 to local table
in proc proc8 adding addrExp r28{0} - 40 to local table
in proc proc8 adding addrExp r28{0} - 44 to local table
in proc proc8 adding addrExp r28{0} - 48 to local table
in proc proc8 adding addrExp r28{0} - 52 to local table
in proc proc8 adding addrExp r28{0} - 20 to local table
in proc proc8 adding addrExp r28{0} - 20 to local table
in proc proc8 adding addrExp r28{0} - 36 to local table
in proc proc8 adding addrExp r28{0} - 40 to local table
in proc proc8 adding addrExp r28{0} - 44 to local table
in proc proc8 adding addrExp r28{0} - 48 to local table
in proc proc8 adding addrExp r28{0} - 52 to local table
in proc proc8 adding addrExp r28{0} - 44 to local table
in proc proc8 adding addrExp r28{0} - 44 to local table
in proc proc8 adding addrExp r28{0} - 24 to local table
in proc proc8 adding addrExp r28{0} - 16 to local table
in proc proc8 adding addrExp r28{0} - 44 to local table
in proc proc8 adding addrExp r28{0} - 8 to local table
in proc proc8 adding addrExp r28{0} - 44 to local table
finding final parameters for proc8
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} - 36]
found new parameter m[r28{0} - 36]
potential param m[r28{0} - 40]
found new parameter m[r28{0} - 40]
potential param m[r28{0} - 52]
found new parameter m[r28{0} - 52]
potential param m[r28{0}]
found new parameter m[r28{0}]
after removing matching assigns (%pc).
in proc proc12 adding addrExp r28{0} to local table
in proc proc12 adding addrExp r28{0} - 4 to local table
in proc proc12 adding addrExp r28{0} - 8 to local table
in proc proc12 adding addrExp r28{0} - 8 to local table
in proc proc12 adding addrExp r28{0} - 8 to local table
in proc proc12 adding addrExp r28{0} - 8 to local table
in proc proc12 adding addrExp r28{0} - 12 to local table
in proc proc12 adding addrExp r28{0} - 12 to local table
in proc proc12 adding addrExp r28{0} - 12 to local table
in proc proc12 adding addrExp r28{0} - 12 to local table
in proc proc12 adding addrExp r28{0} - 8 to local table
in proc proc12 adding addrExp r28{0} - 12 to local table
in proc proc12 adding addrExp r28{0} - 8 to local table
in proc proc12 adding addrExp r28{0} - 12 to local table
TYPE ERROR: Existing type at address 0xfffffff4 is not structure or array type
in proc proc12 adding addrExp r28{0} - 12 to local table
in proc proc12 adding addrExp r28{0} - 8 to local table
in proc proc12 adding addrExp r28{0} - 12 to local table
in proc proc12 adding addrExp r28{0} - 8 to local table
in proc proc12 adding addrExp r28{0} - 12 to local table
in proc proc12 adding addrExp r28{0} - 12 to local table
in proc proc12 adding addrExp r28{0} - 8 to local table
in proc proc12 adding addrExp r28{0} - 8 to local table
in proc proc12 adding addrExp r28{0} - 12 to local table
in proc proc12 adding addrExp r28{0} - 8 to local table
in proc proc12 adding addrExp r28{0} - 12 to local table
in proc proc12 adding addrExp r28{0} - 8 to local table
in proc proc12 adding addrExp r28{0} - 12 to local table
in proc proc12 adding addrExp r28{0} - 12 to local table
in proc proc12 adding addrExp r28{0} - 12 to local table
finding final parameters for proc12
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0}]
found new parameter m[r28{0}]
assgn   99 *32* %pc := m[0x3e2000]
is readonly
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc9 ###
in proc proc9 adding addrExp r28{0} - 4 to local table
in proc proc9 adding addrExp r28{0} - 36 to local table
in proc proc9 adding addrExp r28{0} - 16 to local table
in proc proc9 adding addrExp r28{0} - 12 to local table
in proc proc9 adding addrExp r28{0} - 8 to local table
in proc proc9 adding addrExp r28{0} - 20 to local table
finding final parameters for proc9
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
assgn   30 *32* tmp1 := m[0x4199b2]
assgn   34 *32* tmp1 := m[0x4199b6]
assgn   39 *32* tmp1 := m[0x4199be]
assgn   54 *32* %pc := m[0x3e201c]
is readonly
assgn   74 *32* %pc := m[0x3e201c]
is readonly
assgn   98 *32* %pc := m[0x3e2018]
is readonly
assgn  101 *32* r25 := m[0x3ed40b]
assgn  144 *32* %pc := m[0x3e2014]
is readonly
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc1 ###
in proc proc1 adding addrExp r28{0} - 24 to local table
in proc proc1 adding addrExp r28{0} - 40 to local table
in proc proc1 adding addrExp r28{0} - 60 to local table
in proc proc1 adding addrExp r28{0} - 64 to local table
in proc proc1 adding addrExp r28{0} - 68 to local table
in proc proc1 adding addrExp r28{0} - 72 to local table
in proc proc1 adding addrExp r28{0} - 76 to local table
in proc proc1 adding addrExp r28{0} - 80 to local table
in proc proc1 adding addrExp r28{0} - 84 to local table
in proc proc1 adding addrExp r28{0} - 88 to local table
in proc proc1 adding addrExp r28{0} - 92 to local table
in proc proc1 adding addrExp r28{0} - 96 to local table
in proc proc1 adding addrExp r28{0} - 100 to local table
in proc proc1 adding addrExp r28{0} - 104 to local table
in proc proc1 adding addrExp r28{0} - 108 to local table
in proc proc1 adding addrExp r28{0} - 112 to local table
in proc proc1 adding addrExp r28{0} - 116 to local table
in proc proc1 adding addrExp r28{0} - 120 to local table
in proc proc1 adding addrExp r28{0} - 124 to local table
in proc proc1 adding addrExp r28{0} - 4 to local table
in proc proc1 adding addrExp r28{0} - 56 to local table
in proc proc1 adding addrExp r28{0} - 8 to local table
in proc proc1 adding addrExp r28{0} - 56 to local table
in proc proc1 adding addrExp r28{0} - 56 to local table
in proc proc1 adding addrExp r28{0} - 28 to local table
in proc proc1 adding addrExp r28{0} - 56 to local table
in proc proc1 adding addrExp r28{0} - 60 to local table
in proc proc1 adding addrExp r28{0} - 64 to local table
in proc proc1 adding addrExp r28{0} - 68 to local table
in proc proc1 adding addrExp r28{0} - 72 to local table
in proc proc1 adding addrExp r28{0} - 72 to local table
in proc proc1 adding addrExp r28{0} - 76 to local table
in proc proc1 adding addrExp r28{0} - 80 to local table
in proc proc1 adding addrExp r28{0} - 84 to local table
in proc proc1 adding addrExp r28{0} - 88 to local table
in proc proc1 adding addrExp r28{0} - 88 to local table
in proc proc1 adding addrExp r28{0} - 92 to local table
in proc proc1 adding addrExp r28{0} - 96 to local table
in proc proc1 adding addrExp r28{0} - 100 to local table
in proc proc1 adding addrExp r28{0} - 104 to local table
in proc proc1 adding addrExp r28{0} - 108 to local table
in proc proc1 adding addrExp r28{0} - 112 to local table
in proc proc1 adding addrExp r28{0} - 40 to local table
in proc proc1 adding addrExp r28{0} - 112 to local table
in proc proc1 adding addrExp r28{0} - 116 to local table
in proc proc1 adding addrExp r28{0} - 120 to local table
in proc proc1 adding addrExp r28{0} - 124 to local table
in proc proc1 adding addrExp r28{0} - 108 to local table
in proc proc1 adding addrExp r28{0} - 112 to local table
in proc proc1 adding addrExp r28{0} - 108 to local table
in proc proc1 adding addrExp r28{0} - 112 to local table
in proc proc1 adding addrExp r28{0} - 108 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffff94 existing type /*signed?*/int but added type HANDLE
in proc proc1 adding addrExp r28{0} - 112 to local table
in proc proc1 adding addrExp r28{0} - 108 to local table
in proc proc1 adding addrExp r28{0} - 112 to local table
in proc proc1 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc1 adding addrExp r28{0} - 8 to local table
in proc proc1 adding addrExp r28{0} - 28 to local table
in proc proc1 adding addrExp r28{0} - 40 to local table
in proc proc1 adding addrExp r28{0} - 56 to local table
in proc proc1 adding addrExp r28{0} - 60 to local table
in proc proc1 adding addrExp r28{0} - 64 to local table
in proc proc1 adding addrExp r28{0} - 68 to local table
in proc proc1 adding addrExp r28{0} - 72 to local table
in proc proc1 adding addrExp r28{0} - 76 to local table
in proc proc1 adding addrExp r28{0} - 80 to local table
in proc proc1 adding addrExp r28{0} - 84 to local table
in proc proc1 adding addrExp r28{0} - 88 to local table
in proc proc1 adding addrExp r28{0} - 92 to local table
in proc proc1 adding addrExp r28{0} - 96 to local table
in proc proc1 adding addrExp r28{0} - 100 to local table
in proc proc1 adding addrExp r28{0} - 104 to local table
in proc proc1 adding addrExp r28{0} - 108 to local table
in proc proc1 adding addrExp r28{0} - 112 to local table
in proc proc1 adding addrExp r28{0} - 116 to local table
in proc proc1 adding addrExp r28{0} - 120 to local table
in proc proc1 adding addrExp r28{0} - 124 to local table
in proc proc1 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc1 adding addrExp r28{0} - 8 to local table
in proc proc1 adding addrExp r28{0} - 28 to local table
in proc proc1 adding addrExp r28{0} - 40 to local table
in proc proc1 adding addrExp r28{0} - 56 to local table
in proc proc1 adding addrExp r28{0} - 60 to local table
in proc proc1 adding addrExp r28{0} - 64 to local table
in proc proc1 adding addrExp r28{0} - 68 to local table
in proc proc1 adding addrExp r28{0} - 72 to local table
in proc proc1 adding addrExp r28{0} - 76 to local table
in proc proc1 adding addrExp r28{0} - 80 to local table
in proc proc1 adding addrExp r28{0} - 84 to local table
in proc proc1 adding addrExp r28{0} - 88 to local table
in proc proc1 adding addrExp r28{0} - 92 to local table
in proc proc1 adding addrExp r28{0} - 96 to local table
in proc proc1 adding addrExp r28{0} - 100 to local table
in proc proc1 adding addrExp r28{0} - 104 to local table
in proc proc1 adding addrExp r28{0} - 108 to local table
in proc proc1 adding addrExp r28{0} - 112 to local table
in proc proc1 adding addrExp r28{0} - 116 to local table
in proc proc1 adding addrExp r28{0} - 120 to local table
in proc proc1 adding addrExp r28{0} - 124 to local table
finding final parameters for proc1
potential param r28
found new parameter r28
potential param m[r28{0} - 24]
found new parameter m[r28{0} - 24]
potential param r1
found new parameter r1
potential param r2
found new parameter r2
potential param r8
found new parameter r8
potential param r9
found new parameter r9
assgn   19 *32* %pc := m[0x3e2020]
is readonly
after removing matching assigns (%pc).
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 4 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 12 to local table
finding final parameters for _start
potential param r28
found new parameter r28
potential param m[r28{0} - 36]
found new parameter m[r28{0} - 36]
potential param r1
found new parameter r1
potential param r2
found new parameter r2
potential param r8
found new parameter r8
potential param r9
found new parameter r9
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc1 ###
in proc proc1 adding addrExp r28{0} - 24 to local table
in proc proc1 adding addrExp r28{0} - 56 to local table
in proc _start adding addrExp r28{0} - 36 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc3 ###
in proc proc3 adding addrExp r28{0} - 16 to local table
in proc proc3 adding addrExp r28{0} - 16 to local table
in proc proc3 adding addrExp r28{0} - 16 to local table
in proc proc4 adding addrExp r28{0} - 8 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffff8 existing type /*signed?*/int but added type HANDLE
in proc proc4 adding addrExp r28{0} - 8 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffff8 existing type /*signed?*/int but added type HANDLE
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc5 ###
in proc proc5 adding addrExp r28{0} to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc7 ###
in proc proc7 adding addrExp r28{0} - 20 to local table
in proc proc7 adding addrExp r28{0} - 20 to local table
in proc proc7 adding addrExp r28{0} - 20 to local table
in proc proc7 adding addrExp r28{0} - 48 to local table
in proc proc7 adding addrExp r28{0} - 44 to local table
in proc proc7 adding addrExp r28{0} - 44 to local table
in proc proc7 adding addrExp r28{0} - 44 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc8 ###
in proc proc8 adding addrExp r28{0} - 36 to local table
in proc proc8 adding addrExp r28{0} - 40 to local table
in proc proc8 adding addrExp r28{0} - 52 to local table
in proc proc8 adding addrExp r28{0} to local table
in proc proc8 adding addrExp r28{0} - 8 to local table
in proc proc8 adding addrExp r28{0} - 8 to local table
in proc proc8 adding addrExp r28{0} - 36 to local table
in proc proc8 adding addrExp r28{0} - 40 to local table
in proc proc8 adding addrExp r28{0} - 52 to local table
in proc proc8 adding addrExp r28{0} - 16 to local table
in proc proc8 adding addrExp r28{0} - 16 to local table
in proc proc8 adding addrExp r28{0} - 16 to local table
in proc proc8 adding addrExp r28{0} - 24 to local table
in proc proc8 adding addrExp r28{0} - 16 to local table
in proc proc8 adding addrExp r28{0} - 24 to local table
in proc proc8 adding addrExp r28{0} - 36 to local table
in proc proc8 adding addrExp r28{0} - 40 to local table
in proc proc8 adding addrExp r28{0} - 52 to local table
in proc proc8 adding addrExp r28{0} - 48 to local table
in proc proc8 adding addrExp r28{0} - 44 to local table
in proc proc8 adding addrExp r28{0} - 36 to local table
in proc proc8 adding addrExp r28{0} - 20 to local table
in proc proc8 adding addrExp r28{0} - 40 to local table
in proc proc8 adding addrExp r28{0} - 20 to local table
in proc proc8 adding addrExp r28{0} - 20 to local table
in proc proc8 adding addrExp r28{0} - 36 to local table
in proc proc8 adding addrExp r28{0} - 40 to local table
in proc proc8 adding addrExp r28{0} - 52 to local table
in proc proc8 adding addrExp r28{0} - 24 to local table
in proc proc8 adding addrExp r28{0} - 16 to local table
in proc proc8 adding addrExp r28{0} - 8 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc9 ###
in proc proc12 adding addrExp r28{0} to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc13 ###
finding final parameters for proc1
potential param r28
found new parameter r28
potential param m[r28{0} - 24]
found new parameter m[r28{0} - 24]
finding final parameters for _start
potential param r28
found new parameter r28
potential param m[r28{0} - 36]
found new parameter m[r28{0} - 36]
finding final parameters for proc3
potential param r28
found new parameter r28
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for proc1
potential param r28
found new parameter r28
potential param m[r28{0} - 24]
found new parameter m[r28{0} - 24]
finding final parameters for proc4
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for proc1
potential param r28
found new parameter r28
potential param m[r28{0} - 24]
found new parameter m[r28{0} - 24]
finding final parameters for proc5
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0}]
found new parameter m[r28{0}]
finding final parameters for proc1
potential param r28
found new parameter r28
potential param m[r28{0} - 24]
found new parameter m[r28{0} - 24]
finding final parameters for proc6
potential param r28
found new parameter r28
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
finding final parameters for proc1
potential param r28
found new parameter r28
potential param m[r28{0} - 24]
found new parameter m[r28{0} - 24]
finding final parameters for proc7
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r9
found new parameter r9
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
finding final parameters for proc1
potential param r28
found new parameter r28
potential param m[r28{0} - 24]
found new parameter m[r28{0} - 24]
finding final parameters for proc8
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} - 36]
found new parameter m[r28{0} - 36]
potential param m[r28{0} - 40]
found new parameter m[r28{0} - 40]
potential param m[r28{0} - 52]
found new parameter m[r28{0} - 52]
potential param m[r28{0}]
found new parameter m[r28{0}]
finding final parameters for proc1
potential param r28
found new parameter r28
potential param m[r28{0} - 24]
found new parameter m[r28{0} - 24]
finding final parameters for proc9
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for proc1
potential param r28
found new parameter r28
potential param m[r28{0} - 24]
found new parameter m[r28{0} - 24]
finding final parameters for proc11
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
finding final parameters for proc6
potential param r28
found new parameter r28
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
finding final parameters for proc7
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r9
found new parameter r9
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
finding final parameters for proc12
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0}]
found new parameter m[r28{0}]
finding final parameters for proc9
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for proc13
finding final parameters for proc8
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} - 36]
found new parameter m[r28{0} - 36]
potential param m[r28{0} - 40]
found new parameter m[r28{0} - 40]
potential param m[r28{0} - 52]
found new parameter m[r28{0} - 52]
potential param m[r28{0}]
found new parameter m[r28{0}]
local eax has type __size32 that doesn't agree with type of define unsigned int of a library, why?
local edx has type HANDLE that doesn't agree with type of define __size32 of a library, why?
local esp_1 has type union { void * x58; /*signed?*/int x59; } that doesn't agree with type of define void * of a library, why?
local eax has type unsigned int that doesn't agree with type of define __size32 of a library, why?
local ecx has type __size32 that doesn't agree with type of define void of a library, why?
local edx has type __size32 that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local ecx has type unsigned int that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local ecx has type void that doesn't agree with type of define __size32 of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local ecx has type /*signed?*/int * that doesn't agree with type of define void of a library, why?
local edx has type __size32 * that doesn't agree with type of define void of a library, why?
local esp has type __size32 * that doesn't agree with type of define void of a library, why?
local ecx has type void that doesn't agree with type of define __size32 of a library, why?
local edx has type void that doesn't agree with type of define __size32 of a library, why?
local eax has type /*signed?*/int that doesn't agree with type of define __size32 of a library, why?
local ecx has type int that doesn't agree with type of define void of a library, why?
local esp_1 has type union { void * x54; /*signed?*/int x55; } that doesn't agree with type of define void * of a library, why?
dest is not lib
call:   10 {*32* eax_1, *v* esp} := CALL proc2(
              )
              Reaching definitions: r1=r1{0},   r2=r2{0},   r8=r8{0},   r9=r9{0},   r28=r28{0} - 56,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 24]=m[r28{0} - 24]{0},   m[r28{0} - 40]=m[r28{0} - 40]{0},
                m[r28{0} - 56]=%pc,   m[r28{0} - 60]=m[r28{0} - 60]{0},   m[r28{0} - 64]=m[r28{0} - 64]{0},
                m[r28{0} - 68]=m[r28{0} - 68]{0},   m[r28{0} - 72]=m[r28{0} - 72]{0},
                m[r28{0} - 76]=m[r28{0} - 76]{0},   m[r28{0} - 80]=m[r28{0} - 80]{0},
                m[r28{0} - 84]=m[r28{0} - 84]{0},   m[r28{0} - 88]=m[r28{0} - 88]{0},
                m[r28{0} - 92]=m[r28{0} - 92]{0},   m[r28{0} - 96]=m[r28{0} - 96]{0},
                m[r28{0} - 100]=m[r28{0} - 100]{0},   m[r28{0} - 104]=m[r28{0} - 104]{0},
                m[r28{0} - 108]=m[r28{0} - 108]{0},   m[r28{0} - 112]=m[r28{0} - 112]{0},
                m[r28{0} - 116]=m[r28{0} - 116]{0},   m[r28{0} - 120]=m[r28{0} - 120]{0},
                m[r28{0} - 124]=m[r28{0} - 124]{0},   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 48, r28{0} - 52 ),   %ZF=(r28{0} - 52) = 0,   %CF=(r28{0} - 4) <u 48
              Live variables: eax_1 in proc proc1
result:    0 *32* eax_1 := -
dest is not lib
call:   55 {*u32* eax, *32* ecx, *32* edx, *v** esp_1} := CALL CreatePipe(
              )
              Reaching definitions: r1=r1{0},   r2=r2{0},   r8=r8{0},   r9=r9{0},   r24=r24{22},   r25=r28{0} - 20,
                r26=r28{0} - 36,   r28=r28{0} - 72,   r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{10},
                m[r28{0} - 24]=m[r28{0} - 24]{0},   m[r28{0} - 28]=m[r28{0} - 56]{16},
                m[r28{0} - 40]=m[r28{0} - 40]{0},   m[r28{0} - 56]=16,   m[r28{0} - 60]=0,   m[r28{0} - 64]=r28{0} - 20
                m[r28{0} - 68]=r28{0} - 36,   m[r28{0} - 72]=%pc,   m[r28{0} - 76]=m[r28{0} - 76]{0},
                m[r28{0} - 80]=m[r28{0} - 80]{0},   m[r28{0} - 84]=m[r28{0} - 84]{0},
                m[r28{0} - 88]=m[r28{0} - 88]{0},   m[r28{0} - 92]=m[r28{0} - 92]{0},
                m[r28{0} - 96]=m[r28{0} - 96]{0},   m[r28{0} - 100]=m[r28{0} - 100]{0},
                m[r28{0} - 104]=m[r28{0} - 104]{0},   m[r28{0} - 108]=m[r28{0} - 108]{0},
                m[r28{0} - 112]=m[r28{0} - 112]{0},   m[r28{0} - 116]=m[r28{0} - 116]{0},
                m[r28{0} - 120]=m[r28{0} - 120]{0},   m[r28{0} - 124]=m[r28{0} - 124]{0},   tmp1=global42,
                %flags=ADDFLAGS32( global42, 0x17fa, m[0x4199be] ),   %ZF=ADDFLAGS32( global42, 0x17fa, m[0x4199be] ),
                %CF=ADDFLAGS32( global42, 0x17fa, m[0x4199be] )
              Live variables: eax,  esp_1 in proc proc1
result:    0 *u32* eax := -
result:    0 *v** esp_1 := -
dest is not lib
call:   75 {*u32* eax, *32* ecx, *32* edx, *v** esp_1} := CALL CreatePipe(
              )
              Reaching definitions: r1=r1{0},   r2=r2{0},   r8=r8{0},   r9=r9{0},   r24=r28{0} - 32,   r25=r28{0} - 24,
                r26=r26{55},   r28=r28{0} - 88,   r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{10},
                m[r28{0} - 24]=m[r28{0} - 24]{0},   m[r28{0} - 28]=m[r28{0} - 56]{16},
                m[r28{0} - 40]=m[r28{0} - 40]{0},   m[r28{0} - 56]=16,   m[r28{0} - 60]=0,   m[r28{0} - 64]=r28{0} - 20
                m[r28{0} - 68]=r28{0} - 36,   m[r28{0} - 72]=16,   m[r28{0} - 76]=0,   m[r28{0} - 80]=r28{0} - 32,
                m[r28{0} - 84]=r28{0} - 24,   m[r28{0} - 88]=%pc,   m[r28{0} - 92]=m[r28{0} - 92]{0},
                m[r28{0} - 96]=m[r28{0} - 96]{0},   m[r28{0} - 100]=m[r28{0} - 100]{0},
                m[r28{0} - 104]=m[r28{0} - 104]{0},   m[r28{0} - 108]=m[r28{0} - 108]{0},
                m[r28{0} - 112]=m[r28{0} - 112]{0},   m[r28{0} - 116]=m[r28{0} - 116]{0},
                m[r28{0} - 120]=m[r28{0} - 120]{0},   m[r28{0} - 124]=m[r28{0} - 124]{0},   tmp1=r24{55},
                %flags=LOGICALFLAGS32( r24{55} ),   %ZF=LOGICALFLAGS32( r24{55} ),   %CF=LOGICALFLAGS32( r24{55} )
              Live variables: eax,  esp_1 in proc proc1
result:    0 *u32* eax := -
result:    0 *v** esp_1 := -
dest is not lib
call:   99 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL CreateThread(
              )
              Reaching definitions: r1=r1{0},   r2=r2{0},   r8=r8{0},   r9=r9{0},   r24=r28{0} - 36,   r25=r25{75},
                r26=r28{0} - 12,   r28=r28{0} - 112,   r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{10},
                m[r28{0} - 24]=m[r28{0} - 24]{0},   m[r28{0} - 28]=m[r28{0} - 56]{16},
                m[r28{0} - 40]=m[r28{0} - 40]{0},   m[r28{0} - 56]=16,   m[r28{0} - 60]=0,   m[r28{0} - 64]=r28{0} - 20
                m[r28{0} - 68]=r28{0} - 36,   m[r28{0} - 72]=16,   m[r28{0} - 76]=0,   m[r28{0} - 80]=r28{0} - 32,
                m[r28{0} - 84]=r28{0} - 24,   m[r28{0} - 88]=r28{0} - 12,   m[r28{0} - 92]=0,
                m[r28{0} - 96]=r28{0} - 36,   m[r28{0} - 100]=0x3e1207,   m[r28{0} - 104]=0,   m[r28{0} - 108]=0,
                m[r28{0} - 112]=%pc,   m[r28{0} - 116]=m[r28{0} - 116]{0},   m[r28{0} - 120]=m[r28{0} - 120]{0},
                m[r28{0} - 124]=m[r28{0} - 124]{0},   tmp1=r24{75},   %flags=LOGICALFLAGS32( r24{75} ),
                %ZF=LOGICALFLAGS32( r24{75} ),   %CF=LOGICALFLAGS32( r24{75} )
              Live variables: eax in proc proc1
result:    0 *32* eax := -
dest is not lib
call:  115 {*32* eax, *32* ecx, *32* edx, *v* esp, *v** ebp_1} := CALL proc3(
                *32** local1 := a[param1]
                *32* local2 := 0x3e3000
                *u32* local3 := global46 / 4
              )
              Reaching definitions: r1=r1{0},   r2=r2{0},   r8=r8{0},   r9=r9{0},   r24=r24{99},   r25=global46 / 4,
                r26=r28{0} - 24,   r28=r28{0} - 124,   r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{10},
                m[r28{0} - 24]=m[r28{0} - 24]{0},   m[r28{0} - 28]=m[r28{0} - 56]{16},   m[r28{0} - 40]=r24{99},
                m[r28{0} - 56]=16,   m[r28{0} - 60]=0,   m[r28{0} - 64]=r28{0} - 20,   m[r28{0} - 68]=r28{0} - 36,
                m[r28{0} - 72]=16,   m[r28{0} - 76]=0,   m[r28{0} - 80]=r28{0} - 32,   m[r28{0} - 84]=r28{0} - 24,
                m[r28{0} - 88]=r28{0} - 12,   m[r28{0} - 92]=0,   m[r28{0} - 96]=r28{0} - 36,
                m[r28{0} - 100]=0x3e1207,   m[r28{0} - 104]=0,   m[r28{0} - 108]=0,   m[r28{0} - 112]=global46 / 4,
                m[r28{0} - 116]=0x3e3000,   m[r28{0} - 120]=r28{0} - 24,   m[r28{0} - 124]=%pc,   tmp1=global46,
                %flags=SHRFLAGS32( global46 / 4, global46, 2 ),   %ZF=SHRFLAGS32( global46 / 4, global46, 2 ),
                %CF=SHRFLAGS32( global46 / 4, global46, 2 )
              Live variables: ebp_1 in proc proc1
result:    0 *v** ebp_1 := -
dest is not lib
call:  125 {*32* eax, *32* ecx, *v* edx, *v* esp} := CALL proc4(
                *32** local4 := ebp_1 - 20
              )
              Reaching definitions: r1=r1{0},   r2=r2{0},   r8=r8{0},   r9=r9{0},   r24=r29{115} - 20,   r25=r25{115},
                r26=r26{115},   r28=r28{0} - 112,   r29=r29{115},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{10},
                m[r28{0} - 24]=m[r28{0} - 24]{0},   m[r28{0} - 28]=m[r28{0} - 56]{16},   m[r28{0} - 40]=r24{99},
                m[r28{0} - 56]=16,   m[r28{0} - 60]=0,   m[r28{0} - 64]=r28{0} - 20,   m[r28{0} - 68]=r28{0} - 36,
                m[r28{0} - 72]=16,   m[r28{0} - 76]=0,   m[r28{0} - 80]=r28{0} - 32,   m[r28{0} - 84]=r28{0} - 24,
                m[r28{0} - 88]=r28{0} - 12,   m[r28{0} - 92]=0,   m[r28{0} - 96]=r28{0} - 36,
                m[r28{0} - 100]=0x3e1207,   m[r28{0} - 104]=0,   m[r28{0} - 108]=r29{115} - 20,   m[r28{0} - 112]=%pc,
                m[r28{0} - 116]=0x3e3000,   m[r28{0} - 120]=r28{0} - 24,   m[r28{0} - 124]=%pc,
                tmp1=(r28{0} - 124) + 8,   %flags=ADDFLAGS32( r28{0} - 116, 12, r28{0} - 104 ),
                %ZF=ADDFLAGS32( r28{0} - 116, 12, r28{0} - 104 ),   %CF=ADDFLAGS32( r28{0} - 116, 12, r28{0} - 104 )
              Live variables:  in proc proc1
dest is not lib
call:  135 {*32* eax, *32* ecx, *v* edx, *v* esp} := CALL proc4(
                *32** local4 := ebp_1 - 32
              )
              Reaching definitions: r1=r1{0},   r2=r2{0},   r8=r8{0},   r9=r9{0},   r24=r24{125},   r25=r29{115} - 32,
                r26=r26{125},   r28=r28{0} - 112,   r29=r29{115},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{10},
                m[r28{0} - 24]=m[r28{0} - 24]{0},   m[r28{0} - 28]=m[r28{0} - 56]{16},   m[r28{0} - 40]=r24{99},
                m[r28{0} - 56]=16,   m[r28{0} - 60]=0,   m[r28{0} - 64]=r28{0} - 20,   m[r28{0} - 68]=r28{0} - 36,
                m[r28{0} - 72]=16,   m[r28{0} - 76]=0,   m[r28{0} - 80]=r28{0} - 32,   m[r28{0} - 84]=r28{0} - 24,
                m[r28{0} - 88]=r28{0} - 12,   m[r28{0} - 92]=0,   m[r28{0} - 96]=r28{0} - 36,
                m[r28{0} - 100]=0x3e1207,   m[r28{0} - 104]=0,   m[r28{0} - 108]=r29{115} - 32,   m[r28{0} - 112]=%pc,
                m[r28{0} - 116]=0x3e3000,   m[r28{0} - 120]=r28{0} - 24,   m[r28{0} - 124]=%pc,
                tmp1=(r28{0} - 112) + 4,   %flags=ADDFLAGS32( r28{0} - 108, 4, r28{0} - 104 ),
                %ZF=ADDFLAGS32( r28{0} - 108, 4, r28{0} - 104 ),   %CF=ADDFLAGS32( r28{0} - 108, 4, r28{0} - 104 )
              Live variables:  in proc proc1
dest is not lib
call:  145 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL CloseHandle(
                *HANDLE* local4 := edx
              )
              Reaching definitions: r1=r1{0},   r2=r2{0},   r8=r8{0},   r9=r9{0},   r24=r24{135},   r25=r25{135},
                r26=r26{139},   r28=r28{0} - 112,   r29=r29{115},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{10},
                m[r28{0} - 24]=m[r28{0} - 24]{0},   m[r28{0} - 28]=m[r28{0} - 56]{16},   m[r28{0} - 40]=r24{99},
                m[r28{0} - 56]=16,   m[r28{0} - 60]=0,   m[r28{0} - 64]=r28{0} - 20,   m[r28{0} - 68]=r28{0} - 36,
                m[r28{0} - 72]=16,   m[r28{0} - 76]=0,   m[r28{0} - 80]=r28{0} - 32,   m[r28{0} - 84]=r28{0} - 24,
                m[r28{0} - 88]=r28{0} - 12,   m[r28{0} - 92]=0,   m[r28{0} - 96]=r28{0} - 36,
                m[r28{0} - 100]=0x3e1207,   m[r28{0} - 104]=0,   m[r28{0} - 108]=r26{139},   m[r28{0} - 112]=%pc,
                m[r28{0} - 116]=0x3e3000,   m[r28{0} - 120]=r28{0} - 24,   m[r28{0} - 124]=%pc,
                tmp1=(r28{0} - 112) + 4,   %flags=ADDFLAGS32( r28{0} - 108, 4, r28{0} - 104 ),
                %ZF=ADDFLAGS32( r28{0} - 108, 4, r28{0} - 104 ),   %CF=ADDFLAGS32( r28{0} - 108, 4, r28{0} - 104 )
              Live variables:  in proc proc1
dest is not lib
call:  151 {*32* eax, *32* ecx, *32* edx, *32** esp_2, *v** ebp_2} := CALL proc5(
                *32* local4 := 0x3e3000
              )
              Reaching definitions: r1=r1{0},   r2=r2{0},   r8=r8{0},   r9=r9{0},   r24=r24{145},   r25=r25{145},
                r26=r26{145},   r28=r28{0} - 112,   r29=r29{115},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{10},
                m[r28{0} - 24]=m[r28{0} - 24]{0},   m[r28{0} - 28]=m[r28{0} - 56]{16},   m[r28{0} - 40]=r24{99},
                m[r28{0} - 56]=16,   m[r28{0} - 60]=0,   m[r28{0} - 64]=r28{0} - 20,   m[r28{0} - 68]=r28{0} - 36,
                m[r28{0} - 72]=16,   m[r28{0} - 76]=0,   m[r28{0} - 80]=r28{0} - 32,   m[r28{0} - 84]=r28{0} - 24,
                m[r28{0} - 88]=r28{0} - 12,   m[r28{0} - 92]=0,   m[r28{0} - 96]=r28{0} - 36,
                m[r28{0} - 100]=0x3e1207,   m[r28{0} - 104]=0,   m[r28{0} - 108]=0x3e3000,   m[r28{0} - 112]=%pc,
                m[r28{0} - 116]=0x3e3000,   m[r28{0} - 120]=r28{0} - 24,   m[r28{0} - 124]=%pc,
                tmp1=(r28{0} - 112) + 4,   %flags=ADDFLAGS32( r28{0} - 108, 4, r28{0} - 104 ),
                %ZF=ADDFLAGS32( r28{0} - 108, 4, r28{0} - 104 ),   %CF=ADDFLAGS32( r28{0} - 108, 4, r28{0} - 104 )
              Live variables: eax,  ebp_2,  esp_2 in proc proc1
result:    0 *32* eax := -
result:    0 *32** esp_2 := -
result:    0 *v** ebp_2 := -
dest is not lib
call:  180 {*32* eax, *8* cl, *32* ecx, *32* edx, *v* esp} := CALL proc6(
                *u8** m[esp_2 - 8] := m[esp_2 - 8]
                *u8** m[esp_2 - 4] := m[esp_2 - 4]
                *32* m[esp_2] := m[esp_2]
              )
              Reaching definitions: r1=r1{0},   r2=r2{0},   r8=r8{0},   r9=r9{0},   r24=r24{168},   r25=r25{172},
                r26=r26{164},   r28=r28{151} - 12,   r29=r29{151},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{10},
                m[r28{0} - 24]=m[r28{0} - 24]{0},   m[r28{0} - 28]=m[r28{0} - 56]{16},   m[r28{0} - 40]=r24{99},
                m[r28{0} - 56]=16,   m[r28{0} - 60]=0,   m[r28{0} - 64]=r28{0} - 20,   m[r28{0} - 68]=r28{0} - 36,
                m[r28{0} - 72]=16,   m[r28{0} - 76]=0,   m[r28{0} - 80]=r28{0} - 32,   m[r28{0} - 84]=r28{0} - 24,
                m[r28{0} - 88]=r28{0} - 12,   m[r28{0} - 92]=0,   m[r28{0} - 96]=r28{0} - 36,
                m[r28{0} - 100]=0x3e1207,   m[r28{0} - 104]=0,   m[r28{0} - 108]=0x3e3000,   m[r28{0} - 112]=%pc,
                m[r28{0} - 116]=0x3e3000,   m[r28{0} - 120]=r28{0} - 24,   m[r28{0} - 124]=%pc,   tmp1=tmp1{156},
                %flags=SUBFLAGS32( m[r29{151} - 12], 0, tmp1{156} ),   %ZF=tmp1{156} = 0,   %CF=m[r29{151} - 12] <u 0
              Live variables: cl in proc proc1
result:    0 *8* cl := -
dest is not lib
call:  198 {*32* eax, *16* cx, *16* dx, *8* cl, *32* ecx, *v* edx, *v* esp} := CALL proc7(
                *u32* m[esp_2 - 8] := m[esp_2 - 8]
                *32* m[esp_2 - 4] := m[esp_2 - 4]
                *8* cl := cl
                *32* m[esp_2] := m[esp_2]
              )
              Reaching definitions: r1=r1{0},   r2=r2{0},   r8=r8{0},   r9=r9{180},   r24=r24{192},   r25=r25{180},
                r26=r26{186},   r28=r28{151} - 12,   r29=r29{151},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{10},
                m[r28{0} - 24]=m[r28{0} - 24]{0},   m[r28{0} - 28]=m[r28{0} - 56]{16},   m[r28{0} - 40]=r24{99},
                m[r28{0} - 56]=16,   m[r28{0} - 60]=0,   m[r28{0} - 64]=r28{0} - 20,   m[r28{0} - 68]=r28{0} - 36,
                m[r28{0} - 72]=16,   m[r28{0} - 76]=0,   m[r28{0} - 80]=r28{0} - 32,   m[r28{0} - 84]=r28{0} - 24,
                m[r28{0} - 88]=r28{0} - 12,   m[r28{0} - 92]=0,   m[r28{0} - 96]=r28{0} - 36,
                m[r28{0} - 100]=0x3e1207,   m[r28{0} - 104]=0,   m[r28{0} - 108]=0x3e3000,   m[r28{0} - 112]=%pc,
                m[r28{0} - 116]=0x3e3000,   m[r28{0} - 120]=r28{0} - 24,   m[r28{0} - 124]=%pc,
                tmp1=(r28{151} - 12) + 4,   %flags=ADDFLAGS32( r28{151} - 8, 12, r28{151} + 4 ),
                %ZF=ADDFLAGS32( r28{151} - 8, 12, r28{151} + 4 ),   %CF=ADDFLAGS32( r28{151} - 8, 12, r28{151} + 4 )
              Live variables: cl in proc proc1
result:    0 *8* cl := -
dest is not lib
call:  211 {*32* eax, *32* ecx, *32* edx, *union** esp_3, *v** ebp_3} := CALL proc5(
                *32* m[esp_2] := m[esp_2]
              )
              Reaching definitions: r1=r1{198},   r2=r2{198},   r8=r8{0},   r9=r9{198},   r24=r24{198},   r25=r25{204},
                r26=r26{198},   r28=r28{151} - 4,   r29=r29{151},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{10},
                m[r28{0} - 24]=m[r28{0} - 24]{0},   m[r28{0} - 28]=m[r28{0} - 56]{16},   m[r28{0} - 40]=r24{99},
                m[r28{0} - 56]=16,   m[r28{0} - 60]=0,   m[r28{0} - 64]=r28{0} - 20,   m[r28{0} - 68]=r28{0} - 36,
                m[r28{0} - 72]=16,   m[r28{0} - 76]=0,   m[r28{0} - 80]=r28{0} - 32,   m[r28{0} - 84]=r28{0} - 24,
                m[r28{0} - 88]=r28{0} - 12,   m[r28{0} - 92]=0,   m[r28{0} - 96]=r28{0} - 36,
                m[r28{0} - 100]=0x3e1207,   m[r28{0} - 104]=0,   m[r28{0} - 108]=0x3e3000,   m[r28{0} - 112]=%pc,
                m[r28{0} - 116]=0x3e3000,   m[r28{0} - 120]=r28{0} - 24,   m[r28{0} - 124]=%pc,
                tmp1=(r28{151} - 12) + 4,   %flags=ADDFLAGS32( r28{151} - 8, 12, r28{151} + 4 ),
                %ZF=ADDFLAGS32( r28{151} - 8, 12, r28{151} + 4 ),   %CF=ADDFLAGS32( r28{151} - 8, 12, r28{151} + 4 )
              Live variables: eax,  ebp_3,  esp_3 in proc proc1
result:    0 *32* eax := -
result:    0 *union** esp_3 := -
result:    0 *v** ebp_3 := -
dest is not lib
call:  228 {*32* eax, *16* dx, *8* al, *32* ecx, *32* edx, *v* esp, *v** ebp_4} := CALL proc8(
                *u32* m[esp_3 - 60] := m[esp_3 - 60]
                *union* m[esp_3 - 48] := m[esp_3 - 48]
                *u16* m[esp_3 - 44] := m[esp_3 - 44]
                *32* m[esp_3 - 4] := m[esp_3 - 4]
                *union* m[esp_3] := m[esp_3]
              )
              Reaching definitions: r1=r1{198},   r2=r2{198},   r8=r8{0},   r9=r9{198},   r24=r24{222},   r25=r25{211},
                r26=r26{219},   r28=r28{211} - 8,   r29=r29{211},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{10},
                m[r28{0} - 24]=m[r28{0} - 24]{0},   m[r28{0} - 28]=m[r28{0} - 56]{16},   m[r28{0} - 40]=r24{99},
                m[r28{0} - 56]=16,   m[r28{0} - 60]=0,   m[r28{0} - 64]=r28{0} - 20,   m[r28{0} - 68]=r28{0} - 36,
                m[r28{0} - 72]=16,   m[r28{0} - 76]=0,   m[r28{0} - 80]=r28{0} - 32,   m[r28{0} - 84]=r28{0} - 24,
                m[r28{0} - 88]=r28{0} - 12,   m[r28{0} - 92]=0,   m[r28{0} - 96]=r28{0} - 36,
                m[r28{0} - 100]=0x3e1207,   m[r28{0} - 104]=0,   m[r28{0} - 108]=0x3e3000,   m[r28{0} - 112]=%pc,
                m[r28{0} - 116]=0x3e3000,   m[r28{0} - 120]=r28{0} - 24,   m[r28{0} - 124]=%pc,   tmp1=tmp1{216},
                %flags=SUBFLAGS32( m[r29{211} - 40], 0, tmp1{216} ),   %ZF=tmp1{216} = 0,   %CF=m[r29{211} - 40] <u 0
              Live variables: al,  ebp_4 in proc proc1
result:    0 *8* al := -
result:    0 *v** ebp_4 := -
dest is not lib
call:  247 {*32* eax, *16* cx, *16* dx, *32* ecx, *v* edx, *32* esp_4, *v** ebp_5} := CALL proc9(
                *union* m[esp_3] := m[esp_3]
              )
              Reaching definitions: r1=r1{198},   r2=r2{228},   r8=r8{228},   r9=r9{198},   r24=r24{228},
                r25=r25{234},   r26=r26{240},   r28=r28{211} - 4,   r29=r29{228},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=r24{10},   m[r28{0} - 24]=m[r28{0} - 24]{0},   m[r28{0} - 28]=m[r28{0} - 56]{16},
                m[r28{0} - 40]=r24{99},   m[r28{0} - 56]=16,   m[r28{0} - 60]=0,   m[r28{0} - 64]=r28{0} - 20,
                m[r28{0} - 68]=r28{0} - 36,   m[r28{0} - 72]=16,   m[r28{0} - 76]=0,   m[r28{0} - 80]=r28{0} - 32,
                m[r28{0} - 84]=r28{0} - 24,   m[r28{0} - 88]=r28{0} - 12,   m[r28{0} - 92]=0,
                m[r28{0} - 96]=r28{0} - 36,   m[r28{0} - 100]=0x3e1207,   m[r28{0} - 104]=0,   m[r28{0} - 108]=0x3e3000
                m[r28{0} - 112]=%pc,   m[r28{0} - 116]=0x3e3000,   m[r28{0} - 120]=r28{0} - 24,   m[r28{0} - 124]=%pc,
                tmp1=(r28{211} - 8) + 8,   %flags=ADDFLAGS32( r28{211}, 8, r28{211} + 8 ),
                %ZF=ADDFLAGS32( r28{211}, 8, r28{211} + 8 ),   %CF=ADDFLAGS32( r28{211}, 8, r28{211} + 8 )
              Live variables: cx,  dx,  ebp_5,  esp_4 in proc proc1
result:    0 *16* cx := -
result:    0 *16* dx := -
result:    0 *32* esp_4 := -
result:    0 *v** ebp_5 := -
dest is not lib
call:  270 *union* esp_1 := CALL proc10(
              )
              Reaching definitions: r1=r1{282},   r2=r2{283},   r8=r8{284},   r9=r9{285},   r24=r24{286},
                r25=r25{287},   r26=r26{288},   r28=r28{289} - 4,   r29=r29{290},   m[r28{0} - 4]=m[r28{0} - 4]{308},
                m[r28{0} - 8]=m[r28{0} - 8]{309},   m[r28{0} - 24]=m[r28{0} - 24]{352},
                m[r28{0} - 28]=m[r28{0} - 28]{310},   m[r28{0} - 40]=m[r28{0} - 40]{311},
                m[r28{0} - 56]=m[r28{0} - 56]{312},   m[r28{0} - 60]=m[r28{0} - 60]{313},
                m[r28{0} - 64]=m[r28{0} - 64]{314},   m[r28{0} - 68]=m[r28{0} - 68]{315},
                m[r28{0} - 72]=m[r28{0} - 72]{316},   m[r28{0} - 76]=m[r28{0} - 76]{317},
                m[r28{0} - 80]=m[r28{0} - 80]{318},   m[r28{0} - 84]=m[r28{0} - 84]{319},
                m[r28{0} - 88]=m[r28{0} - 88]{320},   m[r28{0} - 92]=m[r28{0} - 92]{321},
                m[r28{0} - 96]=m[r28{0} - 96]{322},   m[r28{0} - 100]=m[r28{0} - 100]{323},
                m[r28{0} - 104]=m[r28{0} - 104]{324},   m[r28{0} - 108]=m[r28{0} - 108]{325},
                m[r28{0} - 112]=m[r28{0} - 112]{326},   m[r28{0} - 116]=m[r28{0} - 116]{327},
                m[r28{0} - 120]=m[r28{0} - 120]{328},   m[r28{0} - 124]=m[r28{0} - 124]{329},   tmp1=tmp1{291},
                %flags=%flags{292},   %ZF=%ZF{293},   %CF=%CF{294}
              Live variables: esp_1 in proc proc1
result:    0 *union* esp_1 := -
dest is not lib
call:    9 {*32* eax, *16* r1, *16* r2, *8* r8, *8* r9, *32* r25, *32* r26, *v** esp, *v** ebp} := CALL proc1(
                *32* local0 := param1
              )
              Reaching definitions: r1=r1{0},   r2=r2{0},   r8=r8{0},   r9=r9{0},   r25=r25{0},   r28=r28{0} - 12,
                r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r25{0},   m[r28{0} - 12]=%pc,
                m[r28{0} - 36]=m[r28{0} - 36]{0}
              Live variables: eax,  ebp,  esp in proc _start
result:    0 *32* eax := -
result:    0 *v** esp := -
result:    0 *v** ebp := -
dest is not lib
call:   20 {*32* eax, *v* r25, *v* r26, *v* esp} := CALL ExitProcess(
                *UINT* m[esp - 4] := m[esp - 4]
              )
              Reaching definitions: r1=r1{9},   r2=r2{9},   r8=r8{9},   r9=r9{9},   r24=r24{13},   r25=r25{9},
                r26=r26{9},   r28=r28{9} - 8,   r29=r29{9},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r25{0},
                m[r28{0} - 12]=%pc,   m[r28{0} - 36]=m[r28{0} - 36]{0}
              Live variables:  in proc _start
dest is not lib
call:   46 {*32* eax, *v* ecx, *v* r26, *v* esp} := CALL WriteFile(
                *HANDLE* m[esp_3 - 20] := m[esp_3 - 20]
                *LPCVOID* m[esp_3 - 16] := m[esp_3 - 16]
                *DWORD* m[esp_3 - 12] := m[esp_3 - 12]
                *LPDWORD* m[esp_3 - 8] := m[esp_3 - 8]
                *LPOVERLAPPED* m[esp_3 - 4] := m[esp_3 - 4]
              )
              Reaching definitions: r24=r24{35},   r25=r25{39},   r26=m[r28{0} + 8]{0} + (m[r28{0} - 16]{88} * 4),
                r28=r28{83} - 24,   r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},
                m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 16]=m[r28{0} - 16]{88},
                tmp1=r25{16} - m[r28{0} + 12]{0},
                %flags=SUBFLAGS32( r25{16}, m[(r28{0} - 4) + 16], r25{16} - m[r28{0} + 12]{0} ),
                %ZF=(r25{16} - m[r28{0} + 12]{0}) = 0,   %CF=r25{16} <u m[(r28{0} - 4) + 16]
              Live variables:  in proc proc3
dest is not lib
call:   69 {*32* eax, *32* ecx, *32* r26, *v** esp_2} := CALL ReadFile(
              )
              Reaching definitions: r24=m[r28{0} + 4]{0},   r25=r25{63},   r26=r25{57} + (m[r28{0} - 16]{88} * 4),
                r28=r28{83} - 24,   r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},
                m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 16]=m[r28{0} - 16]{88},
                tmp1=r25{16} - m[r28{0} + 12]{0},
                %flags=SUBFLAGS32( r25{16}, m[r28{0} + 12], r25{16} - m[r28{0} + 12]{0} ),
                %ZF=(r25{16} - m[r28{0} + 12]{0}) = 0,   %CF=r25{16} <u m[r28{0} + 12]
              Live variables: esp_2 in proc proc3
result:    0 *v** esp_2 := -
dest is not lib
call:   17 {*32* r24, *v* r25, *v* r26} := CALL CloseHandle(
                *HANDLE* local0 := local0
              )
              Reaching definitions: r24=m[r28{0} + 4]{0},   r25=m[r28{0} - 8]{8},   r28=r28{0} - 12,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{8},
                m[r28{0} - 12]=%pc
              Live variables:  in proc proc4
dest is not lib
call:   28 {*32* r24, *32* r25, *32* r26} := CALL CloseHandle(
                *HANDLE* local0 := local0
              )
              Reaching definitions: r24=m[r28{0} - 8]{19},   r25=r25{17},   r26=m[r28{0} + 4]{0},   r28=r28{0} - 12,
                r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 8]{19},   m[r28{0} - 12]=%pc
              Live variables:  in proc proc4
dest is not lib
call:   27 {*32* r24, *8* cl, *32* r25} := CALL proc11(
                *u8** local0 := param2
                *u8** local1 := param1
                *32* local2 := param3
              )
              Reaching definitions: r24=m[r28{0} + 12]{0},   r25=m[r28{0} + 4]{0},   r26=m[r28{0} + 8]{0},
                r28=r28{0} - 24,   r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},
                m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r25{0},
                m[r28{0} - 12]=m[r28{0} + 12]{0},   m[r28{0} - 16]=m[r28{0} + 4]{0},   m[r28{0} - 20]=m[r28{0} + 8]{0},
                m[r28{0} - 24]=%pc
              Live variables: cl in proc proc6
result:    0 *8* cl := -
dest is not lib
call:   48 {*32* r24, *32* r25, *32* r26} := CALL VirtualProtect(
              )
              Reaching definitions: r9=r9{27},   r24=(r28{0} - 4) - 4,   r25=m[r28{0} + 12]{0},   r26=m[r28{0} + 8]{0},
                r28=r28{0} - 28,   r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},
                m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r25{0},
                m[r28{0} - 12]=r28{0} - 8,   m[r28{0} - 16]=2,   m[r28{0} - 20]=m[r28{0} + 12]{0},
                m[r28{0} - 24]=m[r28{0} + 8]{0},   m[r28{0} - 28]=%pc,   tmp1=(r28{0} - 24) + 4,
                %flags=ADDFLAGS32( r28{0} - 20, 12, r28{0} - 8 ),   %ZF=ADDFLAGS32( r28{0} - 20, 12, r28{0} - 8 ),
                %CF=ADDFLAGS32( r28{0} - 20, 12, r28{0} - 8 )
              Live variables:  in proc proc6
dest is not lib
call:  130 {*u32* eax, *8* cl, *32* ecx} := CALL proc11(
                *u8** local3 := ecx_2
                *u8** local4 := ecx_1
                *u32* local1 := local2
              )
              Reaching definitions: r1=truncu(32,16,r25{93}),   r2=truncu(32,16,m[r28{0} - 44]{168}),   r9=r9{143},
                r24=r25{106},   r25=r25{93},   r26=m[r28{0} - 44]{168},   r28=(r28{0} - 44) - 16,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{20},   m[r28{0} - 12]=r2{17},
                m[r28{0} - 16]=m[r28{0} + 4]{0} + 248,   m[r28{0} - 20]=m[r28{0} - 20]{157},   m[r28{0} - 24]=r24{59},
                m[r28{0} - 28]=m[r28{0} - 44]{168},   m[r28{0} - 32]=r25{93},   m[r28{0} - 36]=r25{106},
                m[r28{0} - 40]=m[r28{0} - 48]{47},   m[r28{0} - 44]=m[r28{0} - 44]{168},
                m[r28{0} - 48]=m[r28{0} - 44]{168},   m[r28{0} - 52]=r25{106},   m[r28{0} - 56]=r25{93},
                m[r28{0} - 60]=%pc,   tmp1=m[r28{0} + 8]{0},   tmph=tmph{149},
                %flags=ADDFLAGS32( m[r28{0} + 8]{0}, m[((r26{97} *! 40) + r24{20}) + 20], r25{106} ),
                %ZF=ADDFLAGS32( m[r28{0} + 8]{0}, m[((r26{97} *! 40) + r24{20}) + 20], r25{106} ),
                %CF=ADDFLAGS32( m[r28{0} + 8]{0}, m[((r26{97} *! 40) + r24{20}) + 20], r25{106} )
              Live variables: cl in proc proc7
result:    0 *8* cl := -
dest is not lib
call:   53 {*HANDLE* eax_2, *v* ecx, *v* edx} := CALL LoadLibraryA(
                *LPCSTR* local5 := edx
              )
              Reaching definitions: r2=truncu(32,16,r26{39}),   r8=truncu(32,8,r26{39}),   r24=r26{39},
                r25=m[r28{0} - 8]{261},   r26=r26{39},   r28=(r28{0} - 40) - 8,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 8]{261},   m[r28{0} - 12]=m[r28{0} + 4]{0} + 128,   m[r28{0} - 16]=0,
                m[r28{0} - 20]=0,   m[r28{0} - 24]=m[r28{0} - 24]{264},   m[r28{0} - 28]=m[r28{0} - 28]{265},
                m[r28{0} - 32]=r26{39},   m[r28{0} - 36]=m[r28{0} - 36]{267},   m[r28{0} - 40]=m[r28{0} - 40]{268},
                m[r28{0} - 44]=r26{39},   m[r28{0} - 48]=%pc,   m[r28{0} - 52]=m[r28{0} - 52]{271},
                m[r28{0}]=m[r28{0}]{0},   tmp1=m[r28{0} + 8]{0},
                %flags=ADDFLAGS32( m[r28{0} + 8]{0}, m[m[r28{0} - 8]{261} + 12], r26{39} ),
                %ZF=ADDFLAGS32( m[r28{0} + 8]{0}, m[m[r28{0} - 8]{261} + 12], r26{39} ),
                %CF=ADDFLAGS32( m[r28{0} + 8]{0}, m[m[r28{0} - 8]{261} + 12], r26{39} )
              Live variables: eax_2 in proc proc8
result:    0 *HANDLE* eax_2 := -
dest is not lib
call:  116 *32* eax := CALL proc13(
              )
              Reaching definitions: r2=truncu(32,16,m[r28{0} - 48]{106}),   r8=truncu(32,8,r24{53}),   r24=r24{53},
                r25=m[r28{0} - 16]{274},   r26=m[r28{0} - 48]{106},   r28=(r28{0} - 40) - 12,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 8]{261},   m[r28{0} - 12]=m[r28{0} + 4]{0} + 128,
                m[r28{0} - 16]=m[r28{0} - 16]{274},   m[r28{0} - 20]=m[r28{0} - 20]{275},
                m[r28{0} - 24]=m[r28{0} - 24]{276},   m[r28{0} - 28]=r24{53},   m[r28{0} - 32]=r26{39},
                m[r28{0} - 36]=m[r28{0} - 36]{277},   m[r28{0} - 40]=m[r28{0} - 40]{278},   m[r28{0} - 44]=r24{53},
                m[r28{0} - 48]=m[r28{0} - 48]{106},   m[r28{0} - 52]=%pc,   m[r28{0}]=m[r28{0}]{0},   tmp1=tmp1{95},
                %flags=SUBFLAGS32( m[m[r28{0} - 16]{274}], 0, tmp1{95} ),   %ZF=tmp1{95} = 0,
                %CF=m[m[r28{0} - 16]{274}] <u 0
              Live variables:  in proc proc8
dest is not lib
call:  176 {*32** eax, *32* ecx, *32* edx} := CALL GetProcAddress(
                *HANDLE* local8 := eax_2
                *union* local5 := eax + 2
              )
              Reaching definitions: r2=truncu(32,16,r24{53}),   r8=truncu(32,8,r24{159}),   r24=r24{159},
                r25=r24{159} + 2,   r26=r24{53},   r28=(r28{0} - 40) - 12,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 8]{261},   m[r28{0} - 12]=m[r28{0} + 4]{0} + 128,
                m[r28{0} - 16]=m[r28{0} - 16]{274},   m[r28{0} - 20]=m[r28{0} - 20]{275},
                m[r28{0} - 24]=m[r28{0} - 24]{276},   m[r28{0} - 28]=r24{53},   m[r28{0} - 32]=r26{39},
                m[r28{0} - 36]=m[r28{0} - 36]{277},   m[r28{0} - 40]=r24{159},   m[r28{0} - 44]=r24{159} + 2,
                m[r28{0} - 48]=r24{53},   m[r28{0} - 52]=%pc,   m[r28{0}]=m[r28{0}]{0},   tmp1=r24{159},
                %flags=ADDFLAGS32( r24{159}, 2, r24{159} + 2 ),   %ZF=ADDFLAGS32( r24{159}, 2, r24{159} + 2 ),
                %CF=ADDFLAGS32( r24{159}, 2, r24{159} + 2 )
              Live variables: eax in proc proc8
result:    0 *32** eax := -
dest is not lib
call:  145 {*32** eax, *32* ecx, *32* edx} := CALL GetProcAddress(
                *HANDLE* local8 := eax_2
                *union* local5 := eax_1
              )
              Reaching definitions: r2=truncu(32,16,m[r28{0} - 44]{126} & 0xffff),   r8=truncu(32,8,r24{135}),
                r24=r24{135},   r25=r24{53},   r26=m[r28{0} - 44]{126} & 0xffff,   r28=(r28{0} - 40) - 12,
                r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{261},   m[r28{0} - 12]=m[r28{0} + 4]{0} + 128,
                m[r28{0} - 16]=m[r28{0} - 16]{274},   m[r28{0} - 20]=m[r28{0} - 20]{275},
                m[r28{0} - 24]=m[r28{0} - 24]{276},   m[r28{0} - 28]=r24{53},   m[r28{0} - 32]=r26{39},
                m[r28{0} - 36]=m[r28{0} - 36]{134},   m[r28{0} - 40]=m[r28{0} - 40]{278},   m[r28{0} - 44]=r24{135},
                m[r28{0} - 48]=r24{53},   m[r28{0} - 52]=%pc,   m[r28{0}]=m[r28{0}]{0},
                tmp1=zfill(8,32,truncu(32,8,r24{53})),   %flags=LOGICALFLAGS32( m[r28{0} - 44]{126} & 0xffff ),
                %ZF=LOGICALFLAGS32( m[r28{0} - 44]{126} & 0xffff ),
                %CF=LOGICALFLAGS32( m[r28{0} - 44]{126} & 0xffff )
              Live variables: eax in proc proc8
result:    0 *32** eax := -
dest is not lib
call:   84 {*32* eax, *32* ecx, *32* edx, *32** esp, *32** ebp} := CALL proc12(
                *j32* m[esp_1 - 8] := m[esp_1 - 8]
              )
              Reaching definitions: r1=truncu(32,16,r25{76}),   r2=truncu(32,16,r26{68} *! 40),   r24=r24{73},
                r25=r25{76},   r26=r26{68} *! 40,   r28=r28{113} - 12,   r29=r29{114},   m[r28{0} + 4]=m[r28{0} + 4]{0}
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{20},   m[r28{0} - 12]=r2{17},
                m[r28{0} - 16]=m[r28{0} + 4]{0} + 248,   m[r28{0} - 20]=0,   m[r28{0} - 36]=m[r28{0} + 4]{0},
                tmp1=r24{47},   tmph=tmph{116},   %flags=IMULTFLAGS32( r26{68} *! 40 ),
                %ZF=IMULTFLAGS32( r26{68} *! 40 ),   %CF=IMULTFLAGS32( r26{68} *! 40 )
              Live variables: eax,  ebp,  esp in proc proc9
result:    0 *32* eax := -
result:    0 *32** esp := -
result:    0 *32** ebp := -
dest is not lib
call:  100 {*32* eax, *v* ecx, *j32* edx, *v** esp_1} := CALL VirtualProtect(
              )
              Reaching definitions: r1=truncu(32,16,r25{76}),   r2=truncu(32,16,r26{90}),   r24=r24{94},   r25=r25{84},
                r26=r26{90},   r28=r28{84} - 12,   r29=r29{84},   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{20},   m[r28{0} - 12]=r2{17},
                m[r28{0} - 16]=m[r28{0} + 4]{0} + 248,   m[r28{0} - 20]=0,   m[r28{0} - 36]=m[r28{0} + 4]{0},
                tmp1=r28{84},   tmph=tmph{116},   %flags=ADDFLAGS32( r28{84}, 4, r28{84} + 4 ),
                %ZF=ADDFLAGS32( r28{84}, 4, r28{84} + 4 ),   %CF=ADDFLAGS32( r28{84}, 4, r28{84} + 4 )
              Live variables: esp_1 in proc proc9
result:    0 *v** esp_1 := -
