Unknown library function GetWindowsDirectoryA
Unknown library function CreateFileA
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc3 ###
in proc proc3 adding addrExp r28{0} - 56 to local table
in proc proc3 adding addrExp r28{0} - 60 to local table
in proc proc3 adding addrExp r28{0} - 64 to local table
in proc proc3 adding addrExp r28{0} - 68 to local table
in proc proc3 adding addrExp r28{0} - 72 to local table
in proc proc3 adding addrExp r28{0} - 4 to local table
in proc proc3 adding addrExp r28{0} - 16 to local table
in proc proc3 adding addrExp r28{0} - 20 to local table
in proc proc3 adding addrExp r28{0} - 24 to local table
in proc proc3 adding addrExp r28{0} - 28 to local table
in proc proc3 adding addrExp r28{0} - 32 to local table
in proc proc3 adding addrExp r28{0} - 36 to local table
in proc proc3 adding addrExp r28{0} - 40 to local table
in proc proc3 adding addrExp r28{0} - 44 to local table
in proc proc3 adding addrExp r28{0} - 48 to local table
in proc proc3 adding addrExp r28{0} - 52 to local table
in proc proc3 adding addrExp r28{0} - 8 to local table
in proc proc3 adding addrExp r28{0} - 52 to local table
in proc proc3 adding addrExp r28{0} - 56 to local table
in proc proc3 adding addrExp r28{0} - 60 to local table
in proc proc3 adding addrExp r28{0} - 64 to local table
in proc proc3 adding addrExp r28{0} - 68 to local table
in proc proc3 adding addrExp r28{0} - 72 to local table
in proc proc3 adding addrExp r28{0} - 52 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffcc existing type unsigned int but added type HANDLE
in proc proc3 adding addrExp r28{0} - 56 to local table
in proc proc3 adding addrExp r28{0} - 52 to local table
in proc proc3 adding addrExp r28{0} - 56 to local table
in proc proc3 adding addrExp r28{0} - 60 to local table
in proc proc3 adding addrExp r28{0} - 64 to local table
in proc proc3 adding addrExp r28{0} - 68 to local table
in proc proc3 adding addrExp r28{0} - 72 to local table
finding final parameters for proc3
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
after removing matching assigns (%pc).
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 20 to local table
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 32 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 4 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 20 to local table
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 20 to local table
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 20 to local table
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 32 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 20 to local table
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 32 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 40 to local table
finding final parameters for _start
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param r25
found new parameter r25
potential param r26
found new parameter r26
potential param r27
found new parameter r27
potential param r30
found new parameter r30
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc3 ###
finding final parameters for _start
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
finding final parameters for proc3
potential param r28
found new parameter r28
finding final parameters for _start
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
local esp has type union { LPDWORD x1; __size32 x2; } that doesn't agree with type of define void of a library, why?
local eax has type HANDLE that doesn't agree with type of define __size32 of a library, why?
local eax has type __size32 that doesn't agree with type of define void * of a library, why?
local esp has type __size32 that doesn't agree with type of define void of a library, why?
local esp has type void that doesn't agree with type of define __size32 of a library, why?
dest is not lib
call:   30 {*HANDLE* eax, *32* r25, *32* r26, *v* esp} := CALL CreateFileA(
              )
              Reaching definitions: r27=0,   r28=r28{0} - 52,   r29=r28{0} - 4,   r30=r30{0},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 16]=r27{0},
                m[r28{0} - 20]=r30{0},   m[r28{0} - 24]=0,   m[r28{0} - 28]=0,   m[r28{0} - 32]=2,   m[r28{0} - 36]=0,
                m[r28{0} - 40]=3,   m[r28{0} - 44]=0xc0000000,   m[r28{0} - 48]=m[r28{0} + 4]{0},   m[r28{0} - 52]=%pc,
                m[r28{0} - 56]=m[r28{0} - 56]{0},   m[r28{0} - 60]=m[r28{0} - 60]{0},
                m[r28{0} - 64]=m[r28{0} - 64]{0},   m[r28{0} - 68]=m[r28{0} - 68]{0},
                m[r28{0} - 72]=m[r28{0} - 72]{0},   tmp1=r28{0} - 4,   %flags=LOGICALFLAGS32( 0 ),
                %ZF=LOGICALFLAGS32( 0 ),   %CF=LOGICALFLAGS32( 0 )
              Live variables: eax in proc proc3
result:    0 *HANDLE* eax := -
dest is not lib
call:   56 {*32* eax, *v* r25, *v* r26, *v* esp} := CALL WriteFile(
                *HANDLE* local0 := eax
                *LPCVOID* local1 := esi
                *DWORD* local2 := global1
                *union* local3 := a[m[esp - 12]]
                *LPOVERLAPPED* local4 := 0
              )
              Reaching definitions: r24=r28{0} - 12,   r25=r25{30},   r26=global1,   r27=0,   r28=r28{0} - 72,
                r29=r28{0} - 4,   r30=r30{38},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=r24{30},   m[r28{0} - 16]=r27{0},   m[r28{0} - 20]=r30{0},   m[r28{0} - 24]=0,
                m[r28{0} - 28]=0,   m[r28{0} - 32]=2,   m[r28{0} - 36]=0,   m[r28{0} - 40]=3,
                m[r28{0} - 44]=0xc0000000,   m[r28{0} - 48]=m[r28{0} + 4]{0},   m[r28{0} - 52]=0,
                m[r28{0} - 56]=r28{0} - 12,   m[r28{0} - 60]=global1,   m[r28{0} - 64]=r30{38},
                m[r28{0} - 68]=r24{30},   m[r28{0} - 72]=%pc,   tmp1=r26{30},   %flags=LOGICALFLAGS32( r24{30} + 1 ),
                %ZF=LOGICALFLAGS32( r24{30} + 1 ),   %CF=LOGICALFLAGS32( r24{30} + 1 )
              Live variables:  in proc proc3
dest is not lib
call:   62 {*v** eax, *32* r25, *32* r26, *v* esp} := CALL CloseHandle(
                *HANDLE* local5 := eax
              )
              Reaching definitions: r24=r24{56},   r25=r25{56},   r26=r26{56},   r27=0,   r28=r28{0} - 56,
                r29=r28{0} - 4,   r30=r30{38},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=r24{30},   m[r28{0} - 16]=r27{0},   m[r28{0} - 20]=r30{0},   m[r28{0} - 24]=0,
                m[r28{0} - 28]=0,   m[r28{0} - 32]=2,   m[r28{0} - 36]=0,   m[r28{0} - 40]=3,
                m[r28{0} - 44]=0xc0000000,   m[r28{0} - 48]=m[r28{0} + 4]{0},   m[r28{0} - 52]=r24{30},
                m[r28{0} - 56]=%pc,   m[r28{0} - 60]=global1,   m[r28{0} - 64]=r30{38},   m[r28{0} - 68]=r24{30},
                m[r28{0} - 72]=%pc,   tmp1=r26{30},   %flags=LOGICALFLAGS32( r24{30} + 1 ),
                %ZF=LOGICALFLAGS32( r24{30} + 1 ),   %CF=LOGICALFLAGS32( r24{30} + 1 )
              Live variables:  in proc proc3
dest is not lib
call:   14 {*32* eax, *v* r25, *v* r26} := CALL GetWindowsDirectoryA(
              )
              Reaching definitions: r24=r24{0},   r25=r25{0},   r26=r26{0},   r27=r27{0},   r28=r28{0} - 16,
                r29=r28{0} - 4,   r30=r30{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=0x400,   m[r28{0} - 12]=0x100011e0,   m[r28{0} - 16]=%pc,
                m[r28{0} - 20]=m[r28{0} - 20]{0},   m[r28{0} - 24]=m[r28{0} - 24]{0},
                m[r28{0} - 28]=m[r28{0} - 28]{0},   m[r28{0} - 32]=m[r28{0} - 32]{0},
                m[r28{0} - 36]=m[r28{0} - 36]{0},   m[r28{0} - 40]=m[r28{0} - 40]{0},   tmp1=m[r28{0} + 8]{0} - 1,
                %flags=SUBFLAGS32( m[(r28{0} - 4) + 12], 1, m[r28{0} + 8]{0} - 1 ),   %ZF=(m[r28{0} + 8]{0} - 1) = 0,
                %CF=m[(r28{0} - 4) + 12] <u 1
              Live variables:  in proc _start
dest is not lib
call:   22 {*32* eax, *v* r25, *v* r26} := CALL lstrcatA(
                *LPSTR* local0 := ""
                *LPSTR* local1 := "\cplstub.exe"
              )
              Reaching definitions: r24=r24{14},   r25=r25{14},   r26=r26{14},   r27=r27{0},   r28=r28{0} - 24,
                r29=r28{0} - 4,   r30=r30{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=0x400,   m[r28{0} - 12]=0x100011e0,   m[r28{0} - 16]=0x10001000,
                m[r28{0} - 20]=0x100011e0,   m[r28{0} - 24]=%pc,   m[r28{0} - 28]=m[r28{0} - 28]{0},
                m[r28{0} - 32]=m[r28{0} - 32]{0},   m[r28{0} - 36]=m[r28{0} - 36]{0},
                m[r28{0} - 40]=m[r28{0} - 40]{0},   tmp1=m[r28{0} + 8]{0} - 1,
                %flags=SUBFLAGS32( m[r28{0} + 8], 1, m[r28{0} + 8]{0} - 1 ),   %ZF=(m[r28{0} + 8]{0} - 1) = 0,
                %CF=m[r28{0} + 8] <u 1
              Live variables:  in proc _start
dest is not lib
call:   28 {*32* eax, *32* r30, *32* r25, *32* r26, *32* r27} := CALL proc3(
              )
              Reaching definitions: r24=r24{22},   r25=r25{22},   r26=r26{22},   r27=r27{0},   r28=r28{0} - 20,
                r29=r28{0} - 4,   r30=r30{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=0x400,   m[r28{0} - 12]=0x100011e0,   m[r28{0} - 16]=0x100011e0,   m[r28{0} - 20]=%pc,
                m[r28{0} - 24]=%pc,   m[r28{0} - 28]=m[r28{0} - 28]{0},   m[r28{0} - 32]=m[r28{0} - 32]{0},
                m[r28{0} - 36]=m[r28{0} - 36]{0},   m[r28{0} - 40]=m[r28{0} - 40]{0},   tmp1=m[r28{0} + 8]{0} - 1,
                %flags=SUBFLAGS32( m[r28{0} + 8], 1, m[r28{0} + 8]{0} - 1 ),   %ZF=(m[r28{0} + 8]{0} - 1) = 0,
                %CF=m[r28{0} + 8] <u 1
              Live variables: eax in proc _start
result:    0 *32* eax := -
dest is not lib
call:   47 {*32* eax, *32* r25, *32* r26} := CALL ShellExecuteA(
                *HWND* local2 := 0
                *LPCSTR* local3 := "open"
                *LPCSTR* local4 := ""
                *LPCSTR* local5 := 0
                *LPCSTR* local0 := 0
                *INT* local6 := 0
              )
              Reaching definitions: r24=r24{28},   r25=r25{28},   r26=r26{28},   r27=r27{28},   r28=r28{0} - 40,
                r29=r28{0} - 4,   r30=r30{28},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=0x400,   m[r28{0} - 12]=0x100011e0,   m[r28{0} - 16]=0,   m[r28{0} - 20]=0,
                m[r28{0} - 24]=0,   m[r28{0} - 28]=0x100011e0,   m[r28{0} - 32]=0x1000100d,   m[r28{0} - 36]=0,
                m[r28{0} - 40]=%pc,   tmp1=m[r28{0} + 8]{0} - 1,   %flags=LOGICALFLAGS32( r24{28} ),
                %ZF=LOGICALFLAGS32( r24{28} ),   %CF=LOGICALFLAGS32( r24{28} )
              Live variables:  in proc _start
