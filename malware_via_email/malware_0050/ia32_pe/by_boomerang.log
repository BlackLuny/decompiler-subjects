Unknown library function GetSystemDirectoryA
Unknown library function lstrcmpiA
Unknown library function SetFileAttributesA
Unknown library function CopyFileA
Unknown library function GetWindowThreadProcessId
Unknown library function CreateFileA
Unknown library function OpenProcess
Unknown library function lstrlenA
Unknown library function GetModuleHandleA
Unknown library function GetExitCodeThread
Unknown library function RegCreateKeyA
Unknown library function RegSetValueExA
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
in proc proc4 adding addrExp r28{0} - 8 to local table
in proc proc4 adding addrExp r28{0} - 4 to local table
in proc proc4 adding addrExp r28{0} - 12 to local table
in proc proc4 adding addrExp r28{0} - 16 to local table
in proc proc4 adding addrExp r28{0} - 20 to local table
in proc proc4 adding addrExp r28{0} - 24 to local table
in proc proc4 adding addrExp r28{0} - 24 to local table
in proc proc4 adding addrExp r28{0} - 28 to local table
in proc proc4 adding addrExp r28{0} - 28 to local table
in proc proc4 adding addrExp r28{0} - 32 to local table
in proc proc4 adding addrExp r28{0} - 36 to local table
in proc proc4 adding addrExp r28{0} - 40 to local table
in proc proc4 adding addrExp r28{0} - 44 to local table
in proc proc4 adding addrExp r28{0} - 48 to local table
in proc proc4 adding addrExp r28{0} - 52 to local table
in proc proc4 adding addrExp r28{0} - 52 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffcc existing type unsigned int but added type HANDLE
in proc proc4 adding addrExp r28{0} - 56 to local table
finding final parameters for proc4
potential param m[r28{0} - 8]
found new parameter m[r28{0} - 8]
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc10 ###
in proc proc10 adding addrExp r28{0} - 48 to local table
in proc proc10 adding addrExp r28{0} - 52 to local table
in proc proc10 adding addrExp r28{0} - 56 to local table
in proc proc10 adding addrExp r28{0} - 60 to local table
in proc proc10 adding addrExp r28{0} - 64 to local table
in proc proc10 adding addrExp r28{0} - 4 to local table
in proc proc10 adding addrExp r28{0} - 16 to local table
in proc proc10 adding addrExp r28{0} - 20 to local table
in proc proc10 adding addrExp r28{0} - 24 to local table
in proc proc10 adding addrExp r28{0} - 28 to local table
in proc proc10 adding addrExp r28{0} - 32 to local table
in proc proc10 adding addrExp r28{0} - 36 to local table
in proc proc10 adding addrExp r28{0} - 40 to local table
in proc proc10 adding addrExp r28{0} - 44 to local table
in proc proc10 adding addrExp r28{0} - 8 to local table
in proc proc10 adding addrExp r28{0} - 44 to local table
in proc proc10 adding addrExp r28{0} - 48 to local table
in proc proc10 adding addrExp r28{0} - 52 to local table
in proc proc10 adding addrExp r28{0} - 56 to local table
in proc proc10 adding addrExp r28{0} - 60 to local table
in proc proc10 adding addrExp r28{0} - 64 to local table
in proc proc10 adding addrExp r28{0} - 44 to local table
in proc proc10 adding addrExp r28{0} - 48 to local table
in proc proc10 adding addrExp r28{0} - 52 to local table
in proc proc10 adding addrExp r28{0} - 56 to local table
in proc proc10 adding addrExp r28{0} - 60 to local table
in proc proc10 adding addrExp r28{0} - 64 to local table
in proc proc10 adding addrExp r28{0} - 44 to local table
in proc proc10 adding addrExp r28{0} - 48 to local table
finding final parameters for proc10
potential param r28
found new parameter r28
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc17 ###
in proc proc17 adding addrExp r28{0} - 28 to local table
in proc proc17 adding addrExp r28{0} - 4 to local table
in proc proc17 adding addrExp r28{0} - 8 to local table
in proc proc17 adding addrExp r28{0} - 12 to local table
in proc proc17 adding addrExp r28{0} - 16 to local table
in proc proc17 adding addrExp r28{0} - 20 to local table
in proc proc17 adding addrExp r28{0} - 24 to local table
in proc proc17 adding addrExp r28{0} - 20 to local table
in proc proc17 adding addrExp r28{0} - 24 to local table
in proc proc17 adding addrExp r28{0} - 28 to local table
in proc proc17 adding addrExp r28{0} - 20 to local table
in proc proc17 adding addrExp r28{0} - 24 to local table
in proc proc17 adding addrExp r28{0} - 28 to local table
in proc proc17 adding addrExp r28{0} - 20 to local table
in proc proc17 adding addrExp r28{0} - 24 to local table
in proc proc17 adding addrExp r28{0} - 28 to local table
finding final parameters for proc17
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param r8
found new parameter r8
assgn   53 *32* %pc := m[0x405ec8]
assgn   73 *32* %pc := m[0x405ed4]
assgn  109 *32* %pc := m[0x405ed0]
assgn  149 *32* %pc := m[0x405ecc]
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc13 ###
in proc proc13 adding addrExp r28{0} - 16 to local table
in proc proc13 adding addrExp r28{0} - 52 to local table
in proc proc13 adding addrExp r28{0} - 56 to local table
in proc proc13 adding addrExp r28{0} - 60 to local table
in proc proc13 adding addrExp r28{0} - 64 to local table
in proc proc13 adding addrExp r28{0} - 68 to local table
in proc proc13 adding addrExp r28{0} - 72 to local table
in proc proc13 adding addrExp r28{0} - 8 to local table
in proc proc13 adding addrExp r28{0} - 48 to local table
in proc proc13 adding addrExp r28{0} - 4 to local table
in proc proc13 adding addrExp r28{0} - 32 to local table
in proc proc13 adding addrExp r28{0} - 36 to local table
in proc proc13 adding addrExp r28{0} - 40 to local table
in proc proc13 adding addrExp r28{0} - 44 to local table
in proc proc13 adding addrExp r28{0} - 36 to local table
in proc proc13 adding addrExp r28{0} - 40 to local table
in proc proc13 adding addrExp r28{0} - 44 to local table
in proc proc13 adding addrExp r28{0} - 48 to local table
in proc proc13 adding addrExp r28{0} - 8 to local table
in proc proc13 adding addrExp r28{0} - 48 to local table
in proc proc13 adding addrExp r28{0} - 52 to local table
in proc proc13 adding addrExp r28{0} - 16 to local table
in proc proc13 adding addrExp r28{0} - 52 to local table
in proc proc13 adding addrExp r28{0} - 56 to local table
in proc proc13 adding addrExp r28{0} - 60 to local table
in proc proc13 adding addrExp r28{0} - 64 to local table
in proc proc13 adding addrExp r28{0} - 68 to local table
in proc proc13 adding addrExp r28{0} - 72 to local table
in proc proc13 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc13 adding addrExp r28{0} - 8 to local table
in proc proc13 adding addrExp r28{0} - 16 to local table
TYPE ERROR: Existing type at address 0xfffffff0 is not structure or array type
in proc proc13 adding addrExp r28{0} - 32 to local table
in proc proc13 adding addrExp r28{0} - 36 to local table
in proc proc13 adding addrExp r28{0} - 40 to local table
in proc proc13 adding addrExp r28{0} - 44 to local table
in proc proc13 adding addrExp r28{0} - 48 to local table
in proc proc13 adding addrExp r28{0} - 52 to local table
TYPE ERROR: Existing type at address 0xffffffcc is not structure or array type
in proc proc13 adding addrExp r28{0} - 56 to local table
TYPE ERROR: Existing type at address 0xffffffc8 is not structure or array type
in proc proc13 adding addrExp r28{0} - 60 to local table
TYPE ERROR: Existing type at address 0xffffffc4 is not structure or array type
in proc proc13 adding addrExp r28{0} - 64 to local table
TYPE ERROR: Existing type at address 0xffffffc0 is not structure or array type
in proc proc13 adding addrExp r28{0} - 68 to local table
TYPE ERROR: Existing type at address 0xffffffbc is not structure or array type
in proc proc13 adding addrExp r28{0} - 72 to local table
TYPE ERROR: Existing type at address 0xffffffb8 is not structure or array type
in proc proc13 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc13 adding addrExp r28{0} - 8 to local table
in proc proc13 adding addrExp r28{0} - 16 to local table
TYPE ERROR: Existing type at address 0xfffffff0 is not structure or array type
in proc proc13 adding addrExp r28{0} - 32 to local table
in proc proc13 adding addrExp r28{0} - 36 to local table
in proc proc13 adding addrExp r28{0} - 40 to local table
in proc proc13 adding addrExp r28{0} - 44 to local table
in proc proc13 adding addrExp r28{0} - 48 to local table
in proc proc13 adding addrExp r28{0} - 52 to local table
TYPE ERROR: Existing type at address 0xffffffcc is not structure or array type
in proc proc13 adding addrExp r28{0} - 56 to local table
TYPE ERROR: Existing type at address 0xffffffc8 is not structure or array type
in proc proc13 adding addrExp r28{0} - 60 to local table
TYPE ERROR: Existing type at address 0xffffffc4 is not structure or array type
in proc proc13 adding addrExp r28{0} - 64 to local table
TYPE ERROR: Existing type at address 0xffffffc0 is not structure or array type
in proc proc13 adding addrExp r28{0} - 68 to local table
TYPE ERROR: Existing type at address 0xffffffbc is not structure or array type
in proc proc13 adding addrExp r28{0} - 72 to local table
TYPE ERROR: Existing type at address 0xffffffb8 is not structure or array type
in proc proc13 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc13 adding addrExp r28{0} - 8 to local table
in proc proc13 adding addrExp r28{0} - 16 to local table
TYPE ERROR: Existing type at address 0xfffffff0 is not structure or array type
in proc proc13 adding addrExp r28{0} - 32 to local table
in proc proc13 adding addrExp r28{0} - 36 to local table
in proc proc13 adding addrExp r28{0} - 40 to local table
in proc proc13 adding addrExp r28{0} - 44 to local table
in proc proc13 adding addrExp r28{0} - 48 to local table
in proc proc13 adding addrExp r28{0} - 52 to local table
TYPE ERROR: Existing type at address 0xffffffcc is not structure or array type
in proc proc13 adding addrExp r28{0} - 56 to local table
TYPE ERROR: Existing type at address 0xffffffc8 is not structure or array type
in proc proc13 adding addrExp r28{0} - 60 to local table
TYPE ERROR: Existing type at address 0xffffffc4 is not structure or array type
in proc proc13 adding addrExp r28{0} - 64 to local table
TYPE ERROR: Existing type at address 0xffffffc0 is not structure or array type
in proc proc13 adding addrExp r28{0} - 68 to local table
TYPE ERROR: Existing type at address 0xffffffbc is not structure or array type
in proc proc13 adding addrExp r28{0} - 72 to local table
TYPE ERROR: Existing type at address 0xffffffb8 is not structure or array type
in proc proc13 adding addrExp r28{0} - 36 to local table
in proc proc13 adding addrExp r28{0} - 40 to local table
in proc proc13 adding addrExp r28{0} - 36 to local table
in proc proc13 adding addrExp r28{0} - 40 to local table
in proc proc13 adding addrExp r28{0} - 36 to local table
in proc proc13 adding addrExp r28{0} - 40 to local table
in proc proc13 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc13 adding addrExp r28{0} - 8 to local table
in proc proc13 adding addrExp r28{0} - 16 to local table
TYPE ERROR: Existing type at address 0xfffffff0 is not structure or array type
in proc proc13 adding addrExp r28{0} - 32 to local table
in proc proc13 adding addrExp r28{0} - 36 to local table
in proc proc13 adding addrExp r28{0} - 40 to local table
in proc proc13 adding addrExp r28{0} - 44 to local table
in proc proc13 adding addrExp r28{0} - 48 to local table
in proc proc13 adding addrExp r28{0} - 52 to local table
TYPE ERROR: Existing type at address 0xffffffcc is not structure or array type
in proc proc13 adding addrExp r28{0} - 56 to local table
TYPE ERROR: Existing type at address 0xffffffc8 is not structure or array type
in proc proc13 adding addrExp r28{0} - 60 to local table
TYPE ERROR: Existing type at address 0xffffffc4 is not structure or array type
in proc proc13 adding addrExp r28{0} - 64 to local table
TYPE ERROR: Existing type at address 0xffffffc0 is not structure or array type
in proc proc13 adding addrExp r28{0} - 68 to local table
TYPE ERROR: Existing type at address 0xffffffbc is not structure or array type
in proc proc13 adding addrExp r28{0} - 72 to local table
TYPE ERROR: Existing type at address 0xffffffb8 is not structure or array type
finding final parameters for proc13
potential param r28
found new parameter r28
potential param r8
found new parameter r8
potential param global10
potential param global11
potential param global12
potential param global13
assgn  157 *32* m[r28 - 4] := m[0x405ed8]
after removing matching assigns (%pc).
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 52 to local table
in proc _start adding addrExp r28{0} - 56 to local table
in proc _start adding addrExp r28{0} - 60 to local table
in proc _start adding addrExp r28{0} - 64 to local table
in proc _start adding addrExp r28{0} - 68 to local table
in proc _start adding addrExp r28{0} - 72 to local table
in proc _start adding addrExp r28{0} - 4 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 20 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 20 to local table
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 20 to local table
in proc _start adding addrExp r28{0} - 20 to local table
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 32 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 52 to local table
in proc _start adding addrExp r28{0} - 56 to local table
in proc _start adding addrExp r28{0} - 60 to local table
in proc _start adding addrExp r28{0} - 64 to local table
in proc _start adding addrExp r28{0} - 68 to local table
in proc _start adding addrExp r28{0} - 72 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 52 to local table
in proc _start adding addrExp r28{0} - 56 to local table
in proc _start adding addrExp r28{0} - 60 to local table
in proc _start adding addrExp r28{0} - 64 to local table
in proc _start adding addrExp r28{0} - 68 to local table
in proc _start adding addrExp r28{0} - 72 to local table
in proc _start adding addrExp r28{0} - 20 to local table
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 32 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 32 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 52 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 44 to local table
TYPE ERROR: Existing type at address 0xffffffd4 is not structure or array type
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 52 to local table
finding final parameters for _start
potential param r28
found new parameter r28
potential param r8
found new parameter r8
in proc proc4 adding addrExp r28{0} - 8 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc10 ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc13 ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc17 ###
finding final parameters for proc4
potential param m[r28{0} - 8]
found new parameter m[r28{0} - 8]
finding final parameters for _start
potential param r8
found new parameter r8
finding final parameters for proc10
potential param r28
found new parameter r28
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
finding final parameters for _start
potential param r8
found new parameter r8
finding final parameters for proc13
potential param r28
found new parameter r28
potential param r8
found new parameter r8
potential param global10
potential param global11
potential param global12
potential param global13
finding final parameters for _start
potential param r8
found new parameter r8
finding final parameters for proc17
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param r8
found new parameter r8
finding final parameters for proc13
potential param r28
found new parameter r28
potential param r8
found new parameter r8
potential param global10
potential param global11
potential param global12
potential param global13
local esp has type void * that doesn't agree with type of define void of a library, why?
local esp has type union { LPDWORD x1; __size32 x2; } that doesn't agree with type of define void of a library, why?
local eax has type void * that doesn't agree with type of define __size32 of a library, why?
local esp has type void * that doesn't agree with type of define __size32 * of a library, why?
local esp has type __size32 * that doesn't agree with type of define void of a library, why?
local ecx has type __size32 that doesn't agree with type of define void of a library, why?
local edx has type __size32 that doesn't agree with type of define void of a library, why?
local ecx has type void that doesn't agree with type of define __size32 of a library, why?
local ecx has type __size32 that doesn't agree with type of define void of a library, why?
local ecx has type void that doesn't agree with type of define __size32 of a library, why?
local edx has type void that doesn't agree with type of define __size32 of a library, why?
local esp has type void that doesn't agree with type of define __size32 * of a library, why?
local esp has type __size32 * that doesn't agree with type of define void of a library, why?
local esp has type __size32 that doesn't agree with type of define void of a library, why?
local esp has type void that doesn't agree with type of define void * of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local esp has type void that doesn't agree with type of define void * of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local esp has type __size32 that doesn't agree with type of define void of a library, why?
dest is not lib
call:   17 {*32* r24, *v* r25, *v* r26} := CALL RegCreateKeyA(
              )
              Reaching definitions: r24=r28{0} - 8,   r28=r28{0} - 24,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{0},
                m[r28{0} - 12]=r28{0} - 8,   m[r28{0} - 16]=0x405e2b,   m[r28{0} - 20]=m[r28{0} + 4]{0},
                m[r28{0} - 24]=%pc,   tmp1=r28{0} - 4,   %flags=ADDFLAGS32( r28{0} - 4, -4, r28{0} - 8 ),
                %ZF=ADDFLAGS32( r28{0} - 4, -4, r28{0} - 8 ),   %CF=ADDFLAGS32( r28{0} - 4, -4, r28{0} - 8 )
              Live variables:  in proc proc4
dest is not lib
call:   23 {*32* r24, *v* r25, *v* r26} := CALL lstrlenA(
              )
              Reaching definitions: r24=r24{17},   r25=r25{17},   r26=r26{17},   r28=r28{0} - 28,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{0},
                m[r28{0} - 12]=r28{0} - 8,   m[r28{0} - 16]=0x405e2b,   m[r28{0} - 20]=m[r28{0} + 4]{0},
                m[r28{0} - 24]=0x405fe1,   m[r28{0} - 28]=%pc,   tmp1=r28{0} - 4,
                %flags=ADDFLAGS32( r28{0} - 4, -4, r28{0} - 8 ),   %ZF=ADDFLAGS32( r28{0} - 4, -4, r28{0} - 8 ),
                %CF=ADDFLAGS32( r28{0} - 4, -4, r28{0} - 8 )
              Live variables:  in proc proc4
dest is not lib
call:   42 {*32* r24, *v* r25, *v* r26} := CALL RegSetValueExA(
              )
              Reaching definitions: r24=r24{23} + 1,   r25=r25{23},   r26=r26{23},   r28=r28{0} - 52,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{0},
                m[r28{0} - 12]=r28{0} - 8,   m[r28{0} - 16]=0x405e2b,   m[r28{0} - 20]=m[r28{0} + 4]{0},
                m[r28{0} - 24]=0x405fe1,   m[r28{0} - 28]=r24{23} + 1,   m[r28{0} - 32]=0x405fe1,   m[r28{0} - 36]=1,
                m[r28{0} - 40]=0,   m[r28{0} - 44]=0x403000,   m[r28{0} - 48]=m[r28{0} - 8]{0},   m[r28{0} - 52]=%pc,
                tmp1=r24{23},   %flags=LOGICALFLAGS32( r24{23} + 1 ),   %ZF=LOGICALFLAGS32( r24{23} + 1 ),
                %CF=LOGICALFLAGS32( r24{23} + 1 )
              Live variables:  in proc proc4
dest is not lib
call:   48 {*32* r24, *32* r25, *32* r26} := CALL RegCloseKey(
                *HANDLE* local0 := param1
              )
              Reaching definitions: r24=r24{42},   r25=r25{42},   r26=r26{42},   r28=r28{0} - 56,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{0},
                m[r28{0} - 12]=r28{0} - 8,   m[r28{0} - 16]=0x405e2b,   m[r28{0} - 20]=m[r28{0} + 4]{0},
                m[r28{0} - 24]=0x405fe1,   m[r28{0} - 28]=r24{23} + 1,   m[r28{0} - 32]=0x405fe1,   m[r28{0} - 36]=1,
                m[r28{0} - 40]=0,   m[r28{0} - 44]=0x403000,   m[r28{0} - 48]=m[r28{0} - 8]{0},
                m[r28{0} - 52]=m[r28{0} - 8]{0},   m[r28{0} - 56]=%pc,   tmp1=r24{23},
                %flags=LOGICALFLAGS32( r24{23} + 1 ),   %ZF=LOGICALFLAGS32( r24{23} + 1 ),
                %CF=LOGICALFLAGS32( r24{23} + 1 )
              Live variables:  in proc proc4
dest is not lib
call:   24 {*HANDLE* eax_1, *32* r25, *32* r26, *v* esp} := CALL CreateFileA(
              )
              Reaching definitions: r28=r28{0} - 44,   r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 16]=0,   m[r28{0} - 20]=0,   m[r28{0} - 24]=2,   m[r28{0} - 28]=0,   m[r28{0} - 32]=3,
                m[r28{0} - 36]=0x40000000,   m[r28{0} - 40]=m[r28{0} + 4]{0},   m[r28{0} - 44]=%pc,
                m[r28{0} - 48]=m[r28{0} - 48]{0},   m[r28{0} - 52]=m[r28{0} - 52]{0},
                m[r28{0} - 56]=m[r28{0} - 56]{0},   m[r28{0} - 60]=m[r28{0} - 60]{0},
                m[r28{0} - 64]=m[r28{0} - 64]{0},   tmp1=r28{0} - 4,   %flags=ADDFLAGS32( r28{0} - 4, -8, r28{0} - 12 )
                %ZF=ADDFLAGS32( r28{0} - 4, -8, r28{0} - 12 ),   %CF=ADDFLAGS32( r28{0} - 4, -8, r28{0} - 12 )
              Live variables: eax_1 in proc proc10
result:    0 *HANDLE* eax_1 := -
dest is not lib
call:   50 {*32* eax, *v* r25, *v* r26, *v* esp} := CALL WriteFile(
                *HANDLE* local0 := eax_1
                *LPCVOID* local1 := param1
                *DWORD* local2 := param2
                *union* local3 := a[m[esp - 12]]
                *LPOVERLAPPED* local4 := 0
              )
              Reaching definitions: r24=r28{0} - 12,   r25=r25{24},   r26=r26{24},   r28=r28{0} - 64,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{24},   m[r28{0} - 16]=0,   m[r28{0} - 20]=0,
                m[r28{0} - 24]=2,   m[r28{0} - 28]=0,   m[r28{0} - 32]=3,   m[r28{0} - 36]=0x40000000,
                m[r28{0} - 40]=m[r28{0} + 4]{0},   m[r28{0} - 44]=0,   m[r28{0} - 48]=r28{0} - 12,
                m[r28{0} - 52]=m[r28{0} + 12]{0},   m[r28{0} - 56]=m[r28{0} + 8]{0},   m[r28{0} - 60]=r24{24},
                m[r28{0} - 64]=%pc,   tmp1=r24{24},   %flags=LOGICALFLAGS32( r24{24} + 1 ),
                %ZF=LOGICALFLAGS32( r24{24} + 1 ),   %CF=LOGICALFLAGS32( r24{24} + 1 )
              Live variables:  in proc proc10
dest is not lib
call:   56 {*32* eax, *32* r25, *32* r26, *v* esp} := CALL CloseHandle(
                *HANDLE* local5 := eax_1
              )
              Reaching definitions: r24=r24{50},   r25=r25{50},   r26=r26{50},   r28=r28{0} - 48,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{24},   m[r28{0} - 16]=0,   m[r28{0} - 20]=0,
                m[r28{0} - 24]=2,   m[r28{0} - 28]=0,   m[r28{0} - 32]=3,   m[r28{0} - 36]=0x40000000,
                m[r28{0} - 40]=m[r28{0} + 4]{0},   m[r28{0} - 44]=r24{24},   m[r28{0} - 48]=%pc,
                m[r28{0} - 52]=m[r28{0} + 12]{0},   m[r28{0} - 56]=m[r28{0} + 8]{0},   m[r28{0} - 60]=r24{24},
                m[r28{0} - 64]=%pc,   tmp1=r24{24},   %flags=LOGICALFLAGS32( r24{24} + 1 ),
                %ZF=LOGICALFLAGS32( r24{24} + 1 ),   %CF=LOGICALFLAGS32( r24{24} + 1 )
              Live variables:  in proc proc10
dest is not lib
call:   16 {*32* eax, *8* al, *v* ecx, *v* edx, *v* esp} := CALL proc17(
                *LPCSTR* local0 := "kernel32.dll"
                *32** local1 := 0x405ec8
                *j8* al := param1
              )
              Reaching definitions: r8=r8{0},   r27=r27{0},   r28=r28{0} - 44,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 32]=r27{0},
                m[r28{0} - 36]=0x405ec8,   m[r28{0} - 40]=0x405e74,   m[r28{0} - 44]=%pc,
                m[r28{0} - 48]=m[r28{0} - 48]{0},   m[r28{0} - 52]=m[r28{0} - 52]{0},
                m[r28{0} - 56]=m[r28{0} - 56]{0},   m[r28{0} - 60]=m[r28{0} - 60]{0},
                m[r28{0} - 64]=m[r28{0} - 64]{0},   m[r28{0} - 68]=m[r28{0} - 68]{0},
                m[r28{0} - 72]=m[r28{0} - 72]{0},   tmp1=r28{0} - 4,
                %flags=ADDFLAGS32( r28{0} - 4, -24, r28{0} - 28 ),   %ZF=ADDFLAGS32( r28{0} - 4, -24, r28{0} - 28 ),
                %CF=ADDFLAGS32( r28{0} - 4, -24, r28{0} - 28 )
              Live variables: al,  eax in proc proc13
result:    0 *32* eax := -
result:    0 *8* al := -
dest is not lib
call:  164 {*32* eax, *32* ecx, *32* edx, *32** esp} := CALL LoadLibraryA(
                *LPCSTR* local1 := ""
              )
              Reaching definitions: r8=r8{16},   r24=r24{16},   r25=r25{16},   r26=r26{16},   r27=r27{0},
                r28=r28{0} - 40,   r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 16]=m[r28{0} - 16]{0},
                m[r28{0} - 32]=r27{0},   m[r28{0} - 36]=0x405edc,   m[r28{0} - 40]=%pc,   m[r28{0} - 44]=%pc,
                m[r28{0} - 48]=m[r28{0} - 48]{0},   m[r28{0} - 52]=m[r28{0} - 52]{0},
                m[r28{0} - 56]=m[r28{0} - 56]{0},   m[r28{0} - 60]=m[r28{0} - 60]{0},
                m[r28{0} - 64]=m[r28{0} - 64]{0},   m[r28{0} - 68]=m[r28{0} - 68]{0},
                m[r28{0} - 72]=m[r28{0} - 72]{0},   tmp1=r28{0} - 4,   %flags=LOGICALFLAGS32( r24{16} ),
                %ZF=LOGICALFLAGS32( r24{16} ),   %CF=LOGICALFLAGS32( r24{16} )
              Live variables: eax in proc proc13
result:    0 *32* eax := -
dest is not lib
call:  173 {*32* eax, *32* ecx, *32* edx, *v* esp} := CALL Sleep(
                *DWORD* local16 := 0x2710
              )
              Reaching definitions: r8=r8{16},   r24=r24{216},   r25=r25{217},   r26=r26{218},   r27=r27{0},
                r28=(r28{0} - 32) - 8,   r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{0},
                m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 32]=r27{0},   m[r28{0} - 36]=0x2710,
                m[r28{0} - 40]=%pc,   m[r28{0} - 44]=%pc,   m[r28{0} - 48]=m[r28{0} - 48]{0},
                m[r28{0} - 52]=m[r28{0} - 52]{0},   m[r28{0} - 56]=m[r28{0} - 56]{0},
                m[r28{0} - 60]=m[r28{0} - 60]{0},   m[r28{0} - 64]=m[r28{0} - 64]{0},
                m[r28{0} - 68]=m[r28{0} - 68]{0},   m[r28{0} - 72]=m[r28{0} - 72]{0},   tmp1=r28{0} - 4,
                %flags=LOGICALFLAGS32( r24{164} ),   %ZF=LOGICALFLAGS32( r24{164} ),   %CF=LOGICALFLAGS32( r24{164} )
              Live variables:  in proc proc13
dest is not lib
call:   29 {*32* eax_1, *32* ecx, *32* edx, *32** esp} := CALL OpenProcess(
              )
              Reaching definitions: r8=r8{16},   r24=r24{16},   r25=r25{16},   r26=r26{16},   r27=r27{0},
                r28=r28{0} - 48,   r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 16]=m[r28{0} - 16]{0},
                m[r28{0} - 32]=r27{0},   m[r28{0} - 36]=m[r28{0} + 4]{0},   m[r28{0} - 40]=0,   m[r28{0} - 44]=0x43a,
                m[r28{0} - 48]=%pc,   m[r28{0} - 52]=m[r28{0} - 52]{0},   m[r28{0} - 56]=m[r28{0} - 56]{0},
                m[r28{0} - 60]=m[r28{0} - 60]{0},   m[r28{0} - 64]=m[r28{0} - 64]{0},
                m[r28{0} - 68]=m[r28{0} - 68]{0},   m[r28{0} - 72]=m[r28{0} - 72]{0},   tmp1=r28{0} - 4,
                %flags=LOGICALFLAGS32( r24{16} ),   %ZF=LOGICALFLAGS32( r24{16} ),   %CF=LOGICALFLAGS32( r24{16} )
              Live variables: eax_1 in proc proc13
result:    0 *32* eax_1 := -
dest is not lib
call:   39 {*32* eax, *32* ecx, *32* edx, *v* esp} := CALL lstrlenA(
              )
              Reaching definitions: r8=r8{16},   r24=r24{29},   r25=r25{29},   r26=r26{29},   r27=r27{0},
                r28=r28{0} - 52,   r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{29},   m[r28{0} - 16]=m[r28{0} - 16]{0},
                m[r28{0} - 32]=r27{0},   m[r28{0} - 36]=m[r28{0} + 4]{0},   m[r28{0} - 40]=0,   m[r28{0} - 44]=0x43a,
                m[r28{0} - 48]=m[r28{0} + 8]{0},   m[r28{0} - 52]=%pc,   m[r28{0} - 56]=m[r28{0} - 56]{0},
                m[r28{0} - 60]=m[r28{0} - 60]{0},   m[r28{0} - 64]=m[r28{0} - 64]{0},
                m[r28{0} - 68]=m[r28{0} - 68]{0},   m[r28{0} - 72]=m[r28{0} - 72]{0},   tmp1=r24{29},
                %flags=LOGICALFLAGS32( r24{29} ),   %ZF=LOGICALFLAGS32( r24{29} ),   %CF=LOGICALFLAGS32( r24{29} )
              Live variables: eax,  ecx,  edx in proc proc13
result:    0 *32* eax := -
result:    0 *32* ecx := -
result:    0 *32* edx := -
dest is not lib
call:   83 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetModuleHandleA(
              )
              Reaching definitions: r8=r8{74},   r24=r24{74},   r25=r25{74},   r26=r26{74},   r27=r27{74},
                r28=r28{74} - 8,   r29=r29{74},   m[r28{0} + 4]=m[r28{0} + 4]{74},   m[r28{0} + 8]=m[r28{0} + 8]{74},
                m[r28{0} - 4]=m[r28{0} - 4]{74},   m[r28{0} - 8]=m[r28{0} - 8]{74},   m[r28{0} - 16]=m[r28{0} - 16]{74}
                m[r28{0} - 32]=m[r28{0} - 32]{74},   m[r28{0} - 36]=m[r28{0} - 36]{74},
                m[r28{0} - 40]=m[r28{0} - 40]{74},   m[r28{0} - 44]=m[r28{0} - 44]{74},
                m[r28{0} - 48]=m[r28{0} - 48]{74},   m[r28{0} - 52]=m[r28{0} - 52]{74},
                m[r28{0} - 56]=m[r28{0} - 56]{74},   m[r28{0} - 60]=m[r28{0} - 60]{74},
                m[r28{0} - 64]=m[r28{0} - 64]{74},   m[r28{0} - 68]=m[r28{0} - 68]{74},
                m[r28{0} - 72]=m[r28{0} - 72]{74},   m[r28{0} - 4]=m[r28{0} - 4]{74},   m[r28{0} - 8]=m[r28{0} - 8]{74}
                m[r28{0} - 16]=m[r28{0} - 16]{74},   m[r28{0} - 32]=m[r28{0} - 32]{74},
                m[r28{0} - 36]=m[r28{0} - 36]{74},   m[r28{0} - 40]=m[r28{0} - 40]{74},
                m[r28{0} - 44]=m[r28{0} - 44]{74},   m[r28{0} - 48]=m[r28{0} - 48]{74},
                m[r28{0} - 52]=m[r28{0} - 52]{74},   m[r28{0} - 56]=m[r28{0} - 56]{74},
                m[r28{0} - 60]=m[r28{0} - 60]{74},   m[r28{0} - 64]=m[r28{0} - 64]{74},
                m[r28{0} - 68]=m[r28{0} - 68]{74},   m[r28{0} - 72]=m[r28{0} - 72]{74},   <all>=<all>{74},
                tmp1=tmp1{74},   %flags=LOGICALFLAGS32( r24{74} ),   %ZF=LOGICALFLAGS32( r24{74} ),
                %CF=LOGICALFLAGS32( r24{74} )
              Live variables: eax in proc proc13
result:    0 *32* eax := -
dest is not lib
call:   91 {*32* eax, *32* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* m[esp_2 - 12] := m[esp_2 - 12]
                *c** m[esp_2 - 8] := m[esp_2 - 8]
              )
              Reaching definitions: r8=r8{74},   r24=r24{83},   r25=r25{83},   r26=r26{83},   r27=r27{74},
                r28=r28{74} - 16,   r29=r29{74},   m[r28{0} + 4]=m[r28{0} + 4]{74},   m[r28{0} + 8]=m[r28{0} + 8]{74},
                m[r28{0} - 4]=m[r28{0} - 4]{74},   m[r28{0} - 8]=m[r28{0} - 8]{74},   m[r28{0} - 16]=m[r28{0} - 16]{74}
                m[r28{0} - 32]=m[r28{0} - 32]{74},   m[r28{0} - 36]=m[r28{0} - 36]{74},
                m[r28{0} - 40]=m[r28{0} - 40]{74},   m[r28{0} - 44]=m[r28{0} - 44]{74},
                m[r28{0} - 48]=m[r28{0} - 48]{74},   m[r28{0} - 52]=m[r28{0} - 52]{74},
                m[r28{0} - 56]=m[r28{0} - 56]{74},   m[r28{0} - 60]=m[r28{0} - 60]{74},
                m[r28{0} - 64]=m[r28{0} - 64]{74},   m[r28{0} - 68]=m[r28{0} - 68]{74},
                m[r28{0} - 72]=m[r28{0} - 72]{74},   m[r28{0} - 4]=m[r28{0} - 4]{74},   m[r28{0} - 8]=m[r28{0} - 8]{74}
                m[r28{0} - 16]=m[r28{0} - 16]{74},   m[r28{0} - 32]=m[r28{0} - 32]{74},
                m[r28{0} - 36]=m[r28{0} - 36]{74},   m[r28{0} - 40]=m[r28{0} - 40]{74},
                m[r28{0} - 44]=m[r28{0} - 44]{74},   m[r28{0} - 48]=m[r28{0} - 48]{74},
                m[r28{0} - 52]=m[r28{0} - 52]{74},   m[r28{0} - 56]=m[r28{0} - 56]{74},
                m[r28{0} - 60]=m[r28{0} - 60]{74},   m[r28{0} - 64]=m[r28{0} - 64]{74},
                m[r28{0} - 68]=m[r28{0} - 68]{74},   m[r28{0} - 72]=m[r28{0} - 72]{74},   <all>=<all>{74},
                tmp1=tmp1{74},   %flags=LOGICALFLAGS32( r24{74} ),   %ZF=LOGICALFLAGS32( r24{74} ),
                %CF=LOGICALFLAGS32( r24{74} )
              Live variables: eax,  ecx in proc proc13
result:    0 *32* eax := -
result:    0 *32* ecx := -
dest is not lib
call:  122 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL WaitForSingleObject(
                *HANDLE* m[esp_3 - 8] := m[esp_3 - 8]
                *DWORD* m[esp_3 - 4] := m[esp_3 - 4]
              )
              Reaching definitions: r8=r8{110},   r24=r24{110},   r25=r25{110},   r26=r26{110},   r27=r27{110},
                r28=r28{110} - 12,   r29=r29{110},   m[r28{0} + 4]=m[r28{0} + 4]{110},
                m[r28{0} + 8]=m[r28{0} + 8]{110},   m[r28{0} - 4]=m[r28{0} - 4]{110},
                m[r28{0} - 8]=m[r28{0} - 8]{110},   m[r28{0} - 16]=m[r28{0} - 16]{110},
                m[r28{0} - 32]=m[r28{0} - 32]{110},   m[r28{0} - 36]=m[r28{0} - 36]{110},
                m[r28{0} - 40]=m[r28{0} - 40]{110},   m[r28{0} - 44]=m[r28{0} - 44]{110},
                m[r28{0} - 48]=m[r28{0} - 48]{110},   m[r28{0} - 52]=m[r28{0} - 52]{110},
                m[r28{0} - 56]=m[r28{0} - 56]{110},   m[r28{0} - 60]=m[r28{0} - 60]{110},
                m[r28{0} - 64]=m[r28{0} - 64]{110},   m[r28{0} - 68]=m[r28{0} - 68]{110},
                m[r28{0} - 72]=m[r28{0} - 72]{110},   m[r28{0} - 4]=m[r28{0} - 4]{110},
                m[r28{0} - 8]=m[r28{0} - 8]{110},   m[r28{0} - 16]=m[r28{0} - 16]{110},
                m[r28{0} - 32]=m[r28{0} - 32]{110},   m[r28{0} - 36]=m[r28{0} - 36]{110},
                m[r28{0} - 40]=m[r28{0} - 40]{110},   m[r28{0} - 44]=m[r28{0} - 44]{110},
                m[r28{0} - 48]=m[r28{0} - 48]{110},   m[r28{0} - 52]=m[r28{0} - 52]{110},
                m[r28{0} - 56]=m[r28{0} - 56]{110},   m[r28{0} - 60]=m[r28{0} - 60]{110},
                m[r28{0} - 64]=m[r28{0} - 64]{110},   m[r28{0} - 68]=m[r28{0} - 68]{110},
                m[r28{0} - 72]=m[r28{0} - 72]{110},   <all>=<all>{110},   tmp1=tmp1{110},
                %flags=LOGICALFLAGS32( r24{110} ),   %ZF=LOGICALFLAGS32( r24{110} ),   %CF=LOGICALFLAGS32( r24{110} )
              Live variables:  in proc proc13
dest is not lib
call:  131 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetExitCodeThread(
              )
              Reaching definitions: r8=r8{110},   r24=r29{110} - 24,   r25=r25{122},   r26=r26{122},   r27=r27{110},
                r28=r28{110} - 12,   r29=r29{110},   m[r28{0} + 4]=m[r28{0} + 4]{110},
                m[r28{0} + 8]=m[r28{0} + 8]{110},   m[r28{0} - 4]=m[r28{0} - 4]{110},
                m[r28{0} - 8]=m[r28{0} - 8]{110},   m[r28{0} - 16]=m[r28{0} - 16]{110},
                m[r28{0} - 32]=m[r28{0} - 32]{110},   m[r28{0} - 36]=m[r28{0} - 36]{110},
                m[r28{0} - 40]=m[r28{0} - 40]{110},   m[r28{0} - 44]=m[r28{0} - 44]{110},
                m[r28{0} - 48]=m[r28{0} - 48]{110},   m[r28{0} - 52]=m[r28{0} - 52]{110},
                m[r28{0} - 56]=m[r28{0} - 56]{110},   m[r28{0} - 60]=m[r28{0} - 60]{110},
                m[r28{0} - 64]=m[r28{0} - 64]{110},   m[r28{0} - 68]=m[r28{0} - 68]{110},
                m[r28{0} - 72]=m[r28{0} - 72]{110},   m[r28{0} - 4]=m[r28{0} - 4]{110},
                m[r28{0} - 8]=m[r28{0} - 8]{110},   m[r28{0} - 16]=m[r28{0} - 16]{110},
                m[r28{0} - 32]=m[r28{0} - 32]{110},   m[r28{0} - 36]=m[r28{0} - 36]{110},
                m[r28{0} - 40]=m[r28{0} - 40]{110},   m[r28{0} - 44]=m[r28{0} - 44]{110},
                m[r28{0} - 48]=m[r28{0} - 48]{110},   m[r28{0} - 52]=m[r28{0} - 52]{110},
                m[r28{0} - 56]=m[r28{0} - 56]{110},   m[r28{0} - 60]=m[r28{0} - 60]{110},
                m[r28{0} - 64]=m[r28{0} - 64]{110},   m[r28{0} - 68]=m[r28{0} - 68]{110},
                m[r28{0} - 72]=m[r28{0} - 72]{110},   <all>=<all>{110},   tmp1=tmp1{110},
                %flags=LOGICALFLAGS32( r24{110} ),   %ZF=LOGICALFLAGS32( r24{110} ),   %CF=LOGICALFLAGS32( r24{110} )
              Live variables:  in proc proc13
dest is not lib
call:  138 {*32* eax, *32* ecx, *32* edx, *v** esp_4} := CALL CloseHandle(
                *HANDLE* m[esp_3 - 12] := m[esp_3 - 12]
              )
              Reaching definitions: r8=r8{110},   r24=r24{131},   r25=r25{131},   r26=r26{131},   r27=r27{132},
                r28=r28{110} - 16,   r29=r29{110},   m[r28{0} + 4]=m[r28{0} + 4]{110},
                m[r28{0} + 8]=m[r28{0} + 8]{110},   m[r28{0} - 4]=m[r28{0} - 4]{110},
                m[r28{0} - 8]=m[r28{0} - 8]{110},   m[r28{0} - 16]=m[r28{0} - 16]{110},
                m[r28{0} - 32]=m[r28{0} - 32]{110},   m[r28{0} - 36]=m[r28{0} - 36]{110},
                m[r28{0} - 40]=m[r28{0} - 40]{110},   m[r28{0} - 44]=m[r28{0} - 44]{110},
                m[r28{0} - 48]=m[r28{0} - 48]{110},   m[r28{0} - 52]=m[r28{0} - 52]{110},
                m[r28{0} - 56]=m[r28{0} - 56]{110},   m[r28{0} - 60]=m[r28{0} - 60]{110},
                m[r28{0} - 64]=m[r28{0} - 64]{110},   m[r28{0} - 68]=m[r28{0} - 68]{110},
                m[r28{0} - 72]=m[r28{0} - 72]{110},   m[r28{0} - 4]=m[r28{0} - 4]{110},
                m[r28{0} - 8]=m[r28{0} - 8]{110},   m[r28{0} - 16]=m[r28{0} - 16]{110},
                m[r28{0} - 32]=m[r28{0} - 32]{110},   m[r28{0} - 36]=m[r28{0} - 36]{110},
                m[r28{0} - 40]=m[r28{0} - 40]{110},   m[r28{0} - 44]=m[r28{0} - 44]{110},
                m[r28{0} - 48]=m[r28{0} - 48]{110},   m[r28{0} - 52]=m[r28{0} - 52]{110},
                m[r28{0} - 56]=m[r28{0} - 56]{110},   m[r28{0} - 60]=m[r28{0} - 60]{110},
                m[r28{0} - 64]=m[r28{0} - 64]{110},   m[r28{0} - 68]=m[r28{0} - 68]{110},
                m[r28{0} - 72]=m[r28{0} - 72]{110},   <all>=<all>{110},   tmp1=tmp1{110},
                %flags=LOGICALFLAGS32( r24{110} ),   %ZF=LOGICALFLAGS32( r24{110} ),   %CF=LOGICALFLAGS32( r24{110} )
              Live variables: eax,  ecx,  edx,  esp_4 in proc proc13
result:    0 *32* eax := -
result:    0 *32* ecx := -
result:    0 *32* edx := -
result:    0 *v** esp_4 := -
dest is not lib
call:  156 {*32* eax, *32* ecx, *32* edx, *32** esp} := CALL CloseHandle(
                *HANDLE* m[esp_1 - 4] := m[esp_1 - 4]
              )
              Reaching definitions: r8=r8{194},   r24=r24{195},   r25=r25{196},   r26=r26{197},   r27=r27{198},
                r28=r28{199} - 8,   r29=r29{200},   m[r28{0} + 4]=m[r28{0} + 4]{291},
                m[r28{0} + 8]=m[r28{0} + 8]{292},   m[r28{0} - 4]=m[r28{0} - 4]{54},   m[r28{0} - 8]=m[r28{0} - 8]{54},
                m[r28{0} - 16]=m[r28{0} - 16]{54},   m[r28{0} - 32]=m[r28{0} - 32]{54},
                m[r28{0} - 36]=m[r28{0} - 36]{54},   m[r28{0} - 40]=m[r28{0} - 40]{54},
                m[r28{0} - 44]=m[r28{0} - 44]{54},   m[r28{0} - 48]=m[r28{0} - 48]{54},
                m[r28{0} - 52]=m[r28{0} - 52]{54},   m[r28{0} - 56]=m[r28{0} - 56]{54},
                m[r28{0} - 60]=m[r28{0} - 60]{54},   m[r28{0} - 64]=m[r28{0} - 64]{54},
                m[r28{0} - 68]=m[r28{0} - 68]{54},   m[r28{0} - 72]=m[r28{0} - 72]{54},
                m[r28{0} - 4]=m[r28{0} - 4]{245},   m[r28{0} - 8]=m[r28{0} - 8]{246},
                m[r28{0} - 16]=m[r28{0} - 16]{247},   m[r28{0} - 32]=m[r28{0} - 32]{248},
                m[r28{0} - 36]=m[r28{0} - 36]{249},   m[r28{0} - 40]=m[r28{0} - 40]{250},
                m[r28{0} - 44]=m[r28{0} - 44]{251},   m[r28{0} - 48]=m[r28{0} - 48]{252},
                m[r28{0} - 52]=m[r28{0} - 52]{253},   m[r28{0} - 56]=m[r28{0} - 56]{254},
                m[r28{0} - 60]=m[r28{0} - 60]{255},   m[r28{0} - 64]=m[r28{0} - 64]{256},
                m[r28{0} - 68]=m[r28{0} - 68]{257},   m[r28{0} - 72]=m[r28{0} - 72]{258},   <all>=<all>{54},
                tmp1=tmp1{201},   %flags=%flags{202},   %ZF=%ZF{203},   %CF=%CF{204}
              Live variables:  in proc proc13
dest is not lib
call:    8 {*32* eax, *v* r25, *v* r26, *v* esp} := CALL GetSystemDirectoryA(
              )
              Reaching definitions: r8=r8{0},   r27=r27{0},   r28=r28{0} - 12,   r29=r29{0},   m[r28{0} - 4]=260,
                m[r28{0} - 8]=0x405fe1,   m[r28{0} - 12]=%pc,   m[r28{0} - 44]=m[r28{0} - 44]{0},
                m[r28{0} - 48]=m[r28{0} - 48]{0},   m[r28{0} - 52]=m[r28{0} - 52]{0},
                m[r28{0} - 56]=m[r28{0} - 56]{0},   m[r28{0} - 60]=m[r28{0} - 60]{0},
                m[r28{0} - 64]=m[r28{0} - 64]{0},   m[r28{0} - 68]=m[r28{0} - 68]{0},
                m[r28{0} - 72]=m[r28{0} - 72]{0}
              Live variables:  in proc _start
dest is not lib
call:   16 {*32* eax, *v* r25, *v* r26, *v* esp} := CALL lstrcatA(
                *LPSTR* local0 := ""
                *LPSTR* local1 := "\WINdirect.exe"
              )
              Reaching definitions: r8=r8{0},   r24=r24{8},   r25=r25{8},   r26=r26{8},   r27=r27{0},   r28=r28{0} - 20
                r29=r29{0},   m[r28{0} - 4]=260,   m[r28{0} - 8]=0x405fe1,   m[r28{0} - 12]=0x40300d,
                m[r28{0} - 16]=0x405fe1,   m[r28{0} - 20]=%pc,   m[r28{0} - 44]=m[r28{0} - 44]{0},
                m[r28{0} - 48]=m[r28{0} - 48]{0},   m[r28{0} - 52]=m[r28{0} - 52]{0},
                m[r28{0} - 56]=m[r28{0} - 56]{0},   m[r28{0} - 60]=m[r28{0} - 60]{0},
                m[r28{0} - 64]=m[r28{0} - 64]{0},   m[r28{0} - 68]=m[r28{0} - 68]{0},
                m[r28{0} - 72]=m[r28{0} - 72]{0}
              Live variables:  in proc _start
dest is not lib
call:   26 {*32* eax, *v* r25, *v* r26, *v* esp} := CALL GetModuleFileNameA(
                *HMODULE* local2 := 0
                *LPSTR* local0 := 0x4060e6
                *DWORD* local3 := 260
              )
              Reaching definitions: r8=r8{0},   r24=r24{16},   r25=r25{16},   r26=r26{16},   r27=r27{0},
                r28=r28{0} - 24,   r29=r29{0},   m[r28{0} - 4]=260,   m[r28{0} - 8]=0x405fe1,   m[r28{0} - 12]=260,
                m[r28{0} - 16]=0x4060e6,   m[r28{0} - 20]=0,   m[r28{0} - 24]=%pc,   m[r28{0} - 44]=m[r28{0} - 44]{0},
                m[r28{0} - 48]=m[r28{0} - 48]{0},   m[r28{0} - 52]=m[r28{0} - 52]{0},
                m[r28{0} - 56]=m[r28{0} - 56]{0},   m[r28{0} - 60]=m[r28{0} - 60]{0},
                m[r28{0} - 64]=m[r28{0} - 64]{0},   m[r28{0} - 68]=m[r28{0} - 68]{0},
                m[r28{0} - 72]=m[r28{0} - 72]{0}
              Live variables:  in proc _start
dest is not lib
call:   32 {*32* eax, *v* r25, *v* r26, *v* esp} := CALL proc4(
                *union* local4 := %pc
              )
              Reaching definitions: r8=r8{0},   r24=r24{26},   r25=r25{26},   r26=r26{26},   r27=r27{0},
                r28=r28{0} - 16,   r29=r29{0},   m[r28{0} - 4]=260,   m[r28{0} - 8]=0x405fe1,
                m[r28{0} - 12]=0x80000001,   m[r28{0} - 16]=%pc,   m[r28{0} - 20]=0,   m[r28{0} - 24]=%pc,
                m[r28{0} - 44]=m[r28{0} - 44]{0},   m[r28{0} - 48]=m[r28{0} - 48]{0},
                m[r28{0} - 52]=m[r28{0} - 52]{0},   m[r28{0} - 56]=m[r28{0} - 56]{0},
                m[r28{0} - 60]=m[r28{0} - 60]{0},   m[r28{0} - 64]=m[r28{0} - 64]{0},
                m[r28{0} - 68]=m[r28{0} - 68]{0},   m[r28{0} - 72]=m[r28{0} - 72]{0}
              Live variables:  in proc _start
dest is not lib
call:   38 {*32* eax, *v* r25, *v* r26, *v* esp} := CALL proc4(
                *union* local4 := %pc
              )
              Reaching definitions: r8=r8{0},   r24=r24{32},   r25=r25{32},   r26=r26{32},   r27=r27{0},
                r28=r28{0} - 16,   r29=r29{0},   m[r28{0} - 4]=260,   m[r28{0} - 8]=0x405fe1,
                m[r28{0} - 12]=0x80000002,   m[r28{0} - 16]=%pc,   m[r28{0} - 20]=0,   m[r28{0} - 24]=%pc,
                m[r28{0} - 44]=m[r28{0} - 44]{0},   m[r28{0} - 48]=m[r28{0} - 48]{0},
                m[r28{0} - 52]=m[r28{0} - 52]{0},   m[r28{0} - 56]=m[r28{0} - 56]{0},
                m[r28{0} - 60]=m[r28{0} - 60]{0},   m[r28{0} - 64]=m[r28{0} - 64]{0},
                m[r28{0} - 68]=m[r28{0} - 68]{0},   m[r28{0} - 72]=m[r28{0} - 72]{0}
              Live variables:  in proc _start
dest is not lib
call:   46 {*32* eax, *v* r25, *v* r26, *v* esp} := CALL lstrcmpiA(
              )
              Reaching definitions: r8=r8{0},   r24=r24{38},   r25=r25{38},   r26=r26{38},   r27=r27{0},
                r28=r28{0} - 20,   r29=r29{0},   m[r28{0} - 4]=260,   m[r28{0} - 8]=0x405fe1,   m[r28{0} - 12]=0x405fe1
                m[r28{0} - 16]=0x4060e6,   m[r28{0} - 20]=%pc,   m[r28{0} - 24]=%pc,   m[r28{0} - 44]=m[r28{0} - 44]{0}
                m[r28{0} - 48]=m[r28{0} - 48]{0},   m[r28{0} - 52]=m[r28{0} - 52]{0},
                m[r28{0} - 56]=m[r28{0} - 56]{0},   m[r28{0} - 60]=m[r28{0} - 60]{0},
                m[r28{0} - 64]=m[r28{0} - 64]{0},   m[r28{0} - 68]=m[r28{0} - 68]{0},
                m[r28{0} - 72]=m[r28{0} - 72]{0}
              Live variables: eax in proc _start
result:    0 *32* eax := -
dest is not lib
call:   57 {*32* eax, *v* r25, *v* r26, *v* esp} := CALL SetFileAttributesA(
              )
              Reaching definitions: r8=r8{0},   r24=r24{46},   r25=r25{46},   r26=r26{46},   r27=r27{0},
                r28=r28{0} - 28,   r29=r29{0},   m[r28{0} - 4]=260,   m[r28{0} - 8]=0x405fe1,   m[r28{0} - 12]=0x405fe1
                m[r28{0} - 16]=0x4060e6,   m[r28{0} - 20]=128,   m[r28{0} - 24]=0x405fe1,   m[r28{0} - 28]=%pc,
                m[r28{0} - 44]=m[r28{0} - 44]{0},   m[r28{0} - 48]=m[r28{0} - 48]{0},
                m[r28{0} - 52]=m[r28{0} - 52]{0},   m[r28{0} - 56]=m[r28{0} - 56]{0},
                m[r28{0} - 60]=m[r28{0} - 60]{0},   m[r28{0} - 64]=m[r28{0} - 64]{0},
                m[r28{0} - 68]=m[r28{0} - 68]{0},   m[r28{0} - 72]=m[r28{0} - 72]{0},
                %flags=LOGICALFLAGS32( r24{46} ),   %ZF=LOGICALFLAGS32( r24{46} ),   %CF=LOGICALFLAGS32( r24{46} )
              Live variables:  in proc _start
dest is not lib
call:   67 {*32* eax, *v* r25, *v* r26, *v** esp} := CALL CopyFileA(
              )
              Reaching definitions: r8=r8{0},   r24=r24{57},   r25=r25{57},   r26=r26{57},   r27=r27{0},
                r28=r28{0} - 40,   r29=r29{0},   m[r28{0} - 4]=260,   m[r28{0} - 8]=0x405fe1,   m[r28{0} - 12]=0x405fe1
                m[r28{0} - 16]=0x4060e6,   m[r28{0} - 20]=128,   m[r28{0} - 24]=0x405fe1,   m[r28{0} - 28]=0,
                m[r28{0} - 32]=0x405fe1,   m[r28{0} - 36]=0x4060e6,   m[r28{0} - 40]=%pc,
                m[r28{0} - 44]=m[r28{0} - 44]{0},   m[r28{0} - 48]=m[r28{0} - 48]{0},
                m[r28{0} - 52]=m[r28{0} - 52]{0},   m[r28{0} - 56]=m[r28{0} - 56]{0},
                m[r28{0} - 60]=m[r28{0} - 60]{0},   m[r28{0} - 64]=m[r28{0} - 64]{0},
                m[r28{0} - 68]=m[r28{0} - 68]{0},   m[r28{0} - 72]=m[r28{0} - 72]{0},
                %flags=LOGICALFLAGS32( r24{46} ),   %ZF=LOGICALFLAGS32( r24{46} ),   %CF=LOGICALFLAGS32( r24{46} )
              Live variables: eax,  esp in proc _start
result:    0 *32* eax := -
result:    0 *v** esp := -
dest is not lib
call:   78 {*32* eax, *v* r25, *v* r26, *v* esp} := CALL SetFileAttributesA(
              )
              Reaching definitions: r8=r8{0},   r24=r24{67},   r25=r25{67},   r26=r26{67},   r27=r27{0},
                r28=r28{0} - 48,   r29=r29{0},   m[r28{0} - 4]=260,   m[r28{0} - 8]=0x405fe1,   m[r28{0} - 12]=0x405fe1
                m[r28{0} - 16]=0x4060e6,   m[r28{0} - 20]=128,   m[r28{0} - 24]=0x405fe1,   m[r28{0} - 28]=0,
                m[r28{0} - 32]=0x405fe1,   m[r28{0} - 36]=0x4060e6,   m[r28{0} - 40]=128,   m[r28{0} - 44]=0x405fe1,
                m[r28{0} - 48]=%pc,   m[r28{0} - 52]=m[r28{0} - 52]{0},   m[r28{0} - 56]=m[r28{0} - 56]{0},
                m[r28{0} - 60]=m[r28{0} - 60]{0},   m[r28{0} - 64]=m[r28{0} - 64]{0},
                m[r28{0} - 68]=m[r28{0} - 68]{0},   m[r28{0} - 72]=m[r28{0} - 72]{0},
                %flags=LOGICALFLAGS32( r24{67} ),   %ZF=LOGICALFLAGS32( r24{67} ),   %CF=LOGICALFLAGS32( r24{67} )
              Live variables:  in proc _start
dest is not lib
call:   94 {*32* eax, *v* r25, *v* r26, *v** esp} := CALL ShellExecuteA(
                *HWND* local5 := 0
                *LPCSTR* local6 := "open"
                *LPCSTR* local7 := ""
                *LPCSTR* local8 := 0
                *LPCSTR* local9 := 0
                *INT* local10 := 0
              )
              Reaching definitions: r8=r8{0},   r24=r24{78},   r25=r25{78},   r26=r26{78},   r27=r27{0},
                r28=r28{0} - 72,   r29=r29{0},   m[r28{0} - 4]=260,   m[r28{0} - 8]=0x405fe1,   m[r28{0} - 12]=0x405fe1
                m[r28{0} - 16]=0x4060e6,   m[r28{0} - 20]=128,   m[r28{0} - 24]=0x405fe1,   m[r28{0} - 28]=0,
                m[r28{0} - 32]=0x405fe1,   m[r28{0} - 36]=0x4060e6,   m[r28{0} - 40]=128,   m[r28{0} - 44]=0x405fe1,
                m[r28{0} - 48]=0,   m[r28{0} - 52]=0,   m[r28{0} - 56]=0,   m[r28{0} - 60]=0x405fe1,
                m[r28{0} - 64]=0x405e26,   m[r28{0} - 68]=0,   m[r28{0} - 72]=%pc,   %flags=LOGICALFLAGS32( r24{67} ),
                %ZF=LOGICALFLAGS32( r24{67} ),   %CF=LOGICALFLAGS32( r24{67} )
              Live variables: esp in proc _start
result:    0 *v** esp := -
dest is not lib
call:  100 {*32* eax, *v* r25, *v* r26, *v* esp} := CALL ExitProcess(
                *UINT* m[esp - 4] := m[esp - 4]
              )
              Reaching definitions: r8=r8{0},   r24=r24{170},   r25=r25{171},   r26=r26{172},   r27=r27{0},
                r28=r28{173} - 8,   r29=r29{0},   m[r28{0} - 4]=260,   m[r28{0} - 8]=0x405fe1,
                m[r28{0} - 12]=0x405fe1,   m[r28{0} - 16]=0x4060e6,   m[r28{0} - 20]=128,   m[r28{0} - 24]=0x405fe1,
                m[r28{0} - 28]=0,   m[r28{0} - 32]=0x405fe1,   m[r28{0} - 36]=0x4060e6,
                m[r28{0} - 40]=m[r28{0} - 40]{181},   m[r28{0} - 44]=m[r28{0} - 44]{182},
                m[r28{0} - 48]=m[r28{0} - 48]{183},   m[r28{0} - 52]=m[r28{0} - 52]{184},
                m[r28{0} - 56]=m[r28{0} - 56]{185},   m[r28{0} - 60]=m[r28{0} - 60]{186},
                m[r28{0} - 64]=m[r28{0} - 64]{187},   m[r28{0} - 68]=m[r28{0} - 68]{188},
                m[r28{0} - 72]=m[r28{0} - 72]{189},   %flags=LOGICALFLAGS32( r24{67} ),   %ZF=LOGICALFLAGS32( r24{67} )
                %CF=LOGICALFLAGS32( r24{67} )
              Live variables:  in proc _start
dest is not lib
call:  109 {*32* eax, *v* r25, *v* r26, *v* esp} := CALL GetSystemDirectoryA(
              )
              Reaching definitions: r8=r8{0},   r24=r24{46},   r25=r25{46},   r26=r26{46},   r27=r27{0},
                r28=r28{0} - 28,   r29=r29{0},   m[r28{0} - 4]=260,   m[r28{0} - 8]=0x405fe1,   m[r28{0} - 12]=0x405fe1
                m[r28{0} - 16]=0x4060e6,   m[r28{0} - 20]=260,   m[r28{0} - 24]=0x405edc,   m[r28{0} - 28]=%pc,
                m[r28{0} - 44]=m[r28{0} - 44]{0},   m[r28{0} - 48]=m[r28{0} - 48]{0},
                m[r28{0} - 52]=m[r28{0} - 52]{0},   m[r28{0} - 56]=m[r28{0} - 56]{0},
                m[r28{0} - 60]=m[r28{0} - 60]{0},   m[r28{0} - 64]=m[r28{0} - 64]{0},
                m[r28{0} - 68]=m[r28{0} - 68]{0},   m[r28{0} - 72]=m[r28{0} - 72]{0},
                %flags=LOGICALFLAGS32( r24{46} ),   %ZF=LOGICALFLAGS32( r24{46} ),   %CF=LOGICALFLAGS32( r24{46} )
              Live variables:  in proc _start
dest is not lib
call:  117 {*32* eax, *v* r25, *v* r26, *v* esp} := CALL lstrcatA(
                *LPSTR* local11 := ""
                *LPSTR* local12 := "\_dll.exe"
              )
              Reaching definitions: r8=r8{0},   r24=r24{109},   r25=r25{109},   r26=r26{109},   r27=r27{0},
                r28=r28{0} - 36,   r29=r29{0},   m[r28{0} - 4]=260,   m[r28{0} - 8]=0x405fe1,   m[r28{0} - 12]=0x405fe1
                m[r28{0} - 16]=0x4060e6,   m[r28{0} - 20]=260,   m[r28{0} - 24]=0x405edc,   m[r28{0} - 28]=0x40301c,
                m[r28{0} - 32]=0x405edc,   m[r28{0} - 36]=%pc,   m[r28{0} - 44]=m[r28{0} - 44]{0},
                m[r28{0} - 48]=m[r28{0} - 48]{0},   m[r28{0} - 52]=m[r28{0} - 52]{0},
                m[r28{0} - 56]=m[r28{0} - 56]{0},   m[r28{0} - 60]=m[r28{0} - 60]{0},
                m[r28{0} - 64]=m[r28{0} - 64]{0},   m[r28{0} - 68]=m[r28{0} - 68]{0},
                m[r28{0} - 72]=m[r28{0} - 72]{0},   %flags=LOGICALFLAGS32( r24{46} ),   %ZF=LOGICALFLAGS32( r24{46} ),
                %CF=LOGICALFLAGS32( r24{46} )
              Live variables:  in proc _start
dest is not lib
call:  125 {*32* eax, *v* r25, *v* r26, *v* esp} := CALL SetFileAttributesA(
              )
              Reaching definitions: r8=r8{0},   r24=r24{117},   r25=r25{117},   r26=r26{117},   r27=r27{0},
                r28=r28{0} - 36,   r29=r29{0},   m[r28{0} - 4]=260,   m[r28{0} - 8]=0x405fe1,   m[r28{0} - 12]=0x405fe1
                m[r28{0} - 16]=0x4060e6,   m[r28{0} - 20]=260,   m[r28{0} - 24]=0x405edc,   m[r28{0} - 28]=128,
                m[r28{0} - 32]=0x405edc,   m[r28{0} - 36]=%pc,   m[r28{0} - 44]=m[r28{0} - 44]{0},
                m[r28{0} - 48]=m[r28{0} - 48]{0},   m[r28{0} - 52]=m[r28{0} - 52]{0},
                m[r28{0} - 56]=m[r28{0} - 56]{0},   m[r28{0} - 60]=m[r28{0} - 60]{0},
                m[r28{0} - 64]=m[r28{0} - 64]{0},   m[r28{0} - 68]=m[r28{0} - 68]{0},
                m[r28{0} - 72]=m[r28{0} - 72]{0},   %flags=LOGICALFLAGS32( r24{46} ),   %ZF=LOGICALFLAGS32( r24{46} ),
                %CF=LOGICALFLAGS32( r24{46} )
              Live variables:  in proc _start
dest is not lib
call:  135 {*32* eax, *32* r25, *32* r26, *v** esp} := CALL proc10(
                *LPCVOID* local13 := 0x403026
                *DWORD* local14 := 0x2e00
              )
              Reaching definitions: r8=r8{0},   r24=r24{125},   r25=r25{125},   r26=r26{125},   r27=r27{0},
                r28=r28{0} - 48,   r29=r29{0},   m[r28{0} - 4]=260,   m[r28{0} - 8]=0x405fe1,   m[r28{0} - 12]=0x405fe1
                m[r28{0} - 16]=0x4060e6,   m[r28{0} - 20]=260,   m[r28{0} - 24]=0x405edc,   m[r28{0} - 28]=128,
                m[r28{0} - 32]=0x405edc,   m[r28{0} - 36]=0x2e00,   m[r28{0} - 40]=0x403026,   m[r28{0} - 44]=0x405edc,
                m[r28{0} - 48]=%pc,   m[r28{0} - 52]=m[r28{0} - 52]{0},   m[r28{0} - 56]=m[r28{0} - 56]{0},
                m[r28{0} - 60]=m[r28{0} - 60]{0},   m[r28{0} - 64]=m[r28{0} - 64]{0},
                m[r28{0} - 68]=m[r28{0} - 68]{0},   m[r28{0} - 72]=m[r28{0} - 72]{0},
                %flags=LOGICALFLAGS32( r24{46} ),   %ZF=LOGICALFLAGS32( r24{46} ),   %CF=LOGICALFLAGS32( r24{46} )
              Live variables: eax,  esp in proc _start
result:    0 *32* eax := -
result:    0 *v** esp := -
dest is not lib
call:  146 {*32* eax, *v* r25, *v* r26, *v* esp} := CALL FindWindowA(
                *LPCSTR* local13 := "Shell_TrayWnd"
                *LPCSTR* local15 := 0
              )
              Reaching definitions: r8=r8{0},   r24=r24{135},   r25=r25{135},   r26=r26{135},   r27=r27{0},
                r28=r28{0} - 44,   r29=r29{0},   m[r28{0} - 4]=260,   m[r28{0} - 8]=0x405fe1,   m[r28{0} - 12]=0x405fe1
                m[r28{0} - 16]=0x4060e6,   m[r28{0} - 20]=260,   m[r28{0} - 24]=0x405edc,   m[r28{0} - 28]=128,
                m[r28{0} - 32]=0x405edc,   m[r28{0} - 36]=0,   m[r28{0} - 40]=0x405e59,   m[r28{0} - 44]=%pc,
                m[r28{0} - 48]=%pc,   m[r28{0} - 52]=m[r28{0} - 52]{0},   m[r28{0} - 56]=m[r28{0} - 56]{0},
                m[r28{0} - 60]=m[r28{0} - 60]{0},   m[r28{0} - 64]=m[r28{0} - 64]{0},
                m[r28{0} - 68]=m[r28{0} - 68]{0},   m[r28{0} - 72]=m[r28{0} - 72]{0},
                %flags=LOGICALFLAGS32( r24{135} ),   %ZF=LOGICALFLAGS32( r24{135} ),   %CF=LOGICALFLAGS32( r24{135} )
              Live variables:  in proc _start
dest is not lib
call:  154 {*32* eax, *v* r25, *v* r26, *v* esp} := CALL GetWindowThreadProcessId(
              )
              Reaching definitions: r8=r8{0},   r24=r24{146},   r25=r25{146},   r26=r26{146},   r27=r27{0},
                r28=r28{0} - 44,   r29=r29{0},   m[r28{0} - 4]=260,   m[r28{0} - 8]=0x405fe1,   m[r28{0} - 12]=0x405fe1
                m[r28{0} - 16]=0x4060e6,   m[r28{0} - 20]=260,   m[r28{0} - 24]=0x405edc,   m[r28{0} - 28]=128,
                m[r28{0} - 32]=0x405edc,   m[r28{0} - 36]=0x405ed8,   m[r28{0} - 40]=r24{146},   m[r28{0} - 44]=%pc,
                m[r28{0} - 48]=%pc,   m[r28{0} - 52]=m[r28{0} - 52]{0},   m[r28{0} - 56]=m[r28{0} - 56]{0},
                m[r28{0} - 60]=m[r28{0} - 60]{0},   m[r28{0} - 64]=m[r28{0} - 64]{0},
                m[r28{0} - 68]=m[r28{0} - 68]{0},   m[r28{0} - 72]=m[r28{0} - 72]{0},
                %flags=LOGICALFLAGS32( r24{135} ),   %ZF=LOGICALFLAGS32( r24{135} ),   %CF=LOGICALFLAGS32( r24{135} )
              Live variables:  in proc _start
dest is not lib
call:  162 {*32* eax, *32* r25, *32* r26, *32* r27, *v** esp, *32* r29} := CALL proc13(
                *j8* al := param1
              )
              Reaching definitions: r8=r8{0},   r24=r24{154},   r25=r25{154},   r26=r26{154},   r27=r27{0},
                r28=r28{0} - 52,   r29=r29{0},   m[r28{0} - 4]=260,   m[r28{0} - 8]=0x405fe1,   m[r28{0} - 12]=0x405fe1
                m[r28{0} - 16]=0x4060e6,   m[r28{0} - 20]=260,   m[r28{0} - 24]=0x405edc,   m[r28{0} - 28]=128,
                m[r28{0} - 32]=0x405edc,   m[r28{0} - 36]=0x405ed8,   m[r28{0} - 40]=r24{146},
                m[r28{0} - 44]=0x405edc,   m[r28{0} - 48]=global35,   m[r28{0} - 52]=%pc,
                m[r28{0} - 56]=m[r28{0} - 56]{0},   m[r28{0} - 60]=m[r28{0} - 60]{0},
                m[r28{0} - 64]=m[r28{0} - 64]{0},   m[r28{0} - 68]=m[r28{0} - 68]{0},
                m[r28{0} - 72]=m[r28{0} - 72]{0},   %flags=LOGICALFLAGS32( r24{135} ),   %ZF=LOGICALFLAGS32( r24{135} )
                %CF=LOGICALFLAGS32( r24{135} )
              Live variables: esp in proc _start
result:    0 *v** esp := -
dest is not lib
call:  168 {*32* eax, *v* r25, *v* r26, *v* esp} := CALL ExitProcess(
                *UINT* m[esp - 4] := m[esp - 4]
              )
              Reaching definitions: r8=r8{174},   r24=r24{175},   r25=r25{176},   r26=r26{177},   r27=r27{178},
                r28=r28{179} - 8,   r29=r29{180},   m[r28{0} - 4]=260,   m[r28{0} - 8]=0x405fe1,
                m[r28{0} - 12]=0x405fe1,   m[r28{0} - 16]=0x4060e6,   m[r28{0} - 20]=260,   m[r28{0} - 24]=0x405edc,
                m[r28{0} - 28]=128,   m[r28{0} - 32]=0x405edc,   m[r28{0} - 36]=m[r28{0} - 36]{190},
                m[r28{0} - 40]=m[r28{0} - 40]{191},   m[r28{0} - 44]=0x405edc,   m[r28{0} - 48]=m[r28{0} - 48]{193},
                m[r28{0} - 52]=m[r28{0} - 52]{194},   m[r28{0} - 56]=m[r28{0} - 56]{0},
                m[r28{0} - 60]=m[r28{0} - 60]{0},   m[r28{0} - 64]=m[r28{0} - 64]{0},
                m[r28{0} - 68]=m[r28{0} - 68]{0},   m[r28{0} - 72]=m[r28{0} - 72]{0},
                %flags=LOGICALFLAGS32( r24{135} ),   %ZF=LOGICALFLAGS32( r24{135} ),   %CF=LOGICALFLAGS32( r24{135} )
              Live variables:  in proc _start
dest is not lib
call:   17 {*u32* eax_1, *j32* ecx, *32* r26} := CALL LoadLibraryA(
                *LPCSTR* local0 := param1
              )
              Reaching definitions: r8=r8{0},   r27=r27{0},   r28=r28{0} - 24,   r29=r28{0} - 4,   r30=m[r28{0} + 8]{0}
                r31=m[r28{0} + 4]{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r30{0},   m[r28{0} - 12]=r31{0},   m[r28{0} - 16]=r27{0},
                m[r28{0} - 20]=m[r28{0} + 4]{0},   m[r28{0} - 24]=%pc,   m[r28{0} - 28]=m[r28{0} - 28]{0},
                tmpb=tmpb{0}
              Live variables: eax_1,  ecx in proc proc17
result:    0 *u32* eax_1 := -
result:    0 *j32* ecx := -
dest is not lib
call:   47 {*u32* eax_1, *j32* ecx, *32* r26} := CALL GetProcAddress(
                *union* local1 := eax_1
                *8** local0 := edi
              )
              Reaching definitions: r8=0,   r24=0,   r25=r25{88},   r26=r26{73},   r27=r24{17},
                r28=(r28{0} - 16) - 12,   r29=r28{0} - 4,   r30=r30{75},   r31=r31{89},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=r30{0},   m[r28{0} - 12]=r31{0},   m[r28{0} - 16]=r27{0},   m[r28{0} - 20]=r31{89},
                m[r28{0} - 24]=r24{17},   m[r28{0} - 28]=%pc,   tmp1=tmp1{77},   tmpb=tmpb{37},
                %flags=SUBFLAGS8( m[r31{89}], 0, tmpb{37} ),   %ZF=tmpb{37} = 0,   %CF=m[r31{89}] <u 0
              Live variables: eax_1,  ecx in proc proc17
result:    0 *u32* eax_1 := -
result:    0 *j32* ecx := -
