INFO  an - ### holdec 1.1 Copyright 2003-2012 Raimar Falke
INFO  an - Using ./malware_via_email/malware_1079/ia32_pe/subject.exe as executable
read image                              : ............................................................ [ done ]
INFO  fG - Detected PE (Portable Executable)
INFO  ks - wrote ./malware_via_email/malware_1079/ia32_pe/subject.exe.info
INFO  fG - disassembleAndWrite: start a new loop with 1 extra block starts
Disassemble                             : ............................................................ [ done ]
INFO  fG - disassembleAndWrite: running multiline
INFO  ks - wrote ./malware_via_email/malware_1079/ia32_pe/subject.exe.info
Preprocessing 3419 asm lines            : ............................................................ [ done ]
INFO  ks - wrote ./malware_via_email/malware_1079/ia32_pe/subject.exe.info
INFO  fG - disassembleAndWrite: found no new addresses. will stop now.
INFO  ks - wrote ./malware_via_email/malware_1079/ia32_pe/subject.exe.info
Preprocessing 4027 asm lines            : ............................................................ [ done ]
INFO  ks - wrote ./malware_via_email/malware_1079/ia32_pe/subject.exe.info
INFO  fG - reading all asm lines ...
INFO  fG - ... read 4027 asm lines
WARN  w - Address 00404000.0 is excluded by the address filter. Maybe outside text section?
create blocks                           : ............................................................ [ done ]
init blocks                             : ............................................................ [ done ]
Writing 38 methods to cache             : ............................................................ [ done ]
INFO  an - will decompile 38 functions
decompile F_0040100a                    : ............................................................ [ done ]
decompile F_0040102c                    : .WARN  ag - Referencing unknown line 00402b19.0
WARN  ag - Referencing unknown line 00403875.0
WARN  ag - Referencing unknown line 00403875.0
WARN  ag - Referencing unknown line 00403875.0
WARN  ag - Referencing unknown line 00402d2b.0
WARN  ag - Referencing unknown line 00402704.0
WARN  ag - Referencing unknown line 004027f7.0
WARN  ag - Referencing unknown line 00402ad3.0
WARN  ag - Referencing unknown line 0040210b.0
WARN  ag - Referencing unknown line 00401f27.0
WARN  ag - Referencing unknown line 00402b5b.0
WARN  ag - Referencing unknown line 00403801.0
WARN  ag - Referencing unknown line 00403801.0
WARN  ag - Referencing unknown line 00403801.0
WARN  ag - Referencing unknown line 00403801.0
WARN  ag - Referencing unknown line 00403801.0
WARN  ag - Referencing unknown line 004037ec.0
WARN  ag - Referencing unknown line 00403801.0
WARN  ag - Referencing unknown line 004037ec.0
WARN  ag - Referencing unknown line 00403801.0
WARN  ag - Referencing unknown line 004037ec.0
WARN  ag - Referencing unknown line 00403801.0
WARN  ag - Referencing unknown line 004037ec.0
WARN  ag - Referencing unknown line 00403801.0
WARN  ag - Referencing unknown line 004037ec.0
WARN  ag - Referencing unknown line 00403801.0
WARN  ag - Referencing unknown line 004037ec.0
WARN  ag - Referencing unknown line 00403801.0
WARN  ag - Referencing unknown line 004037ec.0
WARN  ag - Referencing unknown line 00403801.0
WARN  ag - Referencing unknown line 004037ec.0
WARN  ag - Referencing unknown line 00403801.0
WARN  ag - Referencing unknown line 004037ec.0
WARN  ag - Referencing unknown line 00403801.0
WARN  ag - Referencing unknown line 004037ec.0
WARN  ag - Referencing unknown line 00403801.0
WARN  ag - Referencing unknown line 00403801.0
WARN  ag - Referencing unknown line 00403801.0
WARN  ag - Referencing unknown line 00403801.0
WARN  ag - Referencing unknown line 00403801.0
WARN  ag - Referencing unknown line 00403801.0
WARN  ag - Referencing unknown line 004037c7.0
WARN  ag - Referencing unknown line 00403801.0
WARN  ag - Referencing unknown line 00403801.0
WARN  ag - Referencing unknown line 00403801.0
WARN  ag - Referencing unknown line 004037c7.0
WARN  ag - Referencing unknown line 00403801.0
WARN  ag - Referencing unknown line 00403801.0
WARN  ag - Referencing unknown line 00403801.0
WARN  ag - Referencing unknown line 004037c7.0
WARN  ag - Referencing unknown line 00402969.0
WARN  ag - Referencing unknown line 00402a3a.0
WARN  ag - Referencing unknown line 004037c7.0
WARN  ag - Referencing unknown line 004029e1.0
WARN  ag - Referencing unknown line 004024a5.0
WARN  ag - Referencing unknown line 00403875.0
WARN  ag - Referencing unknown line 004037c7.0
WARN  ag - Referencing unknown line 004037c7.0
WARN  ag - Referencing unknown line 0040379e.0
WARN  ag - Referencing unknown line 0040377c.0
WARN  ag - Referencing unknown line 0040377c.0
WARN  ag - Referencing unknown line 004037c7.0
WARN  ag - Referencing unknown line 00403875.0
WARN  ag - Referencing unknown line 00403875.0
WARN  ag - Referencing unknown line 00403875.0
WARN  ag - Referencing unknown line 00402891.0
WARN  ag - Referencing unknown line 0040377c.0
WARN  ag - Referencing unknown line 004037c7.0
WARN  ag - Referencing unknown line 004037c7.0
WARN  ag - Referencing unknown line 00401f27.0
WARN  ag - Referencing unknown line 00402b5b.0
WARN  ag - Referencing unknown line 004037c7.0
WARN  ag - Referencing unknown line 0040379e.0
WARN  ag - Referencing unknown line 0040377c.0
WARN  ag - Referencing unknown line 0040377c.0
WARN  ag - Referencing unknown line 0040377c.0
WARN  ag - Referencing unknown line 0040377c.0
WARN  ag - Referencing unknown line 0040377c.0
WARN  ag - Referencing unknown line 0040377c.0
WARN  ag - Referencing unknown line 00401b85.0
WARN  ag - Referencing unknown line 00403762.0
..INFO  ks - wrote ./malware_via_email/malware_1079/ia32_pe/subject.exe.info
......WARN  ac - Block 4 is already known to have a starting stack offset of -244 but when called from 3 it has an offset of -252
WARN  ac - Block 66 is already known to have a starting stack offset of -224 but when called from 6 it has an offset of -252
WARN  ac - Block 19 is already known to have a starting stack offset of -324 but when called from 18 it has an offset of -332
WARN  ac - Block 18 is already known to have a starting stack offset of -332 but when called from 21 it has an offset of -356
WARN  ac - Block 66 is already known to have a starting stack offset of -252 but when called from 23 it has an offset of -336
WARN  ac - Block 43 is already known to have a starting stack offset of -352 but when called from 42 it has an offset of -376
WARN  ac - Block 65 is already known to have a starting stack offset of -352 but when called from 64 it has an offset of -360
WARN  ac - Block 66 is already known to have a starting stack offset of -336 but when called from 65 it has an offset of -360
WARN  ac - Block 63 is already known to have a starting stack offset of -352 but when called from 55 it has an offset of -360
WARN  ac - Block 63 is already known to have a starting stack offset of -360 but when called from 58 it has an offset of -396
WARN  ac - Block 62 is already known to have a starting stack offset of -444 but when called from 48 it has an offset of -360
WARN  ac - Block 62 is already known to have a starting stack offset of -444 but when called from 49 it has an offset of -360
WARN  ac - Block 45 is already known to have a starting stack offset of -352 but when called from 44 it has an offset of -444
WARN  ac - Block 62 is already known to have a starting stack offset of -444 but when called from 60 it has an offset of -360
WARN  ac - Block 66 is already known to have a starting stack offset of -360 but when called from 30 it has an offset of -336
WARN  ac - Block 13 is already known to have a starting stack offset of -332 but when called from 16 it has an offset of -348
WARN  ac - Block 14 is already known to have a starting stack offset of -324 but when called from 13 it has an offset of -348
........ failed: A non-current expression of a variable is used in block L46 in (void) F_CALL(intern_redirectCall, LOAD(ADD(SEGMENT2ADDR(reg_pp29), 4210720))): The current setter is reg_zj18 while [reg_pp29] was found. Related expressions are [reg_zj21, reg_zj22, reg_zj20, reg_zj12, reg_zj13, reg_zj14, reg_zj15, reg_pp33, reg_pp43, reg_pp29, reg_zj19, reg_zj18, reg_zj17, reg_zj16]
decompile F_00401b85                    : .WARN  ag - Referencing unknown line 0040388e.0
WARN  ag - Referencing unknown line 00401dce.0
........WARN  ac - Block 15 is already known to have a starting stack offset of -848 but when called from 5 it has an offset of -936
WARN  ac - Block 15 is already known to have a starting stack offset of -936 but when called from 7 it has an offset of -964
WARN  ac - Block 15 is already known to have a starting stack offset of -964 but when called from 9 it has an offset of -984
WARN  ac - Block 12 is already known to have a starting stack offset of -984 but when called from 11 it has an offset of -1004
WARN  ac - Block 15 is already known to have a starting stack offset of -984 but when called from 14 it has an offset of -1028
................................................... [ done ]
decompile F_00401dce                    : .WARN  ag - Referencing unknown line 004035f9.0
WARN  ag - Referencing unknown line 00403875.0
........WARN  ac - Block 10 is already known to have a starting stack offset of -140 but when called from 2 it has an offset of -160
WARN  ac - Block 10 is already known to have a starting stack offset of -160 but when called from 4 it has an offset of -184
WARN  ac - Block 2 is already known to have a starting stack offset of -140 but when called from 5 it has an offset of -184
WARN  ac - Block 10 is already known to have a starting stack offset of -184 but when called from 6 it has an offset of -200
WARN  ac - Block 10 is already known to have a starting stack offset of -200 but when called from 7 it has an offset of -236
WARN  ac - Block 10 is already known to have a starting stack offset of -236 but when called from 8 it has an offset of -256
WARN  ac - Block 10 is already known to have a starting stack offset of -256 but when called from 9 it has an offset of -276
.............................WARN  d - may result in wrong values
WARN  d -   reg_pp7 = PHI(reg_var13, reg_var10) in Block2
WARN  d -   reg_var13 = ADD(reg_pp7, -44) in Block4
...................... [ done ]
decompile F_00401f27                    : .WARN  ag - Referencing unknown line 00403875.0
WARN  ag - Referencing unknown line 00402891.0
WARN  ag - Referencing unknown line 00403762.0
WARN  ag - Referencing unknown line 00403875.0
WARN  ag - Referencing unknown line 0040388e.0
WARN  ag - Referencing unknown line 00403875.0
WARN  ag - Referencing unknown line 00402891.0
WARN  ag - Referencing unknown line 004038c1.0
WARN  ag - Referencing unknown line 00403762.0
........WARN  ac - Block 2 is already known to have a starting stack offset of -108 but when called from 1 it has an offset of -128
WARN  ac - Block 12 is already known to have a starting stack offset of -132 but when called from 9 it has an offset of -148
WARN  ac - Block 12 is already known to have a starting stack offset of -148 but when called from 10 it has an offset of -152
WARN  ac - Block 8 is already known to have a starting stack offset of -120 but when called from 7 it has an offset of -152
WARN  ac - Block 13 is already known to have a starting stack offset of -120 but when called from 12 it has an offset of -152
.............................WARN  d - may result in wrong values
WARN  d -   reg_pp13 = PHI(reg_var12, reg_var10) in Block2
WARN  d -   reg_var12 = ADD(reg_pp13, -20) in Block3
WARN  d - may result in wrong values
WARN  d -   reg_pp14 = PHI(reg_var24, reg_var20) in Block8
WARN  d -   reg_var24 = ADD(reg_pp14, -32) in Block11
...................... [ done ]
decompile F_0040210b                    : .WARN  ag - Referencing unknown line 00403875.0
WARN  ag - Referencing unknown line 00403801.0
WARN  ag - Referencing unknown line 00403801.0
........WARN  ac - Block 5 is already known to have a starting stack offset of -40 but when called from 4 it has an offset of -68
WARN  ac - Block 10 is already known to have a starting stack offset of -40 but when called from 9 it has an offset of -68
................................................... [ done ]
decompile F_00402209                    : .WARN  ag - Referencing unknown line 00403801.0
WARN  ag - Referencing unknown line 00403875.0
WARN  ag - Referencing unknown line 00403875.0
WARN  ag - Referencing unknown line 00403875.0
WARN  ag - Referencing unknown line 00403875.0
WARN  ag - Referencing unknown line 00403801.0
WARN  ag - Referencing unknown line 00403801.0
WARN  ag - Referencing unknown line 00403801.0
WARN  ag - Referencing unknown line 004038e3.0
WARN  ag - Referencing unknown line 004038e3.0
........WARN  ac - Block 2 is already known to have a starting stack offset of -60 but when called from 1 it has an offset of -108
................................................... [ done ]
decompile F_0040234b                    : .WARN  ag - Referencing unknown line 004037c7.0
WARN  ag - Referencing unknown line 00403875.0
WARN  ag - Referencing unknown line 0040377c.0
WARN  ag - Referencing unknown line 004038f4.0
WARN  ag - Referencing unknown line 004037c7.0
WARN  ag - Referencing unknown line 004038f4.0
........WARN  ac - Block 12 is already known to have a starting stack offset of -68 but when called from 6 it has an offset of -20
WARN  ac - Block 12 is already known to have a starting stack offset of -68 but when called from 11 it has an offset of -60
................................................... [ done ]
decompile F_004024a5                    : .WARN  ag - Referencing unknown line 004037c7.0
WARN  ag - Referencing unknown line 004037c7.0
WARN  ag - Referencing unknown line 004037c7.0
WARN  ag - Referencing unknown line 0040379e.0
WARN  ag - Referencing unknown line 004037c7.0
WARN  ag - Referencing unknown line 0040379e.0
WARN  ag - Referencing unknown line 0040377c.0
WARN  ag - Referencing unknown line 004037c7.0
WARN  ag - Referencing unknown line 0040379e.0
WARN  ag - Referencing unknown line 0040379e.0
WARN  ag - Referencing unknown line 0040379e.0
WARN  ag - Referencing unknown line 0040377c.0
WARN  ag - Referencing unknown line 0040377c.0
WARN  ag - Referencing unknown line 004037c7.0
WARN  ag - Referencing unknown line 004037c7.0
WARN  ag - Referencing unknown line 004037c7.0
WARN  ag - Referencing unknown line 004037c7.0
WARN  ag - Referencing unknown line 00402209.0
WARN  ag - Referencing unknown line 0040234b.0
........WARN  ac - Block 24 is already known to have a starting stack offset of -40 but when called from 23 it has an offset of -48
WARN  ac - Block 20 is already known to have a starting stack offset of -60 but when called from 19 it has an offset of -68
WARN  ac - Block 24 is already known to have a starting stack offset of -48 but when called from 22 it has an offset of -68
................................................... [ done ]
decompile F_00402704                    : .........WARN  ac - Block 11 is already known to have a starting stack offset of -40 but when called from 3 it has an offset of -48
WARN  ac - Block 11 is already known to have a starting stack offset of -48 but when called from 5 it has an offset of -56
WARN  ac - Block 11 is already known to have a starting stack offset of -56 but when called from 7 it has an offset of -100
WARN  ac - Block 11 is already known to have a starting stack offset of -100 but when called from 10 it has an offset of -116
................................................... [ done ]
decompile F_004027f7                    : .........WARN  ac - Block 10 is already known to have a starting stack offset of -44 but when called from 6 it has an offset of -72
................................................... [ done ]
decompile F_00402891                    : ......................................WARN  d - may result in wrong values
WARN  d -   reg_pp25 = PHI(reg_16_local5, reg_16_local3) in Block11
WARN  d -   reg_16_local5 = ADD(reg_pp25, -1) in Block12
WARN  d - may result in wrong values
WARN  d -   reg_pp24 = PHI(reg_4_local0, reg_4_local2) in Block11
WARN  d -   reg_4_local2 = ADD(reg_pp24, 1) in Block12
...................... [ done ]
decompile F_00402969                    : ... failed: Unknown macro _aas
decompile F_004029e1                    : .........WARN  ac - Block 5 is already known to have a starting stack offset of -8 but when called from 1 it has an offset of -12
WARN  ac - Block 5 is already known to have a starting stack offset of -12 but when called from 2 it has an offset of -16
WARN  ac - Block 5 is already known to have a starting stack offset of -16 but when called from 3 it has an offset of -20
WARN  ac - Block 5 is already known to have a starting stack offset of -20 but when called from 4 it has an offset of -24
................................................... [ done ]
decompile F_00402a3a                    : ............................................................ [ done ]
decompile F_00402ad3                    : .........WARN  ac - Block 5 is already known to have a starting stack offset of -8 but when called from 3 it has an offset of -28
................................................... [ done ]
decompile F_00402b19                    : .WARN  ag - Referencing unknown line 00403762.0
........................................................... [ done ]
decompile F_00402b5b                    : ............................................................ [ done ]
decompile F_00402d2b                    : .WARN  ag - Referencing unknown line 004030d2.0
WARN  ag - Referencing unknown line 004030d2.0
WARN  ag - Referencing unknown line 004030d2.0
WARN  ag - Referencing unknown line 004030d2.0
WARN  ag - Referencing unknown line 004030d2.0
WARN  ag - Referencing unknown line 004030d2.0
WARN  ag - Referencing unknown line 004030d2.0
WARN  ag - Referencing unknown line 004030d2.0
WARN  ag - Referencing unknown line 004030d2.0
WARN  ag - Referencing unknown line 004030d2.0
WARN  ag - Referencing unknown line 004030d2.0
WARN  ag - Referencing unknown line 004030d2.0
WARN  ag - Referencing unknown line 004030d2.0
WARN  ag - Referencing unknown line 004030d2.0
WARN  ag - Referencing unknown line 004030d2.0
WARN  ag - Referencing unknown line 004030d2.0
WARN  ag - Referencing unknown line 004030d2.0
WARN  ag - Referencing unknown line 004030d2.0
WARN  ag - Referencing unknown line 004030d2.0
WARN  ag - Referencing unknown line 004030d2.0
WARN  ag - Referencing unknown line 004030d2.0
WARN  ag - Referencing unknown line 004030d2.0
WARN  ag - Referencing unknown line 004030d2.0
WARN  ag - Referencing unknown line 004030d2.0
WARN  ag - Referencing unknown line 004030d2.0
WARN  ag - Referencing unknown line 004030d2.0
WARN  ag - Referencing unknown line 004030d2.0
WARN  ag - Referencing unknown line 004030d2.0
WARN  ag - Referencing unknown line 004030d2.0
WARN  ag - Referencing unknown line 004030d2.0
WARN  ag - Referencing unknown line 004030d2.0
WARN  ag - Referencing unknown line 004030d2.0
WARN  ag - Referencing unknown line 004030d2.0
WARN  ag - Referencing unknown line 004030d2.0
WARN  ag - Referencing unknown line 004030d2.0
WARN  ag - Referencing unknown line 004030d2.0
WARN  ag - Referencing unknown line 004030d2.0
WARN  ag - Referencing unknown line 004030d2.0
WARN  ag - Referencing unknown line 004030d2.0
WARN  ag - Referencing unknown line 004030d2.0
WARN  ag - Referencing unknown line 004030d2.0
WARN  ag - Referencing unknown line 004030d2.0
WARN  ag - Referencing unknown line 004030d2.0
WARN  ag - Referencing unknown line 004030d2.0
WARN  ag - Referencing unknown line 004030d2.0
WARN  ag - Referencing unknown line 004030d2.0
WARN  ag - Referencing unknown line 004030d2.0
WARN  ag - Referencing unknown line 004030d2.0
WARN  ag - Referencing unknown line 004030d2.0
WARN  ag - Referencing unknown line 004030d2.0
WARN  ag - Referencing unknown line 004030d2.0
WARN  ag - Referencing unknown line 004030d2.0
WARN  ag - Referencing unknown line 004030d2.0
WARN  ag - Referencing unknown line 004030d2.0
WARN  ag - Referencing unknown line 004030d2.0
WARN  ag - Referencing unknown line 004030d2.0
WARN  ag - Referencing unknown line 004030d2.0
WARN  ag - Referencing unknown line 004030d2.0
WARN  ag - Referencing unknown line 004030d2.0
WARN  ag - Referencing unknown line 004030d2.0
WARN  ag - Referencing unknown line 004030d2.0
WARN  ag - Referencing unknown line 004030d2.0
........................................................... [ done ]
decompile F_004030d2                    : ............................................................ [ done ]
decompile F_004035f9                    : ............................................................ [ done ]
decompile F_004036b0                    : .WARN  ag - Referencing unknown line 00403875.0
WARN  ag - Referencing unknown line 00403875.0
WARN  ag - Referencing unknown line 004038c1.0
WARN  ag - Referencing unknown line 0040388e.0
WARN  ag - Referencing unknown line 004038c1.0
WARN  ag - Referencing unknown line 00403762.0
........................................................... [ done ]
decompile F_00403762                    : .........WARN  ac - Block 2 is already known to have a starting stack offset of 0 but when called from 1 it has an offset of -12
................................................... [ done ]
decompile F_0040377c                    : .WARN  ag - Referencing unknown line 004037ec.0
........................................................... [ done ]
decompile F_0040379e                    : ............................................................ [ done ]
decompile F_004037c7                    : ......................................WARN  d - may result in wrong values
WARN  d -   reg_pp8 = PHI(reg_var21, reg_var20) in Block3
WARN  d -   reg_var21 = ADD(reg_pp8, 1) in Block2
WARN  d - may result in wrong values
WARN  d -   reg_pp7 = PHI(reg_var11, reg_var10) in Block3
WARN  d -   reg_var11 = ADD(reg_pp7, 1) in Block2
...................... [ done ]
decompile F_004037ec                    : ............................................................ [ done ]
decompile F_00403801                    : ................. failed: A non-current expression of a variable is used in block L5 in reg_zd0 = LOAD(ADD(reg_pp7, SEGMENT2ADDR(reg_pp6))): The current setter is reg_d1 while [reg_pp7] was found. Related expressions are [reg_d0, reg_pp7, reg_pp21, reg_pp19, reg_d2, reg_d1]
decompile F_00403875                    : ............................................................ [ done ]
decompile F_0040388e                    : ...................................................WARN  o -   load size differs from loaded size for ARG_1 vs. LOAD(ADDR(ARG_1))
WARN  o -   load size differs from loaded size for ARG_1 vs. LOAD(ADDR(ARG_1))
WARN  o -   load size differs from loaded size for ARG_1 vs. LOAD(ADDR(ARG_1))
WARN  o -   load size differs from loaded size for ARG_1 vs. LOAD(ADDR(ARG_1))
WARN  o -   load size differs from loaded size for ARG_1 vs. LOAD(ADDR(ARG_1))
......... [ done ]
decompile F_004038c1                    : ............................................................ [ done ]
decompile F_004038e3                    : .WARN  ag - Referencing unknown line 004039ef.0
........................................................... [ done ]
decompile F_004038f4                    : ............................................................ [ done ]
decompile F_00403903                    : .WARN  ag - Referencing unknown line 00403af7.0
WARN  ag - Referencing unknown line 00403af7.0
WARN  ag - Referencing unknown line 0040102c.0
WARN  ag - Referencing unknown line 00403ac2.0
........WARN  ac - Block 6 is already known to have a starting stack offset of -72 but when called from 5 it has an offset of -76
........ failed: A non-current expression of a variable is used in block L17 in if(CMP(MARKER_UNSIGNED(reg_pp16), <, MARKER_UNSIGNED(reg_zb10))) goto L20: The current setter is reg_zd3 while [reg_pp16] was found. Related expressions are [reg_pp15, reg_pp10, reg_zd0, reg_zd1, reg_zd2, reg_zd3, reg_pp16]
decompile F_004039ef                    : ................. failed: A non-current expression of a variable is used in block L19 in if(CMP(LOAD(ADD(reg_pp8, SEGMENT2ADDR(reg_zj1))), !=, 48)) goto L32: The current setter is reg_a10 while [reg_pp8] was found. Related expressions are [reg_a9, reg_a3, reg_pp9, reg_a6, reg_pp8, reg_a7, reg_pp7, reg_a13, reg_a14, reg_a10, reg_a11, reg_pp17]
decompile F_00403ac2                    : .WARN  ag - Referencing unknown line 00403b1e.0
.....................................WARN  d - may result in wrong values
WARN  d -   reg_pp8 = PHI(reg_var12, reg_var10) in Block5
WARN  d -   reg_var12 = ADD(reg_pp8, 4) in Block4
..... failed: holdec.dn cannot be cast to holdec.cX
decompile F_00403af7                    : ......................................WARN  d - may result in wrong values
WARN  d -   reg_pp8 = PHI(reg_var12, reg_var10) in Block5
WARN  d -   reg_var12 = ADD(reg_pp8, 4) in Block4
...................... [ done ]
decompile F_00403b1e                    : ............................................................ [ done ]
