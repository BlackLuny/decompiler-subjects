Unknown library function AddAce
Unknown library function AreAllAccessesGranted
Unknown library function VirtualProtect
assgn   28 *32* %pc := m[0x403004]
is readonly
assgn   40 *32* %pc := m[0x403000]
is readonly
assgn   52 *32* %pc := m[0x40300c]
is readonly
assgn   66 *32* %pc := m[0x403010]
is readonly
assgn  191 *32* %pc := m[0x403014]
is readonly
assgn  237 *32* %pc := m[0x40301c]
is readonly
assgn  267 *32* %pc := m[0x403018]
is readonly
after removing matching assigns (%pc).
WARNING: size 0x10 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x10 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x10 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x10 meet with /*signed?*/int; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 20 to local table
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 32 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 52 to local table
in proc _start adding addrExp r28{0} - 56 to local table
in proc _start adding addrExp r28{0} - 56 to local table
in proc _start adding addrExp r28{0} - 60 to local table
in proc _start adding addrExp r28{0} - 56 to local table
in proc _start adding addrExp r28{0} - 60 to local table
in proc _start adding addrExp r28{0} - 64 to local table
in proc _start adding addrExp r28{0} - 68 to local table
in proc _start adding addrExp r28{0} - 72 to local table
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 48 to local table
finding final parameters for _start
potential param r28
found new parameter r28
potential param r29
found new parameter r29
potential param r31
found new parameter r31
potential param tmph
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 48 to local table
local ecx has type unsigned int that doesn't agree with type of define void of a library, why?
local edx has type unsigned int that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local eax has type __size32 that doesn't agree with type of define /*signed?*/int of a library, why?
local eax has type /*signed?*/int that doesn't agree with type of define __size32 of a library, why?
local ecx has type void that doesn't agree with type of define unsigned int of a library, why?
local edx has type void that doesn't agree with type of define unsigned int of a library, why?
local eax has type __size32 that doesn't agree with type of define unsigned int of a library, why?
local eax has type unsigned int that doesn't agree with type of define __size32 of a library, why?
local ecx has type unsigned int that doesn't agree with type of define void of a library, why?
local edx has type unsigned int that doesn't agree with type of define void of a library, why?
dest is not lib
call:   29 {*32* eax_1, *v* ecx, *v* edx, *v* esp} := CALL AddAce(
              )
              Reaching definitions: r2=truncu(32,16,r25{0} + (r26{0} * 2)),   r9=r9{0},   r25=r25{0},
                r26=r25{0} + (r26{0} * 2),   r27=r27{0},   r28=r28{0} - 48,   r29=r29{0},   r30=0,   r31=r31{0},
                m[r28{0} - 12]=r27{0},   m[r28{0} - 16]=r29{0},   m[r28{0} - 20]=r30{0},   m[r28{0} - 24]=r31{0},
                m[r28{0} - 28]=0,   m[r28{0} - 32]=0,   m[r28{0} - 36]=0,   m[r28{0} - 40]=0,   m[r28{0} - 44]=0,
                m[r28{0} - 48]=%pc,   tmp1=r28{0},   tmph=tmph{0},   %flags=LOGICALFLAGS32( 0 ),
                %ZF=LOGICALFLAGS32( 0 ),   %CF=LOGICALFLAGS32( 0 )
              Live variables: eax_1 in proc _start
result:    0 *32* eax_1 := -
dest is not lib
call:   41 {*j32* eax, *v* ecx, *v* edx, *v* esp} := CALL AreAllAccessesGranted(
              )
              Reaching definitions: r2=truncu(32,16,r25{0} + (r26{0} * 2)),   r9=r9{0},   r24=r24{29},   r25=r25{29},
                r26=r26{29},   r27=r24{29} + 35,   r28=r28{0} - 56,   r29=r29{0},   r30=0,   r31=r31{0},
                m[r28{0} - 12]=r27{0},   m[r28{0} - 16]=r29{0},   m[r28{0} - 20]=r30{0},   m[r28{0} - 24]=r31{0},
                m[r28{0} - 28]=0,   m[r28{0} - 32]=0,   m[r28{0} - 36]=0,   m[r28{0} - 40]=0,   m[r28{0} - 44]=0,
                m[r28{0} - 48]=-1,   m[r28{0} - 52]=-1,   m[r28{0} - 56]=%pc,   tmp1=r24{29},   tmph=tmph{0},
                %flags=ADDFLAGS32( r24{29}, 35, r24{29} + 35 ),   %ZF=ADDFLAGS32( r24{29}, 35, r24{29} + 35 ),
                %CF=ADDFLAGS32( r24{29}, 35, r24{29} + 35 )
              Live variables: eax in proc _start
result:    0 *j32* eax := -
dest is not lib
call:   53 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL CloseHandle(
                *HANDLE* local0 := 89
              )
              Reaching definitions: r2=truncu(32,16,r25{0} + (r26{0} * 2)),   r9=r9{0},   r24=r24{41},   r25=r25{41},
                r26=r26{41},   r27=r27{270},   r28=r28{0} - 60,   r29=r29{0},   r30=0,   r31=r31{0},
                m[r28{0} - 12]=r27{0},   m[r28{0} - 16]=r29{0},   m[r28{0} - 20]=r30{0},   m[r28{0} - 24]=r31{0},
                m[r28{0} - 28]=0,   m[r28{0} - 32]=0,   m[r28{0} - 36]=0,   m[r28{0} - 40]=0,   m[r28{0} - 44]=0,
                m[r28{0} - 48]=-1,   m[r28{0} - 52]=-1,   m[r28{0} - 56]=89,   m[r28{0} - 60]=%pc,   tmp1=tmp1{271},
                tmph=tmph{0},   %flags=%flags{272},   %ZF=%ZF{273},   %CF=%CF{274}
              Live variables:  in proc _start
dest is not lib
call:   67 {*32* eax, *u32* ecx, *u32* edx, *v** esp_1} := CALL VirtualProtect(
              )
              Reaching definitions: r0=truncu(32,16,r28{0} - 36),   r2=truncu(32,16,r25{0} + (r26{0} * 2)),   r9=r9{0},
                r24=r28{0} - 36,   r25=r25{53},   r26=r26{53},   r27=r27{270},   r28=r28{0} - 72,   r29=r29{0},   r30=0
                r31=r31{0},   m[r28{0} - 12]=r27{0},   m[r28{0} - 16]=r29{0},   m[r28{0} - 20]=r30{0},
                m[r28{0} - 24]=r31{0},   m[r28{0} - 28]=0,   m[r28{0} - 32]=0,   m[r28{0} - 36]=0,   m[r28{0} - 40]=0,
                m[r28{0} - 44]=0,   m[r28{0} - 48]=-1,   m[r28{0} - 52]=-1,   m[r28{0} - 56]=r28{0} - 36,
                m[r28{0} - 60]=64,   m[r28{0} - 64]=0x3000,   m[r28{0} - 68]=0x401000,   m[r28{0} - 72]=%pc,
                tmp1=tmp1{271},   tmph=tmph{0},   %flags=%flags{272},   %ZF=%ZF{273},   %CF=%CF{274}
              Live variables: ecx,  edx,  esp_1 in proc _start
result:    0 *u32* ecx := -
result:    0 *u32* edx := -
result:    0 *v** esp_1 := -
dest is not lib
call:  192 {*u32* eax_5, *u32* ecx, *u32* edx, *v* esp} := CALL LoadLibraryA(
                *LPCSTR* m[esp_2 - 4] := m[esp_2 - 4]
              )
              Reaching definitions: r0=r0{339},   r2=r2{340},   r9=truncu(32,8,r25{181} + 0x400f40),   r24=r24{342},
                r25=r25{181} + 0x400f40,   r26=r26{344},   r27=0x400f40,   r28=r28{345} - 8,   r29=r29{346},
                r30=r30{347},   r31=r31{348},   m[r28{0} - 12]=r27{0},   m[r28{0} - 16]=r29{0},   m[r28{0} - 20]=r30{0}
                m[r28{0} - 24]=r31{0},   m[r28{0} - 28]=0,   m[r28{0} - 32]=0,   m[r28{0} - 36]=0,   m[r28{0} - 40]=0,
                m[r28{0} - 44]=0,   m[r28{0} - 48]=0x401c9c,   m[r28{0} - 52]=-1,   m[r28{0} - 56]=r28{0} - 36,
                m[r28{0} - 60]=64,   m[r28{0} - 64]=0x3000,   m[r28{0} - 68]=0x401000,   m[r28{0} - 72]=%pc,
                tmp1=r25{181},   tmph=tmph{335},   %flags=ADDFLAGS32( r25{181}, 0x400f40, r25{181} + 0x400f40 ),
                %ZF=ADDFLAGS32( r25{181}, 0x400f40, r25{181} + 0x400f40 ),
                %CF=ADDFLAGS32( r25{181}, 0x400f40, r25{181} + 0x400f40 )
              Live variables: eax_5,  ecx in proc _start
result:    0 *u32* eax_5 := -
result:    0 *u32* ecx := -
dest is not lib
call:  238 {*u32* eax, *u32* ecx, *u32* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* m[esp_2 - 8] := m[esp_2 - 8]
                *c** m[esp_2 - 4] := m[esp_2 - 4]
              )
              Reaching definitions: r0=r0{366},   r2=truncu(32,16,r26{205}),   r9=r9{367},   r24=r24{368},
                r25=r25{369},   r26=r26{358},   r27=0x400f40,   r28=(r28{345} - 4) - 8,   r29=r24{192},   r30=r30{360},
                r31=r31{361},   m[r28{0} - 12]=r27{0},   m[r28{0} - 16]=r29{0},   m[r28{0} - 20]=r30{0},
                m[r28{0} - 24]=r31{0},   m[r28{0} - 28]=0,   m[r28{0} - 32]=0,   m[r28{0} - 36]=0,   m[r28{0} - 40]=0,
                m[r28{0} - 44]=0,   m[r28{0} - 48]=0x401c9c,   m[r28{0} - 52]=-1,   m[r28{0} - 56]=r28{0} - 36,
                m[r28{0} - 60]=64,   m[r28{0} - 64]=0x3000,   m[r28{0} - 68]=0x401000,   m[r28{0} - 72]=%pc,
                tmp1=r24{219},   tmph=tmph{335},   %flags=LOGICALFLAGS32( r24{219} ),   %ZF=LOGICALFLAGS32( r24{219} ),
                %CF=LOGICALFLAGS32( r24{219} )
              Live variables: eax,  ecx in proc _start
result:    0 *u32* eax := -
result:    0 *u32* ecx := -
dest is not lib
call:  268 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL ExitProcess(
                *UINT* m[esp - 4] := m[esp - 4]
              )
              Reaching definitions: r0=r0{262},   r2=r2{262},   r9=r9{262},   r24=r24{262},   r25=r25{262},
                r26=r26{262},   r27=r27{262},   r28=r28{262} - 8,   r29=r29{262},   r30=r30{262},   r31=r31{262},
                m[r28{0} - 12]=m[r28{0} - 12]{262},   m[r28{0} - 16]=m[r28{0} - 16]{262},
                m[r28{0} - 20]=m[r28{0} - 20]{262},   m[r28{0} - 24]=m[r28{0} - 24]{262},
                m[r28{0} - 28]=m[r28{0} - 28]{262},   m[r28{0} - 32]=m[r28{0} - 32]{262},
                m[r28{0} - 36]=m[r28{0} - 36]{262},   m[r28{0} - 40]=m[r28{0} - 40]{262},
                m[r28{0} - 44]=m[r28{0} - 44]{262},   m[r28{0} - 48]=m[r28{0} - 48]{262},
                m[r28{0} - 52]=m[r28{0} - 52]{262},   m[r28{0} - 56]=m[r28{0} - 56]{262},
                m[r28{0} - 60]=m[r28{0} - 60]{262},   m[r28{0} - 64]=m[r28{0} - 64]{262},
                m[r28{0} - 68]=m[r28{0} - 68]{262},   m[r28{0} - 72]=m[r28{0} - 72]{262},
                m[r28{0} - 12]=m[r28{0} - 12]{262},   m[r28{0} - 16]=m[r28{0} - 16]{262},
                m[r28{0} - 20]=m[r28{0} - 20]{262},   m[r28{0} - 24]=m[r28{0} - 24]{262},
                m[r28{0} - 28]=m[r28{0} - 28]{262},   m[r28{0} - 32]=m[r28{0} - 32]{262},
                m[r28{0} - 36]=m[r28{0} - 36]{262},   m[r28{0} - 40]=m[r28{0} - 40]{262},
                m[r28{0} - 44]=m[r28{0} - 44]{262},   m[r28{0} - 48]=m[r28{0} - 48]{262},
                m[r28{0} - 52]=m[r28{0} - 52]{262},   m[r28{0} - 56]=m[r28{0} - 56]{262},
                m[r28{0} - 60]=m[r28{0} - 60]{262},   m[r28{0} - 64]=m[r28{0} - 64]{262},
                m[r28{0} - 68]=m[r28{0} - 68]{262},   m[r28{0} - 72]=m[r28{0} - 72]{262},   <all>=<all>{262},
                tmp1=tmp1{262},   tmph=tmph{262},   %flags=%flags{262},   %ZF=%ZF{262},   %CF=%CF{262}
              Live variables:  in proc _start
