Unknown library function GetCurrentProcessId
Unknown library function GetModuleHandleA
Unknown library function GetVersion
Unknown library function GetACP
Unknown library function VirtualProtect
finding final parameters for proc10
potential param r26
found new parameter r26
potential param %CF
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
in proc _start adding addrExp r28{0} - 20 to local table
in proc _start adding addrExp r28{0} - 4 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 52 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 52 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 52 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffcc existing type unsigned int but added type HANDLE
in proc _start adding addrExp r28{0} - 56 to local table
in proc _start adding addrExp r28{0} - 60 to local table
in proc _start adding addrExp r28{0} - 64 to local table
in proc _start adding addrExp r28{0} - 56 to local table
in proc _start adding addrExp r28{0} - 56 to local table
in proc _start adding addrExp r28{0} - 20 to local table
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 52 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffcc existing type unsigned int but added type HANDLE
in proc _start adding addrExp r28{0} - 56 to local table
in proc _start adding addrExp r28{0} - 60 to local table
in proc _start adding addrExp r28{0} - 52 to local table
in proc _start adding addrExp r28{0} - 52 to local table
in proc _start adding addrExp r28{0} - 56 to local table
in proc _start adding addrExp r28{0} - 56 to local table
finding final parameters for _start
potential param r28
found new parameter r28
potential param m[r28{0} - 20]
found new parameter m[r28{0} - 20]
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
in proc _start adding addrExp r28{0} - 20 to local table
finding final parameters for _start
potential param r28
found new parameter r28
potential param m[r28{0} - 20]
found new parameter m[r28{0} - 20]
local esp has type void * that doesn't agree with type of define void of a library, why?
local eax has type HANDLE that doesn't agree with type of define __size32 of a library, why?
local eax has type __size32 that doesn't agree with type of define HANDLE of a library, why?
local eax has type HANDLE that doesn't agree with type of define __size32 of a library, why?
dest is not lib
call:   10 {*32* eax_2, *v* ecx, *v* edx, *v* esp} := CALL GetCommandLineA(
              )
              Reaching definitions: r28=r28{0} - 44,   r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},
                m[r28{0} - 20]=m[r28{0} - 20]{0},   m[r28{0} - 44]=%pc,   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 36, r28{0} - 40 ),   %ZF=(r28{0} - 40) = 0,   %CF=(r28{0} - 4) <u 36
              Live variables: eax_2 in proc _start
result:    0 *32* eax_2 := -
dest is not lib
call:   17 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetCurrentProcessId(
              )
              Reaching definitions: r24=r24{10},   r25=r25{10},   r26=r26{10},   r28=r28{0} - 48,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{10},   m[r28{0} - 20]=m[r28{0} - 20]{0},
                m[r28{0} - 44]=0x434fc7,   m[r28{0} - 48]=%pc,   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 36, r28{0} - 40 ),   %ZF=(r28{0} - 40) = 0,   %CF=(r28{0} - 4) <u 36
              Live variables:  in proc _start
dest is not lib
call:   21 {*HANDLE* eax, *v* ecx, *v* edx, *v* esp} := CALL GetModuleHandleA(
              )
              Reaching definitions: r24=r24{17},   r25=r25{17},   r26=r26{17},   r28=r28{0} - 48,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{10},   m[r28{0} - 20]=m[r28{0} - 20]{0},
                m[r28{0} - 44]=0x434fc7,   m[r28{0} - 48]=%pc,   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 36, r28{0} - 40 ),   %ZF=(r28{0} - 40) = 0,   %CF=(r28{0} - 4) <u 36
              Live variables: eax in proc _start
result:    0 *HANDLE* eax := -
dest is not lib
call:   26 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetCommandLineW(
              )
              Reaching definitions: r24=r24{21},   r25=r25{21},   r26=r26{21},   r28=r28{0} - 48,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{10},   m[r28{0} - 20]=m[r28{0} - 20]{0},
                m[r28{0} - 28]=r24{21},   m[r28{0} - 44]=0x434fc7,   m[r28{0} - 48]=%pc,   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 36, r28{0} - 40 ),   %ZF=(r28{0} - 40) = 0,   %CF=(r28{0} - 4) <u 36
              Live variables:  in proc _start
dest is not lib
call:   32 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetVersion(
              )
              Reaching definitions: r24=r24{26},   r25=r25{26},   r26=r26{26},   r28=r28{0} - 52,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{10},   m[r28{0} - 20]=m[r28{0} - 20]{0},
                m[r28{0} - 28]=r24{21},   m[r28{0} - 44]=0x434fc7,   m[r28{0} - 48]=0x434fd1,   m[r28{0} - 52]=%pc,
                tmp1=r28{0} - 4,   %flags=SUBFLAGS32( r28{0} - 4, 36, r28{0} - 40 ),   %ZF=(r28{0} - 40) = 0,
                %CF=(r28{0} - 4) <u 36
              Live variables: eax in proc _start
result:    0 *32* eax := -
dest is not lib
call:   37 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetCommandLineA(
              )
              Reaching definitions: r24=r24{32},   r25=r25{32},   r26=r26{32},   r28=r28{0} - 52,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{10},   m[r28{0} - 12]=r24{32},
                m[r28{0} - 20]=m[r28{0} - 20]{0},   m[r28{0} - 28]=r24{21},   m[r28{0} - 44]=0x434fc7,
                m[r28{0} - 48]=0x434fd1,   m[r28{0} - 52]=%pc,   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 36, r28{0} - 40 ),   %ZF=(r28{0} - 40) = 0,   %CF=(r28{0} - 4) <u 36
              Live variables: eax in proc _start
result:    0 *32* eax := -
dest is not lib
call:   48 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL SizeofResource(
                *HMODULE* local0 := 0
                *HRSRC* local1 := param1
              )
              Reaching definitions: r24=r24{37},   r25=r25{37},   r26=r26{37},   r28=r28{0} - 64,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{10},   m[r28{0} - 12]=r24{32},
                m[r28{0} - 20]=m[r28{0} - 20]{0},   m[r28{0} - 28]=r24{21},   m[r28{0} - 40]=r24{37},
                m[r28{0} - 44]=0x434fc7,   m[r28{0} - 48]=0x434fd1,   m[r28{0} - 52]=r24{21},
                m[r28{0} - 56]=m[r28{0} - 20]{0},   m[r28{0} - 60]=0,   m[r28{0} - 64]=%pc,   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 36, r28{0} - 40 ),   %ZF=(r28{0} - 40) = 0,   %CF=(r28{0} - 4) <u 36
              Live variables:  in proc _start
dest is not lib
call:   52 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetACP(
              )
              Reaching definitions: r24=r24{48},   r25=r25{48},   r26=r26{48},   r28=r28{0} - 56,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{10},   m[r28{0} - 12]=r24{32},
                m[r28{0} - 20]=m[r28{0} - 20]{0},   m[r28{0} - 28]=r24{21},   m[r28{0} - 40]=r24{37},
                m[r28{0} - 44]=0x434fc7,   m[r28{0} - 48]=0x434fd1,   m[r28{0} - 52]=r24{21},   m[r28{0} - 56]=%pc,
                m[r28{0} - 60]=0,   m[r28{0} - 64]=%pc,   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 36, r28{0} - 40 ),   %ZF=(r28{0} - 40) = 0,   %CF=(r28{0} - 4) <u 36
              Live variables:  in proc _start
dest is not lib
call:   56 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local2 := eax
                *c** local3 := "ZwListenPort"
              )
              Reaching definitions: r24=r24{52},   r25=r25{52},   r26=r26{52},   r28=r28{0} - 56,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{10},   m[r28{0} - 12]=r24{32},
                m[r28{0} - 20]=m[r28{0} - 20]{0},   m[r28{0} - 28]=r24{21},   m[r28{0} - 40]=r24{37},
                m[r28{0} - 44]=0x434fc7,   m[r28{0} - 48]=0x434fd1,   m[r28{0} - 52]=r24{21},   m[r28{0} - 56]=%pc,
                m[r28{0} - 60]=0,   m[r28{0} - 64]=%pc,   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 36, r28{0} - 40 ),   %ZF=(r28{0} - 40) = 0,   %CF=(r28{0} - 4) <u 36
              Live variables: eax in proc _start
result:    0 *32* eax := -
dest is not lib
call:   61 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetACP(
              )
              Reaching definitions: r24=r24{56},   r25=r25{56},   r26=r26{56},   r28=r28{0} - 48,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{10},   m[r28{0} - 12]=r24{32},   m[r28{0} - 20]=r24{56},
                m[r28{0} - 28]=r24{21},   m[r28{0} - 40]=r24{37},   m[r28{0} - 44]=0x434fc7,   m[r28{0} - 48]=%pc,
                m[r28{0} - 52]=r24{21},   m[r28{0} - 56]=%pc,   m[r28{0} - 60]=0,   m[r28{0} - 64]=%pc,
                tmp1=r28{0} - 4,   %flags=SUBFLAGS32( r28{0} - 4, 36, r28{0} - 40 ),   %ZF=(r28{0} - 40) = 0,
                %CF=(r28{0} - 4) <u 36
              Live variables:  in proc _start
dest is not lib
call:   71 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL SizeofResource(
                *HMODULE* local1 := 0
                *union* local2 := eax
              )
              Reaching definitions: r24=r24{61},   r25=r25{61},   r26=r26{61},   r28=r28{0} - 60,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{10},   m[r28{0} - 12]=r24{32},   m[r28{0} - 20]=r24{56},
                m[r28{0} - 28]=r24{21},   m[r28{0} - 40]=r24{37},   m[r28{0} - 44]=0x434fc7,   m[r28{0} - 48]=0,
                m[r28{0} - 52]=r24{21},   m[r28{0} - 56]=0,   m[r28{0} - 60]=%pc,   m[r28{0} - 64]=%pc,
                tmp1=r28{0} - 4,   %flags=SUBFLAGS32( r28{0} - 4, 36, r28{0} - 40 ),   %ZF=(r28{0} - 40) = 0,
                %CF=(r28{0} - 4) <u 36
              Live variables:  in proc _start
dest is not lib
call:   75 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetCommandLineW(
              )
              Reaching definitions: r24=r24{71},   r25=r25{71},   r26=r26{71},   r28=r28{0} - 52,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{10},   m[r28{0} - 12]=r24{32},   m[r28{0} - 20]=r24{56},
                m[r28{0} - 28]=r24{21},   m[r28{0} - 40]=r24{37},   m[r28{0} - 44]=0x434fc7,   m[r28{0} - 48]=0,
                m[r28{0} - 52]=%pc,   m[r28{0} - 56]=0,   m[r28{0} - 60]=%pc,   m[r28{0} - 64]=%pc,   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 36, r28{0} - 40 ),   %ZF=(r28{0} - 40) = 0,   %CF=(r28{0} - 4) <u 36
              Live variables:  in proc _start
dest is not lib
call:   81 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetACP(
              )
              Reaching definitions: r24=r24{75},   r25=r25{75},   r26=r26{75},   r28=r28{0} - 56,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{10},   m[r28{0} - 12]=r24{32},   m[r28{0} - 20]=r24{56},
                m[r28{0} - 28]=r24{21},   m[r28{0} - 40]=r24{37},   m[r28{0} - 44]=0x434fc7,   m[r28{0} - 48]=0,
                m[r28{0} - 52]=0,   m[r28{0} - 56]=%pc,   m[r28{0} - 60]=%pc,   m[r28{0} - 64]=%pc,   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 36, r28{0} - 40 ),   %ZF=(r28{0} - 40) = 0,   %CF=(r28{0} - 4) <u 36
              Live variables: eax,  ecx,  edx in proc _start
result:    0 *32* eax := -
result:    0 *v* ecx := -
result:    0 *v* edx := -
dest is not lib
call:   94 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL SizeofResource(
                *HMODULE* m[esp_1 - 8] := m[esp_1 - 8]
                *HRSRC* m[esp_1 - 4] := m[esp_1 - 4]
              )
              Reaching definitions: r24=r24{85},   r25=r25{85},   r26=r26{85},   r28=r28{85} - 12,   r29=r29{85},
                m[r28{0} - 4]=m[r28{0} - 4]{85},   m[r28{0} - 8]=m[r28{0} - 8]{85},   m[r28{0} - 12]=m[r28{0} - 12]{85}
                m[r28{0} - 20]=m[r28{0} - 20]{85},   m[r28{0} - 28]=m[r28{0} - 28]{85},
                m[r28{0} - 40]=m[r28{0} - 40]{85},   m[r28{0} - 44]=m[r28{0} - 44]{85},
                m[r28{0} - 48]=m[r28{0} - 48]{85},   m[r28{0} - 52]=m[r28{0} - 52]{85},
                m[r28{0} - 56]=m[r28{0} - 56]{85},   m[r28{0} - 60]=m[r28{0} - 60]{85},
                m[r28{0} - 64]=m[r28{0} - 64]{85},   m[r28{0} - 4]=m[r28{0} - 4]{85},   m[r28{0} - 8]=m[r28{0} - 8]{85}
                m[r28{0} - 12]=m[r28{0} - 12]{85},   m[r28{0} - 20]=m[r28{0} - 20]{85},
                m[r28{0} - 28]=m[r28{0} - 28]{85},   m[r28{0} - 40]=m[r28{0} - 40]{85},
                m[r28{0} - 44]=m[r28{0} - 44]{85},   m[r28{0} - 48]=m[r28{0} - 48]{85},
                m[r28{0} - 52]=m[r28{0} - 52]{85},   m[r28{0} - 56]=m[r28{0} - 56]{85},
                m[r28{0} - 60]=m[r28{0} - 60]{85},   m[r28{0} - 64]=m[r28{0} - 64]{85},   <all>=<all>{85},
                tmp1=tmp1{85},   %flags=%flags{85},   %ZF=%ZF{85},   %CF=%CF{85}
              Live variables: ecx,  edx in proc _start
result:    0 *v* ecx := -
result:    0 *v* edx := -
dest is not lib
call:  117 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetCommandLineW(
              )
              Reaching definitions: r24=r29{104} - 32,   r25=r25{104},   r26=r26{104},   r28=r28{104} - 20,
                r29=r29{104},   m[r28{0} - 4]=m[r28{0} - 4]{104},   m[r28{0} - 8]=m[r28{0} - 8]{104},
                m[r28{0} - 12]=m[r28{0} - 12]{104},   m[r28{0} - 20]=m[r28{0} - 20]{104},
                m[r28{0} - 28]=m[r28{0} - 28]{104},   m[r28{0} - 40]=m[r28{0} - 40]{104},
                m[r28{0} - 44]=m[r28{0} - 44]{104},   m[r28{0} - 48]=m[r28{0} - 48]{104},
                m[r28{0} - 52]=m[r28{0} - 52]{104},   m[r28{0} - 56]=m[r28{0} - 56]{104},
                m[r28{0} - 60]=m[r28{0} - 60]{104},   m[r28{0} - 64]=m[r28{0} - 64]{104},
                m[r28{0} - 4]=m[r28{0} - 4]{104},   m[r28{0} - 8]=m[r28{0} - 8]{104},
                m[r28{0} - 12]=m[r28{0} - 12]{104},   m[r28{0} - 20]=m[r28{0} - 20]{104},
                m[r28{0} - 28]=m[r28{0} - 28]{104},   m[r28{0} - 40]=m[r28{0} - 40]{104},
                m[r28{0} - 44]=m[r28{0} - 44]{104},   m[r28{0} - 48]=m[r28{0} - 48]{104},
                m[r28{0} - 52]=m[r28{0} - 52]{104},   m[r28{0} - 56]=m[r28{0} - 56]{104},
                m[r28{0} - 60]=m[r28{0} - 60]{104},   m[r28{0} - 64]=m[r28{0} - 64]{104},   <all>=<all>{104},
                tmp1=tmp1{104},   %flags=%flags{104},   %ZF=%ZF{104},   %CF=%CF{104}
              Live variables:  in proc _start
dest is not lib
call:  121 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL VirtualProtect(
              )
              Reaching definitions: r24=r24{117},   r25=r25{117},   r26=r26{117},   r28=r28{104} - 20,   r29=r29{104},
                m[r28{0} - 4]=m[r28{0} - 4]{104},   m[r28{0} - 8]=m[r28{0} - 8]{104},
                m[r28{0} - 12]=m[r28{0} - 12]{104},   m[r28{0} - 20]=m[r28{0} - 20]{104},
                m[r28{0} - 28]=m[r28{0} - 28]{104},   m[r28{0} - 40]=m[r28{0} - 40]{104},
                m[r28{0} - 44]=m[r28{0} - 44]{104},   m[r28{0} - 48]=m[r28{0} - 48]{104},
                m[r28{0} - 52]=m[r28{0} - 52]{104},   m[r28{0} - 56]=m[r28{0} - 56]{104},
                m[r28{0} - 60]=m[r28{0} - 60]{104},   m[r28{0} - 64]=m[r28{0} - 64]{104},
                m[r28{0} - 4]=m[r28{0} - 4]{104},   m[r28{0} - 8]=m[r28{0} - 8]{104},
                m[r28{0} - 12]=m[r28{0} - 12]{104},   m[r28{0} - 20]=m[r28{0} - 20]{104},
                m[r28{0} - 28]=m[r28{0} - 28]{104},   m[r28{0} - 40]=m[r28{0} - 40]{104},
                m[r28{0} - 44]=m[r28{0} - 44]{104},   m[r28{0} - 48]=m[r28{0} - 48]{104},
                m[r28{0} - 52]=m[r28{0} - 52]{104},   m[r28{0} - 56]=m[r28{0} - 56]{104},
                m[r28{0} - 60]=m[r28{0} - 60]{104},   m[r28{0} - 64]=m[r28{0} - 64]{104},   <all>=<all>{104},
                tmp1=tmp1{104},   %flags=%flags{104},   %ZF=%ZF{104},   %CF=%CF{104}
              Live variables:  in proc _start
dest is not lib
call:  127 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetCommandLineA(
              )
              Reaching definitions: r24=r24{121},   r25=r25{121},   r26=r26{121},   r28=r28{104} - 24,   r29=r29{104},
                m[r28{0} - 4]=m[r28{0} - 4]{104},   m[r28{0} - 8]=m[r28{0} - 8]{104},
                m[r28{0} - 12]=m[r28{0} - 12]{104},   m[r28{0} - 20]=m[r28{0} - 20]{104},
                m[r28{0} - 28]=m[r28{0} - 28]{104},   m[r28{0} - 40]=m[r28{0} - 40]{104},
                m[r28{0} - 44]=m[r28{0} - 44]{104},   m[r28{0} - 48]=m[r28{0} - 48]{104},
                m[r28{0} - 52]=m[r28{0} - 52]{104},   m[r28{0} - 56]=m[r28{0} - 56]{104},
                m[r28{0} - 60]=m[r28{0} - 60]{104},   m[r28{0} - 64]=m[r28{0} - 64]{104},
                m[r28{0} - 4]=m[r28{0} - 4]{104},   m[r28{0} - 8]=m[r28{0} - 8]{104},
                m[r28{0} - 12]=m[r28{0} - 12]{104},   m[r28{0} - 20]=m[r28{0} - 20]{104},
                m[r28{0} - 28]=m[r28{0} - 28]{104},   m[r28{0} - 40]=m[r28{0} - 40]{104},
                m[r28{0} - 44]=m[r28{0} - 44]{104},   m[r28{0} - 48]=m[r28{0} - 48]{104},
                m[r28{0} - 52]=m[r28{0} - 52]{104},   m[r28{0} - 56]=m[r28{0} - 56]{104},
                m[r28{0} - 60]=m[r28{0} - 60]{104},   m[r28{0} - 64]=m[r28{0} - 64]{104},   <all>=<all>{104},
                tmp1=tmp1{104},   %flags=%flags{104},   %ZF=%ZF{104},   %CF=%CF{104}
              Live variables: eax in proc _start
result:    0 *32* eax := -
dest is not lib
call:  134 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetVersion(
              )
              Reaching definitions: r24=r24{127},   r25=r25{127},   r26=r26{127},   r28=r28{104} - 28,   r29=r29{104},
                m[r28{0} - 4]=m[r28{0} - 4]{104},   m[r28{0} - 8]=m[r28{0} - 8]{104},
                m[r28{0} - 12]=m[r28{0} - 12]{104},   m[r28{0} - 20]=m[r28{0} - 20]{104},
                m[r28{0} - 28]=m[r28{0} - 28]{104},   m[r28{0} - 40]=m[r28{0} - 40]{104},
                m[r28{0} - 44]=m[r28{0} - 44]{104},   m[r28{0} - 48]=m[r28{0} - 48]{104},
                m[r28{0} - 52]=m[r28{0} - 52]{104},   m[r28{0} - 56]=m[r28{0} - 56]{104},
                m[r28{0} - 60]=m[r28{0} - 60]{104},   m[r28{0} - 64]=m[r28{0} - 64]{104},
                m[r28{0} - 4]=m[r28{0} - 4]{104},   m[r28{0} - 8]=m[r28{0} - 8]{104},
                m[r28{0} - 12]=m[r28{0} - 12]{104},   m[r28{0} - 20]=m[r28{0} - 20]{104},
                m[r28{0} - 28]=m[r28{0} - 28]{104},   m[r28{0} - 40]=m[r28{0} - 40]{104},
                m[r28{0} - 44]=m[r28{0} - 44]{104},   m[r28{0} - 48]=m[r28{0} - 48]{104},
                m[r28{0} - 52]=m[r28{0} - 52]{104},   m[r28{0} - 56]=m[r28{0} - 56]{104},
                m[r28{0} - 60]=m[r28{0} - 60]{104},   m[r28{0} - 64]=m[r28{0} - 64]{104},   <all>=<all>{104},
                tmp1=tmp1{104},   %flags=%flags{104},   %ZF=%ZF{104},   %CF=%CF{104}
              Live variables: eax,  ecx,  edx in proc _start
result:    0 *32* eax := -
result:    0 *v* ecx := -
result:    0 *v* edx := -
dest is not lib
call:  152 <all> := CALL proc10(<all>)
              Reaching definitions: r24=r24{148},   r25=r25{148},   r26=r26{148},   r28=r28{148} - 4,   r29=r29{148},
                m[r28{0} - 4]=m[esp - 4]{148},   m[r28{0} - 8]=m[esp - 8]{148},   m[r28{0} - 12]=m[esp - 12]{148},
                m[r28{0} - 20]=m[esp - 20]{148},   m[r28{0} - 28]=m[esp - 28]{148},   m[r28{0} - 40]=m[esp - 40]{148},
                m[r28{0} - 44]=m[esp - 44]{148},   m[r28{0} - 48]=m[esp - 48]{148},   m[r28{0} - 52]=m[esp - 52]{148},
                m[r28{0} - 56]=m[esp - 56]{148},   m[r28{0} - 60]=m[esp - 60]{148},   m[r28{0} - 64]=m[esp - 64]{148},
                m[r28{0} - 4]=m[r28{0} - 4]{148},   m[r28{0} - 8]=m[r28{0} - 8]{148},
                m[r28{0} - 12]=m[r28{0} - 12]{148},   m[r28{0} - 20]=m[r28{0} - 20]{148},
                m[r28{0} - 28]=m[r28{0} - 28]{148},   m[r28{0} - 40]=m[r28{0} - 40]{148},
                m[r28{0} - 44]=m[r28{0} - 44]{148},   m[r28{0} - 48]=m[r28{0} - 48]{148},
                m[r28{0} - 52]=m[r28{0} - 52]{148},   m[r28{0} - 56]=m[r28{0} - 56]{148},
                m[r28{0} - 60]=m[r28{0} - 60]{148},   m[r28{0} - 64]=m[r28{0} - 64]{148},   <all>=<all>{148},
                tmp1=tmp1{148},   %flags=%flags{148},   %ZF=%ZF{148},   %CF=%CF{148}
              Live variables:  in proc _start
