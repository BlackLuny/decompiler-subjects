Unknown library function AddAce
Unknown library function AreAnyAccessesGranted
assgn   27 *32* %pc := m[0x403004]
is readonly
assgn   39 *32* %pc := m[0x403000]
is readonly
assgn  165 *32* %pc := m[0x40300c]
is readonly
assgn  211 *32* %pc := m[0x403014]
is readonly
assgn  241 *32* %pc := m[0x403010]
is readonly
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 20 to local table
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 32 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 52 to local table
in proc _start adding addrExp r28{0} - 56 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 36 to local table
finding final parameters for _start
potential param r28
found new parameter r28
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 36 to local table
local ecx has type unsigned int that doesn't agree with type of define void of a library, why?
local edx has type unsigned short * that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local edx has type void that doesn't agree with type of define unsigned int of a library, why?
local ecx has type void that doesn't agree with type of define unsigned int of a library, why?
local edx has type unsigned int that doesn't agree with type of define void of a library, why?
local edx has type void that doesn't agree with type of define unsigned int of a library, why?
local eax has type unsigned int that doesn't agree with type of define __size32 of a library, why?
local ecx has type unsigned int that doesn't agree with type of define void of a library, why?
local edx has type unsigned int that doesn't agree with type of define void of a library, why?
dest is not lib
call:   28 {*u32* eax_1, *v* ecx, *v* edx, *v* esp} := CALL AddAce(
              )
              Reaching definitions: r26=r26{0},   r27=r26{0} + (r27{0} * 8),   r28=r28{0} - 48,   r29=r29{0},   r30=0,
                r31=r31{0},   m[r28{0} - 12]=r27{0},   m[r28{0} - 16]=r29{0},   m[r28{0} - 20]=r30{0},
                m[r28{0} - 24]=r31{0},   m[r28{0} - 28]=0,   m[r28{0} - 32]=0,   m[r28{0} - 36]=0,   m[r28{0} - 40]=0,
                m[r28{0} - 44]=0,   m[r28{0} - 48]=%pc,   tmp1=r28{0},   %flags=LOGICALFLAGS32( 0 ),
                %ZF=LOGICALFLAGS32( 0 ),   %CF=LOGICALFLAGS32( 0 )
              Live variables: eax_1 in proc _start
result:    0 *u32* eax_1 := -
dest is not lib
call:   40 {*u32* eax, *v* ecx, *u32* edx, *v** esp_1} := CALL AreAnyAccessesGranted(
              )
              Reaching definitions: r24=r24{28},   r25=r25{28},   r26=r26{28},   r27=r26{0} + (r27{0} * 8),
                r28=r28{0} - 56,   r29=r29{0},   r30=0,   r31=r24{28} + 21,   m[r28{0} - 12]=r27{0},
                m[r28{0} - 16]=r29{0},   m[r28{0} - 20]=r30{0},   m[r28{0} - 24]=r31{0},   m[r28{0} - 28]=0,
                m[r28{0} - 32]=0,   m[r28{0} - 36]=0,   m[r28{0} - 40]=0,   m[r28{0} - 44]=0,   m[r28{0} - 48]=-1,
                m[r28{0} - 52]=-1,   m[r28{0} - 56]=%pc,   tmp1=r24{28},
                %flags=ADDFLAGS32( r24{28}, 21, r24{28} + 21 ),   %ZF=ADDFLAGS32( r24{28}, 21, r24{28} + 21 ),
                %CF=ADDFLAGS32( r24{28}, 21, r24{28} + 21 )
              Live variables: eax,  esp_1 in proc _start
result:    0 *u32* eax := -
result:    0 *v** esp_1 := -
dest is not lib
call:  166 {*u32* eax, *u32* ecx, *v* edx, *v* esp} := CALL LoadLibraryA(
                *LPCSTR* m[esp_2 - 4] := m[esp_2 - 4]
              )
              Reaching definitions: r0=r0{300},   r8=r8{301},   r24=r24{302},   r25=r25{157} + 0x400f10,   r26=r26{304}
                r27=r27{305},   r28=r28{306} - 8,   r29=0x400f10,   r30=r30{307},   r31=r31{308},
                m[r28{0} - 12]=r27{0},   m[r28{0} - 16]=r29{0},   m[r28{0} - 20]=r30{0},   m[r28{0} - 24]=r31{0},
                m[r28{0} - 28]=0,   m[r28{0} - 32]=0,   m[r28{0} - 36]=0x401c84,   m[r28{0} - 40]=0,   m[r28{0} - 44]=0
                m[r28{0} - 48]=-1,   m[r28{0} - 52]=-1,   m[r28{0} - 56]=%pc,   tmp1=r25{157},
                %flags=ADDFLAGS32( r25{157}, 0x400f10, r25{157} + 0x400f10 ),
                %ZF=ADDFLAGS32( r25{157}, 0x400f10, r25{157} + 0x400f10 ),
                %CF=ADDFLAGS32( r25{157}, 0x400f10, r25{157} + 0x400f10 )
              Live variables: eax,  ecx in proc _start
result:    0 *u32* eax := -
result:    0 *u32* ecx := -
dest is not lib
call:  212 {*u32* eax, *u32* ecx, *u32* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* m[esp_2 - 8] := m[esp_2 - 8]
                *c** m[esp_2 - 4] := m[esp_2 - 4]
              )
              Reaching definitions: r0=r0{326},   r8=r8{327},   r24=r24{328},   r25=r25{329},   r26=r26{318},
                r27=r27{319},   r28=(r28{306} - 4) - 8,   r29=0x400f10,   r30=r30{321},   r31=r24{166} + (r31{308} * 2)
                m[r28{0} - 12]=r27{0},   m[r28{0} - 16]=r29{0},   m[r28{0} - 20]=r30{0},   m[r28{0} - 24]=r31{0},
                m[r28{0} - 28]=0,   m[r28{0} - 32]=0,   m[r28{0} - 36]=0x401c84,   m[r28{0} - 40]=0,   m[r28{0} - 44]=0
                m[r28{0} - 48]=-1,   m[r28{0} - 52]=-1,   m[r28{0} - 56]=%pc,   tmp1=r24{192},
                %flags=LOGICALFLAGS32( r24{192} ),   %ZF=LOGICALFLAGS32( r24{192} ),   %CF=LOGICALFLAGS32( r24{192} )
              Live variables: eax,  ecx in proc _start
result:    0 *u32* eax := -
result:    0 *u32* ecx := -
dest is not lib
call:  242 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL ExitProcess(
                *UINT* m[esp - 4] := m[esp - 4]
              )
              Reaching definitions: r0=r0{236},   r8=r8{236},   r24=r24{236},   r25=r25{236},   r26=r26{236},
                r27=r27{236},   r28=r28{236} - 8,   r29=r29{236},   r30=r30{236},   r31=r31{236},
                m[r28{0} - 12]=m[r28{0} - 12]{236},   m[r28{0} - 16]=m[r28{0} - 16]{236},
                m[r28{0} - 20]=m[r28{0} - 20]{236},   m[r28{0} - 24]=m[r28{0} - 24]{236},
                m[r28{0} - 28]=m[r28{0} - 28]{236},   m[r28{0} - 32]=m[r28{0} - 32]{236},
                m[r28{0} - 36]=m[r28{0} - 36]{236},   m[r28{0} - 40]=m[r28{0} - 40]{236},
                m[r28{0} - 44]=m[r28{0} - 44]{236},   m[r28{0} - 48]=m[r28{0} - 48]{236},
                m[r28{0} - 52]=m[r28{0} - 52]{236},   m[r28{0} - 56]=m[r28{0} - 56]{236},
                m[r28{0} - 12]=m[r28{0} - 12]{236},   m[r28{0} - 16]=m[r28{0} - 16]{236},
                m[r28{0} - 20]=m[r28{0} - 20]{236},   m[r28{0} - 24]=m[r28{0} - 24]{236},
                m[r28{0} - 28]=m[r28{0} - 28]{236},   m[r28{0} - 32]=m[r28{0} - 32]{236},
                m[r28{0} - 36]=m[r28{0} - 36]{236},   m[r28{0} - 40]=m[r28{0} - 40]{236},
                m[r28{0} - 44]=m[r28{0} - 44]{236},   m[r28{0} - 48]=m[r28{0} - 48]{236},
                m[r28{0} - 52]=m[r28{0} - 52]{236},   m[r28{0} - 56]=m[r28{0} - 56]{236},   <all>=<all>{236},
                tmp1=tmp1{236},   %flags=%flags{236},   %ZF=%ZF{236},   %CF=%CF{236}
              Live variables:  in proc _start
