Unknown library function GetStartupInfoA
Unknown library function GetModuleHandleA
Unknown library function lstrcpyA
Unknown library function CreateMutexA
Unknown library function lstrcmpA
Unknown library function CreateThread
Unknown library function ReadProcessMemory
Unknown library function WriteProcessMemory
Unknown library function IsDebuggerPresent
Unknown library function GetCurrentProcess
Unknown library function GetEnvironmentVariableA
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc1 ###
in proc proc1 adding addrExp r28{0} - 4 to local table
in proc proc1 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc1 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc1 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
finding final parameters for proc1
potential param r28
found new parameter r28
potential param r30
found new parameter r30
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
assgn    8 *32* m[r28 - 4] := m[0x406620]
assgn   12 *32* %pc := m[0x40406c]
is readonly
after removing matching assigns (%pc).
in proc proc24 adding addrExp r28{0} - 4 to local table
in proc proc24 adding addrExp r28{0} - 8 to local table
in proc proc24 adding addrExp r28{0} - 12 to local table
in proc proc24 adding addrExp r28{0} - 16 to local table
in proc proc24 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type LPVOID does not resolve to compound or array
in proc proc24 adding addrExp r28{0} - 8 to local table
in proc proc24 adding addrExp r28{0} - 12 to local table
in proc proc24 adding addrExp r28{0} - 16 to local table
in proc proc24 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type LPVOID does not resolve to compound or array
in proc proc24 adding addrExp r28{0} - 8 to local table
in proc proc24 adding addrExp r28{0} - 12 to local table
in proc proc24 adding addrExp r28{0} - 16 to local table
finding final parameters for proc24
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r24
found new parameter r24
potential param r25
found new parameter r25
potential param r26
found new parameter r26
assgn   18 *32* %pc := m[0x4040a4]
is readonly
after removing matching assigns (%pc).
in proc proc5 adding addrExp r28{0} - 16 to local table
in proc proc5 adding addrExp r28{0} - 20 to local table
in proc proc5 adding addrExp r28{0} - 4 to local table
in proc proc5 adding addrExp r28{0} - 12 to local table
in proc proc5 adding addrExp r28{0} - 24 to local table
in proc proc5 adding addrExp r28{0} - 28 to local table
in proc proc5 adding addrExp r28{0} - 32 to local table
in proc proc5 adding addrExp r28{0} - 36 to local table
in proc proc5 adding addrExp r28{0} - 40 to local table
in proc proc5 adding addrExp r28{0} - 8 to local table
in proc proc5 adding addrExp r28{0} - 8 to local table
in proc proc5 adding addrExp r28{0} - 8 to local table
in proc proc5 adding addrExp r28{0} - 16 to local table
in proc proc5 adding addrExp r28{0} - 20 to local table
in proc proc5 adding addrExp r28{0} - 24 to local table
in proc proc5 adding addrExp r28{0} - 28 to local table
in proc proc5 adding addrExp r28{0} - 16 to local table
in proc proc5 adding addrExp r28{0} - 20 to local table
in proc proc5 adding addrExp r28{0} - 24 to local table
in proc proc5 adding addrExp r28{0} - 28 to local table
finding final parameters for proc5
potential param r28
found new parameter r28
assgn   12 *32* m[r28 - 4] := m[0x406620]
assgn   16 *32* %pc := m[0x404074]
is readonly
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
in proc proc6 adding addrExp r28{0} - 4 to local table
in proc proc6 adding addrExp r28{0} - 8 to local table
in proc proc6 adding addrExp r28{0} - 12 to local table
in proc proc6 adding addrExp r28{0} - 16 to local table
finding final parameters for proc6
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
assgn   21 *32* tmp2 := m[0x40612c]
after removing matching assigns (%pc).
WARNING: size 0x20 meet with long long; allowing temporarily
WARNING: size 0x20 meet with long long; allowing temporarily
WARNING: size 0x20 meet with long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
WARNING: size 0x20 meet with long long; allowing temporarily
WARNING: size 0x20 meet with long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
WARNING: size 0x20 meet with long long; allowing temporarily
WARNING: size 0x20 meet with long long; allowing temporarily
WARNING: size 0x20 meet with long long; allowing temporarily
WARNING: size 0x20 meet with long long; allowing temporarily
WARNING: size 0x20 meet with long long; allowing temporarily
WARNING: size 0x20 meet with long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
WARNING: size 0x20 meet with long long; allowing temporarily
WARNING: size 0x20 meet with long long; allowing temporarily
WARNING: size 0x20 meet with long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
WARNING: size 0x20 meet with long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
WARNING: size 0x20 meet with long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
WARNING: size 0x20 meet with long long; allowing temporarily
WARNING: size 0x20 meet with long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc34 ###
in proc proc34 adding addrExp r28{0} - 4 to local table
in proc proc34 adding addrExp r28{0} - 8 to local table
in proc proc34 adding addrExp r28{0} - 8 to local table
TYPE ERROR: Existing type at address 0xfffffff8 is not structure or array type
in proc proc34 adding addrExp r28{0} - 8 to local table
TYPE ERROR: Existing type at address 0xfffffff8 is not structure or array type
in proc proc34 adding addrExp r28{0} - 8 to local table
TYPE ERROR: Existing type at address 0xfffffff8 is not structure or array type
finding final parameters for proc34
potential param r28
found new parameter r28
potential param r24
found new parameter r24
potential param r26
found new parameter r26
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
in proc proc7 adding addrExp r28{0} - 4 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
finding final parameters for proc7
potential param r24
found new parameter r24
potential param r26
found new parameter r26
assgn   11 *32* r24 := m[0x406144]
assgn   16 *32* %pc := m[0x404060]
is readonly
assgn   27 *32* r25 := m[0x406144]
assgn   32 *32* %pc := m[0x404060]
is readonly
assgn   43 *32* r26 := m[0x406144]
assgn   48 *32* %pc := m[0x404060]
is readonly
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc8 ###
in proc proc8 adding addrExp r28{0} - 12 to local table
in proc proc8 adding addrExp r28{0} - 15 to local table
in proc proc8 adding addrExp r28{0} - 16 to local table
in proc proc8 adding addrExp r28{0} - 17 to local table
in proc proc8 adding addrExp r28{0} - 18 to local table
in proc proc8 adding addrExp r28{0} - 19 to local table
in proc proc8 adding addrExp r28{0} - 20 to local table
in proc proc8 adding addrExp r28{0} - 36 to local table
in proc proc8 adding addrExp r28{0} - 52 to local table
in proc proc8 adding addrExp r28{0} - 56 to local table
in proc proc8 adding addrExp r28{0} - 60 to local table
in proc proc8 adding addrExp r28{0} - 64 to local table
in proc proc8 adding addrExp r28{0} - 68 to local table
in proc proc8 adding addrExp r28{0} - 72 to local table
in proc proc8 adding addrExp r28{0} - 76 to local table
in proc proc8 adding addrExp r28{0} - 80 to local table
in proc proc8 adding addrExp r28{0} - 84 to local table
in proc proc8 adding addrExp r28{0} - 4 to local table
in proc proc8 adding addrExp r28{0} - 24 to local table
in proc proc8 adding addrExp r28{0} - 32 to local table
in proc proc8 adding addrExp r28{0} - 40 to local table
in proc proc8 adding addrExp r28{0} - 44 to local table
in proc proc8 adding addrExp r28{0} - 48 to local table
in proc proc8 adding addrExp r28{0} - 32 to local table
in proc proc8 adding addrExp r28{0} - 12 to local table
in proc proc8 adding addrExp r28{0} - 40 to local table
in proc proc8 adding addrExp r28{0} - 44 to local table
in proc proc8 adding addrExp r28{0} - 48 to local table
in proc proc8 adding addrExp r28{0} - 12 to local table
in proc proc8 adding addrExp r28{0} - 36 to local table
in proc proc8 adding addrExp r28{0} - 40 to local table
in proc proc8 adding addrExp r28{0} - 44 to local table
in proc proc8 adding addrExp r28{0} - 48 to local table
in proc proc8 adding addrExp r28{0} - 36 to local table
in proc proc8 adding addrExp r28{0} - 20 to local table
in proc proc8 adding addrExp r28{0} - 19 to local table
in proc proc8 adding addrExp r28{0} - 18 to local table
in proc proc8 adding addrExp r28{0} - 17 to local table
in proc proc8 adding addrExp r28{0} - 16 to local table
in proc proc8 adding addrExp r28{0} - 15 to local table
in proc proc8 adding addrExp r28{0} - 40 to local table
in proc proc8 adding addrExp r28{0} - 44 to local table
in proc proc8 adding addrExp r28{0} - 48 to local table
in proc proc8 adding addrExp r28{0} - 52 to local table
in proc proc8 adding addrExp r28{0} - 56 to local table
in proc proc8 adding addrExp r28{0} - 60 to local table
in proc proc8 adding addrExp r28{0} - 64 to local table
in proc proc8 adding addrExp r28{0} - 68 to local table
in proc proc8 adding addrExp r28{0} - 72 to local table
in proc proc8 adding addrExp r28{0} - 76 to local table
in proc proc8 adding addrExp r28{0} - 80 to local table
in proc proc8 adding addrExp r28{0} - 84 to local table
in proc proc8 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc8 adding addrExp r28{0} - 12 to local table
in proc proc8 adding addrExp r28{0} - 15 to local table
TYPE ERROR: Existing type at address 0xfffffff1 is not structure or array type
in proc proc8 adding addrExp r28{0} - 16 to local table
TYPE ERROR: Existing type at address 0xfffffff0 is not structure or array type
in proc proc8 adding addrExp r28{0} - 17 to local table
TYPE ERROR: Existing type at address 0xffffffef is not structure or array type
in proc proc8 adding addrExp r28{0} - 18 to local table
TYPE ERROR: Existing type at address 0xffffffee is not structure or array type
in proc proc8 adding addrExp r28{0} - 19 to local table
TYPE ERROR: Existing type at address 0xffffffed is not structure or array type
in proc proc8 adding addrExp r28{0} - 20 to local table
TYPE ERROR: Existing type at address 0xffffffec is not structure or array type
in proc proc8 adding addrExp r28{0} - 24 to local table
in proc proc8 adding addrExp r28{0} - 32 to local table
in proc proc8 adding addrExp r28{0} - 36 to local table
in proc proc8 adding addrExp r28{0} - 40 to local table
in proc proc8 adding addrExp r28{0} - 44 to local table
in proc proc8 adding addrExp r28{0} - 48 to local table
in proc proc8 adding addrExp r28{0} - 52 to local table
TYPE ERROR: Existing type at address 0xffffffcc is not structure or array type
in proc proc8 adding addrExp r28{0} - 56 to local table
TYPE ERROR: Existing type at address 0xffffffc8 is not structure or array type
in proc proc8 adding addrExp r28{0} - 60 to local table
TYPE ERROR: Existing type at address 0xffffffc4 is not structure or array type
in proc proc8 adding addrExp r28{0} - 64 to local table
TYPE ERROR: Existing type at address 0xffffffc0 is not structure or array type
in proc proc8 adding addrExp r28{0} - 68 to local table
TYPE ERROR: Existing type at address 0xffffffbc is not structure or array type
in proc proc8 adding addrExp r28{0} - 72 to local table
TYPE ERROR: Existing type at address 0xffffffb8 is not structure or array type
in proc proc8 adding addrExp r28{0} - 76 to local table
TYPE ERROR: Existing type at address 0xffffffb4 is not structure or array type
in proc proc8 adding addrExp r28{0} - 80 to local table
TYPE ERROR: Existing type at address 0xffffffb0 is not structure or array type
in proc proc8 adding addrExp r28{0} - 84 to local table
TYPE ERROR: Existing type at address 0xffffffac is not structure or array type
finding final parameters for proc8
potential param r28
found new parameter r28
assgn   22 *32* %pc := m[0x406158]
assgn   57 *32* %pc := m[0x40615c]
assgn   67 *32* %pc := m[0x406160]
assgn   77 *32* %pc := m[0x406160]
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc9 ###
in proc proc9 adding addrExp r28{0} - 4 to local table
in proc proc9 adding addrExp r28{0} - 20 to local table
in proc proc9 adding addrExp r28{0} - 8 to local table
in proc proc9 adding addrExp r28{0} - 28 to local table
in proc proc9 adding addrExp r28{0} - 32 to local table
in proc proc9 adding addrExp r28{0} - 36 to local table
in proc proc9 adding addrExp r28{0} - 40 to local table
in proc proc9 adding addrExp r28{0} - 44 to local table
in proc proc9 adding addrExp r28{0} - 48 to local table
in proc proc9 adding addrExp r28{0} - 4 to local table
in proc proc9 adding addrExp r28{0} - 8 to local table
TYPE ERROR: Existing type at address 0xfffffff8 is not structure or array type
in proc proc9 adding addrExp r28{0} - 20 to local table
TYPE ERROR: Existing type at address 0xffffffec is not structure or array type
in proc proc9 adding addrExp r28{0} - 28 to local table
TYPE ERROR: Existing type at address 0xffffffe4 is not structure or array type
in proc proc9 adding addrExp r28{0} - 32 to local table
TYPE ERROR: Existing type at address 0xffffffe0 is not structure or array type
in proc proc9 adding addrExp r28{0} - 36 to local table
TYPE ERROR: Existing type at address 0xffffffdc is not structure or array type
in proc proc9 adding addrExp r28{0} - 40 to local table
TYPE ERROR: Existing type at address 0xffffffd8 is not structure or array type
in proc proc9 adding addrExp r28{0} - 44 to local table
TYPE ERROR: Existing type at address 0xffffffd4 is not structure or array type
in proc proc9 adding addrExp r28{0} - 48 to local table
TYPE ERROR: Existing type at address 0xffffffd0 is not structure or array type
finding final parameters for proc9
potential param r28
found new parameter r28
potential param global85
potential param global86
potential param global87
assgn    9 *32* %pc := m[0x404058]
is readonly
assgn   36 *32* %pc := m[0x404054]
is readonly
assgn   42 *32* %pc := m[0x40617c]
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc10 ###
in proc proc10 adding addrExp r28{0} - 8 to local table
in proc proc10 adding addrExp r28{0} - 12 to local table
in proc proc10 adding addrExp r28{0} - 16 to local table
in proc proc10 adding addrExp r28{0} - 20 to local table
in proc proc10 adding addrExp r28{0} - 24 to local table
in proc proc10 adding addrExp r28{0} - 28 to local table
in proc proc10 adding addrExp r28{0} - 32 to local table
in proc proc10 adding addrExp r28{0} - 36 to local table
in proc proc10 adding addrExp r28{0} - 44 to local table
in proc proc10 adding addrExp r28{0} - 48 to local table
in proc proc10 adding addrExp r28{0} - 52 to local table
in proc proc10 adding addrExp r28{0} - 56 to local table
in proc proc10 adding addrExp r28{0} - 60 to local table
in proc proc10 adding addrExp r28{0} - 4 to local table
in proc proc10 adding addrExp r28{0} - 40 to local table
in proc proc10 adding addrExp r28{0} - 16 to local table
in proc proc10 adding addrExp r28{0} - 36 to local table
in proc proc10 adding addrExp r28{0} - 28 to local table
in proc proc10 adding addrExp r28{0} - 8 to local table
in proc proc10 adding addrExp r28{0} - 12 to local table
in proc proc10 adding addrExp r28{0} - 32 to local table
in proc proc10 adding addrExp r28{0} - 20 to local table
in proc proc10 adding addrExp r28{0} - 24 to local table
in proc proc10 adding addrExp r28{0} - 40 to local table
in proc proc10 adding addrExp r28{0} - 44 to local table
in proc proc10 adding addrExp r28{0} - 48 to local table
in proc proc10 adding addrExp r28{0} - 52 to local table
in proc proc10 adding addrExp r28{0} - 56 to local table
in proc proc10 adding addrExp r28{0} - 56 to local table
in proc proc10 adding addrExp r28{0} - 60 to local table
in proc proc10 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc10 adding addrExp r28{0} - 8 to local table
TYPE ERROR: Existing type at address 0xfffffff8 is not structure or array type
in proc proc10 adding addrExp r28{0} - 12 to local table
TYPE ERROR: Existing type at address 0xfffffff4 is not structure or array type
in proc proc10 adding addrExp r28{0} - 16 to local table
TYPE ERROR: Existing type at address 0xfffffff0 is not structure or array type
in proc proc10 adding addrExp r28{0} - 20 to local table
TYPE ERROR: Existing type at address 0xffffffec is not structure or array type
in proc proc10 adding addrExp r28{0} - 24 to local table
TYPE ERROR: Existing type at address 0xffffffe8 is not structure or array type
in proc proc10 adding addrExp r28{0} - 28 to local table
TYPE ERROR: Existing type at address 0xffffffe4 is not structure or array type
in proc proc10 adding addrExp r28{0} - 32 to local table
TYPE ERROR: Existing type at address 0xffffffe0 is not structure or array type
in proc proc10 adding addrExp r28{0} - 36 to local table
TYPE ERROR: Existing type at address 0xffffffdc is not structure or array type
in proc proc10 adding addrExp r28{0} - 40 to local table
in proc proc10 adding addrExp r28{0} - 44 to local table
TYPE ERROR: Existing type at address 0xffffffd4 is not structure or array type
in proc proc10 adding addrExp r28{0} - 48 to local table
TYPE ERROR: Existing type at address 0xffffffd0 is not structure or array type
in proc proc10 adding addrExp r28{0} - 52 to local table
TYPE ERROR: Existing type at address 0xffffffcc is not structure or array type
in proc proc10 adding addrExp r28{0} - 56 to local table
TYPE ERROR: Existing type at address 0xffffffc8 is not structure or array type
in proc proc10 adding addrExp r28{0} - 60 to local table
TYPE ERROR: Existing type at address 0xffffffc4 is not structure or array type
finding final parameters for proc10
potential param r28
found new parameter r28
potential param global95
assgn    6 *32* r24 := m[0x406588]
after removing matching assigns (%pc).
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc15 ###
in proc proc15 adding addrExp r28{0} - 12 to local table
in proc proc15 adding addrExp r28{0} - 4 to local table
in proc proc15 adding addrExp r28{0} - 8 to local table
in proc proc15 adding addrExp r28{0} - 12 to local table
in proc proc15 adding addrExp r28{0} - 12 to local table
finding final parameters for proc15
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param r27
found new parameter r27
potential param r9
found new parameter r9
potential param r25
found new parameter r25
potential param r11
found new parameter r11
assgn   39 *32* %pc := m[0x406158]
assgn   61 *32* %pc := m[0x40615c]
assgn   71 *32* %pc := m[0x406160]
assgn   91 *32* %pc := m[0x406160]
assgn  109 *32* %pc := m[0x406158]
assgn  131 *32* %pc := m[0x40615c]
assgn  141 *32* %pc := m[0x406160]
assgn  161 *32* %pc := m[0x406160]
after removing matching assigns (%pc).
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc11 ###
in proc proc11 adding addrExp r28{0} - 4 to local table
in proc proc11 adding addrExp r28{0} - 24 to local table
in proc proc11 adding addrExp r28{0} - 32 to local table
in proc proc11 adding addrExp r28{0} - 36 to local table
in proc proc11 adding addrExp r28{0} - 28 to local table
in proc proc11 adding addrExp r28{0} - 20 to local table
in proc proc11 adding addrExp r28{0} - 16 to local table
in proc proc11 adding addrExp r28{0} - 12 to local table
in proc proc11 adding addrExp r28{0} - 8 to local table
in proc proc11 adding addrExp r28{0} - 32 to local table
in proc proc11 adding addrExp r28{0} - 36 to local table
in proc proc11 adding addrExp r28{0} - 40 to local table
in proc proc11 adding addrExp r28{0} - 44 to local table
in proc proc11 adding addrExp r28{0} - 48 to local table
in proc proc11 adding addrExp r28{0} - 52 to local table
in proc proc11 adding addrExp r28{0} - 4 to local table
in proc proc11 adding addrExp r28{0} - 8 to local table
TYPE ERROR: Existing type at address 0xfffffff8 is not structure or array type
in proc proc11 adding addrExp r28{0} - 12 to local table
TYPE ERROR: Existing type at address 0xfffffff4 is not structure or array type
in proc proc11 adding addrExp r28{0} - 16 to local table
TYPE ERROR: Existing type at address 0xfffffff0 is not structure or array type
in proc proc11 adding addrExp r28{0} - 20 to local table
TYPE ERROR: Existing type at address 0xffffffec is not structure or array type
in proc proc11 adding addrExp r28{0} - 24 to local table
TYPE ERROR: Existing type at address 0xffffffe8 is not structure or array type
in proc proc11 adding addrExp r28{0} - 28 to local table
TYPE ERROR: Existing type at address 0xffffffe4 is not structure or array type
in proc proc11 adding addrExp r28{0} - 32 to local table
TYPE ERROR: Existing type at address 0xffffffe0 is not structure or array type
in proc proc11 adding addrExp r28{0} - 36 to local table
TYPE ERROR: Existing type at address 0xffffffdc is not structure or array type
in proc proc11 adding addrExp r28{0} - 40 to local table
TYPE ERROR: Existing type at address 0xffffffd8 is not structure or array type
in proc proc11 adding addrExp r28{0} - 44 to local table
TYPE ERROR: Existing type at address 0xffffffd4 is not structure or array type
in proc proc11 adding addrExp r28{0} - 48 to local table
TYPE ERROR: Existing type at address 0xffffffd0 is not structure or array type
in proc proc11 adding addrExp r28{0} - 52 to local table
TYPE ERROR: Existing type at address 0xffffffcc is not structure or array type
in proc proc11 adding addrExp r28{0} - 32 to local table
in proc proc11 adding addrExp r28{0} - 36 to local table
in proc proc11 adding addrExp r28{0} - 40 to local table
in proc proc11 adding addrExp r28{0} - 44 to local table
in proc proc11 adding addrExp r28{0} - 48 to local table
in proc proc11 adding addrExp r28{0} - 52 to local table
in proc proc11 adding addrExp r28{0} - 4 to local table
in proc proc11 adding addrExp r28{0} - 8 to local table
TYPE ERROR: Existing type at address 0xfffffff8 is not structure or array type
in proc proc11 adding addrExp r28{0} - 12 to local table
TYPE ERROR: Existing type at address 0xfffffff4 is not structure or array type
in proc proc11 adding addrExp r28{0} - 16 to local table
TYPE ERROR: Existing type at address 0xfffffff0 is not structure or array type
in proc proc11 adding addrExp r28{0} - 20 to local table
TYPE ERROR: Existing type at address 0xffffffec is not structure or array type
in proc proc11 adding addrExp r28{0} - 24 to local table
TYPE ERROR: Existing type at address 0xffffffe8 is not structure or array type
in proc proc11 adding addrExp r28{0} - 28 to local table
TYPE ERROR: Existing type at address 0xffffffe4 is not structure or array type
in proc proc11 adding addrExp r28{0} - 32 to local table
TYPE ERROR: Existing type at address 0xffffffe0 is not structure or array type
in proc proc11 adding addrExp r28{0} - 36 to local table
TYPE ERROR: Existing type at address 0xffffffdc is not structure or array type
in proc proc11 adding addrExp r28{0} - 40 to local table
TYPE ERROR: Existing type at address 0xffffffd8 is not structure or array type
in proc proc11 adding addrExp r28{0} - 44 to local table
TYPE ERROR: Existing type at address 0xffffffd4 is not structure or array type
in proc proc11 adding addrExp r28{0} - 48 to local table
TYPE ERROR: Existing type at address 0xffffffd0 is not structure or array type
in proc proc11 adding addrExp r28{0} - 52 to local table
TYPE ERROR: Existing type at address 0xffffffcc is not structure or array type
in proc proc11 adding addrExp r28{0} - 4 to local table
in proc proc11 adding addrExp r28{0} - 8 to local table
TYPE ERROR: Existing type at address 0xfffffff8 is not structure or array type
in proc proc11 adding addrExp r28{0} - 12 to local table
TYPE ERROR: Existing type at address 0xfffffff4 is not structure or array type
in proc proc11 adding addrExp r28{0} - 16 to local table
TYPE ERROR: Existing type at address 0xfffffff0 is not structure or array type
in proc proc11 adding addrExp r28{0} - 20 to local table
TYPE ERROR: Existing type at address 0xffffffec is not structure or array type
in proc proc11 adding addrExp r28{0} - 24 to local table
TYPE ERROR: Existing type at address 0xffffffe8 is not structure or array type
in proc proc11 adding addrExp r28{0} - 28 to local table
TYPE ERROR: Existing type at address 0xffffffe4 is not structure or array type
in proc proc11 adding addrExp r28{0} - 32 to local table
TYPE ERROR: Existing type at address 0xffffffe0 is not structure or array type
in proc proc11 adding addrExp r28{0} - 36 to local table
TYPE ERROR: Existing type at address 0xffffffdc is not structure or array type
in proc proc11 adding addrExp r28{0} - 40 to local table
TYPE ERROR: Existing type at address 0xffffffd8 is not structure or array type
in proc proc11 adding addrExp r28{0} - 44 to local table
TYPE ERROR: Existing type at address 0xffffffd4 is not structure or array type
in proc proc11 adding addrExp r28{0} - 48 to local table
TYPE ERROR: Existing type at address 0xffffffd0 is not structure or array type
in proc proc11 adding addrExp r28{0} - 52 to local table
TYPE ERROR: Existing type at address 0xffffffcc is not structure or array type
finding final parameters for proc11
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param global85
potential param global86
potential param global87
potential param r27
found new parameter r27
assgn   98 *32* %pc := m[0x4040a4]
is readonly
assgn  110 *32* %pc := m[0x4040a4]
is readonly
after removing matching assigns (%pc).
WARNING: size 0x20 meet with /*signed?*/long long; allowing temporarily
WARNING: size 0x20 meet with /*signed?*/long long; allowing temporarily
WARNING: size 0x20 meet with long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
WARNING: size 0x20 meet with long long; allowing temporarily
WARNING: size 0x20 meet with long long; allowing temporarily
WARNING: size 0x20 meet with /*signed?*/long long; allowing temporarily
WARNING: size 0x20 meet with long long; allowing temporarily
WARNING: size 0x20 meet with long long; allowing temporarily
WARNING: size 0x20 meet with long long; allowing temporarily
WARNING: size 0x20 meet with long long; allowing temporarily
WARNING: size 0x20 meet with long long; allowing temporarily
WARNING: size 0x20 meet with long long; allowing temporarily
WARNING: size 0x20 meet with long long; allowing temporarily
WARNING: size 0x20 meet with long long; allowing temporarily
WARNING: size 0x20 meet with long long; allowing temporarily
WARNING: size 0x20 meet with long long; allowing temporarily
WARNING: size 0x20 meet with long long; allowing temporarily
WARNING: size 0x20 meet with long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
WARNING: size 0x20 meet with long long; allowing temporarily
WARNING: size 0x20 meet with long long; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc21 ###
in proc proc21 adding addrExp r28{0} - 8 to local table
in proc proc21 adding addrExp r28{0} - 24 to local table
in proc proc21 adding addrExp r28{0} - 12 to local table
in proc proc21 adding addrExp r28{0} - 16 to local table
in proc proc21 adding addrExp r28{0} - 20 to local table
in proc proc21 adding addrExp r28{0} - 28 to local table
in proc proc21 adding addrExp r28{0} - 32 to local table
TYPE ERROR: at address 0xffffffe0, overlapping type long long does not resolve to compound or array
in proc proc21 adding addrExp r28{0} - 36 to local table
in proc proc21 adding addrExp r28{0} - 40 to local table
in proc proc21 adding addrExp r28{0} - 44 to local table
in proc proc21 adding addrExp r28{0} - 48 to local table
in proc proc21 adding addrExp r28{0} - 52 to local table
in proc proc21 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc21 adding addrExp r28{0} - 12 to local table
in proc proc21 adding addrExp r28{0} - 32 to local table
TYPE ERROR: at address 0xffffffe0, overlapping type long long does not resolve to compound or array
in proc proc21 adding addrExp r28{0} - 20 to local table
in proc proc21 adding addrExp r28{0} - 16 to local table
in proc proc21 adding addrExp r28{0} - 8 to local table
TYPE ERROR: at address 0xfffffff8, overlapping type long long does not resolve to compound or array
in proc proc21 adding addrExp r28{0} - 12 to local table
in proc proc21 adding addrExp r28{0} - 32 to local table
TYPE ERROR: at address 0xffffffe0, overlapping type long long does not resolve to compound or array
in proc proc21 adding addrExp r28{0} - 8 to local table
TYPE ERROR: at address 0xfffffff8, overlapping type long long does not resolve to compound or array
in proc proc21 adding addrExp r28{0} - 8 to local table
TYPE ERROR: at address 0xfffffff8, overlapping type long long does not resolve to compound or array
in proc proc21 adding addrExp r28{0} - 8 to local table
TYPE ERROR: at address 0xfffffff8, overlapping type long long does not resolve to compound or array
in proc proc21 adding addrExp r28{0} - 12 to local table
in proc proc21 adding addrExp r28{0} - 32 to local table
TYPE ERROR: at address 0xffffffe0, overlapping type long long does not resolve to compound or array
in proc proc21 adding addrExp r28{0} - 12 to local table
in proc proc21 adding addrExp r28{0} - 12 to local table
in proc proc21 adding addrExp r28{0} - 36 to local table
in proc proc21 adding addrExp r28{0} - 40 to local table
in proc proc21 adding addrExp r28{0} - 44 to local table
in proc proc21 adding addrExp r28{0} - 48 to local table
in proc proc21 adding addrExp r28{0} - 52 to local table
in proc proc21 adding addrExp r28{0} - 36 to local table
in proc proc21 adding addrExp r28{0} - 40 to local table
in proc proc21 adding addrExp r28{0} - 44 to local table
in proc proc21 adding addrExp r28{0} - 48 to local table
in proc proc21 adding addrExp r28{0} - 52 to local table
in proc proc21 adding addrExp r28{0} - 28 to local table
in proc proc21 adding addrExp r28{0} - 12 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffff4 existing type unsigned char * but added type /*signed?*/int
in proc proc21 adding addrExp r28{0} - 12 to local table
in proc proc21 adding addrExp r28{0} - 24 to local table
in proc proc21 adding addrExp r28{0} - 28 to local table
in proc proc21 adding addrExp r28{0} - 24 to local table
in proc proc21 adding addrExp r28{0} - 28 to local table
in proc proc21 adding addrExp r28{0} - 12 to local table
in proc proc21 adding addrExp r28{0} - 8 to local table
TYPE ERROR: at address 0xfffffff8, overlapping type long long does not resolve to compound or array
in proc proc21 adding addrExp r28{0} - 12 to local table
in proc proc21 adding addrExp r28{0} - 16 to local table
in proc proc21 adding addrExp r28{0} - 20 to local table
in proc proc21 adding addrExp r28{0} - 24 to local table
in proc proc21 adding addrExp r28{0} - 28 to local table
in proc proc21 adding addrExp r28{0} - 32 to local table
TYPE ERROR: at address 0xffffffe0, overlapping type long long does not resolve to compound or array
in proc proc21 adding addrExp r28{0} - 36 to local table
in proc proc21 adding addrExp r28{0} - 40 to local table
in proc proc21 adding addrExp r28{0} - 44 to local table
in proc proc21 adding addrExp r28{0} - 48 to local table
in proc proc21 adding addrExp r28{0} - 52 to local table
finding final parameters for proc21
potential param r28
found new parameter r28
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r10
found new parameter r10
potential param r25
found new parameter r25
potential param r26
found new parameter r26
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc26 ###
in proc proc26 adding addrExp r28{0} - 4 to local table
in proc proc26 adding addrExp r28{0} - 8 to local table
in proc proc26 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc26 adding addrExp r28{0} - 8 to local table
in proc proc26 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc26 adding addrExp r28{0} - 8 to local table
finding final parameters for proc26
potential param r28
found new parameter r28
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param r27
found new parameter r27
potential param r3
found new parameter r3
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r0
found new parameter r0
potential param r11
found new parameter r11
potential param r15
found new parameter r15
potential param r26
found new parameter r26
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc29 ###
in proc proc29 adding addrExp r28{0} - 4 to local table
in proc proc29 adding addrExp r28{0} - 8 to local table
finding final parameters for proc29
potential param r28
found new parameter r28
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param r10
found new parameter r10
potential param r25
found new parameter r25
assgn    9 *32* r24 := m[0x406140]
assgn   14 *32* %pc := m[0x404060]
is readonly
assgn   19 *32* r25 := m[0x406140]
assgn   24 *32* %pc := m[0x404060]
is readonly
assgn   29 *32* r26 := m[0x406140]
assgn   34 *32* %pc := m[0x404060]
is readonly
assgn   39 *32* r24 := m[0x406140]
assgn   44 *32* %pc := m[0x404060]
is readonly
after removing matching assigns (%pc).
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc13 ###
in proc proc13 adding addrExp r28{0} - 4 to local table
in proc proc13 adding addrExp r28{0} - 84 to local table
in proc proc13 adding addrExp r28{0} - 88 to local table
in proc proc13 adding addrExp r28{0} - 92 to local table
in proc proc13 adding addrExp r28{0} - 40 to local table
in proc proc13 adding addrExp r28{0} - 84 to local table
in proc proc13 adding addrExp r28{0} - 88 to local table
in proc proc13 adding addrExp r28{0} - 92 to local table
in proc proc13 adding addrExp r28{0} - 36 to local table
in proc proc13 adding addrExp r28{0} - 84 to local table
in proc proc13 adding addrExp r28{0} - 88 to local table
in proc proc13 adding addrExp r28{0} - 92 to local table
in proc proc13 adding addrExp r28{0} - 32 to local table
in proc proc13 adding addrExp r28{0} - 84 to local table
in proc proc13 adding addrExp r28{0} - 88 to local table
in proc proc13 adding addrExp r28{0} - 92 to local table
in proc proc13 adding addrExp r28{0} - 24 to local table
in proc proc13 adding addrExp r28{0} - 20 to local table
in proc proc13 adding addrExp r28{0} - 28 to local table
in proc proc13 adding addrExp r28{0} - 12 to local table
in proc proc13 adding addrExp r28{0} - 20 to local table
in proc proc13 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc13 adding addrExp r28{0} - 12 to local table
in proc proc13 adding addrExp r28{0} - 20 to local table
in proc proc13 adding addrExp r28{0} - 24 to local table
in proc proc13 adding addrExp r28{0} - 28 to local table
in proc proc13 adding addrExp r28{0} - 32 to local table
in proc proc13 adding addrExp r28{0} - 36 to local table
in proc proc13 adding addrExp r28{0} - 40 to local table
in proc proc13 adding addrExp r28{0} - 84 to local table
in proc proc13 adding addrExp r28{0} - 88 to local table
in proc proc13 adding addrExp r28{0} - 92 to local table
in proc proc13 adding addrExp r28{0} - 4 to local table
in proc proc13 adding addrExp r28{0} - 12 to local table
TYPE ERROR: Existing type at address 0xfffffff4 is not structure or array type
in proc proc13 adding addrExp r28{0} - 20 to local table
TYPE ERROR: Existing type at address 0xffffffec is not structure or array type
in proc proc13 adding addrExp r28{0} - 24 to local table
TYPE ERROR: Existing type at address 0xffffffe8 is not structure or array type
in proc proc13 adding addrExp r28{0} - 28 to local table
TYPE ERROR: Existing type at address 0xffffffe4 is not structure or array type
in proc proc13 adding addrExp r28{0} - 32 to local table
TYPE ERROR: Existing type at address 0xffffffe0 is not structure or array type
in proc proc13 adding addrExp r28{0} - 36 to local table
TYPE ERROR: Existing type at address 0xffffffdc is not structure or array type
in proc proc13 adding addrExp r28{0} - 40 to local table
TYPE ERROR: Existing type at address 0xffffffd8 is not structure or array type
in proc proc13 adding addrExp r28{0} - 84 to local table
TYPE ERROR: Existing type at address 0xffffffac is not structure or array type
in proc proc13 adding addrExp r28{0} - 88 to local table
TYPE ERROR: Existing type at address 0xffffffa8 is not structure or array type
in proc proc13 adding addrExp r28{0} - 92 to local table
TYPE ERROR: Existing type at address 0xffffffa4 is not structure or array type
in proc proc13 adding addrExp r28{0} - 4 to local table
in proc proc13 adding addrExp r28{0} - 12 to local table
TYPE ERROR: Existing type at address 0xfffffff4 is not structure or array type
in proc proc13 adding addrExp r28{0} - 20 to local table
TYPE ERROR: Existing type at address 0xffffffec is not structure or array type
in proc proc13 adding addrExp r28{0} - 24 to local table
TYPE ERROR: Existing type at address 0xffffffe8 is not structure or array type
in proc proc13 adding addrExp r28{0} - 28 to local table
TYPE ERROR: Existing type at address 0xffffffe4 is not structure or array type
in proc proc13 adding addrExp r28{0} - 32 to local table
TYPE ERROR: Existing type at address 0xffffffe0 is not structure or array type
in proc proc13 adding addrExp r28{0} - 36 to local table
TYPE ERROR: Existing type at address 0xffffffdc is not structure or array type
in proc proc13 adding addrExp r28{0} - 40 to local table
TYPE ERROR: Existing type at address 0xffffffd8 is not structure or array type
in proc proc13 adding addrExp r28{0} - 84 to local table
TYPE ERROR: Existing type at address 0xffffffac is not structure or array type
in proc proc13 adding addrExp r28{0} - 88 to local table
TYPE ERROR: Existing type at address 0xffffffa8 is not structure or array type
in proc proc13 adding addrExp r28{0} - 92 to local table
TYPE ERROR: Existing type at address 0xffffffa4 is not structure or array type
in proc proc13 adding addrExp r28{0} - 4 to local table
in proc proc13 adding addrExp r28{0} - 12 to local table
TYPE ERROR: Existing type at address 0xfffffff4 is not structure or array type
in proc proc13 adding addrExp r28{0} - 20 to local table
TYPE ERROR: Existing type at address 0xffffffec is not structure or array type
in proc proc13 adding addrExp r28{0} - 24 to local table
TYPE ERROR: Existing type at address 0xffffffe8 is not structure or array type
in proc proc13 adding addrExp r28{0} - 28 to local table
TYPE ERROR: Existing type at address 0xffffffe4 is not structure or array type
in proc proc13 adding addrExp r28{0} - 32 to local table
TYPE ERROR: Existing type at address 0xffffffe0 is not structure or array type
in proc proc13 adding addrExp r28{0} - 36 to local table
TYPE ERROR: Existing type at address 0xffffffdc is not structure or array type
in proc proc13 adding addrExp r28{0} - 40 to local table
TYPE ERROR: Existing type at address 0xffffffd8 is not structure or array type
in proc proc13 adding addrExp r28{0} - 84 to local table
TYPE ERROR: Existing type at address 0xffffffac is not structure or array type
in proc proc13 adding addrExp r28{0} - 88 to local table
TYPE ERROR: Existing type at address 0xffffffa8 is not structure or array type
in proc proc13 adding addrExp r28{0} - 92 to local table
TYPE ERROR: Existing type at address 0xffffffa4 is not structure or array type
finding final parameters for proc13
potential param r28
found new parameter r28
potential param r0
found new parameter r0
potential param r3
found new parameter r3
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r15
found new parameter r15
potential param r27
found new parameter r27
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
in proc proc12 adding addrExp r28{0} - 4 to local table
finding final parameters for proc12
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
after removing matching assigns (%pc).
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned char; allowing temporarily
WARNING: size 0x20 meet with /*signed?*/char; allowing temporarily
WARNING: size 0x20 meet with /*signed?*/char; allowing temporarily
WARNING: size 0x20 meet with unsigned char; allowing temporarily
WARNING: size 0x20 meet with /*signed?*/char; allowing temporarily
WARNING: size 0x20 meet with /*signed?*/char; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc14 ###
in proc proc14 adding addrExp r28{0} - 0x414 to local table
in proc proc14 adding addrExp r28{0} - 4 to local table
in proc proc14 adding addrExp r28{0} - 0x418 to local table
in proc proc14 adding addrExp r28{0} - 0x40c to local table
in proc proc14 adding addrExp r28{0} - 0x408 to local table
in proc proc14 adding addrExp r28{0} - 0x408 to local table
in proc proc14 adding addrExp r28{0} - 0x408 to local table
in proc proc14 adding addrExp r28{0} - 0x408 to local table
in proc proc14 adding addrExp r28{0} - 0x408 to local table
in proc proc14 adding addrExp r28{0} - 0x408 to local table
in proc proc14 adding addrExp r28{0} - 0x40c to local table
in proc proc14 adding addrExp r28{0} - 0x414 to local table
in proc proc14 adding addrExp r28{0} - 0x40c to local table
in proc proc14 adding addrExp r28{0} - 0x414 to local table
in proc proc14 adding addrExp r28{0} - 0x410 to local table
in proc proc14 adding addrExp r28{0} - 0x410 to local table
in proc proc14 adding addrExp r28{0} - 0x408 to local table
in proc proc14 adding addrExp r28{0} - 0x40c to local table
in proc proc14 adding addrExp r28{0} - 0x410 to local table
in proc proc14 adding addrExp r28{0} - 0x414 to local table
in proc proc14 adding addrExp r28{0} - 0x408 to local table
in proc proc14 adding addrExp r28{0} - 0x40c to local table
in proc proc14 adding addrExp r28{0} - 0x414 to local table
finding final parameters for proc14
potential param r28
found new parameter r28
potential param r10
found new parameter r10
potential param r26
found new parameter r26
potential param r9
found new parameter r9
potential param m[r28{0} + 16]
found new parameter m[r28{0} + 16]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
after removing matching assigns (%pc).
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc16 ###
finding final parameters for proc16
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param r24
found new parameter r24
assgn   10 *32* r24 := m[0]
assgn   38 *32* %pc := m[0x4040a4]
is readonly
assgn   50 *32* %pc := m[0x4040a4]
is readonly
assgn   62 *32* %pc := m[0x4040a8]
is readonly
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
in proc proc17 adding addrExp r28{0} - 4 to local table
in proc proc17 adding addrExp r28{0} - 8 to local table
in proc proc17 adding addrExp r28{0} - 12 to local table
in proc proc17 adding addrExp r28{0} - 16 to local table
in proc proc17 adding addrExp r28{0} - 20 to local table
in proc proc17 adding addrExp r28{0} - 48 to local table
in proc proc17 adding addrExp r28{0} - 52 to local table
in proc proc17 adding addrExp r28{0} - 56 to local table
in proc proc17 adding addrExp r28{0} - 28 to local table
in proc proc17 adding addrExp r28{0} - 32 to local table
in proc proc17 adding addrExp r28{0} - 36 to local table
in proc proc17 adding addrExp r28{0} - 8 to local table
in proc proc17 adding addrExp r28{0} - 40 to local table
in proc proc17 adding addrExp r28{0} - 60 to local table
in proc proc17 adding addrExp r28{0} - 64 to local table
in proc proc17 adding addrExp r28{0} - 68 to local table
in proc proc17 adding addrExp r28{0} - 72 to local table
in proc proc17 adding addrExp r28{0} - 76 to local table
in proc proc17 adding addrExp r28{0} - 60 to local table
in proc proc17 adding addrExp r28{0} - 64 to local table
in proc proc17 adding addrExp r28{0} - 68 to local table
in proc proc17 adding addrExp r28{0} - 72 to local table
in proc proc17 adding addrExp r28{0} - 76 to local table
in proc proc17 adding addrExp r28{0} - 60 to local table
in proc proc17 adding addrExp r28{0} - 64 to local table
in proc proc17 adding addrExp r28{0} - 68 to local table
in proc proc17 adding addrExp r28{0} - 72 to local table
in proc proc17 adding addrExp r28{0} - 76 to local table
finding final parameters for proc17
potential param r28
found new parameter r28
assgn   10 *32* r24 := m[0]
assgn   43 *32* %pc := m[0x4040a4]
is readonly
assgn   55 *32* %pc := m[0x4040a4]
is readonly
assgn   67 *32* %pc := m[0x4040a8]
is readonly
assgn   79 *32* %pc := m[0x4040a8]
is readonly
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
in proc proc18 adding addrExp r28{0} - 4 to local table
in proc proc18 adding addrExp r28{0} - 8 to local table
in proc proc18 adding addrExp r28{0} - 12 to local table
in proc proc18 adding addrExp r28{0} - 16 to local table
in proc proc18 adding addrExp r28{0} - 20 to local table
in proc proc18 adding addrExp r28{0} - 84 to local table
in proc proc18 adding addrExp r28{0} - 88 to local table
in proc proc18 adding addrExp r28{0} - 92 to local table
in proc proc18 adding addrExp r28{0} - 28 to local table
in proc proc18 adding addrExp r28{0} - 40 to local table
in proc proc18 adding addrExp r28{0} - 60 to local table
in proc proc18 adding addrExp r28{0} - 64 to local table
in proc proc18 adding addrExp r28{0} - 32 to local table
in proc proc18 adding addrExp r28{0} - 56 to local table
in proc proc18 adding addrExp r28{0} - 52 to local table
in proc proc18 adding addrExp r28{0} - 36 to local table
in proc proc18 adding addrExp r28{0} - 48 to local table
in proc proc18 adding addrExp r28{0} - 44 to local table
in proc proc18 adding addrExp r28{0} - 96 to local table
in proc proc18 adding addrExp r28{0} - 100 to local table
in proc proc18 adding addrExp r28{0} - 104 to local table
in proc proc18 adding addrExp r28{0} - 108 to local table
in proc proc18 adding addrExp r28{0} - 112 to local table
in proc proc18 adding addrExp r28{0} - 96 to local table
in proc proc18 adding addrExp r28{0} - 100 to local table
in proc proc18 adding addrExp r28{0} - 104 to local table
in proc proc18 adding addrExp r28{0} - 108 to local table
in proc proc18 adding addrExp r28{0} - 112 to local table
in proc proc18 adding addrExp r28{0} - 96 to local table
in proc proc18 adding addrExp r28{0} - 100 to local table
in proc proc18 adding addrExp r28{0} - 104 to local table
in proc proc18 adding addrExp r28{0} - 108 to local table
in proc proc18 adding addrExp r28{0} - 112 to local table
in proc proc18 adding addrExp r28{0} - 96 to local table
in proc proc18 adding addrExp r28{0} - 100 to local table
in proc proc18 adding addrExp r28{0} - 104 to local table
in proc proc18 adding addrExp r28{0} - 108 to local table
in proc proc18 adding addrExp r28{0} - 112 to local table
in proc proc18 adding addrExp r28{0} - 8 to local table
in proc proc18 adding addrExp r28{0} - 76 to local table
in proc proc18 adding addrExp r28{0} - 68 to local table
in proc proc18 adding addrExp r28{0} - 96 to local table
finding final parameters for proc18
potential param r28
found new parameter r28
after removing matching assigns (%pc).
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc35 ###
in proc proc35 adding addrExp r28{0} - 12 to local table
in proc proc35 adding addrExp r28{0} - 4 to local table
in proc proc35 adding addrExp r28{0} - 8 to local table
in proc proc35 adding addrExp r28{0} - 12 to local table
in proc proc35 adding addrExp r28{0} - 12 to local table
in proc proc35 adding addrExp r28{0} - 12 to local table
in proc proc35 adding addrExp r28{0} - 12 to local table
in proc proc35 adding addrExp r28{0} - 12 to local table
in proc proc35 adding addrExp r28{0} - 12 to local table
finding final parameters for proc35
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r25
found new parameter r25
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param r10
found new parameter r10
potential param r26
found new parameter r26
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} - 12]
found new parameter m[r28{0} - 12]
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
in proc proc30 adding addrExp r28{0} - 28 to local table
in proc proc30 adding addrExp r28{0} - 4 to local table
in proc proc30 adding addrExp r28{0} - 8 to local table
in proc proc30 adding addrExp r28{0} - 12 to local table
in proc proc30 adding addrExp r28{0} - 16 to local table
finding final parameters for proc30
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} - 28]
found new parameter m[r28{0} - 28]
potential param r10
found new parameter r10
potential param r25
found new parameter r25
potential param r26
found new parameter r26
assgn   15 *32* %pc := m[0x404070]
is readonly
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
in proc proc23 adding addrExp r28{0} - 4 to local table
in proc proc23 adding addrExp r28{0} - 8 to local table
in proc proc23 adding addrExp r28{0} - 12 to local table
in proc proc23 adding addrExp r28{0} - 16 to local table
in proc proc23 adding addrExp r28{0} - 20 to local table
in proc proc23 adding addrExp r28{0} - 24 to local table
finding final parameters for proc23
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
after removing matching assigns (%pc).
in proc proc22 adding addrExp r28{0} - 4 to local table
in proc proc22 adding addrExp r28{0} - 8 to local table
in proc proc22 adding addrExp r28{0} - 12 to local table
in proc proc22 adding addrExp r28{0} - 16 to local table
finding final parameters for proc22
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
assgn    9 *32* r24 := m[0x406150]
assgn   14 *32* %pc := m[0x404060]
is readonly
assgn  140 *32* %pc := m[0x404028]
is readonly
after removing matching assigns (%pc).
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc31 ###
in proc proc31 adding addrExp r28{0} - 96 to local table
in proc proc31 adding addrExp r28{0} - 8 to local table
in proc proc31 adding addrExp r28{0} - 12 to local table
in proc proc31 adding addrExp r28{0} - 24 to local table
in proc proc31 adding addrExp r28{0} - 28 to local table
in proc proc31 adding addrExp r28{0} - 32 to local table
in proc proc31 adding addrExp r28{0} - 36 to local table
in proc proc31 adding addrExp r28{0} - 40 to local table
in proc proc31 adding addrExp r28{0} - 44 to local table
in proc proc31 adding addrExp r28{0} - 48 to local table
in proc proc31 adding addrExp r28{0} - 52 to local table
in proc proc31 adding addrExp r28{0} - 68 to local table
in proc proc31 adding addrExp r28{0} - 72 to local table
in proc proc31 adding addrExp r28{0} - 76 to local table
in proc proc31 adding addrExp r28{0} - 80 to local table
in proc proc31 adding addrExp r28{0} - 4 to local table
in proc proc31 adding addrExp r28{0} - 56 to local table
in proc proc31 adding addrExp r28{0} - 60 to local table
in proc proc31 adding addrExp r28{0} - 64 to local table
in proc proc31 adding addrExp r28{0} - 20 to local table
in proc proc31 adding addrExp r28{0} - 16 to local table
in proc proc31 adding addrExp r28{0} - 56 to local table
in proc proc31 adding addrExp r28{0} - 60 to local table
in proc proc31 adding addrExp r28{0} - 64 to local table
size 0x20 meet with size 0x8!
in proc proc31 adding addrExp r28{0} - 16 to local table
in proc proc31 adding addrExp r28{0} - 56 to local table
in proc proc31 adding addrExp r28{0} - 60 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffc4 existing type HANDLE but added type unsigned int
in proc proc31 adding addrExp r28{0} - 40 to local table
in proc proc31 adding addrExp r28{0} - 28 to local table
in proc proc31 adding addrExp r28{0} - 56 to local table
in proc proc31 adding addrExp r28{0} - 60 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffc4 existing type HANDLE but added type unsigned int
in proc proc31 adding addrExp r28{0} - 44 to local table
in proc proc31 adding addrExp r28{0} - 12 to local table
in proc proc31 adding addrExp r28{0} - 56 to local table
in proc proc31 adding addrExp r28{0} - 60 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffc4 existing type HANDLE but added type unsigned int
in proc proc31 adding addrExp r28{0} - 48 to local table
in proc proc31 adding addrExp r28{0} - 24 to local table
in proc proc31 adding addrExp r28{0} - 56 to local table
in proc proc31 adding addrExp r28{0} - 60 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffc4 existing type HANDLE but added type unsigned int
in proc proc31 adding addrExp r28{0} - 52 to local table
in proc proc31 adding addrExp r28{0} - 36 to local table
in proc proc31 adding addrExp r28{0} - 56 to local table
in proc proc31 adding addrExp r28{0} - 60 to local table
in proc proc31 adding addrExp r28{0} - 64 to local table
in proc proc31 adding addrExp r28{0} - 56 to local table
in proc proc31 adding addrExp r28{0} - 60 to local table
in proc proc31 adding addrExp r28{0} - 64 to local table
in proc proc31 adding addrExp r28{0} - 16 to local table
in proc proc31 adding addrExp r28{0} - 56 to local table
in proc proc31 adding addrExp r28{0} - 60 to local table
in proc proc31 adding addrExp r28{0} - 64 to local table
in proc proc31 adding addrExp r28{0} - 56 to local table
in proc proc31 adding addrExp r28{0} - 60 to local table
in proc proc31 adding addrExp r28{0} - 64 to local table
in proc proc31 adding addrExp r28{0} - 16 to local table
in proc proc31 adding addrExp r28{0} - 56 to local table
in proc proc31 adding addrExp r28{0} - 60 to local table
in proc proc31 adding addrExp r28{0} - 64 to local table
in proc proc31 adding addrExp r28{0} - 64 to local table
in proc proc31 adding addrExp r28{0} - 68 to local table
in proc proc31 adding addrExp r28{0} - 72 to local table
in proc proc31 adding addrExp r28{0} - 16 to local table
in proc proc31 adding addrExp r28{0} - 64 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffc0 existing type unsigned int but added type __size8 *
in proc proc31 adding addrExp r28{0} - 68 to local table
in proc proc31 adding addrExp r28{0} - 72 to local table
in proc proc31 adding addrExp r28{0} - 8 to local table
in proc proc31 adding addrExp r28{0} - 32 to local table
in proc proc31 adding addrExp r28{0} - 64 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffc0 existing type unsigned int but added type __size8 *
in proc proc31 adding addrExp r28{0} - 68 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffbc existing type __size8 * but added type unsigned int
in proc proc31 adding addrExp r28{0} - 8 to local table
in proc proc31 adding addrExp r28{0} - 64 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffc0 existing type unsigned int but added type __size8 *
in proc proc31 adding addrExp r28{0} - 68 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffbc existing type __size8 * but added type unsigned int
in proc proc31 adding addrExp r28{0} - 32 to local table
in proc proc31 adding addrExp r28{0} - 64 to local table
in proc proc31 adding addrExp r28{0} - 68 to local table
in proc proc31 adding addrExp r28{0} - 72 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffb8 existing type unsigned int but added type __size8 *
in proc proc31 adding addrExp r28{0} - 76 to local table
in proc proc31 adding addrExp r28{0} - 80 to local table
in proc proc31 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc31 adding addrExp r28{0} - 8 to local table
TYPE ERROR: Existing type at address 0xfffffff8 is not structure or array type
in proc proc31 adding addrExp r28{0} - 12 to local table
TYPE ERROR: Existing type at address 0xfffffff4 is not structure or array type
in proc proc31 adding addrExp r28{0} - 16 to local table
in proc proc31 adding addrExp r28{0} - 20 to local table
in proc proc31 adding addrExp r28{0} - 24 to local table
TYPE ERROR: Existing type at address 0xffffffe8 is not structure or array type
in proc proc31 adding addrExp r28{0} - 28 to local table
TYPE ERROR: Existing type at address 0xffffffe4 is not structure or array type
in proc proc31 adding addrExp r28{0} - 32 to local table
TYPE ERROR: Existing type at address 0xffffffe0 is not structure or array type
in proc proc31 adding addrExp r28{0} - 36 to local table
TYPE ERROR: Existing type at address 0xffffffdc is not structure or array type
in proc proc31 adding addrExp r28{0} - 40 to local table
TYPE ERROR: Existing type at address 0xffffffd8 is not structure or array type
in proc proc31 adding addrExp r28{0} - 44 to local table
TYPE ERROR: Existing type at address 0xffffffd4 is not structure or array type
in proc proc31 adding addrExp r28{0} - 48 to local table
TYPE ERROR: Existing type at address 0xffffffd0 is not structure or array type
in proc proc31 adding addrExp r28{0} - 52 to local table
TYPE ERROR: Existing type at address 0xffffffcc is not structure or array type
in proc proc31 adding addrExp r28{0} - 56 to local table
in proc proc31 adding addrExp r28{0} - 60 to local table
in proc proc31 adding addrExp r28{0} - 64 to local table
in proc proc31 adding addrExp r28{0} - 68 to local table
TYPE ERROR: Existing type at address 0xffffffbc is not structure or array type
in proc proc31 adding addrExp r28{0} - 72 to local table
TYPE ERROR: Existing type at address 0xffffffb8 is not structure or array type
in proc proc31 adding addrExp r28{0} - 76 to local table
TYPE ERROR: Existing type at address 0xffffffb4 is not structure or array type
in proc proc31 adding addrExp r28{0} - 80 to local table
TYPE ERROR: Existing type at address 0xffffffb0 is not structure or array type
finding final parameters for proc31
potential param r28
found new parameter r28
potential param r9
found new parameter r9
potential param r11
found new parameter r11
potential param r27
found new parameter r27
potential param m[r28{0} - 96]
found new parameter m[r28{0} - 96]
potential param r10
found new parameter r10
after removing matching assigns (%pc).
finding final parameters for proc36
potential param r24
found new parameter r24
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
assgn   13 *32* %pc := m[0x40401c]
is readonly
assgn   18 *32* tmp1 := m[0x40613c]
assgn   21 *32* tmp1 := m[0x405474]
assgn   33 *32* %pc := m[0x406164]
assgn   45 *32* %pc := m[0x406164]
assgn   47 *32* r26 := m[0x406130]
assgn   59 *32* r24 := m[0x406130]
assgn   73 *32* %pc := m[0x406168]
assgn   80 *32* %pc := m[0x406160]
assgn  117 *32* %pc := m[0x404028]
is readonly
assgn  131 *32* tmp1 := m[0x40613c]
assgn  134 *32* tmp1 := m[0x405474]
assgn  147 *32* %pc := m[0x406164]
assgn  160 *32* %pc := m[0x406164]
assgn  162 *32* r25 := m[0x406130]
assgn  174 *32* r26 := m[0x406130]
assgn  188 *32* %pc := m[0x406168]
assgn  195 *32* %pc := m[0x406160]
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc33 ###
in proc proc33 adding addrExp r28{0} - 12 to local table
in proc proc33 adding addrExp r28{0} - 16 to local table
in proc proc33 adding addrExp r28{0} - 20 to local table
in proc proc33 adding addrExp r28{0} - 48 to local table
in proc proc33 adding addrExp r28{0} - 52 to local table
in proc proc33 adding addrExp r28{0} - 44 to local table
in proc proc33 adding addrExp r28{0} - 4 to local table
in proc proc33 adding addrExp r28{0} - 24 to local table
in proc proc33 adding addrExp r28{0} - 28 to local table
in proc proc33 adding addrExp r28{0} - 32 to local table
in proc proc33 adding addrExp r28{0} - 32 to local table
in proc proc33 adding addrExp r28{0} - 36 to local table
in proc proc33 adding addrExp r28{0} - 40 to local table
in proc proc33 adding addrExp r28{0} - 44 to local table
in proc proc33 adding addrExp r28{0} - 32 to local table
in proc proc33 adding addrExp r28{0} - 36 to local table
in proc proc33 adding addrExp r28{0} - 40 to local table
in proc proc33 adding addrExp r28{0} - 44 to local table
in proc proc33 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc33 adding addrExp r28{0} - 12 to local table
in proc proc33 adding addrExp r28{0} - 16 to local table
in proc proc33 adding addrExp r28{0} - 20 to local table
in proc proc33 adding addrExp r28{0} - 24 to local table
in proc proc33 adding addrExp r28{0} - 28 to local table
in proc proc33 adding addrExp r28{0} - 32 to local table
in proc proc33 adding addrExp r28{0} - 36 to local table
in proc proc33 adding addrExp r28{0} - 40 to local table
in proc proc33 adding addrExp r28{0} - 44 to local table
TYPE ERROR: Existing type at address 0xffffffd4 is not structure or array type
in proc proc33 adding addrExp r28{0} - 48 to local table
in proc proc33 adding addrExp r28{0} - 52 to local table
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
in proc proc33 adding addrExp r28{0} - 32 to local table
in proc proc33 adding addrExp r28{0} - 36 to local table
in proc proc33 adding addrExp r28{0} - 40 to local table
size 0x20 meet with size 0x8!
in proc proc33 adding addrExp r28{0} - 16 to local table
in proc proc33 adding addrExp r28{0} - 32 to local table
in proc proc33 adding addrExp r28{0} - 36 to local table
in proc proc33 adding addrExp r28{0} - 20 to local table
in proc proc33 adding addrExp r28{0} - 12 to local table
in proc proc33 adding addrExp r28{0} - 32 to local table
in proc proc33 adding addrExp r28{0} - 36 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffdc existing type unsigned int but added type __size8 *
in proc proc33 adding addrExp r28{0} - 40 to local table
in proc proc33 adding addrExp r28{0} - 40 to local table
in proc proc33 adding addrExp r28{0} - 44 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffd4 existing type unsigned int but added type __size8 *
in proc proc33 adding addrExp r28{0} - 48 to local table
size 0x20 meet with size 0x8!
in proc proc33 adding addrExp r28{0} - 40 to local table
in proc proc33 adding addrExp r28{0} - 44 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffd4 existing type unsigned int but added type __size8 *
in proc proc33 adding addrExp r28{0} - 48 to local table
in proc proc33 adding addrExp r28{0} - 52 to local table
in proc proc33 adding addrExp r28{0} - 40 to local table
in proc proc33 adding addrExp r28{0} - 44 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffd4 existing type unsigned int but added type __size8 *
in proc proc33 adding addrExp r28{0} - 48 to local table
in proc proc33 adding addrExp r28{0} - 52 to local table
in proc proc33 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc33 adding addrExp r28{0} - 12 to local table
TYPE ERROR: Existing type at address 0xfffffff4 is not structure or array type
in proc proc33 adding addrExp r28{0} - 16 to local table
TYPE ERROR: Existing type at address 0xfffffff0 is not structure or array type
in proc proc33 adding addrExp r28{0} - 20 to local table
TYPE ERROR: Existing type at address 0xffffffec is not structure or array type
in proc proc33 adding addrExp r28{0} - 24 to local table
in proc proc33 adding addrExp r28{0} - 28 to local table
in proc proc33 adding addrExp r28{0} - 32 to local table
in proc proc33 adding addrExp r28{0} - 36 to local table
in proc proc33 adding addrExp r28{0} - 40 to local table
in proc proc33 adding addrExp r28{0} - 44 to local table
TYPE ERROR: Existing type at address 0xffffffd4 is not structure or array type
in proc proc33 adding addrExp r28{0} - 48 to local table
TYPE ERROR: Existing type at address 0xffffffd0 is not structure or array type
in proc proc33 adding addrExp r28{0} - 52 to local table
TYPE ERROR: Existing type at address 0xffffffcc is not structure or array type
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
in proc proc33 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc33 adding addrExp r28{0} - 12 to local table
TYPE ERROR: Existing type at address 0xfffffff4 is not structure or array type
in proc proc33 adding addrExp r28{0} - 16 to local table
TYPE ERROR: Existing type at address 0xfffffff0 is not structure or array type
in proc proc33 adding addrExp r28{0} - 20 to local table
TYPE ERROR: Existing type at address 0xffffffec is not structure or array type
in proc proc33 adding addrExp r28{0} - 24 to local table
in proc proc33 adding addrExp r28{0} - 28 to local table
in proc proc33 adding addrExp r28{0} - 32 to local table
in proc proc33 adding addrExp r28{0} - 36 to local table
in proc proc33 adding addrExp r28{0} - 40 to local table
in proc proc33 adding addrExp r28{0} - 44 to local table
TYPE ERROR: Existing type at address 0xffffffd4 is not structure or array type
in proc proc33 adding addrExp r28{0} - 48 to local table
TYPE ERROR: Existing type at address 0xffffffd0 is not structure or array type
in proc proc33 adding addrExp r28{0} - 52 to local table
TYPE ERROR: Existing type at address 0xffffffcc is not structure or array type
finding final parameters for proc33
potential param r28
found new parameter r28
potential param global206
potential param r8
found new parameter r8
potential param global207
potential param global87
assgn    1 *32* r24 := m[0x405568]
assgn   10 *16* r0 := m[0x40556a]
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc32 ###
finding final parameters for proc32
assgn    9 *32* r24 := m[0x406140]
assgn   14 *32* %pc := m[0x404060]
is readonly
assgn   19 *32* r25 := m[0x406140]
assgn   24 *32* %pc := m[0x404060]
is readonly
assgn   29 *32* r26 := m[0x406140]
assgn   34 *32* %pc := m[0x404060]
is readonly
assgn   72 *32* %pc := m[0x40401c]
is readonly
assgn   80 *32* tmp1 := m[0x40613c]
assgn   83 *32* tmp1 := m[0x405474]
assgn   92 *32* %pc := m[0x40401c]
is readonly
assgn  108 *32* r25 := m[0x406130]
assgn  113 *32* %pc := m[0x404028]
is readonly
assgn  122 *32* %pc := m[0x40401c]
is readonly
assgn  138 *32* r26 := m[0x406130]
assgn  143 *32* %pc := m[0x404028]
is readonly
assgn  147 *32* r24 := m[0x406130]
assgn  164 *32* %pc := m[0x40401c]
is readonly
assgn  180 *32* r25 := m[0x406130]
assgn  185 *32* %pc := m[0x404028]
is readonly
assgn  199 *32* r26 := m[0x406130]
assgn  221 *32* r24 := m[0x406130]
assgn  233 *32* r25 := m[0x406130]
assgn  245 *32* r26 := m[0x406130]
assgn  255 *32* r24 := m[0x406130]
assgn  263 *32* %pc := m[0x40401c]
is readonly
assgn  284 *32* r26 := m[0x406130]
assgn  297 *32* r25 := m[0x406130]
assgn  313 *32* %pc := m[0x40401c]
is readonly
assgn  320 *32* r24 := m[0x406130]
assgn  333 *32* %pc := m[0x40401c]
is readonly
assgn  350 *32* %pc := m[0x404048]
is readonly
assgn  377 *32* %pc := m[0x404048]
is readonly
assgn  390 *32* %pc := m[0x40400c]
is readonly
assgn  394 *32* r24 := m[0x406130]
after removing matching assigns (%pc).
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x20 meet with /*signed?*/long long; allowing temporarily
WARNING: size 0x20 meet with /*signed?*/long long; allowing temporarily
WARNING: size 0x20 meet with long long; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc20 ###
in proc proc20 adding addrExp r28{0} - 56 to local table
in proc proc20 adding addrExp r28{0} - 4 to local table
in proc proc20 adding addrExp r28{0} - 24 to local table
in proc proc20 adding addrExp r28{0} - 28 to local table
in proc proc20 adding addrExp r28{0} - 32 to local table
in proc proc20 adding addrExp r28{0} - 16 to local table
in proc proc20 adding addrExp r28{0} - 24 to local table
in proc proc20 adding addrExp r28{0} - 28 to local table
in proc proc20 adding addrExp r28{0} - 32 to local table
in proc proc20 adding addrExp r28{0} - 12 to local table
in proc proc20 adding addrExp r28{0} - 24 to local table
in proc proc20 adding addrExp r28{0} - 28 to local table
in proc proc20 adding addrExp r28{0} - 32 to local table
in proc proc20 adding addrExp r28{0} - 20 to local table
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 24 to local table
in proc proc20 adding addrExp r28{0} - 28 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffe4 existing type HANDLE but added type unsigned int
WARNING: size 0x20 meet with unsigned char; allowing temporarily
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 24 to local table
in proc proc20 adding addrExp r28{0} - 28 to local table
in proc proc20 adding addrExp r28{0} - 32 to local table
size 0x20 meet with size 0x8!
in proc proc20 adding addrExp r28{0} - 24 to local table
in proc proc20 adding addrExp r28{0} - 28 to local table
in proc proc20 adding addrExp r28{0} - 32 to local table
in proc proc20 adding addrExp r28{0} - 24 to local table
in proc proc20 adding addrExp r28{0} - 28 to local table
in proc proc20 adding addrExp r28{0} - 32 to local table
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
in proc proc20 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 12 to local table
in proc proc20 adding addrExp r28{0} - 16 to local table
in proc proc20 adding addrExp r28{0} - 20 to local table
in proc proc20 adding addrExp r28{0} - 24 to local table
in proc proc20 adding addrExp r28{0} - 28 to local table
in proc proc20 adding addrExp r28{0} - 32 to local table
integer size 0x40 meet with SizeType size 0x20!
in proc proc20 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 12 to local table
in proc proc20 adding addrExp r28{0} - 16 to local table
in proc proc20 adding addrExp r28{0} - 20 to local table
in proc proc20 adding addrExp r28{0} - 24 to local table
in proc proc20 adding addrExp r28{0} - 28 to local table
in proc proc20 adding addrExp r28{0} - 32 to local table
integer size 0x40 meet with SizeType size 0x20!
in proc proc20 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 12 to local table
in proc proc20 adding addrExp r28{0} - 16 to local table
in proc proc20 adding addrExp r28{0} - 20 to local table
in proc proc20 adding addrExp r28{0} - 24 to local table
in proc proc20 adding addrExp r28{0} - 28 to local table
in proc proc20 adding addrExp r28{0} - 32 to local table
in proc proc20 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc20 adding addrExp r28{0} - 8 to local table
in proc proc20 adding addrExp r28{0} - 12 to local table
in proc proc20 adding addrExp r28{0} - 16 to local table
in proc proc20 adding addrExp r28{0} - 20 to local table
in proc proc20 adding addrExp r28{0} - 24 to local table
in proc proc20 adding addrExp r28{0} - 28 to local table
in proc proc20 adding addrExp r28{0} - 32 to local table
finding final parameters for proc20
potential param r28
found new parameter r28
potential param m[r28{0} - 56]
found new parameter m[r28{0} - 56]
potential param r10
found new parameter r10
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r0
found new parameter r0
potential param r11
found new parameter r11
potential param r27
found new parameter r27
assgn    8 *32* %pc := m[0x404050]
is readonly
assgn   17 *32* %pc := m[0x404050]
is readonly
assgn   26 *32* %pc := m[0x404050]
is readonly
assgn   35 *32* %pc := m[0x404050]
is readonly
assgn   44 *32* %pc := m[0x404050]
is readonly
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
in proc proc19 adding addrExp r28{0} - 16 to local table
in proc proc19 adding addrExp r28{0} - 20 to local table
in proc proc19 adding addrExp r28{0} - 24 to local table
in proc proc19 adding addrExp r28{0} - 28 to local table
in proc proc19 adding addrExp r28{0} - 4 to local table
in proc proc19 adding addrExp r28{0} - 8 to local table
in proc proc19 adding addrExp r28{0} - 12 to local table
in proc proc19 adding addrExp r28{0} - 12 to local table
in proc proc19 adding addrExp r28{0} - 16 to local table
in proc proc19 adding addrExp r28{0} - 16 to local table
in proc proc19 adding addrExp r28{0} - 20 to local table
in proc proc19 adding addrExp r28{0} - 20 to local table
in proc proc19 adding addrExp r28{0} - 24 to local table
in proc proc19 adding addrExp r28{0} - 24 to local table
in proc proc19 adding addrExp r28{0} - 28 to local table
in proc proc19 adding addrExp r28{0} - 12 to local table
in proc proc19 adding addrExp r28{0} - 16 to local table
in proc proc19 adding addrExp r28{0} - 20 to local table
in proc proc19 adding addrExp r28{0} - 24 to local table
in proc proc19 adding addrExp r28{0} - 28 to local table
in proc proc19 adding addrExp r28{0} - 12 to local table
in proc proc19 adding addrExp r28{0} - 16 to local table
in proc proc19 adding addrExp r28{0} - 20 to local table
in proc proc19 adding addrExp r28{0} - 24 to local table
in proc proc19 adding addrExp r28{0} - 28 to local table
finding final parameters for proc19
potential param r28
found new parameter r28
assgn   21 *32* %pc := m[0x40617c]
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc28 ###
in proc proc28 adding addrExp r28{0} - 4 to local table
in proc proc28 adding addrExp r28{0} - 32 to local table
in proc proc28 adding addrExp r28{0} - 36 to local table
in proc proc28 adding addrExp r28{0} - 40 to local table
in proc proc28 adding addrExp r28{0} - 44 to local table
in proc proc28 adding addrExp r28{0} - 48 to local table
in proc proc28 adding addrExp r28{0} - 52 to local table
finding final parameters for proc28
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param global95
assgn   44 *32* %pc := m[0x40404c]
is readonly
assgn   66 *32* %pc := m[0x40404c]
is readonly
assgn   75 *32* %pc := m[0x404048]
is readonly
assgn  103 *32* %pc := m[0x40404c]
is readonly
assgn  131 *32* %pc := m[0x404044]
is readonly
assgn  138 *32* %pc := m[0x404040]
is readonly
assgn  162 *32* %pc := m[0x406180]
assgn  188 *32* %pc := m[0x40403c]
is readonly
assgn  212 *32* %pc := m[0x40403c]
is readonly
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc27 ###
in proc proc27 adding addrExp r28{0} - 4 to local table
in proc proc27 adding addrExp r28{0} - 144 to local table
in proc proc27 adding addrExp r28{0} - 148 to local table
in proc proc27 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc27 adding addrExp r28{0} - 144 to local table
in proc proc27 adding addrExp r28{0} - 148 to local table
finding final parameters for proc27
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r26
found new parameter r26
potential param global259
assgn   51 *32* r25 := m[0x406140]
assgn   56 *32* %pc := m[0x404060]
is readonly
assgn   61 *32* r26 := m[0x406148]
assgn   66 *32* %pc := m[0x404060]
is readonly
assgn   71 *32* r24 := m[0x406148]
assgn   76 *32* %pc := m[0x404060]
is readonly
assgn   81 *32* r25 := m[0x406148]
assgn   86 *32* %pc := m[0x404060]
is readonly
assgn   91 *32* r26 := m[0x406148]
assgn   96 *32* %pc := m[0x404060]
is readonly
assgn  101 *32* r24 := m[0x406148]
assgn  106 *32* %pc := m[0x404060]
is readonly
assgn  129 *32* %pc := m[0x404038]
is readonly
assgn  174 *32* %pc := m[0x406180]
after removing matching assigns (%pc).
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc25 ###
in proc proc25 adding addrExp r28{0} - 844 to local table
in proc proc25 adding addrExp r28{0} - 8 to local table
in proc proc25 adding addrExp r28{0} - 12 to local table
in proc proc25 adding addrExp r28{0} - 20 to local table
in proc proc25 adding addrExp r28{0} - 40 to local table
in proc proc25 adding addrExp r28{0} - 772 to local table
in proc proc25 adding addrExp r28{0} - 776 to local table
in proc proc25 adding addrExp r28{0} - 848 to local table
in proc proc25 adding addrExp r28{0} - 868 to local table
in proc proc25 adding addrExp r28{0} - 872 to local table
in proc proc25 adding addrExp r28{0} - 876 to local table
in proc proc25 adding addrExp r28{0} - 880 to local table
in proc proc25 adding addrExp r28{0} - 884 to local table
in proc proc25 adding addrExp r28{0} - 888 to local table
in proc proc25 adding addrExp r28{0} - 892 to local table
in proc proc25 adding addrExp r28{0} - 4 to local table
in proc proc25 adding addrExp r28{0} - 852 to local table
in proc proc25 adding addrExp r28{0} - 856 to local table
in proc proc25 adding addrExp r28{0} - 860 to local table
in proc proc25 adding addrExp r28{0} - 864 to local table
in proc proc25 adding addrExp r28{0} - 844 to local table
in proc proc25 adding addrExp r28{0} - 756 to local table
in proc proc25 adding addrExp r28{0} - 768 to local table
in proc proc25 adding addrExp r28{0} - 772 to local table
in proc proc25 adding addrExp r28{0} - 852 to local table
in proc proc25 adding addrExp r28{0} - 856 to local table
in proc proc25 adding addrExp r28{0} - 860 to local table
in proc proc25 adding addrExp r28{0} - 40 to local table
in proc proc25 adding addrExp r28{0} - 852 to local table
in proc proc25 adding addrExp r28{0} - 856 to local table
in proc proc25 adding addrExp r28{0} - 860 to local table
in proc proc25 adding addrExp r28{0} - 848 to local table
in proc proc25 adding addrExp r28{0} - 852 to local table
in proc proc25 adding addrExp r28{0} - 856 to local table
in proc proc25 adding addrExp r28{0} - 860 to local table
in proc proc25 adding addrExp r28{0} - 8 to local table
in proc proc25 adding addrExp r28{0} - 852 to local table
in proc proc25 adding addrExp r28{0} - 856 to local table
in proc proc25 adding addrExp r28{0} - 860 to local table
in proc proc25 adding addrExp r28{0} - 12 to local table
in proc proc25 adding addrExp r28{0} - 852 to local table
in proc proc25 adding addrExp r28{0} - 856 to local table
in proc proc25 adding addrExp r28{0} - 860 to local table
in proc proc25 adding addrExp r28{0} - 776 to local table
in proc proc25 adding addrExp r28{0} - 852 to local table
in proc proc25 adding addrExp r28{0} - 856 to local table
in proc proc25 adding addrExp r28{0} - 860 to local table
in proc proc25 adding addrExp r28{0} - 20 to local table
in proc proc25 adding addrExp r28{0} - 852 to local table
in proc proc25 adding addrExp r28{0} - 856 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffca8 existing type HANDLE but added type /*signed?*/int
in proc proc25 adding addrExp r28{0} - 860 to local table
in proc proc25 adding addrExp r28{0} - 864 to local table
in proc proc25 adding addrExp r28{0} - 868 to local table
in proc proc25 adding addrExp r28{0} - 872 to local table
in proc proc25 adding addrExp r28{0} - 876 to local table
in proc proc25 adding addrExp r28{0} - 880 to local table
in proc proc25 adding addrExp r28{0} - 884 to local table
in proc proc25 adding addrExp r28{0} - 884 to local table
in proc proc25 adding addrExp r28{0} - 888 to local table
in proc proc25 adding addrExp r28{0} - 892 to local table
in proc proc25 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc25 adding addrExp r28{0} - 8 to local table
TYPE ERROR: Existing type at address 0xfffffff8 is not structure or array type
in proc proc25 adding addrExp r28{0} - 12 to local table
TYPE ERROR: Existing type at address 0xfffffff4 is not structure or array type
in proc proc25 adding addrExp r28{0} - 20 to local table
TYPE ERROR: Existing type at address 0xffffffec is not structure or array type
in proc proc25 adding addrExp r28{0} - 40 to local table
TYPE ERROR: Existing type at address 0xffffffd8 is not structure or array type
in proc proc25 adding addrExp r28{0} - 756 to local table
in proc proc25 adding addrExp r28{0} - 768 to local table
in proc proc25 adding addrExp r28{0} - 772 to local table
in proc proc25 adding addrExp r28{0} - 776 to local table
TYPE ERROR: Existing type at address 0xfffffcf8 is not structure or array type
in proc proc25 adding addrExp r28{0} - 844 to local table
in proc proc25 adding addrExp r28{0} - 848 to local table
TYPE ERROR: Existing type at address 0xfffffcb0 is not structure or array type
in proc proc25 adding addrExp r28{0} - 852 to local table
in proc proc25 adding addrExp r28{0} - 856 to local table
in proc proc25 adding addrExp r28{0} - 860 to local table
in proc proc25 adding addrExp r28{0} - 864 to local table
in proc proc25 adding addrExp r28{0} - 868 to local table
TYPE ERROR: Existing type at address 0xfffffc9c is not structure or array type
in proc proc25 adding addrExp r28{0} - 872 to local table
TYPE ERROR: Existing type at address 0xfffffc98 is not structure or array type
in proc proc25 adding addrExp r28{0} - 876 to local table
TYPE ERROR: Existing type at address 0xfffffc94 is not structure or array type
in proc proc25 adding addrExp r28{0} - 880 to local table
TYPE ERROR: Existing type at address 0xfffffc90 is not structure or array type
in proc proc25 adding addrExp r28{0} - 884 to local table
TYPE ERROR: Existing type at address 0xfffffc8c is not structure or array type
in proc proc25 adding addrExp r28{0} - 888 to local table
TYPE ERROR: Existing type at address 0xfffffc88 is not structure or array type
in proc proc25 adding addrExp r28{0} - 892 to local table
TYPE ERROR: Existing type at address 0xfffffc84 is not structure or array type
in proc proc25 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc25 adding addrExp r28{0} - 8 to local table
TYPE ERROR: Existing type at address 0xfffffff8 is not structure or array type
in proc proc25 adding addrExp r28{0} - 12 to local table
TYPE ERROR: Existing type at address 0xfffffff4 is not structure or array type
in proc proc25 adding addrExp r28{0} - 20 to local table
TYPE ERROR: Existing type at address 0xffffffec is not structure or array type
in proc proc25 adding addrExp r28{0} - 40 to local table
TYPE ERROR: Existing type at address 0xffffffd8 is not structure or array type
in proc proc25 adding addrExp r28{0} - 756 to local table
in proc proc25 adding addrExp r28{0} - 768 to local table
in proc proc25 adding addrExp r28{0} - 772 to local table
in proc proc25 adding addrExp r28{0} - 776 to local table
TYPE ERROR: Existing type at address 0xfffffcf8 is not structure or array type
in proc proc25 adding addrExp r28{0} - 844 to local table
in proc proc25 adding addrExp r28{0} - 848 to local table
TYPE ERROR: Existing type at address 0xfffffcb0 is not structure or array type
in proc proc25 adding addrExp r28{0} - 852 to local table
in proc proc25 adding addrExp r28{0} - 856 to local table
in proc proc25 adding addrExp r28{0} - 860 to local table
in proc proc25 adding addrExp r28{0} - 864 to local table
in proc proc25 adding addrExp r28{0} - 868 to local table
TYPE ERROR: Existing type at address 0xfffffc9c is not structure or array type
in proc proc25 adding addrExp r28{0} - 872 to local table
TYPE ERROR: Existing type at address 0xfffffc98 is not structure or array type
in proc proc25 adding addrExp r28{0} - 876 to local table
TYPE ERROR: Existing type at address 0xfffffc94 is not structure or array type
in proc proc25 adding addrExp r28{0} - 880 to local table
TYPE ERROR: Existing type at address 0xfffffc90 is not structure or array type
in proc proc25 adding addrExp r28{0} - 884 to local table
TYPE ERROR: Existing type at address 0xfffffc8c is not structure or array type
in proc proc25 adding addrExp r28{0} - 888 to local table
TYPE ERROR: Existing type at address 0xfffffc88 is not structure or array type
in proc proc25 adding addrExp r28{0} - 892 to local table
TYPE ERROR: Existing type at address 0xfffffc84 is not structure or array type
finding final parameters for proc25
potential param r28
found new parameter r28
potential param m[r28{0} - 844]
found new parameter m[r28{0} - 844]
potential param r0
found new parameter r0
potential param r3
found new parameter r3
potential param r11
found new parameter r11
potential param r15
found new parameter r15
potential param r26
found new parameter r26
potential param r27
found new parameter r27
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param global259
assgn   72 *32* %pc := m[0x4040a4]
is readonly
assgn   78 *32* %pc := m[0x404034]
is readonly
assgn   86 *32* %pc := m[0x404034]
is readonly
assgn   94 *32* %pc := m[0x404034]
is readonly
assgn  102 *32* %pc := m[0x404034]
is readonly
assgn  109 *32* %pc := m[0x404034]
is readonly
assgn  117 *32* %pc := m[0x404034]
is readonly
assgn  123 *32* r24 := m[0x406144]
assgn  128 *32* %pc := m[0x404060]
is readonly
assgn  134 *32* r25 := m[0x406144]
assgn  139 *32* %pc := m[0x404060]
is readonly
assgn  144 *32* r26 := m[0x406144]
assgn  149 *32* %pc := m[0x404060]
is readonly
assgn  154 *32* r24 := m[0x406144]
assgn  159 *32* %pc := m[0x404060]
is readonly
assgn  164 *32* r25 := m[0x406144]
assgn  169 *32* %pc := m[0x404060]
is readonly
assgn  174 *32* r26 := m[0x406154]
assgn  179 *32* %pc := m[0x404060]
is readonly
assgn  185 *32* r24 := m[0x406140]
assgn  190 *32* %pc := m[0x404060]
is readonly
assgn  195 *32* r25 := m[0x406140]
assgn  200 *32* %pc := m[0x404060]
is readonly
assgn  207 *32* r26 := m[0x406140]
assgn  212 *32* %pc := m[0x404060]
is readonly
assgn  217 *32* r24 := m[0x406140]
assgn  222 *32* %pc := m[0x404060]
is readonly
assgn  227 *32* r25 := m[0x406148]
assgn  232 *32* %pc := m[0x404060]
is readonly
assgn  249 *32* r24 := m[0]
assgn  267 *32* r25 := m[0x405570]
assgn  274 *32* %pc := m[0x40402c]
is readonly
assgn  288 *32* r26 := m[0x406134]
assgn  293 *32* %pc := m[0x404028]
is readonly
assgn  295 *32* tmp1 := m[0x406134]
assgn  298 *32* r24 := m[0x405570]
assgn  301 *32* r25 := m[0x406134]
assgn  338 *32* r24 := m[0x40612c]
assgn  417 *32* %pc := m[0x404028]
is readonly
assgn  438 *32* %pc := m[0x404028]
is readonly
assgn  459 *32* %pc := m[0x404028]
is readonly
assgn  504 *32* %pc := m[0x404028]
is readonly
assgn  528 *32* %pc := m[0x4040a8]
is readonly
assgn  561 *32* %pc := m[0x404028]
is readonly
assgn  606 *32* %pc := m[0x404028]
is readonly
assgn  675 *32* %pc := m[0x404028]
is readonly
assgn  696 *32* %pc := m[0x404028]
is readonly
assgn  720 *32* %pc := m[0x4040a4]
is readonly
assgn  729 *32* %pc := m[0x404028]
is readonly
assgn  750 *32* %pc := m[0x404028]
is readonly
assgn  771 *32* %pc := m[0x404028]
is readonly
assgn  840 *32* %pc := m[0x404028]
is readonly
assgn  878 *32* %pc := m[0x404028]
is readonly
assgn  926 *32* %pc := m[0x404028]
is readonly
assgn  994 *32* %pc := m[0x404028]
is readonly
assgn 1042 *32* %pc := m[0x404028]
is readonly
assgn 1099 *32* %pc := m[0x404028]
is readonly
assgn 1110 *32* %pc := m[0x404024]
is readonly
assgn 1114 *32* %pc := m[0x404020]
is readonly
assgn 1128 *32* %pc := m[0x40401c]
is readonly
assgn 1156 *32* %pc := m[0x40401c]
is readonly
assgn 1171 *32* r24 := m[0x405570]
assgn 1183 *32* r25 := m[0x405570]
assgn 1215 *32* %pc := m[0x4040a8]
is readonly
assgn 1217 *32* tmp1 := m[0x40613c]
assgn 1220 *32* tmp1 := m[0x405474]
assgn 1237 *32* r24 := m[0x405570]
assgn 1245 *32* %pc := m[0x404028]
is readonly
assgn 1262 *32* r26 := m[0x406134]
assgn 1292 *32* %pc := m[0x404028]
is readonly
assgn 1313 *32* %pc := m[0x404018]
is readonly
assgn 1316 *32* r25 := m[0x405570]
assgn 1324 *32* %pc := m[0x404028]
is readonly
assgn 1337 *32* %pc := m[0x4040a8]
is readonly
assgn 1345 *32* %pc := m[0x40401c]
is readonly
assgn 1350 *32* tmp1 := m[0x406134]
assgn 1367 *32* %pc := m[0x404014]
is readonly
assgn 1506 *32* tmp1 := m[0x406138]
assgn 1530 *32* r25 := m[0x40612c]
assgn 1574 *32* %pc := m[0x40401c]
is readonly
assgn 1595 *32* %pc := m[0x404028]
is readonly
assgn 1641 *32* %pc := m[0x404018]
is readonly
assgn 1650 *32* %pc := m[0x404018]
is readonly
assgn 1668 *32* %pc := m[0x404018]
is readonly
assgn 1687 *32* %pc := m[0x406170]
assgn 1710 *32* %pc := m[0x406174]
assgn 1717 *32* %pc := m[0x406178]
assgn 1734 *32* %pc := m[0x40616c]
assgn 1781 *32* %pc := m[0x4040a4]
is readonly
assgn 1793 *32* %pc := m[0x4040a4]
is readonly
assgn 1805 *32* %pc := m[0x4040a8]
is readonly
assgn 1817 *32* %pc := m[0x404010]
is readonly
after removing matching assigns (%pc).
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc2 ###
in proc proc2 adding addrExp r28{0} - 4 to local table
in proc proc2 adding addrExp r28{0} - 172 to local table
in proc proc2 adding addrExp r28{0} - 176 to local table
in proc proc2 adding addrExp r28{0} - 180 to local table
in proc proc2 adding addrExp r28{0} - 68 to local table
in proc proc2 adding addrExp r28{0} - 40 to local table
in proc proc2 adding addrExp r28{0} - 184 to local table
in proc proc2 adding addrExp r28{0} - 184 to local table
in proc proc2 adding addrExp r28{0} - 188 to local table
in proc proc2 adding addrExp r28{0} - 140 to local table
in proc proc2 adding addrExp r28{0} - 184 to local table
in proc proc2 adding addrExp r28{0} - 188 to local table
in proc proc2 adding addrExp r28{0} - 144 to local table
in proc proc2 adding addrExp r28{0} - 184 to local table
in proc proc2 adding addrExp r28{0} - 188 to local table
in proc proc2 adding addrExp r28{0} - 148 to local table
in proc proc2 adding addrExp r28{0} - 124 to local table
in proc proc2 adding addrExp r28{0} - 184 to local table
in proc proc2 adding addrExp r28{0} - 36 to local table
in proc proc2 adding addrExp r28{0} - 24 to local table
in proc proc2 adding addrExp r28{0} - 184 to local table
in proc proc2 adding addrExp r28{0} - 188 to local table
in proc proc2 adding addrExp r28{0} - 192 to local table
in proc proc2 adding addrExp r28{0} - 196 to local table
in proc proc2 adding addrExp r28{0} - 200 to local table
in proc proc2 adding addrExp r28{0} - 184 to local table
in proc proc2 adding addrExp r28{0} - 188 to local table
in proc proc2 adding addrExp r28{0} - 32 to local table
in proc proc2 adding addrExp r28{0} - 184 to local table
in proc proc2 adding addrExp r28{0} - 188 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 184 to local table
in proc proc2 adding addrExp r28{0} - 188 to local table
in proc proc2 adding addrExp r28{0} - 20 to local table
in proc proc2 adding addrExp r28{0} - 184 to local table
in proc proc2 adding addrExp r28{0} - 188 to local table
in proc proc2 adding addrExp r28{0} - 184 to local table
in proc proc2 adding addrExp r28{0} - 188 to local table
in proc proc2 adding addrExp r28{0} - 104 to local table
in proc proc2 adding addrExp r28{0} - 184 to local table
in proc proc2 adding addrExp r28{0} - 188 to local table
in proc proc2 adding addrExp r28{0} - 52 to local table
in proc proc2 adding addrExp r28{0} - 184 to local table
in proc proc2 adding addrExp r28{0} - 188 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffff44 existing type unsigned int but added type HANDLE
in proc proc2 adding addrExp r28{0} - 192 to local table
in proc proc2 adding addrExp r28{0} - 48 to local table
in proc proc2 adding addrExp r28{0} - 184 to local table
in proc proc2 adding addrExp r28{0} - 188 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffff44 existing type unsigned int but added type HANDLE
in proc proc2 adding addrExp r28{0} - 192 to local table
in proc proc2 adding addrExp r28{0} - 184 to local table
in proc proc2 adding addrExp r28{0} - 188 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffff44 existing type unsigned int but added type HANDLE
in proc proc2 adding addrExp r28{0} - 192 to local table
in proc proc2 adding addrExp r28{0} - 184 to local table
in proc proc2 adding addrExp r28{0} - 188 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffff44 existing type unsigned int but added type HANDLE
in proc proc2 adding addrExp r28{0} - 192 to local table
in proc proc2 adding addrExp r28{0} - 184 to local table
in proc proc2 adding addrExp r28{0} - 188 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffff44 existing type unsigned int but added type HANDLE
in proc proc2 adding addrExp r28{0} - 192 to local table
in proc proc2 adding addrExp r28{0} - 184 to local table
in proc proc2 adding addrExp r28{0} - 188 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffff44 existing type unsigned int but added type HANDLE
in proc proc2 adding addrExp r28{0} - 192 to local table
in proc proc2 adding addrExp r28{0} - 64 to local table
in proc proc2 adding addrExp r28{0} - 184 to local table
in proc proc2 adding addrExp r28{0} - 188 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffff44 existing type unsigned int but added type HANDLE
in proc proc2 adding addrExp r28{0} - 192 to local table
in proc proc2 adding addrExp r28{0} - 184 to local table
in proc proc2 adding addrExp r28{0} - 188 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffff44 existing type unsigned int but added type HANDLE
in proc proc2 adding addrExp r28{0} - 192 to local table
in proc proc2 adding addrExp r28{0} - 60 to local table
in proc proc2 adding addrExp r28{0} - 88 to local table
in proc proc2 adding addrExp r28{0} - 184 to local table
in proc proc2 adding addrExp r28{0} - 188 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffff44 existing type unsigned int but added type HANDLE
in proc proc2 adding addrExp r28{0} - 192 to local table
in proc proc2 adding addrExp r28{0} - 184 to local table
in proc proc2 adding addrExp r28{0} - 188 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffff44 existing type unsigned int but added type HANDLE
in proc proc2 adding addrExp r28{0} - 192 to local table
in proc proc2 adding addrExp r28{0} - 184 to local table
in proc proc2 adding addrExp r28{0} - 188 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffff44 existing type unsigned int but added type HANDLE
in proc proc2 adding addrExp r28{0} - 192 to local table
in proc proc2 adding addrExp r28{0} - 184 to local table
integer size 0x40 meet with SizeType size 0x20!
integer size 0x8 meet with SizeType size 0x20!
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28{0} - 12 to local table
TYPE ERROR: Existing type at address 0xfffffff4 is not structure or array type
in proc proc2 adding addrExp r28{0} - 20 to local table
TYPE ERROR: Existing type at address 0xffffffec is not structure or array type
in proc proc2 adding addrExp r28{0} - 24 to local table
TYPE ERROR: Existing type at address 0xffffffe8 is not structure or array type
in proc proc2 adding addrExp r28{0} - 32 to local table
TYPE ERROR: Existing type at address 0xffffffe0 is not structure or array type
in proc proc2 adding addrExp r28{0} - 36 to local table
TYPE ERROR: Existing type at address 0xffffffdc is not structure or array type
in proc proc2 adding addrExp r28{0} - 40 to local table
TYPE ERROR: Existing type at address 0xffffffd8 is not structure or array type
in proc proc2 adding addrExp r28{0} - 48 to local table
TYPE ERROR: Existing type at address 0xffffffd0 is not structure or array type
in proc proc2 adding addrExp r28{0} - 52 to local table
TYPE ERROR: Existing type at address 0xffffffcc is not structure or array type
in proc proc2 adding addrExp r28{0} - 60 to local table
TYPE ERROR: Existing type at address 0xffffffc4 is not structure or array type
in proc proc2 adding addrExp r28{0} - 64 to local table
TYPE ERROR: Existing type at address 0xffffffc0 is not structure or array type
in proc proc2 adding addrExp r28{0} - 68 to local table
TYPE ERROR: Existing type at address 0xffffffbc is not structure or array type
in proc proc2 adding addrExp r28{0} - 88 to local table
TYPE ERROR: Existing type at address 0xffffffa8 is not structure or array type
in proc proc2 adding addrExp r28{0} - 104 to local table
TYPE ERROR: Existing type at address 0xffffff98 is not structure or array type
in proc proc2 adding addrExp r28{0} - 124 to local table
TYPE ERROR: Existing type at address 0xffffff84 is not structure or array type
in proc proc2 adding addrExp r28{0} - 140 to local table
in proc proc2 adding addrExp r28{0} - 144 to local table
in proc proc2 adding addrExp r28{0} - 148 to local table
in proc proc2 adding addrExp r28{0} - 172 to local table
in proc proc2 adding addrExp r28{0} - 176 to local table
in proc proc2 adding addrExp r28{0} - 180 to local table
in proc proc2 adding addrExp r28{0} - 184 to local table
in proc proc2 adding addrExp r28{0} - 188 to local table
TYPE ERROR: Existing type at address 0xffffff44 is not structure or array type
in proc proc2 adding addrExp r28{0} - 192 to local table
in proc proc2 adding addrExp r28{0} - 196 to local table
TYPE ERROR: Existing type at address 0xffffff3c is not structure or array type
in proc proc2 adding addrExp r28{0} - 200 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
integer size 0x40 meet with SizeType size 0x20!
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28{0} - 12 to local table
TYPE ERROR: Existing type at address 0xfffffff4 is not structure or array type
in proc proc2 adding addrExp r28{0} - 20 to local table
TYPE ERROR: Existing type at address 0xffffffec is not structure or array type
in proc proc2 adding addrExp r28{0} - 24 to local table
TYPE ERROR: Existing type at address 0xffffffe8 is not structure or array type
in proc proc2 adding addrExp r28{0} - 32 to local table
TYPE ERROR: Existing type at address 0xffffffe0 is not structure or array type
in proc proc2 adding addrExp r28{0} - 36 to local table
TYPE ERROR: Existing type at address 0xffffffdc is not structure or array type
in proc proc2 adding addrExp r28{0} - 40 to local table
TYPE ERROR: Existing type at address 0xffffffd8 is not structure or array type
in proc proc2 adding addrExp r28{0} - 48 to local table
TYPE ERROR: Existing type at address 0xffffffd0 is not structure or array type
in proc proc2 adding addrExp r28{0} - 52 to local table
TYPE ERROR: Existing type at address 0xffffffcc is not structure or array type
in proc proc2 adding addrExp r28{0} - 60 to local table
TYPE ERROR: Existing type at address 0xffffffc4 is not structure or array type
in proc proc2 adding addrExp r28{0} - 64 to local table
TYPE ERROR: Existing type at address 0xffffffc0 is not structure or array type
in proc proc2 adding addrExp r28{0} - 68 to local table
TYPE ERROR: Existing type at address 0xffffffbc is not structure or array type
in proc proc2 adding addrExp r28{0} - 88 to local table
TYPE ERROR: Existing type at address 0xffffffa8 is not structure or array type
in proc proc2 adding addrExp r28{0} - 104 to local table
TYPE ERROR: Existing type at address 0xffffff98 is not structure or array type
in proc proc2 adding addrExp r28{0} - 124 to local table
TYPE ERROR: Existing type at address 0xffffff84 is not structure or array type
in proc proc2 adding addrExp r28{0} - 140 to local table
in proc proc2 adding addrExp r28{0} - 144 to local table
in proc proc2 adding addrExp r28{0} - 148 to local table
in proc proc2 adding addrExp r28{0} - 172 to local table
in proc proc2 adding addrExp r28{0} - 176 to local table
in proc proc2 adding addrExp r28{0} - 180 to local table
in proc proc2 adding addrExp r28{0} - 184 to local table
in proc proc2 adding addrExp r28{0} - 188 to local table
TYPE ERROR: Existing type at address 0xffffff44 is not structure or array type
in proc proc2 adding addrExp r28{0} - 192 to local table
in proc proc2 adding addrExp r28{0} - 196 to local table
TYPE ERROR: Existing type at address 0xffffff3c is not structure or array type
in proc proc2 adding addrExp r28{0} - 200 to local table
finding final parameters for proc2
potential param r27
found new parameter r27
potential param r0
found new parameter r0
potential param r3
found new parameter r3
potential param r10
found new parameter r10
potential param r15
found new parameter r15
assgn    2 *32* tmp1 := m[0x40658c]
assgn    5 *32* r24 := m[0x40658c]
assgn   10 *32* tmp1 := m[0x40658c]
after removing matching assigns (%pc).
finding final parameters for proc4
potential param r24
found new parameter r24
potential param r28
found new parameter r28
assgn   32 *32* %pc := m[0x40400c]
is readonly
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
in proc proc3 adding addrExp r28{0} - 4 to local table
finding final parameters for proc3
potential param r24
found new parameter r24
potential param r30
found new parameter r30
assgn    7 *32* r24 := m[0x406624]
assgn   42 *32* %pc := m[0x40400c]
is readonly
assgn   62 *32* %pc := m[0x404038]
is readonly
assgn  120 *32* %pc := m[0x404078]
is readonly
assgn  153 *32* %pc := m[0x404050]
is readonly
after removing matching assigns (%pc).
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 4 to local table
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28{0} - 76 to local table
TYPE ERROR: Existing type at address 0xffffffb4 is not structure or array type
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28{0} - 76 to local table
TYPE ERROR: Existing type at address 0xffffffb4 is not structure or array type
finding final parameters for _start
potential param r28
found new parameter r28
potential param r30
found new parameter r30
potential param r0
found new parameter r0
potential param r3
found new parameter r3
potential param r10
found new parameter r10
potential param r15
found new parameter r15
potential param r27
found new parameter r27
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc1 ###
in proc proc1 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc1 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc1 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc2 ###
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc4 ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc5 ###
in proc proc5 adding addrExp r28{0} - 8 to local table
in proc proc5 adding addrExp r28{0} - 8 to local table
in proc proc5 adding addrExp r28{0} - 8 to local table
in proc proc6 adding addrExp r28{0} - 12 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc8 ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc9 ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc10 ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc11 ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc13 ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc14 ###
in proc proc14 adding addrExp r28{0} - 0x40c to local table
in proc proc14 adding addrExp r28{0} - 0x408 to local table
in proc proc14 adding addrExp r28{0} - 0x408 to local table
in proc proc14 adding addrExp r28{0} - 0x408 to local table
in proc proc14 adding addrExp r28{0} - 0x408 to local table
in proc proc14 adding addrExp r28{0} - 0x408 to local table
in proc proc14 adding addrExp r28{0} - 0x408 to local table
in proc proc14 adding addrExp r28{0} - 0x40c to local table
in proc proc14 adding addrExp r28{0} - 0x40c to local table
in proc proc14 adding addrExp r28{0} - 0x410 to local table
in proc proc14 adding addrExp r28{0} - 0x410 to local table
in proc proc14 adding addrExp r28{0} - 0x408 to local table
in proc proc14 adding addrExp r28{0} - 0x40c to local table
in proc proc14 adding addrExp r28{0} - 0x410 to local table
in proc proc14 adding addrExp r28{0} - 0x408 to local table
in proc proc14 adding addrExp r28{0} - 0x40c to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc15 ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc16 ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc20 ###
in proc proc20 adding addrExp r28{0} - 56 to local table
size 0x20 meet with size 0x8!
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc21 ###
in proc proc21 adding addrExp r28{0} - 12 to local table
in proc proc21 adding addrExp r28{0} - 32 to local table
TYPE ERROR: at address 0xffffffe0, overlapping type long long does not resolve to compound or array
in proc proc21 adding addrExp r28{0} - 12 to local table
in proc proc21 adding addrExp r28{0} - 32 to local table
TYPE ERROR: at address 0xffffffe0, overlapping type long long does not resolve to compound or array
in proc proc21 adding addrExp r28{0} - 8 to local table
TYPE ERROR: at address 0xfffffff8, overlapping type long long does not resolve to compound or array
in proc proc21 adding addrExp r28{0} - 8 to local table
TYPE ERROR: at address 0xfffffff8, overlapping type long long does not resolve to compound or array
in proc proc21 adding addrExp r28{0} - 8 to local table
TYPE ERROR: at address 0xfffffff8, overlapping type long long does not resolve to compound or array
in proc proc21 adding addrExp r28{0} - 12 to local table
in proc proc21 adding addrExp r28{0} - 32 to local table
TYPE ERROR: at address 0xffffffe0, overlapping type long long does not resolve to compound or array
in proc proc21 adding addrExp r28{0} - 12 to local table
in proc proc21 adding addrExp r28{0} - 12 to local table
in proc proc21 adding addrExp r28{0} - 28 to local table
in proc proc21 adding addrExp r28{0} - 12 to local table
in proc proc21 adding addrExp r28{0} - 12 to local table
in proc proc21 adding addrExp r28{0} - 28 to local table
in proc proc21 adding addrExp r28{0} - 28 to local table
in proc proc21 adding addrExp r28{0} - 12 to local table
in proc proc24 adding addrExp r28{0} - 12 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc25 ###
in proc proc25 adding addrExp r28{0} - 844 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc26 ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc27 ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc28 ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc29 ###
in proc proc30 adding addrExp r28{0} - 28 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc31 ###
in proc proc31 adding addrExp r28{0} - 96 to local table
size 0x20 meet with size 0x8!
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc32 ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc33 ###
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc34 ###
in proc proc34 adding addrExp r28{0} - 8 to local table
TYPE ERROR: Existing type at address 0xfffffff8 is not structure or array type
in proc proc34 adding addrExp r28{0} - 8 to local table
TYPE ERROR: Existing type at address 0xfffffff8 is not structure or array type
in proc proc34 adding addrExp r28{0} - 8 to local table
TYPE ERROR: Existing type at address 0xfffffff8 is not structure or array type
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc35 ###
in proc proc35 adding addrExp r28{0} - 12 to local table
in proc proc35 adding addrExp r28{0} - 12 to local table
in proc proc35 adding addrExp r28{0} - 12 to local table
in proc proc35 adding addrExp r28{0} - 12 to local table
in proc proc35 adding addrExp r28{0} - 12 to local table
in proc proc35 adding addrExp r28{0} - 12 to local table
finding final parameters for proc4
potential param r28
found new parameter r28
finding final parameters for proc3
potential param r30
found new parameter r30
finding final parameters for proc5
potential param r28
found new parameter r28
finding final parameters for proc2
potential param r27
found new parameter r27
potential param r0
found new parameter r0
potential param r3
found new parameter r3
potential param r10
found new parameter r10
potential param r15
found new parameter r15
finding final parameters for proc7
potential param r24
found new parameter r24
potential param r26
found new parameter r26
finding final parameters for proc2
potential param r27
found new parameter r27
potential param r0
found new parameter r0
potential param r3
found new parameter r3
potential param r10
found new parameter r10
potential param r15
found new parameter r15
finding final parameters for proc8
potential param r28
found new parameter r28
finding final parameters for proc2
potential param r27
found new parameter r27
potential param r0
found new parameter r0
potential param r3
found new parameter r3
potential param r10
found new parameter r10
potential param r15
found new parameter r15
finding final parameters for proc9
potential param r28
found new parameter r28
potential param global85
potential param global86
potential param global87
finding final parameters for proc2
potential param r27
found new parameter r27
potential param r0
found new parameter r0
potential param r3
found new parameter r3
potential param r10
found new parameter r10
potential param r15
found new parameter r15
finding final parameters for proc10
potential param r28
found new parameter r28
potential param global95
finding final parameters for proc2
potential param r27
found new parameter r27
potential param r0
found new parameter r0
potential param r3
found new parameter r3
potential param r10
found new parameter r10
potential param r15
found new parameter r15
finding final parameters for proc11
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param global85
potential param global86
potential param global87
potential param r27
found new parameter r27
finding final parameters for proc2
potential param r27
found new parameter r27
potential param r0
found new parameter r0
potential param r3
found new parameter r3
potential param r10
found new parameter r10
potential param r15
found new parameter r15
finding final parameters for proc12
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
finding final parameters for proc2
potential param r27
found new parameter r27
potential param r0
found new parameter r0
potential param r3
found new parameter r3
potential param r10
found new parameter r10
potential param r15
found new parameter r15
finding final parameters for proc20
potential param r28
found new parameter r28
potential param m[r28{0} - 56]
found new parameter m[r28{0} - 56]
potential param r10
found new parameter r10
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r0
found new parameter r0
potential param r11
found new parameter r11
potential param r27
found new parameter r27
finding final parameters for proc22
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
finding final parameters for proc31
potential param r28
found new parameter r28
potential param r9
found new parameter r9
potential param r11
found new parameter r11
potential param r27
found new parameter r27
potential param m[r28{0} - 96]
found new parameter m[r28{0} - 96]
potential param r10
found new parameter r10
finding final parameters for proc13
potential param r28
found new parameter r28
potential param r0
found new parameter r0
potential param r3
found new parameter r3
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r15
found new parameter r15
potential param r27
found new parameter r27
finding final parameters for proc2
potential param r27
found new parameter r27
potential param r0
found new parameter r0
potential param r3
found new parameter r3
potential param r10
found new parameter r10
potential param r15
found new parameter r15
finding final parameters for proc14
potential param r28
found new parameter r28
potential param r10
found new parameter r10
potential param r9
found new parameter r9
potential param m[r28{0} + 16]
found new parameter m[r28{0} + 16]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for proc2
potential param r27
found new parameter r27
potential param r0
found new parameter r0
potential param r3
found new parameter r3
potential param r10
found new parameter r10
potential param r15
found new parameter r15
finding final parameters for proc19
finding final parameters for proc2
potential param r27
found new parameter r27
potential param r0
found new parameter r0
potential param r3
found new parameter r3
potential param r10
found new parameter r10
potential param r15
found new parameter r15
finding final parameters for proc21
potential param r28
found new parameter r28
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r10
found new parameter r10
potential param r25
found new parameter r25
finding final parameters for proc2
potential param r27
found new parameter r27
potential param r0
found new parameter r0
potential param r3
found new parameter r3
potential param r10
found new parameter r10
potential param r15
found new parameter r15
finding final parameters for proc13
potential param r28
found new parameter r28
potential param r0
found new parameter r0
potential param r3
found new parameter r3
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r15
found new parameter r15
potential param r27
found new parameter r27
finding final parameters for proc22
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
finding final parameters for proc2
potential param r27
found new parameter r27
potential param r0
found new parameter r0
potential param r3
found new parameter r3
potential param r10
found new parameter r10
potential param r15
found new parameter r15
finding final parameters for proc20
potential param r28
found new parameter r28
potential param m[r28{0} - 56]
found new parameter m[r28{0} - 56]
potential param r10
found new parameter r10
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r0
found new parameter r0
potential param r11
found new parameter r11
potential param r27
found new parameter r27
finding final parameters for proc33
potential param r28
found new parameter r28
potential param global206
potential param r8
found new parameter r8
potential param global207
potential param global87
finding final parameters for proc23
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for proc2
potential param r27
found new parameter r27
potential param r0
found new parameter r0
potential param r3
found new parameter r3
potential param r10
found new parameter r10
potential param r15
found new parameter r15
finding final parameters for proc20
potential param r28
found new parameter r28
potential param m[r28{0} - 56]
found new parameter m[r28{0} - 56]
potential param r10
found new parameter r10
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r0
found new parameter r0
potential param r11
found new parameter r11
potential param r27
found new parameter r27
finding final parameters for proc24
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for proc2
potential param r27
found new parameter r27
potential param r0
found new parameter r0
potential param r3
found new parameter r3
potential param r10
found new parameter r10
potential param r15
found new parameter r15
finding final parameters for proc5
potential param r28
found new parameter r28
finding final parameters for proc13
potential param r28
found new parameter r28
potential param r0
found new parameter r0
potential param r3
found new parameter r3
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r15
found new parameter r15
potential param r27
found new parameter r27
finding final parameters for proc25
potential param r28
found new parameter r28
potential param m[r28{0} - 844]
found new parameter m[r28{0} - 844]
potential param r0
found new parameter r0
potential param r3
found new parameter r3
potential param r11
found new parameter r11
potential param r15
found new parameter r15
potential param r26
found new parameter r26
potential param r27
found new parameter r27
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param global259
finding final parameters for proc2
potential param r27
found new parameter r27
potential param r0
found new parameter r0
potential param r3
found new parameter r3
potential param r10
found new parameter r10
potential param r15
found new parameter r15
finding final parameters for proc26
potential param r28
found new parameter r28
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param r27
found new parameter r27
potential param r3
found new parameter r3
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r0
found new parameter r0
potential param r11
found new parameter r11
potential param r15
found new parameter r15
finding final parameters for proc13
potential param r28
found new parameter r28
potential param r0
found new parameter r0
potential param r3
found new parameter r3
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r15
found new parameter r15
potential param r27
found new parameter r27
finding final parameters for proc25
potential param r28
found new parameter r28
potential param m[r28{0} - 844]
found new parameter m[r28{0} - 844]
potential param r0
found new parameter r0
potential param r3
found new parameter r3
potential param r11
found new parameter r11
potential param r15
found new parameter r15
potential param r27
found new parameter r27
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param global259
finding final parameters for proc27
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param global259
finding final parameters for proc25
potential param r28
found new parameter r28
potential param m[r28{0} - 844]
found new parameter m[r28{0} - 844]
potential param r0
found new parameter r0
potential param r3
found new parameter r3
potential param r11
found new parameter r11
potential param r15
found new parameter r15
potential param r27
found new parameter r27
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param global259
finding final parameters for proc28
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param global95
finding final parameters for proc27
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param global259
finding final parameters for proc29
potential param r28
found new parameter r28
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param r10
found new parameter r10
finding final parameters for proc13
potential param r28
found new parameter r28
potential param r0
found new parameter r0
potential param r3
found new parameter r3
potential param r10
found new parameter r10
potential param r11
found new parameter r11
potential param r15
found new parameter r15
potential param r27
found new parameter r27
finding final parameters for proc30
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} - 28]
found new parameter m[r28{0} - 28]
potential param r10
found new parameter r10
potential param r25
found new parameter r25
potential param r26
found new parameter r26
finding final parameters for proc20
potential param r28
found new parameter r28
potential param m[r28{0} - 56]
found new parameter m[r28{0} - 56]
potential param r10
found new parameter r10
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r0
found new parameter r0
potential param r11
found new parameter r11
potential param r27
found new parameter r27
finding final parameters for proc31
potential param r28
found new parameter r28
potential param r9
found new parameter r9
potential param r11
found new parameter r11
potential param r27
found new parameter r27
potential param m[r28{0} - 96]
found new parameter m[r28{0} - 96]
potential param r10
found new parameter r10
finding final parameters for proc31
potential param r28
found new parameter r28
potential param r9
found new parameter r9
potential param r11
found new parameter r11
potential param r27
found new parameter r27
potential param m[r28{0} - 96]
found new parameter m[r28{0} - 96]
potential param r10
found new parameter r10
finding final parameters for proc20
potential param r28
found new parameter r28
potential param m[r28{0} - 56]
found new parameter m[r28{0} - 56]
potential param r10
found new parameter r10
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r0
found new parameter r0
potential param r11
found new parameter r11
potential param r27
found new parameter r27
finding final parameters for proc15
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param r27
found new parameter r27
potential param r9
found new parameter r9
potential param r25
found new parameter r25
potential param r11
found new parameter r11
finding final parameters for proc2
potential param r27
found new parameter r27
potential param r0
found new parameter r0
potential param r3
found new parameter r3
potential param r10
found new parameter r10
potential param r15
found new parameter r15
finding final parameters for proc11
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param global85
potential param global86
potential param global87
potential param r27
found new parameter r27
finding final parameters for proc31
potential param r28
found new parameter r28
potential param r9
found new parameter r9
potential param r11
found new parameter r11
potential param r27
found new parameter r27
potential param m[r28{0} - 96]
found new parameter m[r28{0} - 96]
potential param r10
found new parameter r10
finding final parameters for proc32
finding final parameters for proc20
potential param r28
found new parameter r28
potential param m[r28{0} - 56]
found new parameter m[r28{0} - 56]
potential param r10
found new parameter r10
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r0
found new parameter r0
potential param r11
found new parameter r11
potential param r27
found new parameter r27
finding final parameters for proc33
potential param r28
found new parameter r28
potential param global206
potential param r8
found new parameter r8
potential param global207
potential param global87
finding final parameters for proc20
potential param r28
found new parameter r28
potential param m[r28{0} - 56]
found new parameter m[r28{0} - 56]
potential param r10
found new parameter r10
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r0
found new parameter r0
potential param r11
found new parameter r11
potential param r27
found new parameter r27
finding final parameters for proc16
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param r24
found new parameter r24
finding final parameters for proc2
potential param r27
found new parameter r27
potential param r0
found new parameter r0
potential param r3
found new parameter r3
potential param r10
found new parameter r10
potential param r15
found new parameter r15
finding final parameters for proc20
potential param r28
found new parameter r28
potential param m[r28{0} - 56]
found new parameter m[r28{0} - 56]
potential param r10
found new parameter r10
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r0
found new parameter r0
potential param r11
found new parameter r11
potential param r27
found new parameter r27
finding final parameters for proc33
potential param r28
found new parameter r28
potential param global206
potential param r8
found new parameter r8
potential param global207
potential param global87
finding final parameters for proc34
potential param r28
found new parameter r28
potential param r24
found new parameter r24
potential param r26
found new parameter r26
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for proc7
potential param r24
found new parameter r24
potential param r26
found new parameter r26
finding final parameters for proc35
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r25
found new parameter r25
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param r10
found new parameter r10
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} - 12]
found new parameter m[r28{0} - 12]
finding final parameters for proc30
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} - 28]
found new parameter m[r28{0} - 28]
potential param r10
found new parameter r10
potential param r25
found new parameter r25
local ecx has type HANDLE that doesn't agree with type of define void of a library, why?
local edx has type unsigned char * that doesn't agree with type of define void of a library, why?
local esp has type __size32 that doesn't agree with type of define void of a library, why?
local ecx has type void that doesn't agree with type of define __size32 of a library, why?
local edx has type void that doesn't agree with type of define __size32 of a library, why?
local ecx has type __size32 that doesn't agree with type of define /*signed?*/int of a library, why?
local edx has type __size32 that doesn't agree with type of define void of a library, why?
local ecx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local ecx has type void that doesn't agree with type of define /*signed?*/int of a library, why?
local ecx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local ecx has type void that doesn't agree with type of define /*signed?*/int of a library, why?
local eax has type __size32 that doesn't agree with type of define int of a library, why?
local edx has type void that doesn't agree with type of define __size32 of a library, why?
local esp has type void that doesn't agree with type of define void * of a library, why?
local eax has type int that doesn't agree with type of define __size32 of a library, why?
local ecx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local edx has type __size32 that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local ecx has type void that doesn't agree with type of define /*signed?*/int of a library, why?
local eax has type __size32 that doesn't agree with type of define int of a library, why?
local ecx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local eax has type int that doesn't agree with type of define __size32 of a library, why?
local ecx has type void that doesn't agree with type of define /*signed?*/int of a library, why?
local eax has type __size32 that doesn't agree with type of define int of a library, why?
local edx has type void that doesn't agree with type of define __size32 of a library, why?
local esp has type void that doesn't agree with type of define void * of a library, why?
local eax has type int that doesn't agree with type of define __size32 of a library, why?
local ecx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local edx has type __size32 that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local ecx has type void that doesn't agree with type of define /*signed?*/int of a library, why?
local edx has type void that doesn't agree with type of define __size32 of a library, why?
local esp has type void that doesn't agree with type of define void * of a library, why?
local ecx has type /*signed?*/int that doesn't agree with type of define __size32 of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local ecx has type __size32 that doesn't agree with type of define void of a library, why?
local edx has type __size32 that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local ecx has type __size32 that doesn't agree with type of define void of a library, why?
local edx has type __size32 that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local eax has type __size32 that doesn't agree with type of define /*signed?*/int of a library, why?
local eax has type /*signed?*/int that doesn't agree with type of define __size32 of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local eax has type DWORD that doesn't agree with type of define __size32 of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local ecx has type HANDLE that doesn't agree with type of define __size32 of a library, why?
local edx has type HANDLE that doesn't agree with type of define __size32 of a library, why?
local ecx has type void that doesn't agree with type of define __size32 of a library, why?
local edx has type void that doesn't agree with type of define __size32 of a library, why?
local esp has type void * that doesn't agree with type of define __size32 of a library, why?
local ecx has type __size32 that doesn't agree with type of define void of a library, why?
local edx has type __size32 that doesn't agree with type of define void of a library, why?
local esp has type __size32 that doesn't agree with type of define void of a library, why?
local eax has type HANDLE that doesn't agree with type of define __size32 of a library, why?
local ecx has type HANDLE that doesn't agree with type of define void of a library, why?
local edx has type HANDLE that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local ecx has type void that doesn't agree with type of define __size32 of a library, why?
local esp has type __size32 that doesn't agree with type of define void of a library, why?
local esp has type __size32 that doesn't agree with type of define void of a library, why?
local ecx has type HANDLE that doesn't agree with type of define void of a library, why?
local edx has type HANDLE that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local eax has type HANDLE that doesn't agree with type of define __size32 of a library, why?
local ecx has type void that doesn't agree with type of define /*signed?*/int of a library, why?
local edx has type void that doesn't agree with type of define unsigned int of a library, why?
local eax has type __size32 that doesn't agree with type of define int of a library, why?
local ecx has type /*signed?*/int that doesn't agree with type of define __size32 of a library, why?
local edx has type unsigned int that doesn't agree with type of define __size32 of a library, why?
local eax has type int that doesn't agree with type of define __size32 of a library, why?
local ecx has type __size32 that doesn't agree with type of define void of a library, why?
local edx has type __size32 that doesn't agree with type of define void of a library, why?
local ecx has type void that doesn't agree with type of define __size32 of a library, why?
local edx has type void that doesn't agree with type of define __size32 of a library, why?
local ecx has type __size32 that doesn't agree with type of define void of a library, why?
local edx has type __size32 that doesn't agree with type of define void of a library, why?
local ecx has type void that doesn't agree with type of define __size32 of a library, why?
local edx has type void that doesn't agree with type of define __size32 of a library, why?
local eax has type __size32 that doesn't agree with type of define int of a library, why?
local esp has type void that doesn't agree with type of define void * of a library, why?
local eax has type int that doesn't agree with type of define __size32 of a library, why?
local ecx has type __size32 that doesn't agree with type of define void of a library, why?
local edx has type __size32 that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local eax has type __size8 * that doesn't agree with type of define __size32 of a library, why?
local ecx has type __size8 * that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local esp has type __size32 that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local ecx has type HANDLE that doesn't agree with type of define void of a library, why?
local edx has type unsigned int * that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local eax has type /*signed?*/int that doesn't agree with type of define __size32 of a library, why?
local ecx has type void that doesn't agree with type of define __size32 of a library, why?
local edx has type void that doesn't agree with type of define __size32 of a library, why?
local esp has type __size32 that doesn't agree with type of define void * of a library, why?
local ecx has type __size32 that doesn't agree with type of define void of a library, why?
local edx has type __size32 that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local ecx has type void that doesn't agree with type of define __size32 of a library, why?
local edx has type void that doesn't agree with type of define __size32 of a library, why?
local esp has type void that doesn't agree with type of define void * of a library, why?
local ecx has type __size32 that doesn't agree with type of define void of a library, why?
local edx has type __size32 that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local eax has type __size32 that doesn't agree with type of define unsigned int of a library, why?
local ecx has type void that doesn't agree with type of define __size32 of a library, why?
local eax has type unsigned int that doesn't agree with type of define __size32 of a library, why?
local edx has type void that doesn't agree with type of define __size32 of a library, why?
local esp has type void that doesn't agree with type of define void * of a library, why?
local edx has type __size8 * that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local eax has type HANDLE that doesn't agree with type of define __size32 of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local eax has type int that doesn't agree with type of define __size32 of a library, why?
dest is not lib
call:   18 {*v* eax, *v* ecx, *v* edx, *v* esp} := CALL proc5(
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{0},   r10=r10{0},   r11=r11{0},   r15=r15{0},
                r27=r27{0},   r28=r28{0} - 184,   r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 40]=0,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},
                m[r28{0} - 180]=r31{0},   m[r28{0} - 184]=%pc,   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 164, r28{0} - 168 ),   %ZF=(r28{0} - 168) = 0,   %CF=(r28{0} - 4) <u 164
              Live variables:  in proc proc2
dest is not lib
call:   24 {*32* eax_1, *v* ecx, *v* edx, *v* esp} := CALL proc6(
                *DWORD* local0 := 261
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{0},   r10=r10{0},   r11=r11{0},   r15=r15{0},
                r24=r24{18},   r25=r25{18},   r26=r26{18},   r27=r27{0},   r28=r28{0} - 188,   r29=r28{0} - 4,
                r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 40]=0,   m[r28{0} - 68]=0xa7d,
                m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},   m[r28{0} - 184]=261,
                m[r28{0} - 188]=%pc,   tmp1=r28{0} - 4,   %flags=SUBFLAGS32( r28{0} - 4, 164, r28{0} - 168 ),
                %ZF=(r28{0} - 168) = 0,   %CF=(r28{0} - 4) <u 164
              Live variables: eax_1 in proc proc2
result:    0 *32* eax_1 := -
dest is not lib
call:   36 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL proc6(
                *DWORD* local0 := 261
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{0},   r10=r10{0},   r11=r11{0},   r15=r15{0},
                r24=r24{24},   r25=r25{24},   r26=r26{24},   r27=r27{0},   r28=r28{0} - 188,   r29=r28{0} - 4,
                r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 40]=0,   m[r28{0} - 68]=0xa7d,
                m[r28{0} - 140]=r24{24},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=261,   m[r28{0} - 188]=%pc,   tmp1=(r28{0} - 188) + 4,
                %flags=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 ),   %ZF=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 ),
                %CF=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 )
              Live variables: eax in proc proc2
result:    0 *32* eax := -
dest is not lib
call:   48 {*u8** eax, *v* ecx, *v* edx, *v* esp} := CALL proc6(
                *DWORD* local0 := 261
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{0},   r10=r10{0},   r11=r11{0},   r15=r15{0},
                r24=r24{36},   r25=r24{36},   r26=r26{36},   r27=r27{0},   r28=r28{0} - 188,   r29=r28{0} - 4,
                r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 40]=0,   m[r28{0} - 68]=0xa7d,
                m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},
                m[r28{0} - 180]=r31{0},   m[r28{0} - 184]=261,   m[r28{0} - 188]=%pc,   tmp1=(r28{0} - 188) + 4,
                %flags=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 ),   %ZF=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 ),
                %CF=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 )
              Live variables: eax in proc proc2
result:    0 *u8** eax := -
dest is not lib
call:   59 {*32* eax, *u32* cl, *32* edx, *v* esp} := CALL proc7(
                *u8** eax := eax
                *u8** edx := eax
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{0},   r10=r10{0},   r11=r11{0},   r15=r15{0},
                r24=r24{48},   r25=r25{48},   r26=r24{48},   r27=r27{0},   r28=(r28{0} - 188) + 4,   r29=r28{0} - 4,
                r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 40]=0,   m[r28{0} - 68]=0xa7d,
                m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},   m[r28{0} - 148]=r24{48}
                m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},   m[r28{0} - 184]=%pc,
                m[r28{0} - 188]=%pc,   tmp1=(r28{0} - 188) + 4,   %flags=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 ),
                %ZF=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 ),   %CF=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 )
              Live variables:  in proc proc2
dest is not lib
call:   73 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL MessageBoxW(
                *HWND* local1 := -1
                *LPCWSTR* local2 := 0
                *LPCWSTR* local3 := 0
                *UINT* local0 := 0
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{0},   r9=r9{59},   r10=r10{0},   r11=r11{0},
                r15=r15{0},   r24=r24{59},   r25=r25{48},   r26=r26{59},   r27=r27{0},   r28=r28{0} - 200,
                r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 24]=0xdb2,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 124]=0x12d0,
                m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},   m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0}
                m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},   m[r28{0} - 184]=0,   m[r28{0} - 188]=0,
                m[r28{0} - 192]=0,   m[r28{0} - 196]=-1,   m[r28{0} - 200]=%pc,   tmp1=(r28{0} - 188) + 4,
                %flags=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 ),   %ZF=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 ),
                %CF=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 )
              Live variables:  in proc proc2
dest is not lib
call:   79 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL LoadLibraryA(
                *LPCSTR* local4 := "? ;kpz>9c"
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{0},   r9=r9{59},   r10=r10{0},   r11=r11{0},
                r15=r15{0},   r24=r24{73},   r25=r25{73},   r26=r26{73},   r27=r27{0},   r28=r28{0} - 188,
                r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 24]=0xdb2,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 124]=0x12d0,
                m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},   m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0}
                m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},   m[r28{0} - 184]=0x40503c,   m[r28{0} - 188]=%pc,
                m[r28{0} - 192]=0,   m[r28{0} - 196]=-1,   m[r28{0} - 200]=%pc,   tmp1=(r28{0} - 188) + 4,
                %flags=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 ),   %ZF=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 ),
                %CF=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 )
              Live variables: eax in proc proc2
result:    0 *32* eax := -
dest is not lib
call:   87 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL LoadLibraryA(
                *LPCSTR* local4 := "5$4kpz>9c"
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{0},   r9=r9{59},   r10=r10{0},   r11=r11{0},
                r15=r15{0},   r24=r24{79},   r25=r25{79},   r26=r26{79},   r27=r27{0},   r28=r28{0} - 188,
                r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 24]=0xdb2,
                m[r28{0} - 32]=0xd92,   m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 68]=0xa7d,
                m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},   m[r28{0} - 148]=r24{48}
                m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},   m[r28{0} - 184]=0x40504c,
                m[r28{0} - 188]=%pc,   m[r28{0} - 192]=0,   m[r28{0} - 196]=-1,   m[r28{0} - 200]=%pc,
                tmp1=(r28{0} - 188) + 4,   %flags=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 ),
                %ZF=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 ),   %CF=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 )
              Live variables: eax in proc proc2
result:    0 *32* eax := -
dest is not lib
call:   95 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL LoadLibraryA(
                *LPCSTR* local4 := ":69]<.8z"
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{0},   r9=r9{59},   r10=r10{0},   r11=r11{0},
                r15=r15{0},   r24=r24{87},   r25=r25{87},   r26=r26{87},   r27=r27{0},   r28=r28{0} - 188,
                r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 12]=0xb99,
                m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,   m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,
                m[r28{0} - 68]=0xa7d,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=0x405030,   m[r28{0} - 188]=%pc,   m[r28{0} - 192]=0,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=(r28{0} - 188) + 4,   %flags=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 ),
                %ZF=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 ),   %CF=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 )
              Live variables: eax in proc proc2
result:    0 *32* eax := -
dest is not lib
call:  103 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL LoadLibraryA(
                *LPCSTR* local4 := "#<<,l0>U740;7&2X"
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{0},   r9=r9{59},   r10=r10{0},   r11=r11{0},
                r15=r15{0},   r24=r24{95},   r25=r25{95},   r26=r26{95},   r27=r27{0},   r28=r28{0} - 188,
                r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 12]=0xb99,
                m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,   m[r28{0} - 36]=0xa55,
                m[r28{0} - 40]=0,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},
                m[r28{0} - 144]=r24{36},   m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},
                m[r28{0} - 180]=r31{0},   m[r28{0} - 184]=0x40505c,   m[r28{0} - 188]=%pc,   m[r28{0} - 192]=0,
                m[r28{0} - 196]=-1,   m[r28{0} - 200]=%pc,   tmp1=(r28{0} - 188) + 4,
                %flags=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 ),   %ZF=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 ),
                %CF=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 )
              Live variables: eax in proc proc2
result:    0 *32* eax := -
dest is not lib
call:  110 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL LoadLibraryA(
                *LPCSTR* local4 := "!	7'PAv&8R"
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{0},   r9=r9{59},   r10=r10{0},   r11=r11{0},
                r15=r15{0},   r24=r24{103},   r25=r25{103},   r26=r26{103},   r27=r27{0},   r28=r28{0} - 188,
                r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 12]=0xb99,
                m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,   m[r28{0} - 36]=0xa55,
                m[r28{0} - 40]=0,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},
                m[r28{0} - 144]=r24{36},   m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},
                m[r28{0} - 180]=r31{0},   m[r28{0} - 184]=0x40524c,   m[r28{0} - 188]=%pc,   m[r28{0} - 192]=0,
                m[r28{0} - 196]=-1,   m[r28{0} - 200]=%pc,   tmp1=(r28{0} - 188) + 4,
                %flags=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 ),   %ZF=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 ),
                %CF=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 )
              Live variables: eax in proc proc2
result:    0 *32* eax := -
dest is not lib
call:  118 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL LoadLibraryA(
                *LPCSTR* local4 := "'79@jl0>U56	1-"s"
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{0},   r9=r9{59},   r10=r10{0},   r11=r11{0},
                r15=r15{0},   r24=r24{110},   r25=r25{110},   r26=r26{110},   r27=r27{0},   r28=r28{0} - 188,
                r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 12]=0xb99,
                m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,   m[r28{0} - 36]=0xa55,
                m[r28{0} - 40]=0,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,
                m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},   m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0}
                m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},   m[r28{0} - 184]=0x405258,   m[r28{0} - 188]=%pc,
                m[r28{0} - 192]=0,   m[r28{0} - 196]=-1,   m[r28{0} - 200]=%pc,   tmp1=(r28{0} - 188) + 4,
                %flags=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 ),   %ZF=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 ),
                %CF=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 )
              Live variables: eax in proc proc2
result:    0 *32* eax := -
dest is not lib
call:  129 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local5 := eax
                *c** local4 := "56	1-"s"
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{0},   r9=r9{59},   r10=r10{0},   r11=r11{0},
                r15=r15{0},   r24=r24{123},   r25=r25{118},   r26=r26{118},   r27=r27{0},   r28=r28{0} - 192,
                r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 12]=0xb99,
                m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,   m[r28{0} - 36]=0xa55,
                m[r28{0} - 40]=0,   m[r28{0} - 52]=348,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 104]=0x100f,
                m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},   m[r28{0} - 148]=r24{48}
                m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},   m[r28{0} - 184]=0x405264,
                m[r28{0} - 188]=r24{123},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,   m[r28{0} - 200]=%pc,
                tmp1=(r28{0} - 188) + 4,   %flags=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 ),
                %ZF=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 ),   %CF=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 )
              Live variables: eax in proc proc2
result:    0 *32* eax := -
dest is not lib
call:  140 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local5 := ecx
                *c** local4 := "5*;> 6 T"
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{0},   r9=r9{59},   r10=r10{0},   r11=r11{0},
                r15=r15{0},   r24=r24{129},   r25=r25{134},   r26=r26{129},   r27=r27{0},   r28=r28{0} - 192,
                r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 12]=0xb99,
                m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,   m[r28{0} - 36]=0xa55,
                m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,   m[r28{0} - 68]=0xa7d,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=0x405274,   m[r28{0} - 188]=r25{134},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=(r28{0} - 188) + 4,   %flags=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 ),
                %ZF=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 ),   %CF=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 )
              Live variables: eax in proc proc2
result:    0 *32* eax := -
dest is not lib
call:  150 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local5 := edx
                *c** local4 := "5+'+U796 '7&0"s"
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{0},   r9=r9{59},   r10=r10{0},   r11=r11{0},
                r15=r15{0},   r24=r24{140},   r25=r25{140},   r26=r26{144},   r27=r27{0},   r28=r28{0} - 192,
                r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 12]=0xb99,
                m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,   m[r28{0} - 36]=0xa55,
                m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,   m[r28{0} - 68]=0xa7d,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=0x4052a8,   m[r28{0} - 188]=r26{144},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=(r28{0} - 188) + 4,   %flags=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 ),
                %ZF=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 ),   %CF=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 )
              Live variables: eax in proc proc2
result:    0 *32* eax := -
dest is not lib
call:  160 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local5 := eax
                *c** local4 := "596117,"s"
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{0},   r9=r9{59},   r10=r10{0},   r11=r11{0},
                r15=r15{0},   r24=r24{154},   r25=r25{150},   r26=r26{150},   r27=r27{0},   r28=r28{0} - 192,
                r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 12]=0xb99,
                m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,   m[r28{0} - 36]=0xa55,
                m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,   m[r28{0} - 68]=0xa7d,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=0x405288,   m[r28{0} - 188]=r24{154},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=(r28{0} - 188) + 4,   %flags=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 ),
                %ZF=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 ),   %CF=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 )
              Live variables: eax in proc proc2
result:    0 *32* eax := -
dest is not lib
call:  170 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local5 := ecx
                *c** local4 := "5#872X"
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{0},   r9=r9{59},   r10=r10{0},   r11=r11{0},
                r15=r15{0},   r24=r24{160},   r25=r25{164},   r26=r26{160},   r27=r27{0},   r28=r28{0} - 192,
                r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 12]=0xb99,
                m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,   m[r28{0} - 36]=0xa55,
                m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,   m[r28{0} - 68]=0xa7d,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=0x405298,   m[r28{0} - 188]=r25{164},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=(r28{0} - 188) + 4,   %flags=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 ),
                %ZF=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 ),   %CF=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 )
              Live variables: eax in proc proc2
result:    0 *32* eax := -
dest is not lib
call:  180 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local5 := edx
                *c** local4 := "796 '7&0"s"
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{0},   r9=r9{59},   r10=r10{0},   r11=r11{0},
                r15=r15{0},   r24=r24{170},   r25=r25{170},   r26=r26{174},   r27=r27{0},   r28=r28{0} - 192,
                r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 12]=0xb99,
                m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,   m[r28{0} - 36]=0xa55,
                m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,   m[r28{0} - 68]=0xa7d,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=0x4052b4,   m[r28{0} - 188]=r26{174},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=(r28{0} - 188) + 4,   %flags=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 ),
                %ZF=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 ),   %CF=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 )
              Live variables: eax in proc proc2
result:    0 *32* eax := -
dest is not lib
call:  191 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local5 := eax
                *c** local4 := "74+8U;!51.1z"
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{0},   r9=r9{59},   r10=r10{0},   r11=r11{0},
                r15=r15{0},   r24=r24{185},   r25=r25{180},   r26=r26{180},   r27=r27{0},   r28=r28{0} - 192,
                r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 12]=0xb99,
                m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,   m[r28{0} - 36]=0xa55,
                m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,   m[r28{0} - 64]=0x1118,
                m[r28{0} - 68]=0xa7d,   m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},
                m[r28{0} - 144]=r24{36},   m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},
                m[r28{0} - 180]=r31{0},   m[r28{0} - 184]=0x405084,   m[r28{0} - 188]=r24{185},   m[r28{0} - 192]=%pc,
                m[r28{0} - 196]=-1,   m[r28{0} - 200]=%pc,   tmp1=(r28{0} - 188) + 4,
                %flags=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 ),   %ZF=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 ),
                %CF=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 )
              Live variables: eax in proc proc2
result:    0 *32* eax := -
dest is not lib
call:  201 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local5 := ecx
                *c** local4 := ";!51.1z"
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{0},   r9=r9{59},   r10=r10{0},   r11=r11{0},
                r15=r15{0},   r24=r24{191},   r25=r25{195},   r26=r26{191},   r27=r27{0},   r28=r28{0} - 192,
                r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 12]=0xb99,
                m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,   m[r28{0} - 36]=0xa55,
                m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,   m[r28{0} - 64]=0x1118,
                m[r28{0} - 68]=0xa7d,   m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},
                m[r28{0} - 144]=r24{36},   m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},
                m[r28{0} - 180]=r31{0},   m[r28{0} - 184]=0x405090,   m[r28{0} - 188]=r25{195},   m[r28{0} - 192]=%pc,
                m[r28{0} - 196]=-1,   m[r28{0} - 200]=%pc,   tmp1=(r28{0} - 188) + 4,
                %flags=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 ),   %ZF=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 ),
                %CF=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 )
              Live variables: eax in proc proc2
result:    0 *32* eax := -
dest is not lib
call:  213 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local5 := edx
                *c** local4 := "=&;9,07U74+8U;!51.1z"
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{0},   r9=r9{59},   r10=r10{0},   r11=r11{0},
                r15=r15{0},   r24=r24{201},   r25=r25{201},   r26=r26{207},   r27=r27{0},   r28=r28{0} - 192,
                r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 12]=0xb99,
                m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,   m[r28{0} - 36]=0xa55,
                m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,   m[r28{0} - 60]=0x772,
                m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,   m[r28{0} - 104]=0x100f,
                m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},   m[r28{0} - 148]=r24{48}
                m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},   m[r28{0} - 184]=0x405078,
                m[r28{0} - 188]=r26{207},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,   m[r28{0} - 200]=%pc,
                tmp1=(r28{0} - 188) + 4,   %flags=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 ),
                %ZF=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 ),   %CF=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 )
              Live variables: eax in proc proc2
result:    0 *32* eax := -
dest is not lib
call:  223 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local5 := eax
                *c** local4 := " !48=6&X"
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{0},   r9=r9{59},   r10=r10{0},   r11=r11{0},
                r15=r15{0},   r24=r24{217},   r25=r25{213},   r26=r26{213},   r27=r27{0},   r28=r28{0} - 192,
                r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 12]=0xb99,
                m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,   m[r28{0} - 36]=0xa55,
                m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,   m[r28{0} - 60]=0x772,
                m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,   m[r28{0} - 104]=0x100f,
                m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},   m[r28{0} - 148]=r24{48}
                m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},   m[r28{0} - 184]=0x405120,
                m[r28{0} - 188]=r24{217},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,   m[r28{0} - 200]=%pc,
                tmp1=(r28{0} - 188) + 4,   %flags=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 ),
                %ZF=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 ),   %CF=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 )
              Live variables: eax in proc proc2
result:    0 *32* eax := -
dest is not lib
call:  233 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local5 := ecx_2
                *c** local4 := " !:=',+;'=1'z"
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{0},   r9=r9{59},   r10=r10{0},   r11=r11{0},
                r15=r15{0},   r24=r24{223},   r25=r25{227},   r26=r26{223},   r27=r27{0},   r28=r28{0} - 192,
                r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 12]=0xb99,
                m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,   m[r28{0} - 36]=0xa55,
                m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,   m[r28{0} - 60]=0x772,
                m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,   m[r28{0} - 104]=0x100f,
                m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},   m[r28{0} - 148]=r24{48}
                m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},   m[r28{0} - 184]=0x405104,
                m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,   m[r28{0} - 200]=%pc,
                tmp1=(r28{0} - 188) + 4,   %flags=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 ),
                %ZF=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 ),   %CF=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 )
              Live variables: eax in proc proc2
result:    0 *32* eax := -
dest is not lib
call:  238 {*32* eax, *v* ecx, *v* edx, *v** esp, *32* ebp} := CALL proc8(
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{0},   r9=r9{59},   r10=r10{0},   r11=r11{0},
                r15=r15{0},   r24=r24{233},   r25=r25{233},   r26=r26{233},   r27=r27{0},   r28=r28{0} - 184,
                r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 12]=0xb99,
                m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,   m[r28{0} - 36]=0xa55,
                m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,   m[r28{0} - 60]=0x772,
                m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,   m[r28{0} - 104]=0x100f,
                m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},   m[r28{0} - 148]=r24{48}
                m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},   m[r28{0} - 184]=%pc,
                m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,   m[r28{0} - 200]=%pc,
                tmp1=(r28{0} - 188) + 4,   %flags=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 ),
                %ZF=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 ),   %CF=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 )
              Live variables: eax,  esp in proc proc2
result:    0 *32* eax := -
result:    0 *v** esp := -
dest is not lib
call:  243 {*32* eax, *32* ecx, *32* edx, *v** esp, *v** ebp_1} := CALL proc9(
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{0},   r9=r9{59},   r10=r10{0},   r11=r11{0},
                r15=r15{0},   r24=r24{238},   r25=r25{238},   r26=r26{238},   r27=r27{0},   r28=r28{238} - 4,
                r29=r29{238},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 12]=0xb99,
                m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,   m[r28{0} - 36]=0xa55,
                m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,   m[r28{0} - 60]=0x772,
                m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,   m[r28{0} - 104]=0x100f,
                m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},   m[r28{0} - 148]=r24{48}
                m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},   m[r28{0} - 184]=%pc,
                m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,   m[r28{0} - 200]=%pc,
                tmp1=(r28{0} - 188) + 4,   %flags=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 ),
                %ZF=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 ),   %CF=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 )
              Live variables: eax,  ebp_1,  esp in proc proc2
result:    0 *32* eax := -
result:    0 *v** esp := -
result:    0 *v** ebp_1 := -
dest is not lib
call:  258 {*32* eax, *j32* ecx, *32* edx, *v** esp} := CALL proc10(
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{0},   r9=r9{59},   r10=r10{0},   r11=r11{0},
                r15=r15{0},   r24=r24{253},   r25=r25{243},   r26=r29{243} - 112,   r27=r27{0},   r28=r28{243} - 4,
                r29=r29{243},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 12]=0xb99,
                m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,   m[r28{0} - 36]=0xa55,
                m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,   m[r28{0} - 60]=0x772,
                m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,   m[r28{0} - 104]=0x100f,
                m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},   m[r28{0} - 148]=r24{48}
                m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},   m[r28{0} - 184]=%pc,
                m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,   m[r28{0} - 200]=%pc,
                tmp1=(r28{0} - 188) + 4,   %flags=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 ),
                %ZF=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 ),   %CF=ADDFLAGS32( r28{0} - 184, 4, r28{0} - 180 )
              Live variables: eax,  ebp_2,  esp in proc proc2
result:    0 *32* eax := -
result:    0 *v** esp := -
dest is not lib
call:  275 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetModuleFileNameA(
                *HMODULE* local27 := m[esp - 12]
                *LPSTR* m[esp - 8] := m[esp - 8]
                *DWORD* local28 := m[esp - 4]
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{0},   r9=r9{59},   r10=r10{0},   r11=r11{0},
                r15=r15{0},   r24=r24{258},   r25=global282,   r26=r26{258},   r27=r27{0},   r28=r28{258} - 16,
                r29=r29{258},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 12]=0xb99,
                m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,   m[r28{0} - 36]=0xa55,
                m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,   m[r28{0} - 60]=0x772,
                m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,   m[r28{0} - 104]=0x100f,
                m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},   m[r28{0} - 148]=r24{48}
                m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},   m[r28{0} - 184]=%pc,
                m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,   m[r28{0} - 200]=%pc,
                tmp1=r24{258},   %flags=LOGICALFLAGS32( r24{258} ),   %ZF=LOGICALFLAGS32( r24{258} ),
                %CF=LOGICALFLAGS32( r24{258} )
              Live variables:  in proc proc2
dest is not lib
call:  282 {*32* eax, *8* al, *u32* cl, *8* bl, *32* ecx, *32* edx, *32** esp, *v** ebp_3} := CALL proc11(
                *j32* local28 := m[esp - 4]
                *32* ebx := param5
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{0},   r9=r9{59},   r10=r10{0},   r11=r11{0},
                r15=r15{0},   r24=r24{275},   r25=r25{275},   r26=r26{275},   r27=r27{0},   r28=r28{258} - 8,
                r29=r29{258},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 12]=0xb99,
                m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,   m[r28{0} - 36]=0xa55,
                m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,   m[r28{0} - 60]=0x772,
                m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,   m[r28{0} - 104]=0x100f,
                m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},   m[r28{0} - 148]=r24{48}
                m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},   m[r28{0} - 184]=%pc,
                m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,   m[r28{0} - 200]=%pc,
                tmp1=r24{258},   %flags=LOGICALFLAGS32( r24{258} ),   %ZF=LOGICALFLAGS32( r24{258} ),
                %CF=LOGICALFLAGS32( r24{258} )
              Live variables: bl,  cl,  eax,  ebp_3,  esp in proc proc2
result:    0 *32* eax := -
result:    0 *u32* cl := -
result:    0 *8* bl := -
result:    0 *32** esp := -
result:    0 *v** ebp_3 := -
dest is not lib
call:  294 {*32* eax, *32* ecx, *32* edx, *v* esp} := CALL lstrcpyA(
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{282},   r9=r9{282},   r10=r10{0},   r11=r11{282},
                r15=r15{0},   r24=r24{282},   r25=r25{282},   r26=global281,   r27=r27{0},   r28=r28{282} - 8,
                r29=r29{282},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 12]=0xb99,
                m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,   m[r28{0} - 36]=0xa55,
                m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,   m[r28{0} - 60]=0x772,
                m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,   m[r28{0} - 104]=0x100f,
                m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},   m[r28{0} - 148]=r24{48}
                m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},   m[r28{0} - 184]=%pc,
                m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,   m[r28{0} - 200]=%pc,
                tmp1=r28{282},   %flags=ADDFLAGS32( r28{282}, 4, r28{282} + 4 ),
                %ZF=ADDFLAGS32( r28{282}, 4, r28{282} + 4 ),   %CF=ADDFLAGS32( r28{282}, 4, r28{282} + 4 )
              Live variables:  in proc proc2
dest is not lib
call:  307 {*32* eax, *8* al, *32* ecx, *32* edx, *v* esp} := CALL proc12(
                *8** local27 := m[esp - 12]
                *8** m[esp - 8] := m[esp - 8]
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{282},   r9=r9{282},   r10=r10{0},   r11=r11{282},
                r15=r15{0},   r24=global282,   r25=global281,   r26=r26{294},   r27=r27{0},   r28=r28{282} - 16,
                r29=r29{282},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 12]=0xb99,
                m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,   m[r28{0} - 36]=0xa55,
                m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,   m[r28{0} - 60]=0x772,
                m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,   m[r28{0} - 104]=0x100f,
                m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},   m[r28{0} - 148]=r24{48}
                m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},   m[r28{0} - 184]=%pc,
                m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,   m[r28{0} - 200]=%pc,
                tmp1=global281,   %flags=SUBFLAGS32( m[0x406134], 0, global281 ),   %ZF=global281 = 0,
                %CF=m[0x406134] <u 0
              Live variables:  in proc proc2
dest is not lib
call:  324 {*32* eax, *16* ax, *16* bx, *8* al, *u8* dl, *j8* bl, *8* bh, *j32* ecx, *32* edx, *union** esp, *v** ebp_4} := CALL proc13(
                *16* ax := param1
                *16* bx := param2
                *u8* dl := param3
                *8* bl := bl
                *8* bh := param4
                *32* ebx := param5
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{1833},   r9=r9{282},   r10=r10{0},   r11=r11{282},
                r15=r15{0},   r24=r24{1834},   r25=r25{1835},   r26=r29{282} - 116,   r27=r27{0},
                r28=(r28{282} - 4) - 12,   r29=r29{282},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=tmp1{1838},   %flags=%flags{1839},   %ZF=%ZF{1840},   %CF=%CF{1841}
              Live variables: ax,  bh,  bl,  bx,  dl,  eax,  ebp_4,  esp in proc proc2
result:    0 *32* eax := -
result:    0 *16* ax := -
result:    0 *16* bx := -
result:    0 *u8* dl := -
result:    0 *j8* bl := -
result:    0 *8* bh := -
result:    0 *union** esp := -
result:    0 *v** ebp_4 := -
dest is not lib
call:  352 {*32* eax, *8* al, *u32* cl, *u8* dl, *j32* ecx, *32* edx, *v* esp} := CALL proc14(
                *v** m[esp - 8] := m[esp - 8]
                *32* local28 := m[esp - 4]
                *u64* m[esp + 4] := m[esp + 4]
                *u32* cl := cl
                *u8* dl := dl
                *union* m[esp] := m[esp]
              )
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{324},   r9=r9{282},   r10=r10{324},
                r11=r11{324},   r15=r15{324},   r24=global12,   r25=r25{341},   r26=r26{346},   r27=r27{0},
                r28=r28{324} - 12,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=tmp1{332},   %flags=SUBFLAGS32( m[r29{324} - 116], 0, tmp1{332} ),
                %ZF=tmp1{332} = 0,   %CF=m[r29{324} - 116] <u 0
              Live variables: cl,  dl,  eax,  ecx in proc proc2
result:    0 *32* eax := -
result:    0 *u32* cl := -
result:    0 *u8* dl := -
result:    0 *j32* ecx := -
dest is not lib
call:  375 {*32* eax, *8* al, *u32* cl, *j8* bl, *j32* ecx, *32* edx, *v* esp} := CALL proc15(
                *u32** m[esp + 4] := m[esp + 4]
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param5
                *union* m[esp] := m[esp]
              )
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{352},   r9=r9{352},   r10=r10{352},
                r11=r11{324},   r15=r15{324},   r24=r24{369},   r25=r25{352},   r26=r26{352},   r27=r27{0},
                r28=r28{324} - 4,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=tmp1{360},   %flags=SUBFLAGS32( m[r29{324} - 116], 0, tmp1{360} ),
                %ZF=tmp1{360} = 0,   %CF=m[r29{324} - 116] <u 0
              Live variables: bl,  cl,  eax in proc proc2
result:    0 *32* eax := -
result:    0 *u32* cl := -
result:    0 *j8* bl := -
dest is not lib
call:  394 {*32* eax, *8* al, *j32* ecx, *32* edx, *v* esp} := CALL proc12(
                *8** m[esp + 4] := m[esp + 4]
                *union* m[esp] := m[esp]
              )
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{375},   r9=r9{375},   r10=r10{352},
                r11=r11{375},   r15=r15{324},   r24=r24{375},   r25=r25{386},   r26=r26{375},   r27=r27{0},
                r28=r28{324} - 4,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=tmp1{380},   %flags=SUBFLAGS32( m[r29{324} - 4], 0, tmp1{380} ),
                %ZF=tmp1{380} = 0,   %CF=m[r29{324} - 4] <u 0
              Live variables: ecx in proc proc2
result:    0 *j32* ecx := -
dest is not lib
call:  405 {*32* eax, *8* al, *u32* cl, *j8* bl, *32* ecx, *32* edx, *v* esp} := CALL proc15(
                *u32** m[esp + 4] := m[esp + 4]
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param5
                *union* m[esp] := m[esp]
              )
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{394},   r9=r9{375},   r10=r10{352},
                r11=r11{375},   r15=r15{324},   r24=r24{394},   r25=r25{394},   r26=r26{394},   r27=r27{0},
                r28=r28{324} - 4,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=(r28{324} - 4) + 4,   %flags=ADDFLAGS32( r28{324}, 8, r28{324} + 8 ),
                %ZF=ADDFLAGS32( r28{324}, 8, r28{324} + 8 ),   %CF=ADDFLAGS32( r28{324}, 8, r28{324} + 8 )
              Live variables: bl,  cl,  eax in proc proc2
result:    0 *32* eax := -
result:    0 *u32* cl := -
result:    0 *j8* bl := -
dest is not lib
call:  418 {*32* eax, *j32* ecx, *v* edx, *v* esp} := CALL lstrcpyA(
              )
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{405},   r9=r9{405},   r10=r10{352},
                r11=r11{405},   r15=r15{324},   r24=r24{405},   r25=r25{405},   r26=r26{410},   r27=r27{0},
                r28=r28{324} - 4,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=(r28{324} - 4) + 4,   %flags=ADDFLAGS32( r28{324}, 8, r28{324} + 8 ),
                %ZF=ADDFLAGS32( r28{324}, 8, r28{324} + 8 ),   %CF=ADDFLAGS32( r28{324}, 8, r28{324} + 8 )
              Live variables: ecx in proc proc2
result:    0 *j32* ecx := -
dest is not lib
call:  426 {*32* eax, *8* al, *u32* cl, *j8* bl, *32* ecx, *32* edx, *v* esp} := CALL proc15(
                *8** m[esp - 8] := m[esp - 8]
                *u32** local28 := m[esp - 4]
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param5
              )
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{405},   r9=r9{405},   r10=r10{352},
                r11=r11{405},   r15=r15{324},   r24=r24{418},   r25=r25{418},   r26=r26{418},   r27=r27{0},
                r28=r28{324} - 12,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=(r28{324} - 4) + 4,   %flags=ADDFLAGS32( r28{324}, 8, r28{324} + 8 ),
                %ZF=ADDFLAGS32( r28{324}, 8, r28{324} + 8 ),   %CF=ADDFLAGS32( r28{324}, 8, r28{324} + 8 )
              Live variables: bl,  cl,  eax in proc proc2
result:    0 *32* eax := -
result:    0 *u32* cl := -
result:    0 *j8* bl := -
dest is not lib
call:  439 {*32* eax, *j32* ecx, *v* edx, *v* esp} := CALL lstrcpyA(
              )
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{426},   r9=r9{426},   r10=r10{352},
                r11=r11{426},   r15=r15{324},   r24=r24{431},   r25=r25{426},   r26=r26{426},   r27=r27{0},
                r28=r28{324} - 12,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=(r28{324} - 12) + 4,   %flags=ADDFLAGS32( r28{324} - 8, 8, r28{324} ),
                %ZF=ADDFLAGS32( r28{324} - 8, 8, r28{324} ),   %CF=ADDFLAGS32( r28{324} - 8, 8, r28{324} )
              Live variables: ecx in proc proc2
result:    0 *j32* ecx := -
dest is not lib
call:  447 {*32* eax, *8* al, *u32* cl, *j8* bl, *32* ecx, *32* edx, *v* esp} := CALL proc15(
                *8** m[esp - 16] := m[esp - 16]
                *u32** local27 := m[esp - 12]
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param5
              )
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{426},   r9=r9{426},   r10=r10{352},
                r11=r11{426},   r15=r15{324},   r24=r24{439},   r25=r25{439},   r26=r26{439},   r27=r27{0},
                r28=r28{324} - 20,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=(r28{324} - 12) + 4,   %flags=ADDFLAGS32( r28{324} - 8, 8, r28{324} ),
                %ZF=ADDFLAGS32( r28{324} - 8, 8, r28{324} ),   %CF=ADDFLAGS32( r28{324} - 8, 8, r28{324} )
              Live variables: bl,  cl,  eax in proc proc2
result:    0 *32* eax := -
result:    0 *u32* cl := -
result:    0 *j8* bl := -
dest is not lib
call:  460 {*32* eax, *j32* ecx, *v* edx, *v* esp} := CALL lstrcpyA(
              )
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{447},   r9=r9{447},   r10=r10{352},
                r11=r11{447},   r15=r15{324},   r24=r24{447},   r25=r25{452},   r26=r26{447},   r27=r27{0},
                r28=r28{324} - 20,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=(r28{324} - 20) + 4,   %flags=ADDFLAGS32( r28{324} - 16, 8, r28{324} - 8 ),
                %ZF=ADDFLAGS32( r28{324} - 16, 8, r28{324} - 8 ),   %CF=ADDFLAGS32( r28{324} - 16, 8, r28{324} - 8 )
              Live variables: ecx in proc proc2
result:    0 *j32* ecx := -
dest is not lib
call:  468 {*32* eax, *8* al, *u32* cl, *j8* bl, *32* ecx, *32* edx, *v* esp} := CALL proc15(
                *8** local25 := m[esp - 24]
                *u32** local26 := m[esp - 20]
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param5
              )
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{447},   r9=r9{447},   r10=r10{352},
                r11=r11{447},   r15=r15{324},   r24=r24{460},   r25=r25{460},   r26=r26{460},   r27=r27{0},
                r28=r28{324} - 28,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=(r28{324} - 20) + 4,   %flags=ADDFLAGS32( r28{324} - 16, 8, r28{324} - 8 ),
                %ZF=ADDFLAGS32( r28{324} - 16, 8, r28{324} - 8 ),   %CF=ADDFLAGS32( r28{324} - 16, 8, r28{324} - 8 )
              Live variables: bl,  cl,  eax in proc proc2
result:    0 *32* eax := -
result:    0 *u32* cl := -
result:    0 *j8* bl := -
dest is not lib
call:  481 {*32* eax, *8* al, *j32* ecx, *32* edx, *v* esp} := CALL proc12(
                *8** local25 := m[esp - 24]
                *8** local26 := m[esp - 20]
              )
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{468},   r9=r9{468},   r10=r10{352},
                r11=r11{468},   r15=r15{324},   r24=r24{468},   r25=r25{468},   r26=r26{473},   r27=r27{0},
                r28=r28{324} - 28,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=(r28{324} - 28) + 4,   %flags=ADDFLAGS32( r28{324} - 24, 8, r28{324} - 16 )
                %ZF=ADDFLAGS32( r28{324} - 24, 8, r28{324} - 16 ),   %CF=ADDFLAGS32( r28{324} - 24, 8, r28{324} - 16 )
              Live variables: ecx in proc proc2
result:    0 *j32* ecx := -
dest is not lib
call:  492 {*32* eax, *8* al, *u32* cl, *j8* bl, *32* ecx, *32* edx, *v* esp} := CALL proc15(
                *8** local25 := m[esp - 24]
                *u32** local26 := m[esp - 20]
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param5
              )
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{481},   r9=r9{468},   r10=r10{352},
                r11=r11{468},   r15=r15{324},   r24=r24{481},   r25=r25{481},   r26=r26{481},   r27=r27{0},
                r28=r28{324} - 28,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=(r28{324} - 28) + 4,   %flags=ADDFLAGS32( r28{324} - 24, 8, r28{324} - 16 )
                %ZF=ADDFLAGS32( r28{324} - 24, 8, r28{324} - 16 ),   %CF=ADDFLAGS32( r28{324} - 24, 8, r28{324} - 16 )
              Live variables: bl,  cl,  eax in proc proc2
result:    0 *32* eax := -
result:    0 *u32* cl := -
result:    0 *j8* bl := -
dest is not lib
call:  505 {*32* eax, *j32* ecx, *v* edx, *v* esp} := CALL lstrcpyA(
              )
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{492},   r9=r9{492},   r10=r10{352},
                r11=r11{492},   r15=r15{324},   r24=r24{497},   r25=r25{492},   r26=r26{492},   r27=r27{0},
                r28=r28{324} - 28,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=(r28{324} - 28) + 4,   %flags=ADDFLAGS32( r28{324} - 24, 8, r28{324} - 16 )
                %ZF=ADDFLAGS32( r28{324} - 24, 8, r28{324} - 16 ),   %CF=ADDFLAGS32( r28{324} - 24, 8, r28{324} - 16 )
              Live variables: ecx in proc proc2
result:    0 *j32* ecx := -
dest is not lib
call:  513 {*32* eax, *8* al, *u32* cl, *j8* bl, *32* ecx, *32* edx, *v* esp} := CALL proc15(
                *8** local24 := m[esp - 32]
                *u32** m[esp - 28] := m[esp - 28]
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param5
              )
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{492},   r9=r9{492},   r10=r10{352},
                r11=r11{492},   r15=r15{324},   r24=r24{505},   r25=r25{505},   r26=r26{505},   r27=r27{0},
                r28=r28{324} - 36,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=(r28{324} - 28) + 4,   %flags=ADDFLAGS32( r28{324} - 24, 8, r28{324} - 16 )
                %ZF=ADDFLAGS32( r28{324} - 24, 8, r28{324} - 16 ),   %CF=ADDFLAGS32( r28{324} - 24, 8, r28{324} - 16 )
              Live variables: bl,  cl,  eax in proc proc2
result:    0 *32* eax := -
result:    0 *u32* cl := -
result:    0 *j8* bl := -
dest is not lib
call:  529 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL MessageBoxA(
                *HWND* local22 := m[esp - 40]
                *LPCSTR* local23 := m[esp - 36]
                *LPCSTR* local24 := m[esp - 32]
                *UINT* m[esp - 28] := m[esp - 28]
              )
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{513},   r9=r9{513},   r10=r10{352},
                r11=r11{513},   r15=r15{324},   r24=r24{513},   r25=r25{513},   r26=r26{513},   r27=r27{0},
                r28=r28{324} - 44,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=(r28{324} - 36) + 4,   %flags=ADDFLAGS32( r28{324} - 32, 8, r28{324} - 24 )
                %ZF=ADDFLAGS32( r28{324} - 32, 8, r28{324} - 24 ),   %CF=ADDFLAGS32( r28{324} - 32, 8, r28{324} - 24 )
              Live variables:  in proc proc2
dest is not lib
call:  538 {*32* eax, *8* al, *j32* ecx, *32* edx, *v* esp} := CALL proc12(
                *8** local24 := m[esp - 32]
                *8** m[esp - 28] := m[esp - 28]
              )
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{513},   r9=r9{513},   r10=r10{352},
                r11=r11{513},   r15=r15{324},   r24=r24{529},   r25=r25{530},   r26=r26{529},   r27=r27{0},
                r28=r28{324} - 36,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=(r28{324} - 36) + 4,   %flags=ADDFLAGS32( r28{324} - 32, 8, r28{324} - 24 )
                %ZF=ADDFLAGS32( r28{324} - 32, 8, r28{324} - 24 ),   %CF=ADDFLAGS32( r28{324} - 32, 8, r28{324} - 24 )
              Live variables: ecx in proc proc2
result:    0 *j32* ecx := -
dest is not lib
call:  549 {*32* eax, *8* al, *u32* cl, *j8* bl, *32* ecx, *32* edx, *v* esp} := CALL proc15(
                *8** local24 := m[esp - 32]
                *u32** m[esp - 28] := m[esp - 28]
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param5
              )
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{538},   r9=r9{513},   r10=r10{352},
                r11=r11{513},   r15=r15{324},   r24=r24{538},   r25=r25{538},   r26=r26{538},   r27=r27{0},
                r28=r28{324} - 36,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=(r28{324} - 36) + 4,   %flags=ADDFLAGS32( r28{324} - 32, 8, r28{324} - 24 )
                %ZF=ADDFLAGS32( r28{324} - 32, 8, r28{324} - 24 ),   %CF=ADDFLAGS32( r28{324} - 32, 8, r28{324} - 24 )
              Live variables: bl,  cl,  eax in proc proc2
result:    0 *32* eax := -
result:    0 *u32* cl := -
result:    0 *j8* bl := -
dest is not lib
call:  562 {*32* eax, *j32* ecx, *v* edx, *v* esp} := CALL lstrcpyA(
              )
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{549},   r9=r9{549},   r10=r10{352},
                r11=r11{549},   r15=r15{324},   r24=r24{549},   r25=r25{549},   r26=r26{554},   r27=r27{0},
                r28=r28{324} - 36,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=(r28{324} - 36) + 4,   %flags=ADDFLAGS32( r28{324} - 32, 8, r28{324} - 24 )
                %ZF=ADDFLAGS32( r28{324} - 32, 8, r28{324} - 24 ),   %CF=ADDFLAGS32( r28{324} - 32, 8, r28{324} - 24 )
              Live variables: ecx in proc proc2
result:    0 *j32* ecx := -
dest is not lib
call:  570 {*32* eax, *8* al, *u32* cl, *j8* bl, *32* ecx, *32* edx, *v* esp} := CALL proc15(
                *8** local22 := m[esp - 40]
                *u32** local23 := m[esp - 36]
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param5
              )
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{549},   r9=r9{549},   r10=r10{352},
                r11=r11{549},   r15=r15{324},   r24=r24{562},   r25=r25{562},   r26=r26{562},   r27=r27{0},
                r28=r28{324} - 44,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=(r28{324} - 36) + 4,   %flags=ADDFLAGS32( r28{324} - 32, 8, r28{324} - 24 )
                %ZF=ADDFLAGS32( r28{324} - 32, 8, r28{324} - 24 ),   %CF=ADDFLAGS32( r28{324} - 32, 8, r28{324} - 24 )
              Live variables: bl,  cl,  eax in proc proc2
result:    0 *32* eax := -
result:    0 *u32* cl := -
result:    0 *j8* bl := -
dest is not lib
call:  583 {*32* eax, *8* al, *j32* ecx, *32* edx, *v* esp} := CALL proc12(
                *8** local22 := m[esp - 40]
                *8** local23 := m[esp - 36]
              )
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{570},   r9=r9{570},   r10=r10{352},
                r11=r11{570},   r15=r15{324},   r24=r24{575},   r25=r25{570},   r26=r26{570},   r27=r27{0},
                r28=r28{324} - 44,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=(r28{324} - 44) + 4,   %flags=ADDFLAGS32( r28{324} - 40, 8, r28{324} - 32 )
                %ZF=ADDFLAGS32( r28{324} - 40, 8, r28{324} - 32 ),   %CF=ADDFLAGS32( r28{324} - 40, 8, r28{324} - 32 )
              Live variables: ecx in proc proc2
result:    0 *j32* ecx := -
dest is not lib
call:  594 {*32* eax, *8* al, *u32* cl, *j8* bl, *32* ecx, *32* edx, *v* esp} := CALL proc15(
                *8** local22 := m[esp - 40]
                *u32** local23 := m[esp - 36]
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param5
              )
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{583},   r9=r9{570},   r10=r10{352},
                r11=r11{570},   r15=r15{324},   r24=r24{583},   r25=r25{583},   r26=r26{583},   r27=r27{0},
                r28=r28{324} - 44,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=(r28{324} - 44) + 4,   %flags=ADDFLAGS32( r28{324} - 40, 8, r28{324} - 32 )
                %ZF=ADDFLAGS32( r28{324} - 40, 8, r28{324} - 32 ),   %CF=ADDFLAGS32( r28{324} - 40, 8, r28{324} - 32 )
              Live variables: bl,  cl,  eax in proc proc2
result:    0 *32* eax := -
result:    0 *u32* cl := -
result:    0 *j8* bl := -
dest is not lib
call:  607 {*32* eax, *j32* ecx, *v* edx, *v* esp} := CALL lstrcpyA(
              )
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{594},   r9=r9{594},   r10=r10{352},
                r11=r11{594},   r15=r15{324},   r24=r24{594},   r25=r25{599},   r26=r26{594},   r27=r27{0},
                r28=r28{324} - 44,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=(r28{324} - 44) + 4,   %flags=ADDFLAGS32( r28{324} - 40, 8, r28{324} - 32 )
                %ZF=ADDFLAGS32( r28{324} - 40, 8, r28{324} - 32 ),   %CF=ADDFLAGS32( r28{324} - 40, 8, r28{324} - 32 )
              Live variables: ecx in proc proc2
result:    0 *j32* ecx := -
dest is not lib
call:  615 {*32* eax, *8* al, *u32* cl, *j8* bl, *32* ecx, *32* edx, *v* esp} := CALL proc15(
                *8** local21 := m[esp - 48]
                *u32** m[esp - 44] := m[esp - 44]
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param5
              )
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{594},   r9=r9{594},   r10=r10{352},
                r11=r11{594},   r15=r15{324},   r24=r24{607},   r25=r25{607},   r26=r26{607},   r27=r27{0},
                r28=r28{324} - 52,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=(r28{324} - 44) + 4,   %flags=ADDFLAGS32( r28{324} - 40, 8, r28{324} - 32 )
                %ZF=ADDFLAGS32( r28{324} - 40, 8, r28{324} - 32 ),   %CF=ADDFLAGS32( r28{324} - 40, 8, r28{324} - 32 )
              Live variables: bl,  cl,  eax in proc proc2
result:    0 *32* eax := -
result:    0 *u32* cl := -
result:    0 *j8* bl := -
dest is not lib
call:  628 {*32* eax, *8* al, *j32* ecx, *32* edx, *v* esp} := CALL proc12(
                *8** local21 := m[esp - 48]
                *8** m[esp - 44] := m[esp - 44]
              )
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{615},   r9=r9{615},   r10=r10{352},
                r11=r11{615},   r15=r15{324},   r24=r24{615},   r25=r25{615},   r26=r26{620},   r27=r27{0},
                r28=r28{324} - 52,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=(r28{324} - 52) + 4,   %flags=ADDFLAGS32( r28{324} - 48, 8, r28{324} - 40 )
                %ZF=ADDFLAGS32( r28{324} - 48, 8, r28{324} - 40 ),   %CF=ADDFLAGS32( r28{324} - 48, 8, r28{324} - 40 )
              Live variables: ecx in proc proc2
result:    0 *j32* ecx := -
dest is not lib
call:  639 {*32* eax, *8* al, *u32* cl, *j8* bl, *32* ecx, *32* edx, *v* esp} := CALL proc15(
                *8** local21 := m[esp - 48]
                *u32** m[esp - 44] := m[esp - 44]
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param5
              )
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{628},   r9=r9{615},   r10=r10{352},
                r11=r11{615},   r15=r15{324},   r24=r24{628},   r25=r25{628},   r26=r26{628},   r27=r27{0},
                r28=r28{324} - 52,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=(r28{324} - 52) + 4,   %flags=ADDFLAGS32( r28{324} - 48, 8, r28{324} - 40 )
                %ZF=ADDFLAGS32( r28{324} - 48, 8, r28{324} - 40 ),   %CF=ADDFLAGS32( r28{324} - 48, 8, r28{324} - 40 )
              Live variables: bl,  cl,  eax in proc proc2
result:    0 *32* eax := -
result:    0 *u32* cl := -
result:    0 *j8* bl := -
dest is not lib
call:  652 {*32* eax, *8* al, *j32* ecx, *32* edx, *v* esp} := CALL proc12(
                *8** local21 := m[esp - 48]
                *8** m[esp - 44] := m[esp - 44]
              )
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{639},   r9=r9{639},   r10=r10{352},
                r11=r11{639},   r15=r15{324},   r24=r24{644},   r25=r25{639},   r26=r26{639},   r27=r27{0},
                r28=r28{324} - 52,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=(r28{324} - 52) + 4,   %flags=ADDFLAGS32( r28{324} - 48, 8, r28{324} - 40 )
                %ZF=ADDFLAGS32( r28{324} - 48, 8, r28{324} - 40 ),   %CF=ADDFLAGS32( r28{324} - 48, 8, r28{324} - 40 )
              Live variables: ecx in proc proc2
result:    0 *j32* ecx := -
dest is not lib
call:  663 {*32* eax, *8* al, *u32* cl, *j8* bl, *32* ecx, *32* edx, *v* esp} := CALL proc15(
                *8** local21 := m[esp - 48]
                *u32** m[esp - 44] := m[esp - 44]
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param5
              )
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{652},   r9=r9{639},   r10=r10{352},
                r11=r11{639},   r15=r15{324},   r24=r24{652},   r25=r25{652},   r26=r26{652},   r27=r27{0},
                r28=r28{324} - 52,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=(r28{324} - 52) + 4,   %flags=ADDFLAGS32( r28{324} - 48, 8, r28{324} - 40 )
                %ZF=ADDFLAGS32( r28{324} - 48, 8, r28{324} - 40 ),   %CF=ADDFLAGS32( r28{324} - 48, 8, r28{324} - 40 )
              Live variables: bl,  cl,  eax in proc proc2
result:    0 *32* eax := -
result:    0 *u32* cl := -
result:    0 *j8* bl := -
dest is not lib
call:  676 {*32* eax, *j32* ecx, *v* edx, *v* esp} := CALL lstrcpyA(
              )
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{663},   r9=r9{663},   r10=r10{352},
                r11=r11{663},   r15=r15{324},   r24=r24{663},   r25=r25{668},   r26=r26{663},   r27=r27{0},
                r28=r28{324} - 52,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=(r28{324} - 52) + 4,   %flags=ADDFLAGS32( r28{324} - 48, 8, r28{324} - 40 )
                %ZF=ADDFLAGS32( r28{324} - 48, 8, r28{324} - 40 ),   %CF=ADDFLAGS32( r28{324} - 48, 8, r28{324} - 40 )
              Live variables: ecx in proc proc2
result:    0 *j32* ecx := -
dest is not lib
call:  684 {*32* eax, *8* al, *u32* cl, *j8* bl, *32* ecx, *32* edx, *v* esp} := CALL proc15(
                *8** m[esp - 56] := m[esp - 56]
                *u32** local20 := m[esp - 52]
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param5
              )
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{663},   r9=r9{663},   r10=r10{352},
                r11=r11{663},   r15=r15{324},   r24=r24{676},   r25=r25{676},   r26=r26{676},   r27=r27{0},
                r28=r28{324} - 60,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=(r28{324} - 52) + 4,   %flags=ADDFLAGS32( r28{324} - 48, 8, r28{324} - 40 )
                %ZF=ADDFLAGS32( r28{324} - 48, 8, r28{324} - 40 ),   %CF=ADDFLAGS32( r28{324} - 48, 8, r28{324} - 40 )
              Live variables: bl,  cl,  eax in proc proc2
result:    0 *32* eax := -
result:    0 *u32* cl := -
result:    0 *j8* bl := -
dest is not lib
call:  697 {*32* eax, *j32* ecx, *v* edx, *v* esp} := CALL lstrcpyA(
              )
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{684},   r9=r9{684},   r10=r10{352},
                r11=r11{684},   r15=r15{324},   r24=r24{684},   r25=r25{684},   r26=r26{689},   r27=r27{0},
                r28=r28{324} - 60,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=(r28{324} - 60) + 4,   %flags=ADDFLAGS32( r28{324} - 56, 8, r28{324} - 48 )
                %ZF=ADDFLAGS32( r28{324} - 56, 8, r28{324} - 48 ),   %CF=ADDFLAGS32( r28{324} - 56, 8, r28{324} - 48 )
              Live variables: ecx in proc proc2
result:    0 *j32* ecx := -
dest is not lib
call:  705 {*32* eax, *8* al, *u32* cl, *j8* bl, *32* ecx, *32* edx, *v* esp} := CALL proc15(
                *8** local18 := m[esp - 64]
                *u32** local19 := m[esp - 60]
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param5
              )
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{684},   r9=r9{684},   r10=r10{352},
                r11=r11{684},   r15=r15{324},   r24=r24{697},   r25=r25{697},   r26=r26{697},   r27=r27{0},
                r28=r28{324} - 68,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=(r28{324} - 60) + 4,   %flags=ADDFLAGS32( r28{324} - 56, 8, r28{324} - 48 )
                %ZF=ADDFLAGS32( r28{324} - 56, 8, r28{324} - 48 ),   %CF=ADDFLAGS32( r28{324} - 56, 8, r28{324} - 48 )
              Live variables: bl,  cl,  eax in proc proc2
result:    0 *32* eax := -
result:    0 *u32* cl := -
result:    0 *j8* bl := -
dest is not lib
call:  721 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL MessageBoxW(
                *HWND* m[esp - 72] := m[esp - 72]
                *LPCWSTR* local17 := m[esp - 68]
                *LPCWSTR* local18 := m[esp - 64]
                *UINT* local19 := m[esp - 60]
              )
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{705},   r9=r9{705},   r10=r10{352},
                r11=r11{705},   r15=r15{324},   r24=r24{705},   r25=r25{705},   r26=r26{705},   r27=r27{0},
                r28=r28{324} - 76,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=(r28{324} - 68) + 4,   %flags=ADDFLAGS32( r28{324} - 64, 8, r28{324} - 56 )
                %ZF=ADDFLAGS32( r28{324} - 64, 8, r28{324} - 56 ),   %CF=ADDFLAGS32( r28{324} - 64, 8, r28{324} - 56 )
              Live variables:  in proc proc2
dest is not lib
call:  730 {*32* eax, *j32* ecx, *v* edx, *v* esp} := CALL lstrcpyA(
              )
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{705},   r9=r9{705},   r10=r10{352},
                r11=r11{705},   r15=r15{324},   r24=r24{722},   r25=r25{721},   r26=r26{721},   r27=r27{0},
                r28=r28{324} - 68,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=(r28{324} - 68) + 4,   %flags=ADDFLAGS32( r28{324} - 64, 8, r28{324} - 56 )
                %ZF=ADDFLAGS32( r28{324} - 64, 8, r28{324} - 56 ),   %CF=ADDFLAGS32( r28{324} - 64, 8, r28{324} - 56 )
              Live variables: ecx in proc proc2
result:    0 *j32* ecx := -
dest is not lib
call:  738 {*32* eax, *8* al, *u32* cl, *j8* bl, *32* ecx, *32* edx, *v* esp} := CALL proc15(
                *8** m[esp - 72] := m[esp - 72]
                *u32** local17 := m[esp - 68]
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param5
              )
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{705},   r9=r9{705},   r10=r10{352},
                r11=r11{705},   r15=r15{324},   r24=r24{730},   r25=r25{730},   r26=r26{730},   r27=r27{0},
                r28=r28{324} - 76,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=(r28{324} - 68) + 4,   %flags=ADDFLAGS32( r28{324} - 64, 8, r28{324} - 56 )
                %ZF=ADDFLAGS32( r28{324} - 64, 8, r28{324} - 56 ),   %CF=ADDFLAGS32( r28{324} - 64, 8, r28{324} - 56 )
              Live variables: bl,  cl,  eax in proc proc2
result:    0 *32* eax := -
result:    0 *u32* cl := -
result:    0 *j8* bl := -
dest is not lib
call:  751 {*32* eax, *j32* ecx, *v* edx, *v* esp} := CALL lstrcpyA(
              )
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{738},   r9=r9{738},   r10=r10{352},
                r11=r11{738},   r15=r15{324},   r24=r24{738},   r25=r25{743},   r26=r26{738},   r27=r27{0},
                r28=r28{324} - 76,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=(r28{324} - 76) + 4,   %flags=ADDFLAGS32( r28{324} - 72, 8, r28{324} - 64 )
                %ZF=ADDFLAGS32( r28{324} - 72, 8, r28{324} - 64 ),   %CF=ADDFLAGS32( r28{324} - 72, 8, r28{324} - 64 )
              Live variables: ecx in proc proc2
result:    0 *j32* ecx := -
dest is not lib
call:  759 {*32* eax, *8* al, *u32* cl, *j8* bl, *32* ecx, *32* edx, *v* esp} := CALL proc15(
                *8** m[esp - 80] := m[esp - 80]
                *u32** m[esp - 76] := m[esp - 76]
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param5
              )
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{738},   r9=r9{738},   r10=r10{352},
                r11=r11{738},   r15=r15{324},   r24=r24{751},   r25=r25{751},   r26=r26{751},   r27=r27{0},
                r28=r28{324} - 84,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=(r28{324} - 76) + 4,   %flags=ADDFLAGS32( r28{324} - 72, 8, r28{324} - 64 )
                %ZF=ADDFLAGS32( r28{324} - 72, 8, r28{324} - 64 ),   %CF=ADDFLAGS32( r28{324} - 72, 8, r28{324} - 64 )
              Live variables: bl,  cl,  eax in proc proc2
result:    0 *32* eax := -
result:    0 *u32* cl := -
result:    0 *j8* bl := -
dest is not lib
call:  772 {*32* eax, *j32* ecx, *v* edx, *v* esp} := CALL lstrcpyA(
              )
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{759},   r9=r9{759},   r10=r10{352},
                r11=r11{759},   r15=r15{324},   r24=r24{759},   r25=r25{759},   r26=r26{764},   r27=r27{0},
                r28=r28{324} - 84,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=(r28{324} - 84) + 4,   %flags=ADDFLAGS32( r28{324} - 80, 8, r28{324} - 72 )
                %ZF=ADDFLAGS32( r28{324} - 80, 8, r28{324} - 72 ),   %CF=ADDFLAGS32( r28{324} - 80, 8, r28{324} - 72 )
              Live variables: ecx in proc proc2
result:    0 *j32* ecx := -
dest is not lib
call:  780 {*32* eax, *8* al, *u32* cl, *j8* bl, *32* ecx, *32* edx, *v* esp} := CALL proc15(
                *8** local16 := m[esp - 88]
                *u32** m[esp - 84] := m[esp - 84]
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param5
              )
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{759},   r9=r9{759},   r10=r10{352},
                r11=r11{759},   r15=r15{324},   r24=r24{772},   r25=r25{772},   r26=r26{772},   r27=r27{0},
                r28=r28{324} - 92,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=(r28{324} - 84) + 4,   %flags=ADDFLAGS32( r28{324} - 80, 8, r28{324} - 72 )
                %ZF=ADDFLAGS32( r28{324} - 80, 8, r28{324} - 72 ),   %CF=ADDFLAGS32( r28{324} - 80, 8, r28{324} - 72 )
              Live variables: bl,  cl,  eax in proc proc2
result:    0 *32* eax := -
result:    0 *u32* cl := -
result:    0 *j8* bl := -
dest is not lib
call:  793 {*32* eax, *8* al, *j32* ecx, *32* edx, *v* esp} := CALL proc12(
                *8** local16 := m[esp - 88]
                *8** m[esp - 84] := m[esp - 84]
              )
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{780},   r9=r9{780},   r10=r10{352},
                r11=r11{780},   r15=r15{324},   r24=r24{785},   r25=r25{780},   r26=r26{780},   r27=r27{0},
                r28=r28{324} - 92,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=(r28{324} - 92) + 4,   %flags=ADDFLAGS32( r28{324} - 88, 8, r28{324} - 80 )
                %ZF=ADDFLAGS32( r28{324} - 88, 8, r28{324} - 80 ),   %CF=ADDFLAGS32( r28{324} - 88, 8, r28{324} - 80 )
              Live variables: ecx in proc proc2
result:    0 *j32* ecx := -
dest is not lib
call:  804 {*32* eax, *8* al, *u32* cl, *j8* bl, *32* ecx, *32* edx, *v* esp} := CALL proc15(
                *8** local16 := m[esp - 88]
                *u32** m[esp - 84] := m[esp - 84]
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param5
              )
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{793},   r9=r9{780},   r10=r10{352},
                r11=r11{780},   r15=r15{324},   r24=r24{793},   r25=r25{793},   r26=r26{793},   r27=r27{0},
                r28=r28{324} - 92,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=(r28{324} - 92) + 4,   %flags=ADDFLAGS32( r28{324} - 88, 8, r28{324} - 80 )
                %ZF=ADDFLAGS32( r28{324} - 88, 8, r28{324} - 80 ),   %CF=ADDFLAGS32( r28{324} - 88, 8, r28{324} - 80 )
              Live variables: bl,  cl,  eax in proc proc2
result:    0 *32* eax := -
result:    0 *u32* cl := -
result:    0 *j8* bl := -
dest is not lib
call:  817 {*32* eax, *8* al, *j32* ecx, *32* edx, *v* esp} := CALL proc12(
                *8** local16 := m[esp - 88]
                *8** m[esp - 84] := m[esp - 84]
              )
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{804},   r9=r9{804},   r10=r10{352},
                r11=r11{804},   r15=r15{324},   r24=r24{804},   r25=r25{809},   r26=r26{804},   r27=r27{0},
                r28=r28{324} - 92,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=(r28{324} - 92) + 4,   %flags=ADDFLAGS32( r28{324} - 88, 8, r28{324} - 80 )
                %ZF=ADDFLAGS32( r28{324} - 88, 8, r28{324} - 80 ),   %CF=ADDFLAGS32( r28{324} - 88, 8, r28{324} - 80 )
              Live variables: ecx in proc proc2
result:    0 *j32* ecx := -
dest is not lib
call:  828 {*32* eax, *8* al, *u32* cl, *j8* bl, *32* ecx, *32* edx, *v* esp} := CALL proc15(
                *8** local16 := m[esp - 88]
                *u32** m[esp - 84] := m[esp - 84]
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param5
              )
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{817},   r9=r9{804},   r10=r10{352},
                r11=r11{804},   r15=r15{324},   r24=r24{817},   r25=r25{817},   r26=r26{817},   r27=r27{0},
                r28=r28{324} - 92,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=(r28{324} - 92) + 4,   %flags=ADDFLAGS32( r28{324} - 88, 8, r28{324} - 80 )
                %ZF=ADDFLAGS32( r28{324} - 88, 8, r28{324} - 80 ),   %CF=ADDFLAGS32( r28{324} - 88, 8, r28{324} - 80 )
              Live variables: al,  bl,  cl,  eax in proc proc2
result:    0 *32* eax := -
result:    0 *8* al := -
result:    0 *u32* cl := -
result:    0 *j8* bl := -
dest is not lib
call:  841 {*i32* eax, *j32* ecx, *32* edx, *v** esp} := CALL lstrcpyA(
              )
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{828},   r9=r9{828},   r10=r10{352},
                r11=r11{828},   r15=r15{324},   r24=r24{828},   r25=r25{828},   r26=r26{833},   r27=r27{0},
                r28=r28{324} - 92,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=(r28{324} - 92) + 4,   %flags=ADDFLAGS32( r28{324} - 88, 8, r28{324} - 80 )
                %ZF=ADDFLAGS32( r28{324} - 88, 8, r28{324} - 80 ),   %CF=ADDFLAGS32( r28{324} - 88, 8, r28{324} - 80 )
              Live variables: ecx,  esp in proc proc2
result:    0 *j32* ecx := -
result:    0 *v** esp := -
dest is not lib
call:  860 {*32* eax, *8* al, *u32* cl, *j8* bl, *32* ecx, *32* edx, *v* esp} := CALL proc15(
                *8** m[esp - 8] := m[esp - 8]
                *u32** local28 := m[esp - 4]
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param5
              )
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{1861},   r9=r9{1862},   r10=r10{352},
                r11=r11{1863},   r15=r15{324},   r24=r24{1864},   r25=r25{1865},   r26=r26{1866},   r27=r27{0},
                r28=r28{1867} - 12,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=tmp1{850},   %flags=SUBFLAGS32( m[r29{324} - 36], 5, tmp1{850} ),
                %ZF=tmp1{850} = 0,   %CF=m[r29{324} - 36] <u 5
              Live variables: bl,  cl,  eax in proc proc2
result:    0 *32* eax := -
result:    0 *u32* cl := -
result:    0 *j8* bl := -
dest is not lib
call:  879 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL lstrcpyA(
              )
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{860},   r9=r9{860},   r10=r10{352},
                r11=r11{860},   r15=r15{324},   r24=r24{860},   r25=r25{865},   r26=(r26{868} *! 9) + 0x4058af,
                r27=r27{0},   r28=r28{1867} - 12,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=r26{868} *! 9,
                %flags=ADDFLAGS32( r26{868} *! 9, 0x4058af, (r26{868} *! 9) + 0x4058af ),
                %ZF=ADDFLAGS32( r26{868} *! 9, 0x4058af, (r26{868} *! 9) + 0x4058af ),
                %CF=ADDFLAGS32( r26{868} *! 9, 0x4058af, (r26{868} *! 9) + 0x4058af )
              Live variables:  in proc proc2
dest is not lib
call:  893 {*j32* eax, *8* al, *j32* ecx, *32* edx, *v* esp} := CALL proc16(
                *8** m[esp - 16] := m[esp - 16]
                *union* local27 := m[esp - 12]
                *i32* eax := (eax *! 9) + 0x4058af
              )
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{860},   r9=r9{860},   r10=r10{352},
                r11=r11{860},   r15=r15{324},   r24=(r24{882} *! 9) + 0x4058af,   r25=r25{879},   r26=r26{879},
                r27=r27{0},   r28=r28{1867} - 20,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=r24{882} *! 9,
                %flags=ADDFLAGS32( r24{882} *! 9, 0x4058af, (r24{882} *! 9) + 0x4058af ),
                %ZF=ADDFLAGS32( r24{882} *! 9, 0x4058af, (r24{882} *! 9) + 0x4058af ),
                %CF=ADDFLAGS32( r24{882} *! 9, 0x4058af, (r24{882} *! 9) + 0x4058af )
              Live variables: al,  eax,  ecx in proc proc2
result:    0 *j32* eax := -
result:    0 *8* al := -
result:    0 *j32* ecx := -
dest is not lib
call:  908 {*32* eax, *8* al, *u32* cl, *j8* bl, *32* ecx, *32* edx, *v* esp} := CALL proc15(
                *8** m[esp - 16] := m[esp - 16]
                *u32** local27 := m[esp - 12]
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param5
              )
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{893},   r9=r9{860},   r10=r10{352},
                r11=r11{860},   r15=r15{324},   r24=r24{893},   r25=r25{893},   r26=r26{893},   r27=r27{0},
                r28=r28{1867} - 20,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=r24{893},   %flags=LOGICALFLAGS32( r24{893} ),
                %ZF=LOGICALFLAGS32( r24{893} ),   %CF=LOGICALFLAGS32( r24{893} )
              Live variables: bl,  cl,  eax in proc proc2
result:    0 *32* eax := -
result:    0 *u32* cl := -
result:    0 *j8* bl := -
dest is not lib
call:  927 {*32* eax, *j32* ecx, *v* edx, *v* esp} := CALL lstrcpyA(
              )
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{908},   r9=r9{908},   r10=r10{352},
                r11=r11{908},   r15=r15{324},   r24=r24{908},   r25=r25{913},   r26=(r26{916} *! 9) + 0x4058b1,
                r27=r27{0},   r28=r28{1867} - 20,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=r26{916} *! 9,
                %flags=ADDFLAGS32( r26{916} *! 9, 0x4058b1, (r26{916} *! 9) + 0x4058b1 ),
                %ZF=ADDFLAGS32( r26{916} *! 9, 0x4058b1, (r26{916} *! 9) + 0x4058b1 ),
                %CF=ADDFLAGS32( r26{916} *! 9, 0x4058b1, (r26{916} *! 9) + 0x4058b1 )
              Live variables: ecx in proc proc2
result:    0 *j32* ecx := -
dest is not lib
call:  935 {*32* eax, *8* al, *u32* cl, *j8* bl, *32* ecx, *32* edx, *v* esp} := CALL proc15(
                *8** local25 := m[esp - 24]
                *u32** local26 := m[esp - 20]
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param5
              )
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{908},   r9=r9{908},   r10=r10{352},
                r11=r11{908},   r15=r15{324},   r24=r24{927},   r25=r25{927},   r26=r26{927},   r27=r27{0},
                r28=r28{1867} - 28,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=r26{916} *! 9,
                %flags=ADDFLAGS32( r26{916} *! 9, 0x4058b1, (r26{916} *! 9) + 0x4058b1 ),
                %ZF=ADDFLAGS32( r26{916} *! 9, 0x4058b1, (r26{916} *! 9) + 0x4058b1 ),
                %CF=ADDFLAGS32( r26{916} *! 9, 0x4058b1, (r26{916} *! 9) + 0x4058b1 )
              Live variables: bl,  cl,  eax in proc proc2
result:    0 *32* eax := -
result:    0 *u32* cl := -
result:    0 *j8* bl := -
dest is not lib
call:  954 {*j32* eax, *8* al, *j32* ecx, *32* edx, *v* esp} := CALL proc12(
                *8** local25 := m[esp - 24]
                *8** local26 := m[esp - 20]
              )
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{935},   r9=r9{935},   r10=r10{352},
                r11=r11{935},   r15=r15{324},   r24=r24{940},   r25=(r25{943} *! 9) + 0x4058b3,   r26=r26{935},
                r27=r27{0},   r28=r28{1867} - 28,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=r25{943} *! 9,
                %flags=ADDFLAGS32( r25{943} *! 9, 0x4058b3, (r25{943} *! 9) + 0x4058b3 ),
                %ZF=ADDFLAGS32( r25{943} *! 9, 0x4058b3, (r25{943} *! 9) + 0x4058b3 ),
                %CF=ADDFLAGS32( r25{943} *! 9, 0x4058b3, (r25{943} *! 9) + 0x4058b3 )
              Live variables: al,  ecx in proc proc2
result:    0 *8* al := -
result:    0 *j32* ecx := -
dest is not lib
call:  976 {*32* eax, *8* al, *u32* cl, *j8* bl, *32* ecx, *32* edx, *v* esp} := CALL proc15(
                *8** m[esp - 8] := m[esp - 8]
                *u32** local28 := m[esp - 4]
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param5
              )
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{1883},   r9=r9{1884},   r10=r10{352},
                r11=r11{1885},   r15=r15{324},   r24=r24{1886},   r25=r25{1887},   r26=r26{1888},   r27=r27{0},
                r28=r28{1889} - 12,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=tmp1{966},   %flags=SUBFLAGS32( m[r29{324} - 36], 5, tmp1{966} ),
                %ZF=tmp1{966} = 0,   %CF=m[r29{324} - 36] <u 5
              Live variables: bl,  cl,  eax in proc proc2
result:    0 *32* eax := -
result:    0 *u32* cl := -
result:    0 *j8* bl := -
dest is not lib
call:  995 {*i32* eax, *v* ecx, *v* edx, *v* esp} := CALL lstrcpyA(
              )
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{976},   r9=r9{976},   r10=r10{352},
                r11=r11{976},   r15=r15{324},   r24=r24{981},   r25=(r25{984} *! 424) + 0x4058dc,   r26=r26{976},
                r27=r27{0},   r28=r28{1889} - 12,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=r25{984} *! 424,
                %flags=ADDFLAGS32( r25{984} *! 424, 0x4058dc, (r25{984} *! 424) + 0x4058dc ),
                %ZF=ADDFLAGS32( r25{984} *! 424, 0x4058dc, (r25{984} *! 424) + 0x4058dc ),
                %CF=ADDFLAGS32( r25{984} *! 424, 0x4058dc, (r25{984} *! 424) + 0x4058dc )
              Live variables: eax in proc proc2
result:    0 *i32* eax := -
dest is not lib
call: 1009 {*i32* eax, *8* al, *j32* ecx, *32* edx, *v* esp} := CALL proc16(
                *8** m[esp - 16] := m[esp - 16]
                *union* local27 := m[esp - 12]
                *i32* eax := eax
              )
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{976},   r9=r9{976},   r10=r10{352},
                r11=r11{976},   r15=r15{324},   r24=r24{995},   r25=r25{995},   r26=(r26{998} *! 424) + 0x4058dc,
                r27=r27{0},   r28=r28{1889} - 20,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=r26{998} *! 424,
                %flags=ADDFLAGS32( r26{998} *! 424, 0x4058dc, (r26{998} *! 424) + 0x4058dc ),
                %ZF=ADDFLAGS32( r26{998} *! 424, 0x4058dc, (r26{998} *! 424) + 0x4058dc ),
                %CF=ADDFLAGS32( r26{998} *! 424, 0x4058dc, (r26{998} *! 424) + 0x4058dc )
              Live variables: al,  eax,  ecx in proc proc2
result:    0 *i32* eax := -
result:    0 *8* al := -
result:    0 *j32* ecx := -
dest is not lib
call: 1024 {*32* eax, *8* al, *u32* cl, *j8* bl, *32* ecx, *32* edx, *v* esp} := CALL proc15(
                *8** m[esp - 16] := m[esp - 16]
                *u32** local27 := m[esp - 12]
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param5
              )
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{1009},   r9=r9{976},   r10=r10{352},
                r11=r11{976},   r15=r15{324},   r24=r24{1009},   r25=r25{1009},   r26=r26{1009},   r27=r27{0},
                r28=r28{1889} - 20,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=r24{1009},   %flags=LOGICALFLAGS32( r24{1009} ),
                %ZF=LOGICALFLAGS32( r24{1009} ),   %CF=LOGICALFLAGS32( r24{1009} )
              Live variables: bl,  cl,  eax in proc proc2
result:    0 *32* eax := -
result:    0 *u32* cl := -
result:    0 *j8* bl := -
dest is not lib
call: 1043 {*32* eax, *j32* ecx, *v* edx, *v* esp} := CALL lstrcpyA(
              )
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{1024},   r9=r9{1024},   r10=r10{352},
                r11=r11{1024},   r15=r15{324},   r24=r24{1029},   r25=(r25{1032} *! 424) + 0x405954,   r26=r26{1024},
                r27=r27{0},   r28=r28{1889} - 20,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=r25{1032} *! 424,
                %flags=ADDFLAGS32( r25{1032} *! 424, 0x405954, (r25{1032} *! 424) + 0x405954 ),
                %ZF=ADDFLAGS32( r25{1032} *! 424, 0x405954, (r25{1032} *! 424) + 0x405954 ),
                %CF=ADDFLAGS32( r25{1032} *! 424, 0x405954, (r25{1032} *! 424) + 0x405954 )
              Live variables: ecx in proc proc2
result:    0 *j32* ecx := -
dest is not lib
call: 1051 {*32* eax, *8* al, *u32* cl, *j8* bl, *32* ecx, *32* edx, *v* esp} := CALL proc15(
                *8** local25 := m[esp - 24]
                *u32** local26 := m[esp - 20]
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param5
              )
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{1024},   r9=r9{1024},   r10=r10{352},
                r11=r11{1024},   r15=r15{324},   r24=r24{1043},   r25=r25{1043},   r26=r26{1043},   r27=r27{0},
                r28=r28{1889} - 28,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=r25{1032} *! 424,
                %flags=ADDFLAGS32( r25{1032} *! 424, 0x405954, (r25{1032} *! 424) + 0x405954 ),
                %ZF=ADDFLAGS32( r25{1032} *! 424, 0x405954, (r25{1032} *! 424) + 0x405954 ),
                %CF=ADDFLAGS32( r25{1032} *! 424, 0x405954, (r25{1032} *! 424) + 0x405954 )
              Live variables: bl,  cl,  eax in proc proc2
result:    0 *32* eax := -
result:    0 *u32* cl := -
result:    0 *j8* bl := -
dest is not lib
call: 1070 {*32* eax, *8* al, *j32* ecx, *32* edx, *v* esp} := CALL proc12(
                *8** local25 := m[esp - 24]
                *8** local26 := m[esp - 20]
              )
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{1051},   r9=r9{1051},   r10=r10{352},
                r11=r11{1051},   r15=r15{324},   r24=(r24{1059} *! 424) + 0x40597d,   r25=r25{1051},   r26=r26{1056},
                r27=r27{0},   r28=r28{1889} - 28,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=r24{1059} *! 424,
                %flags=ADDFLAGS32( r24{1059} *! 424, 0x40597d, (r24{1059} *! 424) + 0x40597d ),
                %ZF=ADDFLAGS32( r24{1059} *! 424, 0x40597d, (r24{1059} *! 424) + 0x40597d ),
                %CF=ADDFLAGS32( r24{1059} *! 424, 0x40597d, (r24{1059} *! 424) + 0x40597d )
              Live variables: ecx in proc proc2
result:    0 *j32* ecx := -
dest is not lib
call: 1081 {*32* eax, *8* al, *u32* cl, *j8* bl, *32* ecx, *32* edx, *v* esp} := CALL proc15(
                *8** local25 := m[esp - 24]
                *u32** local26 := m[esp - 20]
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param5
              )
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{1070},   r9=r9{1051},   r10=r10{352},
                r11=r11{1051},   r15=r15{324},   r24=r24{1070},   r25=r25{1070},   r26=r26{1070},   r27=r27{0},
                r28=r28{1889} - 28,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=(r28{1889} - 28) + 4,
                %flags=ADDFLAGS32( r28{1889} - 24, 8, r28{1889} - 16 ),
                %ZF=ADDFLAGS32( r28{1889} - 24, 8, r28{1889} - 16 ),
                %CF=ADDFLAGS32( r28{1889} - 24, 8, r28{1889} - 16 )
              Live variables: al,  bl,  cl,  eax in proc proc2
result:    0 *32* eax := -
result:    0 *8* al := -
result:    0 *u32* cl := -
result:    0 *j8* bl := -
dest is not lib
call: 1100 {*i32* eax, *j32* ecx, *32* edx, *v** esp} := CALL lstrcpyA(
              )
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{1081},   r9=r9{1081},   r10=r10{352},
                r11=r11{1081},   r15=r15{324},   r24=r24{1081},   r25=r25{1086},   r26=(r26{1089} *! 424) + 0x405a82,
                r27=r27{0},   r28=r28{1889} - 28,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=r26{1089} *! 424,
                %flags=ADDFLAGS32( r26{1089} *! 424, 0x405a82, (r26{1089} *! 424) + 0x405a82 ),
                %ZF=ADDFLAGS32( r26{1089} *! 424, 0x405a82, (r26{1089} *! 424) + 0x405a82 ),
                %CF=ADDFLAGS32( r26{1089} *! 424, 0x405a82, (r26{1089} *! 424) + 0x405a82 )
              Live variables: ecx,  esp in proc proc2
result:    0 *j32* ecx := -
result:    0 *v** esp := -
dest is not lib
call: 1111 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL CreateMutexA(
              )
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{1883},   r9=r9{1884},   r10=r10{352},
                r11=r11{1885},   r15=r15{324},   r24=r24{1886},   r25=r25{1887},   r26=r26{1888},   r27=r27{0},
                r28=r28{1889} - 16,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=tmp1{966},   %flags=SUBFLAGS32( m[r29{324} - 36], 5, tmp1{966} ),
                %ZF=tmp1{966} = 0,   %CF=m[r29{324} - 36] <u 5
              Live variables:  in proc proc2
dest is not lib
call: 1115 {*32* eax, *j32* ecx, *32* edx, *v** esp} := CALL GetLastError(
              )
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{1883},   r9=r9{1884},   r10=r10{352},
                r11=r11{1885},   r15=r15{324},   r24=r24{1111},   r25=r25{1111},   r26=r26{1111},   r27=r27{0},
                r28=r28{1889} - 16,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=tmp1{966},   %flags=SUBFLAGS32( m[r29{324} - 36], 5, tmp1{966} ),
                %ZF=tmp1{966} = 0,   %CF=m[r29{324} - 36] <u 5
              Live variables: eax in proc proc2
result:    0 *32* eax := -
dest is not lib
call: 1129 {*32* eax, *32* ecx, *32* edx, *v* esp} := CALL lstrcmpA(
              )
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{1883},   r9=r9{1884},   r10=r10{352},
                r11=r11{1885},   r15=r15{324},   r24=r24{1115},   r25=r25{1115},   r26=r26{1115},   r27=r27{0},
                r28=r28{1889} - 24,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=r24{1115} - 183,   %flags=SUBFLAGS32( r24{1115}, 183, r24{1115} - 183 ),
                %ZF=(r24{1115} - 183) = 0,   %CF=r24{1115} <u 183
              Live variables: eax,  ecx,  edx in proc proc2
result:    0 *32* eax := -
result:    0 *32* ecx := -
result:    0 *32* edx := -
dest is not lib
call: 1136 <all> := CALL proc17(<all>)
              Reaching definitions: r0=r0{324},   r3=r3{324},   r8=r8{1883},   r9=r9{1884},   r10=r10{352},
                r11=r11{1885},   r15=r15{324},   r24=r24{1129},   r25=r25{1129},   r26=r26{1129},   r27=r27{0},
                r28=r28{1889} - 24,   r29=r29{324},   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=0xb99,   m[r28{0} - 20]=14,   m[r28{0} - 24]=0xdb2,   m[r28{0} - 32]=0xd92,
                m[r28{0} - 36]=0xa55,   m[r28{0} - 40]=0,   m[r28{0} - 48]=0x84d,   m[r28{0} - 52]=348,
                m[r28{0} - 60]=0x772,   m[r28{0} - 64]=0x1118,   m[r28{0} - 68]=0xa7d,   m[r28{0} - 88]=0x5ad,
                m[r28{0} - 104]=0x100f,   m[r28{0} - 124]=0x12d0,   m[r28{0} - 140]=r24{24},   m[r28{0} - 144]=r24{36},
                m[r28{0} - 148]=r24{48},   m[r28{0} - 172]=r27{0},   m[r28{0} - 176]=r30{0},   m[r28{0} - 180]=r31{0},
                m[r28{0} - 184]=%pc,   m[r28{0} - 188]=r25{227},   m[r28{0} - 192]=%pc,   m[r28{0} - 196]=-1,
                m[r28{0} - 200]=%pc,   tmp1=r24{1129},   %flags=LOGICALFLAGS32( eax ),   %ZF=LOGICALFLAGS32( eax ),
                %CF=LOGICALFLAGS32( eax )
              Live variables:  in proc proc2
dest is not lib
call: 1157 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL lstrcmpA(
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1177 CALL proc20(
                *32* m[r28 - 56] := m[r28 - 56]
                *32* m[r28 + 4] := m[r28 + 4]
                *16* ax := r0
                *u8* dl := r10
                *j8* bl := r11
                *32* ebx := r27
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1189 {*32* eax, *8* al, *32* ecx, *32* edx, *v* esp} := CALL proc12(
                *8** m[r28 + 4] := m[r28 + 4]
                *8** m[r28 + 8] := m[r28 + 8]
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1198 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL proc6(
                *DWORD* m[r28 + 4] := m[r28 + 4]
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1216 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL MessageBoxA(
                *HWND* m[r28 + 4] := m[r28 + 4]
                *LPCSTR* m[r28 + 8] := m[r28 + 8]
                *LPCSTR* m[r28 + 12] := m[r28 + 12]
                *UINT* m[r28 + 16] := m[r28 + 16]
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1325 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL lstrcpyA(
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1230 {*32* eax, *8* al, *32* ecx, *32* edx, *v* esp} := CALL proc16(
                *8** m[r28 + 4] := m[r28 + 4]
                *union* m[r28 + 8] := m[r28 + 8]
                *i32* eax := r24
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1255 {*32* eax, *8* al, *32* ecx, *32* edx, *v* esp} := CALL proc16(
                *8** m[r28 + 4] := m[r28 + 4]
                *union* m[r28 + 8] := m[r28 + 8]
                *i32* eax := r24
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1281 {*v* eax, *32* esi, *v* ecx, *v* edx, *v* esp, *32* edi} := CALL proc23(
                *32* m[r28 + 4] := m[r28 + 4]
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1293 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL lstrcpyA(
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1302 {*32* eax, *8* al, *32* ecx, *32* edx, *v* esp} := CALL proc22(
                *8** m[r28 + 4] := m[r28 + 4]
                *8** m[r28 + 8] := m[r28 + 8]
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1314 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL lstrcatA(
                *LPSTR* m[r28 + 4] := m[r28 + 4]
                *LPSTR* m[r28 + 8] := m[r28 + 8]
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1271 {*32* eax, *8* al, *32* ecx, *32* edx, *v* esp} := CALL proc12(
                *8** m[r28 + 4] := m[r28 + 4]
                *8** m[r28 + 8] := m[r28 + 8]
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1246 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL lstrcpyA(
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1338 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL MessageBoxA(
                *HWND* m[r28 + 4] := m[r28 + 4]
                *LPCSTR* m[r28 + 8] := m[r28 + 8]
                *LPCSTR* m[r28 + 12] := m[r28 + 12]
                *UINT* m[r28 + 16] := m[r28 + 16]
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1346 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL lstrcmpA(
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1368 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL CreateThread(
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1375 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL proc6(
                *DWORD* m[r28 + 4] := m[r28 + 4]
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1387 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL proc6(
                *DWORD* m[r28 + 4] := m[r28 + 4]
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1413 {*32* eax, *8* al, *32* ecx, *32* edx, *v* esp} := CALL proc12(
                *8** m[r28 + 4] := m[r28 + 4]
                *8** m[r28 + 8] := m[r28 + 8]
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1422 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL proc6(
                *DWORD* m[r28 + 4] := m[r28 + 4]
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1440 {*32* eax, *8* al, *8* dl, *32* ecx, *32* edx, *v* esp} := CALL proc21(
                *i64* m[r28 + 4] := m[r28 + 4]
                *8** m[r28 + 8] := m[r28 + 8]
                *i64* m[r28 + 12] := m[r28 + 12]
                *u8* dl := r10
                *8** ecx := r25
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1453 {*32* eax, *8* al, *32* ecx, *32* edx, *v* esp} := CALL proc22(
                *8** m[r28 + 4] := m[r28 + 4]
                *8** m[r28 + 8] := m[r28 + 8]
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1476 {*32* eax, *8* al, *32* ecx, *32* edx, *v* esp} := CALL proc16(
                *8** m[r28 + 4] := m[r28 + 4]
                *union* m[r28 + 8] := m[r28 + 8]
                *i32* eax := r24
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1499 {*32* eax, *8* al, *32* ecx, *32* edx, *v* esp} := CALL proc16(
                *8** m[r28 + 4] := m[r28 + 4]
                *union* m[r28 + 8] := m[r28 + 8]
                *i32* eax := r24
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1518 {*32* eax, *16* ax, *16* bx, *8* al, *8* dl, *8* bl, *8* bh, *v* ecx, *v* edx, *v* esp, *32* ebp} := CALL proc13(
                *16* ax := r0
                *16* bx := r3
                *u8* dl := r10
                *8* bl := r11
                *8* bh := r15
                *32* ebx := r27
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1544 {*32* eax, *8* al, *8* r9, *8* dl, *32* ecx, *32* edx, *v* esp} := CALL proc14(
                *v** m[r28 + 4] := m[r28 + 4]
                *32* m[r28 + 8] := m[r28 + 8]
                *u32* m[r28 + 12] := m[r28 + 12]
                *u64* m[r28 + 16] := m[r28 + 16]
                *u32* cl := r9
                *u8* dl := r10
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1575 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL lstrcmpA(
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1584 {*v* eax, *32* esi, *v* ecx, *v* edx, *v* esp, *32* edi} := CALL proc23(
                *32* m[r28 + 4] := m[r28 + 4]
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1596 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL lstrcpyA(
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1605 {*32* eax, *8* al, *32* ecx, *32* edx, *v* esp} := CALL proc22(
                *8** m[r28 + 4] := m[r28 + 4]
                *8** m[r28 + 8] := m[r28 + 8]
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1618 {*32* eax, *8* al, *32* ecx, *32* edx, *v* esp} := CALL proc22(
                *8** m[r28 + 4] := m[r28 + 4]
                *8** m[r28 + 8] := m[r28 + 8]
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1630 {*32* eax, *8* al, *32* ecx, *32* edx, *v* esp} := CALL proc22(
                *8** m[r28 + 4] := m[r28 + 4]
                *8** m[r28 + 8] := m[r28 + 8]
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1642 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL lstrcatA(
                *LPSTR* m[r28 + 4] := m[r28 + 4]
                *LPSTR* m[r28 + 8] := m[r28 + 8]
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1651 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL lstrcatA(
                *LPSTR* m[r28 + 4] := m[r28 + 4]
                *LPSTR* m[r28 + 8] := m[r28 + 8]
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1669 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL lstrcatA(
                *LPSTR* m[r28 + 4] := m[r28 + 4]
                *LPSTR* m[r28 + 8] := m[r28 + 8]
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1766 {*v* eax, *v* ecx, *v* edx, *v* esp} := CALL proc24(
                *LPVOID* m[r28 + 4] := m[r28 + 4]
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1746 {*32* eax, *16* ax, *16* bx, *8* al, *8* bl, *8* bh, *32* ecx, *32* edx, *v* esp, *32* ebp} := CALL proc25(
                *j32* m[r28 - 844] := m[r28 - 844]
                *32* m[r28 + 4] := m[r28 + 4]
                *16** m[r28 + 8] := m[r28 + 8]
                *u16* ax := r0
                *j16* bx := r3
                *j8* bl := r11
                *u32* bh := r15
                *32* ebx := r27
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1782 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL MessageBoxW(
                *HWND* m[r28 + 4] := m[r28 + 4]
                *LPCWSTR* m[r28 + 8] := m[r28 + 8]
                *LPCWSTR* m[r28 + 12] := m[r28 + 12]
                *UINT* m[r28 + 16] := m[r28 + 16]
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1794 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL MessageBoxW(
                *HWND* m[r28 + 4] := m[r28 + 4]
                *LPCWSTR* m[r28 + 8] := m[r28 + 8]
                *LPCWSTR* m[r28 + 12] := m[r28 + 12]
                *UINT* m[r28 + 16] := m[r28 + 16]
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1806 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL MessageBoxA(
                *HWND* m[r28 + 4] := m[r28 + 4]
                *LPCSTR* m[r28 + 8] := m[r28 + 8]
                *LPCSTR* m[r28 + 12] := m[r28 + 12]
                *UINT* m[r28 + 16] := m[r28 + 16]
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1818 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL WaitForSingleObject(
                *HANDLE* m[r28 + 4] := m[r28 + 4]
                *DWORD* m[r28 + 8] := m[r28 + 8]
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call: 1164 {*v* eax, *v* ecx, *v* edx, *v* esp, *32* ebp} := CALL proc19(
              )
              Reaching definitions: 
              Live variables:  in proc proc2
dest is not lib
call:    4 {*32* r24, *v** esp} := CALL proc4(
              )
              Reaching definitions: r24=r24{0},   r28=r28{0} - 4,   r30=r30{0},   m[r28{0} - 4]=%pc
              Live variables: esp in proc proc3
result:    0 *v** esp := -
dest is not lib
call:   14 {*32* r24, *32* esi, *v** esp} := CALL proc1(
                *32** m[esp - 12] := m[esp - 12]
                *32* esi := param1
              )
              Reaching definitions: r24=r24{4},   r28=r28{4} - 16,   r30=r30{0},   m[r28{0} - 4]=%pc
              Live variables: esi,  esp in proc proc3
result:    0 *32* esi := -
result:    0 *v** esp := -
dest is not lib
call:   24 {*32* r24, *32* esi, *32* esp} := CALL proc1(
                *32** m[esp - 12] := m[esp - 12]
                *32* esi := esi
              )
              Reaching definitions: r24=r24{14},   r28=r28{14} - 16,   r30=r30{14},   m[r28{0} - 4]=%pc
              Live variables: esp in proc proc3
result:    0 *32* esp := -
dest is not lib
call:   33 {*32* r24, *v* r25, *v* r26, *v* esp} := CALL ExitProcess(
                *UINT* m[esp + 20] := m[esp + 20]
              )
              Reaching definitions: r24=r24{24},   r28=r28{24} + 16,   r30=r30{24},   m[r28{0} - 4]=%pc,   tmp1=r28{24}
                %flags=ADDFLAGS32( r28{24}, 24, r28{24} + 24 ),   %ZF=ADDFLAGS32( r28{24}, 24, r28{24} + 24 ),
                %CF=ADDFLAGS32( r28{24}, 24, r28{24} + 24 )
              Live variables:  in proc proc3
dest is not lib
call:   43 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL ExitProcess(
                *UINT* m[esp] := m[esp]
              )
              Reaching definitions: r0=r0{255},   r3=r3{256},   r8=r8{191},   r9=r9{192},   r10=r10{257},
                r15=r15{258},   r24=r24{193},   r25=r25{194},   r26=r26{195},   r27=r27{259},   r28=r28{196} - 4,
                r29=r29{197},   r30=r30{198},   m[r28{0} - 4]=m[r28{0} - 4]{248},   m[r28{0} - 76]=m[r28{0} - 76]{249},
                tmp1=tmp1{199},   tmpb=tmpb{200},   %flags=%flags{201},   %ZF=%ZF{202},   %CF=%CF{203}
              Live variables:  in proc _start
dest is not lib
call:   31 {*32* eax, *32* esi, *32** esp} := CALL proc1(
                *32** m[esp_1 - 12] := m[esp_1 - 12]
                *32* esi := param6
              )
              Reaching definitions: r0=r0{250},   r3=r3{251},   r8=r8{178},   r9=r9{0},   r10=r10{252},   r15=r15{253},
                r24=r24{180},   r25=r25{0},   r26=r26{0},   r27=r27{254},   r28=r28{183} - 16,   r29=r29{184},
                r30=r30{0},   m[r28{0} - 4]=m[r28{0} - 4]{246},   m[r28{0} - 76]=m[r28{0} - 76]{247},   tmp1=tmp1{186},
                tmpb=tmpb{0},   %flags=%flags{188},   %ZF=%ZF{189},   %CF=%CF{190}
              Live variables: eax,  esi,  esp in proc _start
result:    0 *32* eax := -
result:    0 *32* esi := -
result:    0 *32** esp := -
dest is not lib
call:   56 {*32* eax, *32* esi, *union** esp} := CALL proc1(
                *32** local1 := m[esp - 4]
                *32* esi := esi
              )
              Reaching definitions: r0=r0{250},   r3=r3{251},   r8=r8{178},   r9=r9{0},   r10=r10{252},   r15=r15{253},
                r24=r24{31},   r25=r25{0},   r26=r26{0},   r27=r27{254},   r28=r28{31} - 8,   r29=r29{184},
                r30=r30{31},   m[r28{0} - 4]=m[r28{0} - 4]{246},   m[r28{0} - 76]=m[r28{0} - 76]{247},   tmp1=r24{31},
                tmpb=tmpb{0},   %flags=LOGICALFLAGS32( r24{31} ),   %ZF=LOGICALFLAGS32( r24{31} ),
                %CF=LOGICALFLAGS32( r24{31} )
              Live variables: esp in proc _start
result:    0 *union** esp := -
dest is not lib
call:   63 {*j32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetCommandLineA(
              )
              Reaching definitions: r0=r0{250},   r3=r3{251},   r8=r8{178},   r9=r9{0},   r10=r10{252},   r15=r15{253},
                r24=r24{56},   r25=r25{0},   r26=r26{0},   r27=r27{254},   r28=r28{56} + 8,   r29=r29{184},
                r30=r30{56},   m[r28{0} - 4]=m[r28{0} - 4]{246},   m[r28{0} - 76]=m[r28{0} - 76]{247},   tmp1=r28{56},
                tmpb=tmpb{0},   %flags=ADDFLAGS32( r28{56}, 12, r28{56} + 12 ),
                %ZF=ADDFLAGS32( r28{56}, 12, r28{56} + 12 ),   %CF=ADDFLAGS32( r28{56}, 12, r28{56} + 12 )
              Live variables: eax in proc _start
result:    0 *j32* eax := -
dest is not lib
call:  121 {*j32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetStartupInfoA(
              )
              Reaching definitions: r0=r0{250},   r3=r3{251},   r8=truncu(32,8,r29{184} - 68),   r9=r9{231},
                r10=r10{252},   r15=r15{253},   r24=r29{184} - 68,   r25=r25{63},   r26=r26{63},   r27=r27{254},
                r28=r28{56} + 4,   r29=r29{184},   r30=r30{233},   m[r28{0} - 4]=m[r28{0} - 4]{246},
                m[r28{0} - 76]=m[r28{0} - 76]{247},   tmp1=tmp1{234},   tmpb=tmpb{239},
                %flags=LOGICALFLAGS32( m[r29{184} - 24] ),   %ZF=LOGICALFLAGS32( m[r29{184} - 24] ),
                %CF=LOGICALFLAGS32( m[r29{184} - 24] )
              Live variables:  in proc _start
dest is not lib
call:  154 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetModuleHandleA(
              )
              Reaching definitions: r0=r0{250},   r3=r3{251},   r8=r8{243},   r9=r9{231},   r10=r10{252},
                r15=r15{253},   r24=r24{244},   r25=r25{121},   r26=r26{121},   r27=r27{254},   r28=(r28{56} + 8) - 20,
                r29=r29{184},   r30=r30{233},   m[r28{0} - 4]=m[r28{0} - 4]{246},   m[r28{0} - 76]=m[r28{0} - 76]{247},
                tmp1=r24{121} - 0x54524357,   tmpb=tmpb{132},   %flags=LOGICALFLAGS8( tmpb{132} ),
                %ZF=LOGICALFLAGS8( tmpb{132} ),   %CF=LOGICALFLAGS8( tmpb{132} )
              Live variables: eax in proc _start
result:    0 *32* eax := -
dest is not lib
call:  160 CALL proc2(
                *16* ax := param1
                *16* bx := param2
                *u8* dl := param3
                *8* bh := param4
                *32* ebx := param5
              )
              Reaching definitions: r0=r0{250},   r3=r3{251},   r8=r8{243},   r9=r9{231},   r10=r10{252},
                r15=r15{253},   r24=r24{154},   r25=r25{154},   r26=r26{154},   r27=r27{254},   r28=(r28{56} + 8) - 24,
                r29=r29{184},   r30=r30{233},   m[r28{0} - 4]=m[r28{0} - 4]{246},   m[r28{0} - 76]=m[r28{0} - 76]{247},
                tmp1=r24{121} - 0x54524357,   tmpb=tmpb{132},   %flags=LOGICALFLAGS8( tmpb{132} ),
                %ZF=LOGICALFLAGS8( tmpb{132} ),   %CF=LOGICALFLAGS8( tmpb{132} )
              Live variables:  in proc _start
dest is not lib
call:  166 CALL proc3(
                *union* esi := esi
              )
              Reaching definitions: r0=r0{250},   r3=r3{251},   r8=r8{243},   r9=r9{231},   r10=r10{252},
                r15=r15{253},   r24=r24{154},   r25=r25{154},   r26=r26{154},   r27=r27{254},   r28=(r28{56} + 8) - 32,
                r29=r29{184},   r30=r30{233},   m[r28{0} - 4]=m[r28{0} - 4]{246},   m[r28{0} - 76]=m[r28{0} - 76]{247},
                tmp1=r24{121} - 0x54524357,   tmpb=tmpb{132},   %flags=LOGICALFLAGS8( tmpb{132} ),
                %ZF=LOGICALFLAGS8( tmpb{132} ),   %CF=LOGICALFLAGS8( tmpb{132} )
              Live variables:  in proc _start
dest is not lib
call:   19 {*32* r24, *32* r25, *32* r26} := CALL MessageBoxW(
                *HWND* local0 := -1
                *LPCWSTR* local1 := 0
                *LPCWSTR* local2 := 0
                *UINT* local3 := 0
              )
              Reaching definitions: r28=r28{0} - 40,   r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},   m[r28{0} - 12]=0x12e9,
                m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 20]=m[r28{0} - 20]{0},   m[r28{0} - 24]=0,
                m[r28{0} - 28]=0,   m[r28{0} - 32]=0,   m[r28{0} - 36]=-1,   m[r28{0} - 40]=%pc,   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 16, r28{0} - 20 ),   %ZF=(r28{0} - 20) = 0,   %CF=(r28{0} - 4) <u 16
              Live variables:  in proc proc5
dest is not lib
call:   39 {*v* r24, *32* r25, *32* r26} := CALL proc24(
                *32** local5 := a[0x1ea4]
              )
              Reaching definitions: r24=r24{52},   r25=r28{0} - 16,   r26=r28{0} - 16,   r28=r28{0} - 28,
                r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{60},   m[r28{0} - 12]=0x12e9,
                m[r28{0} - 16]=0x1ea4,   m[r28{0} - 20]=r28{0} - 16,   m[r28{0} - 24]=r28{0} - 16,   m[r28{0} - 28]=%pc
                m[r28{0} - 32]=0,   m[r28{0} - 36]=-1,   m[r28{0} - 40]=%pc,   tmp1=m[r28{0} - 8]{60} - 0x4c4b40,
                %flags=SUBFLAGS32( m[r28{0} - 8], 0x4c4b40, m[r28{0} - 8]{60} - 0x4c4b40 ),
                %ZF=(m[r28{0} - 8]{60} - 0x4c4b40) = 0,   %CF=m[r28{0} - 8] <u 0x4c4b40
              Live variables:  in proc proc5
dest is not lib
call:   17 {*32* eax, *32* ecx, *32* edx} := CALL HeapAlloc(
                *HANDLE* local0 := local0
                *DWORD* local1 := 0
                *DWORD* local2 := eax
              )
              Reaching definitions: r24=r24{21},   r28=r28{0} - 16,   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} - 4]=r24{21},   m[r28{0} - 8]=0,   m[r28{0} - 12]=m[r28{0} - 12]{12},   m[r28{0} - 16]=%pc,
                tmp1=tmp1{22},   %flags=%flags{23},   %ZF=%ZF{24},   %CF=%CF{25}
              Live variables: eax,  ecx,  edx in proc proc6
result:    0 *32* eax := -
result:    0 *32* ecx := -
result:    0 *32* edx := -
dest is not lib
call:   11 {*32* eax, *8* r9, *u8** edx} := CALL proc34(
                *v** local0 := 0x405068
                *i64* local1 := 14
                *32* eax := param1
                *u8** edx := param2
              )
              Reaching definitions: r24=r24{0},   r26=r26{0},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=14,   m[r28{0} - 12]=0x405068,   m[r28{0} - 16]=%pc
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:   22 {*32* eax, *8* r9, *u8** edx} := CALL proc34(
                *v** local0 := 0x40509c
                *i64* local1 := 20
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{11},   r24=r24{11},   r26=r26{11},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=20,   m[r28{0} - 12]=0x40509c,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:   33 {*32* eax, *8* r9, *u8** edx} := CALL proc34(
                *v** local0 := 0x4050b4
                *i64* local1 := 20
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{22},   r24=r24{22},   r26=r26{22},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=20,   m[r28{0} - 12]=0x4050b4,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:   44 {*32* eax, *8* r9, *u8** edx} := CALL proc34(
                *v** local0 := 0x4050cc
                *i64* local1 := 18
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{33},   r24=r24{33},   r26=r26{33},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=18,   m[r28{0} - 12]=0x4050cc,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:   55 {*32* eax, *8* r9, *u8** edx} := CALL proc34(
                *v** local0 := 0x4050e0
                *i64* local1 := 18
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{44},   r24=r24{44},   r26=r26{44},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=18,   m[r28{0} - 12]=0x4050e0,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:   66 {*32* eax, *8* r9, *u8** edx} := CALL proc34(
                *v** local0 := 0x4050f4
                *i64* local1 := 14
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{55},   r24=r24{55},   r26=r26{55},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=14,   m[r28{0} - 12]=0x4050f4,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:   77 {*32* eax, *8* r9, *u8** edx} := CALL proc34(
                *v** local0 := 0x405120
                *i64* local1 := 14
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{66},   r24=r24{66},   r26=r26{66},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=14,   m[r28{0} - 12]=0x405120,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:   88 {*32* eax, *8* r9, *u8** edx} := CALL proc34(
                *v** local0 := 0x405130
                *i64* local1 := 13
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{77},   r24=r24{77},   r26=r26{77},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=13,   m[r28{0} - 12]=0x405130,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:   99 {*32* eax, *8* r9, *u8** edx} := CALL proc34(
                *v** local0 := 0x405140
                *i64* local1 := 14
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{88},   r24=r24{88},   r26=r26{88},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=14,   m[r28{0} - 12]=0x405140,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  110 {*32* eax, *8* r9, *u8** edx} := CALL proc34(
                *v** local0 := 0x405150
                *i64* local1 := 12
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{99},   r24=r24{99},   r26=r26{99},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=12,   m[r28{0} - 12]=0x405150,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  121 {*32* eax, *8* r9, *u8** edx} := CALL proc34(
                *v** local0 := 0x405160
                *i64* local1 := 12
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{110},   r24=r24{110},   r26=r26{110},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=12,   m[r28{0} - 12]=0x405160,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  132 {*32* eax, *8* r9, *u8** edx} := CALL proc34(
                *v** local0 := 0x405264
                *i64* local1 := 13
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{121},   r24=r24{121},   r26=r26{121},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=13,   m[r28{0} - 12]=0x405264,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  143 {*32* eax, *8* r9, *u8** edx} := CALL proc34(
                *v** local0 := 0x405274
                *i64* local1 := 16
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{132},   r24=r24{132},   r26=r26{132},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=16,   m[r28{0} - 12]=0x405274,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  154 {*32* eax, *8* r9, *u8** edx} := CALL proc34(
                *v** local0 := 0x4052d0
                *i64* local1 := 23
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{143},   r24=r24{143},   r26=r26{143},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=23,   m[r28{0} - 12]=0x4052d0,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  165 {*32* eax, *8* r9, *u8** edx} := CALL proc34(
                *v** local0 := 0x405288
                *i64* local1 := 13
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{154},   r24=r24{154},   r26=r26{154},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=13,   m[r28{0} - 12]=0x405288,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  176 {*32* eax, *8* r9, *u8** edx} := CALL proc34(
                *v** local0 := 0x405298
                *i64* local1 := 14
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{165},   r24=r24{165},   r26=r26{165},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=14,   m[r28{0} - 12]=0x405298,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  187 {*32* eax, *8* r9, *u8** edx} := CALL proc34(
                *v** local0 := 0x4052a8
                *i64* local1 := 11
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{176},   r24=r24{176},   r26=r26{176},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=11,   m[r28{0} - 12]=0x4052a8,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  198 {*32* eax, *8* r9, *u8** edx} := CALL proc34(
                *v** local0 := 0x4052e8
                *i64* local1 := 45
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{187},   r24=r24{187},   r26=r26{187},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=45,   m[r28{0} - 12]=0x4052e8,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  209 {*32* eax, *8* r9, *u8** edx} := CALL proc34(
                *v** local0 := 0x405318
                *i64* local1 := 53
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{198},   r24=r24{198},   r26=r26{198},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=53,   m[r28{0} - 12]=0x405318,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  220 {*32* eax, *8* r9, *u8** edx} := CALL proc34(
                *v** local0 := 0x405364
                *i64* local1 := 10
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{209},   r24=r24{209},   r26=r26{209},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=10,   m[r28{0} - 12]=0x405364,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  231 {*32* eax, *8* r9, *u8** edx} := CALL proc34(
                *v** local0 := 0x405370
                *i64* local1 := 9
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{220},   r24=r24{220},   r26=r26{220},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=9,   m[r28{0} - 12]=0x405370,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  242 {*32* eax, *8* r9, *u8** edx} := CALL proc34(
                *v** local0 := 0x40539c
                *i64* local1 := 11
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{231},   r24=r24{231},   r26=r26{231},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=11,   m[r28{0} - 12]=0x40539c,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  253 {*32* eax, *8* r9, *u8** edx} := CALL proc34(
                *v** local0 := 0x4053a8
                *i64* local1 := 9
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{242},   r24=r24{242},   r26=r26{242},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=9,   m[r28{0} - 12]=0x4053a8,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  264 {*32* eax, *8* r9, *u8** edx} := CALL proc34(
                *v** local0 := 0x4053b4
                *i64* local1 := 18
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{253},   r24=r24{253},   r26=r26{253},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=18,   m[r28{0} - 12]=0x4053b4,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  275 {*32* eax, *8* r9, *u8** edx} := CALL proc34(
                *v** local0 := 0x405104
                *i64* local1 := 25
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{264},   r24=r24{264},   r26=r26{264},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=25,   m[r28{0} - 12]=0x405104,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  286 {*32* eax, *8* r9, *u8** edx} := CALL proc34(
                *v** local0 := 0x405200
                *i64* local1 := 13
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{275},   r24=r24{275},   r26=r26{275},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=13,   m[r28{0} - 12]=0x405200,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  297 {*32* eax, *8* r9, *u8** edx} := CALL proc34(
                *v** local0 := 0x405210
                *i64* local1 := 16
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{286},   r24=r24{286},   r26=r26{286},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=16,   m[r28{0} - 12]=0x405210,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  308 {*32* eax, *8* r9, *u8** edx} := CALL proc34(
                *v** local0 := 0x405224
                *i64* local1 := 16
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{297},   r24=r24{297},   r26=r26{297},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=16,   m[r28{0} - 12]=0x405224,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  319 {*32* eax, *8* r9, *u8** edx} := CALL proc34(
                *v** local0 := 0x405238
                *i64* local1 := 19
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{308},   r24=r24{308},   r26=r26{308},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=19,   m[r28{0} - 12]=0x405238,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  330 {*32* eax, *8* r9, *u8** edx} := CALL proc34(
                *v** local0 := 0x40503c
                *i64* local1 := 12
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{319},   r24=r24{319},   r26=r26{319},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=12,   m[r28{0} - 12]=0x40503c,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  341 {*32* eax, *8* r9, *u8** edx} := CALL proc34(
                *v** local0 := 0x40504c
                *i64* local1 := 12
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{330},   r24=r24{330},   r26=r26{330},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=12,   m[r28{0} - 12]=0x40504c,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  352 {*32* eax, *8* r9, *u8** edx} := CALL proc34(
                *v** local0 := 0x405030
                *i64* local1 := 9
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{341},   r24=r24{341},   r26=r26{341},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=9,   m[r28{0} - 12]=0x405030,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  363 {*32* eax, *8* r9, *u8** edx} := CALL proc34(
                *v** local0 := 0x40505c
                *i64* local1 := 11
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{352},   r24=r24{352},   r26=r26{352},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=11,   m[r28{0} - 12]=0x40505c,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  374 {*32* eax, *8* r9, *u8** edx} := CALL proc34(
                *v** local0 := 0x40524c
                *i64* local1 := 10
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{363},   r24=r24{363},   r26=r26{363},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=10,   m[r28{0} - 12]=0x40524c,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  385 {*32* eax, *8* r9, *u8** edx} := CALL proc34(
                *v** local0 := 0x4053c8
                *i64* local1 := 16
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{374},   r24=r24{374},   r26=r26{374},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=16,   m[r28{0} - 12]=0x4053c8,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  396 {*32* eax, *8* r9, *u8** edx} := CALL proc34(
                *v** local0 := 0x4052c4
                *i64* local1 := 11
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{385},   r24=r24{385},   r26=r26{385},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=11,   m[r28{0} - 12]=0x4052c4,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  407 {*32* eax, *8* r9, *u8** edx} := CALL proc34(
                *v** local0 := 0x405390
                *i64* local1 := 8
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{396},   r24=r24{396},   r26=r26{396},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=8,   m[r28{0} - 12]=0x405390,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  418 {*32* eax, *8* r9, *u8** edx} := CALL proc34(
                *v** local0 := 0x405258
                *i64* local1 := 11
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{407},   r24=r24{407},   r26=r26{407},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=11,   m[r28{0} - 12]=0x405258,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  429 {*32* eax, *8* r9, *u8** edx} := CALL proc34(
                *v** local0 := 0x4052b4
                *i64* local1 := 13
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{418},   r24=r24{418},   r26=r26{418},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=13,   m[r28{0} - 12]=0x4052b4,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  440 {*32* eax, *8* r9, *u8** edx} := CALL proc34(
                *v** local0 := 0x405350
                *i64* local1 := 3
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{429},   r24=r24{429},   r26=r26{429},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=3,   m[r28{0} - 12]=0x405350,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  451 {*32* eax, *8* r9, *u8** edx} := CALL proc34(
                *v** local0 := 0x405354
                *i64* local1 := 3
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{440},   r24=r24{440},   r26=r26{440},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=3,   m[r28{0} - 12]=0x405354,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  462 {*32* eax, *8* r9, *u8** edx} := CALL proc34(
                *v** local0 := 0x405358
                *i64* local1 := 3
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{451},   r24=r24{451},   r26=r26{451},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=3,   m[r28{0} - 12]=0x405358,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  473 {*32* eax, *8* r9, *u8** edx} := CALL proc34(
                *v** local0 := 0x40535c
                *i64* local1 := 2
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{462},   r24=r24{462},   r26=r26{462},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=2,   m[r28{0} - 12]=0x40535c,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  484 {*32* eax, *8* r9, *u8** edx} := CALL proc34(
                *v** local0 := 0x405360
                *i64* local1 := 2
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{473},   r24=r24{473},   r26=r26{473},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=2,   m[r28{0} - 12]=0x405360,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  495 {*32* eax, *8* r9, *u8** edx} := CALL proc34(
                *v** local0 := 0x405384
                *i64* local1 := 3
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{484},   r24=r24{484},   r26=r26{484},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=3,   m[r28{0} - 12]=0x405384,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  506 {*32* eax, *8* r9, *u8** edx} := CALL proc34(
                *v** local0 := 0x40537c
                *i64* local1 := 7
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{495},   r24=r24{495},   r26=r26{495},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=7,   m[r28{0} - 12]=0x40537c,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  517 {*32* eax, *8* r9, *u8** edx} := CALL proc34(
                *v** local0 := 0x405388
                *i64* local1 := 4
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{506},   r24=r24{506},   r26=r26{506},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=4,   m[r28{0} - 12]=0x405388,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  528 {*32* eax, *8* r9, *u8** edx} := CALL proc34(
                *v** local0 := 0x4053dc
                *i64* local1 := 57
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{517},   r24=r24{517},   r26=r26{517},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=57,   m[r28{0} - 12]=0x4053dc,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  539 {*32* eax, *8* r9, *u8** edx} := CALL proc34(
                *v** local0 := 0x405418
                *i64* local1 := 9
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{528},   r24=r24{528},   r26=r26{528},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=9,   m[r28{0} - 12]=0x405418,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  550 {*32* eax, *8* r9, *u8** edx} := CALL proc34(
                *v** local0 := 0x4051c0
                *i64* local1 := 11
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{539},   r24=r24{539},   r26=r26{539},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=11,   m[r28{0} - 12]=0x4051c0,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  561 {*32* eax, *8* r9, *u8** edx} := CALL proc34(
                *v** local0 := 0x4051cc
                *i64* local1 := 11
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{550},   r24=r24{550},   r26=r26{550},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=11,   m[r28{0} - 12]=0x4051cc,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  572 {*32* eax, *8* r9, *u8** edx} := CALL proc34(
                *v** local0 := 0x4051d8
                *i64* local1 := 11
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{561},   r24=r24{561},   r26=r26{561},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=11,   m[r28{0} - 12]=0x4051d8,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  583 {*32* eax, *8* r9, *u8** edx} := CALL proc34(
                *v** local0 := 0x4051e4
                *i64* local1 := 13
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{572},   r24=r24{572},   r26=r26{572},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=13,   m[r28{0} - 12]=0x4051e4,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  594 {*32* eax, *8* r9, *u8** edx} := CALL proc34(
                *v** local0 := 0x4051f4
                *i64* local1 := 11
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{583},   r24=r24{583},   r26=r26{583},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=11,   m[r28{0} - 12]=0x4051f4,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  605 {*32* eax, *8* r9, *u8** edx} := CALL proc34(
                *v** local0 := 0x405170
                *i64* local1 := 64
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{594},   r24=r24{594},   r26=r26{594},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=64,   m[r28{0} - 12]=0x405170,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  616 {*32* eax, *8* r9, *u8** edx} := CALL proc34(
                *v** local0 := 0x4051b4
                *i64* local1 := 8
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{605},   r24=r24{605},   r26=r26{605},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=8,   m[r28{0} - 12]=0x4051b4,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  627 {*32* eax, *8* r9, *u8** edx} := CALL proc34(
                *v** local0 := 0x405424
                *i64* local1 := 24
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{616},   r24=r24{616},   r26=r26{616},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=24,   m[r28{0} - 12]=0x405424,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  638 {*32* eax, *8* r9, *u8** edx} := CALL proc34(
                *v** local0 := 0x405440
                *i64* local1 := 20
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{627},   r24=r24{627},   r26=r26{627},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=20,   m[r28{0} - 12]=0x405440,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  649 {*32* eax, *8* r9, *u8** edx} := CALL proc34(
                *v** local0 := 0x405458
                *i64* local1 := 7
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{638},   r24=r24{638},   r26=r26{638},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=7,   m[r28{0} - 12]=0x405458,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  660 {*32* eax, *8* r9, *u8** edx} := CALL proc34(
                *v** local0 := 0x405084
                *i64* local1 := 11
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{649},   r24=r24{649},   r26=r26{649},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=11,   m[r28{0} - 12]=0x405084,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  671 {*32* eax, *8* r9, *u8** edx} := CALL proc34(
                *v** local0 := 0x405090
                *i64* local1 := 9
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{660},   r24=r24{660},   r26=r26{660},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=9,   m[r28{0} - 12]=0x405090,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  682 {*32* eax, *8* r9, *u8** edx} := CALL proc34(
                *v** local0 := 0x405078
                *i64* local1 := 11
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{671},   r24=r24{671},   r26=r26{671},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=11,   m[r28{0} - 12]=0x405078,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables: eax,  edx in proc proc7
result:    0 *32* eax := -
result:    0 *u8** edx := -
dest is not lib
call:  693 {*32* eax, *8* r9, *32* edx} := CALL proc34(
                *v** local0 := 0x405460
                *i64* local1 := 16
                *32* eax := eax
                *u8** edx := edx
              )
              Reaching definitions: r9=r9{682},   r24=r24{682},   r26=r26{682},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=16,   m[r28{0} - 12]=0x405460,   m[r28{0} - 16]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),
                %ZF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 ),   %CF=ADDFLAGS32( r28{0} - 12, 8, r28{0} - 4 )
              Live variables:  in proc proc7
dest is not lib
call:   17 {*u32* eax_2, *32* ecx, *32* edx, *v** esp} := CALL GetProcAddress(
                *HANDLE* local0 := eax
                *c** local1 := ">:"
              )
              Reaching definitions: r24=r24{11},   r28=r28{0} - 48,   r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=m[r28{0} - 12]{0},   m[r28{0} - 15]=m[r28{0} - 15]{0},
                m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 17]=m[r28{0} - 17]{0},
                m[r28{0} - 18]=m[r28{0} - 18]{0},   m[r28{0} - 19]=m[r28{0} - 19]{0},
                m[r28{0} - 20]=m[r28{0} - 20]{0},   m[r28{0} - 24]=0xcd6,   m[r28{0} - 32]=0,
                m[r28{0} - 36]=m[r28{0} - 36]{0},   m[r28{0} - 40]=0x405424,   m[r28{0} - 44]=r24{11},
                m[r28{0} - 48]=%pc,   m[r28{0} - 52]=m[r28{0} - 52]{0},   m[r28{0} - 56]=m[r28{0} - 56]{0},
                m[r28{0} - 60]=m[r28{0} - 60]{0},   m[r28{0} - 64]=m[r28{0} - 64]{0},
                m[r28{0} - 68]=m[r28{0} - 68]{0},   m[r28{0} - 72]=m[r28{0} - 72]{0},
                m[r28{0} - 76]=m[r28{0} - 76]{0},   m[r28{0} - 80]=m[r28{0} - 80]{0},
                m[r28{0} - 84]=m[r28{0} - 84]{0},   tmp1=r28{0} - 4,   %flags=SUBFLAGS32( r28{0} - 4, 32, r28{0} - 36 )
                %ZF=(r28{0} - 36) = 0,   %CF=(r28{0} - 4) <u 32
              Live variables: eax_2 in proc proc8
result:    0 *u32* eax_2 := -
dest is not lib
call:   33 {*u32* eax_1, *32* ecx, *32* edx, *v** esp} := CALL GetProcAddress(
                *HANDLE* local0 := ecx
                *c** local1 := "76'7)10=0';%c"
              )
              Reaching definitions: r24=r24{17},   r25=r25{27},   r26=r26{17},   r28=r28{0} - 48,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 12]=0,   m[r28{0} - 15]=m[r28{0} - 15]{0},
                m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 17]=m[r28{0} - 17]{0},
                m[r28{0} - 18]=m[r28{0} - 18]{0},   m[r28{0} - 19]=m[r28{0} - 19]{0},
                m[r28{0} - 20]=m[r28{0} - 20]{0},   m[r28{0} - 24]=0xcd6,   m[r28{0} - 32]=r24{17},
                m[r28{0} - 36]=m[r28{0} - 36]{0},   m[r28{0} - 40]=0x405440,   m[r28{0} - 44]=r25{27},
                m[r28{0} - 48]=%pc,   m[r28{0} - 52]=m[r28{0} - 52]{0},   m[r28{0} - 56]=m[r28{0} - 56]{0},
                m[r28{0} - 60]=m[r28{0} - 60]{0},   m[r28{0} - 64]=m[r28{0} - 64]{0},
                m[r28{0} - 68]=m[r28{0} - 68]{0},   m[r28{0} - 72]=m[r28{0} - 72]{0},
                m[r28{0} - 76]=m[r28{0} - 76]{0},   m[r28{0} - 80]=m[r28{0} - 80]{0},
                m[r28{0} - 84]=m[r28{0} - 84]{0},   tmp1=r24{17},   %flags=SUBFLAGS32( m[r28{0} - 32], 0, r24{17} ),
                %ZF=r24{17} = 0,   %CF=m[r28{0} - 32] <u 0
              Live variables: eax_1 in proc proc8
result:    0 *u32* eax_1 := -
dest is not lib
call:   49 {*u32* eax_1, *32* ecx, *32* edx, *v** esp} := CALL GetProcAddress(
                *HANDLE* local0 := edx
                *c** local1 := "700<BdK`fWFnulC37"
              )
              Reaching definitions: r24=r24{33},   r25=r25{33},   r26=r26{43},   r28=r28{0} - 48,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 12]=r24{33},   m[r28{0} - 15]=m[r28{0} - 15]{0},
                m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 17]=m[r28{0} - 17]{0},
                m[r28{0} - 18]=m[r28{0} - 18]{0},   m[r28{0} - 19]=m[r28{0} - 19]{0},
                m[r28{0} - 20]=m[r28{0} - 20]{0},   m[r28{0} - 24]=0xcd6,   m[r28{0} - 32]=r24{17},   m[r28{0} - 36]=0,
                m[r28{0} - 40]=0x405458,   m[r28{0} - 44]=r26{43},   m[r28{0} - 48]=%pc,
                m[r28{0} - 52]=m[r28{0} - 52]{0},   m[r28{0} - 56]=m[r28{0} - 56]{0},
                m[r28{0} - 60]=m[r28{0} - 60]{0},   m[r28{0} - 64]=m[r28{0} - 64]{0},
                m[r28{0} - 68]=m[r28{0} - 68]{0},   m[r28{0} - 72]=m[r28{0} - 72]{0},
                m[r28{0} - 76]=m[r28{0} - 76]{0},   m[r28{0} - 80]=m[r28{0} - 80]{0},
                m[r28{0} - 84]=m[r28{0} - 84]{0},   tmp1=r24{33},   %flags=SUBFLAGS32( m[r28{0} - 12], 0, r24{33} ),
                %ZF=r24{33} = 0,   %CF=m[r28{0} - 12] <u 0
              Live variables: eax_1,  edx in proc proc8
result:    0 *u32* eax_1 := -
result:    0 *32* edx := -
dest is not lib
call:   10 {*32* eax_1, *32* ecx, *32* edx, *32* esp} := CALL IsDebuggerPresent(
              )
              Reaching definitions: r28=r28{0} - 40,   r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 12]=m[r28{0} - 12]{0},   m[r28{0} - 16]=m[r28{0} - 16]{0},
                m[r28{0} - 20]=m[r28{0} - 20]{0},   m[r28{0} - 24]=m[r28{0} - 24]{0},
                m[r28{0} - 28]=m[r28{0} - 28]{0},   m[r28{0} - 32]=m[r28{0} - 32]{0},
                m[r28{0} - 36]=m[r28{0} - 36]{0},   m[r28{0} - 40]=%pc,   m[r28{0} - 44]=m[r28{0} - 44]{0},
                m[r28{0} - 48]=m[r28{0} - 48]{0},   m[r28{0} - 52]=m[r28{0} - 52]{0},
                m[r28{0} - 56]=m[r28{0} - 56]{0},   m[r28{0} - 60]=m[r28{0} - 60]{0},   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 32, r28{0} - 36 ),   %ZF=(r28{0} - 36) = 0,   %CF=(r28{0} - 4) <u 32
              Live variables: eax_1 in proc proc10
result:    0 *32* eax_1 := -
dest is not lib
call:   37 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetCurrentProcess(
              )
              Reaching definitions: r24=r28{0} - 16,   r25=7,   r26=r26{10},   r28=r28{0} - 56,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=7,   m[r28{0} - 12]=0x10e7,   m[r28{0} - 16]=0,
                m[r28{0} - 20]=0xb17,   m[r28{0} - 24]=0x901,   m[r28{0} - 28]=0x82b,   m[r28{0} - 32]=0x78d,
                m[r28{0} - 36]=0x7bd,   m[r28{0} - 40]=0,   m[r28{0} - 44]=4,   m[r28{0} - 48]=r28{0} - 16,
                m[r28{0} - 52]=7,   m[r28{0} - 56]=%pc,   m[r28{0} - 60]=m[r28{0} - 60]{0},   tmp1=r24{10},
                %flags=LOGICALFLAGS32( r24{10} ),   %ZF=LOGICALFLAGS32( r24{10} ),   %CF=LOGICALFLAGS32( r24{10} )
              Live variables: eax,  ecx,  edx in proc proc10
result:    0 *32* eax := -
result:    0 *v* ecx := -
result:    0 *v* edx := -
dest is not lib
call:   13 {*32* eax, *32* ecx, *32* edx, *v* esp} := CALL proc6(
                *DWORD* local0 := 0x438
              )
              Reaching definitions: r27=r27{0},   r28=r28{0} - 36,   r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 24]=0,   m[r28{0} - 32]=0x438,   m[r28{0} - 36]=%pc,
                tmp1=r28{0} - 4,   %flags=SUBFLAGS32( r28{0} - 4, 24, r28{0} - 28 ),   %ZF=(r28{0} - 28) = 0,
                %CF=(r28{0} - 4) <u 24
              Live variables: eax,  ecx,  edx in proc proc11
result:    0 *32* eax := -
result:    0 *32* ecx := -
result:    0 *32* edx := -
dest is not lib
call:  151 {*32* eax, *8* al, *8* cl, *8* bl, *32* ecx, *32* edx, *v* esp} := CALL proc15(
                *8** local11 := m[esp - 8]
                *u32** local12 := m[esp - 4]
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param2
              )
              Reaching definitions: r8=r8{142},   r9=r9{142},   r11=r11{142},   r24=r24{142},   r25=r25{145},
                r26=r26{142},   r27=r27{142},   r28=r28{142} - 12,   r29=r29{142},   m[r28{0} + 4]=m[r28{0} + 4]{142},
                m[r28{0} - 4]=m[r28{0} - 4]{142},   m[r28{0} - 8]=m[r28{0} - 8]{142},
                m[r28{0} - 12]=m[r28{0} - 12]{142},   m[r28{0} - 16]=m[r28{0} - 16]{142},
                m[r28{0} - 20]=m[r28{0} - 20]{142},   m[r28{0} - 24]=m[r28{0} - 24]{142},
                m[r28{0} - 28]=m[r28{0} - 28]{142},   m[r28{0} - 32]=m[r28{0} - 32]{142},
                m[r28{0} - 36]=m[r28{0} - 36]{142},   m[r28{0} - 40]=m[r28{0} - 40]{142},
                m[r28{0} - 44]=m[r28{0} - 44]{142},   m[r28{0} - 48]=m[r28{0} - 48]{142},
                m[r28{0} - 52]=m[r28{0} - 52]{142},   m[r28{0} - 4]=m[r28{0} - 4]{142},
                m[r28{0} - 8]=m[r28{0} - 8]{142},   m[r28{0} - 12]=m[r28{0} - 12]{142},
                m[r28{0} - 16]=m[r28{0} - 16]{142},   m[r28{0} - 20]=m[r28{0} - 20]{142},
                m[r28{0} - 24]=m[r28{0} - 24]{142},   m[r28{0} - 28]=m[r28{0} - 28]{142},
                m[r28{0} - 32]=m[r28{0} - 32]{142},   m[r28{0} - 36]=m[r28{0} - 36]{142},
                m[r28{0} - 40]=m[r28{0} - 40]{142},   m[r28{0} - 44]=m[r28{0} - 44]{142},
                m[r28{0} - 48]=m[r28{0} - 48]{142},   m[r28{0} - 52]=m[r28{0} - 52]{142},   <all>=<all>{142},
                tmp1=tmp1{142},   %flags=%flags{142},   %ZF=%ZF{142},   %CF=%CF{142}
              Live variables: bl,  cl,  eax in proc proc11
result:    0 *32* eax := -
result:    0 *8* cl := -
result:    0 *8* bl := -
dest is not lib
call:   81 {*32* eax, *8* al, *8* cl, *8* bl, *32* ecx, *32* edx, *v* esp} := CALL proc15(
                *8** local11 := m[esp - 8]
                *u32** local12 := m[esp - 4]
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param2
              )
              Reaching definitions: r8=r8{72},   r9=r9{72},   r11=r11{72},   r24=r24{75},   r25=r25{72},   r26=r26{72},
                r27=r27{72},   r28=r28{72} - 12,   r29=r29{72},   m[r28{0} + 4]=m[r28{0} + 4]{72},
                m[r28{0} - 4]=m[r28{0} - 4]{72},   m[r28{0} - 8]=m[r28{0} - 8]{72},   m[r28{0} - 12]=m[r28{0} - 12]{72}
                m[r28{0} - 16]=m[r28{0} - 16]{72},   m[r28{0} - 20]=m[r28{0} - 20]{72},
                m[r28{0} - 24]=m[r28{0} - 24]{72},   m[r28{0} - 28]=m[r28{0} - 28]{72},
                m[r28{0} - 32]=m[r28{0} - 32]{72},   m[r28{0} - 36]=m[r28{0} - 36]{72},
                m[r28{0} - 40]=m[r28{0} - 40]{72},   m[r28{0} - 44]=m[r28{0} - 44]{72},
                m[r28{0} - 48]=m[r28{0} - 48]{72},   m[r28{0} - 52]=m[r28{0} - 52]{72},
                m[r28{0} - 4]=m[r28{0} - 4]{72},   m[r28{0} - 8]=m[r28{0} - 8]{72},   m[r28{0} - 12]=m[r28{0} - 12]{72}
                m[r28{0} - 16]=m[r28{0} - 16]{72},   m[r28{0} - 20]=m[r28{0} - 20]{72},
                m[r28{0} - 24]=m[r28{0} - 24]{72},   m[r28{0} - 28]=m[r28{0} - 28]{72},
                m[r28{0} - 32]=m[r28{0} - 32]{72},   m[r28{0} - 36]=m[r28{0} - 36]{72},
                m[r28{0} - 40]=m[r28{0} - 40]{72},   m[r28{0} - 44]=m[r28{0} - 44]{72},
                m[r28{0} - 48]=m[r28{0} - 48]{72},   m[r28{0} - 52]=m[r28{0} - 52]{72},   <all>=<all>{72},
                tmp1=tmp1{72},   %flags=%flags{72},   %ZF=%ZF{72},   %CF=%CF{72}
              Live variables: bl,  cl,  eax in proc proc11
result:    0 *32* eax := -
result:    0 *8* cl := -
result:    0 *8* bl := -
dest is not lib
call:   15 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local0 := eax
                *c** local1 := "<11+-!10"s"
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{0},   r10=r10{0},   r11=r11{0},   r15=r15{0},
                r24=r24{9},   r27=r27{0},   r28=r28{0} - 92,   r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},
                m[r28{0} - 84]=0x405130,   m[r28{0} - 88]=r24{9},   m[r28{0} - 92]=%pc,   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 76, r28{0} - 80 ),   %ZF=(r28{0} - 80) = 0,   %CF=(r28{0} - 4) <u 76
              Live variables:  in proc proc13
dest is not lib
call:   25 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local0 := ecx
                *c** local1 := "(0
''''"
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{0},   r10=r10{0},   r11=r11{0},   r15=r15{0},
                r24=r24{15},   r25=r25{19},   r26=r26{15},   r27=r27{0},   r28=r28{0} - 92,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 40]=r24{15},   m[r28{0} - 84]=0x405140,   m[r28{0} - 88]=r25{19},
                m[r28{0} - 92]=%pc,   tmp1=r28{0} - 4,   %flags=SUBFLAGS32( r28{0} - 4, 76, r28{0} - 80 ),
                %ZF=(r28{0} - 80) = 0,   %CF=(r28{0} - 4) <u 76
              Live variables:  in proc proc13
dest is not lib
call:   35 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local0 := edx
                *c** local1 := "311+-!10c"
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{0},   r10=r10{0},   r11=r11{0},   r15=r15{0},
                r24=r24{25},   r25=r25{25},   r26=r26{29},   r27=r27{0},   r28=r28{0} - 92,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 36]=r24{25},   m[r28{0} - 40]=r24{15},   m[r28{0} - 84]=0x405150,
                m[r28{0} - 88]=r26{29},   m[r28{0} - 92]=%pc,   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 76, r28{0} - 80 ),   %ZF=(r28{0} - 80) = 0,   %CF=(r28{0} - 4) <u 76
              Live variables:  in proc proc13
dest is not lib
call:   45 {*32* eax, *32* ecx, *v* edx, *v** esp_1} := CALL GetProcAddress(
                *HANDLE* local0 := eax
                *c** local1 := "1>1+-!10c"
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r8=r8{0},   r10=r10{0},   r11=r11{0},   r15=r15{0},
                r24=r24{39},   r25=r25{35},   r26=r26{35},   r27=r27{0},   r28=r28{0} - 92,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 32]=r24{35},   m[r28{0} - 36]=r24{25},   m[r28{0} - 40]=r24{15},
                m[r28{0} - 84]=0x405160,   m[r28{0} - 88]=r24{39},   m[r28{0} - 92]=%pc,   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 76, r28{0} - 80 ),   %ZF=(r28{0} - 80) = 0,   %CF=(r28{0} - 4) <u 76
              Live variables: esp_1 in proc proc13
result:    0 *v** esp_1 := -
dest is not lib
call:   62 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL proc6(
                *DWORD* m[esp_11 - 4] := m[esp_11 - 4]
              )
              Reaching definitions: r0=r0{305},   r3=r3{306},   r8=r8{307},   r10=r10{308},   r11=r11{309},
                r15=r15{310},   r24=r24{311},   r25=r25{312},   r26=r26{313},   r27=r27{409},   r28=r28{314} - 8,
                r29=r29{315},   m[r28{0} - 4]=m[r28{0} - 4]{365},   m[r28{0} - 12]=m[r28{0} - 12]{366},
                m[r28{0} - 20]=m[r28{0} - 20]{367},   m[r28{0} - 24]=m[r28{0} - 24]{368},
                m[r28{0} - 28]=m[r28{0} - 28]{369},   m[r28{0} - 32]=m[r28{0} - 32]{370},
                m[r28{0} - 36]=m[r28{0} - 36]{371},   m[r28{0} - 40]=m[r28{0} - 40]{372},
                m[r28{0} - 84]=m[r28{0} - 84]{373},   m[r28{0} - 88]=m[r28{0} - 88]{374},
                m[r28{0} - 92]=m[r28{0} - 92]{375},   tmp1=tmp1{316},   %flags=%flags{317},   %ZF=%ZF{318},
                %CF=%CF{319}
              Live variables: eax in proc proc13
result:    0 *32* eax := -
dest is not lib
call:   80 {*32* eax, *8* al, *8* dl, *32* ecx, *32* edx, *v* esp} := CALL proc21(
                *i64* m[esp_11 - 12] := m[esp_11 - 12]
                *8** m[esp_11 - 8] := m[esp_11 - 8]
                *i64* m[esp_11 - 4] := m[esp_11 - 4]
                *u8* dl := param3
                *8** ecx := ecx
              )
              Reaching definitions: r0=r0{305},   r3=r3{306},   r8=r8{307},   r10=r10{308},   r11=r11{309},
                r15=r15{310},   r24=r24{71},   r25=r25{74},   r26=r26{67},   r27=r27{409},   r28=r28{314} - 16,
                r29=r29{315},   m[r28{0} - 4]=m[r28{0} - 4]{365},   m[r28{0} - 12]=m[r28{0} - 12]{366},
                m[r28{0} - 20]=m[r28{0} - 20]{367},   m[r28{0} - 24]=m[r28{0} - 24]{368},
                m[r28{0} - 28]=m[r28{0} - 28]{369},   m[r28{0} - 32]=m[r28{0} - 32]{370},
                m[r28{0} - 36]=m[r28{0} - 36]{371},   m[r28{0} - 40]=m[r28{0} - 40]{372},
                m[r28{0} - 84]=m[r28{0} - 84]{373},   m[r28{0} - 88]=m[r28{0} - 88]{374},
                m[r28{0} - 92]=m[r28{0} - 92]{375},   tmp1=(r28{314} - 8) + 4,
                %flags=ADDFLAGS32( r28{314} - 4, 4, r28{314} ),   %ZF=ADDFLAGS32( r28{314} - 4, 4, r28{314} ),
                %CF=ADDFLAGS32( r28{314} - 4, 4, r28{314} )
              Live variables: al,  dl,  ecx in proc proc13
result:    0 *8* al := -
result:    0 *8* dl := -
result:    0 *32* ecx := -
dest is not lib
call:  125 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL proc24(
                *LPVOID* m[esp_3 - 4] := m[esp_3 - 4]
              )
              Reaching definitions: r0=r0{109},   r3=r3{109},   r8=r8{109},   r10=r10{109},   r11=r11{109},
                r15=r15{109},   r24=r24{117},   r25=r25{119},   r26=r26{115},   r27=r27{109},   r28=r28{109} - 8,
                r29=r29{109},   m[r28{0} - 4]=m[r28{0} - 4]{109},   m[r28{0} - 12]=m[r28{0} - 12]{109},
                m[r28{0} - 20]=m[r28{0} - 20]{109},   m[r28{0} - 24]=m[r28{0} - 24]{109},
                m[r28{0} - 28]=m[r28{0} - 28]{109},   m[r28{0} - 32]=m[r28{0} - 32]{109},
                m[r28{0} - 36]=m[r28{0} - 36]{109},   m[r28{0} - 40]=m[r28{0} - 40]{109},
                m[r28{0} - 84]=m[r28{0} - 84]{109},   m[r28{0} - 88]=m[r28{0} - 88]{109},
                m[r28{0} - 92]=m[r28{0} - 92]{109},   m[r28{0} - 4]=m[r28{0} - 4]{109},
                m[r28{0} - 12]=m[r28{0} - 12]{109},   m[r28{0} - 20]=m[r28{0} - 20]{109},
                m[r28{0} - 24]=m[r28{0} - 24]{109},   m[r28{0} - 28]=m[r28{0} - 28]{109},
                m[r28{0} - 32]=m[r28{0} - 32]{109},   m[r28{0} - 36]=m[r28{0} - 36]{109},
                m[r28{0} - 40]=m[r28{0} - 40]{109},   m[r28{0} - 84]=m[r28{0} - 84]{109},
                m[r28{0} - 88]=m[r28{0} - 88]{109},   m[r28{0} - 92]=m[r28{0} - 92]{109},   <all>=<all>{109},
                tmp1=r25{111},   %flags=ADDFLAGS32( r25{111}, r24{109}, r25{111} + r24{109} ),
                %ZF=ADDFLAGS32( r25{111}, r24{109}, r25{111} + r24{109} ),
                %CF=ADDFLAGS32( r25{111}, r24{109}, r25{111} + r24{109} )
              Live variables:  in proc proc13
dest is not lib
call:  147 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL proc6(
                *DWORD* m[esp_2 - 4] := m[esp_2 - 4]
              )
              Reaching definitions: r0=r0{95},   r3=r3{95},   r8=r8{95},   r10=r10{95},   r11=r11{95},   r15=r15{95},
                r24=r24{137},   r25=r25{138} + 1,   r26=r26{130},   r27=r27{95},   r28=r28{95} - 8,   r29=r29{95},
                m[r28{0} - 4]=m[r28{0} - 4]{95},   m[r28{0} - 12]=m[r28{0} - 12]{95},
                m[r28{0} - 20]=m[r28{0} - 20]{95},   m[r28{0} - 24]=m[r28{0} - 24]{95},
                m[r28{0} - 28]=m[r28{0} - 28]{95},   m[r28{0} - 32]=m[r28{0} - 32]{95},
                m[r28{0} - 36]=m[r28{0} - 36]{95},   m[r28{0} - 40]=m[r28{0} - 40]{95},
                m[r28{0} - 84]=m[r28{0} - 84]{95},   m[r28{0} - 88]=m[r28{0} - 88]{95},
                m[r28{0} - 92]=m[r28{0} - 92]{95},   m[r28{0} - 4]=m[r28{0} - 4]{95},
                m[r28{0} - 12]=m[r28{0} - 12]{95},   m[r28{0} - 20]=m[r28{0} - 20]{95},
                m[r28{0} - 24]=m[r28{0} - 24]{95},   m[r28{0} - 28]=m[r28{0} - 28]{95},
                m[r28{0} - 32]=m[r28{0} - 32]{95},   m[r28{0} - 36]=m[r28{0} - 36]{95},
                m[r28{0} - 40]=m[r28{0} - 40]{95},   m[r28{0} - 84]=m[r28{0} - 84]{95},
                m[r28{0} - 88]=m[r28{0} - 88]{95},   m[r28{0} - 92]=m[r28{0} - 92]{95},   <all>=<all>{95},
                tmp1=r25{138},   %flags=ADDFLAGS32( r25{138}, 1, r25{138} + 1 ),
                %ZF=ADDFLAGS32( r25{138}, 1, r25{138} + 1 ),   %CF=ADDFLAGS32( r25{138}, 1, r25{138} + 1 )
              Live variables: eax in proc proc13
result:    0 *32* eax := -
dest is not lib
call:  169 {*32* eax, *u16* ax, *j16* bx, *8* al, *j8* bl, *u32* bh, *32* ecx, *32* edx, *v* esp} := CALL proc26(
                *j32** m[esp_2 - 12] := m[esp_2 - 12]
                *u32* m[esp_2 - 8] := m[esp_2 - 8]
                *u32* m[esp_2 - 4] := m[esp_2 - 4]
                *u16* ax := ax
                *j16* bx := bx
                *j8* bl := bl
                *u32* bh := bh
                *32* ebx := param6
              )
              Reaching definitions: r0=r0{95},   r3=r3{95},   r8=r8{95},   r10=r10{95},   r11=r11{95},   r15=r15{95},
                r24=r24{154},   r25=r25{155} + 1,   r26=r26{163},   r27=r27{95},   r28=r28{95} - 16,   r29=r29{95},
                m[r28{0} - 4]=m[r28{0} - 4]{95},   m[r28{0} - 12]=m[r28{0} - 12]{95},
                m[r28{0} - 20]=m[r28{0} - 20]{95},   m[r28{0} - 24]=m[r28{0} - 24]{95},
                m[r28{0} - 28]=m[r28{0} - 28]{95},   m[r28{0} - 32]=m[r28{0} - 32]{95},
                m[r28{0} - 36]=m[r28{0} - 36]{95},   m[r28{0} - 40]=m[r28{0} - 40]{95},
                m[r28{0} - 84]=m[r28{0} - 84]{95},   m[r28{0} - 88]=m[r28{0} - 88]{95},
                m[r28{0} - 92]=m[r28{0} - 92]{95},   m[r28{0} - 4]=m[r28{0} - 4]{95},
                m[r28{0} - 12]=m[r28{0} - 12]{95},   m[r28{0} - 20]=m[r28{0} - 20]{95},
                m[r28{0} - 24]=m[r28{0} - 24]{95},   m[r28{0} - 28]=m[r28{0} - 28]{95},
                m[r28{0} - 32]=m[r28{0} - 32]{95},   m[r28{0} - 36]=m[r28{0} - 36]{95},
                m[r28{0} - 40]=m[r28{0} - 40]{95},   m[r28{0} - 84]=m[r28{0} - 84]{95},
                m[r28{0} - 88]=m[r28{0} - 88]{95},   m[r28{0} - 92]=m[r28{0} - 92]{95},   <all>=<all>{95},
                tmp1=r25{155},   %flags=ADDFLAGS32( r25{155}, 1, r25{155} + 1 ),
                %ZF=ADDFLAGS32( r25{155}, 1, r25{155} + 1 ),   %CF=ADDFLAGS32( r25{155}, 1, r25{155} + 1 )
              Live variables: ax,  bh,  bl,  bx in proc proc13
result:    0 *u16* ax := -
result:    0 *j16* bx := -
result:    0 *j8* bl := -
result:    0 *u32* bh := -
dest is not lib
call:  186 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL proc6(
                *DWORD* m[esp_12 - 4] := m[esp_12 - 4]
              )
              Reaching definitions: r0=r0{320},   r3=r3{321},   r8=r8{322},   r10=r10{323},   r11=r11{324},
                r15=r15{325},   r24=r24{326},   r25=r25{327},   r26=r26{328},   r27=r27{410},   r28=r28{329} - 8,
                r29=r29{330},   m[r28{0} - 4]=m[r28{0} - 4]{95},   m[r28{0} - 12]=m[r28{0} - 12]{95},
                m[r28{0} - 20]=m[r28{0} - 20]{95},   m[r28{0} - 24]=m[r28{0} - 24]{95},
                m[r28{0} - 28]=m[r28{0} - 28]{95},   m[r28{0} - 32]=m[r28{0} - 32]{95},
                m[r28{0} - 36]=m[r28{0} - 36]{95},   m[r28{0} - 40]=m[r28{0} - 40]{95},
                m[r28{0} - 84]=m[r28{0} - 84]{95},   m[r28{0} - 88]=m[r28{0} - 88]{95},
                m[r28{0} - 92]=m[r28{0} - 92]{95},   m[r28{0} - 4]=m[r28{0} - 4]{376},
                m[r28{0} - 12]=m[r28{0} - 12]{377},   m[r28{0} - 20]=m[r28{0} - 20]{378},
                m[r28{0} - 24]=m[r28{0} - 24]{379},   m[r28{0} - 28]=m[r28{0} - 28]{380},
                m[r28{0} - 32]=m[r28{0} - 32]{381},   m[r28{0} - 36]=m[r28{0} - 36]{382},
                m[r28{0} - 40]=m[r28{0} - 40]{383},   m[r28{0} - 84]=m[r28{0} - 84]{384},
                m[r28{0} - 88]=m[r28{0} - 88]{385},   m[r28{0} - 92]=m[r28{0} - 92]{386},   <all>=<all>{95},
                tmp1=tmp1{331},   %flags=%flags{332},   %ZF=%ZF{333},   %CF=%CF{334}
              Live variables: eax in proc proc13
result:    0 *32* eax := -
dest is not lib
call:  204 {*32* eax, *8* al, *8* dl, *32* ecx, *32* edx, *v* esp} := CALL proc21(
                *i64* m[esp_12 - 12] := m[esp_12 - 12]
                *8** m[esp_12 - 8] := m[esp_12 - 8]
                *i64* m[esp_12 - 4] := m[esp_12 - 4]
                *u8* dl := dl
                *8** ecx := ecx
              )
              Reaching definitions: r0=r0{320},   r3=r3{321},   r8=r8{322},   r10=r10{323},   r11=r11{324},
                r15=r15{325},   r24=r24{198},   r25=r25{191},   r26=r26{195},   r27=r27{410},   r28=r28{329} - 16,
                r29=r29{330},   m[r28{0} - 4]=m[r28{0} - 4]{95},   m[r28{0} - 12]=m[r28{0} - 12]{95},
                m[r28{0} - 20]=m[r28{0} - 20]{95},   m[r28{0} - 24]=m[r28{0} - 24]{95},
                m[r28{0} - 28]=m[r28{0} - 28]{95},   m[r28{0} - 32]=m[r28{0} - 32]{95},
                m[r28{0} - 36]=m[r28{0} - 36]{95},   m[r28{0} - 40]=m[r28{0} - 40]{95},
                m[r28{0} - 84]=m[r28{0} - 84]{95},   m[r28{0} - 88]=m[r28{0} - 88]{95},
                m[r28{0} - 92]=m[r28{0} - 92]{95},   m[r28{0} - 4]=m[r28{0} - 4]{376},
                m[r28{0} - 12]=m[r28{0} - 12]{377},   m[r28{0} - 20]=m[r28{0} - 20]{378},
                m[r28{0} - 24]=m[r28{0} - 24]{379},   m[r28{0} - 28]=m[r28{0} - 28]{380},
                m[r28{0} - 32]=m[r28{0} - 32]{381},   m[r28{0} - 36]=m[r28{0} - 36]{382},
                m[r28{0} - 40]=m[r28{0} - 40]{383},   m[r28{0} - 84]=m[r28{0} - 84]{384},
                m[r28{0} - 88]=m[r28{0} - 88]{385},   m[r28{0} - 92]=m[r28{0} - 92]{386},   <all>=<all>{95},
                tmp1=(r28{329} - 8) + 4,   %flags=ADDFLAGS32( r28{329} - 4, 4, r28{329} ),
                %ZF=ADDFLAGS32( r28{329} - 4, 4, r28{329} ),   %CF=ADDFLAGS32( r28{329} - 4, 4, r28{329} )
              Live variables: al,  dl,  eax in proc proc13
result:    0 *32* eax := -
result:    0 *8* al := -
result:    0 *8* dl := -
dest is not lib
call:  276 {*32* eax, *u8* dl, *32* ecx, *v* esp} := CALL proc29(
                *j32* m[esp_9 - 12] := m[esp_9 - 12]
                *union* m[esp_9 - 8] := m[esp_9 - 8]
                *u32* m[esp_9 - 4] := m[esp_9 - 4]
                *u8* dl := dl
              )
              Reaching definitions: r0=r0{255},   r3=r3{255},   r8=r8{255},   r10=r10{255},   r11=r11{255},
                r15=r15{255},   r24=r24{261},   r25=r25{264},   r26=r26{269},   r27=r27{255},   r28=r28{255} - 16,
                r29=r29{255},   m[r28{0} - 4]=m[r28{0} - 4]{255},   m[r28{0} - 12]=m[r28{0} - 12]{255},
                m[r28{0} - 20]=m[r28{0} - 20]{255},   m[r28{0} - 24]=m[r28{0} - 24]{255},
                m[r28{0} - 28]=m[r28{0} - 28]{255},   m[r28{0} - 32]=m[r28{0} - 32]{255},
                m[r28{0} - 36]=m[r28{0} - 36]{255},   m[r28{0} - 40]=m[r28{0} - 40]{255},
                m[r28{0} - 84]=m[r28{0} - 84]{255},   m[r28{0} - 88]=m[r28{0} - 88]{255},
                m[r28{0} - 92]=m[r28{0} - 92]{255},   m[r28{0} - 4]=m[r28{0} - 4]{255},
                m[r28{0} - 12]=m[r28{0} - 12]{255},   m[r28{0} - 20]=m[r28{0} - 20]{255},
                m[r28{0} - 24]=m[r28{0} - 24]{255},   m[r28{0} - 28]=m[r28{0} - 28]{255},
                m[r28{0} - 32]=m[r28{0} - 32]{255},   m[r28{0} - 36]=m[r28{0} - 36]{255},
                m[r28{0} - 40]=m[r28{0} - 40]{255},   m[r28{0} - 84]=m[r28{0} - 84]{255},
                m[r28{0} - 88]=m[r28{0} - 88]{255},   m[r28{0} - 92]=m[r28{0} - 92]{255},   <all>=<all>{255},
                tmp1=r26{267},   %flags=ADDFLAGS32( r26{267}, m[r29{255} - 12], r26{269} ),
                %ZF=ADDFLAGS32( r26{267}, m[r29{255} - 12], r26{269} ),
                %CF=ADDFLAGS32( r26{267}, m[r29{255} - 12], r26{269} )
              Live variables: dl in proc proc13
result:    0 *u8* dl := -
dest is not lib
call:  293 {*v* eax, *32* ecx, *32* edx, *v* esp} := CALL proc24(
                *LPVOID* m[esp_9 - 4] := m[esp_9 - 4]
              )
              Reaching definitions: r0=r0{255},   r3=r3{255},   r8=r8{255},   r10=r10{276},   r11=r11{255},
                r15=r15{255},   r24=r24{282},   r25=r25{285},   r26=r26{287},   r27=r27{255},   r28=r28{255} - 8,
                r29=r29{255},   m[r28{0} - 4]=m[r28{0} - 4]{255},   m[r28{0} - 12]=m[r28{0} - 12]{255},
                m[r28{0} - 20]=m[r28{0} - 20]{255},   m[r28{0} - 24]=m[r28{0} - 24]{255},
                m[r28{0} - 28]=m[r28{0} - 28]{255},   m[r28{0} - 32]=m[r28{0} - 32]{255},
                m[r28{0} - 36]=m[r28{0} - 36]{255},   m[r28{0} - 40]=m[r28{0} - 40]{255},
                m[r28{0} - 84]=m[r28{0} - 84]{255},   m[r28{0} - 88]=m[r28{0} - 88]{255},
                m[r28{0} - 92]=m[r28{0} - 92]{255},   m[r28{0} - 4]=m[r28{0} - 4]{255},
                m[r28{0} - 12]=m[r28{0} - 12]{255},   m[r28{0} - 20]=m[r28{0} - 20]{255},
                m[r28{0} - 24]=m[r28{0} - 24]{255},   m[r28{0} - 28]=m[r28{0} - 28]{255},
                m[r28{0} - 32]=m[r28{0} - 32]{255},   m[r28{0} - 36]=m[r28{0} - 36]{255},
                m[r28{0} - 40]=m[r28{0} - 40]{255},   m[r28{0} - 84]=m[r28{0} - 84]{255},
                m[r28{0} - 88]=m[r28{0} - 88]{255},   m[r28{0} - 92]=m[r28{0} - 92]{255},   <all>=<all>{255},
                tmp1=r24{280},   %flags=ADDFLAGS32( r24{280}, m[r29{255} - 48], r24{282} ),
                %ZF=ADDFLAGS32( r24{280}, m[r29{255} - 48], r24{282} ),
                %CF=ADDFLAGS32( r24{280}, m[r29{255} - 48], r24{282} )
              Live variables:  in proc proc13
dest is not lib
call:   39 {*32* r24, *v* r25, *v* r26, *v* esp} := CALL MessageBoxW(
                *HWND* local0 := -1
                *LPCWSTR* local1 := 0
                *LPCWSTR* local2 := 0
                *UINT* local3 := 0
              )
              Reaching definitions: r24=r24{10},   r27=r27{0},   r28=r28{0} - 76,   r29=r28{0} - 4,   r30=r30{0},
                r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=0,   m[r28{0} - 12]=0x4040d0,
                m[r28{0} - 16]=0x403f90,   m[r28{0} - 20]=r24{10},   m[r28{0} - 28]=r28{0} - 56,   m[r28{0} - 32]=0x714
                m[r28{0} - 36]=0x10d7,   m[r28{0} - 40]=0x10d0,   m[r28{0} - 48]=r27{0},   m[r28{0} - 52]=r30{0},
                m[r28{0} - 56]=r31{0},   m[r28{0} - 60]=0,   m[r28{0} - 64]=0,   m[r28{0} - 68]=0,   m[r28{0} - 72]=-1,
                m[r28{0} - 76]=%pc,   tmp1=r28{0} - 20,   %flags=ADDFLAGS32( r28{0} - 20, -24, r28{0} - 44 ),
                %ZF=ADDFLAGS32( r28{0} - 20, -24, r28{0} - 44 ),   %CF=ADDFLAGS32( r28{0} - 20, -24, r28{0} - 44 )
              Live variables:  in proc proc17
dest is not lib
call:   51 {*32* r24, *v* r25, *v* r26, *v* esp} := CALL MessageBoxW(
                *HWND* local0 := -1
                *LPCWSTR* local1 := 0
                *LPCWSTR* local2 := 0
                *UINT* local3 := 0
              )
              Reaching definitions: r24=r24{39},   r25=r25{39},   r26=r26{39},   r27=r27{0},   r28=r28{0} - 76,
                r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=0,
                m[r28{0} - 12]=0x4040d0,   m[r28{0} - 16]=0x403f90,   m[r28{0} - 20]=r24{10},
                m[r28{0} - 28]=r28{0} - 56,   m[r28{0} - 32]=0x714,   m[r28{0} - 36]=0x10d7,   m[r28{0} - 40]=0x10d0,
                m[r28{0} - 48]=r27{0},   m[r28{0} - 52]=r30{0},   m[r28{0} - 56]=r31{0},   m[r28{0} - 60]=0,
                m[r28{0} - 64]=0,   m[r28{0} - 68]=0,   m[r28{0} - 72]=-1,   m[r28{0} - 76]=%pc,   tmp1=r28{0} - 20,
                %flags=ADDFLAGS32( r28{0} - 20, -24, r28{0} - 44 ),   %ZF=ADDFLAGS32( r28{0} - 20, -24, r28{0} - 44 ),
                %CF=ADDFLAGS32( r28{0} - 20, -24, r28{0} - 44 )
              Live variables:  in proc proc17
dest is not lib
call:   63 {*32* r24, *v* r25, *v* r26, *v* esp} := CALL MessageBoxA(
                *HWND* local0 := -1
                *LPCSTR* local1 := 0
                *LPCSTR* local2 := 0
                *UINT* local3 := 0
              )
              Reaching definitions: r24=r24{51},   r25=r25{51},   r26=r26{51},   r27=r27{0},   r28=r28{0} - 76,
                r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=0,
                m[r28{0} - 12]=0x4040d0,   m[r28{0} - 16]=0x403f90,   m[r28{0} - 20]=r24{10},
                m[r28{0} - 28]=r28{0} - 56,   m[r28{0} - 32]=0x714,   m[r28{0} - 36]=0x10d7,   m[r28{0} - 40]=0x10d0,
                m[r28{0} - 48]=r27{0},   m[r28{0} - 52]=r30{0},   m[r28{0} - 56]=r31{0},   m[r28{0} - 60]=0,
                m[r28{0} - 64]=0,   m[r28{0} - 68]=0,   m[r28{0} - 72]=-1,   m[r28{0} - 76]=%pc,   tmp1=r28{0} - 20,
                %flags=ADDFLAGS32( r28{0} - 20, -24, r28{0} - 44 ),   %ZF=ADDFLAGS32( r28{0} - 20, -24, r28{0} - 44 ),
                %CF=ADDFLAGS32( r28{0} - 20, -24, r28{0} - 44 )
              Live variables:  in proc proc17
dest is not lib
call:   44 {*32* r24, *v* r25, *v* r26, *v* esp} := CALL MessageBoxW(
                *HWND* local0 := -1
                *LPCWSTR* local1 := 0
                *LPCWSTR* local2 := 0
                *UINT* local3 := 0
              )
              Reaching definitions: r24=r24{10},   r27=r27{0},   r28=r28{0} - 112,   r29=r28{0} - 4,   r30=r30{0},
                r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=-1,   m[r28{0} - 12]=0x4040e0,
                m[r28{0} - 16]=0x403f90,   m[r28{0} - 20]=r24{10},   m[r28{0} - 28]=r28{0} - 92,   m[r28{0} - 32]=0xa08
                m[r28{0} - 36]=0x692,   m[r28{0} - 40]=0,   m[r28{0} - 44]=0xaac,   m[r28{0} - 48]=0x1233,
                m[r28{0} - 52]=0x118d,   m[r28{0} - 56]=0x564d5868,   m[r28{0} - 60]=372,   m[r28{0} - 64]=0x93e,
                m[r28{0} - 84]=r27{0},   m[r28{0} - 88]=r30{0},   m[r28{0} - 92]=r31{0},   m[r28{0} - 96]=0,
                m[r28{0} - 100]=0,   m[r28{0} - 104]=0,   m[r28{0} - 108]=-1,   m[r28{0} - 112]=%pc,   tmp1=r28{0} - 20
                %flags=ADDFLAGS32( r28{0} - 20, -60, r28{0} - 80 ),   %ZF=ADDFLAGS32( r28{0} - 20, -60, r28{0} - 80 ),
                %CF=ADDFLAGS32( r28{0} - 20, -60, r28{0} - 80 )
              Live variables:  in proc proc18
dest is not lib
call:   56 {*32* r24, *v* r25, *v* r26, *v* esp} := CALL MessageBoxW(
                *HWND* local0 := -1
                *LPCWSTR* local1 := 0
                *LPCWSTR* local2 := 0
                *UINT* local3 := 0
              )
              Reaching definitions: r24=r24{44},   r25=r25{44},   r26=r26{44},   r27=r27{0},   r28=r28{0} - 112,
                r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=-1,
                m[r28{0} - 12]=0x4040e0,   m[r28{0} - 16]=0x403f90,   m[r28{0} - 20]=r24{10},
                m[r28{0} - 28]=r28{0} - 92,   m[r28{0} - 32]=0xa08,   m[r28{0} - 36]=0x692,   m[r28{0} - 40]=0,
                m[r28{0} - 44]=0xaac,   m[r28{0} - 48]=0x1233,   m[r28{0} - 52]=0x118d,   m[r28{0} - 56]=0x564d5868,
                m[r28{0} - 60]=372,   m[r28{0} - 64]=0x93e,   m[r28{0} - 84]=r27{0},   m[r28{0} - 88]=r30{0},
                m[r28{0} - 92]=r31{0},   m[r28{0} - 96]=0,   m[r28{0} - 100]=0,   m[r28{0} - 104]=0,
                m[r28{0} - 108]=-1,   m[r28{0} - 112]=%pc,   tmp1=r28{0} - 20,
                %flags=ADDFLAGS32( r28{0} - 20, -60, r28{0} - 80 ),   %ZF=ADDFLAGS32( r28{0} - 20, -60, r28{0} - 80 ),
                %CF=ADDFLAGS32( r28{0} - 20, -60, r28{0} - 80 )
              Live variables:  in proc proc18
dest is not lib
call:   68 {*32* r24, *v* r25, *v* r26, *v* esp} := CALL MessageBoxA(
                *HWND* local0 := -1
                *LPCSTR* local1 := 0
                *LPCSTR* local2 := 0
                *UINT* local3 := 0
              )
              Reaching definitions: r24=r24{56},   r25=r25{56},   r26=r26{56},   r27=r27{0},   r28=r28{0} - 112,
                r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=-1,
                m[r28{0} - 12]=0x4040e0,   m[r28{0} - 16]=0x403f90,   m[r28{0} - 20]=r24{10},
                m[r28{0} - 28]=r28{0} - 92,   m[r28{0} - 32]=0xa08,   m[r28{0} - 36]=0x692,   m[r28{0} - 40]=0,
                m[r28{0} - 44]=0xaac,   m[r28{0} - 48]=0x1233,   m[r28{0} - 52]=0x118d,   m[r28{0} - 56]=0x564d5868,
                m[r28{0} - 60]=372,   m[r28{0} - 64]=0x93e,   m[r28{0} - 84]=r27{0},   m[r28{0} - 88]=r30{0},
                m[r28{0} - 92]=r31{0},   m[r28{0} - 96]=0,   m[r28{0} - 100]=0,   m[r28{0} - 104]=0,
                m[r28{0} - 108]=-1,   m[r28{0} - 112]=%pc,   tmp1=r28{0} - 20,
                %flags=ADDFLAGS32( r28{0} - 20, -60, r28{0} - 80 ),   %ZF=ADDFLAGS32( r28{0} - 20, -60, r28{0} - 80 ),
                %CF=ADDFLAGS32( r28{0} - 20, -60, r28{0} - 80 )
              Live variables:  in proc proc18
dest is not lib
call:   80 {*32* r24, *v* r25, *v* r26, *v* esp} := CALL MessageBoxA(
                *HWND* local0 := -1
                *LPCSTR* local1 := 0
                *LPCSTR* local2 := 0
                *UINT* local3 := 0
              )
              Reaching definitions: r24=r24{68},   r25=r25{68},   r26=r26{68},   r27=r27{0},   r28=r28{0} - 112,
                r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=-1,
                m[r28{0} - 12]=0x4040e0,   m[r28{0} - 16]=0x403f90,   m[r28{0} - 20]=r24{10},
                m[r28{0} - 28]=r28{0} - 92,   m[r28{0} - 32]=0xa08,   m[r28{0} - 36]=0x692,   m[r28{0} - 40]=0,
                m[r28{0} - 44]=0xaac,   m[r28{0} - 48]=0x1233,   m[r28{0} - 52]=0x118d,   m[r28{0} - 56]=0x564d5868,
                m[r28{0} - 60]=372,   m[r28{0} - 64]=0x93e,   m[r28{0} - 84]=r27{0},   m[r28{0} - 88]=r30{0},
                m[r28{0} - 92]=r31{0},   m[r28{0} - 96]=0,   m[r28{0} - 100]=0,   m[r28{0} - 104]=0,
                m[r28{0} - 108]=-1,   m[r28{0} - 112]=%pc,   tmp1=r28{0} - 20,
                %flags=ADDFLAGS32( r28{0} - 20, -60, r28{0} - 80 ),   %ZF=ADDFLAGS32( r28{0} - 20, -60, r28{0} - 80 ),
                %CF=ADDFLAGS32( r28{0} - 20, -60, r28{0} - 80 )
              Live variables:  in proc proc18
dest is not lib
call:    9 {*32* eax, *32* r25, *32* r26, *32** r28} := CALL GetModuleHandleA(
              )
              Reaching definitions: r28=r28{0} - 12,   r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=0x4051c0
                m[r28{0} - 12]=%pc,   m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 20]=m[r28{0} - 20]{0},
                m[r28{0} - 24]=m[r28{0} - 24]{0},   m[r28{0} - 28]=m[r28{0} - 28]{0}
              Live variables: eax in proc proc19
result:    0 *32* eax := -
dest is not lib
call:   18 {*32* eax, *32* r25, *32* r26, *32** r28} := CALL GetModuleHandleA(
              )
              Reaching definitions: r24=r24{9},   r25=r25{9},   r26=r26{9},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=0x4051c0,   m[r28{0} - 12]=0x4051cc,   m[r28{0} - 16]=%pc,
                m[r28{0} - 20]=m[r28{0} - 20]{0},   m[r28{0} - 24]=m[r28{0} - 24]{0},
                m[r28{0} - 28]=m[r28{0} - 28]{0},   tmp1=r24{9},   %flags=LOGICALFLAGS32( r24{9} ),
                %ZF=LOGICALFLAGS32( r24{9} ),   %CF=LOGICALFLAGS32( r24{9} )
              Live variables: eax in proc proc19
result:    0 *32* eax := -
dest is not lib
call:   27 {*32* eax, *32* r25, *32* r26, *32** r28} := CALL GetModuleHandleA(
              )
              Reaching definitions: r24=r24{18},   r25=r25{18},   r26=r26{18},   r28=r28{0} - 20,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=0x4051c0,   m[r28{0} - 12]=0x4051cc,   m[r28{0} - 16]=0x4051d8,
                m[r28{0} - 20]=%pc,   m[r28{0} - 24]=m[r28{0} - 24]{0},   m[r28{0} - 28]=m[r28{0} - 28]{0},
                tmp1=r24{18},   %flags=LOGICALFLAGS32( r24{18} ),   %ZF=LOGICALFLAGS32( r24{18} ),
                %CF=LOGICALFLAGS32( r24{18} )
              Live variables: eax in proc proc19
result:    0 *32* eax := -
dest is not lib
call:   36 {*32* eax, *32* r25, *32* r26, *32** r28} := CALL GetModuleHandleA(
              )
              Reaching definitions: r24=r24{27},   r25=r25{27},   r26=r26{27},   r28=r28{0} - 24,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=0x4051c0,   m[r28{0} - 12]=0x4051cc,   m[r28{0} - 16]=0x4051d8,
                m[r28{0} - 20]=0x4051e4,   m[r28{0} - 24]=%pc,   m[r28{0} - 28]=m[r28{0} - 28]{0},   tmp1=r24{27},
                %flags=LOGICALFLAGS32( r24{27} ),   %ZF=LOGICALFLAGS32( r24{27} ),   %CF=LOGICALFLAGS32( r24{27} )
              Live variables: eax in proc proc19
result:    0 *32* eax := -
dest is not lib
call:   45 {*32* eax, *32* r25, *32* r26, *32** r28} := CALL GetModuleHandleA(
              )
              Reaching definitions: r24=r24{36},   r25=r25{36},   r26=r26{36},   r28=r28{0} - 28,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=0x4051c0,   m[r28{0} - 12]=0x4051cc,   m[r28{0} - 16]=0x4051d8,
                m[r28{0} - 20]=0x4051e4,   m[r28{0} - 24]=0x4051f4,   m[r28{0} - 28]=%pc,   tmp1=r24{36},
                %flags=LOGICALFLAGS32( r24{36} ),   %ZF=LOGICALFLAGS32( r24{36} ),   %CF=LOGICALFLAGS32( r24{36} )
              Live variables: eax in proc proc19
result:    0 *32* eax := -
dest is not lib
call:   15 {*32* eax_2, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local0 := eax
                *c** local1 := "$0%4'U",%4'z"
              )
              Reaching definitions: r0=r0{0},   r10=r10{0},   r11=r11{0},   r24=r24{9},   r27=r27{0},   r28=r28{0} - 32
                r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 24]=0x40539c,   m[r28{0} - 28]=r24{9},   m[r28{0} - 32]=%pc,
                m[r28{0} - 56]=m[r28{0} - 56]{0},   tmp1=r28{0} - 4,   tmp2=tmp2{0},   tmpl=tmpl{0},
                %flags=SUBFLAGS32( r28{0} - 4, 16, r28{0} - 20 ),   %ZF=(r28{0} - 20) = 0,   %CF=(r28{0} - 4) <u 16
              Live variables: eax_2 in proc proc20
result:    0 *32* eax_2 := -
dest is not lib
call:   25 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local0 := ecx
                *c** local1 := "",%4'z"
              )
              Reaching definitions: r0=r0{0},   r10=r10{0},   r11=r11{0},   r24=r24{15},   r25=r25{19},   r26=r26{15},
                r27=r27{0},   r28=r28{0} - 32,   r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 16]=r24{15},
                m[r28{0} - 24]=0x4053a8,   m[r28{0} - 28]=r25{19},   m[r28{0} - 32]=%pc,
                m[r28{0} - 56]=m[r28{0} - 56]{0},   tmp1=r28{0} - 4,   tmp2=tmp2{0},   tmpl=tmpl{0},
                %flags=SUBFLAGS32( r28{0} - 4, 16, r28{0} - 20 ),   %ZF=(r28{0} - 20) = 0,   %CF=(r28{0} - 4) <u 16
              Live variables: eax in proc proc20
result:    0 *32* eax := -
dest is not lib
call:   35 {*32* eax, *j32* ecx, *u32* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local0 := edx
                *c** local1 := "&
=  <,'';R"
              )
              Reaching definitions: r0=r0{0},   r10=r10{0},   r11=r11{0},   r24=r24{25},   r25=r25{25},   r26=r26{29},
                r27=r27{0},   r28=r28{0} - 32,   r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 12]=r24{25},
                m[r28{0} - 16]=r24{15},   m[r28{0} - 24]=0x4053b4,   m[r28{0} - 28]=r26{29},   m[r28{0} - 32]=%pc,
                m[r28{0} - 56]=m[r28{0} - 56]{0},   tmp1=r28{0} - 4,   tmp2=tmp2{0},   tmpl=tmpl{0},
                %flags=SUBFLAGS32( r28{0} - 4, 16, r28{0} - 20 ),   %ZF=(r28{0} - 20) = 0,   %CF=(r28{0} - 4) <u 16
              Live variables: eax,  ecx,  edx in proc proc20
result:    0 *32* eax := -
result:    0 *j32* ecx := -
result:    0 *u32* edx := -
dest is not lib
call:   43 {*i32* eax, *u32* cl, *u8* dl, *32* ecx, *32* edx, *v* esp} := CALL proc30(
                *32* local2 := param1
                *u8** local1 := 0x406124
                *u8* dl := param4
                *j32* ecx := ecx
              )
              Reaching definitions: r0=r0{0},   r10=r10{0},   r11=r11{0},   r24=r24{35},   r25=r25{35},   r26=r26{35},
                r27=r27{0},   r28=r28{0} - 28,   r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=0,   m[r28{0} - 12]=r24{25},
                m[r28{0} - 16]=r24{15},   m[r28{0} - 20]=r24{35},   m[r28{0} - 24]=0x406124,   m[r28{0} - 28]=%pc,
                m[r28{0} - 32]=%pc,   m[r28{0} - 56]=m[r28{0} - 56]{0},   tmp1=r28{0} - 4,   tmp2=tmp2{0},
                tmpl=tmpl{0},   %flags=SUBFLAGS32( r28{0} - 4, 16, r28{0} - 20 ),   %ZF=(r28{0} - 20) = 0,
                %CF=(r28{0} - 4) <u 16
              Live variables: cl,  dl,  eax in proc proc20
result:    0 *i32* eax := -
result:    0 *u32* cl := -
result:    0 *u8* dl := -
dest is not lib
call:   59 {*i32* eax, *8* al, *32* ecx, *32* edx, *v* esp} := CALL proc16(
                *8** local0 := 0x4055f1
                *union* local1 := 0x405534
                *i32* eax := eax *! 1000
              )
              Reaching definitions: r0=r0{0},   r9=r9{43},   r10=r10{43},   r11=r11{0},   r24=r24{43} *! 1000,
                r25=r25{43},   r26=r26{43},   r27=r27{0},   r28=r28{0} - 32,   r29=r28{0} - 4,   r30=r30{0},
                r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{43} *! 1000,
                m[r28{0} - 12]=r24{25},   m[r28{0} - 16]=r24{15},   m[r28{0} - 20]=r24{35},   m[r28{0} - 24]=0x405534,
                m[r28{0} - 28]=0x4055f1,   m[r28{0} - 32]=%pc,   m[r28{0} - 56]=m[r28{0} - 56]{0},
                tmp1=(r28{0} - 28) + 4,   tmp2=tmp2{0},   tmpl=tmpl{0},   %flags=IMULTFLAGS32( r24{43} *! 1000 ),
                %ZF=IMULTFLAGS32( r24{43} *! 1000 ),   %CF=IMULTFLAGS32( r24{43} *! 1000 )
              Live variables: eax in proc proc20
result:    0 *i32* eax := -
dest is not lib
call:  215 {*8** eax, *32* esi, *v* ecx, *v* edx, *8*** esp_5, *32* edi} := CALL proc23(
                *32* m[esp_17 - 4] := m[esp_17 - 4]
              )
              Reaching definitions: r0=r0{0},   r8=r8{59},   r9=r9{43},   r10=r10{43},   r11=r11{0},   r24=r24{404},
                r25=r25{405},   r26=r26{406},   r27=r27{0},   r28=r28{407} - 8,   r29=r28{0} - 4,   r30=r30{0},
                r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{43} *! 1000,
                m[r28{0} - 12]=r24{25},   m[r28{0} - 16]=r24{15},   m[r28{0} - 20]=r24{35},
                m[r28{0} - 24]=m[r28{0} - 24]{530},   m[r28{0} - 28]=0x4055f1,   m[r28{0} - 32]=%pc,
                m[r28{0} - 56]=m[r28{0} - 56]{0},   tmp1=tmp1{423},   tmp2=tmp2{0},   tmpl=tmpl{0},
                %flags=%flags{424},   %ZF=%ZF{425},   %CF=%CF{426}
              Live variables: eax,  edi,  esi,  esp_5 in proc proc20
result:    0 *8** eax := -
result:    0 *32* esi := -
result:    0 *8*** esp_5 := -
result:    0 *32* edi := -
dest is not lib
call:  227 {*32* eax, *8* al, *32* ecx, *32* edx, *v* esp} := CALL proc12(
                *8** m[esp_5 - 4] := m[esp_5 - 4]
                *8** m[esp_5] := m[esp_5]
              )
              Reaching definitions: r0=r0{0},   r8=r8{59},   r9=r9{43},   r10=r10{43},   r11=r11{0},   r24=r24{221},
                r25=r25{215},   r26=r26{215},   r27=r27{0},   r28=r28{215} - 8,   r29=r28{0} - 4,   r30=r30{215},
                r31=r31{215},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{43} *! 1000
                m[r28{0} - 12]=r24{25},   m[r28{0} - 16]=r24{15},   m[r28{0} - 20]=r24{35},
                m[r28{0} - 24]=m[r28{0} - 24]{530},   m[r28{0} - 28]=0x4055f1,   m[r28{0} - 32]=%pc,
                m[r28{0} - 56]=m[r28{0} - 56]{0},   tmp1=r28{215},   tmp2=tmp2{0},   tmpl=tmpl{0},
                %flags=ADDFLAGS32( r28{215}, 4, r28{215} + 4 ),   %ZF=ADDFLAGS32( r28{215}, 4, r28{215} + 4 ),
                %CF=ADDFLAGS32( r28{215}, 4, r28{215} + 4 )
              Live variables:  in proc proc20
dest is not lib
call:   93 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL lstrcmpA(
              )
              Reaching definitions: r0=r0{0},   r8=r8{59},   r9=r9{43},   r10=r10{43},   r11=r11{0},   r24=r24{404},
                r25=r25{405},   r26=r26{406},   r27=r27{0},   r28=r28{407} - 12,   r29=r28{0} - 4,   r30=r30{0},
                r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{43} *! 1000,
                m[r28{0} - 12]=r24{25},   m[r28{0} - 16]=r24{15},   m[r28{0} - 20]=r24{35},
                m[r28{0} - 24]=m[r28{0} - 24]{530},   m[r28{0} - 28]=0x4055f1,   m[r28{0} - 32]=%pc,
                m[r28{0} - 56]=m[r28{0} - 56]{0},   tmp1=global213,   tmp2=tmp2{0},   tmpl=tmpl{0},
                %flags=SUBFLAGS32( m[0x405474], 0, global213 ),   %ZF=global213 = 0,   %CF=m[0x405474] <u 0
              Live variables: eax in proc proc20
result:    0 *32* eax := -
dest is not lib
call:  123 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL lstrcmpA(
              )
              Reaching definitions: r0=r0{0},   r8=r8{59},   r9=r9{43},   r10=r10{43},   r11=r11{0},   r24=r24{93},
                r25=r25{93},   r26=r26{93},   r27=r27{0},   r28=r28{407} - 20,   r29=r28{0} - 4,   r30=r30{0},
                r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{43} *! 1000,
                m[r28{0} - 12]=r24{25},   m[r28{0} - 16]=r24{15},   m[r28{0} - 20]=r24{35},
                m[r28{0} - 24]=m[r28{0} - 24]{530},   m[r28{0} - 28]=0x4055f1,   m[r28{0} - 32]=%pc,
                m[r28{0} - 56]=m[r28{0} - 56]{0},   tmp1=r24{93},   tmp2=tmp2{0},   tmpl=tmpl{0},
                %flags=LOGICALFLAGS32( r24{93} ),   %ZF=LOGICALFLAGS32( r24{93} ),   %CF=LOGICALFLAGS32( r24{93} )
              Live variables: eax in proc proc20
result:    0 *32* eax := -
dest is not lib
call:  165 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL lstrcmpA(
              )
              Reaching definitions: r0=r0{0},   r8=r8{59},   r9=r9{43},   r10=r10{43},   r11=r11{0},   r24=r24{123},
                r25=r25{123},   r26=r26{123},   r27=r27{0},   r28=r28{407} - 28,   r29=r28{0} - 4,   r30=r30{0},
                r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{43} *! 1000,
                m[r28{0} - 12]=r24{25},   m[r28{0} - 16]=r24{15},   m[r28{0} - 20]=r24{35},
                m[r28{0} - 24]=m[r28{0} - 24]{530},   m[r28{0} - 28]=0x4055f1,   m[r28{0} - 32]=%pc,
                m[r28{0} - 56]=m[r28{0} - 56]{0},   tmp1=r24{123},   tmp2=tmp2{0},   tmpl=tmpl{0},
                %flags=LOGICALFLAGS32( r24{123} ),   %ZF=LOGICALFLAGS32( r24{123} ),   %CF=LOGICALFLAGS32( r24{123} )
              Live variables: eax in proc proc20
result:    0 *32* eax := -
dest is not lib
call:  193 {*8** eax, *32* esi, *v* ecx, *v* edx, *8*** esp_15, *32* edi} := CALL proc23(
                *32* m[esp_17 - 28] := m[esp_17 - 28]
              )
              Reaching definitions: r0=r0{0},   r8=r8{59},   r9=r9{43},   r10=r10{43},   r11=r11{0},   r24=r24{165},
                r25=r25{165},   r26=r26{165},   r27=r27{0},   r28=r28{407} - 32,   r29=r28{0} - 4,   r30=r30{0},
                r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{43} *! 1000,
                m[r28{0} - 12]=r24{25},   m[r28{0} - 16]=r24{15},   m[r28{0} - 20]=r24{35},
                m[r28{0} - 24]=m[r28{0} - 24]{530},   m[r28{0} - 28]=0x4055f1,   m[r28{0} - 32]=%pc,
                m[r28{0} - 56]=m[r28{0} - 56]{0},   tmp1=r24{165},   tmp2=tmp2{0},   tmpl=tmpl{0},
                %flags=LOGICALFLAGS32( r24{165} ),   %ZF=LOGICALFLAGS32( r24{165} ),   %CF=LOGICALFLAGS32( r24{165} )
              Live variables: eax,  edi,  esi,  esp_15 in proc proc20
result:    0 *8** eax := -
result:    0 *32* esi := -
result:    0 *8*** esp_15 := -
result:    0 *32* edi := -
dest is not lib
call:  205 {*32* eax, *8* al, *32* ecx, *32* edx, *v* esp} := CALL proc12(
                *8** m[esp_15 - 4] := m[esp_15 - 4]
                *8** m[esp_15] := m[esp_15]
              )
              Reaching definitions: r0=r0{0},   r8=r8{59},   r9=r9{43},   r10=r10{43},   r11=r11{0},   r24=r24{193},
                r25=r25{193},   r26=r26{199},   r27=r27{0},   r28=r28{193} - 8,   r29=r28{0} - 4,   r30=r30{193},
                r31=r31{193},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{43} *! 1000
                m[r28{0} - 12]=r24{25},   m[r28{0} - 16]=r24{15},   m[r28{0} - 20]=r24{35},
                m[r28{0} - 24]=m[r28{0} - 24]{530},   m[r28{0} - 28]=0x4055f1,   m[r28{0} - 32]=%pc,
                m[r28{0} - 56]=m[r28{0} - 56]{0},   tmp1=r28{193},   tmp2=tmp2{0},   tmpl=tmpl{0},
                %flags=ADDFLAGS32( r28{193}, 4, r28{193} + 4 ),   %ZF=ADDFLAGS32( r28{193}, 4, r28{193} + 4 ),
                %CF=ADDFLAGS32( r28{193}, 4, r28{193} + 4 )
              Live variables:  in proc proc20
dest is not lib
call:  174 {*32* eax, *32* esi, *v* ecx, *v* edx, *32* edi} := CALL proc23(
                *32* m[esp_17 - 28] := m[esp_17 - 28]
              )
              Reaching definitions: r0=r0{0},   r8=r8{59},   r9=r9{43},   r10=r10{43},   r11=r11{0},   r24=r24{165},
                r25=r25{165},   r26=r26{165},   r27=r27{0},   r28=r28{407} - 32,   r29=r28{0} - 4,   r30=r30{0},
                r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{43} *! 1000,
                m[r28{0} - 12]=r24{25},   m[r28{0} - 16]=r24{15},   m[r28{0} - 20]=r24{35},
                m[r28{0} - 24]=m[r28{0} - 24]{530},   m[r28{0} - 28]=0x4055f1,   m[r28{0} - 32]=%pc,
                m[r28{0} - 56]=m[r28{0} - 56]{0},   tmp1=r24{165},   tmp2=tmp2{0},   tmpl=tmpl{0},
                %flags=LOGICALFLAGS32( r24{165} ),   %ZF=LOGICALFLAGS32( r24{165} ),   %CF=LOGICALFLAGS32( r24{165} )
              Live variables: eax,  edi,  esi,  esp_13 in proc proc20
result:    0 *32* eax := -
result:    0 *32* esi := -
result:    0 *32* edi := -
dest is not lib
call:  186 {*32* eax, *32* ecx, *32* edx, *v** esp_14} := CALL lstrcpyA(
              )
              Reaching definitions: r0=r0{0},   r8=r8{59},   r9=r9{43},   r10=r10{43},   r11=r11{0},   r24=r24{174},
                r25=r25{180},   r26=r26{174},   r27=r27{0},   r28=r28{174} - 8,   r29=r28{0} - 4,   r30=r30{174},
                r31=r31{174},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{43} *! 1000
                m[r28{0} - 12]=r24{25},   m[r28{0} - 16]=r24{15},   m[r28{0} - 20]=r24{35},
                m[r28{0} - 24]=m[r28{0} - 24]{530},   m[r28{0} - 28]=0x4055f1,   m[r28{0} - 32]=%pc,
                m[r28{0} - 56]=m[r28{0} - 56]{0},   tmp1=r28{174},   tmp2=tmp2{0},   tmpl=tmpl{0},
                %flags=ADDFLAGS32( r28{174}, 4, r28{174} + 4 ),   %ZF=ADDFLAGS32( r28{174}, 4, r28{174} + 4 ),
                %CF=ADDFLAGS32( r28{174}, 4, r28{174} + 4 )
              Live variables: esp_14 in proc proc20
result:    0 *v** esp_14 := -
dest is not lib
call:  132 {*32* eax, *32* esi, *v* ecx, *v* edx, *32** esp_8, *32* edi} := CALL proc23(
                *32* m[esp_17 - 20] := m[esp_17 - 20]
              )
              Reaching definitions: r0=r0{0},   r8=r8{59},   r9=r9{43},   r10=r10{43},   r11=r11{0},   r24=r24{123},
                r25=r25{123},   r26=r26{123},   r27=r27{0},   r28=r28{407} - 24,   r29=r28{0} - 4,   r30=r30{0},
                r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{43} *! 1000,
                m[r28{0} - 12]=r24{25},   m[r28{0} - 16]=r24{15},   m[r28{0} - 20]=r24{35},
                m[r28{0} - 24]=m[r28{0} - 24]{530},   m[r28{0} - 28]=0x4055f1,   m[r28{0} - 32]=%pc,
                m[r28{0} - 56]=m[r28{0} - 56]{0},   tmp1=r24{123},   tmp2=tmp2{0},   tmpl=tmpl{0},
                %flags=LOGICALFLAGS32( r24{123} ),   %ZF=LOGICALFLAGS32( r24{123} ),   %CF=LOGICALFLAGS32( r24{123} )
              Live variables: eax,  edi,  esi,  esp_8 in proc proc20
result:    0 *32* eax := -
result:    0 *32* esi := -
result:    0 *32** esp_8 := -
result:    0 *32* edi := -
dest is not lib
call:  144 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL lstrcpyA(
              )
              Reaching definitions: r0=r0{0},   r8=r8{59},   r9=r9{43},   r10=r10{43},   r11=r11{0},   r24=r24{132},
                r25=r25{132},   r26=r26{138},   r27=r27{0},   r28=r28{132} - 8,   r29=r28{0} - 4,   r30=r30{132},
                r31=r31{132},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{43} *! 1000
                m[r28{0} - 12]=r24{25},   m[r28{0} - 16]=r24{15},   m[r28{0} - 20]=r24{35},
                m[r28{0} - 24]=m[r28{0} - 24]{530},   m[r28{0} - 28]=0x4055f1,   m[r28{0} - 32]=%pc,
                m[r28{0} - 56]=m[r28{0} - 56]{0},   tmp1=r28{132},   tmp2=tmp2{0},   tmpl=tmpl{0},
                %flags=ADDFLAGS32( r28{132}, 4, r28{132} + 4 ),   %ZF=ADDFLAGS32( r28{132}, 4, r28{132} + 4 ),
                %CF=ADDFLAGS32( r28{132}, 4, r28{132} + 4 )
              Live variables:  in proc proc20
dest is not lib
call:  153 {*32* eax, *8* al, *32* ecx, *32* edx, *v* esp} := CALL proc22(
                *8** m[esp_8 - 12] := m[esp_8 - 12]
                *8** m[esp_8 - 8] := m[esp_8 - 8]
              )
              Reaching definitions: r0=r0{0},   r8=r8{59},   r9=r9{43},   r10=r10{43},   r11=r11{0},   r24=r24{147},
                r25=r25{144},   r26=r26{144},   r27=r27{0},   r28=r28{132} - 16,   r29=r28{0} - 4,   r30=r30{132},
                r31=r31{132},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{43} *! 1000
                m[r28{0} - 12]=r24{25},   m[r28{0} - 16]=r24{15},   m[r28{0} - 20]=r24{35},
                m[r28{0} - 24]=m[r28{0} - 24]{530},   m[r28{0} - 28]=0x4055f1,   m[r28{0} - 32]=%pc,
                m[r28{0} - 56]=m[r28{0} - 56]{0},   tmp1=r28{132},   tmp2=tmp2{0},   tmpl=tmpl{0},
                %flags=ADDFLAGS32( r28{132}, 4, r28{132} + 4 ),   %ZF=ADDFLAGS32( r28{132}, 4, r28{132} + 4 ),
                %CF=ADDFLAGS32( r28{132}, 4, r28{132} + 4 )
              Live variables:  in proc proc20
dest is not lib
call:  102 {*32* eax, *32* esi, *v* ecx, *v* edx, *32* edi} := CALL proc23(
                *32* m[esp_17 - 12] := m[esp_17 - 12]
              )
              Reaching definitions: r0=r0{0},   r8=r8{59},   r9=r9{43},   r10=r10{43},   r11=r11{0},   r24=r24{93},
                r25=r25{93},   r26=r26{93},   r27=r27{0},   r28=r28{407} - 16,   r29=r28{0} - 4,   r30=r30{0},
                r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{43} *! 1000,
                m[r28{0} - 12]=r24{25},   m[r28{0} - 16]=r24{15},   m[r28{0} - 20]=r24{35},
                m[r28{0} - 24]=m[r28{0} - 24]{530},   m[r28{0} - 28]=0x4055f1,   m[r28{0} - 32]=%pc,
                m[r28{0} - 56]=m[r28{0} - 56]{0},   tmp1=r24{93},   tmp2=tmp2{0},   tmpl=tmpl{0},
                %flags=LOGICALFLAGS32( r24{93} ),   %ZF=LOGICALFLAGS32( r24{93} ),   %CF=LOGICALFLAGS32( r24{93} )
              Live variables: eax,  edi,  esi,  esp_3 in proc proc20
result:    0 *32* eax := -
result:    0 *32* esi := -
result:    0 *32* edi := -
dest is not lib
call:  114 {*32* eax, *32* ecx, *32* edx, *v** esp_4} := CALL lstrcpyA(
              )
              Reaching definitions: r0=r0{0},   r8=r8{59},   r9=r9{43},   r10=r10{43},   r11=r11{0},   r24=r24{102},
                r25=r25{108},   r26=r26{102},   r27=r27{0},   r28=r28{102} - 8,   r29=r28{0} - 4,   r30=r30{102},
                r31=r31{102},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{43} *! 1000
                m[r28{0} - 12]=r24{25},   m[r28{0} - 16]=r24{15},   m[r28{0} - 20]=r24{35},
                m[r28{0} - 24]=m[r28{0} - 24]{530},   m[r28{0} - 28]=0x4055f1,   m[r28{0} - 32]=%pc,
                m[r28{0} - 56]=m[r28{0} - 56]{0},   tmp1=r28{102},   tmp2=tmp2{0},   tmpl=tmpl{0},
                %flags=ADDFLAGS32( r28{102}, 4, r28{102} + 4 ),   %ZF=ADDFLAGS32( r28{102}, 4, r28{102} + 4 ),
                %CF=ADDFLAGS32( r28{102}, 4, r28{102} + 4 )
              Live variables: esp_4 in proc proc20
result:    0 *v** esp_4 := -
dest is not lib
call:  239 {*32* eax, *8* al, *32* ecx, *32* edx, *v* esp} := CALL proc22(
                *8** m[esp_18 - 8] := m[esp_18 - 8]
                *8** m[esp_18 - 4] := m[esp_18 - 4]
              )
              Reaching definitions: r0=r0{0},   r8=r8{427},   r9=r9{43},   r10=r10{43},   r11=r11{0},   r24=r24{428},
                r25=r25{233},   r26=r26{430},   r27=r27{0},   r28=r28{431} - 12,   r29=r28{0} - 4,   r30=r30{432},
                r31=r31{433},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{43} *! 1000
                m[r28{0} - 12]=r24{25},   m[r28{0} - 16]=r24{15},   m[r28{0} - 20]=r24{35},
                m[r28{0} - 24]=m[r28{0} - 24]{530},   m[r28{0} - 28]=0x4055f1,   m[r28{0} - 32]=%pc,
                m[r28{0} - 56]=m[r28{0} - 56]{0},   tmp1=tmp1{434},   tmp2=tmp2{0},   tmpl=tmpl{0},
                %flags=%flags{435},   %ZF=%ZF{436},   %CF=%CF{437}
              Live variables:  in proc proc20
dest is not lib
call:  251 {*32* eax, *8* al, *32* ecx, *32* edx, *v* esp} := CALL proc22(
                *8** m[esp_18 - 8] := m[esp_18 - 8]
                *8** m[esp_18 - 4] := m[esp_18 - 4]
              )
              Reaching definitions: r0=r0{0},   r8=r8{239},   r9=r9{43},   r10=r10{43},   r11=r11{0},   r24=r24{239},
                r25=r25{239},   r26=r26{245},   r27=r27{0},   r28=r28{431} - 12,   r29=r28{0} - 4,   r30=r30{432},
                r31=r31{433},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{43} *! 1000
                m[r28{0} - 12]=r24{25},   m[r28{0} - 16]=r24{15},   m[r28{0} - 20]=r24{35},
                m[r28{0} - 24]=m[r28{0} - 24]{530},   m[r28{0} - 28]=0x4055f1,   m[r28{0} - 32]=%pc,
                m[r28{0} - 56]=m[r28{0} - 56]{0},   tmp1=(r28{431} - 12) + 4,   tmp2=tmp2{0},   tmpl=tmpl{0},
                %flags=ADDFLAGS32( r28{431} - 8, 8, r28{431} ),   %ZF=ADDFLAGS32( r28{431} - 8, 8, r28{431} ),
                %CF=ADDFLAGS32( r28{431} - 8, 8, r28{431} )
              Live variables:  in proc proc20
dest is not lib
call:  264 {*i32* eax, *32* ecx, *32* edx, *v** esp} := CALL lstrcmpA(
              )
              Reaching definitions: r0=r0{0},   r8=r8{251},   r9=r9{43},   r10=r10{43},   r11=r11{0},   r24=r24{255},
                r25=m[r28{0} + 4]{0},   r26=r26{251},   r27=r27{0},   r28=r28{431} - 12,   r29=r28{0} - 4,
                r30=r30{432},   r31=r31{433},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=r24{43} *! 1000,   m[r28{0} - 12]=r24{25},   m[r28{0} - 16]=r24{15},
                m[r28{0} - 20]=r24{35},   m[r28{0} - 24]=m[r28{0} - 24]{530},   m[r28{0} - 28]=0x4055f1,
                m[r28{0} - 32]=%pc,   m[r28{0} - 56]=m[r28{0} - 56]{0},   tmp1=(r28{431} - 12) + 4,   tmp2=tmp2{0},
                tmpl=tmpl{0},   %flags=ADDFLAGS32( r28{431} - 8, 8, r28{431} ),
                %ZF=ADDFLAGS32( r28{431} - 8, 8, r28{431} ),   %CF=ADDFLAGS32( r28{431} - 8, 8, r28{431} )
              Live variables: eax in proc proc20
result:    0 *i32* eax := -
dest is not lib
call:  275 {*32* eax, *8* al, *32* ecx, *32* edx, *v* esp} := CALL proc16(
                *8** m[esp_18 - 16] := m[esp_18 - 16]
                *union* m[esp_18 - 12] := m[esp_18 - 12]
                *i32* eax := eax
              )
              Reaching definitions: r0=r0{0},   r8=r8{251},   r9=r9{43},   r10=r10{43},   r11=r11{0},   r24=r24{264},
                r25=r25{264},   r26=r26{264},   r27=r27{0},   r28=r28{431} - 20,   r29=r28{0} - 4,   r30=r30{432},
                r31=r31{433},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{43} *! 1000
                m[r28{0} - 12]=r24{25},   m[r28{0} - 16]=r24{15},   m[r28{0} - 20]=r24{35},
                m[r28{0} - 24]=m[r28{0} - 24]{530},   m[r28{0} - 28]=0x4055f1,   m[r28{0} - 32]=%pc,
                m[r28{0} - 56]=m[r28{0} - 56]{0},   tmp1=r24{264},   tmp2=tmp2{0},   tmpl=tmpl{0},
                %flags=LOGICALFLAGS32( r24{264} ),   %ZF=LOGICALFLAGS32( r24{264} ),   %CF=LOGICALFLAGS32( r24{264} )
              Live variables: al,  eax,  ecx in proc proc20
result:    0 *32* eax := -
result:    0 *8* al := -
result:    0 *32* ecx := -
dest is not lib
call:  314 {*32* eax_3, *32* ecx, *32* edx, *v** esp} := CALL lstrcmpA(
              )
              Reaching definitions: r0=r0{0},   r8=r8{439},   r9=r9{440},   r10=r10{441},   r11=r11{0},   r24=r24{443},
                r25=r25{444},   r26=r26{445},   r27=r27{565},   r28=r28{446} - 12,   r29=r29{447},   r30=r30{448},
                r31=r31{449},   m[r28{0} + 4]=m[r28{0} + 4]{566},   m[r28{0} - 4]=m[r28{0} - 4]{533},
                m[r28{0} - 8]=m[r28{0} - 8]{534},   m[r28{0} - 12]=m[r28{0} - 12]{535},
                m[r28{0} - 16]=m[r28{0} - 16]{536},   m[r28{0} - 20]=m[r28{0} - 20]{537},
                m[r28{0} - 24]=m[r28{0} - 24]{538},   m[r28{0} - 28]=m[r28{0} - 28]{539},
                m[r28{0} - 32]=m[r28{0} - 32]{540},   m[r28{0} - 56]=m[r28{0} - 56]{567},   tmp1=tmp1{450},
                tmp2=tmp2{0},   tmpl=tmpl{0},   %flags=%flags{453},   %ZF=%ZF{454},   %CF=%CF{455}
              Live variables: eax_3,  ecx,  edx,  esp in proc proc20
result:    0 *32* eax_3 := -
result:    0 *32* ecx := -
result:    0 *32* edx := -
result:    0 *v** esp := -
dest is not lib
call:  334 {*32* eax, *v* ecx, *v* edx, *v** esp} := CALL lstrcmpA(
              )
              Reaching definitions: r0=r0{456},   r8=r8{457},   r9=r9{458},   r10=r10{459},   r11=r11{460},
                r24=r24{461},   r25=r25{462},   r26=r26{463},   r27=r27{568},   r28=r28{464} - 12,   r29=r29{465},
                r30=r30{466},   r31=r31{467},   m[r28{0} + 4]=m[r28{0} + 4]{569},   m[r28{0} - 4]=m[r28{0} - 4]{541},
                m[r28{0} - 8]=m[r28{0} - 8]{542},   m[r28{0} - 12]=m[r28{0} - 12]{543},
                m[r28{0} - 16]=m[r28{0} - 16]{544},   m[r28{0} - 20]=m[r28{0} - 20]{545},
                m[r28{0} - 24]=m[r28{0} - 24]{546},   m[r28{0} - 28]=m[r28{0} - 28]{547},
                m[r28{0} - 32]=m[r28{0} - 32]{548},   m[r28{0} - 56]=m[r28{0} - 56]{570},   tmp1=tmp1{468},
                tmp2=tmp2{469},   tmpl=tmpl{470},   %flags=%flags{471},   %ZF=%ZF{472},   %CF=%CF{473}
              Live variables: eax,  esp in proc proc20
result:    0 *32* eax := -
result:    0 *v** esp := -
dest is not lib
call:  341 {*32* eax, *8* al, *u32* cl, *u8* dl, *j8* bl, *v* ecx, *v* edx, *v** esp, *v** ebp} := CALL proc31(
                *32* m[esp_12 - 108] := m[esp_12 - 108]
                *u32* cl := cl
                *u8* dl := dl
                *j8* bl := bl
                *32* ebx := param6
              )
              Reaching definitions: r0=r0{456},   r8=r8{457},   r9=r9{458},   r10=r10{459},   r11=r11{460},
                r24=r24{334},   r25=r25{334},   r26=r26{334},   r27=r27{568},   r28=r28{464} - 12,   r29=r29{465},
                r30=r30{466},   r31=r31{467},   m[r28{0} + 4]=m[r28{0} + 4]{569},   m[r28{0} - 4]=m[r28{0} - 4]{541},
                m[r28{0} - 8]=m[r28{0} - 8]{542},   m[r28{0} - 12]=m[r28{0} - 12]{543},
                m[r28{0} - 16]=m[r28{0} - 16]{544},   m[r28{0} - 20]=m[r28{0} - 20]{545},
                m[r28{0} - 24]=m[r28{0} - 24]{546},   m[r28{0} - 28]=m[r28{0} - 28]{547},
                m[r28{0} - 32]=m[r28{0} - 32]{548},   m[r28{0} - 56]=m[r28{0} - 56]{570},   tmp1=r24{334},
                tmp2=tmp2{469},   tmpl=tmpl{470},   %flags=LOGICALFLAGS32( r24{334} ),   %ZF=LOGICALFLAGS32( r24{334} )
                %CF=LOGICALFLAGS32( r24{334} )
              Live variables: al,  ebp,  esp in proc proc20
result:    0 *8* al := -
result:    0 *v** esp := -
result:    0 *v** ebp := -
dest is not lib
call:  359 {*j64* eax, *v* esp} := CALL proc32(
              )
              Reaching definitions: r0=r0{456},   r8=r8{474},   r9=r9{475},   r10=r10{476},   r11=r11{477},
                r24=r24{478},   r25=r25{479},   r26=r26{480},   r27=r27{568},   r28=r28{481} - 4,   r29=r29{482},
                r30=r30{466},   r31=r31{467},   m[r28{0} + 4]=m[r28{0} + 4]{569},   m[r28{0} - 4]=m[r28{0} - 4]{541},
                m[r28{0} - 8]=m[r28{0} - 8]{542},   m[r28{0} - 12]=m[r28{0} - 12]{543},
                m[r28{0} - 16]=m[r28{0} - 16]{544},   m[r28{0} - 20]=m[r28{0} - 20]{545},
                m[r28{0} - 24]=m[r28{0} - 24]{546},   m[r28{0} - 28]=m[r28{0} - 28]{547},
                m[r28{0} - 32]=m[r28{0} - 32]{548},   m[r28{0} - 56]=m[r28{0} - 56]{570},   tmp1=tmp1{353},
                tmp2=tmp2{469},   tmpl=tmpl{470},   %flags=SUBFLAGS32( m[r29{482} - 4], 0xfffff830, tmp1{353} ),
                %ZF=tmp1{353} = 0,   %CF=m[r29{482} - 4] <u 0xfffff830
              Live variables: eax in proc proc20
result:    0 *j64* eax := -
dest is not lib
call:  378 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL Sleep(
                *DWORD* local8 := m[esp - 4]
              )
              Reaching definitions: r0=r0{359},   r8=r8{474},   r9=r9{475},   r10=r10{476},   r11=r11{477},
                r24=tmpl{362} /! 300,   r25=300,   r26=r26{372},   r27=r27{568},   r28=r28{481} - 8,   r29=r29{482},
                r30=r30{466},   r31=r31{467},   m[r28{0} + 4]=m[r28{0} + 4]{569},   m[r28{0} - 4]=m[r28{0} - 4]{541},
                m[r28{0} - 8]=m[r28{0} - 8]{542},   m[r28{0} - 12]=m[r28{0} - 12]{543},
                m[r28{0} - 16]=m[r28{0} - 16]{544},   m[r28{0} - 20]=m[r28{0} - 20]{545},
                m[r28{0} - 24]=m[r28{0} - 24]{546},   m[r28{0} - 28]=m[r28{0} - 28]{547},
                m[r28{0} - 32]=m[r28{0} - 32]{548},   m[r28{0} - 56]=m[r28{0} - 56]{570},   tmp1=tmpl{362} %! 300,
                tmp2=300,   tmpl=tmpl{362},   %flags=IMULTFLAGS32( r26{369} ),   %ZF=IMULTFLAGS32( r26{369} ),
                %CF=IMULTFLAGS32( r26{369} )
              Live variables:  in proc proc20
dest is not lib
call:  351 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL Sleep(
                *DWORD* local8 := m[esp - 4]
              )
              Reaching definitions: r0=r0{456},   r8=r8{474},   r9=r9{475},   r10=r10{476},   r11=r11{477},
                r24=r24{478},   r25=r25{345},   r26=r26{480},   r27=r27{568},   r28=r28{481} - 8,   r29=r29{482},
                r30=r30{466},   r31=r31{467},   m[r28{0} + 4]=m[r28{0} + 4]{569},   m[r28{0} - 4]=m[r28{0} - 4]{541},
                m[r28{0} - 8]=m[r28{0} - 8]{542},   m[r28{0} - 12]=m[r28{0} - 12]{543},
                m[r28{0} - 16]=m[r28{0} - 16]{544},   m[r28{0} - 20]=m[r28{0} - 20]{545},
                m[r28{0} - 24]=m[r28{0} - 24]{546},   m[r28{0} - 28]=m[r28{0} - 28]{547},
                m[r28{0} - 32]=m[r28{0} - 32]{548},   m[r28{0} - 56]=m[r28{0} - 56]{570},   tmp1=tmp1{342},
                tmp2=tmp2{469},   tmpl=tmpl{470},   %flags=SUBFLAGS32( m[r29{482} - 4], 0, tmp1{342} ),
                %ZF=tmp1{342} = 0,   %CF=m[r29{482} - 4] <u 0
              Live variables:  in proc proc20
dest is not lib
call:  382 {*v* eax, *8* al, *32* ecx, *32* edx, *v** esp, *32** ebp} := CALL proc33(
                *8* al := al
              )
              Reaching definitions: r0=r0{483},   r8=r8{474},   r9=r9{475},   r10=r10{476},   r11=r11{477},
                r24=r24{484},   r25=r25{485},   r26=r26{486},   r27=r27{568},   r28=r28{481} - 4,   r29=r29{482},
                r30=r30{466},   r31=r31{467},   m[r28{0} + 4]=m[r28{0} + 4]{569},   m[r28{0} - 4]=m[r28{0} - 4]{541},
                m[r28{0} - 8]=m[r28{0} - 8]{542},   m[r28{0} - 12]=m[r28{0} - 12]{543},
                m[r28{0} - 16]=m[r28{0} - 16]{544},   m[r28{0} - 20]=m[r28{0} - 20]{545},
                m[r28{0} - 24]=m[r28{0} - 24]{546},   m[r28{0} - 28]=m[r28{0} - 28]{547},
                m[r28{0} - 32]=m[r28{0} - 32]{548},   m[r28{0} - 56]=m[r28{0} - 56]{570},   tmp1=tmp1{488},
                tmp2=tmp2{489},   tmpl=tmpl{490},   %flags=%flags{491},   %ZF=%ZF{492},   %CF=%CF{493}
              Live variables: ebp,  esp in proc proc20
result:    0 *v** esp := -
result:    0 *32** ebp := -
dest is not lib
call:  391 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL ExitProcess(
                *UINT* local8 := m[esp - 4]
              )
              Reaching definitions: r0=r0{483},   r8=r8{382},   r9=r9{475},   r10=r10{476},   r11=r11{477},
                r24=r24{382},   r25=r25{382},   r26=r26{382},   r27=r27{568},   r28=r28{382} - 8,   r29=r29{382},
                r30=r30{466},   r31=r31{467},   m[r28{0} + 4]=m[r28{0} + 4]{569},   m[r28{0} - 4]=m[r28{0} - 4]{541},
                m[r28{0} - 8]=m[r28{0} - 8]{542},   m[r28{0} - 12]=m[r28{0} - 12]{543},
                m[r28{0} - 16]=m[r28{0} - 16]{544},   m[r28{0} - 20]=m[r28{0} - 20]{545},
                m[r28{0} - 24]=m[r28{0} - 24]{546},   m[r28{0} - 28]=m[r28{0} - 28]{547},
                m[r28{0} - 32]=m[r28{0} - 32]{548},   m[r28{0} - 56]=m[r28{0} - 56]{570},   tmp1=tmp1{383},
                tmp2=tmp2{489},   tmpl=tmpl{490},   %flags=SUBFLAGS32( m[r29{382} - 4], -1000, tmp1{383} ),
                %ZF=tmp1{383} = 0,   %CF=m[r29{382} - 4] <u -1000
              Live variables:  in proc proc20
dest is not lib
call:   73 {*i32* eax, *32* ecx, *32* edx, *v** esp_2} := CALL lstrcmpA(
              )
              Reaching definitions: r0=r0{0},   r8=r8{59},   r9=r9{43},   r10=r10{43},   r11=r11{0},   r24=r24{59},
                r25=r25{59},   r26=r26{59},   r27=r27{0},   r28=r28{0} - 32,   r29=r28{0} - 4,   r30=r30{0},
                r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{43} *! 1000,
                m[r28{0} - 12]=r24{25},   m[r28{0} - 16]=r24{15},   m[r28{0} - 20]=r24{35},   m[r28{0} - 24]=0x405538,
                m[r28{0} - 28]=0x4055f1,   m[r28{0} - 32]=%pc,   m[r28{0} - 56]=m[r28{0} - 56]{0},   tmp1=r24{59},
                tmp2=tmp2{0},   tmpl=tmpl{0},   %flags=LOGICALFLAGS32( r24{59} ),   %ZF=LOGICALFLAGS32( r24{59} ),
                %CF=LOGICALFLAGS32( r24{59} )
              Live variables: eax,  esp_2 in proc proc20
result:    0 *i32* eax := -
result:    0 *v** esp_2 := -
dest is not lib
call:   99 {*v* ecx, *v* r26} := CALL MessageBoxW(
                *HWND* local3 := -1
                *LPCWSTR* local4 := 0
                *LPCWSTR* local5 := 0
                *UINT* local6 := 0
              )
              Reaching definitions: r8=r8{185},   r10=r10{186},   r24=r24{187},   r25=m[r28{0} - 12]{215} + 1,
                r26=r26{188},   r28=r28{0} - 52,   r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 8]{217},   m[r28{0} - 12]=m[r28{0} - 12]{218},   m[r28{0} - 16]=0xc6b,
                m[r28{0} - 20]=0x1076,   m[r28{0} - 24]=m[r28{0} - 24]{0},   m[r28{0} - 28]=m[r28{0} - 28]{0},
                m[r28{0} - 32]=m[r28{0} - 32]{68},   m[r28{0} - 36]=0,   m[r28{0} - 40]=0,   m[r28{0} - 44]=0,
                m[r28{0} - 48]=-1,   m[r28{0} - 52]=%pc,   tmp1=tmp1{189},   tmp2=m[r28{0} + 12]{0},   tmpl=tmpl{62},
                %flags=%flags{190},   %ZF=%ZF{191},   %CF=%CF{192}
              Live variables:  in proc proc21
dest is not lib
call:  111 {*v* ecx, *v* r26} := CALL MessageBoxW(
                *HWND* local3 := -1
                *LPCWSTR* local4 := 0
                *LPCWSTR* local5 := 0
                *UINT* local6 := 0
              )
              Reaching definitions: r8=r8{185},   r10=r10{186},   r24=r24{99},   r25=r25{99},   r26=r26{99},
                r28=r28{0} - 52,   r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},
                m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{217},
                m[r28{0} - 12]=m[r28{0} - 12]{218},   m[r28{0} - 16]=0xc6b,   m[r28{0} - 20]=0x1076,
                m[r28{0} - 24]=m[r28{0} - 24]{0},   m[r28{0} - 28]=m[r28{0} - 28]{0},
                m[r28{0} - 32]=m[r28{0} - 32]{68},   m[r28{0} - 36]=0,   m[r28{0} - 40]=0,   m[r28{0} - 44]=0,
                m[r28{0} - 48]=-1,   m[r28{0} - 52]=%pc,   tmp1=tmp1{189},   tmp2=m[r28{0} + 12]{0},   tmpl=tmpl{62},
                %flags=%flags{190},   %ZF=%ZF{191},   %CF=%CF{192}
              Live variables:  in proc proc21
dest is not lib
call:   21 {*32* eax, *8* al, *32* edx} := CALL proc12(
                *8** local0 := eax
                *8** local1 := param2
              )
              Reaching definitions: r24=r24{38},   r28=r28{0} - 16,   r30=m[r28{0} + 4]{0},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r30{0},
                m[r28{0} - 8]=m[r28{0} + 8]{0},   m[r28{0} - 12]=r24{38},   m[r28{0} - 16]=%pc,   tmp1=tmp1{39},
                tmpb=tmpb{40},   %flags=%flags{41},   %ZF=%ZF{42},   %CF=%CF{43}
              Live variables: al,  edx in proc proc22
result:    0 *8* al := -
result:    0 *32* edx := -
dest is not lib
call:   16 {*u32* eax, *32* r25, *32* r26} := CALL GetEnvironmentVariableA(
              )
              Reaching definitions: r28=r28{0} - 24,   r30=0x400,   r31=0x406188,   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} - 4]=r30{0},   m[r28{0} - 8]=r31{0},   m[r28{0} - 12]=0x400,   m[r28{0} - 16]=0x406188,
                m[r28{0} - 20]=m[r28{0} + 4]{0},   m[r28{0} - 24]=%pc
              Live variables: eax in proc proc23
result:    0 *u32* eax := -
dest is not lib
call:   13 {*32* r24, *32* r25, *32* r26} := CALL HeapFree(
                *HANDLE* local0 := local0
                *DWORD* local1 := 0
                *LPVOID* local2 := param1
              )
              Reaching definitions: r24=r24{0},   r25=r25{0},   r26=r26{0},   r28=r28{0} - 16,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=m[r28{0} + 4]{0},   m[r28{0} - 8]=0,
                m[r28{0} - 12]=m[r28{0} - 12]{8},   m[r28{0} - 16]=%pc,   tmp1=m[r28{0} + 4]{0},
                %flags=SUBFLAGS32( m[r28{0} + 4], 0, m[r28{0} + 4]{0} ),   %ZF=m[r28{0} + 4]{0} = 0,
                %CF=m[r28{0} + 4] <u 0
              Live variables:  in proc proc24
dest is not lib
call:   17 {*v* eax, *16* ax, *16* bx, *8* al, *8* bl, *8* bh_1, *32* ecx, *32* edx, *v* esp} := CALL proc26(
                *j32** local0 := a[param1]
                *u32* local1 := 0
                *u32* local2 := 68
                *u16* ax := param4
                *j16* bx := param5
                *j8* bl := param6
                *u32* bh := param7
                *32* ebx := param8
              )
              Reaching definitions: r0=r0{0},   r3=r3{0},   r11=r11{0},   r15=r15{0},   r24=r28{0} - 844,   r26=r26{0},
                r27=r27{0},   r28=r28{0} - 864,   r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{0},
                m[r28{0} - 12]=m[r28{0} - 12]{0},   m[r28{0} - 20]=m[r28{0} - 20]{0},
                m[r28{0} - 40]=m[r28{0} - 40]{0},   m[r28{0} - 772]=m[r28{0} - 772]{0},
                m[r28{0} - 776]=m[r28{0} - 776]{0},   m[r28{0} - 844]=m[r28{0} - 844]{0},
                m[r28{0} - 848]=m[r28{0} - 848]{0},   m[r28{0} - 852]=68,   m[r28{0} - 856]=0,
                m[r28{0} - 860]=r28{0} - 844,   m[r28{0} - 864]=%pc,   m[r28{0} - 868]=m[r28{0} - 868]{0},
                m[r28{0} - 872]=m[r28{0} - 872]{0},   m[r28{0} - 876]=m[r28{0} - 876]{0},
                m[r28{0} - 880]=m[r28{0} - 880]{0},   m[r28{0} - 884]=m[r28{0} - 884]{0},
                m[r28{0} - 888]=m[r28{0} - 888]{0},   m[r28{0} - 892]=m[r28{0} - 892]{0},   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 844, r28{0} - 848 ),   %ZF=(r28{0} - 848) = 0,   %CF=(r28{0} - 4) <u 844
              Live variables: al,  bh_1,  bl,  bx in proc proc25
result:    0 *16* bx := -
result:    0 *8* al := -
result:    0 *8* bl := -
result:    0 *8* bh_1 := -
dest is not lib
call:   57 {*32* eax_2, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local3 := ecx
                *c** local4 := "740;7&2X"
              )
              Reaching definitions: r0=r0{28},   r3=r3{17},   r8=r8{17},   r11=r11{17},   r15=r15{17},   r24=r26{39},
                r25=r25{51},   r26=r26{39},   r27=r27{0},   r28=(r28{0} - 864) + 4,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 12]=m[r28{0} - 12]{0},   m[r28{0} - 20]=m[r28{0} - 20]{0},
                m[r28{0} - 40]=m[r28{0} - 40]{0},   m[r28{0} - 756]=0x10007,   m[r28{0} - 768]=m[r28{0} + 8]{0},
                m[r28{0} - 772]=r26{39},   m[r28{0} - 776]=m[r28{0} - 776]{0},   m[r28{0} - 844]=68,
                m[r28{0} - 848]=m[r28{0} - 848]{0},   m[r28{0} - 852]=0x405068,   m[r28{0} - 856]=r25{51},
                m[r28{0} - 860]=%pc,   m[r28{0} - 864]=%pc,   m[r28{0} - 868]=m[r28{0} - 868]{0},
                m[r28{0} - 872]=m[r28{0} - 872]{0},   m[r28{0} - 876]=m[r28{0} - 876]{0},
                m[r28{0} - 880]=m[r28{0} - 880]{0},   m[r28{0} - 884]=m[r28{0} - 884]{0},
                m[r28{0} - 888]=m[r28{0} - 888]{0},   m[r28{0} - 892]=m[r28{0} - 892]{0},   tmp1=tmp1{43},
                %flags=SUBFLAGS32( m[r26{39}], 0x4550, tmp1{43} ),   %ZF=tmp1{43} = 0,   %CF=m[r26{39}] <u 0x4550
              Live variables: eax_2 in proc proc25
result:    0 *32* eax_2 := -
dest is not lib
call:   67 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local3 := edx
                *c** local4 := ";(=% =! =;c"
              )
              Reaching definitions: r0=r0{28},   r3=r3{17},   r8=r8{17},   r11=r11{17},   r15=r15{17},   r24=r24{57},
                r25=r25{57},   r26=r26{61},   r27=r27{0},   r28=r28{0} - 860,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 12]=m[r28{0} - 12]{0},   m[r28{0} - 20]=m[r28{0} - 20]{0},
                m[r28{0} - 40]=r24{57},   m[r28{0} - 756]=0x10007,   m[r28{0} - 768]=m[r28{0} + 8]{0},
                m[r28{0} - 772]=r26{39},   m[r28{0} - 776]=m[r28{0} - 776]{0},   m[r28{0} - 844]=68,
                m[r28{0} - 848]=m[r28{0} - 848]{0},   m[r28{0} - 852]=0x40509c,   m[r28{0} - 856]=r26{61},
                m[r28{0} - 860]=%pc,   m[r28{0} - 864]=%pc,   m[r28{0} - 868]=m[r28{0} - 868]{0},
                m[r28{0} - 872]=m[r28{0} - 872]{0},   m[r28{0} - 876]=m[r28{0} - 876]{0},
                m[r28{0} - 880]=m[r28{0} - 880]{0},   m[r28{0} - 884]=m[r28{0} - 884]{0},
                m[r28{0} - 888]=m[r28{0} - 888]{0},   m[r28{0} - 892]=m[r28{0} - 892]{0},   tmp1=tmp1{43},
                %flags=SUBFLAGS32( m[r26{39}], 0x4550, tmp1{43} ),   %ZF=tmp1{43} = 0,   %CF=m[r26{39}] <u 0x4550
              Live variables: eax in proc proc25
result:    0 *32* eax := -
dest is not lib
call:   77 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local3 := eax
                *c** local4 := "007, *!7*'5R"
              )
              Reaching definitions: r0=r0{28},   r3=r3{17},   r8=r8{17},   r11=r11{17},   r15=r15{17},   r24=r24{71},
                r25=r25{67},   r26=r26{67},   r27=r27{0},   r28=r28{0} - 860,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 12]=m[r28{0} - 12]{0},   m[r28{0} - 20]=m[r28{0} - 20]{0},
                m[r28{0} - 40]=r24{57},   m[r28{0} - 756]=0x10007,   m[r28{0} - 768]=m[r28{0} + 8]{0},
                m[r28{0} - 772]=r26{39},   m[r28{0} - 776]=m[r28{0} - 776]{0},   m[r28{0} - 844]=68,
                m[r28{0} - 848]=r24{67},   m[r28{0} - 852]=0x4050cc,   m[r28{0} - 856]=r24{71},   m[r28{0} - 860]=%pc,
                m[r28{0} - 864]=%pc,   m[r28{0} - 868]=m[r28{0} - 868]{0},   m[r28{0} - 872]=m[r28{0} - 872]{0},
                m[r28{0} - 876]=m[r28{0} - 876]{0},   m[r28{0} - 880]=m[r28{0} - 880]{0},
                m[r28{0} - 884]=m[r28{0} - 884]{0},   m[r28{0} - 888]=m[r28{0} - 888]{0},
                m[r28{0} - 892]=m[r28{0} - 892]{0},   tmp1=tmp1{43},
                %flags=SUBFLAGS32( m[r26{39}], 0x4550, tmp1{43} ),   %ZF=tmp1{43} = 0,   %CF=m[r26{39}] <u 0x4550
              Live variables: eax in proc proc25
result:    0 *32* eax := -
dest is not lib
call:   87 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local3 := ecx
                *c** local4 := "007, *!7*'5R"
              )
              Reaching definitions: r0=r0{28},   r3=r3{17},   r8=r8{17},   r11=r11{17},   r15=r15{17},   r24=r24{77},
                r25=r25{81},   r26=r26{77},   r27=r27{0},   r28=r28{0} - 860,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=r24{77},   m[r28{0} - 12]=m[r28{0} - 12]{0},   m[r28{0} - 20]=m[r28{0} - 20]{0},
                m[r28{0} - 40]=r24{57},   m[r28{0} - 756]=0x10007,   m[r28{0} - 768]=m[r28{0} + 8]{0},
                m[r28{0} - 772]=r26{39},   m[r28{0} - 776]=m[r28{0} - 776]{0},   m[r28{0} - 844]=68,
                m[r28{0} - 848]=r24{67},   m[r28{0} - 852]=0x4050e0,   m[r28{0} - 856]=r25{81},   m[r28{0} - 860]=%pc,
                m[r28{0} - 864]=%pc,   m[r28{0} - 868]=m[r28{0} - 868]{0},   m[r28{0} - 872]=m[r28{0} - 872]{0},
                m[r28{0} - 876]=m[r28{0} - 876]{0},   m[r28{0} - 880]=m[r28{0} - 880]{0},
                m[r28{0} - 884]=m[r28{0} - 884]{0},   m[r28{0} - 888]=m[r28{0} - 888]{0},
                m[r28{0} - 892]=m[r28{0} - 892]{0},   tmp1=tmp1{43},
                %flags=SUBFLAGS32( m[r26{39}], 0x4550, tmp1{43} ),   %ZF=tmp1{43} = 0,   %CF=m[r26{39}] <u 0x4550
              Live variables: eax in proc proc25
result:    0 *32* eax := -
dest is not lib
call:   97 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local3 := edx
                *c** local4 := ""
              )
              Reaching definitions: r0=r0{28},   r3=r3{17},   r8=r8{17},   r11=r11{17},   r15=r15{17},   r24=r24{87},
                r25=r25{87},   r26=r26{91},   r27=r27{0},   r28=r28{0} - 860,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=r24{77},   m[r28{0} - 12]=r24{87},   m[r28{0} - 20]=m[r28{0} - 20]{0},
                m[r28{0} - 40]=r24{57},   m[r28{0} - 756]=0x10007,   m[r28{0} - 768]=m[r28{0} + 8]{0},
                m[r28{0} - 772]=r26{39},   m[r28{0} - 776]=m[r28{0} - 776]{0},   m[r28{0} - 844]=68,
                m[r28{0} - 848]=r24{67},   m[r28{0} - 852]=0x4050f4,   m[r28{0} - 856]=r26{91},   m[r28{0} - 860]=%pc,
                m[r28{0} - 864]=%pc,   m[r28{0} - 868]=m[r28{0} - 868]{0},   m[r28{0} - 872]=m[r28{0} - 872]{0},
                m[r28{0} - 876]=m[r28{0} - 876]{0},   m[r28{0} - 880]=m[r28{0} - 880]{0},
                m[r28{0} - 884]=m[r28{0} - 884]{0},   m[r28{0} - 888]=m[r28{0} - 888]{0},
                m[r28{0} - 892]=m[r28{0} - 892]{0},   tmp1=tmp1{43},
                %flags=SUBFLAGS32( m[r26{39}], 0x4550, tmp1{43} ),   %ZF=tmp1{43} = 0,   %CF=m[r26{39}] <u 0x4550
              Live variables: eax in proc proc25
result:    0 *32* eax := -
dest is not lib
call:  107 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local3 := eax
                *c** local4 := "'
==& '9 ,c"
              )
              Reaching definitions: r0=r0{28},   r3=r3{17},   r8=r8{17},   r11=r11{17},   r15=r15{17},   r24=r24{101},
                r25=r25{97},   r26=r26{97},   r27=r27{0},   r28=r28{0} - 860,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=r24{77},   m[r28{0} - 12]=r24{87},   m[r28{0} - 20]=m[r28{0} - 20]{0},
                m[r28{0} - 40]=r24{57},   m[r28{0} - 756]=0x10007,   m[r28{0} - 768]=m[r28{0} + 8]{0},
                m[r28{0} - 772]=r26{39},   m[r28{0} - 776]=r24{97},   m[r28{0} - 844]=68,   m[r28{0} - 848]=r24{67},
                m[r28{0} - 852]=0x4050b4,   m[r28{0} - 856]=r24{101},   m[r28{0} - 860]=%pc,   m[r28{0} - 864]=%pc,
                m[r28{0} - 868]=m[r28{0} - 868]{0},   m[r28{0} - 872]=m[r28{0} - 872]{0},
                m[r28{0} - 876]=m[r28{0} - 876]{0},   m[r28{0} - 880]=m[r28{0} - 880]{0},
                m[r28{0} - 884]=m[r28{0} - 884]{0},   m[r28{0} - 888]=m[r28{0} - 888]{0},
                m[r28{0} - 892]=m[r28{0} - 892]{0},   tmp1=tmp1{43},
                %flags=SUBFLAGS32( m[r26{39}], 0x4550, tmp1{43} ),   %ZF=tmp1{43} = 0,   %CF=m[r26{39}] <u 0x4550
              Live variables: eax in proc proc25
result:    0 *32* eax := -
dest is not lib
call:  130 {*32* eax, *32* ecx, *32* edx, *v* esp} := CALL GetCommandLineA(
              )
              Reaching definitions: r0=r0{28},   r3=r3{17},   r8=r8{17},   r11=r11{17},   r15=r15{17},   r24=r24{107},
                r25=r28{0} - 36,   r26=r28{0} - 844,   r27=r27{0},   r28=r28{0} - 884,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=r24{77},   m[r28{0} - 12]=r24{87},   m[r28{0} - 20]=r24{107},   m[r28{0} - 40]=r24{57},
                m[r28{0} - 756]=0x10007,   m[r28{0} - 768]=m[r28{0} + 8]{0},   m[r28{0} - 772]=r26{39},
                m[r28{0} - 776]=r24{97},   m[r28{0} - 844]=68,   m[r28{0} - 848]=r24{67},   m[r28{0} - 852]=r28{0} - 36
                m[r28{0} - 856]=r28{0} - 844,   m[r28{0} - 860]=0,   m[r28{0} - 864]=0,   m[r28{0} - 868]=4,
                m[r28{0} - 872]=0,   m[r28{0} - 876]=0,   m[r28{0} - 880]=0,   m[r28{0} - 884]=%pc,
                m[r28{0} - 888]=m[r28{0} - 888]{0},   m[r28{0} - 892]=m[r28{0} - 892]{0},   tmp1=tmp1{43},
                %flags=SUBFLAGS32( m[r26{39}], 0x4550, tmp1{43} ),   %ZF=tmp1{43} = 0,   %CF=m[r26{39}] <u 0x4550
              Live variables: eax,  ecx,  edx in proc proc25
result:    0 *32* eax := -
result:    0 *32* ecx := -
result:    0 *32* edx := -
dest is not lib
call:  329 {*32* eax, *u16* ax, *16** ecx, *u32** edx, *j32* esp_9, *32** ebp} := CALL proc27(
                *32* local23 := m[esp - 4]
              )
              Reaching definitions: r0=r0{322},   r3=r3{322},   r8=r8{322},   r11=r11{322},   r15=r15{322},
                r24=r24{323},   r25=r25{322},   r26=r26{322},   r27=r27{322},   r28=r28{322} - 8,   r29=r29{322},
                m[r28{0} + 4]=m[r28{0} + 4]{322},   m[r28{0} + 8]=m[r28{0} + 8]{322},
                m[r28{0} - 4]=m[r28{0} - 4]{322},   m[r28{0} - 8]=m[r28{0} - 8]{322},
                m[r28{0} - 12]=m[r28{0} - 12]{322},   m[r28{0} - 20]=m[r28{0} - 20]{322},
                m[r28{0} - 40]=m[r28{0} - 40]{322},   m[r28{0} - 756]=m[r28{0} - 756]{322},
                m[r28{0} - 768]=m[r28{0} - 768]{322},   m[r28{0} - 772]=m[r28{0} - 772]{322},
                m[r28{0} - 776]=m[r28{0} - 776]{322},   m[r28{0} - 844]=m[r28{0} - 844]{322},
                m[r28{0} - 848]=m[r28{0} - 848]{322},   m[r28{0} - 852]=m[r28{0} - 852]{322},
                m[r28{0} - 856]=m[r28{0} - 856]{322},   m[r28{0} - 860]=m[r28{0} - 860]{322},
                m[r28{0} - 864]=m[r28{0} - 864]{322},   m[r28{0} - 868]=m[r28{0} - 868]{322},
                m[r28{0} - 872]=m[r28{0} - 872]{322},   m[r28{0} - 876]=m[r28{0} - 876]{322},
                m[r28{0} - 880]=m[r28{0} - 880]{322},   m[r28{0} - 884]=m[r28{0} - 884]{322},
                m[r28{0} - 888]=m[r28{0} - 888]{322},   m[r28{0} - 892]=m[r28{0} - 892]{322},
                m[r28{0} - 4]=m[r28{0} - 4]{322},   m[r28{0} - 8]=m[r28{0} - 8]{322},
                m[r28{0} - 12]=m[r28{0} - 12]{322},   m[r28{0} - 20]=m[r28{0} - 20]{322},
                m[r28{0} - 40]=m[r28{0} - 40]{322},   m[r28{0} - 756]=m[r28{0} - 756]{322},
                m[r28{0} - 768]=m[r28{0} - 768]{322},   m[r28{0} - 772]=m[r28{0} - 772]{322},
                m[r28{0} - 776]=m[r28{0} - 776]{322},   m[r28{0} - 844]=m[r28{0} - 844]{322},
                m[r28{0} - 848]=m[r28{0} - 848]{322},   m[r28{0} - 852]=m[r28{0} - 852]{322},
                m[r28{0} - 856]=m[r28{0} - 856]{322},   m[r28{0} - 860]=m[r28{0} - 860]{322},
                m[r28{0} - 864]=m[r28{0} - 864]{322},   m[r28{0} - 868]=m[r28{0} - 868]{322},
                m[r28{0} - 872]=m[r28{0} - 872]{322},   m[r28{0} - 876]=m[r28{0} - 876]{322},
                m[r28{0} - 880]=m[r28{0} - 880]{322},   m[r28{0} - 884]=m[r28{0} - 884]{322},
                m[r28{0} - 888]=m[r28{0} - 888]{322},   m[r28{0} - 892]=m[r28{0} - 892]{322},   <all>=<all>{322},
                tmp1=tmp1{322},   %flags=%flags{322},   %ZF=%ZF{322},   %CF=%CF{322}
              Live variables:  in proc proc25
dest is not lib
call:   14 {*32* eax, *32* ecx, *32* esp_1, *32** ebp_1} := CALL proc28(
                *32* local0 := param1
              )
              Reaching definitions: r0=truncu(32,16,m[r28{0} + 4]{0}),   r24=m[r28{0} + 4]{0},   r26=r26{0},
                r28=r28{0} - 148,   r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 144]=m[r28{0} + 4]{0},   m[r28{0} - 148]=%pc,   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 136, r28{0} - 140 ),   %ZF=(r28{0} - 140) = 0,   %CF=(r28{0} - 4) <u 136
              Live variables: eax,  ebp_1,  esp_1 in proc proc27
result:    0 *32* eax := -
result:    0 *32* esp_1 := -
result:    0 *32** ebp_1 := -
dest is not lib
call:   45 {*32* eax, *32* ecx, *32* edx} := CALL ReadProcessMemory(
              )
              Reaching definitions: r0=truncu(32,16,r24{38}),   r24=r24{38},   r25=r29{14} - 132,   r26=r26{32} + 12,
                r28=r28{224} - 24,   r29=r29{14},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 144]=m[r28{0} + 4]{0},   m[r28{0} - 148]=%pc,   tmp1=r26{32},
                %flags=ADDFLAGS32( r26{32}, 12, r26{32} + 12 ),   %ZF=ADDFLAGS32( r26{32}, 12, r26{32} + 12 ),
                %CF=ADDFLAGS32( r26{32}, 12, r26{32} + 12 )
              Live variables: eax in proc proc27
result:    0 *32* eax := -
dest is not lib
call:   67 {*32* eax, *v* ecx, *v* edx} := CALL ReadProcessMemory(
              )
              Reaching definitions: r0=truncu(32,16,r24{60}),   r24=r24{60},   r25=r29{14} - 40,   r26=r26{57},
                r28=r28{224} - 44,   r29=r29{14},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 144]=m[r28{0} + 4]{0},   m[r28{0} - 148]=%pc,   tmp1=r24{45},
                %flags=LOGICALFLAGS32( r24{45} ),   %ZF=LOGICALFLAGS32( r24{45} ),   %CF=LOGICALFLAGS32( r24{45} )
              Live variables: eax in proc proc27
result:    0 *32* eax := -
dest is not lib
call:   76 {*32* eax, *32* ecx, *32* edx, *v** esp_3} := CALL Sleep(
                *DWORD* m[esp_4 - 44] := m[esp_4 - 44]
              )
              Reaching definitions: r0=truncu(32,16,r24{60}),   r24=r24{67},   r25=r25{67},   r26=r26{67},
                r28=r28{224} - 48,   r29=r29{14},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 144]=m[r28{0} + 4]{0},   m[r28{0} - 148]=%pc,   tmp1=r24{67},
                %flags=LOGICALFLAGS32( r24{67} ),   %ZF=LOGICALFLAGS32( r24{67} ),   %CF=LOGICALFLAGS32( r24{67} )
              Live variables: esp_3 in proc proc27
result:    0 *v** esp_3 := -
dest is not lib
call:  104 {*32* eax, *32* ecx, *32* edx} := CALL ReadProcessMemory(
              )
              Reaching definitions: r0=truncu(32,16,r24{94}),   r24=r24{94},   r25=r25{98},   r26=r29{14} - 124,
                r28=r28{224} - 64,   r29=r29{14},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 144]=m[r28{0} + 4]{0},   m[r28{0} - 148]=%pc,   tmp1=r24{67},
                %flags=LOGICALFLAGS32( r24{67} ),   %ZF=LOGICALFLAGS32( r24{67} ),   %CF=LOGICALFLAGS32( r24{67} )
              Live variables: eax in proc proc27
result:    0 *32* eax := -
dest is not lib
call:  114 {*32* eax, *v* ecx, *v* edx} := CALL proc6(
                *DWORD* m[esp_4 - 64] := m[esp_4 - 64]
              )
              Reaching definitions: r0=truncu(32,16,r24{94}),   r24=r24{104},   r25=r25{104},   r26=r26{104},
                r28=r28{224} - 68,   r29=r29{14},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 144]=m[r28{0} + 4]{0},   m[r28{0} - 148]=%pc,   tmp1=r24{104},
                %flags=LOGICALFLAGS32( r24{104} ),   %ZF=LOGICALFLAGS32( r24{104} ),   %CF=LOGICALFLAGS32( r24{104} )
              Live variables: eax in proc proc27
result:    0 *32* eax := -
dest is not lib
call:  132 {*32* eax, *v* ecx, *v* edx} := CALL GetModuleFileNameW(
                *HMODULE* m[esp_4 - 72] := m[esp_4 - 72]
                *LPWSTR* m[esp_4 - 68] := m[esp_4 - 68]
                *DWORD* m[esp_4 - 64] := m[esp_4 - 64]
              )
              Reaching definitions: r0=truncu(32,16,r24{123}),   r24=r24{123},   r25=r25{114},   r26=r26{119},
                r28=r28{224} - 76,   r29=r29{14},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 144]=m[r28{0} + 4]{0},   m[r28{0} - 148]=%pc,   tmp1=(r28{224} - 68) + 4,
                %flags=ADDFLAGS32( r28{224} - 64, 4, r28{224} - 60 ),
                %ZF=ADDFLAGS32( r28{224} - 64, 4, r28{224} - 60 ),   %CF=ADDFLAGS32( r28{224} - 64, 4, r28{224} - 60 )
              Live variables:  in proc proc27
dest is not lib
call:  139 {*u32* eax, *32* ecx, *v* edx} := CALL lstrlenW(
                *wchar_t** m[esp_4 - 64] := m[esp_4 - 64]
              )
              Reaching definitions: r0=truncu(32,16,r24{123}),   r24=r24{132},   r25=r25{133},   r26=r26{132},
                r28=r28{224} - 68,   r29=r29{14},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 144]=m[r28{0} + 4]{0},   m[r28{0} - 148]=%pc,   tmp1=(r28{224} - 68) + 4,
                %flags=ADDFLAGS32( r28{224} - 64, 4, r28{224} - 60 ),
                %ZF=ADDFLAGS32( r28{224} - 64, 4, r28{224} - 60 ),   %CF=ADDFLAGS32( r28{224} - 64, 4, r28{224} - 60 )
              Live variables: eax,  ecx in proc proc27
result:    0 *u32* eax := -
result:    0 *32* ecx := -
dest is not lib
call:  189 {*32* eax, *32* ecx, *32* edx} := CALL WriteProcessMemory(
              )
              Reaching definitions: r0=truncu(32,16,r24{179}),   r24=r24{179},   r25=r25{183},   r26=r26{176},
                r28=r28{163} - 24,   r29=r29{163},   m[r28{0} + 4]=m[r28{0} + 4]{163},
                m[r28{0} - 4]=m[r28{0} - 4]{163},   m[r28{0} - 144]=m[r28{0} - 144]{163},
                m[r28{0} - 148]=m[r28{0} - 148]{163},   m[r28{0} - 4]=m[r28{0} - 4]{163},
                m[r28{0} - 144]=m[r28{0} - 144]{163},   m[r28{0} - 148]=m[r28{0} - 148]{163},   <all>=<all>{163},
                tmp1=tmp1{165},   %flags=LOGICALFLAGS32( r25{171} & 0xffff ),   %ZF=LOGICALFLAGS32( r25{171} & 0xffff )
                %CF=LOGICALFLAGS32( r25{171} & 0xffff )
              Live variables: eax in proc proc27
result:    0 *32* eax := -
dest is not lib
call:  213 {*32* eax, *32* ecx, *32* edx} := CALL WriteProcessMemory(
              )
              Reaching definitions: r0=truncu(32,16,r29{163} - 124),   r24=r29{163} - 124,   r25=r25{204},
                r26=r26{207},   r28=r28{163} - 44,   r29=r29{163},   m[r28{0} + 4]=m[r28{0} + 4]{163},
                m[r28{0} - 4]=m[r28{0} - 4]{163},   m[r28{0} - 144]=m[r28{0} - 144]{163},
                m[r28{0} - 148]=m[r28{0} - 148]{163},   m[r28{0} - 4]=m[r28{0} - 4]{163},
                m[r28{0} - 144]=m[r28{0} - 144]{163},   m[r28{0} - 148]=m[r28{0} - 148]{163},   <all>=<all>{163},
                tmp1=r24{189},   %flags=LOGICALFLAGS32( r24{189} ),   %ZF=LOGICALFLAGS32( r24{189} ),
                %CF=LOGICALFLAGS32( r24{189} )
              Live variables:  in proc proc27
dest is not lib
call:   10 {*32* eax, *8* cl, *8* dl, *32* ecx, *32* r26} := CALL proc35(
                *32* local0 := param1
                *u8** local1 := param2
                *u32*** local2 := 0
                *u32* local3 := 10
                *u8* dl := param3
                *j32* ecx := param4
              )
              Reaching definitions: r10=r10{0},   r25=r25{0},   r26=r26{0},   r28=r28{0} - 16,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=10,   m[r28{0} - 8]=0,
                m[r28{0} - 12]=m[r28{0} + 4]{0},   m[r28{0} - 16]=%pc,   m[r28{0} - 28]=m[r28{0} - 28]{0}
              Live variables: cl,  dl,  eax,  ecx in proc proc30
result:    0 *32* eax := -
result:    0 *8* cl := -
result:    0 *8* dl := -
result:    0 *32* ecx := -
dest is not lib
call:   15 {*32* eax_1, *j32* ecx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local0 := eax
                *c** local1 := "!&="
              )
              Reaching definitions: r9=r9{0},   r10=r10{0},   r11=r11{0},   r24=r24{9},   r27=r27{0},   r28=r28{0} - 64
                r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{0},
                m[r28{0} - 12]=m[r28{0} - 12]{0},   m[r28{0} - 24]=m[r28{0} - 24]{0},
                m[r28{0} - 28]=m[r28{0} - 28]{0},   m[r28{0} - 32]=m[r28{0} - 32]{0},
                m[r28{0} - 36]=m[r28{0} - 36]{0},   m[r28{0} - 40]=m[r28{0} - 40]{0},
                m[r28{0} - 44]=m[r28{0} - 44]{0},   m[r28{0} - 48]=m[r28{0} - 48]{0},
                m[r28{0} - 52]=m[r28{0} - 52]{0},   m[r28{0} - 56]=0x4052c4,   m[r28{0} - 60]=r24{9},
                m[r28{0} - 64]=%pc,   m[r28{0} - 68]=m[r28{0} - 68]{0},   m[r28{0} - 72]=m[r28{0} - 72]{0},
                m[r28{0} - 76]=m[r28{0} - 76]{0},   m[r28{0} - 80]=m[r28{0} - 80]{0},
                m[r28{0} - 96]=m[r28{0} - 96]{0},   tmp1=r28{0} - 4,   %flags=SUBFLAGS32( r28{0} - 4, 48, r28{0} - 52 )
                %ZF=(r28{0} - 52) = 0,   %CF=(r28{0} - 4) <u 48
              Live variables: eax_1,  ecx in proc proc31
result:    0 *32* eax_1 := -
result:    0 *j32* ecx := -
dest is not lib
call:   25 {*8** eax, *8* al, *u32* cl, *j8* bl, *32* ecx, *v* esp} := CALL proc15(
                *8** local0 := 0x40573e
                *u32** local1 := 0x40551c
                *u32* cl := param2
                *j8* bl := param4
                *j32* ecx := ecx
                *32* ebx := param5
              )
              Reaching definitions: r9=r9{0},   r10=r10{0},   r11=r11{0},   r24=r24{15},   r25=r25{15},   r26=r26{15},
                r27=r27{0},   r28=r28{0} - 64,   r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 12]=m[r28{0} - 12]{0},   m[r28{0} - 16]=0,
                m[r28{0} - 20]=r24{15},   m[r28{0} - 24]=m[r28{0} - 24]{0},   m[r28{0} - 28]=m[r28{0} - 28]{0},
                m[r28{0} - 32]=m[r28{0} - 32]{0},   m[r28{0} - 36]=m[r28{0} - 36]{0},
                m[r28{0} - 40]=m[r28{0} - 40]{0},   m[r28{0} - 44]=m[r28{0} - 44]{0},
                m[r28{0} - 48]=m[r28{0} - 48]{0},   m[r28{0} - 52]=m[r28{0} - 52]{0},   m[r28{0} - 56]=0x40551c,
                m[r28{0} - 60]=0x40573e,   m[r28{0} - 64]=%pc,   m[r28{0} - 68]=m[r28{0} - 68]{0},
                m[r28{0} - 72]=m[r28{0} - 72]{0},   m[r28{0} - 76]=m[r28{0} - 76]{0},
                m[r28{0} - 80]=m[r28{0} - 80]{0},   m[r28{0} - 96]=m[r28{0} - 96]{0},   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 48, r28{0} - 52 ),   %ZF=(r28{0} - 52) = 0,   %CF=(r28{0} - 4) <u 48
              Live variables: al,  bl,  cl,  eax in proc proc31
result:    0 *8** eax := -
result:    0 *8* al := -
result:    0 *u32* cl := -
result:    0 *j8* bl := -
dest is not lib
call:   39 {*8** eax, *v* ecx, *v* esp} := CALL proc6(
                *DWORD* local2 := 10
              )
              Reaching definitions: r8=r8{25},   r9=r9{25},   r10=r10{0},   r11=r11{25},   r24=r24{25},   r25=r25{25},
                r26=r26{25},   r27=r27{0},   r28=(r28{0} - 64) + 4,   r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 12]=m[r28{0} - 12]{0},   m[r28{0} - 16]=r24{25},
                m[r28{0} - 20]=r24{15},   m[r28{0} - 24]=m[r28{0} - 24]{0},   m[r28{0} - 28]=m[r28{0} - 28]{0},
                m[r28{0} - 32]=m[r28{0} - 32]{0},   m[r28{0} - 36]=m[r28{0} - 36]{0},
                m[r28{0} - 40]=m[r28{0} - 40]{0},   m[r28{0} - 44]=m[r28{0} - 44]{0},
                m[r28{0} - 48]=m[r28{0} - 48]{0},   m[r28{0} - 52]=m[r28{0} - 52]{0},   m[r28{0} - 56]=10,
                m[r28{0} - 60]=%pc,   m[r28{0} - 64]=%pc,   m[r28{0} - 68]=m[r28{0} - 68]{0},
                m[r28{0} - 72]=m[r28{0} - 72]{0},   m[r28{0} - 76]=m[r28{0} - 76]{0},
                m[r28{0} - 80]=m[r28{0} - 80]{0},   m[r28{0} - 96]=m[r28{0} - 96]{0},   tmp1=r24{25},
                %flags=SUBFLAGS32( m[(r28{0} - 4) - 12], 0, r24{25} ),   %ZF=r24{25} = 0,
                %CF=m[(r28{0} - 4) - 12] <u 0
              Live variables: eax in proc proc31
result:    0 *8** eax := -
dest is not lib
call:   51 {*8** eax, *v* ecx, *v* esp} := CALL proc6(
                *DWORD* local2 := 10
              )
              Reaching definitions: r8=r8{25},   r9=r9{25},   r10=r10{0},   r11=r11{25},   r24=r24{39},   r25=r24{39},
                r26=r26{39},   r27=r27{0},   r28=r28{0} - 60,   r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 12]=m[r28{0} - 12]{0},   m[r28{0} - 16]=r24{25},
                m[r28{0} - 20]=r24{15},   m[r28{0} - 24]=m[r28{0} - 24]{0},   m[r28{0} - 28]=r24{39},
                m[r28{0} - 32]=m[r28{0} - 32]{0},   m[r28{0} - 36]=m[r28{0} - 36]{0},   m[r28{0} - 40]=r24{39},
                m[r28{0} - 44]=m[r28{0} - 44]{0},   m[r28{0} - 48]=m[r28{0} - 48]{0},
                m[r28{0} - 52]=m[r28{0} - 52]{0},   m[r28{0} - 56]=10,   m[r28{0} - 60]=%pc,   m[r28{0} - 64]=%pc,
                m[r28{0} - 68]=m[r28{0} - 68]{0},   m[r28{0} - 72]=m[r28{0} - 72]{0},
                m[r28{0} - 76]=m[r28{0} - 76]{0},   m[r28{0} - 80]=m[r28{0} - 80]{0},
                m[r28{0} - 96]=m[r28{0} - 96]{0},   tmp1=((r28{0} - 64) + 4) + 4,
                %flags=ADDFLAGS32( r28{0} - 56, 4, r28{0} - 52 ),   %ZF=ADDFLAGS32( r28{0} - 56, 4, r28{0} - 52 ),
                %CF=ADDFLAGS32( r28{0} - 56, 4, r28{0} - 52 )
              Live variables: eax in proc proc31
result:    0 *8** eax := -
dest is not lib
call:   63 {*32* eax, *v* ecx, *v* esp} := CALL proc6(
                *DWORD* local2 := 40
              )
              Reaching definitions: r8=r8{25},   r9=r9{25},   r10=r10{0},   r11=r11{25},   r24=r24{51},   r25=r25{51},
                r26=r24{51},   r27=r27{0},   r28=r28{0} - 60,   r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 12]=r24{51},   m[r28{0} - 16]=r24{25},
                m[r28{0} - 20]=r24{15},   m[r28{0} - 24]=m[r28{0} - 24]{0},   m[r28{0} - 28]=r24{39},
                m[r28{0} - 32]=m[r28{0} - 32]{0},   m[r28{0} - 36]=m[r28{0} - 36]{0},   m[r28{0} - 40]=r24{39},
                m[r28{0} - 44]=r24{51},   m[r28{0} - 48]=m[r28{0} - 48]{0},   m[r28{0} - 52]=m[r28{0} - 52]{0},
                m[r28{0} - 56]=40,   m[r28{0} - 60]=%pc,   m[r28{0} - 64]=%pc,   m[r28{0} - 68]=m[r28{0} - 68]{0},
                m[r28{0} - 72]=m[r28{0} - 72]{0},   m[r28{0} - 76]=m[r28{0} - 76]{0},
                m[r28{0} - 80]=m[r28{0} - 80]{0},   m[r28{0} - 96]=m[r28{0} - 96]{0},   tmp1=(r28{0} - 60) + 4,
                %flags=ADDFLAGS32( r28{0} - 56, 4, r28{0} - 52 ),   %ZF=ADDFLAGS32( r28{0} - 56, 4, r28{0} - 52 ),
                %CF=ADDFLAGS32( r28{0} - 56, 4, r28{0} - 52 )
              Live variables: eax in proc proc31
result:    0 *32* eax := -
dest is not lib
call:   75 {*8** eax, *v* ecx, *v* esp} := CALL proc6(
                *DWORD* local2 := 255
              )
              Reaching definitions: r8=r8{25},   r9=r9{25},   r10=r10{0},   r11=r11{25},   r24=r24{63},   r25=r25{63},
                r26=r26{63},   r27=r27{0},   r28=r28{0} - 60,   r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 12]=r24{51},   m[r28{0} - 16]=r24{25},
                m[r28{0} - 20]=r24{15},   m[r28{0} - 24]=r24{63},   m[r28{0} - 28]=r24{39},
                m[r28{0} - 32]=m[r28{0} - 32]{0},   m[r28{0} - 36]=m[r28{0} - 36]{0},   m[r28{0} - 40]=r24{39},
                m[r28{0} - 44]=r24{51},   m[r28{0} - 48]=r24{63},   m[r28{0} - 52]=m[r28{0} - 52]{0},
                m[r28{0} - 56]=255,   m[r28{0} - 60]=%pc,   m[r28{0} - 64]=%pc,   m[r28{0} - 68]=m[r28{0} - 68]{0},
                m[r28{0} - 72]=m[r28{0} - 72]{0},   m[r28{0} - 76]=m[r28{0} - 76]{0},
                m[r28{0} - 80]=m[r28{0} - 80]{0},   m[r28{0} - 96]=m[r28{0} - 96]{0},   tmp1=(r28{0} - 60) + 4,
                %flags=ADDFLAGS32( r28{0} - 56, 4, r28{0} - 52 ),   %ZF=ADDFLAGS32( r28{0} - 56, 4, r28{0} - 52 ),
                %CF=ADDFLAGS32( r28{0} - 56, 4, r28{0} - 52 )
              Live variables: eax in proc proc31
result:    0 *8** eax := -
dest is not lib
call:   91 {*32* eax, *8* al, *j32* ecx, *v* esp} := CALL proc12(
                *8** local0 := eax
                *8** local1 := eax
              )
              Reaching definitions: r8=r8{25},   r9=r9{25},   r10=r10{0},   r11=r11{25},   r24=r24{39},   r25=r24{75},
                r26=r24{25},   r27=r27{0},   r28=r28{0} - 64,   r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 12]=r24{51},   m[r28{0} - 16]=r24{25},
                m[r28{0} - 20]=r24{15},   m[r28{0} - 24]=r24{63},   m[r28{0} - 28]=r24{39},
                m[r28{0} - 32]=m[r28{0} - 32]{0},   m[r28{0} - 36]=r24{75},   m[r28{0} - 40]=r24{39},
                m[r28{0} - 44]=r24{51},   m[r28{0} - 48]=r24{63},   m[r28{0} - 52]=r24{75},   m[r28{0} - 56]=r24{25},
                m[r28{0} - 60]=r24{39},   m[r28{0} - 64]=%pc,   m[r28{0} - 68]=m[r28{0} - 68]{0},
                m[r28{0} - 72]=m[r28{0} - 72]{0},   m[r28{0} - 76]=m[r28{0} - 76]{0},
                m[r28{0} - 80]=m[r28{0} - 80]{0},   m[r28{0} - 96]=m[r28{0} - 96]{0},   tmp1=(r28{0} - 60) + 4,
                %flags=ADDFLAGS32( r28{0} - 56, 4, r28{0} - 52 ),   %ZF=ADDFLAGS32( r28{0} - 56, 4, r28{0} - 52 ),
                %CF=ADDFLAGS32( r28{0} - 56, 4, r28{0} - 52 )
              Live variables: ecx in proc proc31
result:    0 *j32* ecx := -
dest is not lib
call:  102 {*8** eax, *8* al, *u32* cl, *j8* bl, *32* ecx, *v* esp} := CALL proc15(
                *8** local0 := 0
                *u32** local1 := 0x405520
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param5
              )
              Reaching definitions: r8=r8{91},   r9=r9{25},   r10=r10{0},   r11=r11{25},   r24=r24{91},   r25=r25{91},
                r26=r26{91},   r27=r27{0},   r28=r28{0} - 64,   r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 12]=r24{51},   m[r28{0} - 16]=r24{25},
                m[r28{0} - 20]=r24{15},   m[r28{0} - 24]=r24{63},   m[r28{0} - 28]=r24{39},
                m[r28{0} - 32]=m[r28{0} - 32]{0},   m[r28{0} - 36]=r24{75},   m[r28{0} - 40]=r24{39},
                m[r28{0} - 44]=r24{51},   m[r28{0} - 48]=r24{63},   m[r28{0} - 52]=r24{75},   m[r28{0} - 56]=0x405520,
                m[r28{0} - 60]=0,   m[r28{0} - 64]=%pc,   m[r28{0} - 68]=m[r28{0} - 68]{0},
                m[r28{0} - 72]=m[r28{0} - 72]{0},   m[r28{0} - 76]=m[r28{0} - 76]{0},
                m[r28{0} - 80]=m[r28{0} - 80]{0},   m[r28{0} - 96]=m[r28{0} - 96]{0},   tmp1=(r28{0} - 64) + 4,
                %flags=ADDFLAGS32( r28{0} - 60, 8, r28{0} - 52 ),   %ZF=ADDFLAGS32( r28{0} - 60, 8, r28{0} - 52 ),
                %CF=ADDFLAGS32( r28{0} - 60, 8, r28{0} - 52 )
              Live variables: bl,  cl,  eax in proc proc31
result:    0 *8** eax := -
result:    0 *u32* cl := -
result:    0 *j8* bl := -
dest is not lib
call:  116 {*32* eax, *8* al, *j32* ecx, *v* esp} := CALL proc12(
                *8** local0 := eax
                *8** local1 := eax
              )
              Reaching definitions: r8=r8{102},   r9=r9{102},   r10=r10{0},   r11=r11{102},   r24=r24{102},
                r25=r24{102},   r26=r24{51},   r27=r27{0},   r28=r28{0} - 64,   r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 12]=r24{51},   m[r28{0} - 16]=r24{102},
                m[r28{0} - 20]=r24{15},   m[r28{0} - 24]=r24{63},   m[r28{0} - 28]=r24{39},
                m[r28{0} - 32]=m[r28{0} - 32]{0},   m[r28{0} - 36]=r24{75},   m[r28{0} - 40]=r24{39},
                m[r28{0} - 44]=r24{51},   m[r28{0} - 48]=r24{63},   m[r28{0} - 52]=r24{75},   m[r28{0} - 56]=r24{102},
                m[r28{0} - 60]=r24{51},   m[r28{0} - 64]=%pc,   m[r28{0} - 68]=m[r28{0} - 68]{0},
                m[r28{0} - 72]=m[r28{0} - 72]{0},   m[r28{0} - 76]=m[r28{0} - 76]{0},
                m[r28{0} - 80]=m[r28{0} - 80]{0},   m[r28{0} - 96]=m[r28{0} - 96]{0},   tmp1=(r28{0} - 64) + 4,
                %flags=ADDFLAGS32( r28{0} - 60, 8, r28{0} - 52 ),   %ZF=ADDFLAGS32( r28{0} - 60, 8, r28{0} - 52 ),
                %CF=ADDFLAGS32( r28{0} - 60, 8, r28{0} - 52 )
              Live variables: ecx in proc proc31
result:    0 *j32* ecx := -
dest is not lib
call:  127 {*32* eax, *8* al, *u32* cl, *j8* bl, *32* ecx, *v* esp} := CALL proc15(
                *8** local0 := 0
                *u32** local1 := 0x405524
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param5
              )
              Reaching definitions: r8=r8{116},   r9=r9{102},   r10=r10{0},   r11=r11{102},   r24=r24{116},
                r25=r25{116},   r26=r26{116},   r27=r27{0},   r28=r28{0} - 64,   r29=r28{0} - 4,   m[r28{0} - 4]=r29{0}
                m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 12]=r24{51},   m[r28{0} - 16]=r24{102},
                m[r28{0} - 20]=r24{15},   m[r28{0} - 24]=r24{63},   m[r28{0} - 28]=r24{39},
                m[r28{0} - 32]=m[r28{0} - 32]{0},   m[r28{0} - 36]=r24{75},   m[r28{0} - 40]=r24{39},
                m[r28{0} - 44]=r24{51},   m[r28{0} - 48]=r24{63},   m[r28{0} - 52]=r24{75},   m[r28{0} - 56]=0x405524,
                m[r28{0} - 60]=0,   m[r28{0} - 64]=%pc,   m[r28{0} - 68]=m[r28{0} - 68]{0},
                m[r28{0} - 72]=m[r28{0} - 72]{0},   m[r28{0} - 76]=m[r28{0} - 76]{0},
                m[r28{0} - 80]=m[r28{0} - 80]{0},   m[r28{0} - 96]=m[r28{0} - 96]{0},   tmp1=(r28{0} - 64) + 4,
                %flags=ADDFLAGS32( r28{0} - 60, 8, r28{0} - 52 ),   %ZF=ADDFLAGS32( r28{0} - 60, 8, r28{0} - 52 ),
                %CF=ADDFLAGS32( r28{0} - 60, 8, r28{0} - 52 )
              Live variables: bl,  cl,  eax in proc proc31
result:    0 *32* eax := -
result:    0 *u32* cl := -
result:    0 *j8* bl := -
dest is not lib
call:  141 {*32* eax, *j32* ecx, *v* esp} := CALL lstrcpyA(
              )
              Reaching definitions: r8=r8{127},   r9=r9{127},   r10=r10{0},   r11=r11{127},   r24=r24{127},
                r25=r24{63},   r26=r26{127},   r27=r27{0},   r28=r28{0} - 64,   r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 12]=r24{51},   m[r28{0} - 16]=r24{127},
                m[r28{0} - 20]=r24{15},   m[r28{0} - 24]=r24{63},   m[r28{0} - 28]=r24{39},
                m[r28{0} - 32]=m[r28{0} - 32]{0},   m[r28{0} - 36]=r24{75},   m[r28{0} - 40]=r24{39},
                m[r28{0} - 44]=r24{51},   m[r28{0} - 48]=r24{63},   m[r28{0} - 52]=r24{75},   m[r28{0} - 56]=r24{127},
                m[r28{0} - 60]=r24{63},   m[r28{0} - 64]=%pc,   m[r28{0} - 68]=m[r28{0} - 68]{0},
                m[r28{0} - 72]=m[r28{0} - 72]{0},   m[r28{0} - 76]=m[r28{0} - 76]{0},
                m[r28{0} - 80]=m[r28{0} - 80]{0},   m[r28{0} - 96]=m[r28{0} - 96]{0},   tmp1=(r28{0} - 64) + 4,
                %flags=ADDFLAGS32( r28{0} - 60, 8, r28{0} - 52 ),   %ZF=ADDFLAGS32( r28{0} - 60, 8, r28{0} - 52 ),
                %CF=ADDFLAGS32( r28{0} - 60, 8, r28{0} - 52 )
              Live variables: ecx in proc proc31
result:    0 *j32* ecx := -
dest is not lib
call:  149 {*8** eax, *8* al, *8* cl_1, *8* bl, *32* ecx, *v* esp} := CALL proc15(
                *8** local3 := 0
                *u32** local4 := 0x405528
                *u32* cl := cl
                *j8* bl := bl
                *j32* ecx := ecx
                *32* ebx := param5
              )
              Reaching definitions: r8=r8{127},   r9=r9{127},   r10=r10{0},   r11=r11{127},   r24=r24{141},
                r25=r25{141},   r26=r26{141},   r27=r27{0},   r28=r28{0} - 72,   r29=r28{0} - 4,   m[r28{0} - 4]=r29{0}
                m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 12]=r24{51},   m[r28{0} - 16]=r24{127},
                m[r28{0} - 20]=r24{15},   m[r28{0} - 24]=r24{63},   m[r28{0} - 28]=r24{39},
                m[r28{0} - 32]=m[r28{0} - 32]{0},   m[r28{0} - 36]=r24{75},   m[r28{0} - 40]=r24{39},
                m[r28{0} - 44]=r24{51},   m[r28{0} - 48]=r24{63},   m[r28{0} - 52]=r24{75},   m[r28{0} - 56]=r24{127},
                m[r28{0} - 60]=r24{63},   m[r28{0} - 64]=0x405528,   m[r28{0} - 68]=0,   m[r28{0} - 72]=%pc,
                m[r28{0} - 76]=m[r28{0} - 76]{0},   m[r28{0} - 80]=m[r28{0} - 80]{0},
                m[r28{0} - 96]=m[r28{0} - 96]{0},   tmp1=(r28{0} - 64) + 4,
                %flags=ADDFLAGS32( r28{0} - 60, 8, r28{0} - 52 ),   %ZF=ADDFLAGS32( r28{0} - 60, 8, r28{0} - 52 ),
                %CF=ADDFLAGS32( r28{0} - 60, 8, r28{0} - 52 )
              Live variables: bl,  eax in proc proc31
result:    0 *8** eax := -
result:    0 *8* bl := -
dest is not lib
call:  163 {*32* eax, *8* al, *32* ecx, *v* esp} := CALL proc12(
                *8** local3 := eax
                *8** local5 := eax
              )
              Reaching definitions: r8=r8{149},   r9=r9{149},   r10=r10{0},   r11=r11{149},   r24=r24{75},
                r25=r25{149},   r26=r24{149},   r27=r27{0},   r28=r28{0} - 72,   r29=r28{0} - 4,   m[r28{0} - 4]=r29{0}
                m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 12]=r24{51},   m[r28{0} - 16]=r24{149},
                m[r28{0} - 20]=r24{15},   m[r28{0} - 24]=r24{63},   m[r28{0} - 28]=r24{39},
                m[r28{0} - 32]=m[r28{0} - 32]{0},   m[r28{0} - 36]=r24{75},   m[r28{0} - 40]=r24{39},
                m[r28{0} - 44]=r24{51},   m[r28{0} - 48]=r24{63},   m[r28{0} - 52]=r24{75},   m[r28{0} - 56]=r24{127},
                m[r28{0} - 60]=r24{63},   m[r28{0} - 64]=r24{149},   m[r28{0} - 68]=r24{75},   m[r28{0} - 72]=%pc,
                m[r28{0} - 76]=m[r28{0} - 76]{0},   m[r28{0} - 80]=m[r28{0} - 80]{0},
                m[r28{0} - 96]=m[r28{0} - 96]{0},   tmp1=(r28{0} - 72) + 4,
                %flags=ADDFLAGS32( r28{0} - 68, 8, r28{0} - 60 ),   %ZF=ADDFLAGS32( r28{0} - 68, 8, r28{0} - 60 ),
                %CF=ADDFLAGS32( r28{0} - 68, 8, r28{0} - 60 )
              Live variables: al,  edx in proc proc31
result:    0 *8* al := -
dest is not lib
call:  175 {*32* eax, *8* cl_1, *u8* dl, *j32* ecx, *v* esp} := CALL proc30(
                *32* local6 := param1
                *8** local5 := eax
                *u8* dl := param3
                *union* ecx := eax
              )
              Reaching definitions: r8=r8{163},   r9=r9{149},   r10=r10{0},   r11=r11{149},   r24=r24{163},
                r25=r24{39},   r26=r26{163},   r27=r27{0},   r28=(r28{0} - 72) + 4,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=0,   m[r28{0} - 12]=r24{51},   m[r28{0} - 16]=r24{149},
                m[r28{0} - 20]=r24{15},   m[r28{0} - 24]=r24{63},   m[r28{0} - 28]=r24{39},   m[r28{0} - 32]=0,
                m[r28{0} - 36]=r24{75},   m[r28{0} - 40]=r24{39},   m[r28{0} - 44]=r24{51},   m[r28{0} - 48]=r24{63},
                m[r28{0} - 52]=r24{75},   m[r28{0} - 56]=r24{127},   m[r28{0} - 60]=r24{63},   m[r28{0} - 64]=r24{39},
                m[r28{0} - 68]=%pc,   m[r28{0} - 72]=%pc,   m[r28{0} - 76]=m[r28{0} - 76]{0},
                m[r28{0} - 80]=m[r28{0} - 80]{0},   m[r28{0} - 96]=m[r28{0} - 96]{0},   tmp1=(r28{0} - 72) + 4,
                %flags=ADDFLAGS32( r28{0} - 68, 8, r28{0} - 60 ),   %ZF=ADDFLAGS32( r28{0} - 68, 8, r28{0} - 60 ),
                %CF=ADDFLAGS32( r28{0} - 68, 8, r28{0} - 60 )
              Live variables: dl,  eax,  ecx in proc proc31
result:    0 *32* eax := -
result:    0 *u8* dl := -
result:    0 *j32* ecx := -
dest is not lib
call:  186 {*32* eax, *8* cl_1, *8* dl, *32* ecx, *v* esp} := CALL proc30(
                *32* local6 := param1
                *8** local5 := eax
                *u8* dl := dl
                *j32* ecx := ecx
              )
              Reaching definitions: r8=r8{163},   r9=r9{175},   r10=r10{175},   r11=r11{149},   r24=r24{175},
                r25=r25{175},   r26=r24{51},   r27=r27{0},   r28=r28{0} - 68,   r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=r24{175},   m[r28{0} - 12]=r24{51},   m[r28{0} - 16]=r24{149},   m[r28{0} - 20]=r24{15},
                m[r28{0} - 24]=r24{63},   m[r28{0} - 28]=r24{39},   m[r28{0} - 32]=0,   m[r28{0} - 36]=r24{75},
                m[r28{0} - 40]=r24{39},   m[r28{0} - 44]=r24{51},   m[r28{0} - 48]=r24{63},   m[r28{0} - 52]=r24{75},
                m[r28{0} - 56]=r24{127},   m[r28{0} - 60]=r24{63},   m[r28{0} - 64]=r24{51},   m[r28{0} - 68]=%pc,
                m[r28{0} - 72]=%pc,   m[r28{0} - 76]=m[r28{0} - 76]{0},   m[r28{0} - 80]=m[r28{0} - 80]{0},
                m[r28{0} - 96]=m[r28{0} - 96]{0},   tmp1=((r28{0} - 72) + 4) + 4,
                %flags=ADDFLAGS32( r28{0} - 64, 4, r28{0} - 60 ),   %ZF=ADDFLAGS32( r28{0} - 64, 4, r28{0} - 60 ),
                %CF=ADDFLAGS32( r28{0} - 64, 4, r28{0} - 60 )
              Live variables: cl_1,  dl,  eax in proc proc31
result:    0 *32* eax := -
result:    0 *8* cl_1 := -
result:    0 *8* dl := -
dest is not lib
call:   14 {*i32* eax, *v* ecx, *v* edx, *v* esp} := CALL lstrcmpA(
              )
              Reaching definitions: r8=r8{0},   r28=r28{0} - 32,   r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},
                m[r28{0} - 12]=m[r28{0} - 12]{0},   m[r28{0} - 16]=m[r28{0} - 16]{0},
                m[r28{0} - 20]=m[r28{0} - 20]{0},   m[r28{0} - 24]=0x40552c,   m[r28{0} - 28]=0x405578,
                m[r28{0} - 32]=%pc,   m[r28{0} - 44]=m[r28{0} - 44]{0},   m[r28{0} - 48]=m[r28{0} - 48]{0},
                m[r28{0} - 52]=m[r28{0} - 52]{0},   tmp1=r28{0} - 4,   %flags=SUBFLAGS32( r28{0} - 4, 16, r28{0} - 20 )
                %ZF=(r28{0} - 20) = 0,   %CF=(r28{0} - 4) <u 16
              Live variables: eax,  ecx,  edx in proc proc33
result:    0 *i32* eax := -
result:    0 *v* ecx := -
result:    0 *v* edx := -
dest is not lib
call:   90 {*32* eax, *8* al, *32* ecx, *32* edx, *v* esp} := CALL proc16(
                *8** local4 := 0x4055a1
                *union* local5 := 0x405530
                *i32* eax := eax
              )
              Reaching definitions: r8=r8{0},   r24=r24{14},   r25=r25{14},   r26=r26{14},   r28=r28{0} - 40,
                r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},   m[r28{0} - 12]=m[r28{0} - 12]{0},
                m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 20]=m[r28{0} - 20]{0},   m[r28{0} - 24]=0x40552c,
                m[r28{0} - 28]=0x405578,   m[r28{0} - 32]=0x405530,   m[r28{0} - 36]=0x4055a1,   m[r28{0} - 40]=%pc,
                m[r28{0} - 44]=m[r28{0} - 44]{0},   m[r28{0} - 48]=m[r28{0} - 48]{0},
                m[r28{0} - 52]=m[r28{0} - 52]{0},   tmp1=r24{14},   %flags=LOGICALFLAGS32( r24{14} ),
                %ZF=LOGICALFLAGS32( r24{14} ),   %CF=LOGICALFLAGS32( r24{14} )
              Live variables: eax in proc proc33
result:    0 *32* eax := -
dest is not lib
call:  103 {*8** eax_1, *v* ecx, *v* edx, *v* esp} := CALL proc6(
                *DWORD* local5 := 261
              )
              Reaching definitions: r8=r8{90},   r24=r24{90},   r25=r25{90},   r26=r26{90},   r28=(r28{0} - 40) + 4,
                r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},   m[r28{0} - 12]=m[r28{0} - 12]{0},   m[r28{0} - 16]=0,
                m[r28{0} - 20]=m[r28{0} - 20]{0},   m[r28{0} - 24]=0x40552c,   m[r28{0} - 28]=0x405578,
                m[r28{0} - 32]=261,   m[r28{0} - 36]=%pc,   m[r28{0} - 40]=%pc,   m[r28{0} - 44]=m[r28{0} - 44]{0},
                m[r28{0} - 48]=m[r28{0} - 48]{0},   m[r28{0} - 52]=m[r28{0} - 52]{0},   tmp1=r24{90},
                %flags=LOGICALFLAGS32( r24{90} ),   %ZF=LOGICALFLAGS32( r24{90} ),   %CF=LOGICALFLAGS32( r24{90} )
              Live variables: eax_1 in proc proc33
result:    0 *8** eax_1 := -
dest is not lib
call:  118 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL lstrcpyA(
              )
              Reaching definitions: r8=r8{90},   r24=r24{103},   r25=r24{103},   r26=r26{103},   r28=r28{0} - 40,
                r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},   m[r28{0} - 12]=r24{103},   m[r28{0} - 16]=0,
                m[r28{0} - 20]=r24{103},   m[r28{0} - 24]=0x40552c,   m[r28{0} - 28]=0x405578,
                m[r28{0} - 32]=0x405318,   m[r28{0} - 36]=r24{103},   m[r28{0} - 40]=%pc,
                m[r28{0} - 44]=m[r28{0} - 44]{0},   m[r28{0} - 48]=m[r28{0} - 48]{0},
                m[r28{0} - 52]=m[r28{0} - 52]{0},   tmp1=((r28{0} - 40) + 4) + 4,
                %flags=ADDFLAGS32( r28{0} - 32, 4, r28{0} - 28 ),   %ZF=ADDFLAGS32( r28{0} - 32, 4, r28{0} - 28 ),
                %CF=ADDFLAGS32( r28{0} - 32, 4, r28{0} - 28 )
              Live variables:  in proc proc33
dest is not lib
call:  127 {*32* eax, *8* al, *32* ecx, *32* edx, *v* esp} := CALL proc22(
                *8** local12 := eax
                *8** local3 := 0x4055a1
              )
              Reaching definitions: r8=r8{90},   r24=r24{118},   r25=r25{118},   r26=r24{103},   r28=r28{0} - 48,
                r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},   m[r28{0} - 12]=r24{103},   m[r28{0} - 16]=0,
                m[r28{0} - 20]=r24{103},   m[r28{0} - 24]=0x40552c,   m[r28{0} - 28]=0x405578,
                m[r28{0} - 32]=0x405318,   m[r28{0} - 36]=r24{103},   m[r28{0} - 40]=0x4055a1,
                m[r28{0} - 44]=r24{103},   m[r28{0} - 48]=%pc,   m[r28{0} - 52]=m[r28{0} - 52]{0},
                tmp1=((r28{0} - 40) + 4) + 4,   %flags=ADDFLAGS32( r28{0} - 32, 4, r28{0} - 28 ),
                %ZF=ADDFLAGS32( r28{0} - 32, 4, r28{0} - 28 ),   %CF=ADDFLAGS32( r28{0} - 32, 4, r28{0} - 28 )
              Live variables: al,  ecx,  edx in proc proc33
result:    0 *8* al := -
result:    0 *32* ecx := -
result:    0 *32* edx := -
dest is not lib
call:  168 {*32* eax, *32* ecx, *v* esp} := CALL proc36(
                *32* m[esp_8 - 4] := m[esp_8 - 4]
                *j32* eax := eax
              )
              Reaching definitions: r8=r8{221},   r24=r24{222},   r25=r25{162},   r26=r26{224},   r28=r28{225} - 8,
                r29=r29{226},   m[r28{0} - 4]=m[r28{0} - 4]{253},   m[r28{0} - 12]=m[r28{0} - 12]{254},
                m[r28{0} - 16]=m[r28{0} - 16]{255},   m[r28{0} - 20]=m[r28{0} - 20]{256},
                m[r28{0} - 24]=m[r28{0} - 24]{257},   m[r28{0} - 28]=m[r28{0} - 28]{258},
                m[r28{0} - 32]=m[r28{0} - 32]{259},   m[r28{0} - 36]=m[r28{0} - 36]{260},
                m[r28{0} - 40]=m[r28{0} - 40]{261},   m[r28{0} - 44]=m[r28{0} - 44]{262},
                m[r28{0} - 48]=m[r28{0} - 48]{263},   m[r28{0} - 52]=m[r28{0} - 52]{264},   tmp1=tmp1{227},
                %flags=%flags{228},   %ZF=%ZF{229},   %CF=%CF{230}
              Live variables: eax,  ecx in proc proc33
result:    0 *32* eax := -
result:    0 *32* ecx := -
dest is not lib
call:   53 {*32* eax, *32* ecx, *v* esp} := CALL proc36(
                *32* m[esp_7 - 4] := m[esp_7 - 4]
                *j32* eax := eax
              )
              Reaching definitions: r8=r8{0},   r24=r24{208},   r25=r25{209},   r26=r26{47},   r28=r28{211} - 8,
                r29=r29{212},   m[r28{0} - 4]=m[r28{0} - 4]{241},   m[r28{0} - 12]=m[r28{0} - 12]{0},
                m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 20]=m[r28{0} - 20]{0},
                m[r28{0} - 24]=m[r28{0} - 24]{245},   m[r28{0} - 28]=m[r28{0} - 28]{246},
                m[r28{0} - 32]=m[r28{0} - 32]{247},   m[r28{0} - 36]=m[r28{0} - 36]{248},
                m[r28{0} - 40]=m[r28{0} - 40]{249},   m[r28{0} - 44]=m[r28{0} - 44]{250},
                m[r28{0} - 48]=m[r28{0} - 48]{0},   m[r28{0} - 52]=m[r28{0} - 52]{0},   tmp1=tmp1{213},
                %flags=%flags{214},   %ZF=%ZF{215},   %CF=%CF{216}
              Live variables: eax in proc proc33
result:    0 *32* eax := -
