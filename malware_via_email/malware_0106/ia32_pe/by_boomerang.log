Unknown library function AreAnyAccessesGranted
assgn   10 *32* r30 := m[0x403004]
is readonly
assgn  498 *32* %pc := m[0x403000]
is readonly
assgn  621 *32* %pc := m[0x403010]
is readonly
assgn  629 *32* %pc := m[0x40300c]
is readonly
assgn  670 *32* %pc := m[0x403018]
is readonly
assgn  703 *32* %pc := m[0x403014]
is readonly
after removing matching assigns (%pc).
WARNING: size 0x10 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x10 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x10 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x10 meet with /*signed?*/int; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 20 to local table
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 32 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 48 to local table
finding final parameters for _start
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
local eax has type __size32 that doesn't agree with type of define /*signed?*/int of a library, why?
local ecx has type void that doesn't agree with type of define unsigned int of a library, why?
local eax has type /*signed?*/int that doesn't agree with type of define union { unsigned int x5; void * x6; } of a library, why?
local ecx has type unsigned int that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local eax has type union { unsigned int x5; void * x6; } that doesn't agree with type of define /*signed?*/int of a library, why?
local ecx has type void that doesn't agree with type of define union { unsigned int x3; void * x4; } of a library, why?
local edx has type void that doesn't agree with type of define void * of a library, why?
local eax has type /*signed?*/int that doesn't agree with type of define __size32 of a library, why?
local ecx has type union { unsigned int x3; void * x4; } that doesn't agree with type of define void * of a library, why?
local ecx has type void * that doesn't agree with type of define void of a library, why?
local edx has type void * that doesn't agree with type of define void of a library, why?
dest is not lib
call:  499 {*j32* eax, *u32* ecx, *v* edx, *v** esp_29} := CALL AreAnyAccessesGranted(
              )
              Reaching definitions: r0=r0{488},   r9=r9{488},   r24=r24{488},   r25=r25{488},   r26=r26{488},
                r27=r27{488},   r28=r28{488} - 12,   r29=r29{488},   r30=r30{488},   r31=r31{488} + r24{488},
                m[r28{0} - 12]=m[r28{0} - 12]{488},   m[r28{0} - 16]=m[r28{0} - 16]{488},
                m[r28{0} - 20]=m[r28{0} - 20]{488},   m[r28{0} - 24]=m[r28{0} - 24]{488},
                m[r28{0} - 28]=m[r28{0} - 28]{488},   m[r28{0} - 32]=m[r28{0} - 32]{488},
                m[r28{0} - 36]=m[r28{0} - 36]{488},   m[r28{0} - 40]=m[r28{0} - 40]{488},
                m[r28{0} - 44]=m[r28{0} - 44]{488},   m[r28{0} - 48]=m[r28{0} - 48]{488},
                m[r28{0} - 12]=m[r28{0} - 12]{488},   m[r28{0} - 16]=m[r28{0} - 16]{488},
                m[r28{0} - 20]=m[r28{0} - 20]{488},   m[r28{0} - 24]=m[r28{0} - 24]{488},
                m[r28{0} - 28]=m[r28{0} - 28]{488},   m[r28{0} - 32]=m[r28{0} - 32]{488},
                m[r28{0} - 36]=m[r28{0} - 36]{488},   m[r28{0} - 40]=m[r28{0} - 40]{488},
                m[r28{0} - 44]=m[r28{0} - 44]{488},   m[r28{0} - 48]=m[r28{0} - 48]{488},   <all>=<all>{488},
                tmp1=r31{488},   tmph=tmph{488},   %flags=ADDFLAGS32( r31{488}, r24{488}, r31{488} + r24{488} ),
                %ZF=ADDFLAGS32( r31{488}, r24{488}, r31{488} + r24{488} ),
                %CF=ADDFLAGS32( r31{488}, r24{488}, r31{488} + r24{488} )
              Live variables: eax,  ecx,  esp_29 in proc _start
result:    0 *j32* eax := -
result:    0 *u32* ecx := -
result:    0 *v** esp_29 := -
dest is not lib
call:  622 {*union* eax, *v* ecx, *v* edx, *v* esp} := CALL LoadLibraryA(
                *LPCSTR* m[esp_30 - 4] := m[esp_30 - 4]
              )
              Reaching definitions: r0=r0{766},   r9=truncu(32,8,r25{611} + 0x401010),   r24=r24{768},
                r25=r25{611} + 0x401010,   r26=r26{770},   r27=r27{771},   r28=r28{772} - 8,   r29=0x401010,
                r30=r30{773},   r31=r31{774},   m[r28{0} - 12]=m[r28{0} - 12]{488},
                m[r28{0} - 16]=m[r28{0} - 16]{488},   m[r28{0} - 20]=m[r28{0} - 20]{488},
                m[r28{0} - 24]=m[r28{0} - 24]{488},   m[r28{0} - 28]=m[r28{0} - 28]{488},
                m[r28{0} - 32]=m[r28{0} - 32]{488},   m[r28{0} - 36]=m[r28{0} - 36]{488},
                m[r28{0} - 40]=m[r28{0} - 40]{488},   m[r28{0} - 44]=m[r28{0} - 44]{488},
                m[r28{0} - 48]=m[r28{0} - 48]{488},   m[r28{0} - 12]=m[r28{0} - 12]{488},
                m[r28{0} - 16]=m[r28{0} - 16]{488},   m[r28{0} - 20]=m[r28{0} - 20]{488},
                m[r28{0} - 24]=m[r28{0} - 24]{488},   m[r28{0} - 28]=m[r28{0} - 28]{488},
                m[r28{0} - 32]=m[r28{0} - 32]{488},   m[r28{0} - 36]=m[r28{0} - 36]{488},
                m[r28{0} - 40]=m[r28{0} - 40]{488},   m[r28{0} - 44]=m[r28{0} - 44]{488},
                m[r28{0} - 48]=m[r28{0} - 48]{488},   <all>=<all>{488},   tmp1=r25{611},   tmph=tmph{762},
                %flags=ADDFLAGS32( r25{611}, 0x401010, r25{611} + 0x401010 ),
                %ZF=ADDFLAGS32( r25{611}, 0x401010, r25{611} + 0x401010 ),
                %CF=ADDFLAGS32( r25{611}, 0x401010, r25{611} + 0x401010 )
              Live variables: eax in proc _start
result:    0 *union* eax := -
dest is not lib
call:  630 {*j32* eax, *union* ecx, *v** edx, *v* esp} := CALL CloseHandle(
                *HANDLE* m[esp_30 - 4] := m[esp_30 - 4]
              )
              Reaching definitions: r0=r0{766},   r9=truncu(32,8,r25{611} + 0x401010),   r24=r24{622},   r25=r25{622},
                r26=r26{622},   r27=r27{771},   r28=r28{772} - 8,   r29=0x401010,   r30=r24{622},   r31=r31{774},
                m[r28{0} - 12]=m[r28{0} - 12]{488},   m[r28{0} - 16]=m[r28{0} - 16]{488},
                m[r28{0} - 20]=m[r28{0} - 20]{488},   m[r28{0} - 24]=m[r28{0} - 24]{488},
                m[r28{0} - 28]=m[r28{0} - 28]{488},   m[r28{0} - 32]=m[r28{0} - 32]{488},
                m[r28{0} - 36]=m[r28{0} - 36]{488},   m[r28{0} - 40]=m[r28{0} - 40]{488},
                m[r28{0} - 44]=m[r28{0} - 44]{488},   m[r28{0} - 48]=m[r28{0} - 48]{488},
                m[r28{0} - 12]=m[r28{0} - 12]{488},   m[r28{0} - 16]=m[r28{0} - 16]{488},
                m[r28{0} - 20]=m[r28{0} - 20]{488},   m[r28{0} - 24]=m[r28{0} - 24]{488},
                m[r28{0} - 28]=m[r28{0} - 28]{488},   m[r28{0} - 32]=m[r28{0} - 32]{488},
                m[r28{0} - 36]=m[r28{0} - 36]{488},   m[r28{0} - 40]=m[r28{0} - 40]{488},
                m[r28{0} - 44]=m[r28{0} - 44]{488},   m[r28{0} - 48]=m[r28{0} - 48]{488},   <all>=<all>{488},
                tmp1=r25{611},   tmph=tmph{762},   %flags=ADDFLAGS32( r25{611}, 0x401010, r25{611} + 0x401010 ),
                %ZF=ADDFLAGS32( r25{611}, 0x401010, r25{611} + 0x401010 ),
                %CF=ADDFLAGS32( r25{611}, 0x401010, r25{611} + 0x401010 )
              Live variables: ecx,  edx in proc _start
result:    0 *union* ecx := -
result:    0 *v** edx := -
dest is not lib
call:  671 {*32* eax, *v** ecx, *v** edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* m[esp_30 - 8] := m[esp_30 - 8]
                *c** m[esp_30 - 4] := m[esp_30 - 4]
              )
              Reaching definitions: r0=r0{793},   r9=r9{794},   r24=r24{795},   r25=r25{796},   r26=r26{797},
                r27=r27{785},   r28=(r28{772} - 8) - 4,   r29=0x401010,   r30=r30{787},   r31=r31{788},
                m[r28{0} - 12]=m[r28{0} - 12]{488},   m[r28{0} - 16]=m[r28{0} - 16]{488},
                m[r28{0} - 20]=m[r28{0} - 20]{488},   m[r28{0} - 24]=m[r28{0} - 24]{488},
                m[r28{0} - 28]=m[r28{0} - 28]{488},   m[r28{0} - 32]=m[r28{0} - 32]{488},
                m[r28{0} - 36]=m[r28{0} - 36]{488},   m[r28{0} - 40]=m[r28{0} - 40]{488},
                m[r28{0} - 44]=m[r28{0} - 44]{488},   m[r28{0} - 48]=m[r28{0} - 48]{488},
                m[r28{0} - 12]=m[r28{0} - 12]{488},   m[r28{0} - 16]=m[r28{0} - 16]{488},
                m[r28{0} - 20]=m[r28{0} - 20]{488},   m[r28{0} - 24]=m[r28{0} - 24]{488},
                m[r28{0} - 28]=m[r28{0} - 28]{488},   m[r28{0} - 32]=m[r28{0} - 32]{488},
                m[r28{0} - 36]=m[r28{0} - 36]{488},   m[r28{0} - 40]=m[r28{0} - 40]{488},
                m[r28{0} - 44]=m[r28{0} - 44]{488},   m[r28{0} - 48]=m[r28{0} - 48]{488},   <all>=<all>{488},
                tmp1=tmp1{789},   tmph=tmph{762},   %flags=%flags{790},   %ZF=%ZF{791},   %CF=%CF{792}
              Live variables: eax,  ecx,  edx in proc _start
result:    0 *32* eax := -
result:    0 *v** ecx := -
result:    0 *v** edx := -
dest is not lib
call:  704 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL ExitProcess(
                *UINT* m[esp - 4] := m[esp - 4]
              )
              Reaching definitions: r0=r0{698},   r9=r9{698},   r24=r24{698},   r25=r25{698},   r26=r26{698},
                r27=r27{698},   r28=r28{698} - 8,   r29=r29{698},   r30=r30{698},   r31=r31{698},
                m[r28{0} - 12]=m[r28{0} - 12]{698},   m[r28{0} - 16]=m[r28{0} - 16]{698},
                m[r28{0} - 20]=m[r28{0} - 20]{698},   m[r28{0} - 24]=m[r28{0} - 24]{698},
                m[r28{0} - 28]=m[r28{0} - 28]{698},   m[r28{0} - 32]=m[r28{0} - 32]{698},
                m[r28{0} - 36]=m[r28{0} - 36]{698},   m[r28{0} - 40]=m[r28{0} - 40]{698},
                m[r28{0} - 44]=m[r28{0} - 44]{698},   m[r28{0} - 48]=m[r28{0} - 48]{698},
                m[r28{0} - 12]=m[r28{0} - 12]{698},   m[r28{0} - 16]=m[r28{0} - 16]{698},
                m[r28{0} - 20]=m[r28{0} - 20]{698},   m[r28{0} - 24]=m[r28{0} - 24]{698},
                m[r28{0} - 28]=m[r28{0} - 28]{698},   m[r28{0} - 32]=m[r28{0} - 32]{698},
                m[r28{0} - 36]=m[r28{0} - 36]{698},   m[r28{0} - 40]=m[r28{0} - 40]{698},
                m[r28{0} - 44]=m[r28{0} - 44]{698},   m[r28{0} - 48]=m[r28{0} - 48]{698},   <all>=<all>{698},
                tmp1=tmp1{698},   tmph=tmph{698},   %flags=%flags{698},   %ZF=%ZF{698},   %CF=%CF{698}
              Live variables:  in proc _start
