Unknown library function GetTickCount
Unknown library function GetCurrentProcessId
Unknown library function RpcStringFreeW
Unknown library function VirtualProtect
COMPUTED JUMP at 0x401e17, pDest = r31
assgn   25 *32* %pc := m[0x40210c]
is readonly
assgn   29 *32* %pc := m[0x402124]
is readonly
assgn   44 *32* %pc := m[0x40211c]
is readonly
assgn   60 *32* %pc := m[0x402188]
is readonly
assgn  122 *32* %pc := m[0x402110]
is readonly
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
in proc _start adding addrExp r28{0} - 4 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 20 to local table
in proc _start adding addrExp r28{0} - 20 to local table
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 32 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 40 to local table
finding final parameters for _start
local eax has type /*signed?*/int that doesn't agree with type of define __size32 of a library, why?
local eax has type __size32 that doesn't agree with type of define /*signed?*/int of a library, why?
dest is not lib
call:   26 {*32* eax, *v* r25, *v* r26, *v* r28} := CALL GetCommandLineA(
              )
              Reaching definitions: r24=r24{0} & 75,   r25=(r25{0} - r30{0}) + 0x69711b06,   r26=r26{0} - 0x317a9729,
                r27=r27{0} | -109,   r28=r28{0} - 16,   r30=r30{0},   r31=r31{0} - r24{0},   m[r28{0} - 4]=r27{0},
                m[r28{0} - 8]=r31{0},   m[r28{0} - 12]=r30{0},   m[r28{0} - 16]=%pc,   tmp1=r25{0} - r30{0},
                %flags=ADDFLAGS32( r25{0} - r30{0}, 0x69711b06, (r25{0} - r30{0}) + 0x69711b06 ),
                %ZF=ADDFLAGS32( r25{0} - r30{0}, 0x69711b06, (r25{0} - r30{0}) + 0x69711b06 ),
                %CF=ADDFLAGS32( r25{0} - r30{0}, 0x69711b06, (r25{0} - r30{0}) + 0x69711b06 )
              Live variables:  in proc _start
dest is not lib
call:   30 {*32* eax, *j32* r25, *32* r26, *v* r28} := CALL GetTickCount(
              )
              Reaching definitions: r24=r24{26},   r25=r25{26},   r26=r26{26},   r27=r27{0} | -109,   r28=r28{0} - 16,
                r30=r30{0},   r31=r31{0} - r24{0},   m[r28{0} - 4]=r27{0},   m[r28{0} - 8]=r31{0},
                m[r28{0} - 12]=r30{0},   m[r28{0} - 16]=%pc,   tmp1=r25{0} - r30{0},
                %flags=ADDFLAGS32( r25{0} - r30{0}, 0x69711b06, (r25{0} - r30{0}) + 0x69711b06 ),
                %ZF=ADDFLAGS32( r25{0} - r30{0}, 0x69711b06, (r25{0} - r30{0}) + 0x69711b06 ),
                %CF=ADDFLAGS32( r25{0} - r30{0}, 0x69711b06, (r25{0} - r30{0}) + 0x69711b06 )
              Live variables:  in proc _start
dest is not lib
call:   45 {*j32* eax, *v* r25, *v* r26, *v* r28} := CALL GetCurrentProcessId(
              )
              Reaching definitions: r24=r24{30},   r25=r25{30} | 1,   r26=r26{30},   r27=r27{40},   r28=r28{0} - 16,
                r30=r30{0},   r31=(r31{0} - r24{0}) + 1,   m[r28{0} - 4]=r27{0},   m[r28{0} - 8]=r31{0},
                m[r28{0} - 12]=r30{0},   m[r28{0} - 16]=%pc,   tmp1=(r27{0} | -109) + 44,
                %flags=ADDFLAGS32( (r27{0} | -109) + 44, r26{30}, r27{40} ),
                %ZF=ADDFLAGS32( (r27{0} | -109) + 44, r26{30}, r27{40} ),
                %CF=ADDFLAGS32( (r27{0} | -109) + 44, r26{30}, r27{40} )
              Live variables:  in proc _start
dest is not lib
call:   61 {*j32* eax, *j32* r25, *j32* r26, *v* r28} := CALL RpcStringFreeW(
              )
              Reaching definitions: r24=(r24{45} ^ r27{40}) + 1,   r25=r25{45},   r26=r26{45},   r27=r27{40},
                r28=r28{0} - 20,   r30=r30{0},   r31=r31{48} + 0x1b7d8549,   m[r28{0} - 4]=r27{0},
                m[r28{0} - 8]=r31{0},   m[r28{0} - 12]=r30{0},   m[r28{0} - 16]=0,   m[r28{0} - 20]=%pc,
                tmp1=r24{45} ^ r27{40},   %flags=LOGICALFLAGS32( (r24{45} ^ r27{40}) + 1 ),
                %ZF=LOGICALFLAGS32( (r24{45} ^ r27{40}) + 1 ),   %CF=LOGICALFLAGS32( (r24{45} ^ r27{40}) + 1 )
              Live variables: eax in proc _start
result:    0 *j32* eax := -
dest is not lib
call:  123 {*j32* eax, *j32* r25, *32* r26, *v* r28} := CALL VirtualProtect(
              )
              Reaching definitions: r24=r26{108} - 1,   r25=(r25{61} + 0x3a5c27a3) | r26{108},   r26=r26{108},
                r27=r27{40} - 81,   r28=r28{0} - 40,   r30=((r30{78} & r25{61}) & -29) | 24,   r31=r24{61} + 0x401dc2,
                m[r28{0} - 4]=r27{0},   m[r28{0} - 8]=r31{0},   m[r28{0} - 12]=r30{0},   m[r28{0} - 16]=0,
                m[r28{0} - 20]=0,   m[r28{0} - 24]=r28{0} - 20,   m[r28{0} - 28]=64,   m[r28{0} - 32]=0xd3f,
                m[r28{0} - 36]=0x401000,   m[r28{0} - 40]=%pc,   tmp1=r26{108},   %flags=LOGICALFLAGS32( r26{108} - 1 )
                %ZF=LOGICALFLAGS32( r26{108} - 1 ),   %CF=LOGICALFLAGS32( r26{108} - 1 )
              Live variables:  in proc _start
