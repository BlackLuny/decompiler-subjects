Unknown library function AddUsersToEncryptedFile
Unknown library function AreAllAccessesGranted
Unknown library function VirtualProtect
assgn   23 *32* %pc := m[0x403004]
is readonly
assgn   37 *32* %pc := m[0x403000]
is readonly
assgn   55 *32* %pc := m[0x40300c]
is readonly
assgn  186 *32* %pc := m[0x403010]
is readonly
assgn  228 *32* %pc := m[0x403018]
is readonly
assgn  243 *32* %pc := m[0x403018]
is readonly
assgn  275 *32* %pc := m[0x403014]
is readonly
after removing matching assigns (%pc).
WARNING: size 0x10 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x10 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x10 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x10 meet with /*signed?*/int; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 32 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 20 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 20 to local table
TYPE ERROR: Existing type at address 0xffffffec is not structure or array type
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 32 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 40 to local table
TYPE ERROR: Existing type at address 0xffffffd8 is not structure or array type
in proc _start adding addrExp r28{0} - 44 to local table
TYPE ERROR: Existing type at address 0xffffffd4 is not structure or array type
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 52 to local table
in proc _start adding addrExp r28{0} - 56 to local table
in proc _start adding addrExp r28{0} - 56 to local table
in proc _start adding addrExp r28{0} - 60 to local table
in proc _start adding addrExp r28{0} - 64 to local table
in proc _start adding addrExp r28{0} - 68 to local table
in proc _start adding addrExp r28{0} - 72 to local table
in proc _start adding addrExp r28{0} - 52 to local table
in proc _start adding addrExp r28{0} - 52 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 40 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffd8 existing type unsigned int but added type __size32 *
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 40 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffd8 existing type unsigned int but added type __size32 *
in proc _start adding addrExp r28{0} - 72 to local table
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 72 to local table
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 72 to local table
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 72 to local table
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 72 to local table
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 72 to local table
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 72 to local table
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 72 to local table
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 40 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffd8 existing type unsigned int but added type __size32 *
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 40 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffd8 existing type unsigned int but added type __size32 *
in proc _start adding addrExp r28{0} - 72 to local table
in proc _start adding addrExp r28{0} - 76 to local table
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 72 to local table
finding final parameters for _start
potential param r28
found new parameter r28
potential param r27
found new parameter r27
potential param r24
found new parameter r24
potential param tmph
potential param m[r28{0} - 80]
found new parameter m[r28{0} - 80]
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 40 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffd8 existing type unsigned int but added type __size32 *
in proc _start adding addrExp r28{0} - 40 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffd8 existing type unsigned int but added type __size32 *
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 80 to local table
in proc _start adding addrExp r28{0} - 40 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffd8 existing type unsigned int but added type __size32 *
local ecx has type unsigned int * that doesn't agree with type of define void of a library, why?
local edx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local eax has type __size32 that doesn't agree with type of define unsigned int of a library, why?
local edx has type void that doesn't agree with type of define /*signed?*/int of a library, why?
local ecx has type void that doesn't agree with type of define void * of a library, why?
local edx_1 has type __size32 * that doesn't agree with type of define void * of a library, why?
local ecx_1 has type /*signed?*/int that doesn't agree with type of define unsigned int of a library, why?
local edx has type /*signed?*/int that doesn't agree with type of define union { void * x5; unsigned int x6; } of a library, why?
local eax has type unsigned int that doesn't agree with type of define __size32 of a library, why?
local ecx has type void * that doesn't agree with type of define void of a library, why?
local edx has type union { void * x5; unsigned int x6; } that doesn't agree with type of define void of a library, why?
dest is not lib
call:   24 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL AddUsersToEncryptedFile(
              )
              Reaching definitions: r10=r10{0},   r24=r24{0},   r27=r24{0} + (r27{0} * 4),   r28=r28{0} - 48,
                r29=r29{0},   r30=0,   r31=31,   m[r28{0} - 20]=228,   m[r28{0} - 24]=r27{0},   m[r28{0} - 28]=r29{0},
                m[r28{0} - 32]=r30{0},   m[r28{0} - 36]=r31{0},   m[r28{0} - 40]=0,   m[r28{0} - 44]=0x403020,
                m[r28{0} - 48]=%pc,   m[r28{0} - 76]=m[r28{0} - 76]{0},   m[r28{0} - 80]=m[r28{0} - 80]{0},
                tmp1=r28{0},   tmph=tmph{0},   %flags=LOGICALFLAGS32( 0 ),   %ZF=LOGICALFLAGS32( 0 ),
                %CF=LOGICALFLAGS32( 0 )
              Live variables: eax in proc _start
result:    0 *32* eax := -
dest is not lib
call:   38 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL AreAllAccessesGranted(
              )
              Reaching definitions: r10=r10{0},   r24=r24{24},   r25=r25{24},   r26=r26{24},
                r27=r24{0} + (r27{0} * 4),   r28=r28{0} - 56,   r29=r29{0},   r30=0,   r31=31,   m[r28{0} - 20]=228,
                m[r28{0} - 24]=r27{0},   m[r28{0} - 28]=r29{0},   m[r28{0} - 32]=r30{0},   m[r28{0} - 36]=r31{0},
                m[r28{0} - 40]=0,   m[r28{0} - 44]=0x403020,   m[r28{0} - 48]=-1,   m[r28{0} - 52]=-1,
                m[r28{0} - 56]=%pc,   m[r28{0} - 76]=m[r28{0} - 76]{0},   m[r28{0} - 80]=m[r28{0} - 80]{0},
                tmp1=r24{24},   tmph=tmph{0},   %flags=LOGICALFLAGS32( r24{24} ),   %ZF=LOGICALFLAGS32( r24{24} ),
                %CF=LOGICALFLAGS32( r24{24} )
              Live variables: eax in proc _start
result:    0 *32* eax := -
dest is not lib
call:   56 {*u32* eax, *v* ecx, *j32* edx, *v* esp} := CALL VirtualProtect(
              )
              Reaching definitions: r0=truncu(32,16,r28{0} - 32),   r10=r10{0},   r24=r28{0} - 32,   r25=r25{38},
                r26=r26{38},   r27=r24{0} + (r27{0} * 4),   r28=r28{0} - 72,   r29=r29{0},   r30=0,   r31=r31{289},
                m[r28{0} - 20]=228,   m[r28{0} - 24]=r27{0},   m[r28{0} - 28]=r29{0},   m[r28{0} - 32]=r30{0},
                m[r28{0} - 36]=r31{0},   m[r28{0} - 40]=0,   m[r28{0} - 44]=0x403020,   m[r28{0} - 48]=-1,
                m[r28{0} - 52]=-1,   m[r28{0} - 56]=r28{0} - 32,   m[r28{0} - 60]=64,   m[r28{0} - 64]=0x3000,
                m[r28{0} - 68]=0x401000,   m[r28{0} - 72]=%pc,   m[r28{0} - 76]=m[r28{0} - 76]{0},
                m[r28{0} - 80]=m[r28{0} - 80]{0},   tmp1=r24{38},   tmph=tmph{0},   %flags=LOGICALFLAGS32( r24{38} ),
                %ZF=LOGICALFLAGS32( r24{38} ),   %CF=LOGICALFLAGS32( r24{38} )
              Live variables: eax,  edx in proc _start
result:    0 *u32* eax := -
result:    0 *j32* edx := -
dest is not lib
call:  187 {*u32* eax_5, *v** ecx, *v** edx_1, *v* esp} := CALL LoadLibraryA(
                *LPCSTR* local3 := ecx + ebp_7
              )
              Reaching definitions: r0=r0{361},   r1=truncu(32,16,r25{176} + r29{369}),   r10=r10{363},   r24=r24{364},
                r25=r25{176} + r29{369},   r26=r26{366},   r27=r27{367},   r28=(r28{0} - 68) - 8,   r29=r29{369},
                r30=r30{370},   r31=r31{371},   m[r28{0} - 20]=228,   m[r28{0} - 24]=r27{0},   m[r28{0} - 28]=r29{0},
                m[r28{0} - 32]=r30{0},   m[r28{0} - 36]=m[r28{0} - 36]{452},   m[r28{0} - 40]=m[r28{0} - 40]{453},
                m[r28{0} - 44]=0x401348,   m[r28{0} - 48]=-1,   m[r28{0} - 52]=-1,   m[r28{0} - 56]=r28{0} - 32,
                m[r28{0} - 60]=64,   m[r28{0} - 64]=0x3000,   m[r28{0} - 68]=0x401000,
                m[r28{0} - 72]=r25{176} + r29{369},   m[r28{0} - 76]=%pc,   m[r28{0} - 80]=m[r28{0} - 80]{456},
                tmp1=r25{176},   tmph=tmph{344},   %flags=ADDFLAGS32( r25{176}, r29{369}, r25{176} + r29{369} ),
                %ZF=ADDFLAGS32( r25{176}, r29{369}, r25{176} + r29{369} ),
                %CF=ADDFLAGS32( r25{176}, r29{369}, r25{176} + r29{369} )
              Live variables: eax_5,  ecx in proc _start
result:    0 *u32* eax_5 := -
result:    0 *v** ecx := -
dest is not lib
call:  244 {*u32* eax, *u32* ecx_1, *union* edx, *v* esp} := CALL GetProcAddress(
                *union* local4 := eax_5
                *c** local3 := ecx_1 + 0x40134a
              )
              Reaching definitions: r0=r0{378},   r1=truncu(32,16,(r25{215} + 0x401348) + 2),
                r10=truncu(32,8,0x401348),   r24=r24{187},   r25=(r25{215} + 0x401348) + 2,   r26=0x401348,
                r27=r24{187} + (r27{367} * 2),   r28=(r28{0} - 68) - 12,   r29=r29{385},   r30=r30{386},   r31=r31{387}
                m[r28{0} - 20]=228,   m[r28{0} - 24]=r27{0},   m[r28{0} - 28]=r29{0},   m[r28{0} - 32]=r30{0},
                m[r28{0} - 36]=r24{187},   m[r28{0} - 40]=m[r28{0} - 40]{453},   m[r28{0} - 44]=0x401348,
                m[r28{0} - 48]=-1,   m[r28{0} - 52]=-1,   m[r28{0} - 56]=r28{0} - 32,   m[r28{0} - 60]=64,
                m[r28{0} - 64]=0x3000,   m[r28{0} - 68]=0x401000,   m[r28{0} - 72]=r25{215} + 0x40134a,
                m[r28{0} - 76]=r24{187},   m[r28{0} - 80]=%pc,   tmp1=r25{215},   tmph=tmph{344},
                %flags=LOGICALFLAGS32( r25{215} ),   %ZF=LOGICALFLAGS32( r25{215} ),   %CF=LOGICALFLAGS32( r25{215} )
              Live variables: eax,  ecx_1,  edx in proc _start
result:    0 *u32* eax := -
result:    0 *u32* ecx_1 := -
result:    0 *union* edx := -
dest is not lib
call:  229 {*u32* eax, *u32* ecx_1, *u32* edx_3, *v* esp} := CALL GetProcAddress(
                *union* local4 := eax_5
                *union* local3 := zfill(16,32,truncu(32,16,ecx_1))
              )
              Reaching definitions: r0=r0{378},   r1=truncu(32,16,r25{215}),
                r10=truncu(32,8,zfill(16,32,truncu(32,16,r25{215}))),   r24=r24{187},   r25=r25{215},
                r26=zfill(16,32,truncu(32,16,r25{215})),   r27=r24{187} + (r27{367} * 2),   r28=(r28{0} - 68) - 12,
                r29=r29{385},   r30=r30{386},   r31=r31{387},   m[r28{0} - 20]=228,   m[r28{0} - 24]=r27{0},
                m[r28{0} - 28]=r29{0},   m[r28{0} - 32]=r30{0},   m[r28{0} - 36]=r24{187},
                m[r28{0} - 40]=m[r28{0} - 40]{453},   m[r28{0} - 44]=0x401348,   m[r28{0} - 48]=-1,   m[r28{0} - 52]=-1
                m[r28{0} - 56]=r28{0} - 32,   m[r28{0} - 60]=64,   m[r28{0} - 64]=0x3000,   m[r28{0} - 68]=0x401000,
                m[r28{0} - 72]=zfill(16,32,truncu(32,16,r25{215})),   m[r28{0} - 76]=r24{187},   m[r28{0} - 80]=%pc,
                tmp1=r25{215},   tmph=tmph{344},   %flags=LOGICALFLAGS32( r25{215} ),   %ZF=LOGICALFLAGS32( r25{215} ),
                %CF=LOGICALFLAGS32( r25{215} )
              Live variables: eax,  ecx_1,  edx_3 in proc _start
result:    0 *u32* eax := -
result:    0 *u32* ecx_1 := -
result:    0 *u32* edx_3 := -
dest is not lib
call:  276 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL ExitProcess(
                *UINT* m[esp - 4] := m[esp - 4]
              )
              Reaching definitions: r0=r0{270},   r1=r1{270},   r10=r10{270},   r24=r24{270},   r25=r25{270},
                r26=r26{270},   r27=r27{270},   r28=r28{270} - 8,   r29=r29{270},   r30=r30{270},   r31=r31{270},
                m[r28{0} - 20]=m[r28{0} - 20]{270},   m[r28{0} - 24]=m[r28{0} - 24]{270},
                m[r28{0} - 28]=m[r28{0} - 28]{270},   m[r28{0} - 32]=m[r28{0} - 32]{270},
                m[r28{0} - 36]=m[r28{0} - 36]{270},   m[r28{0} - 40]=m[r28{0} - 40]{270},
                m[r28{0} - 44]=m[r28{0} - 44]{270},   m[r28{0} - 48]=m[r28{0} - 48]{270},
                m[r28{0} - 52]=m[r28{0} - 52]{270},   m[r28{0} - 56]=m[r28{0} - 56]{270},
                m[r28{0} - 60]=m[r28{0} - 60]{270},   m[r28{0} - 64]=m[r28{0} - 64]{270},
                m[r28{0} - 68]=m[r28{0} - 68]{270},   m[r28{0} - 72]=m[r28{0} - 72]{270},
                m[r28{0} - 76]=m[r28{0} - 76]{270},   m[r28{0} - 80]=m[r28{0} - 80]{270},
                m[r28{0} - 20]=m[r28{0} - 20]{270},   m[r28{0} - 24]=m[r28{0} - 24]{270},
                m[r28{0} - 28]=m[r28{0} - 28]{270},   m[r28{0} - 32]=m[r28{0} - 32]{270},
                m[r28{0} - 36]=m[r28{0} - 36]{270},   m[r28{0} - 40]=m[r28{0} - 40]{270},
                m[r28{0} - 44]=m[r28{0} - 44]{270},   m[r28{0} - 48]=m[r28{0} - 48]{270},
                m[r28{0} - 52]=m[r28{0} - 52]{270},   m[r28{0} - 56]=m[r28{0} - 56]{270},
                m[r28{0} - 60]=m[r28{0} - 60]{270},   m[r28{0} - 64]=m[r28{0} - 64]{270},
                m[r28{0} - 68]=m[r28{0} - 68]{270},   m[r28{0} - 72]=m[r28{0} - 72]{270},
                m[r28{0} - 76]=m[r28{0} - 76]{270},   m[r28{0} - 80]=m[r28{0} - 80]{270},   <all>=<all>{270},
                tmp1=tmp1{270},   tmph=tmph{270},   %flags=%flags{270},   %ZF=%ZF{270},   %CF=%CF{270}
              Live variables:  in proc _start
