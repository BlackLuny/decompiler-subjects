assgn    6 *32* tmp1 := m[0x401000]
is readonly
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
in proc proc1 adding addrExp r28{0} - 4 to local table
finding final parameters for proc1
potential param r28
found new parameter r28
potential param r24
found new parameter r24
assgn   10 *32* %pc := m[0x404004]
is readonly
assgn   14 *32* %pc := m[0x404008]
is readonly
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
in proc _start adding addrExp r28{0} - 4 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type unsigned int does not resolve to compound or array
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type unsigned int does not resolve to compound or array
finding final parameters for _start
potential param r28
found new parameter r28
potential param m[r28{0} + 16]
found new parameter m[r28{0} + 16]
potential param r27
found new parameter r27
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc1 ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
finding final parameters for proc1
potential param r28
found new parameter r28
potential param r24
found new parameter r24
finding final parameters for _start
potential param r28
found new parameter r28
potential param m[r28{0} + 16]
found new parameter m[r28{0} + 16]
potential param r27
found new parameter r27
finding final parameters for _start
potential param r28
found new parameter r28
potential param m[r28{0} + 16]
found new parameter m[r28{0} + 16]
local esp has type __size32 that doesn't agree with type of define void of a library, why?
dest is not lib
call:   11 {*32* eax, *v* r25, *v* r26} := CALL LoadLibraryA(
                *LPCSTR* local0 := 0
              )
              Reaching definitions: r26=-1,   r27=r27{0},   r28=r28{0} - 8,   m[r28{0} + 16]=m[r28{0} + 16]{0},
                m[r28{0} - 4]=0,   m[r28{0} - 8]=%pc,   tmp1=0,   %flags=LOGICALFLAGS32( -1 ),
                %ZF=LOGICALFLAGS32( -1 ),   %CF=LOGICALFLAGS32( -1 )
              Live variables:  in proc _start
dest is not lib
call:   15 {*32* eax, *v* r25, *32* r26} := CALL GetCommandLineA(
              )
              Reaching definitions: r24=r24{11},   r25=r25{11},   r26=r26{11},   r27=r27{0},   r28=r28{0} - 4,
                m[r28{0} + 16]=m[r28{0} + 16]{0},   m[r28{0} - 4]=%pc,   m[r28{0} - 8]=%pc,   tmp1=0,
                %flags=LOGICALFLAGS32( -1 ),   %ZF=LOGICALFLAGS32( -1 ),   %CF=LOGICALFLAGS32( -1 )
              Live variables:  in proc _start
dest is not lib
call:   20 *32* r25 := CALL proc1(
                *32* eax := 0x15000
              )
              Reaching definitions: r24=0x15000,   r25=r25{15},   r26=r26{15},   r27=r27{0},   r28=r28{0} - 4,
                m[r28{0} + 16]=m[r28{0} + 16]{0},   m[r28{0} - 4]=%pc,   m[r28{0} - 8]=%pc,   tmp1=0,
                %flags=LOGICALFLAGS32( -1 ),   %ZF=LOGICALFLAGS32( -1 ),   %CF=LOGICALFLAGS32( -1 )
              Live variables:  in proc _start
