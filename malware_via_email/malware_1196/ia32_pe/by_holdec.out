INFO  an - ### holdec 1.1 Copyright 2003-2012 Raimar Falke
INFO  an - Using ./malware_via_email/malware_1196/ia32_pe/subject.exe as executable
read image                              : ............................................................ [ done ]
INFO  fG - Detected PE (Portable Executable)
INFO  ks - wrote ./malware_via_email/malware_1196/ia32_pe/subject.exe.info
INFO  fG - disassembleAndWrite: start a new loop with 1 extra block starts
Disassemble                             : ............................................................ [ done ]
INFO  fG - disassembleAndWrite: running multiline
INFO  ks - wrote ./malware_via_email/malware_1196/ia32_pe/subject.exe.info
Preprocessing 1211 asm lines            : ............................................................ [ done ]
INFO  ks - wrote ./malware_via_email/malware_1196/ia32_pe/subject.exe.info
INFO  fG - disassembleAndWrite: found no new addresses. will stop now.
INFO  ks - wrote ./malware_via_email/malware_1196/ia32_pe/subject.exe.info
Preprocessing 1261 asm lines            : ............................................................ [ done ]
INFO  ks - wrote ./malware_via_email/malware_1196/ia32_pe/subject.exe.info
INFO  fG - reading all asm lines ...
INFO  fG - ... read 1261 asm lines
WARN  w - Address 00402000.0 is excluded by the address filter. Maybe outside text section?
create blocks                           : ............................................................ [ done ]
init blocks                             : ............................................................ [ done ]
Writing 9 methods to cache              : ............................................................ [ done ]
INFO  an - will decompile 9 functions
decompile F_00401000                    : .WARN  ag - Referencing unknown line 00401ac0.0
WARN  ag - Referencing unknown line 00401ac0.0
WARN  ag - Referencing unknown line 00401ac0.0
................ failed: A non-current expression of a variable is used in block L14 in (void) STORE(ADD(reg_h13, SEGMENT2ADDR(reg_zi8), 16), reg_pp33): The current setter is reg_f5 while [reg_pp33] was found. Related expressions are [reg_f0, reg_f2, reg_f1, reg_pp5, reg_pp68, reg_pp33, reg_pp26, reg_pp19, reg_f4, reg_f3, reg_pp37, reg_f6, reg_f5, reg_pp13, reg_f13, reg_f14]
decompile F_00401380                    : .WARN  ag - Referencing unknown line 004018b0.0
WARN  ag - Referencing unknown line 004017a0.0
WARN  ag - Referencing unknown line 00401c20.0
WARN  ag - Referencing unknown line 00401c20.0
WARN  ag - Referencing unknown line 00401c20.0
........WARN  ac - Block 8 is already known to have a starting stack offset of -188 but when called from 8 it has an offset of -200
........ failed: A non-current expression of a variable is used in block L1 in if(CMP(reg_pp3, !=, 1)) goto L1: The current setter is reg_d1 while [reg_pp3] was found. Related expressions are [reg_d0, reg_pp3, reg_d1]
decompile F_004014a0                    : .WARN  ag - Referencing unknown line 00401380.0
WARN  ag - Referencing unknown line 004018b0.0
WARN  ag - Referencing unknown line 00401c20.0
WARN  ag - Referencing unknown line 00401000.0
........WARN  ac - Block 33 is already known to have a starting stack offset of -656 but when called from 20 it has an offset of -660
WARN  ac - Block 19 is already known to have a starting stack offset of -656 but when called from 11 it has an offset of -660
WARN  ac - Block 26 is already known to have a starting stack offset of -664 but when called from 29 it has an offset of -672
WARN  ac - Block 30 is already known to have a starting stack offset of -664 but when called from 29 it has an offset of -672
WARN  ac - Block 21 is already known to have a starting stack offset of -660 but when called from 31 it has an offset of -664
WARN  ac - Block 33 is already known to have a starting stack offset of -660 but when called from 32 it has an offset of -664
WARN  ac - Block 31 is already known to have a starting stack offset of -664 but when called from 30 it has an offset of -672
........ failed: A non-current expression of a variable is used in block L5 in if(CMP(reg_pp4, !=, 1)) goto L5: The current setter is reg_c4 while [reg_pp4] was found. Related expressions are [reg_pp4, reg_c3, reg_c4]
decompile F_004017a0                    : .........WARN  ac - Block 2 is already known to have a starting stack offset of -56 but when called from 2 it has an offset of -80
WARN  ac - Block 4 is already known to have a starting stack offset of -48 but when called from 3 it has an offset of -72
................................................... [ done ]
decompile F_00401800                    : .WARN  ag - Referencing unknown line 00401920.0
WARN  ag - Referencing unknown line 004014a0.0
........WARN  ac - Block 12 is already known to have a starting stack offset of -28 but when called from 11 it has an offset of -32
........ failed: A non-current expression of a variable is used in block L1 in if(CMP(reg_pp3, !=, 10)) goto L3: The current setter is reg_a1 while [reg_pp3] was found. Related expressions are [reg_a2, reg_a0, reg_a1, reg_pp3]
decompile F_004018b0                    : ............................................................ [ done ]
decompile F_00401920                    : .WARN  ag - Referencing unknown line 00401380.0
........WARN  ac - Block 22 is already known to have a starting stack offset of -360 but when called from 21 it has an offset of -392
........ failed: A non-current expression of a variable is used in block L6 in if(CMP(reg_pp5, !=, 1)) goto L6: The current setter is reg_e3 while [reg_pp5] was found. Related expressions are [reg_pp5, reg_e3, reg_e2]
decompile F_00401ac0                    : ................. failed: A non-current expression of a variable is used in block L2 in reg_c2 = LOAD(ADD(reg_e0, SEGMENT2ADDR(reg_pp2))): The current setter is reg_zj1 while [reg_pp2] was found. Related expressions are [reg_pp12, reg_pp6, reg_zj3, reg_zj0, reg_pp2, reg_zj2, reg_zj1]
decompile F_00401c20                    : ................. failed: A non-current expression of a variable is used in block L5 in if(CMP(ADD(MULT(reg_pp14, -1), reg_a15), !=, 0)) goto L7: The current setter is reg_c8 while [reg_pp14] was found. Related expressions are [reg_pp14, reg_c8, reg_c9, reg_c7]
