in proc proc11 adding addrExp r28{0} to local table
finding final parameters for proc11
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc10 ###
in proc proc10 adding addrExp r28{0} to local table
in proc proc10 adding addrExp r28{0} to local table
in proc proc10 adding addrExp r28{0} to local table
finding final parameters for proc10
potential param r25
found new parameter r25
potential param r24
found new parameter r24
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x10 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x10 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x10 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x10 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x10 meet with /*signed?*/int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc9 ###
in proc proc9 adding addrExp r28{0} - 4 to local table
in proc proc9 adding addrExp r28{0} - 8 to local table
finding final parameters for proc9
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
size 0x10 meet with size 0x20!
size 0x10 meet with size 0x20!
size 0x10 meet with size 0x20!
size 0x10 meet with size 0x20!
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc8 ###
in proc proc8 adding addrExp r28{0} to local table
in proc proc8 adding addrExp r28{0} - 24 to local table
in proc proc8 adding addrExp r28{0} to local table
finding final parameters for proc8
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc2 ###
in proc proc2 adding addrExp r28{0} to local table
in proc proc2 adding addrExp r28{0} - 44 to local table
in proc proc2 adding addrExp r28{0} to local table
finding final parameters for proc2
potential param r28
found new parameter r28
potential param m[r28{0}]
found new parameter m[r28{0}]
potential param r30
found new parameter r30
potential param r25
found new parameter r25
potential param r26
found new parameter r26
potential param r31
found new parameter r31
potential param r24
found new parameter r24
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc3 ###
in proc proc3 adding addrExp r28{0} to local table
finding final parameters for proc3
potential param r11
found new parameter r11
potential param r15
found new parameter r15
potential param r27
found new parameter r27
potential param r30
found new parameter r30
potential param r10
found new parameter r10
potential param r26
found new parameter r26
potential param r14
found new parameter r14
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc4 ###
in proc proc4 adding addrExp r28{0} to local table
in proc proc4 adding addrExp r28 - 24 to local table
in proc proc4 adding addrExp r28 to local table
finding final parameters for proc4
potential param r26
found new parameter r26
potential param r11
found new parameter r11
potential param r27
found new parameter r27
potential param r31
found new parameter r31
potential param r10
found new parameter r10
potential param r12
found new parameter r12
potential param r8
found new parameter r8
potential param r13
found new parameter r13
potential param r14
found new parameter r14
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
integer size 0x20 meet with SizeType size 0x8!
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc5 ###
in proc proc5 adding addrExp r28{0} to local table
in proc proc5 adding addrExp r28{0} - 24 to local table
in proc proc5 adding addrExp r28{0} to local table
finding final parameters for proc5
potential param r28
found new parameter r28
potential param m[r28{0}]
found new parameter m[r28{0}]
potential param r31
found new parameter r31
potential param r15
found new parameter r15
potential param r27
found new parameter r27
potential param r25
found new parameter r25
potential param r8
found new parameter r8
potential param r9
found new parameter r9
potential param r24
found new parameter r24
potential param r30
found new parameter r30
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc6 ###
in proc proc6 adding addrExp r28 to local table
in proc proc6 adding addrExp r28{0} to local table
in proc proc6 adding addrExp r28 to local table
finding final parameters for proc6
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with /*signed?*/int; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc7 ###
in proc proc7 adding addrExp r28 - 24 to local table
in proc proc7 adding addrExp r28 to local table
in proc proc7 adding addrExp r28{0} to local table
in proc proc7 adding addrExp r28{0} - 40 to local table
in proc proc7 adding addrExp r28{0} to local table
in proc proc7 adding addrExp r28 to local table
in proc proc7 adding addrExp r28 to local table
in proc proc7 adding addrExp r28 to local table
finding final parameters for proc7
finding final parameters for proc2
potential param r28
found new parameter r28
potential param m[r28{0}]
found new parameter m[r28{0}]
potential param r30
found new parameter r30
potential param r25
found new parameter r25
potential param r26
found new parameter r26
potential param r31
found new parameter r31
potential param r24
found new parameter r24
finding final parameters for proc3
potential param r11
found new parameter r11
potential param r15
found new parameter r15
potential param r27
found new parameter r27
potential param r30
found new parameter r30
potential param r10
found new parameter r10
potential param r26
found new parameter r26
potential param r14
found new parameter r14
finding final parameters for proc4
potential param r26
found new parameter r26
potential param r11
found new parameter r11
potential param r27
found new parameter r27
potential param r31
found new parameter r31
potential param r10
found new parameter r10
potential param r12
found new parameter r12
potential param r8
found new parameter r8
potential param r13
found new parameter r13
potential param r14
found new parameter r14
finding final parameters for proc5
potential param r28
found new parameter r28
potential param m[r28{0}]
found new parameter m[r28{0}]
potential param r31
found new parameter r31
potential param r15
found new parameter r15
potential param r27
found new parameter r27
potential param r25
found new parameter r25
potential param r8
found new parameter r8
potential param r9
found new parameter r9
potential param r24
found new parameter r24
potential param r30
found new parameter r30
finding final parameters for proc6
finding final parameters for proc7
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
WARNING: size 0x8 meet with unsigned int; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc1 ###
in proc proc1 adding addrExp r28{0} to local table
in proc proc1 adding addrExp r28{0} to local table
finding final parameters for proc1
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
in proc _start adding addrExp r28{0} - 4 to local table
in proc _start adding addrExp r28{0} - 8 to local table
finding final parameters for _start
potential param r28
found new parameter r28
potential param r26
found new parameter r26
potential param r30
found new parameter r30
potential param r31
found new parameter r31
potential param r27
found new parameter r27
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc1 ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc2 ###
in proc proc2 adding addrExp r28{0} to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc3 ###
WARNING: size 0x8 meet with unsigned int; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc4 ###
in proc proc4 adding addrExp r28 - 24 to local table
in proc proc4 adding addrExp r28 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc5 ###
in proc proc5 adding addrExp r28{0} to local table
in proc proc6 adding addrExp r28 to local table
in proc proc6 adding addrExp r28 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc7 ###
in proc proc7 adding addrExp r28 - 24 to local table
in proc proc7 adding addrExp r28 to local table
in proc proc7 adding addrExp r28{0} to local table
in proc proc7 adding addrExp r28 to local table
in proc proc7 adding addrExp r28 to local table
in proc proc7 adding addrExp r28 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc8 ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc9 ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc10 ###
finding final parameters for proc2
potential param r28
found new parameter r28
potential param m[r28{0}]
found new parameter m[r28{0}]
potential param r25
found new parameter r25
potential param r26
found new parameter r26
potential param r24
found new parameter r24
finding final parameters for proc1
finding final parameters for proc6
finding final parameters for proc7
found seq with more than one outedge!
taken branch is first out edge
dest is not lib
call:   26 {*v* r30, *8* r10, *8* r11, *8* r15, *v* edx, *32* ebx, *v* r28, *v* r29, *v* r31} := CALL proc2(
                *j32* eax := eax
                *j32* ecx := ecx
                *j32* edx := (edx + ecx) - eax
              )
              Reaching definitions: r10=truncu(32,8,(r26{3} + r25{0}) - r24{0}),   r13=r25{0}@15:8,   r24=r24{0},
                r25=r25{0},   r26=(r26{3} + r25{0}) - r24{0},   r27=r27{0} ^ r24{0},   r28=r28{0},
                r30=((r30{0} + r24{0}) + 1) ^ r25{0},   r31=r24{0} | (r26{3} - r24{0}),   m[r28{0}]=%pc,
                tmp1=r26{3} - r24{0},   %flags=ADDFLAGS32( r26{3} - r24{0}, r25{0}, (r26{3} + r25{0}) - r24{0} ),
                %ZF=ADDFLAGS32( r26{3} - r24{0}, r25{0}, (r26{3} + r25{0}) - r24{0} ),
                %CF=ADDFLAGS32( r26{3} - r24{0}, r25{0}, (r26{3} + r25{0}) - r24{0} )
              Live variables:  in proc proc1
dest is not lib
call:   20 <all> := CALL proc1(<all>)
              Reaching definitions: r26=param1 ^ param3,   r27=(param2 + (param1 ^ param3)) | param3,   r28=r28{0} - 8,
                r29=r28{0} - 4,   r30=r30{0},   r31=(r31{0} + r30{0}) + 1,   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=%pc,
                tmp1=r31{0} + r30{0},   %flags=LOGICALFLAGS32( (param2 + (param1 ^ param3)) | param3 ),
                %ZF=LOGICALFLAGS32( (param2 + (param1 ^ param3)) | param3 ),
                %CF=LOGICALFLAGS32( (param2 + (param1 ^ param3)) | param3 )
              Live variables:  in proc _start
dest is not lib
call:   33 <all> := CALL proc3(<all>)
              Reaching definitions: r10=r10{27},   r11=-36,   r15=param2@15:8,   r24=r24{0},   r25=r25{0},
                r26=(edx@31:8) | zfill(8,32,dl),   r27=(param2@31:8) | -36,   r28=r28{0},
                r30=(r30{0} + r25{0}) - r25{0},   r31=r31{0} + (r30{0} + r25{0}),   m[r28{0} - 44]=m[esp]{0},
                m[r28{0}]=%pc,   tmp1=(r26{0} - 1) | r24{0},   %flags=LOGICALFLAGS8( dl ),   %ZF=LOGICALFLAGS8( dl ),
                %CF=LOGICALFLAGS8( dl )
              Live variables:  in proc proc2
dest is not lib
call:   36 <all> := CALL proc4(<all>)
              Reaching definitions: r10=truncu(32,8,edx - 1),   r11=truncu(32,8,ebx - 2),   r14=(edx - 1)@15:8,
                r15=(ebx - 2)@15:8,   r26=r26{26} - 1,   r27=r27{4} - 2,   r28=r28{0},   r30=r30{0} - 1,
                m[r28{0}]=%pc,   tmp1=r26{26},   tmpb=r14{0},   %flags=LOGICALFLAGS32( edx - 1 ),
                %ZF=LOGICALFLAGS32( edx - 1 ),   %CF=LOGICALFLAGS32( edx - 1 )
              Live variables:  in proc proc3
dest is not lib
call:   29 <all> := CALL proc5(<all>)
              Reaching definitions: r8=r8{0},   r10=r13{0},   r11=r11{0},   r12=r12{0},   r13=r13{0},
                r14=(dh - param1)*8*,   r15=r11{0},
                r26=(((((((edx_1@31:8) | zfill(8,32,(param2 ^ param4)*8*))@31:8) | zfill(8,32,dl))@31:8) | zfill(8,32,ch)) & 0xffff00ff) | ((dh - param1)*8* * 256),
                r27=(param8 & 0xffff00ff) | (bl * 256),   r28=r28{0},   r30=r26{0},   r31=r31{0} - 2,   m[r28{0}]=%pc,
                tmp1=r31{0} - 1,   tmpb=r14{0},   %flags=SUBFLAGS8( dh, param1, (dh - param1)*8* ),
                %ZF=(dh - param1)*8* = 0,   %CF=dh <u param1
              Live variables:  in proc proc4
dest is not lib
call:   75 <all> := CALL proc6(<all>)
              Reaching definitions: r8=r8{0},   r9=r9{0},   r10=truncu(32,8,ecx),   r11=-14,   r14=ecx@15:8,   r15=-123
                r24=r24{0},   r25=r25{0},   r26=r25{0},   r27=((ebx - 1) & 0xffff00ff) | 0xffff8500,   r28=r28{0},
                r30=r30{0} - 1,   r31=(param8 + ecx) ^ edx,   m[r28{0} - 24]=m[esp]{0},   m[r28{0}]=%pc,   tmp1=r27{55}
                tmpb=r15{41},   %flags=LOGICALFLAGS32( ebx - 1 ),   %ZF=LOGICALFLAGS32( ebx - 1 ),
                %CF=LOGICALFLAGS32( ebx - 1 )
              Live variables:  in proc proc5
dest is not lib
call:   57 <all> := CALL proc7(<all>)
              Reaching definitions: r11=truncu(32,8,edi + 1),   r14=r11{0},   r24=r24{0},   r25=r25{0},
                r26=(edx & 0xffff00ff) | (bl * 256),   r27=r31{0} + 1,   r28=r28{0},   r30=r30{0} + (r24{0} + r24{0}),
                r31=r31{0} + 1,   m[r28{0}]=%pc,   tmp1=r30{0} + r24{0},
                %flags=ADDFLAGS32( esi + eax, eax, esi + (eax + eax) ),
                %ZF=ADDFLAGS32( esi + eax, eax, esi + (eax + eax) ),
                %CF=ADDFLAGS32( esi + eax, eax, esi + (eax + eax) )
              Live variables:  in proc proc6
found seq with more than one outedge!
taken branch is first out edge
found seq with more than one outedge!
taken branch is first out edge
found seq with more than one outedge!
taken branch is first out edge
dest is not lib
call:  304 <all> := CALL proc8(<all>)
              Reaching definitions: r1=truncu(32,16,(ecx | esi_1) + 1),   r8=r8{0},   r9=truncu(32,8,(ecx | esi_1) + 1)
                r10=truncu(32,8,ebx + eax),   r11=truncu(32,8,(ebx - 1) | eax),   r13=((ecx | esi_1) + 1)@15:8,
                r14=(ebx + eax)@15:8,   r15=((ebx - 1) | eax)@15:8,   r24=r24{0},   r25=(r25{386} | r30{2}) + 1,
                r26=r27{388} + r24{0},   r27=(ebx - 1) | eax,   r28=(r29{0} + 4) - 4,   r29=r29{13},
                r30=(r30{2} + r31{10}) - 1,   r31=r31{390} + 1,   m[r28{0} - 40]=m[esp]{0},   m[r28{0}]=m[r28{0}]{0},
                tmp1=r27{388},   %flags=LOGICALFLAGS32( (ebx - 1) | eax ),   %ZF=LOGICALFLAGS32( (ebx - 1) | eax ),
                %CF=LOGICALFLAGS32( (ebx - 1) | eax )
              Live variables:  in proc proc7
found seq with more than one outedge!
taken branch is first out edge
dest is not lib
call:   84 <all> := CALL proc5(<all>)
              Reaching definitions: r1=truncu(32,16,(ecx | esi_1) + 1),   r8=r8{0},   r9=truncu(32,8,(ecx | esi_1) + 1)
                r10=((ecx | esi_1) + 1)@15:8,   r11=truncu(32,8,ebx_1 | edi_3),   r12=-76,
                r13=((ecx | esi_1) + 1)@15:8,   r14=r14{77},   r15=truncu(32,8,ebx_1 | edi_3),
                r24=(eax & 0xffff00ff) | 0xffffb400,   r25=(r25{386} | r30{2}) + 1,
                r26=(((((((edx@31:8) | zfill(8,32,dl))@31:8) | zfill(8,32,(dl - al)*8*))@31:8) | zfill(8,32,((ecx | esi_1) + 1)@15:8)) & 0xffff00ff) | (dh * 256),
                r27=(ebx & 0xffff00ff) | (truncu(32,8,ebx_1 | edi_3) * 256),   r28=r29{0},   r29=r29{13},   r30=r26{36}
                r31=r31{54} - 2,   m[r28{0} - 40]=m[esp]{0},   m[r28{0}]=m[r28{0}]{0},   tmp1=r31{54} - 1,
                tmpb=r26{36}@15:8,   %flags=SUBFLAGS8( edx@15:8, al, dh ),   %ZF=dh = 0,   %CF=(edx@15:8) <u al
              Live variables:  in proc proc7
found seq with more than one outedge!
taken branch is first out edge
found seq with more than one outedge!
taken branch is first out edge
found seq with more than one outedge!
taken branch is first out edge
found seq with more than one outedge!
taken branch is first out edge
dest is not lib
call:   47 <all> := CALL proc9(<all>)
              Reaching definitions: r24=r31{0} + r26{2},
                r25=(r25{0} + r30{0}) - ((r26{0} ^ r24{0}) + (r30{0} - (r26{0} ^ r24{0}))),   r26=r26{2},   r27=r27{0},
                r28=(r28{0} + 4) - 4,   r30=r30{0} - (r26{0} ^ r24{0}),   r31=(edi + 1) ^ ebx,
                m[r28{0} + 2]=m[esp + 2]{53},   m[r28{0} - 24]=m[esp]{0},   m[r28{0}]=%pc,
                tmp1=(r25{0} + r30{0}) - (r26{0} ^ r24{0}),
                %flags=SUBFLAGS32( (ecx + esi) - (edx ^ eax), esi - (edx ^ eax), (ecx + esi) - esi ),
                %ZF=((ecx + esi) - esi) = 0,   %CF= *u32*(ecx + esi) - (edx ^ eax) <u  *u32*esi - (edx ^ eax)
              Live variables:  in proc proc8
found seq with more than one outedge!
taken branch is first out edge
dest is not lib
call:   38 <all> := CALL proc10(<all>)
              Reaching definitions: r1=r1{85},   r9=truncu(32,8,ecx_3 - 1),   r10=truncu(32,8,ebx - 1),   r11=-82,
                r12=eax_1@15:8,   r14=44,   r15=r15{14},   r24=r24{10},   r25=r25{87} - 1,
                r26=((ebx - 1) & 0xffff00ff) | 0x2c00,   r27=(ebx@31:8) | -82,   r28=r28{0} - 8,
                r30=r30{0} - (((((r24{0} & 0xffff00ff) | 0xffff9500) & 0xffff00ff) | 0x6b00) + (((r25{0}@31:8) | zfill(8,32,0 - r9{0})) | r31{0})),
                r31=(edi - 1) ^ esi,   m[r28{0} - 4]=64,   m[r28{0} - 8]=%pc,   tmp1=r25{87},   tmpb=(r27{76} - 1)@15:8
                %flags=LOGICALFLAGS32( ecx_3 - 1 ),   %ZF=LOGICALFLAGS32( ecx_3 - 1 ),
                %CF=LOGICALFLAGS32( ecx_3 - 1 )
              Live variables:  in proc proc9
found seq with more than one outedge!
taken branch is first out edge
dest is not lib
call:   27 <all> := CALL proc11(<all>)
              Reaching definitions: r1=(truncu(32,16,param2)@15:8) | 80,   r8=eax@15:8,   r9=80,   r11=110,
                r12=eax@15:8,   r24=(eax@31:8) | zfill(8,32,eax@15:8),   r25=(param2@31:8) | 80,   r28=r28{0},
                m[r28{0}]=%pc,   tmp1=(r24{0} & 0xffff00ff) | 0xffffee00,   %flags=LOGICALFLAGS32( eax ),
                %ZF=LOGICALFLAGS32( eax ),   %CF=LOGICALFLAGS32( eax )
              Live variables:  in proc proc10
