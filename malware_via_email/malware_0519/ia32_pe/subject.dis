// fn0040127F
// Return size: 0
void fn0040127F()
fn0040127F_entry:
	goto l0040127F
	// succ:  l0040127F
l00401023:
l00401091:
	edi = edx
	esi = esi + 0x00000001
	SZO = cond(esi)
	edi = edi - 0x00000001
	SZO = cond(edi)
	esi = esi + ebx
	SCZO = cond(esi)
	edx = edx ^ esi
	SZO = cond(edx)
	C = false
	ebx = ebx ^ ecx
	SZO = cond(ebx)
	C = false
	branch Test(OV,O) l00401106
	// succ:  l0040109D l00401106
l0040109D:
	esp = esp - 0x00000002
	Mem0[esp:word16] = di
	di = Mem0[esp:word16]
	esp = esp + 0x00000002
	v27 = ebx
	ebx = ebx
	ebx = v27
	branch Test(NO,O) l00401106
	// succ:  l004010A5 l00401106
l004010A5:
	Mem0[edi + 0x2BBDC4F8:word32] = 0x8ACE03D3
	al = __inb(dx)
	ebx = ebx - 0x00000001
	SZO = cond(ebx)
	dl = dl | al
	SZO = cond(dl)
	C = false
	edi = edi - 0x00000001
	SZO = cond(edi)
	edx = edx - 0x00000001
	SZO = cond(edx)
	branch Test(OV,O) l004010DF
	// succ:  l004010B7 l004010DF
l004010B7:
	esp = esp - 0x00000004
	Mem0[esp:word32] = edx
	edx = Mem0[esp:word32]
	esp = esp + 0x00000004
l004010DF:
	edx = edx - 0x00000001
	SZO = cond(edx)
	edx = edx ^ ebx
	SZO = cond(edx)
	C = false
	bh = dl
	cl = cl - al
	SCZO = cond(cl)
	edi = edi ^ eax
	SZO = cond(edi)
	C = false
	edi = edi - eax
	SCZO = cond(edi)
	cl = cl | bl
	SZO = cond(cl)
	C = false
	edx = edx + eax
	SCZO = cond(edx)
	esi = esi + 0x00000001
	SZO = cond(esi)
	bh = ch
	branch Test(LT,SO) l00401191
	// succ:  l004010F7 l00401191
l004010F7:
	// succ:  l004010FC
l004010FC:
	branch Test(GE,SO) l00401191
	// succ:  l00401102 l00401191
l00401102:
	goto lD16B119E
	// succ:  lD16B119E
l00401106:
	edx = edx - ecx
	SCZO = cond(edx)
	edi = esi
	ecx = ecx | edi
	SZO = cond(ecx)
	C = false
	esi = ecx
	esi = esi + eax
	SCZO = cond(esi)
	esi = esi - edx
	SCZO = cond(esi)
	ebx = ebx | ecx
	SZO = cond(ebx)
	C = false
	edi = edi | edx
	SZO = cond(edi)
	C = false
	edi = edi ^ ebx
	SZO = cond(edi)
	C = false
	edx = edx ^ eax
	SZO = cond(edx)
	C = false
	branch Test(OV,O) l00401023
	// succ:  l00401120 l00401023
l00401120:
	dx = dx
	di = di
	branch Test(NO,O) l00401023
	// succ:  l0040112C l00401023
l0040112C:
l00401131:
l00401191:
	ecx = ecx - 0x00000001
	SZO = cond(ecx)
	edi = edi | esi
	SZO = cond(edi)
	C = false
	bh = bh ^ dl
	SZO = cond(bh)
	C = false
	bh = bh - bl
	SCZO = cond(bh)
	bh = 0x90
	dl = dl - bh
	SCZO = cond(dl)
	cl = cl + bh
	SCZO = cond(cl)
	ecx = ecx - edi
	SCZO = cond(ecx)
	bh = bh ^ bl
	SZO = cond(bh)
	C = false
	branch Test(PE,P) l00401131
	// succ:  l004011A4 l00401131
l004011A4:
l0040127F:
	esp = esp - 0x00000004
	Mem0[esp:word32] = ebp
	ebp = esp
	esi = ebx
	edi = edi ^ edx
	SZO = cond(edi)
	C = false
	edi = edx
	// succ:  l00401288
l00401288:
	ebx = ebx + 0x00000001
	SZO = cond(ebx)
	ecx = eax
	ebx = eax
	ecx = edi
	edx = eax
	// succ:  l00401290
l00401290:
	branch Test(ULT,C) l00401091
	// succ:  l00401297 l00401091
l00401297:
	edi = edi
	branch Test(UGE,C) l00401091
	// succ:  l0040129F l00401091
l0040129F:
	Mem0[0xAACB3039:byte] = al
	esp = esp - 0x00000004
	Mem0[esp:word32] = es
	Mem0[edi:byte] = __in(edx)
	edi = edi + 0x00000001
	branch Test(NO,O) l00401290
	// succ:  l004012A8 l00401290
l004012A8:
	v15 = Mem0[ebx:word32] - 0x00 - C
	Mem0[ebx:word32] = v15
	SCZO = cond(v15)
	v18 = Mem0[ebx + 0xF794D8BE:byte] + ah
	Mem0[ebx + 0xF794D8BE:byte] = v18
	SCZO = cond(v18)
	branch Test(PE,P) l00401288
	// succ:  l004012B3 l00401288
l004012B3:
	eax = eax + 0x2929921F + C
	SCZO = cond(eax)
	v20 = Mem0[eax + 0x00000044 + edx * 0x00000002:word32] - edx
	Mem0[eax + 0x00000044 + edx * 0x00000002:word32] = v20
	SCZO = cond(v20)
	bl = bl | Mem0[esi:byte]
	SZO = cond(bl)
	C = false
	v22 = Mem0[ecx:word32] | ebp
	Mem0[ecx:word32] = v22
	SZO = cond(Mem0[ecx:word32])
	C = false
	branch Test(LT,SO) l004012C5
	// succ:  l004012C2 l004012C5
l004012C2:
	v24 = eax
	eax = esi
	esi = v24
	al = Mem0[fs:ecx + 0x00000029:byte]
	goto l004012C8
	// succ:  l004012C8
l004012C5:
	esp = esp + 0x00000001
	SZO = cond(esp)
	v30 = Mem0[ecx:word32] & ebp
	Mem0[ecx:word32] = v30
	SZO = cond(Mem0[ecx:word32])
	C = false
	// succ:  l004012C8
l004012C8:
	v31 = Mem0[edx:word32] - edi
	Mem0[edx:word32] = v31
	SCZO = cond(v31)
	esi = Mem0[esp:word32]
	esp = esp + 0x00000004
	esp = Mem0[eax - 0x0000004E:word32]
	v32 = eax
	eax = esi
	esi = v32
	al = 0x2B
	dl = 0xD2
	eax = eax + 0x19862AB0 + C
	SCZO = cond(eax)
lD16B119E:
fn0040127F_exit:


