Unknown library function GetModuleHandleA
COMPUTED JUMP at 0x40125b, pDest = m[0x40704c]
COMPUTED JUMP at 0x4019a7, pDest = r26
assgn   14 *32* %pc := m[0x401008]
is readonly
after removing matching assigns (%pc).
in proc proc1 adding addrExp r28{0} - 4 to local table
in proc proc1 adding addrExp r28{0} - 8 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 20 to local table
in proc proc1 adding addrExp r28{0} - 8 to local table
finding final parameters for proc1
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
assgn   19 *32* %pc := m[0x401010]
is readonly
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
in proc proc2 adding addrExp r28{0} - 4 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 16 to local table
in proc proc2 adding addrExp r28{0} - 20 to local table
in proc proc2 adding addrExp r28{0} - 24 to local table
in proc proc2 adding addrExp r28{0} - 28 to local table
in proc proc2 adding addrExp r28{0} - 32 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
finding final parameters for proc2
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
in proc proc9 adding addrExp r28{0} - 12 to local table
in proc proc9 adding addrExp r28{0} - 20 to local table
in proc proc9 adding addrExp r28{0} - 4 to local table
in proc proc9 adding addrExp r28{0} - 8 to local table
in proc proc9 adding addrExp r28{0} - 16 to local table
in proc proc9 adding addrExp r28{0} - 8 to local table
in proc proc9 adding addrExp r28{0} - 12 to local table
in proc proc9 adding addrExp r28{0} - 16 to local table
in proc proc9 adding addrExp r28{0} - 20 to local table
in proc proc9 adding addrExp r28{0} - 12 to local table
in proc proc9 adding addrExp r28{0} - 20 to local table
in proc proc9 adding addrExp r28{0} - 8 to local table
in proc proc9 adding addrExp r28{0} - 16 to local table
finding final parameters for proc9
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc3 ###
in proc proc3 adding addrExp r28{0} - 5 to local table
in proc proc3 adding addrExp r28{0} - 28 to local table
in proc proc3 adding addrExp r28{0} - 36 to local table
in proc proc3 adding addrExp r28{0} - 40 to local table
in proc proc3 adding addrExp r28{0} - 44 to local table
in proc proc3 adding addrExp r28{0} - 16 to local table
in proc proc3 adding addrExp r28{0} - 32 to local table
in proc proc3 adding addrExp r28{0} - 4 to local table
in proc proc3 adding addrExp r28{0} - 12 to local table
in proc proc3 adding addrExp r28{0} - 17 to local table
in proc proc3 adding addrExp r28{0} - 24 to local table
in proc proc3 adding addrExp r28{0} - 5 to local table
in proc proc3 adding addrExp r28{0} - 12 to local table
in proc proc3 adding addrExp r28{0} - 24 to local table
in proc proc3 adding addrExp r28{0} - 28 to local table
in proc proc3 adding addrExp r28{0} - 36 to local table
in proc proc3 adding addrExp r28{0} - 40 to local table
in proc proc3 adding addrExp r28{0} - 44 to local table
in proc proc3 adding addrExp r28{0} - 5 to local table
in proc proc3 adding addrExp r28{0} - 12 to local table
in proc proc3 adding addrExp r28{0} - 24 to local table
in proc proc3 adding addrExp r28{0} - 12 to local table
in proc proc3 adding addrExp r28{0} - 36 to local table
in proc proc3 adding addrExp r28{0} - 40 to local table
in proc proc3 adding addrExp r28{0} - 44 to local table
in proc proc3 adding addrExp r28{0} - 12 to local table
in proc proc3 adding addrExp r28{0} - 36 to local table
in proc proc3 adding addrExp r28{0} - 40 to local table
in proc proc3 adding addrExp r28{0} - 44 to local table
in proc proc3 adding addrExp r28{0} - 12 to local table
in proc proc3 adding addrExp r28{0} - 28 to local table
in proc proc3 adding addrExp r28{0} - 28 to local table
in proc proc3 adding addrExp r28{0} - 24 to local table
in proc proc3 adding addrExp r28{0} - 28 to local table
in proc proc3 adding addrExp r28{0} - 24 to local table
in proc proc3 adding addrExp r28{0} - 12 to local table
in proc proc3 adding addrExp r28{0} - 24 to local table
in proc proc3 adding addrExp r28{0} - 28 to local table
in proc proc3 adding addrExp r28{0} - 36 to local table
in proc proc3 adding addrExp r28{0} - 40 to local table
in proc proc3 adding addrExp r28{0} - 44 to local table
in proc proc3 adding addrExp r28{0} - 24 to local table
in proc proc3 adding addrExp r28{0} - 12 to local table
in proc proc3 adding addrExp r28{0} - 24 to local table
in proc proc3 adding addrExp r28{0} - 28 to local table
in proc proc3 adding addrExp r28{0} - 36 to local table
in proc proc3 adding addrExp r28{0} - 40 to local table
in proc proc3 adding addrExp r28{0} - 44 to local table
finding final parameters for proc3
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} - 28]
found new parameter m[r28{0} - 28]
potential param m[r28{0} - 36]
found new parameter m[r28{0} - 36]
potential param m[r28{0} - 40]
found new parameter m[r28{0} - 40]
potential param m[r28{0} - 44]
found new parameter m[r28{0} - 44]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} - 16]
found new parameter m[r28{0} - 16]
potential param m[r28{0} - 32]
found new parameter m[r28{0} - 32]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
assgn    6 *32* r24 := m[0x40702c]
assgn   11 *32* r25 := m[0x40702c]
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc6 ###
in proc proc6 adding addrExp r28{0} - 4 to local table
finding final parameters for proc6
potential param r28
found new parameter r28
potential param r24
found new parameter r24
potential param r26
found new parameter r26
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
assgn    9 *32* tmp1 := m[0x407044]
assgn   12 *32* r24 := m[0x407034]
assgn   35 *32* %pc := m[0x401010]
is readonly
assgn   38 *32* tmp1 := m[0x407024]
assgn   50 *32* r24 := m[0x407024]
assgn   60 *32* r25 := m[0x407024]
assgn  114 *32* r24 := m[0x407024]
assgn  133 *32* r30 := m[0x407024]
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc4 ###
in proc proc4 adding addrExp r28{0} - 8 to local table
in proc proc4 adding addrExp r28{0} - 16 to local table
in proc proc4 adding addrExp r28{0} - 28 to local table
in proc proc4 adding addrExp r28{0} - 12 to local table
in proc proc4 adding addrExp r28{0} - 4 to local table
in proc proc4 adding addrExp r28{0} - 36 to local table
in proc proc4 adding addrExp r28{0} - 32 to local table
in proc proc4 adding addrExp r28{0} - 32 to local table
in proc proc4 adding addrExp r28{0} - 32 to local table
in proc proc4 adding addrExp r28{0} - 20 to local table
in proc proc4 adding addrExp r28{0} - 40 to local table
in proc proc4 adding addrExp r28{0} - 44 to local table
in proc proc4 adding addrExp r28{0} - 48 to local table
in proc proc4 adding addrExp r28{0} - 52 to local table
in proc proc4 adding addrExp r28{0} - 56 to local table
in proc proc4 adding addrExp r28{0} - 40 to local table
in proc proc4 adding addrExp r28{0} - 44 to local table
in proc proc4 adding addrExp r28{0} - 48 to local table
in proc proc4 adding addrExp r28{0} - 52 to local table
in proc proc4 adding addrExp r28{0} - 24 to local table
in proc proc4 adding addrExp r28{0} - 12 to local table
in proc proc4 adding addrExp r28{0} - 8 to local table
in proc proc4 adding addrExp r28{0} - 12 to local table
in proc proc4 adding addrExp r28{0} - 16 to local table
in proc proc4 adding addrExp r28{0} - 28 to local table
in proc proc4 adding addrExp r28{0} - 16 to local table
in proc proc4 adding addrExp r28{0} - 28 to local table
in proc proc4 adding addrExp r28{0} - 8 to local table
in proc proc4 adding addrExp r28{0} - 8 to local table
in proc proc4 adding addrExp r28{0} - 8 to local table
in proc proc4 adding addrExp r28{0} - 12 to local table
in proc proc4 adding addrExp r28{0} - 8 to local table
in proc proc4 adding addrExp r28{0} - 12 to local table
in proc proc4 adding addrExp r28{0} - 16 to local table
in proc proc4 adding addrExp r28{0} - 28 to local table
finding final parameters for proc4
potential param r28
found new parameter r28
potential param r30
found new parameter r30
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
assgn    5 *32* r26 := m[0x407048]
after removing matching assigns (%pc).
in proc proc8 adding addrExp r28{0} - 4 to local table
finding final parameters for proc8
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
assgn    7 *32* r25 := m[0x407048]
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc7 ###
in proc proc7 adding addrExp r28{0} - 4 to local table
in proc proc7 adding addrExp r28{0} - 16 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 8 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
finding final parameters for proc7
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
assgn   34 *32* %pc := m[0x401010]
is readonly
assgn   71 *32* %pc := m[0x401004]
is readonly
assgn   77 *32* %pc := m[0x401008]
is readonly
assgn   86 *32* %pc := m[0x401004]
is readonly
assgn   92 *32* %pc := m[0x401008]
is readonly
assgn  211 *32* %pc := m[0x401000]
is readonly
assgn  330 *32* tmp1 := m[0x407044]
assgn  334 *32* r26 := m[0x407034]
assgn  426 *32* %pc := m[0x401004]
is readonly
assgn  432 *32* %pc := m[0x401008]
is readonly
assgn  435 *32* tmp1 := m[0x407044]
assgn  438 *32* r26 := m[0x407034]
assgn  478 *32* tmp1 := m[0x407024]
assgn  481 *32* tmp1 := m[0x407044]
assgn  484 *32* r25 := m[0x407034]
assgn  498 *32* r26 := m[0x407034]
assgn  541 *32* tmp1 := m[0x407044]
assgn  544 *32* r25 := m[0x407034]
assgn  584 *32* tmp1 := m[0x407024]
assgn  587 *32* tmp1 := m[0x407044]
assgn  604 *32* %pc := m[0x401010]
is readonly
assgn  616 *32* r24 := m[0x407034]
assgn  621 *32* %pc := m[0x401010]
is readonly
assgn  629 *32* %pc := m[0x40100c]
is readonly
assgn  638 *32* r26 := m[0x407024]
assgn  648 *32* tmp1 := m[0x407044]
assgn  652 *32* r25 := m[0x407024]
assgn  658 *32* r26 := m[0x407034]
assgn  669 *32* r24 := m[0x407024]
assgn  680 *32* r26 := m[0x407024]
assgn  686 *32* r25 := m[0x40704c]
after removing matching assigns (%pc).
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc5 ###
in proc proc5 adding addrExp r28{0} - 108 to local table
in proc proc5 adding addrExp r28{0} - 8 to local table
in proc proc5 adding addrExp r28{0} - 16 to local table
in proc proc5 adding addrExp r28{0} - 60 to local table
in proc proc5 adding addrExp r28{0} - 112 to local table
in proc proc5 adding addrExp r28{0} - 116 to local table
in proc proc5 adding addrExp r28{0} - 120 to local table
in proc proc5 adding addrExp r28{0} - 4 to local table
in proc proc5 adding addrExp r28{0} - 84 to local table
in proc proc5 adding addrExp r28{0} - 76 to local table
in proc proc5 adding addrExp r28{0} - 64 to local table
in proc proc5 adding addrExp r28{0} - 44 to local table
in proc proc5 adding addrExp r28{0} - 88 to local table
in proc proc5 adding addrExp r28{0} - 92 to local table
in proc proc5 adding addrExp r28{0} - 96 to local table
in proc proc5 adding addrExp r28{0} - 100 to local table
in proc proc5 adding addrExp r28{0} - 104 to local table
in proc proc5 adding addrExp r28{0} - 52 to local table
in proc proc5 adding addrExp r28{0} - 88 to local table
in proc proc5 adding addrExp r28{0} - 92 to local table
in proc proc5 adding addrExp r28{0} - 96 to local table
in proc proc5 adding addrExp r28{0} - 100 to local table
in proc proc5 adding addrExp r28{0} - 88 to local table
in proc proc5 adding addrExp r28{0} - 92 to local table
in proc proc5 adding addrExp r28{0} - 96 to local table
in proc proc5 adding addrExp r28{0} - 96 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffa0 existing type DWORD but added type HANDLE
in proc proc5 adding addrExp r28{0} - 100 to local table
in proc proc5 adding addrExp r28{0} - 60 to local table
in proc proc5 adding addrExp r28{0} - 92 to local table
in proc proc5 adding addrExp r28{0} - 96 to local table
in proc proc5 adding addrExp r28{0} - 100 to local table
in proc proc5 adding addrExp r28{0} - 100 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffff9c existing type unsigned int but added type HANDLE
in proc proc5 adding addrExp r28{0} - 104 to local table
in proc proc5 adding addrExp r28{0} - 8 to local table
in proc proc5 adding addrExp r28{0} - 16 to local table
in proc proc5 adding addrExp r28{0} - 16 to local table
in proc proc5 adding addrExp r28{0} - 16 to local table
in proc proc5 adding addrExp r28{0} - 44 to local table
in proc proc5 adding addrExp r28{0} - 96 to local table
in proc proc5 adding addrExp r28{0} - 100 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffff9c existing type unsigned int but added type void *
in proc proc5 adding addrExp r28{0} - 104 to local table
in proc proc5 adding addrExp r28{0} - 108 to local table
in proc proc5 adding addrExp r28{0} - 96 to local table
in proc proc5 adding addrExp r28{0} - 100 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffff9c existing type unsigned int but added type void *
in proc proc5 adding addrExp r28{0} - 104 to local table
in proc proc5 adding addrExp r28{0} - 108 to local table
in proc proc5 adding addrExp r28{0} - 96 to local table
in proc proc5 adding addrExp r28{0} - 100 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffff9c existing type unsigned int but added type void *
in proc proc5 adding addrExp r28{0} - 104 to local table
in proc proc5 adding addrExp r28{0} - 108 to local table
in proc proc5 adding addrExp r28{0} - 44 to local table
in proc proc5 adding addrExp r28{0} - 76 to local table
in proc proc5 adding addrExp r28{0} - 64 to local table
in proc proc5 adding addrExp r28{0} - 96 to local table
in proc proc5 adding addrExp r28{0} - 100 to local table
in proc proc5 adding addrExp r28{0} - 104 to local table
in proc proc5 adding addrExp r28{0} - 108 to local table
in proc proc5 adding addrExp r28{0} - 112 to local table
in proc proc5 adding addrExp r28{0} - 116 to local table
in proc proc5 adding addrExp r28{0} - 120 to local table
in proc proc5 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc5 adding addrExp r28{0} - 8 to local table
TYPE ERROR: Existing type at address 0xfffffff8 is not structure or array type
in proc proc5 adding addrExp r28{0} - 16 to local table
TYPE ERROR: Existing type at address 0xfffffff0 is not structure or array type
in proc proc5 adding addrExp r28{0} - 44 to local table
in proc proc5 adding addrExp r28{0} - 52 to local table
in proc proc5 adding addrExp r28{0} - 60 to local table
TYPE ERROR: Existing type at address 0xffffffc4 is not structure or array type
in proc proc5 adding addrExp r28{0} - 64 to local table
in proc proc5 adding addrExp r28{0} - 76 to local table
in proc proc5 adding addrExp r28{0} - 84 to local table
in proc proc5 adding addrExp r28{0} - 88 to local table
in proc proc5 adding addrExp r28{0} - 92 to local table
in proc proc5 adding addrExp r28{0} - 96 to local table
in proc proc5 adding addrExp r28{0} - 100 to local table
in proc proc5 adding addrExp r28{0} - 104 to local table
in proc proc5 adding addrExp r28{0} - 108 to local table
in proc proc5 adding addrExp r28{0} - 112 to local table
TYPE ERROR: Existing type at address 0xffffff90 is not structure or array type
in proc proc5 adding addrExp r28{0} - 116 to local table
TYPE ERROR: Existing type at address 0xffffff8c is not structure or array type
in proc proc5 adding addrExp r28{0} - 120 to local table
TYPE ERROR: Existing type at address 0xffffff88 is not structure or array type
in proc proc5 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc5 adding addrExp r28{0} - 8 to local table
TYPE ERROR: Existing type at address 0xfffffff8 is not structure or array type
in proc proc5 adding addrExp r28{0} - 16 to local table
TYPE ERROR: Existing type at address 0xfffffff0 is not structure or array type
in proc proc5 adding addrExp r28{0} - 44 to local table
in proc proc5 adding addrExp r28{0} - 52 to local table
in proc proc5 adding addrExp r28{0} - 60 to local table
TYPE ERROR: Existing type at address 0xffffffc4 is not structure or array type
in proc proc5 adding addrExp r28{0} - 64 to local table
in proc proc5 adding addrExp r28{0} - 76 to local table
in proc proc5 adding addrExp r28{0} - 84 to local table
in proc proc5 adding addrExp r28{0} - 88 to local table
in proc proc5 adding addrExp r28{0} - 92 to local table
in proc proc5 adding addrExp r28{0} - 96 to local table
in proc proc5 adding addrExp r28{0} - 100 to local table
in proc proc5 adding addrExp r28{0} - 104 to local table
in proc proc5 adding addrExp r28{0} - 108 to local table
in proc proc5 adding addrExp r28{0} - 112 to local table
TYPE ERROR: Existing type at address 0xffffff90 is not structure or array type
in proc proc5 adding addrExp r28{0} - 116 to local table
TYPE ERROR: Existing type at address 0xffffff8c is not structure or array type
in proc proc5 adding addrExp r28{0} - 120 to local table
TYPE ERROR: Existing type at address 0xffffff88 is not structure or array type
in proc proc5 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc5 adding addrExp r28{0} - 8 to local table
TYPE ERROR: Existing type at address 0xfffffff8 is not structure or array type
in proc proc5 adding addrExp r28{0} - 16 to local table
TYPE ERROR: Existing type at address 0xfffffff0 is not structure or array type
in proc proc5 adding addrExp r28{0} - 44 to local table
in proc proc5 adding addrExp r28{0} - 52 to local table
in proc proc5 adding addrExp r28{0} - 60 to local table
TYPE ERROR: Existing type at address 0xffffffc4 is not structure or array type
in proc proc5 adding addrExp r28{0} - 64 to local table
in proc proc5 adding addrExp r28{0} - 76 to local table
in proc proc5 adding addrExp r28{0} - 84 to local table
in proc proc5 adding addrExp r28{0} - 88 to local table
in proc proc5 adding addrExp r28{0} - 92 to local table
in proc proc5 adding addrExp r28{0} - 96 to local table
in proc proc5 adding addrExp r28{0} - 100 to local table
in proc proc5 adding addrExp r28{0} - 104 to local table
in proc proc5 adding addrExp r28{0} - 108 to local table
in proc proc5 adding addrExp r28{0} - 112 to local table
TYPE ERROR: Existing type at address 0xffffff90 is not structure or array type
in proc proc5 adding addrExp r28{0} - 116 to local table
TYPE ERROR: Existing type at address 0xffffff8c is not structure or array type
in proc proc5 adding addrExp r28{0} - 120 to local table
TYPE ERROR: Existing type at address 0xffffff88 is not structure or array type
in proc proc5 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc5 adding addrExp r28{0} - 8 to local table
TYPE ERROR: Existing type at address 0xfffffff8 is not structure or array type
in proc proc5 adding addrExp r28{0} - 16 to local table
TYPE ERROR: Existing type at address 0xfffffff0 is not structure or array type
in proc proc5 adding addrExp r28{0} - 44 to local table
in proc proc5 adding addrExp r28{0} - 52 to local table
in proc proc5 adding addrExp r28{0} - 60 to local table
TYPE ERROR: Existing type at address 0xffffffc4 is not structure or array type
in proc proc5 adding addrExp r28{0} - 64 to local table
in proc proc5 adding addrExp r28{0} - 76 to local table
in proc proc5 adding addrExp r28{0} - 84 to local table
in proc proc5 adding addrExp r28{0} - 88 to local table
in proc proc5 adding addrExp r28{0} - 92 to local table
in proc proc5 adding addrExp r28{0} - 96 to local table
in proc proc5 adding addrExp r28{0} - 100 to local table
in proc proc5 adding addrExp r28{0} - 104 to local table
in proc proc5 adding addrExp r28{0} - 108 to local table
in proc proc5 adding addrExp r28{0} - 112 to local table
TYPE ERROR: Existing type at address 0xffffff90 is not structure or array type
in proc proc5 adding addrExp r28{0} - 116 to local table
TYPE ERROR: Existing type at address 0xffffff8c is not structure or array type
in proc proc5 adding addrExp r28{0} - 120 to local table
TYPE ERROR: Existing type at address 0xffffff88 is not structure or array type
in proc proc5 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc5 adding addrExp r28{0} - 8 to local table
TYPE ERROR: Existing type at address 0xfffffff8 is not structure or array type
in proc proc5 adding addrExp r28{0} - 16 to local table
TYPE ERROR: Existing type at address 0xfffffff0 is not structure or array type
in proc proc5 adding addrExp r28{0} - 44 to local table
in proc proc5 adding addrExp r28{0} - 52 to local table
in proc proc5 adding addrExp r28{0} - 60 to local table
TYPE ERROR: Existing type at address 0xffffffc4 is not structure or array type
in proc proc5 adding addrExp r28{0} - 64 to local table
in proc proc5 adding addrExp r28{0} - 76 to local table
in proc proc5 adding addrExp r28{0} - 84 to local table
in proc proc5 adding addrExp r28{0} - 88 to local table
in proc proc5 adding addrExp r28{0} - 92 to local table
in proc proc5 adding addrExp r28{0} - 96 to local table
in proc proc5 adding addrExp r28{0} - 100 to local table
in proc proc5 adding addrExp r28{0} - 104 to local table
in proc proc5 adding addrExp r28{0} - 108 to local table
in proc proc5 adding addrExp r28{0} - 112 to local table
TYPE ERROR: Existing type at address 0xffffff90 is not structure or array type
in proc proc5 adding addrExp r28{0} - 116 to local table
TYPE ERROR: Existing type at address 0xffffff8c is not structure or array type
in proc proc5 adding addrExp r28{0} - 120 to local table
TYPE ERROR: Existing type at address 0xffffff88 is not structure or array type
in proc proc5 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc5 adding addrExp r28{0} - 8 to local table
TYPE ERROR: Existing type at address 0xfffffff8 is not structure or array type
in proc proc5 adding addrExp r28{0} - 16 to local table
TYPE ERROR: Existing type at address 0xfffffff0 is not structure or array type
in proc proc5 adding addrExp r28{0} - 44 to local table
in proc proc5 adding addrExp r28{0} - 52 to local table
in proc proc5 adding addrExp r28{0} - 60 to local table
TYPE ERROR: Existing type at address 0xffffffc4 is not structure or array type
in proc proc5 adding addrExp r28{0} - 64 to local table
in proc proc5 adding addrExp r28{0} - 76 to local table
in proc proc5 adding addrExp r28{0} - 84 to local table
in proc proc5 adding addrExp r28{0} - 88 to local table
in proc proc5 adding addrExp r28{0} - 92 to local table
in proc proc5 adding addrExp r28{0} - 96 to local table
in proc proc5 adding addrExp r28{0} - 100 to local table
in proc proc5 adding addrExp r28{0} - 104 to local table
in proc proc5 adding addrExp r28{0} - 108 to local table
in proc proc5 adding addrExp r28{0} - 112 to local table
TYPE ERROR: Existing type at address 0xffffff90 is not structure or array type
in proc proc5 adding addrExp r28{0} - 116 to local table
TYPE ERROR: Existing type at address 0xffffff8c is not structure or array type
in proc proc5 adding addrExp r28{0} - 120 to local table
TYPE ERROR: Existing type at address 0xffffff88 is not structure or array type
finding final parameters for proc5
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param tmp2
potential param tmpl
potential param m[r28{0} - 108]
found new parameter m[r28{0} - 108]
potential param r9
found new parameter r9
assgn   17 *32* %pc := m[0x401004]
is readonly
assgn   33 *32* tmp1 := m[0x407044]
assgn   44 *32* %pc := m[0x401000]
is readonly
assgn  118 *32* r26 := m[0x407040]
assgn  137 *32* r25 := m[24]
assgn  143 *32* tmp1 := m[0x407044]
assgn  179 *32* r26 := m[0x407040]
assgn  186 *32* r28 := m[0x407038]
assgn  187 *32* r30 := m[0x407028]
assgn  188 *32* r31 := m[0x407030]
assgn  189 *32* r27 := m[0x40703c]
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
in proc _start adding addrExp r28{0} - 4 to local table
in proc _start adding addrExp r28{0} - 148 to local table
in proc _start adding addrExp r28{0} - 152 to local table
in proc _start adding addrExp r28{0} - 156 to local table
in proc _start adding addrExp r28{0} - 160 to local table
in proc _start adding addrExp r28{0} - 164 to local table
in proc _start adding addrExp r28{0} - 128 to local table
in proc _start adding addrExp r28{0} - 120 to local table
in proc _start adding addrExp r28{0} - 164 to local table
in proc _start adding addrExp r28{0} - 168 to local table
in proc _start adding addrExp r28{0} - 172 to local table
in proc _start adding addrExp r28{0} - 168 to local table
in proc _start adding addrExp r28{0} - 172 to local table
in proc _start adding addrExp r28{0} - 124 to local table
in proc _start adding addrExp r28{0} - 164 to local table
in proc _start adding addrExp r28{0} - 168 to local table
in proc _start adding addrExp r28{0} - 172 to local table
in proc _start adding addrExp r28{0} - 176 to local table
finding final parameters for _start
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc3 ###
in proc proc3 adding addrExp r28{0} - 28 to local table
in proc proc3 adding addrExp r28{0} - 36 to local table
in proc proc3 adding addrExp r28{0} - 40 to local table
in proc proc3 adding addrExp r28{0} - 44 to local table
in proc proc3 adding addrExp r28{0} - 16 to local table
in proc proc3 adding addrExp r28{0} - 32 to local table
in proc proc3 adding addrExp r28{0} - 12 to local table
in proc proc3 adding addrExp r28{0} - 24 to local table
in proc proc3 adding addrExp r28{0} - 12 to local table
in proc proc3 adding addrExp r28{0} - 24 to local table
in proc proc3 adding addrExp r28{0} - 28 to local table
in proc proc3 adding addrExp r28{0} - 36 to local table
in proc proc3 adding addrExp r28{0} - 40 to local table
in proc proc3 adding addrExp r28{0} - 44 to local table
in proc proc3 adding addrExp r28{0} - 12 to local table
in proc proc3 adding addrExp r28{0} - 24 to local table
in proc proc3 adding addrExp r28{0} - 12 to local table
in proc proc3 adding addrExp r28{0} - 36 to local table
in proc proc3 adding addrExp r28{0} - 40 to local table
in proc proc3 adding addrExp r28{0} - 44 to local table
in proc proc3 adding addrExp r28{0} - 12 to local table
in proc proc3 adding addrExp r28{0} - 28 to local table
in proc proc3 adding addrExp r28{0} - 28 to local table
in proc proc3 adding addrExp r28{0} - 24 to local table
in proc proc3 adding addrExp r28{0} - 28 to local table
in proc proc3 adding addrExp r28{0} - 24 to local table
in proc proc3 adding addrExp r28{0} - 12 to local table
in proc proc3 adding addrExp r28{0} - 24 to local table
in proc proc3 adding addrExp r28{0} - 28 to local table
in proc proc3 adding addrExp r28{0} - 36 to local table
in proc proc3 adding addrExp r28{0} - 40 to local table
in proc proc3 adding addrExp r28{0} - 44 to local table
in proc proc3 adding addrExp r28{0} - 24 to local table
in proc proc3 adding addrExp r28{0} - 12 to local table
in proc proc3 adding addrExp r28{0} - 24 to local table
in proc proc3 adding addrExp r28{0} - 28 to local table
in proc proc3 adding addrExp r28{0} - 36 to local table
in proc proc3 adding addrExp r28{0} - 40 to local table
in proc proc3 adding addrExp r28{0} - 44 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc4 ###
in proc proc4 adding addrExp r28{0} - 32 to local table
in proc proc4 adding addrExp r28{0} - 32 to local table
in proc proc4 adding addrExp r28{0} - 32 to local table
in proc proc4 adding addrExp r28{0} - 12 to local table
in proc proc4 adding addrExp r28{0} - 12 to local table
in proc proc4 adding addrExp r28{0} - 28 to local table
in proc proc4 adding addrExp r28{0} - 8 to local table
in proc proc4 adding addrExp r28{0} - 8 to local table
in proc proc4 adding addrExp r28{0} - 8 to local table
in proc proc4 adding addrExp r28{0} - 12 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc5 ###
in proc proc5 adding addrExp r28{0} - 108 to local table
in proc proc5 adding addrExp r28{0} - 44 to local table
in proc proc5 adding addrExp r28{0} - 96 to local table
in proc proc5 adding addrExp r28{0} - 100 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffff9c existing type unsigned int but added type HANDLE
in proc proc5 adding addrExp r28{0} - 104 to local table
in proc proc5 adding addrExp r28{0} - 16 to local table
in proc proc5 adding addrExp r28{0} - 16 to local table
in proc proc5 adding addrExp r28{0} - 16 to local table
in proc proc5 adding addrExp r28{0} - 44 to local table
in proc proc5 adding addrExp r28{0} - 96 to local table
in proc proc5 adding addrExp r28{0} - 100 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffff9c existing type unsigned int but added type void *
in proc proc5 adding addrExp r28{0} - 104 to local table
in proc proc5 adding addrExp r28{0} - 108 to local table
in proc proc5 adding addrExp r28{0} - 96 to local table
in proc proc5 adding addrExp r28{0} - 100 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffff9c existing type unsigned int but added type void *
in proc proc5 adding addrExp r28{0} - 104 to local table
in proc proc5 adding addrExp r28{0} - 108 to local table
in proc proc5 adding addrExp r28{0} - 96 to local table
in proc proc5 adding addrExp r28{0} - 100 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffff9c existing type unsigned int but added type void *
in proc proc5 adding addrExp r28{0} - 104 to local table
in proc proc5 adding addrExp r28{0} - 108 to local table
in proc proc5 adding addrExp r28{0} - 44 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc6 ###
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc7 ###
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc7 adding addrExp r28{0} - 12 to local table
in proc proc9 adding addrExp r28{0} - 8 to local table
in proc proc9 adding addrExp r28{0} - 16 to local table
in proc proc9 adding addrExp r28{0} - 8 to local table
in proc proc9 adding addrExp r28{0} - 16 to local table
in proc proc9 adding addrExp r28{0} - 20 to local table
in proc proc9 adding addrExp r28{0} - 8 to local table
in proc proc9 adding addrExp r28{0} - 16 to local table
finding final parameters for proc1
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for _start
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for proc5
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param tmp2
potential param tmpl
potential param m[r28{0} - 108]
found new parameter m[r28{0} - 108]
potential param r9
found new parameter r9
finding final parameters for _start
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for proc2
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for _start
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for proc3
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} - 28]
found new parameter m[r28{0} - 28]
potential param m[r28{0} - 36]
found new parameter m[r28{0} - 36]
potential param m[r28{0} - 40]
found new parameter m[r28{0} - 40]
potential param m[r28{0} - 44]
found new parameter m[r28{0} - 44]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} - 16]
found new parameter m[r28{0} - 16]
potential param m[r28{0} - 32]
found new parameter m[r28{0} - 32]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
finding final parameters for _start
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for proc4
potential param r28
found new parameter r28
potential param r30
found new parameter r30
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for _start
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for proc5
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param tmp2
potential param tmpl
potential param m[r28{0} - 108]
found new parameter m[r28{0} - 108]
finding final parameters for _start
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for proc3
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} - 28]
found new parameter m[r28{0} - 28]
potential param m[r28{0} - 36]
found new parameter m[r28{0} - 36]
potential param m[r28{0} - 40]
found new parameter m[r28{0} - 40]
potential param m[r28{0} - 44]
found new parameter m[r28{0} - 44]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} - 16]
found new parameter m[r28{0} - 16]
potential param m[r28{0} - 32]
found new parameter m[r28{0} - 32]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
finding final parameters for _start
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for proc6
potential param r28
found new parameter r28
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
finding final parameters for proc4
potential param r28
found new parameter r28
potential param r30
found new parameter r30
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for proc5
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param tmp2
potential param tmpl
potential param m[r28{0} - 108]
found new parameter m[r28{0} - 108]
finding final parameters for proc7
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
finding final parameters for proc5
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param tmp2
potential param tmpl
potential param m[r28{0} - 108]
found new parameter m[r28{0} - 108]
finding final parameters for proc8
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for proc5
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param tmp2
potential param tmpl
potential param m[r28{0} - 108]
found new parameter m[r28{0} - 108]
finding final parameters for proc9
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for proc3
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} - 28]
found new parameter m[r28{0} - 28]
potential param m[r28{0} - 36]
found new parameter m[r28{0} - 36]
potential param m[r28{0} - 40]
found new parameter m[r28{0} - 40]
potential param m[r28{0} - 44]
found new parameter m[r28{0} - 44]
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} - 16]
found new parameter m[r28{0} - 16]
potential param m[r28{0} - 32]
found new parameter m[r28{0} - 32]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
local esp has type __size32 that doesn't agree with type of define void of a library, why?
local ecx has type __size32 that doesn't agree with type of define /*signed?*/int of a library, why?
local edx has type __size32 that doesn't agree with type of define void of a library, why?
local esp has type __size32 that doesn't agree with type of define void of a library, why?
local ecx has type /*signed?*/int that doesn't agree with type of define void of a library, why?
local esp has type __size32 that doesn't agree with type of define void of a library, why?
local eax has type unsigned char * that doesn't agree with type of define __size32 of a library, why?
local ecx has type unsigned int that doesn't agree with type of define __size32 of a library, why?
local edx has type DWORD that doesn't agree with type of define __size32 of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local ecx_1 has type void * that doesn't agree with type of define __size32 ** of a library, why?
local edx has type void * that doesn't agree with type of define __size32 of a library, why?
local esp has type void * that doesn't agree with type of define __size32 * of a library, why?
local eax has type __size32 that doesn't agree with type of define HANDLE of a library, why?
local ecx has type unsigned int that doesn't agree with type of define void of a library, why?
local edx has type __size32 that doesn't agree with type of define void of a library, why?
local esp has type __size32 * that doesn't agree with type of define void of a library, why?
local eax has type HANDLE that doesn't agree with type of define __size32 of a library, why?
local eax has type __size32 that doesn't agree with type of define HANDLE of a library, why?
local ecx has type void that doesn't agree with type of define __size32 of a library, why?
local edx has type void that doesn't agree with type of define void * of a library, why?
local eax has type HANDLE that doesn't agree with type of define __size32 of a library, why?
local ecx has type __size32 that doesn't agree with type of define void of a library, why?
local edx has type void * that doesn't agree with type of define void of a library, why?
local ecx has type void that doesn't agree with type of define __size32 of a library, why?
local edx has type void that doesn't agree with type of define __size32 of a library, why?
local ecx has type __size32 that doesn't agree with type of define void of a library, why?
local edx has type __size32 that doesn't agree with type of define void of a library, why?
dest is not lib
call:   15 {*32* eax, *32* ecx, *32* r26} := CALL GetProcAddress(
                *HANDLE* local0 := param1
                *c** local1 := param2
              )
              Reaching definitions: r24=m[r28{0} + 8]{0},   r25=m[r28{0} + 4]{0},   r28=r28{0} - 20,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=r25{0},   m[r28{0} - 12]=m[r28{0} + 8]{0},   m[r28{0} - 16]=m[r28{0} + 4]{0},
                m[r28{0} - 20]=%pc
              Live variables: eax,  ecx in proc proc1
result:    0 *32* eax := -
result:    0 *32* ecx := -
dest is not lib
call:   18 {*32* eax_1, *j32* ecx, *v* edx, *v* esp} := CALL GetModuleHandleA(
              )
              Reaching definitions: r27=r27{0},   r28=r28{0} - 164,   r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 148]=r27{0},
                m[r28{0} - 152]=r30{0},   m[r28{0} - 156]=r31{0},   m[r28{0} - 160]=0,   m[r28{0} - 164]=%pc,
                tmp1=r28{0} - 4,   %flags=SUBFLAGS32( r28{0} - 4, 140, r28{0} - 144 ),   %ZF=(r28{0} - 144) = 0,
                %CF=(r28{0} - 4) <u 140
              Live variables: eax_1 in proc _start
result:    0 *32* eax_1 := -
dest is not lib
call:   45 {*HANDLE* eax, *v* ecx, *v* edx, *v* esp} := CALL LoadLibraryA(
                *LPCSTR* local0 := "advapi32.dll"
              )
              Reaching definitions: r24=m[r28{0} + 4]{0} & 0xffff,   r25=r25{206},   r26=r26{18},   r27=r27{0},
                r28=r28{0} - 172,   r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 120]=m[r28{0} + 4]{0},   m[r28{0} - 128]=r24{18},
                m[r28{0} - 148]=r27{0},   m[r28{0} - 152]=r30{0},   m[r28{0} - 156]=r31{0},   m[r28{0} - 160]=0,
                m[r28{0} - 164]=0x406f8c,   m[r28{0} - 168]=0x406f98,   m[r28{0} - 172]=%pc,   tmp1=global13,
                %flags=SUBFLAGS32( m[0x407044], 0, global13 ),   %ZF=global13 = 0,   %CF=m[0x407044] <u 0
              Live variables: eax in proc _start
result:    0 *HANDLE* eax := -
dest is not lib
call:   51 {*32* eax, *32* ecx, *v* edx, *v* esp} := CALL proc1(
                *HANDLE* local0 := eax
                *c** local1 := "RegOpenKeyA"
              )
              Reaching definitions: r24=r24{45},   r25=r25{45},   r26=r26{45},   r27=r27{0},   r28=r28{0} - 172,
                r29=r28{0} - 4,   r30=r30{0},   r31=r31{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 120]=m[r28{0} + 4]{0},   m[r28{0} - 128]=r24{18},   m[r28{0} - 148]=r27{0},
                m[r28{0} - 152]=r30{0},   m[r28{0} - 156]=r31{0},   m[r28{0} - 160]=0,   m[r28{0} - 164]=0x406f8c,
                m[r28{0} - 168]=r24{45},   m[r28{0} - 172]=%pc,   tmp1=global13,
                %flags=SUBFLAGS32( m[0x407044], 0, global13 ),   %ZF=global13 = 0,   %CF=m[0x407044] <u 0
              Live variables: eax,  ecx in proc _start
result:    0 *32* eax := -
result:    0 *32* ecx := -
dest is not lib
call:  110 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL proc2(
                *DWORD* local11 := m[esp - 4]
              )
              Reaching definitions: r8=r8{66},   r9=r9{66},   r24=r24{104},   r25=r25{208},   r26=r26{87},
                r27=r27{66},   r28=r28{66} - 8,   r29=r29{66},   r30=r30{66},   r31=r31{66},
                m[r28{0} + 4]=m[r28{0} + 4]{66},   m[r28{0} - 4]=m[r28{0} - 4]{66},
                m[r28{0} - 120]=m[r28{0} - 120]{66},   m[r28{0} - 124]=m[r28{0} - 124]{66},
                m[r28{0} - 128]=m[r28{0} - 128]{66},   m[r28{0} - 148]=m[r28{0} - 148]{66},
                m[r28{0} - 152]=m[r28{0} - 152]{66},   m[r28{0} - 156]=m[r28{0} - 156]{66},
                m[r28{0} - 160]=m[r28{0} - 160]{66},   m[r28{0} - 164]=m[r28{0} - 164]{66},
                m[r28{0} - 168]=m[r28{0} - 168]{66},   m[r28{0} - 172]=m[r28{0} - 172]{66},
                m[r28{0} - 176]=m[r28{0} - 176]{66},   m[r28{0} - 4]=m[r28{0} - 4]{66},
                m[r28{0} - 120]=m[r28{0} - 120]{66},   m[r28{0} - 124]=m[r28{0} - 124]{66},
                m[r28{0} - 128]=m[r28{0} - 128]{66},   m[r28{0} - 148]=m[r28{0} - 148]{66},
                m[r28{0} - 152]=m[r28{0} - 152]{66},   m[r28{0} - 156]=m[r28{0} - 156]{66},
                m[r28{0} - 160]=m[r28{0} - 160]{66},   m[r28{0} - 164]=m[r28{0} - 164]{66},
                m[r28{0} - 168]=m[r28{0} - 168]{66},   m[r28{0} - 172]=m[r28{0} - 172]{66},
                m[r28{0} - 176]=m[r28{0} - 176]{66},   <all>=<all>{66},   tmp1=tmp1{88},
                %flags=SUBFLAGS32( r26{87}, m[r29{66} - 136], tmp1{88} ),   %ZF=tmp1{88} = 0,
                %CF=r26{87} <u m[r29{66} - 136]
              Live variables: eax in proc _start
result:    0 *32* eax := -
dest is not lib
call:  130 {*32* eax, *8* r8, *8* r9, *v* ecx, *32* edx, *v* esp} := CALL proc3(
                *u32* m[esp - 60] := m[esp - 60]
                *j32* m[esp - 56] := m[esp - 56]
                *u8** m[esp - 52] := m[esp - 52]
                *u32* m[esp - 48] := m[esp - 48]
                *u32* m[esp - 44] := m[esp - 44]
                *u32* m[esp - 32] := m[esp - 32]
                *u8** m[esp - 12] := m[esp - 12]
                *v** m[esp - 8] := m[esp - 8]
                *u32* local11 := m[esp - 4]
              )
              Reaching definitions: r8=r8{66},   r9=r9{66},   r24=r24{121} + 8,   r25=r25{115},   r26=global91,
                r27=r27{66},   r28=r28{66} - 16,   r29=r29{66},   r30=r30{66},   r31=r31{66},
                m[r28{0} + 4]=m[r28{0} + 4]{66},   m[r28{0} - 4]=m[r28{0} - 4]{66},
                m[r28{0} - 120]=m[r28{0} - 120]{66},   m[r28{0} - 124]=m[r28{0} - 124]{66},
                m[r28{0} - 128]=m[r28{0} - 128]{66},   m[r28{0} - 148]=m[r28{0} - 148]{66},
                m[r28{0} - 152]=m[r28{0} - 152]{66},   m[r28{0} - 156]=m[r28{0} - 156]{66},
                m[r28{0} - 160]=m[r28{0} - 160]{66},   m[r28{0} - 164]=m[r28{0} - 164]{66},
                m[r28{0} - 168]=m[r28{0} - 168]{66},   m[r28{0} - 172]=m[r28{0} - 172]{66},
                m[r28{0} - 176]=m[r28{0} - 176]{66},   m[r28{0} - 4]=m[r28{0} - 4]{66},
                m[r28{0} - 120]=m[r28{0} - 120]{66},   m[r28{0} - 124]=m[r28{0} - 124]{66},
                m[r28{0} - 128]=m[r28{0} - 128]{66},   m[r28{0} - 148]=m[r28{0} - 148]{66},
                m[r28{0} - 152]=m[r28{0} - 152]{66},   m[r28{0} - 156]=m[r28{0} - 156]{66},
                m[r28{0} - 160]=m[r28{0} - 160]{66},   m[r28{0} - 164]=m[r28{0} - 164]{66},
                m[r28{0} - 168]=m[r28{0} - 168]{66},   m[r28{0} - 172]=m[r28{0} - 172]{66},
                m[r28{0} - 176]=m[r28{0} - 176]{66},   <all>=<all>{66},   tmp1=r24{121},
                %flags=ADDFLAGS32( r24{121}, 8, r24{121} + 8 ),   %ZF=ADDFLAGS32( r24{121}, 8, r24{121} + 8 ),
                %CF=ADDFLAGS32( r24{121}, 8, r24{121} + 8 )
              Live variables:  in proc _start
dest is not lib
call:  158 {*32* eax, *32* ecx, *32* edx, *v* esp} := CALL proc4(
                *32* m[esp - 8] := m[esp - 8]
                *u8** local11 := m[esp - 4]
                *v** esi := esi
              )
              Reaching definitions: r8=r8{130},   r9=r9{130},   r24=r24{130},   r25=r25{146},   r26=r26{151},
                r27=r27{66},   r28=(r28{66} - 16) + 4,   r29=r29{66},   r30=r30{66},   r31=r31{66},
                m[r28{0} + 4]=m[r28{0} + 4]{66},   m[r28{0} - 4]=m[r28{0} - 4]{66},
                m[r28{0} - 120]=m[r28{0} - 120]{66},   m[r28{0} - 124]=m[r28{0} - 124]{66},
                m[r28{0} - 128]=m[r28{0} - 128]{66},   m[r28{0} - 148]=m[r28{0} - 148]{66},
                m[r28{0} - 152]=m[r28{0} - 152]{66},   m[r28{0} - 156]=m[r28{0} - 156]{66},
                m[r28{0} - 160]=m[r28{0} - 160]{66},   m[r28{0} - 164]=m[r28{0} - 164]{66},
                m[r28{0} - 168]=m[r28{0} - 168]{66},   m[r28{0} - 172]=m[r28{0} - 172]{66},
                m[r28{0} - 176]=m[r28{0} - 176]{66},   m[r28{0} - 4]=m[r28{0} - 4]{66},
                m[r28{0} - 120]=m[r28{0} - 120]{66},   m[r28{0} - 124]=m[r28{0} - 124]{66},
                m[r28{0} - 128]=m[r28{0} - 128]{66},   m[r28{0} - 148]=m[r28{0} - 148]{66},
                m[r28{0} - 152]=m[r28{0} - 152]{66},   m[r28{0} - 156]=m[r28{0} - 156]{66},
                m[r28{0} - 160]=m[r28{0} - 160]{66},   m[r28{0} - 164]=m[r28{0} - 164]{66},
                m[r28{0} - 168]=m[r28{0} - 168]{66},   m[r28{0} - 172]=m[r28{0} - 172]{66},
                m[r28{0} - 176]=m[r28{0} - 176]{66},   <all>=<all>{66},   tmp1=r26{149},
                %flags=SUBFLAGS32( r26{149}, m[r29{66} - 116], r26{151} ),   %ZF=r26{151} = 0,
                %CF=r26{149} <u m[r29{66} - 116]
              Live variables:  in proc _start
dest is not lib
call:  185 {*32* eax, *32* esi, *8* r9, *32* ecx, *32* edx, *v* esp, *32* ebp} := CALL proc5(
                *u32* m[esp - 116] := m[esp - 116]
                *32* local11 := m[esp - 4]
              )
              Reaching definitions: r8=r8{130},   r9=r9{130},   r24=r24{214},   r25=r25{215},   r26=global91,
                r27=r27{66},   r28=r28{66} - 8,   r29=r29{66},   r30=r30{66},   r31=r31{66},
                m[r28{0} + 4]=m[r28{0} + 4]{66},   m[r28{0} - 4]=m[r28{0} - 4]{66},
                m[r28{0} - 120]=m[r28{0} - 120]{66},   m[r28{0} - 124]=m[r28{0} - 124]{66},
                m[r28{0} - 128]=m[r28{0} - 128]{66},   m[r28{0} - 148]=m[r28{0} - 148]{66},
                m[r28{0} - 152]=m[r28{0} - 152]{66},   m[r28{0} - 156]=m[r28{0} - 156]{66},
                m[r28{0} - 160]=m[r28{0} - 160]{66},   m[r28{0} - 164]=m[r28{0} - 164]{66},
                m[r28{0} - 168]=m[r28{0} - 168]{66},   m[r28{0} - 172]=m[r28{0} - 172]{66},
                m[r28{0} - 176]=m[r28{0} - 176]{66},   m[r28{0} - 4]=m[r28{0} - 4]{66},
                m[r28{0} - 120]=m[r28{0} - 120]{66},   m[r28{0} - 124]=m[r28{0} - 124]{66},
                m[r28{0} - 128]=m[r28{0} - 128]{66},   m[r28{0} - 148]=m[r28{0} - 148]{66},
                m[r28{0} - 152]=m[r28{0} - 152]{66},   m[r28{0} - 156]=m[r28{0} - 156]{66},
                m[r28{0} - 160]=m[r28{0} - 160]{66},   m[r28{0} - 164]=m[r28{0} - 164]{66},
                m[r28{0} - 168]=m[r28{0} - 168]{66},   m[r28{0} - 172]=m[r28{0} - 172]{66},
                m[r28{0} - 176]=m[r28{0} - 176]{66},   <all>=<all>{66},   tmp1=r28{66} - 8,
                %flags=ADDFLAGS32( r28{66} - 8, 8, r28{66} ),   %ZF=%ZF{220},   %CF=%CF{221}
              Live variables:  in proc _start
dest is not lib
call:  175 {*32* eax, *32* ecx, *32* edx, *v* esp} := CALL proc4(
                *32* m[esp - 8] := m[esp - 8]
                *u8** local11 := m[esp - 4]
                *v** esi := esi
              )
              Reaching definitions: r8=r8{130},   r9=r9{130},   r24=r24{163},   r25=r25{168},   r26=r26{130},
                r27=r27{66},   r28=(r28{66} - 16) + 4,   r29=r29{66},   r30=r30{66},   r31=r31{66},
                m[r28{0} + 4]=m[r28{0} + 4]{66},   m[r28{0} - 4]=m[r28{0} - 4]{66},
                m[r28{0} - 120]=m[r28{0} - 120]{66},   m[r28{0} - 124]=m[r28{0} - 124]{66},
                m[r28{0} - 128]=m[r28{0} - 128]{66},   m[r28{0} - 148]=m[r28{0} - 148]{66},
                m[r28{0} - 152]=m[r28{0} - 152]{66},   m[r28{0} - 156]=m[r28{0} - 156]{66},
                m[r28{0} - 160]=m[r28{0} - 160]{66},   m[r28{0} - 164]=m[r28{0} - 164]{66},
                m[r28{0} - 168]=m[r28{0} - 168]{66},   m[r28{0} - 172]=m[r28{0} - 172]{66},
                m[r28{0} - 176]=m[r28{0} - 176]{66},   m[r28{0} - 4]=m[r28{0} - 4]{66},
                m[r28{0} - 120]=m[r28{0} - 120]{66},   m[r28{0} - 124]=m[r28{0} - 124]{66},
                m[r28{0} - 128]=m[r28{0} - 128]{66},   m[r28{0} - 148]=m[r28{0} - 148]{66},
                m[r28{0} - 152]=m[r28{0} - 152]{66},   m[r28{0} - 156]=m[r28{0} - 156]{66},
                m[r28{0} - 160]=m[r28{0} - 160]{66},   m[r28{0} - 164]=m[r28{0} - 164]{66},
                m[r28{0} - 168]=m[r28{0} - 168]{66},   m[r28{0} - 172]=m[r28{0} - 172]{66},
                m[r28{0} - 176]=m[r28{0} - 176]{66},   <all>=<all>{66},   tmp1=r25{166},
                %flags=SUBFLAGS32( r25{166}, m[r29{66} - 124], r25{168} ),   %ZF=r25{168} = 0,
                %CF=r25{166} <u m[r29{66} - 124]
              Live variables:  in proc _start
dest is not lib
call:   20 {*32* eax, *32* r25, *32* r26} := CALL VirtualAlloc(
                *LPVOID* local0 := 0
                *DWORD* local1 := param1
                *DWORD* local2 := 0x3000
                *DWORD* local3 := 4
              )
              Reaching definitions: r24=m[r28{0} + 4]{0},   r28=r28{0} - 32,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 12]=1,   m[r28{0} - 16]=4,
                m[r28{0} - 20]=0x3000,   m[r28{0} - 24]=m[r28{0} + 4]{0},   m[r28{0} - 28]=0,   m[r28{0} - 32]=%pc,
                tmp1=r28{0} - 4,   %flags=SUBFLAGS32( r28{0} - 4, 8, r28{0} - 12 ),   %ZF=(r28{0} - 12) = 0,
                %CF=(r28{0} - 4) <u 8
              Live variables: eax in proc proc2
result:    0 *32* eax := -
dest is not lib
call:   80 {*u32* eax_1, *32* ecx, *32* edx, *v* esp} := CALL proc9(
                *u32** local4 := a[param6]
                *u8** local3 := ecx
              )
              Reaching definitions: r8=truncu(32,8,zfill(8,32,r9{10})),   r9=truncu(32,8,r25{69}),
                r24=zfill(8,32,r9{10}),   r25=r25{69},   r26=r28{0} - 16,   r28=(r28{0} - 32) - 12,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 5]=r8{18},   m[r28{0} - 12]=m[r28{0} - 12]{27},
                m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 17]=r9{10},   m[r28{0} - 24]=m[r28{0} - 24]{213},
                m[r28{0} - 28]=m[r28{0} - 28]{214},   m[r28{0} - 32]=m[r28{0} - 32]{0},   m[r28{0} - 36]=r25{69},
                m[r28{0} - 40]=r28{0} - 16,   m[r28{0} - 44]=%pc,   tmp1=m[r28{0} + 4]{0},
                %flags=ADDFLAGS32( m[r28{0} + 4]{0}, m[(r28{0} - 4) - 8], r25{69} ),
                %ZF=ADDFLAGS32( m[r28{0} + 4]{0}, m[(r28{0} - 4) - 8], r25{69} ),
                %CF=ADDFLAGS32( m[r28{0} + 4]{0}, m[(r28{0} - 4) - 8], r25{69} )
              Live variables: eax_1 in proc proc3
result:    0 *u32* eax_1 := -
dest is not lib
call:  104 {*u32* eax_1, *j32* ecx_1, *32* edx, *v* esp} := CALL proc9(
                *u32** local4 := a[param4]
                *u8** local3 := eax
              )
              Reaching definitions: r8=truncu(32,8,r24{92}),   r9=truncu(32,8,r28{0} - 32),   r24=r24{92},
                r25=r28{0} - 32,   r26=r26{80},   r28=(r28{0} - 32) - 12,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 5]=r8{18},   m[r28{0} - 12]=r24{85},
                m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 17]=r9{10},   m[r28{0} - 24]=m[r28{0} - 24]{213},
                m[r28{0} - 28]=m[r28{0} - 28]{214},   m[r28{0} - 32]=m[r28{0} - 32]{0},   m[r28{0} - 36]=r24{92},
                m[r28{0} - 40]=r28{0} - 32,   m[r28{0} - 44]=%pc,   tmp1=m[r28{0} + 4]{0},
                %flags=ADDFLAGS32( m[r28{0} + 4]{0}, m[r28{0} - 12], r24{92} ),
                %ZF=ADDFLAGS32( m[r28{0} + 4]{0}, m[r28{0} - 12], r24{92} ),
                %CF=ADDFLAGS32( m[r28{0} + 4]{0}, m[r28{0} - 12], r24{92} )
              Live variables: eax_1 in proc proc3
result:    0 *u32* eax_1 := -
dest is not lib
call:   36 {*32* eax, *32* ecx, *32* edx} := CALL VirtualAlloc(
                *LPVOID* local1 := 0
                *DWORD* local2 := edx
                *DWORD* local3 := 0x3000
                *DWORD* local4 := 64
              )
              Reaching definitions: r24=r24{20},   r25=r24{20},   r26=r26{28},   r28=r28{0} - 56,   r29=r28{0} - 4,
                r30=r30{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 12]=m[r28{0} - 12]{0},   m[r28{0} - 16]=m[r28{0} - 16]{0},
                m[r28{0} - 20]=r24{20},   m[r28{0} - 28]=m[r28{0} - 28]{0},   m[r28{0} - 32]=m[r28{0} - 32]{193},
                m[r28{0} - 36]=r30{0},   m[r28{0} - 40]=64,   m[r28{0} - 44]=0x3000,   m[r28{0} - 48]=r26{28},
                m[r28{0} - 52]=0,   m[r28{0} - 56]=%pc,   tmp1=m[r28{0} - 32]{193},
                %flags=ADDFLAGS32( m[r28{0} - 32]{193}, m[m[r28{0} - 32]{193} + 60], r24{20} ),
                %ZF=ADDFLAGS32( m[r28{0} - 32]{193}, m[m[r28{0} - 32]{193} + 60], r24{20} ),
                %CF=ADDFLAGS32( m[r28{0} - 32]{193}, m[m[r28{0} - 32]{193} + 60], r24{20} )
              Live variables: eax in proc proc4
result:    0 *32* eax := -
dest is not lib
call:   56 {*32** eax, *8* r9, *32* ecx, *32* edx} := CALL proc6(
                *32* local2 := global16
                *u8** local5 := local0
                *u32* local4 := ecx
              )
              Reaching definitions: r24=global16,   r25=r25{44},   r26=m[r28{0} - 32]{193},   r28=r28{0} - 52,
                r29=r28{0} - 4,   r30=r30{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 12]=m[r28{0} - 12]{0},
                m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 20]=r24{20},   m[r28{0} - 28]=m[r28{0} - 28]{0},
                m[r28{0} - 32]=m[r28{0} - 32]{193},   m[r28{0} - 36]=r30{0},   m[r28{0} - 40]=r25{44},
                m[r28{0} - 44]=m[r28{0} - 32]{193},   m[r28{0} - 48]=global16,   m[r28{0} - 52]=%pc,
                m[r28{0} - 56]=%pc,   tmp1=global16,   %flags=SUBFLAGS32( m[0x407024], 0, global16 ),
                %ZF=global16 = 0,   %CF=m[0x407024] <u 0
              Live variables:  in proc proc4
dest is not lib
call:   35 {*32* eax_1, *32*** ecx_1, *32* edx, *32** esp} := CALL VirtualAlloc(
                *LPVOID* local1 := 0
                *DWORD* local2 := edx_1
                *DWORD* local3 := 0x3000
                *DWORD* local4 := 64
              )
              Reaching definitions: r9=r9{0},   r24=(r26{14} + r25{18}) + 24,   r25=r26{14},   r26=r26{27},
                r28=r28{0} - 104,   r29=r28{0} - 4,   r30=r30{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 16]=m[r28{0} - 16]{0},
                m[r28{0} - 44]=(r26{14} + r25{18}) + 24,   m[r28{0} - 60]=m[r28{0} - 60]{0},   m[r28{0} - 64]=r26{14},
                m[r28{0} - 76]=m[r28{0} + 4]{0},   m[r28{0} - 84]=r30{0},   m[r28{0} - 88]=64,   m[r28{0} - 92]=0x3000,
                m[r28{0} - 96]=r26{27},   m[r28{0} - 100]=0,   m[r28{0} - 104]=%pc,
                m[r28{0} - 108]=m[r28{0} - 108]{0},   m[r28{0} - 112]=m[r28{0} - 112]{0},
                m[r28{0} - 116]=m[r28{0} - 116]{0},   m[r28{0} - 120]=m[r28{0} - 120]{0},   tmp1=m[r28{0} + 4]{0},
                tmp2=tmp2{0},   tmpl=tmpl{0},
                %flags=ADDFLAGS32( m[r28{0} + 4]{0}, m[m[r28{0} + 4]{0} + 60], r26{14} ),
                %ZF=ADDFLAGS32( m[r28{0} + 4]{0}, m[m[r28{0} + 4]{0} + 60], r26{14} ),
                %CF=ADDFLAGS32( m[r28{0} + 4]{0}, m[m[r28{0} + 4]{0} + 60], r26{14} )
              Live variables: eax_1 in proc proc5
result:    0 *32* eax_1 := -
dest is not lib
call:   61 {*32* eax, *8* cl, *32* ecx, *32* edx, *v* esp} := CALL proc6(
                *32* local2 := eax_1
                *u8** local5 := param2
                *u32* local4 := (ecx + (eax *! 40)) + 312
              )
              Reaching definitions: r9=r9{0},   r24=r24{35},   r25=(r25{44} + (r24{46} *! 40)) + 312,
                r26=m[r28{0} + 4]{0},   r28=r28{0} - 100,   r29=r28{0} - 4,   r30=r30{0},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=m[r28{0} - 8]{0},
                m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 44]=(r26{14} + r25{18}) + 24,   m[r28{0} - 52]=r24{35},
                m[r28{0} - 60]=m[r28{0} - 60]{0},   m[r28{0} - 64]=r26{14},   m[r28{0} - 76]=m[r28{0} + 4]{0},
                m[r28{0} - 84]=r30{0},   m[r28{0} - 88]=(r25{44} + (r24{46} *! 40)) + 312,
                m[r28{0} - 92]=m[r28{0} + 4]{0},   m[r28{0} - 96]=r24{35},   m[r28{0} - 100]=%pc,   m[r28{0} - 104]=%pc
                m[r28{0} - 108]=m[r28{0} - 108]{0},   m[r28{0} - 112]=m[r28{0} - 112]{0},
                m[r28{0} - 116]=m[r28{0} - 116]{0},   m[r28{0} - 120]=m[r28{0} - 120]{0},   tmp1=r24{35},
                tmp2=tmp2{0},   tmpl=tmpl{0},   %flags=IMULTFLAGS32( r24{46} *! 40 ),
                %ZF=IMULTFLAGS32( r24{46} *! 40 ),   %CF=IMULTFLAGS32( r24{46} *! 40 )
              Live variables: cl in proc proc5
result:    0 *8* cl := -
dest is not lib
call:   72 {*HANDLE* eax, *v* ecx, *v* edx, *v* esp} := CALL GetModuleHandleA(
              )
              Reaching definitions: r9=r9{61},   r24=r24{61},   r25=r25{61},   r26=r26{61},   r28=(r28{0} - 100) + 4,
                r29=r28{0} - 4,   r30=r30{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 16]=m[r28{0} - 16]{0},
                m[r28{0} - 44]=(r26{14} + r25{18}) + 24,   m[r28{0} - 52]=r24{35},   m[r28{0} - 60]=m[r28{0} - 60]{0},
                m[r28{0} - 64]=r26{14},   m[r28{0} - 76]=m[r28{0} + 4]{0},   m[r28{0} - 84]=r30{0},
                m[r28{0} - 88]=0x406fc0,   m[r28{0} - 92]=0x406fd0,   m[r28{0} - 96]=%pc,   m[r28{0} - 100]=%pc,
                m[r28{0} - 104]=%pc,   m[r28{0} - 108]=m[r28{0} - 108]{0},   m[r28{0} - 112]=m[r28{0} - 112]{0},
                m[r28{0} - 116]=m[r28{0} - 116]{0},   m[r28{0} - 120]=m[r28{0} - 120]{0},   tmp1=(r28{0} - 100) + 4,
                tmp2=tmp2{0},   tmpl=tmpl{0},   %flags=ADDFLAGS32( r28{0} - 96, 12, r28{0} - 84 ),
                %ZF=ADDFLAGS32( r28{0} - 96, 12, r28{0} - 84 ),   %CF=ADDFLAGS32( r28{0} - 96, 12, r28{0} - 84 )
              Live variables: eax in proc proc5
result:    0 *HANDLE* eax := -
dest is not lib
call:   78 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local6 := eax
                *c** local5 := "kernel32.dll"
              )
              Reaching definitions: r9=r9{61},   r24=r24{72},   r25=r25{72},   r26=r26{72},   r28=r28{0} - 100,
                r29=r28{0} - 4,   r30=r30{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 16]=m[r28{0} - 16]{0},
                m[r28{0} - 44]=(r26{14} + r25{18}) + 24,   m[r28{0} - 52]=r24{35},   m[r28{0} - 60]=m[r28{0} - 60]{0},
                m[r28{0} - 64]=r26{14},   m[r28{0} - 76]=m[r28{0} + 4]{0},   m[r28{0} - 84]=r30{0},
                m[r28{0} - 88]=0x406fc0,   m[r28{0} - 92]=0x406fd0,   m[r28{0} - 96]=r24{72},   m[r28{0} - 100]=%pc,
                m[r28{0} - 104]=%pc,   m[r28{0} - 108]=m[r28{0} - 108]{0},   m[r28{0} - 112]=m[r28{0} - 112]{0},
                m[r28{0} - 116]=m[r28{0} - 116]{0},   m[r28{0} - 120]=m[r28{0} - 120]{0},   tmp1=(r28{0} - 100) + 4,
                tmp2=tmp2{0},   tmpl=tmpl{0},   %flags=ADDFLAGS32( r28{0} - 96, 12, r28{0} - 84 ),
                %ZF=ADDFLAGS32( r28{0} - 96, 12, r28{0} - 84 ),   %CF=ADDFLAGS32( r28{0} - 96, 12, r28{0} - 84 )
              Live variables: eax in proc proc5
result:    0 *32* eax := -
dest is not lib
call:   87 {*HANDLE* eax, *v* ecx, *v* edx, *v* esp} := CALL GetModuleHandleA(
              )
              Reaching definitions: r9=r9{61},   r24=r24{78},   r25=r25{78},   r26=r26{78},   r28=r28{0} - 100,
                r29=r28{0} - 4,   r30=r30{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 16]=m[r28{0} - 16]{0},
                m[r28{0} - 44]=(r26{14} + r25{18}) + 24,   m[r28{0} - 52]=r24{35},   m[r28{0} - 60]=r24{78},
                m[r28{0} - 64]=r26{14},   m[r28{0} - 76]=m[r28{0} + 4]{0},   m[r28{0} - 84]=r30{0},
                m[r28{0} - 88]=0x406fc0,   m[r28{0} - 92]=0x406fe0,   m[r28{0} - 96]=0x406ff4,   m[r28{0} - 100]=%pc,
                m[r28{0} - 104]=%pc,   m[r28{0} - 108]=m[r28{0} - 108]{0},   m[r28{0} - 112]=m[r28{0} - 112]{0},
                m[r28{0} - 116]=m[r28{0} - 116]{0},   m[r28{0} - 120]=m[r28{0} - 120]{0},   tmp1=(r28{0} - 100) + 4,
                tmp2=tmp2{0},   tmpl=tmpl{0},   %flags=ADDFLAGS32( r28{0} - 96, 12, r28{0} - 84 ),
                %ZF=ADDFLAGS32( r28{0} - 96, 12, r28{0} - 84 ),   %CF=ADDFLAGS32( r28{0} - 96, 12, r28{0} - 84 )
              Live variables: eax in proc proc5
result:    0 *HANDLE* eax := -
dest is not lib
call:   93 {*u32* r24, *32* ecx, *v** edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* local1 := eax
                *c** local6 := "kernel32.dll"
              )
              Reaching definitions: r9=r9{61},   r24=r24{87},   r25=r25{87},   r26=r26{87},   r28=r28{0} - 104,
                r29=r28{0} - 4,   r30=r30{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} - 8]{0},   m[r28{0} - 16]=m[r28{0} - 16]{0},
                m[r28{0} - 44]=(r26{14} + r25{18}) + 24,   m[r28{0} - 52]=r24{35},   m[r28{0} - 60]=r24{78},
                m[r28{0} - 64]=r26{14},   m[r28{0} - 76]=m[r28{0} + 4]{0},   m[r28{0} - 84]=r30{0},
                m[r28{0} - 88]=0x406fc0,   m[r28{0} - 92]=0x406fe0,   m[r28{0} - 96]=0x406ff4,
                m[r28{0} - 100]=r24{87},   m[r28{0} - 104]=%pc,   m[r28{0} - 108]=m[r28{0} - 108]{0},
                m[r28{0} - 112]=m[r28{0} - 112]{0},   m[r28{0} - 116]=m[r28{0} - 116]{0},
                m[r28{0} - 120]=m[r28{0} - 120]{0},   tmp1=(r28{0} - 100) + 4,   tmp2=tmp2{0},   tmpl=tmpl{0},
                %flags=ADDFLAGS32( r28{0} - 96, 12, r28{0} - 84 ),   %ZF=ADDFLAGS32( r28{0} - 96, 12, r28{0} - 84 ),
                %CF=ADDFLAGS32( r28{0} - 96, 12, r28{0} - 84 )
              Live variables: r24 in proc proc5
result:    0 *u32* r24 := -
dest is not lib
call:  149 {*u32* r24, *8* cl, *v** ecx, *v** edx, *v* esp} := CALL proc6(
                *u32* local7 := r24
                *v** local1 := ecx
                *u32* local2 := eax_2
              )
              Reaching definitions: r9=r9{697},   r24=r24{142},   r25=r25{135},   r26=m[r28{0} - 44]{872},
                r28=r28{0} - 108,   r29=r28{0} - 4,   r30=r30{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{93},   m[r28{0} - 16]=m[r28{0} - 16]{871},
                m[r28{0} - 44]=m[r28{0} - 44]{872},   m[r28{0} - 52]=r24{35},   m[r28{0} - 60]=r24{78},
                m[r28{0} - 64]=r26{14},   m[r28{0} - 76]=m[r28{0} + 4]{0},   m[r28{0} - 84]=r30{0},
                m[r28{0} - 88]=0x406fc0,   m[r28{0} - 92]=0x406fe0,   m[r28{0} - 96]=r24{128},
                m[r28{0} - 100]=r25{135},   m[r28{0} - 104]=r24{142},   m[r28{0} - 108]=%pc,
                m[r28{0} - 112]=m[r28{0} - 112]{0},   m[r28{0} - 116]=m[r28{0} - 116]{0},
                m[r28{0} - 120]=m[r28{0} - 120]{0},   tmp1=r24{35},   tmp2=tmp2{124},   tmpl=tmpl{123},
                %flags=ADDFLAGS32( r24{35}, m[m[r28{0} - 44]{872} + 12], r24{142} ),
                %ZF=ADDFLAGS32( r24{35}, m[m[r28{0} - 44]{872} + 12], r24{142} ),
                %CF=ADDFLAGS32( r24{35}, m[m[r28{0} - 44]{872} + 12], r24{142} )
              Live variables: cl in proc proc5
result:    0 *8* cl := -
dest is not lib
call:  212 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL LoadLibraryA(
                *LPCSTR* m[esp_1 - 4] := m[esp_1 - 4]
              )
              Reaching definitions: r9=r9{184},   r24=r24{198},   r25=r25{202},   r26=r26{205},   r28=r28{184} - 8,
                r29=r29{184},   r30=r30{184},   m[r28{0} + 4]=m[r28{0} + 4]{184},   m[r28{0} - 4]=m[r28{0} - 4]{184},
                m[r28{0} - 8]=m[r28{0} - 8]{184},   m[r28{0} - 16]=m[r28{0} - 16]{184},
                m[r28{0} - 44]=m[r28{0} - 44]{184},   m[r28{0} - 52]=m[r28{0} - 52]{184},
                m[r28{0} - 60]=m[r28{0} - 60]{184},   m[r28{0} - 64]=m[r28{0} - 64]{184},
                m[r28{0} - 76]=m[r28{0} - 76]{184},   m[r28{0} - 84]=m[r28{0} - 84]{184},
                m[r28{0} - 88]=m[r28{0} - 88]{184},   m[r28{0} - 92]=m[r28{0} - 92]{184},
                m[r28{0} - 96]=m[r28{0} - 96]{184},   m[r28{0} - 100]=m[r28{0} - 100]{184},
                m[r28{0} - 104]=m[r28{0} - 104]{184},   m[r28{0} - 108]=m[r28{0} - 108]{184},
                m[r28{0} - 112]=m[r28{0} - 112]{184},   m[r28{0} - 116]=m[r28{0} - 116]{184},
                m[r28{0} - 120]=m[r28{0} - 120]{184},   m[r28{0} - 4]=m[r28{0} - 4]{184},
                m[r28{0} - 8]=m[r28{0} - 8]{184},   m[r28{0} - 16]=m[r28{0} - 16]{184},
                m[r28{0} - 44]=m[r28{0} - 44]{184},   m[r28{0} - 52]=m[r28{0} - 52]{184},
                m[r28{0} - 60]=m[r28{0} - 60]{184},   m[r28{0} - 64]=m[r28{0} - 64]{184},
                m[r28{0} - 76]=m[r28{0} - 76]{184},   m[r28{0} - 84]=m[r28{0} - 84]{184},
                m[r28{0} - 88]=m[r28{0} - 88]{184},   m[r28{0} - 92]=m[r28{0} - 92]{184},
                m[r28{0} - 96]=m[r28{0} - 96]{184},   m[r28{0} - 100]=m[r28{0} - 100]{184},
                m[r28{0} - 104]=m[r28{0} - 104]{184},   m[r28{0} - 108]=m[r28{0} - 108]{184},
                m[r28{0} - 112]=m[r28{0} - 112]{184},   m[r28{0} - 116]=m[r28{0} - 116]{184},
                m[r28{0} - 120]=m[r28{0} - 120]{184},   <all>=<all>{184},   tmp1=r26{203},   tmp2=tmp2{184},
                tmpl=tmpl{184},   %flags=ADDFLAGS32( r26{203}, m[r25{202} + 12], r26{205} ),
                %ZF=ADDFLAGS32( r26{203}, m[r25{202} + 12], r26{205} ),
                %CF=ADDFLAGS32( r26{203}, m[r25{202} + 12], r26{205} )
              Live variables: eax in proc proc5
result:    0 *32* eax := -
dest is not lib
call:  293 {*32* eax, *32*** ecx, *v* edx, *v* esp} := CALL proc1(
                *HANDLE* m[esp_1 - 8] := m[esp_1 - 8]
                *c** m[esp_1 - 4] := m[esp_1 - 4]
              )
              Reaching definitions: r9=r9{184},   r24=(r25{282} + r26{283}) + 2,   r25=r25{287},   r26=r26{283},
                r28=r28{184} - 12,   r29=r29{184},   r30=r30{184},   m[r28{0} + 4]=m[r28{0} + 4]{184},
                m[r28{0} - 4]=m[r28{0} - 4]{184},   m[r28{0} - 8]=m[r28{0} - 8]{184},
                m[r28{0} - 16]=m[r28{0} - 16]{184},   m[r28{0} - 44]=m[r28{0} - 44]{184},
                m[r28{0} - 52]=m[r28{0} - 52]{184},   m[r28{0} - 60]=m[r28{0} - 60]{184},
                m[r28{0} - 64]=m[r28{0} - 64]{184},   m[r28{0} - 76]=m[r28{0} - 76]{184},
                m[r28{0} - 84]=m[r28{0} - 84]{184},   m[r28{0} - 88]=m[r28{0} - 88]{184},
                m[r28{0} - 92]=m[r28{0} - 92]{184},   m[r28{0} - 96]=m[r28{0} - 96]{184},
                m[r28{0} - 100]=m[r28{0} - 100]{184},   m[r28{0} - 104]=m[r28{0} - 104]{184},
                m[r28{0} - 108]=m[r28{0} - 108]{184},   m[r28{0} - 112]=m[r28{0} - 112]{184},
                m[r28{0} - 116]=m[r28{0} - 116]{184},   m[r28{0} - 120]=m[r28{0} - 120]{184},
                m[r28{0} - 4]=m[r28{0} - 4]{184},   m[r28{0} - 8]=m[r28{0} - 8]{184},
                m[r28{0} - 16]=m[r28{0} - 16]{184},   m[r28{0} - 44]=m[r28{0} - 44]{184},
                m[r28{0} - 52]=m[r28{0} - 52]{184},   m[r28{0} - 60]=m[r28{0} - 60]{184},
                m[r28{0} - 64]=m[r28{0} - 64]{184},   m[r28{0} - 76]=m[r28{0} - 76]{184},
                m[r28{0} - 84]=m[r28{0} - 84]{184},   m[r28{0} - 88]=m[r28{0} - 88]{184},
                m[r28{0} - 92]=m[r28{0} - 92]{184},   m[r28{0} - 96]=m[r28{0} - 96]{184},
                m[r28{0} - 100]=m[r28{0} - 100]{184},   m[r28{0} - 104]=m[r28{0} - 104]{184},
                m[r28{0} - 108]=m[r28{0} - 108]{184},   m[r28{0} - 112]=m[r28{0} - 112]{184},
                m[r28{0} - 116]=m[r28{0} - 116]{184},   m[r28{0} - 120]=m[r28{0} - 120]{184},   <all>=<all>{184},
                tmp1=tmp1{254},   tmp2=tmp2{184},   tmpl=tmpl{184},   %flags=LOGICALFLAGS32( r25{258} & 0x80000000 ),
                %ZF=LOGICALFLAGS32( r25{258} & 0x80000000 ),   %CF=LOGICALFLAGS32( r25{258} & 0x80000000 )
              Live variables: eax in proc proc5
result:    0 *32* eax := -
dest is not lib
call:  274 {*32* eax, *32*** ecx, *v* edx, *v* esp} := CALL proc1(
                *HANDLE* m[esp_1 - 8] := m[esp_1 - 8]
                *c** m[esp_1 - 4] := m[esp_1 - 4]
              )
              Reaching definitions: r9=r9{184},   r24=r24{263} & 0x7fffffff,   r25=r25{268},   r26=r26{262},
                r28=r28{184} - 12,   r29=r29{184},   r30=r30{184},   m[r28{0} + 4]=m[r28{0} + 4]{184},
                m[r28{0} - 4]=m[r28{0} - 4]{184},   m[r28{0} - 8]=m[r28{0} - 8]{184},
                m[r28{0} - 16]=m[r28{0} - 16]{184},   m[r28{0} - 44]=m[r28{0} - 44]{184},
                m[r28{0} - 52]=m[r28{0} - 52]{184},   m[r28{0} - 60]=m[r28{0} - 60]{184},
                m[r28{0} - 64]=m[r28{0} - 64]{184},   m[r28{0} - 76]=m[r28{0} - 76]{184},
                m[r28{0} - 84]=m[r28{0} - 84]{184},   m[r28{0} - 88]=m[r28{0} - 88]{184},
                m[r28{0} - 92]=m[r28{0} - 92]{184},   m[r28{0} - 96]=m[r28{0} - 96]{184},
                m[r28{0} - 100]=m[r28{0} - 100]{184},   m[r28{0} - 104]=m[r28{0} - 104]{184},
                m[r28{0} - 108]=m[r28{0} - 108]{184},   m[r28{0} - 112]=m[r28{0} - 112]{184},
                m[r28{0} - 116]=m[r28{0} - 116]{184},   m[r28{0} - 120]=m[r28{0} - 120]{184},
                m[r28{0} - 4]=m[r28{0} - 4]{184},   m[r28{0} - 8]=m[r28{0} - 8]{184},
                m[r28{0} - 16]=m[r28{0} - 16]{184},   m[r28{0} - 44]=m[r28{0} - 44]{184},
                m[r28{0} - 52]=m[r28{0} - 52]{184},   m[r28{0} - 60]=m[r28{0} - 60]{184},
                m[r28{0} - 64]=m[r28{0} - 64]{184},   m[r28{0} - 76]=m[r28{0} - 76]{184},
                m[r28{0} - 84]=m[r28{0} - 84]{184},   m[r28{0} - 88]=m[r28{0} - 88]{184},
                m[r28{0} - 92]=m[r28{0} - 92]{184},   m[r28{0} - 96]=m[r28{0} - 96]{184},
                m[r28{0} - 100]=m[r28{0} - 100]{184},   m[r28{0} - 104]=m[r28{0} - 104]{184},
                m[r28{0} - 108]=m[r28{0} - 108]{184},   m[r28{0} - 112]=m[r28{0} - 112]{184},
                m[r28{0} - 116]=m[r28{0} - 116]{184},   m[r28{0} - 120]=m[r28{0} - 120]{184},   <all>=<all>{184},
                tmp1=tmp1{254},   tmp2=tmp2{184},   tmpl=tmpl{184},   %flags=LOGICALFLAGS32( r24{263} & 0x7fffffff ),
                %ZF=LOGICALFLAGS32( r24{263} & 0x7fffffff ),   %CF=LOGICALFLAGS32( r24{263} & 0x7fffffff )
              Live variables: eax in proc proc5
result:    0 *32* eax := -
dest is not lib
call:  427 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL GetModuleHandleA(
              )
              Reaching definitions: r9=r9{184},   r24=r24{777},   r25=r25{778},   r26=r26{779},   r28=r28{184} - 12,
                r29=r29{184},   r30=r30{780},   m[r28{0} + 4]=m[r28{0} + 4]{184},   m[r28{0} - 4]=m[r28{0} - 4]{184},
                m[r28{0} - 8]=m[r28{0} - 8]{184},   m[r28{0} - 16]=m[r28{0} - 16]{184},
                m[r28{0} - 44]=m[r28{0} - 44]{184},   m[r28{0} - 52]=m[r28{0} - 52]{184},
                m[r28{0} - 60]=m[r28{0} - 60]{184},   m[r28{0} - 64]=m[r28{0} - 64]{184},
                m[r28{0} - 76]=m[r28{0} - 76]{184},   m[r28{0} - 84]=m[r28{0} - 84]{184},
                m[r28{0} - 88]=m[r28{0} - 88]{184},   m[r28{0} - 92]=m[r28{0} - 92]{184},
                m[r28{0} - 96]=m[r28{0} - 96]{184},   m[r28{0} - 100]=m[r28{0} - 100]{184},
                m[r28{0} - 104]=m[r28{0} - 104]{184},   m[r28{0} - 108]=m[r28{0} - 108]{184},
                m[r28{0} - 112]=m[r28{0} - 112]{184},   m[r28{0} - 116]=m[r28{0} - 116]{184},
                m[r28{0} - 120]=m[r28{0} - 120]{184},   m[r28{0} - 4]=m[r28{0} - 4]{184},
                m[r28{0} - 8]=m[r28{0} - 8]{184},   m[r28{0} - 16]=m[r28{0} - 16]{184},
                m[r28{0} - 44]=m[r28{0} - 44]{184},   m[r28{0} - 52]=m[r28{0} - 52]{184},
                m[r28{0} - 60]=m[r28{0} - 60]{184},   m[r28{0} - 64]=m[r28{0} - 64]{184},
                m[r28{0} - 76]=m[r28{0} - 76]{184},   m[r28{0} - 84]=m[r28{0} - 84]{184},
                m[r28{0} - 88]=m[r28{0} - 88]{184},   m[r28{0} - 92]=m[r28{0} - 92]{184},
                m[r28{0} - 96]=m[r28{0} - 96]{184},   m[r28{0} - 100]=m[r28{0} - 100]{184},
                m[r28{0} - 104]=m[r28{0} - 104]{184},   m[r28{0} - 108]=m[r28{0} - 108]{184},
                m[r28{0} - 112]=m[r28{0} - 112]{184},   m[r28{0} - 116]=m[r28{0} - 116]{184},
                m[r28{0} - 120]=m[r28{0} - 120]{184},   <all>=<all>{184},   tmp1=tmp1{781},   tmp2=tmp2{184},
                tmpl=tmpl{184},   %flags=%flags{782},   %ZF=%ZF{783},   %CF=%CF{784}
              Live variables: eax in proc proc5
result:    0 *32* eax := -
dest is not lib
call:  433 {*32* eax, *32* ecx, *v* edx, *v* esp} := CALL GetProcAddress(
                *HANDLE* m[esp_1 - 12] := m[esp_1 - 12]
                *c** m[esp_1 - 8] := m[esp_1 - 8]
              )
              Reaching definitions: r9=r9{184},   r24=r24{427},   r25=r25{427},   r26=r26{427},   r28=r28{184} - 16,
                r29=r29{184},   r30=r30{780},   m[r28{0} + 4]=m[r28{0} + 4]{184},   m[r28{0} - 4]=m[r28{0} - 4]{184},
                m[r28{0} - 8]=m[r28{0} - 8]{184},   m[r28{0} - 16]=m[r28{0} - 16]{184},
                m[r28{0} - 44]=m[r28{0} - 44]{184},   m[r28{0} - 52]=m[r28{0} - 52]{184},
                m[r28{0} - 60]=m[r28{0} - 60]{184},   m[r28{0} - 64]=m[r28{0} - 64]{184},
                m[r28{0} - 76]=m[r28{0} - 76]{184},   m[r28{0} - 84]=m[r28{0} - 84]{184},
                m[r28{0} - 88]=m[r28{0} - 88]{184},   m[r28{0} - 92]=m[r28{0} - 92]{184},
                m[r28{0} - 96]=m[r28{0} - 96]{184},   m[r28{0} - 100]=m[r28{0} - 100]{184},
                m[r28{0} - 104]=m[r28{0} - 104]{184},   m[r28{0} - 108]=m[r28{0} - 108]{184},
                m[r28{0} - 112]=m[r28{0} - 112]{184},   m[r28{0} - 116]=m[r28{0} - 116]{184},
                m[r28{0} - 120]=m[r28{0} - 120]{184},   m[r28{0} - 4]=m[r28{0} - 4]{184},
                m[r28{0} - 8]=m[r28{0} - 8]{184},   m[r28{0} - 16]=m[r28{0} - 16]{184},
                m[r28{0} - 44]=m[r28{0} - 44]{184},   m[r28{0} - 52]=m[r28{0} - 52]{184},
                m[r28{0} - 60]=m[r28{0} - 60]{184},   m[r28{0} - 64]=m[r28{0} - 64]{184},
                m[r28{0} - 76]=m[r28{0} - 76]{184},   m[r28{0} - 84]=m[r28{0} - 84]{184},
                m[r28{0} - 88]=m[r28{0} - 88]{184},   m[r28{0} - 92]=m[r28{0} - 92]{184},
                m[r28{0} - 96]=m[r28{0} - 96]{184},   m[r28{0} - 100]=m[r28{0} - 100]{184},
                m[r28{0} - 104]=m[r28{0} - 104]{184},   m[r28{0} - 108]=m[r28{0} - 108]{184},
                m[r28{0} - 112]=m[r28{0} - 112]{184},   m[r28{0} - 116]=m[r28{0} - 116]{184},
                m[r28{0} - 120]=m[r28{0} - 120]{184},   <all>=<all>{184},   tmp1=tmp1{781},   tmp2=tmp2{184},
                tmpl=tmpl{184},   %flags=%flags{782},   %ZF=%ZF{783},   %CF=%CF{784}
              Live variables: eax,  ecx in proc proc5
result:    0 *32* eax := -
result:    0 *32* ecx := -
dest is not lib
call:  630 {*32* eax, *v* ecx, *v* edx, *v* esp} := CALL CloseHandle(
                *HANDLE* m[esp_8 - 4] := m[esp_8 - 4]
              )
              Reaching definitions: r9=r9{837},   r24=r24{838},   r25=r25{624},   r26=r26{840},   r28=r28{841} - 8,
                r29=r29{842},   r30=r30{843},   m[r28{0} + 4]=m[r28{0} + 4]{993},   m[r28{0} - 4]=m[r28{0} - 4]{184},
                m[r28{0} - 8]=m[r28{0} - 8]{184},   m[r28{0} - 16]=m[r28{0} - 16]{184},
                m[r28{0} - 44]=m[r28{0} - 44]{184},   m[r28{0} - 52]=m[r28{0} - 52]{184},
                m[r28{0} - 60]=m[r28{0} - 60]{184},   m[r28{0} - 64]=m[r28{0} - 64]{184},
                m[r28{0} - 76]=m[r28{0} - 76]{184},   m[r28{0} - 84]=m[r28{0} - 84]{184},
                m[r28{0} - 88]=m[r28{0} - 88]{184},   m[r28{0} - 92]=m[r28{0} - 92]{184},
                m[r28{0} - 96]=m[r28{0} - 96]{184},   m[r28{0} - 100]=m[r28{0} - 100]{184},
                m[r28{0} - 104]=m[r28{0} - 104]{184},   m[r28{0} - 108]=m[r28{0} - 108]{184},
                m[r28{0} - 112]=m[r28{0} - 112]{184},   m[r28{0} - 116]=m[r28{0} - 116]{184},
                m[r28{0} - 120]=m[r28{0} - 120]{184},   m[r28{0} - 4]=m[r28{0} - 4]{953},
                m[r28{0} - 8]=m[r28{0} - 8]{954},   m[r28{0} - 16]=m[r28{0} - 16]{955},
                m[r28{0} - 44]=m[r28{0} - 44]{956},   m[r28{0} - 52]=m[r28{0} - 52]{957},
                m[r28{0} - 60]=m[r28{0} - 60]{958},   m[r28{0} - 64]=m[r28{0} - 64]{959},
                m[r28{0} - 76]=m[r28{0} - 76]{960},   m[r28{0} - 84]=m[r28{0} - 84]{961},
                m[r28{0} - 88]=m[r28{0} - 88]{962},   m[r28{0} - 92]=m[r28{0} - 92]{963},
                m[r28{0} - 96]=m[r28{0} - 96]{964},   m[r28{0} - 100]=m[r28{0} - 100]{965},
                m[r28{0} - 104]=m[r28{0} - 104]{966},   m[r28{0} - 108]=m[r28{0} - 108]{967},
                m[r28{0} - 112]=m[r28{0} - 112]{968},   m[r28{0} - 116]=m[r28{0} - 116]{969},
                m[r28{0} - 120]=m[r28{0} - 120]{970},   <all>=<all>{184},   tmp1=tmp1{844},   tmp2=tmp2{845},
                tmpl=tmpl{846},   %flags=%flags{847},   %ZF=%ZF{848},   %CF=%CF{849}
              Live variables:  in proc proc5
dest is not lib
call:  644 {*32* eax, *8* cl, *32* ecx, *32* edx, *v* esp} := CALL proc6(
                *32* m[esp_8 - 12] := m[esp_8 - 12]
                *32* m[esp_8 - 8] := m[esp_8 - 8]
                *u32* m[esp_8 - 4] := m[esp_8 - 4]
              )
              Reaching definitions: r9=r9{837},   r24=r24{632},   r25=r25{635},   r26=r26{638},   r28=r28{841} - 16,
                r29=r29{842},   r30=r30{843},   m[r28{0} + 4]=m[r28{0} + 4]{993},   m[r28{0} - 4]=m[r28{0} - 4]{184},
                m[r28{0} - 8]=m[r28{0} - 8]{184},   m[r28{0} - 16]=m[r28{0} - 16]{184},
                m[r28{0} - 44]=m[r28{0} - 44]{184},   m[r28{0} - 52]=m[r28{0} - 52]{184},
                m[r28{0} - 60]=m[r28{0} - 60]{184},   m[r28{0} - 64]=m[r28{0} - 64]{184},
                m[r28{0} - 76]=m[r28{0} - 76]{184},   m[r28{0} - 84]=m[r28{0} - 84]{184},
                m[r28{0} - 88]=m[r28{0} - 88]{184},   m[r28{0} - 92]=m[r28{0} - 92]{184},
                m[r28{0} - 96]=m[r28{0} - 96]{184},   m[r28{0} - 100]=m[r28{0} - 100]{184},
                m[r28{0} - 104]=m[r28{0} - 104]{184},   m[r28{0} - 108]=m[r28{0} - 108]{184},
                m[r28{0} - 112]=m[r28{0} - 112]{184},   m[r28{0} - 116]=m[r28{0} - 116]{184},
                m[r28{0} - 120]=m[r28{0} - 120]{184},   m[r28{0} - 4]=m[r28{0} - 4]{953},
                m[r28{0} - 8]=m[r28{0} - 8]{954},   m[r28{0} - 16]=m[r28{0} - 16]{955},
                m[r28{0} - 44]=m[r28{0} - 44]{956},   m[r28{0} - 52]=m[r28{0} - 52]{957},
                m[r28{0} - 60]=m[r28{0} - 60]{958},   m[r28{0} - 64]=m[r28{0} - 64]{959},
                m[r28{0} - 76]=m[r28{0} - 76]{960},   m[r28{0} - 84]=m[r28{0} - 84]{961},
                m[r28{0} - 88]=m[r28{0} - 88]{962},   m[r28{0} - 92]=m[r28{0} - 92]{963},
                m[r28{0} - 96]=m[r28{0} - 96]{964},   m[r28{0} - 100]=m[r28{0} - 100]{965},
                m[r28{0} - 104]=m[r28{0} - 104]{966},   m[r28{0} - 108]=m[r28{0} - 108]{967},
                m[r28{0} - 112]=m[r28{0} - 112]{968},   m[r28{0} - 116]=m[r28{0} - 116]{969},
                m[r28{0} - 120]=m[r28{0} - 120]{970},   <all>=<all>{184},   tmp1=tmp1{844},   tmp2=tmp2{845},
                tmpl=tmpl{846},   %flags=%flags{847},   %ZF=%ZF{848},   %CF=%CF{849}
              Live variables:  in proc proc5
dest is not lib
call:  675 {*32* eax, *32* ecx, *32* edx, *v* esp} := CALL proc8(
                *32* m[esp_8 - 4] := m[esp_8 - 4]
              )
              Reaching definitions: r9=r9{644},   r24=global16,   r25=r25{644},   r26=r26{644},   r28=r28{841} - 8,
                r29=r29{842},   r30=r30{843},   m[r28{0} + 4]=m[r28{0} + 4]{993},   m[r28{0} - 4]=m[r28{0} - 4]{184},
                m[r28{0} - 8]=m[r28{0} - 8]{184},   m[r28{0} - 16]=m[r28{0} - 16]{184},
                m[r28{0} - 44]=m[r28{0} - 44]{184},   m[r28{0} - 52]=m[r28{0} - 52]{184},
                m[r28{0} - 60]=m[r28{0} - 60]{184},   m[r28{0} - 64]=m[r28{0} - 64]{184},
                m[r28{0} - 76]=m[r28{0} - 76]{184},   m[r28{0} - 84]=m[r28{0} - 84]{184},
                m[r28{0} - 88]=m[r28{0} - 88]{184},   m[r28{0} - 92]=m[r28{0} - 92]{184},
                m[r28{0} - 96]=m[r28{0} - 96]{184},   m[r28{0} - 100]=m[r28{0} - 100]{184},
                m[r28{0} - 104]=m[r28{0} - 104]{184},   m[r28{0} - 108]=m[r28{0} - 108]{184},
                m[r28{0} - 112]=m[r28{0} - 112]{184},   m[r28{0} - 116]=m[r28{0} - 116]{184},
                m[r28{0} - 120]=m[r28{0} - 120]{184},   m[r28{0} - 4]=m[r28{0} - 4]{953},
                m[r28{0} - 8]=m[r28{0} - 8]{954},   m[r28{0} - 16]=m[r28{0} - 16]{955},
                m[r28{0} - 44]=m[r28{0} - 44]{956},   m[r28{0} - 52]=m[r28{0} - 52]{957},
                m[r28{0} - 60]=m[r28{0} - 60]{958},   m[r28{0} - 64]=m[r28{0} - 64]{959},
                m[r28{0} - 76]=m[r28{0} - 76]{960},   m[r28{0} - 84]=m[r28{0} - 84]{961},
                m[r28{0} - 88]=m[r28{0} - 88]{962},   m[r28{0} - 92]=m[r28{0} - 92]{963},
                m[r28{0} - 96]=m[r28{0} - 96]{964},   m[r28{0} - 100]=m[r28{0} - 100]{965},
                m[r28{0} - 104]=m[r28{0} - 104]{966},   m[r28{0} - 108]=m[r28{0} - 108]{967},
                m[r28{0} - 112]=m[r28{0} - 112]{968},   m[r28{0} - 116]=m[r28{0} - 116]{969},
                m[r28{0} - 120]=m[r28{0} - 120]{970},   <all>=<all>{184},   tmp1=global13,   tmp2=tmp2{845},
                tmpl=tmpl{846},   %flags=SUBFLAGS32( m[0x407044], 0, global13 ),   %ZF=global13 = 0,
                %CF=m[0x407044] <u 0
              Live variables:  in proc proc5
dest is not lib
call:  664 {*32* eax, *32* ecx, *32* edx, *v* esp} := CALL proc7(
                *j32* m[esp_8 - 8] := m[esp_8 - 8]
                *32** m[esp_8 - 4] := m[esp_8 - 4]
              )
              Reaching definitions: r9=r9{644},   r24=r24{651},   r25=r25{654},   r26=global63,
                r28=(r28{841} - 16) + 4,   r29=r29{842},   r30=r30{843},   m[r28{0} + 4]=m[r28{0} + 4]{993},
                m[r28{0} - 4]=m[r28{0} - 4]{184},   m[r28{0} - 8]=m[r28{0} - 8]{184},
                m[r28{0} - 16]=m[r28{0} - 16]{184},   m[r28{0} - 44]=m[r28{0} - 44]{184},
                m[r28{0} - 52]=m[r28{0} - 52]{184},   m[r28{0} - 60]=m[r28{0} - 60]{184},
                m[r28{0} - 64]=m[r28{0} - 64]{184},   m[r28{0} - 76]=m[r28{0} - 76]{184},
                m[r28{0} - 84]=m[r28{0} - 84]{184},   m[r28{0} - 88]=m[r28{0} - 88]{184},
                m[r28{0} - 92]=m[r28{0} - 92]{184},   m[r28{0} - 96]=m[r28{0} - 96]{184},
                m[r28{0} - 100]=m[r28{0} - 100]{184},   m[r28{0} - 104]=m[r28{0} - 104]{184},
                m[r28{0} - 108]=m[r28{0} - 108]{184},   m[r28{0} - 112]=m[r28{0} - 112]{184},
                m[r28{0} - 116]=m[r28{0} - 116]{184},   m[r28{0} - 120]=m[r28{0} - 120]{184},
                m[r28{0} - 4]=m[r28{0} - 4]{953},   m[r28{0} - 8]=m[r28{0} - 8]{954},
                m[r28{0} - 16]=m[r28{0} - 16]{955},   m[r28{0} - 44]=m[r28{0} - 44]{956},
                m[r28{0} - 52]=m[r28{0} - 52]{957},   m[r28{0} - 60]=m[r28{0} - 60]{958},
                m[r28{0} - 64]=m[r28{0} - 64]{959},   m[r28{0} - 76]=m[r28{0} - 76]{960},
                m[r28{0} - 84]=m[r28{0} - 84]{961},   m[r28{0} - 88]=m[r28{0} - 88]{962},
                m[r28{0} - 92]=m[r28{0} - 92]{963},   m[r28{0} - 96]=m[r28{0} - 96]{964},
                m[r28{0} - 100]=m[r28{0} - 100]{965},   m[r28{0} - 104]=m[r28{0} - 104]{966},
                m[r28{0} - 108]=m[r28{0} - 108]{967},   m[r28{0} - 112]=m[r28{0} - 112]{968},
                m[r28{0} - 116]=m[r28{0} - 116]{969},   m[r28{0} - 120]=m[r28{0} - 120]{970},   <all>=<all>{184},
                tmp1=global16,   tmp2=tmp2{845},   tmpl=tmpl{846},
                %flags=ADDFLAGS32( global16, m[r24{651} + 40], r25{654} ),
                %ZF=ADDFLAGS32( global16, m[r24{651} + 40], r25{654} ),
                %CF=ADDFLAGS32( global16, m[r24{651} + 40], r25{654} )
              Live variables:  in proc proc5
dest is not lib
call:  622 {*32* eax, *32* ecx, *32* edx, *32** esp_8} := CALL VirtualAlloc(
                *LPVOID* m[esp_8 - 16] := m[esp_8 - 16]
                *DWORD* m[esp_8 - 12] := m[esp_8 - 12]
                *DWORD* m[esp_8 - 8] := m[esp_8 - 8]
                *DWORD* m[esp_8 - 4] := m[esp_8 - 4]
              )
              Reaching definitions: r9=r9{824},   r24=global63,   r25=r25{612},   r26=r26{613},   r28=r28{828} - 20,
                r29=r29{829},   r30=r30{830},   m[r28{0} + 4]=m[r28{0} + 4]{992},   m[r28{0} - 4]=m[r28{0} - 4]{184},
                m[r28{0} - 8]=m[r28{0} - 8]{184},   m[r28{0} - 16]=m[r28{0} - 16]{184},
                m[r28{0} - 44]=m[r28{0} - 44]{184},   m[r28{0} - 52]=m[r28{0} - 52]{184},
                m[r28{0} - 60]=m[r28{0} - 60]{184},   m[r28{0} - 64]=m[r28{0} - 64]{184},
                m[r28{0} - 76]=m[r28{0} - 76]{184},   m[r28{0} - 84]=m[r28{0} - 84]{184},
                m[r28{0} - 88]=m[r28{0} - 88]{184},   m[r28{0} - 92]=m[r28{0} - 92]{184},
                m[r28{0} - 96]=m[r28{0} - 96]{184},   m[r28{0} - 100]=m[r28{0} - 100]{184},
                m[r28{0} - 104]=m[r28{0} - 104]{184},   m[r28{0} - 108]=m[r28{0} - 108]{184},
                m[r28{0} - 112]=m[r28{0} - 112]{184},   m[r28{0} - 116]=m[r28{0} - 116]{184},
                m[r28{0} - 120]=m[r28{0} - 120]{184},   m[r28{0} - 4]=m[r28{0} - 4]{935},
                m[r28{0} - 8]=m[r28{0} - 8]{936},   m[r28{0} - 16]=m[r28{0} - 16]{937},
                m[r28{0} - 44]=m[r28{0} - 44]{938},   m[r28{0} - 52]=m[r28{0} - 52]{939},
                m[r28{0} - 60]=m[r28{0} - 60]{940},   m[r28{0} - 64]=m[r28{0} - 64]{941},
                m[r28{0} - 76]=m[r28{0} - 76]{942},   m[r28{0} - 84]=m[r28{0} - 84]{943},
                m[r28{0} - 88]=m[r28{0} - 88]{944},   m[r28{0} - 92]=m[r28{0} - 92]{945},
                m[r28{0} - 96]=m[r28{0} - 96]{946},   m[r28{0} - 100]=m[r28{0} - 100]{947},
                m[r28{0} - 104]=m[r28{0} - 104]{948},   m[r28{0} - 108]=m[r28{0} - 108]{949},
                m[r28{0} - 112]=m[r28{0} - 112]{950},   m[r28{0} - 116]=m[r28{0} - 116]{951},
                m[r28{0} - 120]=m[r28{0} - 120]{952},   <all>=<all>{184},   tmp1=global13,   tmp2=tmp2{832},
                tmpl=tmpl{833},   %flags=SUBFLAGS32( m[0x407044], 0, global13 ),   %ZF=global13 = 0,
                %CF=m[0x407044] <u 0
              Live variables: eax,  esp_8 in proc proc5
result:    0 *32* eax := -
result:    0 *32** esp_8 := -
dest is not lib
call:  605 {*32* eax, *32* ecx, *32* edx, *32** esp_8} := CALL VirtualAlloc(
                *LPVOID* m[esp_8 - 16] := m[esp_8 - 16]
                *DWORD* m[esp_8 - 12] := m[esp_8 - 12]
                *DWORD* m[esp_8 - 8] := m[esp_8 - 8]
                *DWORD* m[esp_8 - 4] := m[esp_8 - 4]
              )
              Reaching definitions: r9=r9{824},   r24=r24{599},   r25=r25{595},   r26=r26{598},   r28=r28{828} - 20,
                r29=r29{829},   r30=r30{830},   m[r28{0} + 4]=m[r28{0} + 4]{992},   m[r28{0} - 4]=m[r28{0} - 4]{184},
                m[r28{0} - 8]=m[r28{0} - 8]{184},   m[r28{0} - 16]=m[r28{0} - 16]{184},
                m[r28{0} - 44]=m[r28{0} - 44]{184},   m[r28{0} - 52]=m[r28{0} - 52]{184},
                m[r28{0} - 60]=m[r28{0} - 60]{184},   m[r28{0} - 64]=m[r28{0} - 64]{184},
                m[r28{0} - 76]=m[r28{0} - 76]{184},   m[r28{0} - 84]=m[r28{0} - 84]{184},
                m[r28{0} - 88]=m[r28{0} - 88]{184},   m[r28{0} - 92]=m[r28{0} - 92]{184},
                m[r28{0} - 96]=m[r28{0} - 96]{184},   m[r28{0} - 100]=m[r28{0} - 100]{184},
                m[r28{0} - 104]=m[r28{0} - 104]{184},   m[r28{0} - 108]=m[r28{0} - 108]{184},
                m[r28{0} - 112]=m[r28{0} - 112]{184},   m[r28{0} - 116]=m[r28{0} - 116]{184},
                m[r28{0} - 120]=m[r28{0} - 120]{184},   m[r28{0} - 4]=m[r28{0} - 4]{935},
                m[r28{0} - 8]=m[r28{0} - 8]{936},   m[r28{0} - 16]=m[r28{0} - 16]{937},
                m[r28{0} - 44]=m[r28{0} - 44]{938},   m[r28{0} - 52]=m[r28{0} - 52]{939},
                m[r28{0} - 60]=m[r28{0} - 60]{940},   m[r28{0} - 64]=m[r28{0} - 64]{941},
                m[r28{0} - 76]=m[r28{0} - 76]{942},   m[r28{0} - 84]=m[r28{0} - 84]{943},
                m[r28{0} - 88]=m[r28{0} - 88]{944},   m[r28{0} - 92]=m[r28{0} - 92]{945},
                m[r28{0} - 96]=m[r28{0} - 96]{946},   m[r28{0} - 100]=m[r28{0} - 100]{947},
                m[r28{0} - 104]=m[r28{0} - 104]{948},   m[r28{0} - 108]=m[r28{0} - 108]{949},
                m[r28{0} - 112]=m[r28{0} - 112]{950},   m[r28{0} - 116]=m[r28{0} - 116]{951},
                m[r28{0} - 120]=m[r28{0} - 120]{952},   <all>=<all>{184},   tmp1=global13,   tmp2=tmp2{832},
                tmpl=tmpl{833},   %flags=SUBFLAGS32( m[0x407044], 0, global13 ),   %ZF=global13 = 0,
                %CF=m[0x407044] <u 0
              Live variables: eax,  esp_8 in proc proc5
result:    0 *32* eax := -
result:    0 *32** esp_8 := -
