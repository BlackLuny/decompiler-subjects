ERROR: attempted to decode outside any known segment 0x4010cb
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
in proc proc1 adding addrExp r28{0} - 8 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 20 to local table
in proc proc1 adding addrExp r28{0} - 4 to local table
in proc proc1 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc1 adding addrExp r28{0} - 8 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 20 to local table
in proc proc1 adding addrExp r28{0} - 8 to local table
in proc proc1 adding addrExp r28{0} - 12 to local table
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 16 to local table
in proc proc1 adding addrExp r28{0} - 20 to local table
finding final parameters for proc1
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for proc1
potential param r28
found new parameter r28
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
after removing matching assigns (%pc).
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with /*signed?*/long long; allowing temporarily
WARNING: size 0x20 meet with /*signed?*/long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc2 ###
in proc proc2 adding addrExp r28{0} - 8 to local table
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc proc2 adding addrExp r28{0} - 8 to local table
TYPE ERROR: at address 0xfffffff8, overlapping type unsigned long long does not resolve to compound or array
in proc proc2 adding addrExp r28{0} - 12 to local table
in proc proc2 adding addrExp r28{0} - 8 to local table
TYPE ERROR: at address 0xfffffff8, overlapping type unsigned long long does not resolve to compound or array
in proc proc2 adding addrExp r28{0} - 12 to local table
finding final parameters for proc2
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param r26
found new parameter r26
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
WARNING: size 0x20 meet with unsigned long long; allowing temporarily
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
in proc _start adding addrExp r28{0} - 104 to local table
in proc _start adding addrExp r28{0} - 108 to local table
in proc _start adding addrExp r28{0} - 112 to local table
in proc _start adding addrExp r28{0} - 116 to local table
in proc _start adding addrExp r28{0} - 116 to local table
in proc _start adding addrExp r28{0} - 120 to local table
in proc _start adding addrExp r28{0} - 112 to local table
in proc _start adding addrExp r28{0} - 116 to local table
finding final parameters for _start
potential param r28
found new parameter r28
potential param r26
found new parameter r26
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure proc2 ###
integer size 0x40 meet with SizeType size 0x20!
integer size 0x40 meet with SizeType size 0x20!
finding final parameters for _start
potential param r28
found new parameter r28
potential param r26
found new parameter r26
finding final parameters for proc2
potential param r28
found new parameter r28
potential param m[r28{0} + 8]
found new parameter m[r28{0} + 8]
potential param m[r28{0} + 12]
found new parameter m[r28{0} + 12]
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
finding final parameters for _start
potential param r28
found new parameter r28
dest is not lib
call:   21 *32* eax_1 := CALL proc1(
                *i32* local2 := param1 - 2
              )
              Reaching definitions: r24=m[r28{0} + 4]{0} - 2,   r28=r28{0} - 16,   r30=m[r28{0} + 4]{0},   r31=r31{0},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r30{0},   m[r28{0} - 8]=r31{0},
                m[r28{0} - 12]=m[r28{0} + 4]{0} - 2,   m[r28{0} - 16]=%pc,   m[r28{0} - 20]=m[r28{0} - 20]{0},
                tmp1=m[r28{0} + 4]{0} - 1,   %flags=SUBFLAGS32( m[r28{0} + 4]{0}, 1, m[r28{0} + 4]{0} - 1 ),
                %ZF=(m[r28{0} + 4]{0} - 1) = 0,   %CF=m[r28{0} + 4]{0} <u 1
              Live variables: eax_1 in proc proc1
result:    0 *32* eax_1 := -
dest is not lib
call:   31 *32* eax := CALL proc1(
                *i32* local3 := param1 - 1
              )
              Reaching definitions: r24=r24{21},   r28=r28{0} - 20,   r30=m[r28{0} + 4]{0} - 1,   r31=r24{21},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r30{0},   m[r28{0} - 8]=r31{0},
                m[r28{0} - 12]=m[r28{0} + 4]{0} - 2,   m[r28{0} - 16]=m[r28{0} + 4]{0} - 1,   m[r28{0} - 20]=%pc,
                <all>=<all>{21},   tmp1=m[r28{0} + 4]{0},   %flags=LOGICALFLAGS32( m[r28{0} + 4]{0} - 1 ),
                %ZF=LOGICALFLAGS32( m[r28{0} + 4]{0} - 1 ),   %CF=LOGICALFLAGS32( m[r28{0} + 4]{0} - 1 )
              Live variables: eax in proc proc1
result:    0 *32* eax := -
dest is not lib
call:   14 {*32* eax_1, *v* esp} := CALL proc1(
                *i32* local0 := 9
              )
              Reaching definitions: r24=r28{0} - 100,   r26=r26{0},   r28=r28{0} - 116,   m[r28{0} - 104]=100,
                m[r28{0} - 108]=r28{0} - 100,   m[r28{0} - 112]=9,   m[r28{0} - 116]=%pc,   tmp1=r28{0},
                %flags=SUBFLAGS32( r28{0}, 100, r28{0} - 100 ),   %ZF=(r28{0} - 100) = 0,   %CF=r28{0} <u 100
              Live variables: eax_1 in proc _start
result:    0 *32* eax_1 := -
dest is not lib
call:   21 {*32* eax, *v* esp} := CALL proc1(
                *i32* local1 := 8
              )
              Reaching definitions: r24=r24{14},   r25=r24{14},   r26=r26{0},   r28=r28{0} - 120,   m[r28{0} - 104]=100
                m[r28{0} - 108]=r28{0} - 100,   m[r28{0} - 112]=9,   m[r28{0} - 116]=8,   m[r28{0} - 120]=%pc,
                tmp1=r28{0},   %flags=SUBFLAGS32( r28{0}, 100, r28{0} - 100 ),   %ZF=(r28{0} - 100) = 0,
                %CF=r28{0} <u 100
              Live variables: eax in proc _start
result:    0 *32* eax := -
dest is not lib
call:   33 {*32* eax, *8* r8, *32* r25, *32* r26, *v* esp} := CALL proc2(
                *u64* local0 := eax_1 + eax
                *u32* local2 := a[m[esp - 100]]
                *u32* local3 := 100
              )
              Reaching definitions: r24=r24{21},   r25=r24{14} + r24{21},   r26=r26{0},   r28=(r28{0} - 120) + 4,
                m[r28{0} - 104]=100,   m[r28{0} - 108]=r28{0} - 100,   m[r28{0} - 112]=r24{14} + r24{21},
                m[r28{0} - 116]=%pc,   m[r28{0} - 120]=%pc,   tmp1=r24{14},
                %flags=ADDFLAGS32( r24{14}, r24{21}, r24{14} + r24{21} ),
                %ZF=ADDFLAGS32( r24{14}, r24{21}, r24{14} + r24{21} ),
                %CF=ADDFLAGS32( r24{14}, r24{21}, r24{14} + r24{21} )
              Live variables:  in proc _start
