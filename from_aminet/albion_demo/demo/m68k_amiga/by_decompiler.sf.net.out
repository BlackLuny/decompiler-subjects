Using options:
0000120C: warning: Procedure fn00001198 previously had a return address of 0 bytes on the stack, but now seems to have a return address of 4 bytes on the stack.
000012B6: warning: Procedure fn0000120E previously had a return address of 0 bytes on the stack, but now seems to have a return address of 4 bytes on the stack.
000077C6: warning: Procedure fn00007622 previously had a return address of 0 bytes on the stack, but now seems to have a return address of 4 bytes on the stack.
00007EBC: warning: Procedure fn00007B46 previously had a return address of 0 bytes on the stack, but now seems to have a return address of 4 bytes on the stack.
000013B0: warning: Procedure fn0000138E previously had a return address of 0 bytes on the stack, but now seems to have a return address of 4 bytes on the stack.
000013F8: warning: Procedure fn000013D2 previously had a return address of 0 bytes on the stack, but now seems to have a return address of 4 bytes on the stack.
00006E78: warning: Procedure fn00006D74 previously had a return address of 0 bytes on the stack, but now seems to have a return address of 4 bytes on the stack.
000059F6: warning: Procedure fn00005954 previously had a return address of 0 bytes on the stack, but now seems to have a return address of 4 bytes on the stack.
000056B6: warning: Procedure fn00005640 previously had a return address of 0 bytes on the stack, but now seems to have a return address of 4 bytes on the stack.
0000584A: warning: Procedure fn000057E2 previously had a return address of 0 bytes on the stack, but now seems to have a return address of 4 bytes on the stack.
00007984: warning: Procedure fn00007848 previously had a return address of 0 bytes on the stack, but now seems to have a return address of 4 bytes on the stack.
000049E2: warning: Procedure fn000049AC previously had a return address of 4 bytes on the stack, but now seems to have a return address of 0 bytes on the stack.
0000551A: warning: Procedure fn000054DE previously had a return address of 0 bytes on the stack, but now seems to have a return address of 4 bytes on the stack.
00004788: warning: Procedure fn00004764 previously had a return address of 0 bytes on the stack, but now seems to have a return address of 4 bytes on the stack.
0000542C: warning: Procedure fn000053BE previously had a return address of 4 bytes on the stack, but now seems to have a return address of 0 bytes on the stack.
0000FF14: warning: Procedure fn0000FEF8 previously had a return address of 0 bytes on the stack, but now seems to have a return address of 4 bytes on the stack.
00005B4C: warning: Procedure fn00005AA0 previously had a return address of 0 bytes on the stack, but now seems to have a return address of 4 bytes on the stack.
00005C0A: warning: Procedure fn00005B6E previously had a return address of 4 bytes on the stack, but now seems to have a return address of 0 bytes on the stack.
00006B56: warning: Procedure fn00006B20 previously had a return address of 0 bytes on the stack, but now seems to have a return address of 4 bytes on the stack.
00005DF4: warning: Procedure fn00005CD2 previously had a return address of 4 bytes on the stack, but now seems to have a return address of 0 bytes on the stack.
l00001024: error: An error occurred while rewriting at linear address 1036.
    Expected stack depth to be negative.
       at Decompiler.Analysis.ExpressionPropagator.GetStackDepthBeforeCall()
   at Decompiler.Analysis.ExpressionPropagator.VisitCallInstruction(CallInstruction ci)
   at Decompiler.Core.Code.CallInstruction.Accept[T](InstructionVisitor`1 visitor)
   at Decompiler.Analysis.TrashedRegisterFinder.RewriteBlock(Block block)
l00001024: error: An error occurred while rewriting at linear address 103C.
    Expected stack depth to be negative.
       at Decompiler.Analysis.ExpressionPropagator.GetStackDepthBeforeCall()
   at Decompiler.Analysis.ExpressionPropagator.VisitCallInstruction(CallInstruction ci)
   at Decompiler.Core.Code.CallInstruction.Accept[T](InstructionVisitor`1 visitor)
   at Decompiler.Analysis.TrashedRegisterFinder.RewriteBlock(Block block)
l00005B4E: error: An error occurred while rewriting at linear address 5B58.
    Expected stack depth to be negative.
       at Decompiler.Analysis.ExpressionPropagator.GetStackDepthBeforeCall()
   at Decompiler.Analysis.ExpressionPropagator.VisitCallInstruction(CallInstruction ci)
   at Decompiler.Core.Code.CallInstruction.Accept[T](InstructionVisitor`1 visitor)
   at Decompiler.Analysis.TrashedRegisterFinder.RewriteBlock(Block block)
l00005B4E: error: An error occurred while rewriting at linear address 5B5E.
    Expected stack depth to be negative.
       at Decompiler.Analysis.ExpressionPropagator.GetStackDepthBeforeCall()
   at Decompiler.Analysis.ExpressionPropagator.VisitCallInstruction(CallInstruction ci)
   at Decompiler.Core.Code.CallInstruction.Accept[T](InstructionVisitor`1 visitor)
   at Decompiler.Analysis.TrashedRegisterFinder.RewriteBlock(Block block)
fn00008C32: error: An error occurred during data flow analysis.
    Can't add types of different domains int32 and word32
       at Decompiler.Evaluation.ExpressionSimplifier.SimplifyTwoConstants(BinaryOperator op, Constant l, Constant r)
   at Decompiler.Evaluation.ExpressionSimplifier.VisitBinaryExpression(BinaryExpression binExp)
   at Decompiler.Core.Expressions.BinaryExpression.Accept[T](ExpressionVisitor`1 v)
   at Decompiler.Analysis.ValuePropagator.VisitBranch(Branch b)
   at Decompiler.Core.Code.Branch.Accept[T](InstructionVisitor`1 visitor)
   at Decompiler.Analysis.ValuePropagator.Transform(Statement stm)
   at Decompiler.Analysis.ValuePropagator.Transform()
   at Decompiler.Analysis.DataFlowAnalysis.BuildExpressionTrees()
: error: Error when reconstructing types.
    Invalid pointer size.
Parameter name: byteSize
       at Decompiler.Core.Types.Pointer..ctor(DataType pointee, Int32 byteSize)
   at Decompiler.Typing.DataTypeBuilder.MemoryAccessCommon(Expression tBase, Expression tStruct, Int32 offset, DataType tField, Int32 structPtrSize)
   at Decompiler.Typing.DataTypeBuilder.MemAccessTrait(Expression tBase, Expression tStruct, Int32 structPtrSize, Expression tField, Int32 offset)
   at Decompiler.Typing.TraitCollector.VisitDereference(Dereference deref)
   at Decompiler.Core.Expressions.Dereference.Accept[T](ExpressionVisitor`1 v)
   at Decompiler.Typing.TraitCollector.VisitStore(Store store)
   at Decompiler.Core.Code.Store.Accept[T](InstructionVisitor`1 visitor)
   at Decompiler.Typing.TraitCollector.CollectProgramTraits(Program prog)
   at Decompiler.Typing.TypeAnalyzer.RewriteProgram(Program prog)
   at Decompiler.DecompilerDriver.ReconstructTypes()
rewriting: void fn00001000(Register word32 d0, Register word32 d1, Register word32 d2, Register word32 d4, Register word32 d7, Register word32 a0, Register word32 a6, Stack word32 dwArg00)
rewriting: void fn000010BC(Register word32 d0, Register word32 d7, Register word32 a0, Register word32 a6)
rewriting: Register word32 fn000010DC(Register word32 d0, Register word32 d1, Register word32 d2, Register word32 d4, Register word32 d7, Register word32 a0, Register word32 a6, Register out ptr32 d3Out, Register out ptr32 d6Out, Register out ptr32 d7Out, Register out ptr32 a0Out, Register out ptr32 a6Out)
rewriting: void fn0000113C(Register word32 d0, Register word32 a0, Register word32 a6)
rewriting: void fn00001198(Register word32 d0, Register word32 d7, Register word32 a6)
rewriting: void fn0000120E(Register word32 d7, Register word32 a0, Register word32 a6)
rewriting: void fn000012B8(Register word32 a6)
rewriting: void fn0000136C(Register word32 d0, Register word32 d1, Register word32 a0)
rewriting: void fn0000138E(Register word32 d0, Register word32 d7, Register word32 a0, Register word32 a6)
rewriting: void fn000013B2(Register word32 a0, Register word32 a6)
rewriting: void fn000013D2(Register word32 d0, Register word32 d7, Register word32 a6)
rewriting: void fn000013FA(Register word32 a0, Register word32 a6)
rewriting: void fn0000141A(Register word32 d0, Register word32 d7, Register word32 a0, Register word32 a6)
rewriting: void fn00001442(Register word32 d0)
rewriting: void fn00001502(Register word32 a6)
rewriting: void fn00001528(Register word32 a6)
rewriting: void fn00001588()
rewriting: Register word32 fn000015A0(Register word32 d0, Register word32 d1, Register word32 d2, Register out ptr32 d3Out)
rewriting: void fn000015B8(Register word32 d0, Register word32 d1, Register word32 d2, Register word32 d4, Register word32 a6)
rewriting: void fn00001822(Register word32 d0, Register word32 d1, Register word32 d2, Register word32 d3, Register word32 d4, Register word32 d5, Register word32 d6, Register word32 a6)
rewriting: Register word32 fn00001A74(Register word32 d5, Register word32 d6, Register word32 a0, Register word32 a5, Register word32 a6, Register out ptr32 d6Out)
rewriting: Register word32 fn00001ACA(Register word32 d0, Register word32 d1, Register word32 d2, Register word32 d3, Register word32 d4, Register word32 d5, Register word32 d6, Register word32 a6, Stack word32 dwArg0E, Stack word32 dwArg12, Stack word32 dwArg16, Stack word32 dwArg1A, Stack word32 dwArg1E, Stack word32 dwArg22, Stack word32 dwArg26, Stack word32 dwArg2A, Stack word32 dwArg2E, Stack word32 dwArg32, Stack word32 dwArg36, Stack word32 dwArg3A, Stack word32 dwArg3E, Stack word32 dwArg42, Stack word32 dwArg46, Register out ptr32 d1Out, Register out ptr32 d2Out, Register out ptr32 d3Out, Register out ptr32 d4Out, Register out ptr32 d5Out, Register out ptr32 d6Out, Register out ptr32 a0Out, Register out ptr32 a4Out, Register out ptr32 a6Out)
fn00001ACA: error: An error occurred while rewriting procedure to high-level language.
    Unable to cast object of type 'Decompiler.Core.Code.ReturnInstruction' to type 'Decompiler.Core.Code.Branch'.
       at Decompiler.Structure.AbsynCodeGenerator.BranchCondition(StructureNode node)
   at Decompiler.Structure.IfConditional.GenerateCode(AbsynCodeGenerator codeGen, StructureNode node, StructureNode latchNode, AbsynStatementEmitter emitter)
   at Decompiler.Structure.AbsynCodeGenerator.GenerateCode(StructureNode node, StructureNode latchNode, AbsynStatementEmitter emitter)
   at Decompiler.Structure.IfConditional.GenerateCode(AbsynCodeGenerator codeGen, StructureNode node, StructureNode latchNode, AbsynStatementEmitter emitter)
   at Decompiler.Structure.AbsynCodeGenerator.GenerateCode(StructureNode node, StructureNode latchNode, AbsynStatementEmitter emitter)
   at Decompiler.Structure.IfConditional.GenerateCode(AbsynCodeGenerator codeGen, StructureNode node, StructureNode latchNode, AbsynStatementEmitter emitter)
   at Decompiler.Structure.AbsynCodeGenerator.GenerateCode(StructureNode node, StructureNode latchNode, AbsynStatementEmitter emitter)
   at Decompiler.Structure.AbsynCodeGenerator.GenerateCode(StructureNode node, StructureNode latchNode, AbsynStatementEmitter emitter)
   at Decompiler.Structure.AbsynCodeGenerator.GenerateCode(ProcedureStructure proc, List`1 stms)
   at Decompiler.Structure.StructureAnalysis.GenerateStructuredCode()
   at Decompiler.Structure.StructureAnalysis.Structure()
   at Decompiler.DecompilerDriver.StructureProgram()
rewriting: void fn00001BF4(Register word32 d0, Register word32 d1, Register word32 d2, Register word32 d3, Register word32 d4, Register word32 d5, Register word32 a6)
rewriting: Register word32 fn00001E20(Register word32 d5, Register word32 a0, Register word32 a5, Register word32 a6)
rewriting: void fn00001F5C(Register word32 d0, Register word32 d1, Register word32 d4, Register word32 d5, Register word32 d6, Register word32 d7, Register word32 a0, Register word32 a6)
rewriting: void fn000025E4(Register word32 d0, Register word32 d1, Register word32 d4, Register word32 d5, Register word32 d6, Register word32 d7, Register word32 a0, Register word32 a2, Register word32 a6)
rewriting: void fn00002924(Register word32 d0, Register word32 d1, Register word32 d2, Register word32 d4, Register word32 d6, Register word32 d7, Register word32 a6)
rewriting: void fn00002A86(Register word32 d0, Register word32 d1, Register word32 d2, Register word32 d4, Register word32 d5, Register word32 d6, Register word32 d7, Register word32 a6)
rewriting: Register word32 fn00002D2A(Register word32 d0, Register word32 d1, Register word32 d2, Register word32 d3, Register word32 a6, Stack word32 dwArg00, Stack word32 dwArg04, Stack word32 dwArg08, Stack word32 dwArg0C, Stack word32 dwArg10, Stack word32 dwArg14, Register out ptr32 d2Out, Register out ptr32 d3Out, Register out ptr32 a0Out)
fn00002D2A: error: An error occurred while rewriting procedure to high-level language.
    Unable to cast object of type 'Decompiler.Core.Code.ReturnInstruction' to type 'Decompiler.Core.Code.Branch'.
       at Decompiler.Structure.AbsynCodeGenerator.BranchCondition(StructureNode node)
   at Decompiler.Structure.IfConditional.GenerateCode(AbsynCodeGenerator codeGen, StructureNode node, StructureNode latchNode, AbsynStatementEmitter emitter)
   at Decompiler.Structure.AbsynCodeGenerator.GenerateCode(StructureNode node, StructureNode latchNode, AbsynStatementEmitter emitter)
   at Decompiler.Structure.IfConditional.GenerateCode(AbsynCodeGenerator codeGen, StructureNode node, StructureNode latchNode, AbsynStatementEmitter emitter)
   at Decompiler.Structure.AbsynCodeGenerator.GenerateCode(StructureNode node, StructureNode latchNode, AbsynStatementEmitter emitter)
   at Decompiler.Structure.AbsynCodeGenerator.GenerateCode(StructureNode node, StructureNode latchNode, AbsynStatementEmitter emitter)
   at Decompiler.Structure.AbsynCodeGenerator.GenerateCode(ProcedureStructure proc, List`1 stms)
   at Decompiler.Structure.StructureAnalysis.GenerateStructuredCode()
   at Decompiler.Structure.StructureAnalysis.Structure()
   at Decompiler.DecompilerDriver.StructureProgram()
rewriting: void fn00002DD2(Register word32 d0, Register word32 d1, Register word32 d4, Register word32 d5, Register word32 d6, Register word32 d7, Register word32 a0, Register word32 a6)
rewriting: Register word32 fn0000351A(Register word32 d0, Register word32 d1, Register word32 d5, Register word32 d6, Register word32 d7, Register word32 a0, Register word32 a6, Register out ptr32 a2Out)
rewriting: void fn000039C6(Register word32 d0, Register word32 d1, Register word32 d2, Register word32 d3, Register word32 d4, Register word32 d5, Register word32 d6, Register word32 a4, Register word32 a6)
rewriting: void fn000039D8(Register word32 d0, Register word32 d1, Register word32 d2, Register word32 d3, Register word32 d4, Register word32 d5, Register word32 d6, Register word32 a4, Register word32 a6)
rewriting: Register word32 fn00003C08(Register word32 d0, Register word32 d1, Register word32 d2, Register word32 d3, Register word32 d4, Register word32 d5, Register word32 d6, Register word32 a0, Register word32 a1, Register word32 a4, Register word32 a5, Register out ptr32 d6Out)
rewriting: Register word32 fn00003C26(Register word32 d0, Register word32 d1, Register word32 d2, Register word32 d3, Register word32 d4, Register word32 a0, Register word32 a1, Register word32 a4, Register out ptr32 a1Out)
rewriting: Register word32 fn00003CCE(Register word32 d0, Register word32 d1, Register word32 d2, Register word32 d3, Register word32 a0, Register word32 a1, Register word32 a4, Register out ptr32 a1Out)
rewriting: Register word32 fn00003D64(Register word32 a0, Register word32 a1, Register word32 a4, Register out ptr32 a1Out)
rewriting: Register word32 fn00003E02(Register word32 d0, Register word32 d1, Register word32 d2, Register word32 a5)
rewriting: void fn00003E22(Register word32 d0, Register word32 d1, Register word32 d2, Register word32 d3, Register word32 d4, Register word32 d5, Register word32 d6, Register word32 a6)
rewriting: Register word32 fn00004052(Register word32 d0, Register word32 d1, Register word32 d2, Register word32 d3, Register word32 d4, Register word32 d5, Register word32 d6, Register word32 a0, Register word32 a1, Register word32 a5, Register out ptr32 d6Out)
rewriting: Register word32 fn00004070(Register word32 d0, Register word32 d1, Register word32 d2, Register word32 d3, Register word32 d4, Register word32 a0, Register word32 a1, Register out ptr32 a1Out)
rewriting: Register word32 fn000040C0(Register word32 d0, Register word32 d1, Register word32 d2, Register word32 d3, Register word32 a0, Register word32 a1, Register out ptr32 a1Out)
rewriting: Register word32 fn000040FE(Register word32 a0, Register word32 a1, Register out ptr32 a1Out)
rewriting: Register word32 fn000046B2(Register word32 d0, Register word32 d7, Register out ptr32 d1Out, Register out ptr32 d2Out, Register out ptr32 d7Out, Register out ptr32 a2Out)
rewriting: Register word32 fn00004702(Register word32 d0, Register word32 d7, Register out ptr32 d1Out, Register out ptr32 d2Out, Register out ptr32 d7Out, Register out ptr32 a2Out)
rewriting: Register word32 fn00004764(Register word32 d7, Register word32 a0, Register word32 a6, Register out ptr32 a1Out)
rewriting: Register word32 fn0000478A(Register word32 d0, Register word32 d1, Register word32 a0, Register word32 a1, Register word32 a6, Register out ptr32 d1Out, Register out ptr32 d2Out, Register out ptr32 d7Out)
rewriting: Register word32 fn00004824(Register word32 d0, Register word32 d2, Register word32 a0, Register word32 a1, Register word32 a2, Register word32 a6, Register out ptr32 d1Out, Register out ptr32 d2Out, Register out ptr32 d7Out)
rewriting: Register word32 fn000048AE(Register word32 d0, Register word32 d1, Stack word32 dwArg00, Stack word32 dwArg04, Stack word32 dwArg08, Stack word32 dwArg0C, Stack word32 dwArg10, Register out ptr32 d2Out, Register out ptr32 d7Out, Register out ptr32 a0Out, Register out ptr32 a1Out, Register out ptr32 a2Out)
fn000048AE: error: An error occurred while rewriting procedure to high-level language.
    Unable to cast object of type 'Decompiler.Core.Code.ReturnInstruction' to type 'Decompiler.Core.Code.Branch'.
       at Decompiler.Structure.AbsynCodeGenerator.BranchCondition(StructureNode node)
   at Decompiler.Structure.IfConditional.GenerateCode(AbsynCodeGenerator codeGen, StructureNode node, StructureNode latchNode, AbsynStatementEmitter emitter)
   at Decompiler.Structure.AbsynCodeGenerator.GenerateCode(StructureNode node, StructureNode latchNode, AbsynStatementEmitter emitter)
   at Decompiler.Structure.AbsynCodeGenerator.GenerateCode(StructureNode node, StructureNode latchNode, AbsynStatementEmitter emitter)
   at Decompiler.Structure.AbsynCodeGenerator.GenerateCode(StructureNode node, StructureNode latchNode, AbsynStatementEmitter emitter)
   at Decompiler.Structure.AbsynCodeGenerator.GenerateCode(StructureNode node, StructureNode latchNode, AbsynStatementEmitter emitter)
   at Decompiler.Structure.AbsynCodeGenerator.GenerateCode(StructureNode node, StructureNode latchNode, AbsynStatementEmitter emitter)
   at Decompiler.Structure.AbsynCodeGenerator.GenerateCode(StructureNode node, StructureNode latchNode, AbsynStatementEmitter emitter)
   at Decompiler.Structure.AbsynCodeGenerator.GenerateCode(ProcedureStructure proc, List`1 stms)
   at Decompiler.Structure.StructureAnalysis.GenerateStructuredCode()
   at Decompiler.Structure.StructureAnalysis.Structure()
   at Decompiler.DecompilerDriver.StructureProgram()
rewriting: Register word32 fn0000490C(Register word32 d0, Register word32 d1, Register out ptr32 d7Out)
rewriting: Register word32 fn0000493C(Register word32 d0, Register word32 d1, Register word32 a1, Register word32 a6, Register out ptr32 d1Out, Register out ptr32 d7Out)
rewriting: Register word32 fn000049AC(Register word32 d0, Register word32 d1, Register out ptr32 d7Out)
rewriting: void fn00005138(Register word32 d0, Register word32 a0)
rewriting: Register word32 fn0000516E(Register word32 a0)
rewriting: void fn00005212(Register word32 a0)
rewriting: Register word32 fn00005238(Register word32 d0, Register word32 a0)
rewriting: void fn0000524A(Register word32 d7)
rewriting: Register word32 fn000052E2(Register word32 d0, Register word32 d1, Register word32 d7, Register word32 a6, Stack word32 dwArg00, Stack word32 dwArg04, Stack word32 dwArg08, Stack word32 dwArg0C)
fn000052E2: error: An error occurred while rewriting procedure to high-level language.
    Unable to cast object of type 'Decompiler.Core.Code.ReturnInstruction' to type 'Decompiler.Core.Code.Branch'.
       at Decompiler.Structure.AbsynCodeGenerator.BranchCondition(StructureNode node)
   at Decompiler.Structure.IfConditional.GenerateCode(AbsynCodeGenerator codeGen, StructureNode node, StructureNode latchNode, AbsynStatementEmitter emitter)
   at Decompiler.Structure.AbsynCodeGenerator.GenerateCode(StructureNode node, StructureNode latchNode, AbsynStatementEmitter emitter)
   at Decompiler.Structure.IfConditional.GenerateCode(AbsynCodeGenerator codeGen, StructureNode node, StructureNode latchNode, AbsynStatementEmitter emitter)
   at Decompiler.Structure.AbsynCodeGenerator.GenerateCode(StructureNode node, StructureNode latchNode, AbsynStatementEmitter emitter)
   at Decompiler.Structure.IfConditional.GenerateCode(AbsynCodeGenerator codeGen, StructureNode node, StructureNode latchNode, AbsynStatementEmitter emitter)
   at Decompiler.Structure.AbsynCodeGenerator.GenerateCode(StructureNode node, StructureNode latchNode, AbsynStatementEmitter emitter)
   at Decompiler.Structure.AbsynCodeGenerator.GenerateCode(StructureNode node, StructureNode latchNode, AbsynStatementEmitter emitter)
   at Decompiler.Structure.AbsynCodeGenerator.GenerateCode(ProcedureStructure proc, List`1 stms)
   at Decompiler.Structure.StructureAnalysis.GenerateStructuredCode()
   at Decompiler.Structure.StructureAnalysis.Structure()
   at Decompiler.DecompilerDriver.StructureProgram()
rewriting: void fn00005380(Register word32 d7, Register word32 a6)
rewriting: void fn000053BE(Register word32 a0, Register word32 a6)
rewriting: void fn00005440(Register word32 d7)
rewriting: void fn0000545A()
rewriting: Register word32 fn000054A2(Register word32 d0, Register word32 d7, Register out ptr32 d1Out, Register out ptr32 d2Out, Register out ptr32 d7Out, Register out ptr32 a2Out)
rewriting: Register word32 fn000054C6(Register word32 d0, Register word32 d7, Register word32 a0, Register out ptr32 d1Out, Register out ptr32 d2Out, Register out ptr32 d7Out, Register out ptr32 a1Out, Register out ptr32 a2Out)
rewriting: Register word32 fn000054DE(Register word32 d0, Register word32 a0, Register word32 a6)
rewriting: void fn0000551C(Register word32 a0)
rewriting: FlagGroup byte fn00005544(Register word32 d0, Register word32 d7, Register out ptr32 a0Out)
rewriting: FlagGroup byte fn000055A8(Register word32 a0, Register out ptr32 a1Out)
rewriting: void fn000055CE(Register word32 d7, Register word32 a6)
rewriting: void fn00005640(Register word32 d0, Register word32 a0, Register word32 a6)
rewriting: Register word32 fn000056B8(Register word32 d0, Register word32 d3, Register word32 d5, Register word32 d6, Register word32 d7, Register word32 a2, Register word32 a6, Register out ptr32 d7Out, Register out ptr32 a2Out)
rewriting: void fn000057AE(Register word32 d7, Register word32 a6)
rewriting: Register word32 fn000057E2(Register word32 d7, Register word32 a6)
rewriting: void fn0000584C(Register word32 a0, Register word32 a1)
rewriting: void fn0000586E(Register word32 a0)
rewriting: Register word32 fn00005898(Register word32 d0, Register word32 d1, Register word32 d2, Register word32 d7, Register word32 a0, Register word32 a1)
rewriting: void fn000058F4(Register word32 d0, Register word32 d1, Register word32 a0, Register word32 a6)
rewriting: void fn00005954(Register word32 d0, Register word32 d7, Register word32 a0, Register word32 a6)
rewriting: void fn000059F8(Register word32 d0, Register word32 a6)
rewriting: void fn00005A58(Register word32 a6)
rewriting: void fn00005A7C(Register word32 a6)
rewriting: Register word32 fn00005AA0(Register word32 d0, Register word32 d1, Register word32 d2, Register word32 d3, Register word32 d7, Register word32 a0, Register word32 a1, Register word32 a5, Register word32 a6, Stack word32 dwArg00, Register out ptr32 d1Out, Register out ptr32 a0Out)
rewriting: void fn00005B68(Register word32 a6)
rewriting: Register word32 fn00005B6E(Register word32 d0, Register word32 d1, Register word32 d3, Register word32 a0, Register word32 a1, Register word32 a6)
rewriting: void fn00005CD2(Register word32 d0, Register word32 d1, Register word32 d2, Register word32 d3, Register word32 d5, Register word32 d6, Register word32 a0, Register word32 a1, Register word32 a3, Register word32 a6)
rewriting: void fn00005FA4(Register word32 d0, Register word32 d2, Register word32 d3, Register word32 d5, Register word32 d6, Register word32 a0, Register word32 a3)
rewriting: void fn00006AE0(Register word32 d0, Register word32 a6)
rewriting: void fn00006AFE(Register word32 d0, Register word32 d7, Register word32 a0, Register word32 a6)
rewriting: Register word32 fn00006B20(Register word32 a5, Register word32 a6)
rewriting: Register word32 fn00006D74(Register word32 d0, Register word32 d7, Register word32 a0, Register word32 a6, Stack word32 dwArg00, Stack word32 dwArg04, Stack word32 dwArg08, Stack word32 dwArg0C, Register out ptr32 a0Out)
rewriting: void fn00006E7A(Register word32 a6)
rewriting: Register word32 fn0000710E()
rewriting: Register word32 fn0000716E(Register word32 d0, Register word32 d1, Register word32 d2, Register out ptr32 d1Out, Register out ptr32 d2Out)
rewriting: Register word32 fn000071DA(Register word32 d2, Register word32 d3, Register word32 d6, Register word32 d7, Register word32 a0, Register word32 a6, Register out ptr32 d1Out, Register out ptr32 d6Out, Register out ptr32 d7Out, Register out ptr32 a1Out)
rewriting: Register word32 fn00007204(Register word32 d2)
rewriting: Register word32 fn00007224(Register word32 d2, Register word32 d3, Register word32 d6, Register word32 d7, Register word32 a0, Register word32 a6, Register out ptr32 d1Out, Register out ptr32 d6Out, Register out ptr32 d7Out)
rewriting: Register word32 fn00007244(Register word32 d1, Register word32 d2, Register word32 d4, Register word32 a6, Stack word32 dwArg00, Register out ptr32 d7Out, Register out ptr32 a0Out)
rewriting: void fn000072A6(Register word32 d0, Register word32 a0)
rewriting: void fn00007306(Register word32 d0, Register word32 d1)
rewriting: void fn0000732A(Register word32 d0, Register word32 d1, Register word32 a0)
rewriting: void fn0000738C(Register word32 d2, Register word32 d6, Register word32 d7, Register word32 a0, Register word32 a6)
rewriting: void fn000073BC(Register word32 a0)
rewriting: void fn0000742E()
rewriting: Register word32 fn00007468(Register word32 d2, Register word32 d6, Register word32 d7, Register word32 a6, Register out ptr32 d7Out)
rewriting: Register word32 fn0000748C(Register word32 d2, Register word32 d6, Register word32 d7, Register word32 a0, Register word32 a6, Stack word32 dwArg00, Register out ptr32 d1Out, Register out ptr32 d6Out, Register out ptr32 d7Out, Register out ptr32 a1Out)
rewriting: Register word32 fn0000752E(Register word32 d2, Stack word32 dwArg00)
rewriting: void fn0000754E(Register word32 d2, Register word32 d3, Register word32 a6)
rewriting: Register word32 fn000075F6(Register word32 d2, Register word32 d6, Register word32 d7, Register word32 a6)
rewriting: void fn00007622(Register word32 d0, Register word32 d1, Register word32 d4, Register word32 d6, Register word32 d7, Register word32 a0, Register word32 a1)
rewriting: void fn000077C8(Register word32 d0, Register word32 a0)
rewriting: void fn00007848(Register word32 d2, Register word32 d6, Register word32 d7, Register word32 a0, Register word32 a1)
rewriting: void fn00007986(Register word32 d1, Register word32 d2, Register word32 d5, Register word32 d6, Register word32 d7, Register word32 a0, Register word32 a1, Register word32 a6)
rewriting: void fn000079BE(Register word32 d2, Register word32 d6, Register word32 d7, Register word32 a0, Register word32 a1)
rewriting: Register word32 fn00007B46(Register word32 d0, Register word32 d7, Register word32 a6)
rewriting: void fn00007EBE(Register word32 a6)
rewriting: void fn00007FD4(Register word32 d7, Register word32 a0, Register word32 a6)
rewriting: Register word32 fn00008006(Register word32 d1, Register word32 d4, Register word32 d5, Register word32 d6, Register word32 d7, Register word32 a6, Register out ptr32 d3Out, Register out ptr32 d4Out, Register out ptr32 d5Out, Register out ptr32 d6Out, Register out ptr32 a3Out)
rewriting: Register word32 fn000080A0(Register word32 d1, Register word32 d4, Register word32 d5, Register word32 d6, Register word32 d7, Register word32 a6, Register out ptr32 d5Out, Register out ptr32 d6Out)
rewriting: Register word32 fn00008134(Register word32 d4, Register word32 d6, Register word32 d7, Register word32 a6, Register out ptr32 d3Out, Register out ptr32 d4Out, Register out ptr32 d5Out, Register out ptr32 d6Out, Register out ptr32 a3Out)
rewriting: Register word32 fn00008206(Register word32 d0, Register word32 d1, Register word32 d2, Register word32 d3, Register word32 d4, Register word32 a0, Register out ptr32 d4Out, Register out ptr32 d5Out, Register out ptr32 d6Out, Register out ptr32 d7Out, Register out ptr32 a6Out)
rewriting: void fn000084B6()
rewriting: Register word32 fn00008500()
rewriting: Register word32 fn00008546(Register word32 d1, Register word32 d4, Register word32 d5, Register word32 d6, Register word32 d7, Register word32 a6)
rewriting: Register word32 fn0000867C(Register word32 d4, Register word32 d6, Register word32 d7, Register word32 a6)
rewriting: Register word32 fn00008706(Register word32 d0, Register word32 d1, Register word32 d2, Register word32 d4, Register word32 d5, Register word32 d6, Register word32 d7, Register word32 a1, Register word32 a6, Register out ptr32 d1Out, Register out ptr32 d4Out, Register out ptr32 d5Out, Register out ptr32 d6Out, Register out ptr32 d7Out, Register out ptr32 a6Out)
rewriting: void fn000087DC(Register word32 d0, Register word32 a1, Stack word32 dwArg00, Stack word32 dwArg04, Stack word32 dwArg08, Stack word32 dwArg0C, Stack word32 dwArg10, Stack word32 dwArg14)
fn000087DC: error: An error occurred while rewriting procedure to high-level language.
    Unable to cast object of type 'Decompiler.Core.Code.ReturnInstruction' to type 'Decompiler.Core.Code.Branch'.
       at Decompiler.Structure.AbsynCodeGenerator.BranchCondition(StructureNode node)
   at Decompiler.Structure.IfConditional.GenerateCode(AbsynCodeGenerator codeGen, StructureNode node, StructureNode latchNode, AbsynStatementEmitter emitter)
   at Decompiler.Structure.AbsynCodeGenerator.GenerateCode(StructureNode node, StructureNode latchNode, AbsynStatementEmitter emitter)
   at Decompiler.Structure.IfConditional.GenerateCode(AbsynCodeGenerator codeGen, StructureNode node, StructureNode latchNode, AbsynStatementEmitter emitter)
   at Decompiler.Structure.AbsynCodeGenerator.GenerateCode(StructureNode node, StructureNode latchNode, AbsynStatementEmitter emitter)
   at Decompiler.Structure.AbsynCodeGenerator.GenerateCode(StructureNode node, StructureNode latchNode, AbsynStatementEmitter emitter)
   at Decompiler.Structure.AbsynCodeGenerator.GenerateCode(ProcedureStructure proc, List`1 stms)
   at Decompiler.Structure.StructureAnalysis.GenerateStructuredCode()
   at Decompiler.Structure.StructureAnalysis.Structure()
   at Decompiler.DecompilerDriver.StructureProgram()
rewriting: FlagGroup byte fn00008890(Register word32 d0, Register word32 a0)
rewriting: void fn000088BE(Register word32 d0, Register word32 d1, Register word32 d2, Register word32 a1)
rewriting: FlagGroup byte fn000088FC(Register word32 d0, Register word32 d1, Register word32 d3, Register word32 d4, Register word32 a1, Register word32 a6)
rewriting: FlagGroup byte fn0000896C(Register word32 d0, Register word32 d3, Register word32 a0, Register word32 a1, Register out ptr32 a0Out)
rewriting: FlagGroup byte fn000089C0(Register word32 d2, Register word32 a0)
rewriting: Register word32 fn000089F0(Register word32 d0, Register word32 d1, Register word32 d5, Register word32 d6, Register out ptr32 d6Out, Register out ptr32 d7Out, Register out ptr32 a1Out)
rewriting: FlagGroup byte fn00008A1C(Register word32 d0, Register word32 d1, Register word32 d4, Register word32 d5, Register word32 d6, Register word32 a6, Register out ptr32 d0Out, Register out ptr32 d1Out, Register out ptr32 d5Out, Register out ptr32 d6Out, Register out ptr32 a6Out)
rewriting: FlagGroup byte fn00008A8C(Register word32 d0, Register word32 d4, Register word32 d5, Register word32 d6, Register word32 a0, Register word32 a6, Register out ptr32 d4Out, Register out ptr32 d5Out, Register out ptr32 d6Out, Register out ptr32 a0Out, Register out ptr32 a6Out)
rewriting: Register word32 fn00008B7A(Register word32 d0, Register word32 d4, Register word32 d5, Register word32 d6, Register word32 d7, Register word32 a6, Register out ptr32 d3Out, Register out ptr32 d4Out, Register out ptr32 d5Out, Register out ptr32 d6Out, Register out ptr32 d7Out, Register out ptr32 a0Out, Register out ptr32 a6Out)
rewriting: FlagGroup byte fn00008BA0(Register word32 d0, Register word32 d1)
rewriting: FlagGroup byte fn00008BBE(Register word32 d1, Register word32 a6)
rewriting: Register word32 fn00008C32(Register word32 d0, Register word32 d1, Register word32 d2, Register word32 d6, Register word32 a0, Register word32 a6, Register out ptr32 a6Out)
fn00008C32: error: An error occurred while rewriting procedure to high-level language.
    Unable to cast object of type 'Decompiler.Core.Code.ReturnInstruction' to type 'Decompiler.Core.Code.Branch'.
       at Decompiler.Structure.AbsynCodeGenerator.BranchCondition(StructureNode node)
   at Decompiler.Structure.IfConditional.GenerateCode(AbsynCodeGenerator codeGen, StructureNode node, StructureNode latchNode, AbsynStatementEmitter emitter)
   at Decompiler.Structure.AbsynCodeGenerator.GenerateCode(StructureNode node, StructureNode latchNode, AbsynStatementEmitter emitter)
   at Decompiler.Structure.IfConditional.GenerateCode(AbsynCodeGenerator codeGen, StructureNode node, StructureNode latchNode, AbsynStatementEmitter emitter)
   at Decompiler.Structure.AbsynCodeGenerator.GenerateCode(StructureNode node, StructureNode latchNode, AbsynStatementEmitter emitter)
   at Decompiler.Structure.AbsynCodeGenerator.GenerateCode(StructureNode node, StructureNode latchNode, AbsynStatementEmitter emitter)
   at Decompiler.Structure.AbsynCodeGenerator.GenerateCode(ProcedureStructure proc, List`1 stms)
   at Decompiler.Structure.StructureAnalysis.GenerateStructuredCode()
   at Decompiler.Structure.StructureAnalysis.Structure()
   at Decompiler.DecompilerDriver.StructureProgram()
rewriting: Register word32 fn00008D4E(Register word32 d2, Register word32 d6, Register word32 a6, Register out ptr32 d1Out, Register out ptr32 d2Out, Register out ptr32 d4Out, Register out ptr32 d5Out, Register out ptr32 d6Out, Register out ptr32 a6Out)
rewriting: void fn00008D82(Register word32 d2, Register word32 d6, Register word32 d7, Register word32 a6)
rewriting: void fn00008DBE()
rewriting: void fn00008DFA(Register word32 d2, Register word32 d5, Register word32 d6, Register word32 a6)
rewriting: void fn00008E9A()
rewriting: void fn00008EF4(Register word32 d0, Register word32 d2, Register word32 d5, Register word32 d6, Register word32 a6)
rewriting: Register word32 fn000090B6(Register word32 d0, Register word32 d2, Register word32 d6, Register word32 d7, Register word32 a0)
rewriting: Register word32 fn000090EA(Register word32 d0, Register word32 d2, Register word32 d6, Register word32 d7, Register word32 a0, Stack word32 dwArg00, Stack word32 dwArg04, Stack word32 dwArg08, Stack word32 dwArg0C, Stack word32 dwArg10, Stack word32 dwArg14)
fn000090EA: error: An error occurred while rewriting procedure to high-level language.
    Unable to cast object of type 'Decompiler.Core.Code.ReturnInstruction' to type 'Decompiler.Core.Code.Branch'.
       at Decompiler.Structure.AbsynCodeGenerator.BranchCondition(StructureNode node)
   at Decompiler.Structure.IfConditional.GenerateCode(AbsynCodeGenerator codeGen, StructureNode node, StructureNode latchNode, AbsynStatementEmitter emitter)
   at Decompiler.Structure.AbsynCodeGenerator.GenerateCode(StructureNode node, StructureNode latchNode, AbsynStatementEmitter emitter)
   at Decompiler.Structure.IfConditional.GenerateCode(AbsynCodeGenerator codeGen, StructureNode node, StructureNode latchNode, AbsynStatementEmitter emitter)
   at Decompiler.Structure.AbsynCodeGenerator.GenerateCode(StructureNode node, StructureNode latchNode, AbsynStatementEmitter emitter)
   at Decompiler.Structure.AbsynCodeGenerator.GenerateCode(StructureNode node, StructureNode latchNode, AbsynStatementEmitter emitter)
   at Decompiler.Structure.AbsynCodeGenerator.GenerateCode(ProcedureStructure proc, List`1 stms)
   at Decompiler.Structure.StructureAnalysis.GenerateStructuredCode()
   at Decompiler.Structure.StructureAnalysis.Structure()
   at Decompiler.DecompilerDriver.StructureProgram()
rewriting: Register word32 fn0000916E(Register word32 d0, Register word32 d1, Register word32 d2, Register word32 d4, Register word32 d6, Register word32 a0, Register out ptr32 d6Out, Register out ptr32 a1Out)
rewriting: Register word32 fn00009236(Register word32 d0, Register word32 d4, Register word32 a2)
rewriting: Register word32 fn00009266(Register word32 d0, Register word32 d1, Register word32 d6, Register word32 d7)
rewriting: Register word32 fn0000931A(Register word32 d0)
rewriting: void fn00009326(Register word32 d0, Register word32 d1)
rewriting: void fn00009344(Register word32 d1, Register word32 a6)
rewriting: Register word32 fn000093C2(Register word32 d2, Register word32 a0, Register out ptr32 a0Out)
rewriting: void fn00009440(Register word32 d0, Register word32 d6, Register word32 d7, Register word32 a0)
rewriting: void fn0000949A()
rewriting: Register word32 fn000094E0(Register word32 d0, Register word32 d1, Register word32 d6, Register word32 d7)
rewriting: void fn000095F6(Register word32 d0, Register word32 d1, Register word32 a0)
rewriting: Register word32 fn0000963E(Register word32 d0, Register word32 a0, Register word32 a1, Stack word32 dwArg00, Stack word32 dwArg04, Stack word32 dwArg08, Stack word32 dwArg0C, Stack word32 dwArg10, Register out ptr32 d1Out, Register out ptr32 a1Out, Register out ptr32 a2Out)
fn0000963E: error: An error occurred while rewriting procedure to high-level language.
    Unable to cast object of type 'Decompiler.Core.Code.ReturnInstruction' to type 'Decompiler.Core.Code.Branch'.
       at Decompiler.Structure.AbsynCodeGenerator.BranchCondition(StructureNode node)
   at Decompiler.Structure.IfConditional.GenerateCode(AbsynCodeGenerator codeGen, StructureNode node, StructureNode latchNode, AbsynStatementEmitter emitter)
   at Decompiler.Structure.AbsynCodeGenerator.GenerateCode(StructureNode node, StructureNode latchNode, AbsynStatementEmitter emitter)
   at Decompiler.Structure.IfConditional.GenerateCode(AbsynCodeGenerator codeGen, StructureNode node, StructureNode latchNode, AbsynStatementEmitter emitter)
   at Decompiler.Structure.AbsynCodeGenerator.GenerateCode(StructureNode node, StructureNode latchNode, AbsynStatementEmitter emitter)
   at Decompiler.Structure.AbsynCodeGenerator.GenerateCode(StructureNode node, StructureNode latchNode, AbsynStatementEmitter emitter)
   at Decompiler.Structure.AbsynCodeGenerator.GenerateCode(ProcedureStructure proc, List`1 stms)
   at Decompiler.Structure.StructureAnalysis.GenerateStructuredCode()
   at Decompiler.Structure.StructureAnalysis.Structure()
   at Decompiler.DecompilerDriver.StructureProgram()
rewriting: Register word32 fn000096BC(Register out ptr32 d1Out, Register out ptr32 a6Out)
rewriting: void fn0000982E(Register word32 d0)
rewriting: void fn0000983E(Register word32 d0, Register word32 d1, Register word32 d2)
rewriting: Register word32 fn00009906(Register word32 d0, Register word32 d7, Register out ptr32 d2Out, Register out ptr32 d7Out)
rewriting: void fn00009954(Register word32 d0, Register word32 a0)
rewriting: void fn000099C8()
rewriting: void fn00009A00(Register word32 a0)
rewriting: void fn00009A6A(Register word32 d0, Register word32 d1, Register word32 d2, Register word32 a0)
rewriting: void fn00009E8A(Register word32 d0, Register word32 d1, Register word32 d2, Register word32 d4, Register word32 d5, Register word32 d6, Register word32 a6)
rewriting: void fn00009ED6()
rewriting: Register word32 fn0000A26A(Register word32 d0, Register word32 a0, Register word32 a1)
rewriting: Register word32 fn0000B818(Register word32 d0, Register word32 d1, Register word32 d2, Register word32 d3, Register word32 d4, Register word32 d5, Register word32 d6, Register word32 a6, Register out ptr32 a0Out, Register out ptr32 a4Out, Register out ptr32 a6Out)
rewriting: Register word32 fn0000B88A(Register word32 d0, Register word32 d1, Register word32 d2, Register word32 d3, Register word32 d4, Register word32 d5, Register word32 d6, Register word32 a6, Register out ptr32 a6Out)
rewriting: Register word32 fn0000B912(Register word32 d0, Register word32 d1, Register word32 d2, Register word32 d3, Register word32 d4, Register word32 d5, Register word32 d6, Register word32 a6, Register out ptr32 d6Out, Register out ptr32 a6Out)
rewriting: Register word32 fn0000C028(Register word32 d2, Register word32 d3, Register word32 d5, Register word32 d6, Register word32 a3, Register word32 a6, Register out ptr32 d5Out, Register out ptr32 d6Out, Register out ptr32 a6Out)
rewriting: Register word32 fn0000C5DC(Register word32 d0, Register word32 d3, Register word32 a0, Register word32 a1, Register word32 a6, Register out ptr32 a6Out)
rewriting: Register word32 fn0000C69E(Register word32 d0, Register word32 d7)
rewriting: Register word32 fn0000FEF8(Register word32 d0, Register word32 d7, Register word32 a0, Register word32 a6)
rewriting: Register word32 fn0000FF16(Register word32 d1)
rewriting: Register word32 fn0000FF2A(Register word32 d1)
rewriting: void fn00010064()
rewriting: void fn00010066(Register word32 d7, Register word32 a0, Register word32 a6)
from_aminet/albion_demo/demo/m68k_amiga/subject.exe: error: An internal error occurred while decompiling.
    Unable to cast object of type 'Decompiler.Core.Types.StructureType' to type 'Decompiler.Core.Types.EquivalenceClass'.
       at Decompiler.Core.Output.GlobalDataWriter.WriteGlobals(Formatter formatter)
   at Decompiler.DecompilerDriver.WriteGlobals(Program program, TextWriter w)
   at Decompiler.DecompilerDriver.<>c__DisplayClass1b.<WriteDecompilerProducts>b__17(TextWriter w)
   at Decompiler.CmdLine.CmdLineHost.WriteGlobals(Program program, Action`1 writer)
   at Decompiler.DecompilerDriver.WriteDecompilerProducts()
   at Decompiler.DecompilerDriver.StructureProgram()
   at Decompiler.DecompilerDriver.Decompile(String filename)
