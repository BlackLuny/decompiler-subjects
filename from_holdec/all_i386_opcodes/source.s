
        .file   "a.c"
        .text

    
.globl aaa_flags_clear
         .type   aaa_flags_clear, @function
aaa_flags_clear:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%al
  mov 4100,%ah
  .byte 0x37
  mov %al,8192
  mov %ah,8196
  jnc .L0_c$
  movb $0x1,8448
.L0_c$: nop
  jnz .L0_z$
  movb $0x2,8449
.L0_z$: nop
  jns .L0_s$
  movb $0x3,8450
.L0_s$: nop
  jnp .L0_p$
  movb $0x4,8451
.L0_p$: nop
  jno .L0_o$
  movb $0x5,8452
.L0_o$: nop

    ret
         .size   aaa_flags_clear, .-aaa_flags_clear

    
.globl aaa_flags_clear_constant
         .type   aaa_flags_clear_constant, @function
aaa_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax
  mov $1,%al
  mov $2,%ah
  .byte 0x37
  mov %al,8192
  mov %ah,8196
  jnc .L1_c$
  movb $0x1,8448
.L1_c$: nop
  jnz .L1_z$
  movb $0x2,8449
.L1_z$: nop
  jns .L1_s$
  movb $0x3,8450
.L1_s$: nop
  jnp .L1_p$
  movb $0x4,8451
.L1_p$: nop
  jno .L1_o$
  movb $0x5,8452
.L1_o$: nop

    ret
         .size   aaa_flags_clear_constant, .-aaa_flags_clear_constant

    
.globl aaa_flags_clear_allregs
         .type   aaa_flags_clear_allregs, @function
aaa_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x37
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   aaa_flags_clear_allregs, .-aaa_flags_clear_allregs

    
.globl aaa_flags_set1
         .type   aaa_flags_set1, @function
aaa_flags_set1:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%al
  mov 4100,%ah
  .byte 0x37
  mov %al,8192
  mov %ah,8196
  jnc .L2_c$
  movb $0x1,8448
.L2_c$: nop
  jnz .L2_z$
  movb $0x2,8449
.L2_z$: nop
  jns .L2_s$
  movb $0x3,8450
.L2_s$: nop
  jnp .L2_p$
  movb $0x4,8451
.L2_p$: nop
  jno .L2_o$
  movb $0x5,8452
.L2_o$: nop

    ret
         .size   aaa_flags_set1, .-aaa_flags_set1

    
.globl aaa_flags_set1_constant
         .type   aaa_flags_set1_constant, @function
aaa_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax
  mov $1,%al
  mov $2,%ah
  .byte 0x37
  mov %al,8192
  mov %ah,8196
  jnc .L3_c$
  movb $0x1,8448
.L3_c$: nop
  jnz .L3_z$
  movb $0x2,8449
.L3_z$: nop
  jns .L3_s$
  movb $0x3,8450
.L3_s$: nop
  jnp .L3_p$
  movb $0x4,8451
.L3_p$: nop
  jno .L3_o$
  movb $0x5,8452
.L3_o$: nop

    ret
         .size   aaa_flags_set1_constant, .-aaa_flags_set1_constant

    
.globl aaa_flags_set1_allregs
         .type   aaa_flags_set1_allregs, @function
aaa_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x37
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   aaa_flags_set1_allregs, .-aaa_flags_set1_allregs

    
.globl aaa_flags_set2
         .type   aaa_flags_set2, @function
aaa_flags_set2:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%al
  mov 4100,%ah
  .byte 0x37
  mov %al,8192
  mov %ah,8196
  jnc .L4_c$
  movb $0x1,8448
.L4_c$: nop
  jnz .L4_z$
  movb $0x2,8449
.L4_z$: nop
  jns .L4_s$
  movb $0x3,8450
.L4_s$: nop
  jnp .L4_p$
  movb $0x4,8451
.L4_p$: nop
  jno .L4_o$
  movb $0x5,8452
.L4_o$: nop

    ret
         .size   aaa_flags_set2, .-aaa_flags_set2

    
.globl aaa_flags_set2_constant
         .type   aaa_flags_set2_constant, @function
aaa_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax
  mov $1,%al
  mov $2,%ah
  .byte 0x37
  mov %al,8192
  mov %ah,8196
  jnc .L5_c$
  movb $0x1,8448
.L5_c$: nop
  jnz .L5_z$
  movb $0x2,8449
.L5_z$: nop
  jns .L5_s$
  movb $0x3,8450
.L5_s$: nop
  jnp .L5_p$
  movb $0x4,8451
.L5_p$: nop
  jno .L5_o$
  movb $0x5,8452
.L5_o$: nop

    ret
         .size   aaa_flags_set2_constant, .-aaa_flags_set2_constant

    
.globl aaa_flags_set2_allregs
         .type   aaa_flags_set2_allregs, @function
aaa_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x37
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   aaa_flags_set2_allregs, .-aaa_flags_set2_allregs

    
.globl aaa_flags_cmp
         .type   aaa_flags_cmp, @function
aaa_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%al
  mov 4100,%ah
  .byte 0x37
  mov %al,8192
  mov %ah,8196
  jnc .L6_c$
  movb $0x1,8448
.L6_c$: nop
  jnz .L6_z$
  movb $0x2,8449
.L6_z$: nop
  jns .L6_s$
  movb $0x3,8450
.L6_s$: nop
  jnp .L6_p$
  movb $0x4,8451
.L6_p$: nop
  jno .L6_o$
  movb $0x5,8452
.L6_o$: nop

    ret
         .size   aaa_flags_cmp, .-aaa_flags_cmp

    
.globl aaa_flags_cmp_constant
         .type   aaa_flags_cmp_constant, @function
aaa_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov $1,%al
  mov $2,%ah
  .byte 0x37
  mov %al,8192
  mov %ah,8196
  jnc .L7_c$
  movb $0x1,8448
.L7_c$: nop
  jnz .L7_z$
  movb $0x2,8449
.L7_z$: nop
  jns .L7_s$
  movb $0x3,8450
.L7_s$: nop
  jnp .L7_p$
  movb $0x4,8451
.L7_p$: nop
  jno .L7_o$
  movb $0x5,8452
.L7_o$: nop

    ret
         .size   aaa_flags_cmp_constant, .-aaa_flags_cmp_constant

    
.globl aaa_flags_cmp_allregs
         .type   aaa_flags_cmp_allregs, @function
aaa_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x37
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   aaa_flags_cmp_allregs, .-aaa_flags_cmp_allregs

    
.globl aad1
         .type   aad1, @function
aad1:
      

  mov 4096,%al
  mov 4100,%ah
  .byte 0xd5,0x0a
  mov %al,8192
  mov %ah,8196
  jnc .L8_c$
  movb $0x1,8448
.L8_c$: nop
  jnz .L8_z$
  movb $0x2,8449
.L8_z$: nop
  jns .L8_s$
  movb $0x3,8450
.L8_s$: nop
  jnp .L8_p$
  movb $0x4,8451
.L8_p$: nop
  jno .L8_o$
  movb $0x5,8452
.L8_o$: nop

    ret
         .size   aad1, .-aad1

    
.globl aad1_constant
         .type   aad1_constant, @function
aad1_constant:
      

  mov $1,%al
  mov $2,%ah
  .byte 0xd5,0x0a
  mov %al,8192
  mov %ah,8196
  jnc .L9_c$
  movb $0x1,8448
.L9_c$: nop
  jnz .L9_z$
  movb $0x2,8449
.L9_z$: nop
  jns .L9_s$
  movb $0x3,8450
.L9_s$: nop
  jnp .L9_p$
  movb $0x4,8451
.L9_p$: nop
  jno .L9_o$
  movb $0x5,8452
.L9_o$: nop

    ret
         .size   aad1_constant, .-aad1_constant

    
.globl aad1_allregs
         .type   aad1_allregs, @function
aad1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xd5,0x0a
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   aad1_allregs, .-aad1_allregs

    
.globl aad2
         .type   aad2, @function
aad2:
      

  mov 4096,%al
  mov 4100,%ah
  .byte 0xd5,0x0f
  mov %al,8192
  mov %ah,8196
  jnc .L10_c$
  movb $0x1,8448
.L10_c$: nop
  jnz .L10_z$
  movb $0x2,8449
.L10_z$: nop
  jns .L10_s$
  movb $0x3,8450
.L10_s$: nop
  jnp .L10_p$
  movb $0x4,8451
.L10_p$: nop
  jno .L10_o$
  movb $0x5,8452
.L10_o$: nop

    ret
         .size   aad2, .-aad2

    
.globl aad2_constant
         .type   aad2_constant, @function
aad2_constant:
      

  mov $1,%al
  mov $2,%ah
  .byte 0xd5,0x0f
  mov %al,8192
  mov %ah,8196
  jnc .L11_c$
  movb $0x1,8448
.L11_c$: nop
  jnz .L11_z$
  movb $0x2,8449
.L11_z$: nop
  jns .L11_s$
  movb $0x3,8450
.L11_s$: nop
  jnp .L11_p$
  movb $0x4,8451
.L11_p$: nop
  jno .L11_o$
  movb $0x5,8452
.L11_o$: nop

    ret
         .size   aad2_constant, .-aad2_constant

    
.globl aad2_allregs
         .type   aad2_allregs, @function
aad2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xd5,0x0f
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   aad2_allregs, .-aad2_allregs

    
.globl aam1
         .type   aam1, @function
aam1:
      

  mov 4096,%al
  .byte 0xd4,0x0a
  mov %al,8192
  mov %ah,8196
  jnc .L12_c$
  movb $0x1,8448
.L12_c$: nop
  jnz .L12_z$
  movb $0x2,8449
.L12_z$: nop
  jns .L12_s$
  movb $0x3,8450
.L12_s$: nop
  jnp .L12_p$
  movb $0x4,8451
.L12_p$: nop
  jno .L12_o$
  movb $0x5,8452
.L12_o$: nop

    ret
         .size   aam1, .-aam1

    
.globl aam1_constant
         .type   aam1_constant, @function
aam1_constant:
      

  mov $1,%al
  .byte 0xd4,0x0a
  mov %al,8192
  mov %ah,8196
  jnc .L13_c$
  movb $0x1,8448
.L13_c$: nop
  jnz .L13_z$
  movb $0x2,8449
.L13_z$: nop
  jns .L13_s$
  movb $0x3,8450
.L13_s$: nop
  jnp .L13_p$
  movb $0x4,8451
.L13_p$: nop
  jno .L13_o$
  movb $0x5,8452
.L13_o$: nop

    ret
         .size   aam1_constant, .-aam1_constant

    
.globl aam1_allregs
         .type   aam1_allregs, @function
aam1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xd4,0x0a
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   aam1_allregs, .-aam1_allregs

    
.globl aam2
         .type   aam2, @function
aam2:
      

  mov 4096,%al
  .byte 0xd4,0x0f
  mov %al,8192
  mov %ah,8196
  jnc .L14_c$
  movb $0x1,8448
.L14_c$: nop
  jnz .L14_z$
  movb $0x2,8449
.L14_z$: nop
  jns .L14_s$
  movb $0x3,8450
.L14_s$: nop
  jnp .L14_p$
  movb $0x4,8451
.L14_p$: nop
  jno .L14_o$
  movb $0x5,8452
.L14_o$: nop

    ret
         .size   aam2, .-aam2

    
.globl aam2_constant
         .type   aam2_constant, @function
aam2_constant:
      

  mov $1,%al
  .byte 0xd4,0x0f
  mov %al,8192
  mov %ah,8196
  jnc .L15_c$
  movb $0x1,8448
.L15_c$: nop
  jnz .L15_z$
  movb $0x2,8449
.L15_z$: nop
  jns .L15_s$
  movb $0x3,8450
.L15_s$: nop
  jnp .L15_p$
  movb $0x4,8451
.L15_p$: nop
  jno .L15_o$
  movb $0x5,8452
.L15_o$: nop

    ret
         .size   aam2_constant, .-aam2_constant

    
.globl aam2_allregs
         .type   aam2_allregs, @function
aam2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xd4,0x0f
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   aam2_allregs, .-aam2_allregs

    
.globl aas_flags_clear
         .type   aas_flags_clear, @function
aas_flags_clear:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%al
  mov 4100,%ah
  .byte 0x3f
  mov %al,8192
  mov %ah,8196
  jnc .L16_c$
  movb $0x1,8448
.L16_c$: nop
  jnz .L16_z$
  movb $0x2,8449
.L16_z$: nop
  jns .L16_s$
  movb $0x3,8450
.L16_s$: nop
  jnp .L16_p$
  movb $0x4,8451
.L16_p$: nop
  jno .L16_o$
  movb $0x5,8452
.L16_o$: nop

    ret
         .size   aas_flags_clear, .-aas_flags_clear

    
.globl aas_flags_clear_constant
         .type   aas_flags_clear_constant, @function
aas_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax
  mov $1,%al
  mov $2,%ah
  .byte 0x3f
  mov %al,8192
  mov %ah,8196
  jnc .L17_c$
  movb $0x1,8448
.L17_c$: nop
  jnz .L17_z$
  movb $0x2,8449
.L17_z$: nop
  jns .L17_s$
  movb $0x3,8450
.L17_s$: nop
  jnp .L17_p$
  movb $0x4,8451
.L17_p$: nop
  jno .L17_o$
  movb $0x5,8452
.L17_o$: nop

    ret
         .size   aas_flags_clear_constant, .-aas_flags_clear_constant

    
.globl aas_flags_clear_allregs
         .type   aas_flags_clear_allregs, @function
aas_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x3f
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   aas_flags_clear_allregs, .-aas_flags_clear_allregs

    
.globl aas_flags_set1
         .type   aas_flags_set1, @function
aas_flags_set1:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%al
  mov 4100,%ah
  .byte 0x3f
  mov %al,8192
  mov %ah,8196
  jnc .L18_c$
  movb $0x1,8448
.L18_c$: nop
  jnz .L18_z$
  movb $0x2,8449
.L18_z$: nop
  jns .L18_s$
  movb $0x3,8450
.L18_s$: nop
  jnp .L18_p$
  movb $0x4,8451
.L18_p$: nop
  jno .L18_o$
  movb $0x5,8452
.L18_o$: nop

    ret
         .size   aas_flags_set1, .-aas_flags_set1

    
.globl aas_flags_set1_constant
         .type   aas_flags_set1_constant, @function
aas_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax
  mov $1,%al
  mov $2,%ah
  .byte 0x3f
  mov %al,8192
  mov %ah,8196
  jnc .L19_c$
  movb $0x1,8448
.L19_c$: nop
  jnz .L19_z$
  movb $0x2,8449
.L19_z$: nop
  jns .L19_s$
  movb $0x3,8450
.L19_s$: nop
  jnp .L19_p$
  movb $0x4,8451
.L19_p$: nop
  jno .L19_o$
  movb $0x5,8452
.L19_o$: nop

    ret
         .size   aas_flags_set1_constant, .-aas_flags_set1_constant

    
.globl aas_flags_set1_allregs
         .type   aas_flags_set1_allregs, @function
aas_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x3f
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   aas_flags_set1_allregs, .-aas_flags_set1_allregs

    
.globl aas_flags_set2
         .type   aas_flags_set2, @function
aas_flags_set2:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%al
  mov 4100,%ah
  .byte 0x3f
  mov %al,8192
  mov %ah,8196
  jnc .L20_c$
  movb $0x1,8448
.L20_c$: nop
  jnz .L20_z$
  movb $0x2,8449
.L20_z$: nop
  jns .L20_s$
  movb $0x3,8450
.L20_s$: nop
  jnp .L20_p$
  movb $0x4,8451
.L20_p$: nop
  jno .L20_o$
  movb $0x5,8452
.L20_o$: nop

    ret
         .size   aas_flags_set2, .-aas_flags_set2

    
.globl aas_flags_set2_constant
         .type   aas_flags_set2_constant, @function
aas_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax
  mov $1,%al
  mov $2,%ah
  .byte 0x3f
  mov %al,8192
  mov %ah,8196
  jnc .L21_c$
  movb $0x1,8448
.L21_c$: nop
  jnz .L21_z$
  movb $0x2,8449
.L21_z$: nop
  jns .L21_s$
  movb $0x3,8450
.L21_s$: nop
  jnp .L21_p$
  movb $0x4,8451
.L21_p$: nop
  jno .L21_o$
  movb $0x5,8452
.L21_o$: nop

    ret
         .size   aas_flags_set2_constant, .-aas_flags_set2_constant

    
.globl aas_flags_set2_allregs
         .type   aas_flags_set2_allregs, @function
aas_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x3f
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   aas_flags_set2_allregs, .-aas_flags_set2_allregs

    
.globl aas_flags_cmp
         .type   aas_flags_cmp, @function
aas_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%al
  mov 4100,%ah
  .byte 0x3f
  mov %al,8192
  mov %ah,8196
  jnc .L22_c$
  movb $0x1,8448
.L22_c$: nop
  jnz .L22_z$
  movb $0x2,8449
.L22_z$: nop
  jns .L22_s$
  movb $0x3,8450
.L22_s$: nop
  jnp .L22_p$
  movb $0x4,8451
.L22_p$: nop
  jno .L22_o$
  movb $0x5,8452
.L22_o$: nop

    ret
         .size   aas_flags_cmp, .-aas_flags_cmp

    
.globl aas_flags_cmp_constant
         .type   aas_flags_cmp_constant, @function
aas_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov $1,%al
  mov $2,%ah
  .byte 0x3f
  mov %al,8192
  mov %ah,8196
  jnc .L23_c$
  movb $0x1,8448
.L23_c$: nop
  jnz .L23_z$
  movb $0x2,8449
.L23_z$: nop
  jns .L23_s$
  movb $0x3,8450
.L23_s$: nop
  jnp .L23_p$
  movb $0x4,8451
.L23_p$: nop
  jno .L23_o$
  movb $0x5,8452
.L23_o$: nop

    ret
         .size   aas_flags_cmp_constant, .-aas_flags_cmp_constant

    
.globl aas_flags_cmp_allregs
         .type   aas_flags_cmp_allregs, @function
aas_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x3f
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   aas_flags_cmp_allregs, .-aas_flags_cmp_allregs

    
.globl adc1_flags_clear
         .type   adc1_flags_clear, @function
adc1_flags_clear:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%al
  adc $0x10,%al
  mov %al,8192
  jnc .L24_c$
  movb $0x1,8448
.L24_c$: nop
  jnz .L24_z$
  movb $0x2,8449
.L24_z$: nop
  jns .L24_s$
  movb $0x3,8450
.L24_s$: nop
  jnp .L24_p$
  movb $0x4,8451
.L24_p$: nop
  jno .L24_o$
  movb $0x5,8452
.L24_o$: nop

    ret
         .size   adc1_flags_clear, .-adc1_flags_clear

    
.globl adc1_flags_clear_constant
         .type   adc1_flags_clear_constant, @function
adc1_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax
  mov $1,%al
  adc $0x10,%al
  mov %al,8192
  jnc .L25_c$
  movb $0x1,8448
.L25_c$: nop
  jnz .L25_z$
  movb $0x2,8449
.L25_z$: nop
  jns .L25_s$
  movb $0x3,8450
.L25_s$: nop
  jnp .L25_p$
  movb $0x4,8451
.L25_p$: nop
  jno .L25_o$
  movb $0x5,8452
.L25_o$: nop

    ret
         .size   adc1_flags_clear_constant, .-adc1_flags_clear_constant

    
.globl adc1_flags_clear_allregs
         .type   adc1_flags_clear_allregs, @function
adc1_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  adc $0x10,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   adc1_flags_clear_allregs, .-adc1_flags_clear_allregs

    
.globl adc1_flags_set1
         .type   adc1_flags_set1, @function
adc1_flags_set1:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%al
  adc $0x10,%al
  mov %al,8192
  jnc .L26_c$
  movb $0x1,8448
.L26_c$: nop
  jnz .L26_z$
  movb $0x2,8449
.L26_z$: nop
  jns .L26_s$
  movb $0x3,8450
.L26_s$: nop
  jnp .L26_p$
  movb $0x4,8451
.L26_p$: nop
  jno .L26_o$
  movb $0x5,8452
.L26_o$: nop

    ret
         .size   adc1_flags_set1, .-adc1_flags_set1

    
.globl adc1_flags_set1_constant
         .type   adc1_flags_set1_constant, @function
adc1_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax
  mov $1,%al
  adc $0x10,%al
  mov %al,8192
  jnc .L27_c$
  movb $0x1,8448
.L27_c$: nop
  jnz .L27_z$
  movb $0x2,8449
.L27_z$: nop
  jns .L27_s$
  movb $0x3,8450
.L27_s$: nop
  jnp .L27_p$
  movb $0x4,8451
.L27_p$: nop
  jno .L27_o$
  movb $0x5,8452
.L27_o$: nop

    ret
         .size   adc1_flags_set1_constant, .-adc1_flags_set1_constant

    
.globl adc1_flags_set1_allregs
         .type   adc1_flags_set1_allregs, @function
adc1_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  adc $0x10,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   adc1_flags_set1_allregs, .-adc1_flags_set1_allregs

    
.globl adc1_flags_set2
         .type   adc1_flags_set2, @function
adc1_flags_set2:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%al
  adc $0x10,%al
  mov %al,8192
  jnc .L28_c$
  movb $0x1,8448
.L28_c$: nop
  jnz .L28_z$
  movb $0x2,8449
.L28_z$: nop
  jns .L28_s$
  movb $0x3,8450
.L28_s$: nop
  jnp .L28_p$
  movb $0x4,8451
.L28_p$: nop
  jno .L28_o$
  movb $0x5,8452
.L28_o$: nop

    ret
         .size   adc1_flags_set2, .-adc1_flags_set2

    
.globl adc1_flags_set2_constant
         .type   adc1_flags_set2_constant, @function
adc1_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax
  mov $1,%al
  adc $0x10,%al
  mov %al,8192
  jnc .L29_c$
  movb $0x1,8448
.L29_c$: nop
  jnz .L29_z$
  movb $0x2,8449
.L29_z$: nop
  jns .L29_s$
  movb $0x3,8450
.L29_s$: nop
  jnp .L29_p$
  movb $0x4,8451
.L29_p$: nop
  jno .L29_o$
  movb $0x5,8452
.L29_o$: nop

    ret
         .size   adc1_flags_set2_constant, .-adc1_flags_set2_constant

    
.globl adc1_flags_set2_allregs
         .type   adc1_flags_set2_allregs, @function
adc1_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  adc $0x10,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   adc1_flags_set2_allregs, .-adc1_flags_set2_allregs

    
.globl adc1_flags_cmp
         .type   adc1_flags_cmp, @function
adc1_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%al
  adc $0x10,%al
  mov %al,8192
  jnc .L30_c$
  movb $0x1,8448
.L30_c$: nop
  jnz .L30_z$
  movb $0x2,8449
.L30_z$: nop
  jns .L30_s$
  movb $0x3,8450
.L30_s$: nop
  jnp .L30_p$
  movb $0x4,8451
.L30_p$: nop
  jno .L30_o$
  movb $0x5,8452
.L30_o$: nop

    ret
         .size   adc1_flags_cmp, .-adc1_flags_cmp

    
.globl adc1_flags_cmp_constant
         .type   adc1_flags_cmp_constant, @function
adc1_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov $1,%al
  adc $0x10,%al
  mov %al,8192
  jnc .L31_c$
  movb $0x1,8448
.L31_c$: nop
  jnz .L31_z$
  movb $0x2,8449
.L31_z$: nop
  jns .L31_s$
  movb $0x3,8450
.L31_s$: nop
  jnp .L31_p$
  movb $0x4,8451
.L31_p$: nop
  jno .L31_o$
  movb $0x5,8452
.L31_o$: nop

    ret
         .size   adc1_flags_cmp_constant, .-adc1_flags_cmp_constant

    
.globl adc1_flags_cmp_allregs
         .type   adc1_flags_cmp_allregs, @function
adc1_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  adc $0x10,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   adc1_flags_cmp_allregs, .-adc1_flags_cmp_allregs

    
.globl adc2_flags_clear
         .type   adc2_flags_clear, @function
adc2_flags_clear:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%ax
  adc $0x10,%ax
  mov %ax,8192
  jnc .L32_c$
  movb $0x1,8448
.L32_c$: nop
  jnz .L32_z$
  movb $0x2,8449
.L32_z$: nop
  jns .L32_s$
  movb $0x3,8450
.L32_s$: nop
  jnp .L32_p$
  movb $0x4,8451
.L32_p$: nop
  jno .L32_o$
  movb $0x5,8452
.L32_o$: nop

    ret
         .size   adc2_flags_clear, .-adc2_flags_clear

    
.globl adc2_flags_clear_constant
         .type   adc2_flags_clear_constant, @function
adc2_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax
  mov $1,%ax
  adc $0x10,%ax
  mov %ax,8192
  jnc .L33_c$
  movb $0x1,8448
.L33_c$: nop
  jnz .L33_z$
  movb $0x2,8449
.L33_z$: nop
  jns .L33_s$
  movb $0x3,8450
.L33_s$: nop
  jnp .L33_p$
  movb $0x4,8451
.L33_p$: nop
  jno .L33_o$
  movb $0x5,8452
.L33_o$: nop

    ret
         .size   adc2_flags_clear_constant, .-adc2_flags_clear_constant

    
.globl adc2_flags_clear_allregs
         .type   adc2_flags_clear_allregs, @function
adc2_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  adc $0x10,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   adc2_flags_clear_allregs, .-adc2_flags_clear_allregs

    
.globl adc2_flags_set1
         .type   adc2_flags_set1, @function
adc2_flags_set1:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%ax
  adc $0x10,%ax
  mov %ax,8192
  jnc .L34_c$
  movb $0x1,8448
.L34_c$: nop
  jnz .L34_z$
  movb $0x2,8449
.L34_z$: nop
  jns .L34_s$
  movb $0x3,8450
.L34_s$: nop
  jnp .L34_p$
  movb $0x4,8451
.L34_p$: nop
  jno .L34_o$
  movb $0x5,8452
.L34_o$: nop

    ret
         .size   adc2_flags_set1, .-adc2_flags_set1

    
.globl adc2_flags_set1_constant
         .type   adc2_flags_set1_constant, @function
adc2_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax
  mov $1,%ax
  adc $0x10,%ax
  mov %ax,8192
  jnc .L35_c$
  movb $0x1,8448
.L35_c$: nop
  jnz .L35_z$
  movb $0x2,8449
.L35_z$: nop
  jns .L35_s$
  movb $0x3,8450
.L35_s$: nop
  jnp .L35_p$
  movb $0x4,8451
.L35_p$: nop
  jno .L35_o$
  movb $0x5,8452
.L35_o$: nop

    ret
         .size   adc2_flags_set1_constant, .-adc2_flags_set1_constant

    
.globl adc2_flags_set1_allregs
         .type   adc2_flags_set1_allregs, @function
adc2_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  adc $0x10,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   adc2_flags_set1_allregs, .-adc2_flags_set1_allregs

    
.globl adc2_flags_set2
         .type   adc2_flags_set2, @function
adc2_flags_set2:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%ax
  adc $0x10,%ax
  mov %ax,8192
  jnc .L36_c$
  movb $0x1,8448
.L36_c$: nop
  jnz .L36_z$
  movb $0x2,8449
.L36_z$: nop
  jns .L36_s$
  movb $0x3,8450
.L36_s$: nop
  jnp .L36_p$
  movb $0x4,8451
.L36_p$: nop
  jno .L36_o$
  movb $0x5,8452
.L36_o$: nop

    ret
         .size   adc2_flags_set2, .-adc2_flags_set2

    
.globl adc2_flags_set2_constant
         .type   adc2_flags_set2_constant, @function
adc2_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax
  mov $1,%ax
  adc $0x10,%ax
  mov %ax,8192
  jnc .L37_c$
  movb $0x1,8448
.L37_c$: nop
  jnz .L37_z$
  movb $0x2,8449
.L37_z$: nop
  jns .L37_s$
  movb $0x3,8450
.L37_s$: nop
  jnp .L37_p$
  movb $0x4,8451
.L37_p$: nop
  jno .L37_o$
  movb $0x5,8452
.L37_o$: nop

    ret
         .size   adc2_flags_set2_constant, .-adc2_flags_set2_constant

    
.globl adc2_flags_set2_allregs
         .type   adc2_flags_set2_allregs, @function
adc2_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  adc $0x10,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   adc2_flags_set2_allregs, .-adc2_flags_set2_allregs

    
.globl adc2_flags_cmp
         .type   adc2_flags_cmp, @function
adc2_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%ax
  adc $0x10,%ax
  mov %ax,8192
  jnc .L38_c$
  movb $0x1,8448
.L38_c$: nop
  jnz .L38_z$
  movb $0x2,8449
.L38_z$: nop
  jns .L38_s$
  movb $0x3,8450
.L38_s$: nop
  jnp .L38_p$
  movb $0x4,8451
.L38_p$: nop
  jno .L38_o$
  movb $0x5,8452
.L38_o$: nop

    ret
         .size   adc2_flags_cmp, .-adc2_flags_cmp

    
.globl adc2_flags_cmp_constant
         .type   adc2_flags_cmp_constant, @function
adc2_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov $1,%ax
  adc $0x10,%ax
  mov %ax,8192
  jnc .L39_c$
  movb $0x1,8448
.L39_c$: nop
  jnz .L39_z$
  movb $0x2,8449
.L39_z$: nop
  jns .L39_s$
  movb $0x3,8450
.L39_s$: nop
  jnp .L39_p$
  movb $0x4,8451
.L39_p$: nop
  jno .L39_o$
  movb $0x5,8452
.L39_o$: nop

    ret
         .size   adc2_flags_cmp_constant, .-adc2_flags_cmp_constant

    
.globl adc2_flags_cmp_allregs
         .type   adc2_flags_cmp_allregs, @function
adc2_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  adc $0x10,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   adc2_flags_cmp_allregs, .-adc2_flags_cmp_allregs

    
.globl adc2a_flags_clear
         .type   adc2a_flags_clear, @function
adc2a_flags_clear:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%ax
  .byte 0x66,0x15,0x10,0x00
  mov %ax,8192
  jnc .L40_c$
  movb $0x1,8448
.L40_c$: nop
  jnz .L40_z$
  movb $0x2,8449
.L40_z$: nop
  jns .L40_s$
  movb $0x3,8450
.L40_s$: nop
  jnp .L40_p$
  movb $0x4,8451
.L40_p$: nop
  jno .L40_o$
  movb $0x5,8452
.L40_o$: nop

    ret
         .size   adc2a_flags_clear, .-adc2a_flags_clear

    
.globl adc2a_flags_clear_constant
         .type   adc2a_flags_clear_constant, @function
adc2a_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax
  mov $1,%ax
  .byte 0x66,0x15,0x10,0x00
  mov %ax,8192
  jnc .L41_c$
  movb $0x1,8448
.L41_c$: nop
  jnz .L41_z$
  movb $0x2,8449
.L41_z$: nop
  jns .L41_s$
  movb $0x3,8450
.L41_s$: nop
  jnp .L41_p$
  movb $0x4,8451
.L41_p$: nop
  jno .L41_o$
  movb $0x5,8452
.L41_o$: nop

    ret
         .size   adc2a_flags_clear_constant, .-adc2a_flags_clear_constant

    
.globl adc2a_flags_clear_allregs
         .type   adc2a_flags_clear_allregs, @function
adc2a_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0x15,0x10,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   adc2a_flags_clear_allregs, .-adc2a_flags_clear_allregs

    
.globl adc2a_flags_set1
         .type   adc2a_flags_set1, @function
adc2a_flags_set1:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%ax
  .byte 0x66,0x15,0x10,0x00
  mov %ax,8192
  jnc .L42_c$
  movb $0x1,8448
.L42_c$: nop
  jnz .L42_z$
  movb $0x2,8449
.L42_z$: nop
  jns .L42_s$
  movb $0x3,8450
.L42_s$: nop
  jnp .L42_p$
  movb $0x4,8451
.L42_p$: nop
  jno .L42_o$
  movb $0x5,8452
.L42_o$: nop

    ret
         .size   adc2a_flags_set1, .-adc2a_flags_set1

    
.globl adc2a_flags_set1_constant
         .type   adc2a_flags_set1_constant, @function
adc2a_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax
  mov $1,%ax
  .byte 0x66,0x15,0x10,0x00
  mov %ax,8192
  jnc .L43_c$
  movb $0x1,8448
.L43_c$: nop
  jnz .L43_z$
  movb $0x2,8449
.L43_z$: nop
  jns .L43_s$
  movb $0x3,8450
.L43_s$: nop
  jnp .L43_p$
  movb $0x4,8451
.L43_p$: nop
  jno .L43_o$
  movb $0x5,8452
.L43_o$: nop

    ret
         .size   adc2a_flags_set1_constant, .-adc2a_flags_set1_constant

    
.globl adc2a_flags_set1_allregs
         .type   adc2a_flags_set1_allregs, @function
adc2a_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0x15,0x10,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   adc2a_flags_set1_allregs, .-adc2a_flags_set1_allregs

    
.globl adc2a_flags_set2
         .type   adc2a_flags_set2, @function
adc2a_flags_set2:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%ax
  .byte 0x66,0x15,0x10,0x00
  mov %ax,8192
  jnc .L44_c$
  movb $0x1,8448
.L44_c$: nop
  jnz .L44_z$
  movb $0x2,8449
.L44_z$: nop
  jns .L44_s$
  movb $0x3,8450
.L44_s$: nop
  jnp .L44_p$
  movb $0x4,8451
.L44_p$: nop
  jno .L44_o$
  movb $0x5,8452
.L44_o$: nop

    ret
         .size   adc2a_flags_set2, .-adc2a_flags_set2

    
.globl adc2a_flags_set2_constant
         .type   adc2a_flags_set2_constant, @function
adc2a_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax
  mov $1,%ax
  .byte 0x66,0x15,0x10,0x00
  mov %ax,8192
  jnc .L45_c$
  movb $0x1,8448
.L45_c$: nop
  jnz .L45_z$
  movb $0x2,8449
.L45_z$: nop
  jns .L45_s$
  movb $0x3,8450
.L45_s$: nop
  jnp .L45_p$
  movb $0x4,8451
.L45_p$: nop
  jno .L45_o$
  movb $0x5,8452
.L45_o$: nop

    ret
         .size   adc2a_flags_set2_constant, .-adc2a_flags_set2_constant

    
.globl adc2a_flags_set2_allregs
         .type   adc2a_flags_set2_allregs, @function
adc2a_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0x15,0x10,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   adc2a_flags_set2_allregs, .-adc2a_flags_set2_allregs

    
.globl adc2a_flags_cmp
         .type   adc2a_flags_cmp, @function
adc2a_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%ax
  .byte 0x66,0x15,0x10,0x00
  mov %ax,8192
  jnc .L46_c$
  movb $0x1,8448
.L46_c$: nop
  jnz .L46_z$
  movb $0x2,8449
.L46_z$: nop
  jns .L46_s$
  movb $0x3,8450
.L46_s$: nop
  jnp .L46_p$
  movb $0x4,8451
.L46_p$: nop
  jno .L46_o$
  movb $0x5,8452
.L46_o$: nop

    ret
         .size   adc2a_flags_cmp, .-adc2a_flags_cmp

    
.globl adc2a_flags_cmp_constant
         .type   adc2a_flags_cmp_constant, @function
adc2a_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov $1,%ax
  .byte 0x66,0x15,0x10,0x00
  mov %ax,8192
  jnc .L47_c$
  movb $0x1,8448
.L47_c$: nop
  jnz .L47_z$
  movb $0x2,8449
.L47_z$: nop
  jns .L47_s$
  movb $0x3,8450
.L47_s$: nop
  jnp .L47_p$
  movb $0x4,8451
.L47_p$: nop
  jno .L47_o$
  movb $0x5,8452
.L47_o$: nop

    ret
         .size   adc2a_flags_cmp_constant, .-adc2a_flags_cmp_constant

    
.globl adc2a_flags_cmp_allregs
         .type   adc2a_flags_cmp_allregs, @function
adc2a_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0x15,0x10,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   adc2a_flags_cmp_allregs, .-adc2a_flags_cmp_allregs

    
.globl adc3_flags_clear
         .type   adc3_flags_clear, @function
adc3_flags_clear:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  adc $0x10,%eax
  mov %eax,8192
  jnc .L48_c$
  movb $0x1,8448
.L48_c$: nop
  jnz .L48_z$
  movb $0x2,8449
.L48_z$: nop
  jns .L48_s$
  movb $0x3,8450
.L48_s$: nop
  jnp .L48_p$
  movb $0x4,8451
.L48_p$: nop
  jno .L48_o$
  movb $0x5,8452
.L48_o$: nop

    ret
         .size   adc3_flags_clear, .-adc3_flags_clear

    
.globl adc3_flags_clear_constant
         .type   adc3_flags_clear_constant, @function
adc3_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax
  mov $1,%eax
  adc $0x10,%eax
  mov %eax,8192
  jnc .L49_c$
  movb $0x1,8448
.L49_c$: nop
  jnz .L49_z$
  movb $0x2,8449
.L49_z$: nop
  jns .L49_s$
  movb $0x3,8450
.L49_s$: nop
  jnp .L49_p$
  movb $0x4,8451
.L49_p$: nop
  jno .L49_o$
  movb $0x5,8452
.L49_o$: nop

    ret
         .size   adc3_flags_clear_constant, .-adc3_flags_clear_constant

    
.globl adc3_flags_clear_allregs
         .type   adc3_flags_clear_allregs, @function
adc3_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  adc $0x10,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   adc3_flags_clear_allregs, .-adc3_flags_clear_allregs

    
.globl adc3_flags_set1
         .type   adc3_flags_set1, @function
adc3_flags_set1:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  adc $0x10,%eax
  mov %eax,8192
  jnc .L50_c$
  movb $0x1,8448
.L50_c$: nop
  jnz .L50_z$
  movb $0x2,8449
.L50_z$: nop
  jns .L50_s$
  movb $0x3,8450
.L50_s$: nop
  jnp .L50_p$
  movb $0x4,8451
.L50_p$: nop
  jno .L50_o$
  movb $0x5,8452
.L50_o$: nop

    ret
         .size   adc3_flags_set1, .-adc3_flags_set1

    
.globl adc3_flags_set1_constant
         .type   adc3_flags_set1_constant, @function
adc3_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax
  mov $1,%eax
  adc $0x10,%eax
  mov %eax,8192
  jnc .L51_c$
  movb $0x1,8448
.L51_c$: nop
  jnz .L51_z$
  movb $0x2,8449
.L51_z$: nop
  jns .L51_s$
  movb $0x3,8450
.L51_s$: nop
  jnp .L51_p$
  movb $0x4,8451
.L51_p$: nop
  jno .L51_o$
  movb $0x5,8452
.L51_o$: nop

    ret
         .size   adc3_flags_set1_constant, .-adc3_flags_set1_constant

    
.globl adc3_flags_set1_allregs
         .type   adc3_flags_set1_allregs, @function
adc3_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  adc $0x10,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   adc3_flags_set1_allregs, .-adc3_flags_set1_allregs

    
.globl adc3_flags_set2
         .type   adc3_flags_set2, @function
adc3_flags_set2:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  adc $0x10,%eax
  mov %eax,8192
  jnc .L52_c$
  movb $0x1,8448
.L52_c$: nop
  jnz .L52_z$
  movb $0x2,8449
.L52_z$: nop
  jns .L52_s$
  movb $0x3,8450
.L52_s$: nop
  jnp .L52_p$
  movb $0x4,8451
.L52_p$: nop
  jno .L52_o$
  movb $0x5,8452
.L52_o$: nop

    ret
         .size   adc3_flags_set2, .-adc3_flags_set2

    
.globl adc3_flags_set2_constant
         .type   adc3_flags_set2_constant, @function
adc3_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax
  mov $1,%eax
  adc $0x10,%eax
  mov %eax,8192
  jnc .L53_c$
  movb $0x1,8448
.L53_c$: nop
  jnz .L53_z$
  movb $0x2,8449
.L53_z$: nop
  jns .L53_s$
  movb $0x3,8450
.L53_s$: nop
  jnp .L53_p$
  movb $0x4,8451
.L53_p$: nop
  jno .L53_o$
  movb $0x5,8452
.L53_o$: nop

    ret
         .size   adc3_flags_set2_constant, .-adc3_flags_set2_constant

    
.globl adc3_flags_set2_allregs
         .type   adc3_flags_set2_allregs, @function
adc3_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  adc $0x10,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   adc3_flags_set2_allregs, .-adc3_flags_set2_allregs

    
.globl adc3_flags_cmp
         .type   adc3_flags_cmp, @function
adc3_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  adc $0x10,%eax
  mov %eax,8192
  jnc .L54_c$
  movb $0x1,8448
.L54_c$: nop
  jnz .L54_z$
  movb $0x2,8449
.L54_z$: nop
  jns .L54_s$
  movb $0x3,8450
.L54_s$: nop
  jnp .L54_p$
  movb $0x4,8451
.L54_p$: nop
  jno .L54_o$
  movb $0x5,8452
.L54_o$: nop

    ret
         .size   adc3_flags_cmp, .-adc3_flags_cmp

    
.globl adc3_flags_cmp_constant
         .type   adc3_flags_cmp_constant, @function
adc3_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov $1,%eax
  adc $0x10,%eax
  mov %eax,8192
  jnc .L55_c$
  movb $0x1,8448
.L55_c$: nop
  jnz .L55_z$
  movb $0x2,8449
.L55_z$: nop
  jns .L55_s$
  movb $0x3,8450
.L55_s$: nop
  jnp .L55_p$
  movb $0x4,8451
.L55_p$: nop
  jno .L55_o$
  movb $0x5,8452
.L55_o$: nop

    ret
         .size   adc3_flags_cmp_constant, .-adc3_flags_cmp_constant

    
.globl adc3_flags_cmp_allregs
         .type   adc3_flags_cmp_allregs, @function
adc3_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  adc $0x10,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   adc3_flags_cmp_allregs, .-adc3_flags_cmp_allregs

    
.globl adc3a_flags_clear
         .type   adc3a_flags_clear, @function
adc3a_flags_clear:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  .byte 0x15,0x10,0x00,0x00,0x00
  mov %eax,8192
  jnc .L56_c$
  movb $0x1,8448
.L56_c$: nop
  jnz .L56_z$
  movb $0x2,8449
.L56_z$: nop
  jns .L56_s$
  movb $0x3,8450
.L56_s$: nop
  jnp .L56_p$
  movb $0x4,8451
.L56_p$: nop
  jno .L56_o$
  movb $0x5,8452
.L56_o$: nop

    ret
         .size   adc3a_flags_clear, .-adc3a_flags_clear

    
.globl adc3a_flags_clear_constant
         .type   adc3a_flags_clear_constant, @function
adc3a_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax
  mov $1,%eax
  .byte 0x15,0x10,0x00,0x00,0x00
  mov %eax,8192
  jnc .L57_c$
  movb $0x1,8448
.L57_c$: nop
  jnz .L57_z$
  movb $0x2,8449
.L57_z$: nop
  jns .L57_s$
  movb $0x3,8450
.L57_s$: nop
  jnp .L57_p$
  movb $0x4,8451
.L57_p$: nop
  jno .L57_o$
  movb $0x5,8452
.L57_o$: nop

    ret
         .size   adc3a_flags_clear_constant, .-adc3a_flags_clear_constant

    
.globl adc3a_flags_clear_allregs
         .type   adc3a_flags_clear_allregs, @function
adc3a_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x15,0x10,0x00,0x00,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   adc3a_flags_clear_allregs, .-adc3a_flags_clear_allregs

    
.globl adc3a_flags_set1
         .type   adc3a_flags_set1, @function
adc3a_flags_set1:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  .byte 0x15,0x10,0x00,0x00,0x00
  mov %eax,8192
  jnc .L58_c$
  movb $0x1,8448
.L58_c$: nop
  jnz .L58_z$
  movb $0x2,8449
.L58_z$: nop
  jns .L58_s$
  movb $0x3,8450
.L58_s$: nop
  jnp .L58_p$
  movb $0x4,8451
.L58_p$: nop
  jno .L58_o$
  movb $0x5,8452
.L58_o$: nop

    ret
         .size   adc3a_flags_set1, .-adc3a_flags_set1

    
.globl adc3a_flags_set1_constant
         .type   adc3a_flags_set1_constant, @function
adc3a_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax
  mov $1,%eax
  .byte 0x15,0x10,0x00,0x00,0x00
  mov %eax,8192
  jnc .L59_c$
  movb $0x1,8448
.L59_c$: nop
  jnz .L59_z$
  movb $0x2,8449
.L59_z$: nop
  jns .L59_s$
  movb $0x3,8450
.L59_s$: nop
  jnp .L59_p$
  movb $0x4,8451
.L59_p$: nop
  jno .L59_o$
  movb $0x5,8452
.L59_o$: nop

    ret
         .size   adc3a_flags_set1_constant, .-adc3a_flags_set1_constant

    
.globl adc3a_flags_set1_allregs
         .type   adc3a_flags_set1_allregs, @function
adc3a_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x15,0x10,0x00,0x00,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   adc3a_flags_set1_allregs, .-adc3a_flags_set1_allregs

    
.globl adc3a_flags_set2
         .type   adc3a_flags_set2, @function
adc3a_flags_set2:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  .byte 0x15,0x10,0x00,0x00,0x00
  mov %eax,8192
  jnc .L60_c$
  movb $0x1,8448
.L60_c$: nop
  jnz .L60_z$
  movb $0x2,8449
.L60_z$: nop
  jns .L60_s$
  movb $0x3,8450
.L60_s$: nop
  jnp .L60_p$
  movb $0x4,8451
.L60_p$: nop
  jno .L60_o$
  movb $0x5,8452
.L60_o$: nop

    ret
         .size   adc3a_flags_set2, .-adc3a_flags_set2

    
.globl adc3a_flags_set2_constant
         .type   adc3a_flags_set2_constant, @function
adc3a_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax
  mov $1,%eax
  .byte 0x15,0x10,0x00,0x00,0x00
  mov %eax,8192
  jnc .L61_c$
  movb $0x1,8448
.L61_c$: nop
  jnz .L61_z$
  movb $0x2,8449
.L61_z$: nop
  jns .L61_s$
  movb $0x3,8450
.L61_s$: nop
  jnp .L61_p$
  movb $0x4,8451
.L61_p$: nop
  jno .L61_o$
  movb $0x5,8452
.L61_o$: nop

    ret
         .size   adc3a_flags_set2_constant, .-adc3a_flags_set2_constant

    
.globl adc3a_flags_set2_allregs
         .type   adc3a_flags_set2_allregs, @function
adc3a_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x15,0x10,0x00,0x00,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   adc3a_flags_set2_allregs, .-adc3a_flags_set2_allregs

    
.globl adc3a_flags_cmp
         .type   adc3a_flags_cmp, @function
adc3a_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  .byte 0x15,0x10,0x00,0x00,0x00
  mov %eax,8192
  jnc .L62_c$
  movb $0x1,8448
.L62_c$: nop
  jnz .L62_z$
  movb $0x2,8449
.L62_z$: nop
  jns .L62_s$
  movb $0x3,8450
.L62_s$: nop
  jnp .L62_p$
  movb $0x4,8451
.L62_p$: nop
  jno .L62_o$
  movb $0x5,8452
.L62_o$: nop

    ret
         .size   adc3a_flags_cmp, .-adc3a_flags_cmp

    
.globl adc3a_flags_cmp_constant
         .type   adc3a_flags_cmp_constant, @function
adc3a_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov $1,%eax
  .byte 0x15,0x10,0x00,0x00,0x00
  mov %eax,8192
  jnc .L63_c$
  movb $0x1,8448
.L63_c$: nop
  jnz .L63_z$
  movb $0x2,8449
.L63_z$: nop
  jns .L63_s$
  movb $0x3,8450
.L63_s$: nop
  jnp .L63_p$
  movb $0x4,8451
.L63_p$: nop
  jno .L63_o$
  movb $0x5,8452
.L63_o$: nop

    ret
         .size   adc3a_flags_cmp_constant, .-adc3a_flags_cmp_constant

    
.globl adc3a_flags_cmp_allregs
         .type   adc3a_flags_cmp_allregs, @function
adc3a_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x15,0x10,0x00,0x00,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   adc3a_flags_cmp_allregs, .-adc3a_flags_cmp_allregs

    
.globl adc4_flags_clear
         .type   adc4_flags_clear, @function
adc4_flags_clear:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebp
  adc 8(%ebp), %eax
  mov %eax,8192
  jnc .L64_c$
  movb $0x1,8448
.L64_c$: nop
  jnz .L64_z$
  movb $0x2,8449
.L64_z$: nop
  jns .L64_s$
  movb $0x3,8450
.L64_s$: nop
  jnp .L64_p$
  movb $0x4,8451
.L64_p$: nop
  jno .L64_o$
  movb $0x5,8452
.L64_o$: nop

    ret
         .size   adc4_flags_clear, .-adc4_flags_clear

    
.globl adc4_flags_clear_constant
         .type   adc4_flags_clear_constant, @function
adc4_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax
  mov $1,%eax
  mov $2,%ebp
  adc 8(%ebp), %eax
  mov %eax,8192
  jnc .L65_c$
  movb $0x1,8448
.L65_c$: nop
  jnz .L65_z$
  movb $0x2,8449
.L65_z$: nop
  jns .L65_s$
  movb $0x3,8450
.L65_s$: nop
  jnp .L65_p$
  movb $0x4,8451
.L65_p$: nop
  jno .L65_o$
  movb $0x5,8452
.L65_o$: nop

    ret
         .size   adc4_flags_clear_constant, .-adc4_flags_clear_constant

    
.globl adc4_flags_clear_allregs
         .type   adc4_flags_clear_allregs, @function
adc4_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  adc 8(%ebp), %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   adc4_flags_clear_allregs, .-adc4_flags_clear_allregs

    
.globl adc4_flags_set1
         .type   adc4_flags_set1, @function
adc4_flags_set1:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebp
  adc 8(%ebp), %eax
  mov %eax,8192
  jnc .L66_c$
  movb $0x1,8448
.L66_c$: nop
  jnz .L66_z$
  movb $0x2,8449
.L66_z$: nop
  jns .L66_s$
  movb $0x3,8450
.L66_s$: nop
  jnp .L66_p$
  movb $0x4,8451
.L66_p$: nop
  jno .L66_o$
  movb $0x5,8452
.L66_o$: nop

    ret
         .size   adc4_flags_set1, .-adc4_flags_set1

    
.globl adc4_flags_set1_constant
         .type   adc4_flags_set1_constant, @function
adc4_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax
  mov $1,%eax
  mov $2,%ebp
  adc 8(%ebp), %eax
  mov %eax,8192
  jnc .L67_c$
  movb $0x1,8448
.L67_c$: nop
  jnz .L67_z$
  movb $0x2,8449
.L67_z$: nop
  jns .L67_s$
  movb $0x3,8450
.L67_s$: nop
  jnp .L67_p$
  movb $0x4,8451
.L67_p$: nop
  jno .L67_o$
  movb $0x5,8452
.L67_o$: nop

    ret
         .size   adc4_flags_set1_constant, .-adc4_flags_set1_constant

    
.globl adc4_flags_set1_allregs
         .type   adc4_flags_set1_allregs, @function
adc4_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  adc 8(%ebp), %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   adc4_flags_set1_allregs, .-adc4_flags_set1_allregs

    
.globl adc4_flags_set2
         .type   adc4_flags_set2, @function
adc4_flags_set2:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebp
  adc 8(%ebp), %eax
  mov %eax,8192
  jnc .L68_c$
  movb $0x1,8448
.L68_c$: nop
  jnz .L68_z$
  movb $0x2,8449
.L68_z$: nop
  jns .L68_s$
  movb $0x3,8450
.L68_s$: nop
  jnp .L68_p$
  movb $0x4,8451
.L68_p$: nop
  jno .L68_o$
  movb $0x5,8452
.L68_o$: nop

    ret
         .size   adc4_flags_set2, .-adc4_flags_set2

    
.globl adc4_flags_set2_constant
         .type   adc4_flags_set2_constant, @function
adc4_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax
  mov $1,%eax
  mov $2,%ebp
  adc 8(%ebp), %eax
  mov %eax,8192
  jnc .L69_c$
  movb $0x1,8448
.L69_c$: nop
  jnz .L69_z$
  movb $0x2,8449
.L69_z$: nop
  jns .L69_s$
  movb $0x3,8450
.L69_s$: nop
  jnp .L69_p$
  movb $0x4,8451
.L69_p$: nop
  jno .L69_o$
  movb $0x5,8452
.L69_o$: nop

    ret
         .size   adc4_flags_set2_constant, .-adc4_flags_set2_constant

    
.globl adc4_flags_set2_allregs
         .type   adc4_flags_set2_allregs, @function
adc4_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  adc 8(%ebp), %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   adc4_flags_set2_allregs, .-adc4_flags_set2_allregs

    
.globl adc4_flags_cmp
         .type   adc4_flags_cmp, @function
adc4_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebp
  adc 8(%ebp), %eax
  mov %eax,8192
  jnc .L70_c$
  movb $0x1,8448
.L70_c$: nop
  jnz .L70_z$
  movb $0x2,8449
.L70_z$: nop
  jns .L70_s$
  movb $0x3,8450
.L70_s$: nop
  jnp .L70_p$
  movb $0x4,8451
.L70_p$: nop
  jno .L70_o$
  movb $0x5,8452
.L70_o$: nop

    ret
         .size   adc4_flags_cmp, .-adc4_flags_cmp

    
.globl adc4_flags_cmp_constant
         .type   adc4_flags_cmp_constant, @function
adc4_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov $1,%eax
  mov $2,%ebp
  adc 8(%ebp), %eax
  mov %eax,8192
  jnc .L71_c$
  movb $0x1,8448
.L71_c$: nop
  jnz .L71_z$
  movb $0x2,8449
.L71_z$: nop
  jns .L71_s$
  movb $0x3,8450
.L71_s$: nop
  jnp .L71_p$
  movb $0x4,8451
.L71_p$: nop
  jno .L71_o$
  movb $0x5,8452
.L71_o$: nop

    ret
         .size   adc4_flags_cmp_constant, .-adc4_flags_cmp_constant

    
.globl adc4_flags_cmp_allregs
         .type   adc4_flags_cmp_allregs, @function
adc4_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  adc 8(%ebp), %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   adc4_flags_cmp_allregs, .-adc4_flags_cmp_allregs

    
.globl adc_locked
         .type   adc_locked, @function
adc_locked:
      


  lock adc 8(%ebp), %eax


    ret
         .size   adc_locked, .-adc_locked

    
.globl adc_locked_constant
         .type   adc_locked_constant, @function
adc_locked_constant:
      


  lock adc 8(%ebp), %eax


    ret
         .size   adc_locked_constant, .-adc_locked_constant

    
.globl adc_locked_allregs
         .type   adc_locked_allregs, @function
adc_locked_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  lock adc 8(%ebp), %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   adc_locked_allregs, .-adc_locked_allregs

    
.globl add1
         .type   add1, @function
add1:
      

  mov 4096,%al
  .byte 0x04,0x02
  mov %al,8192
  jnc .L72_c$
  movb $0x1,8448
.L72_c$: nop
  jnz .L72_z$
  movb $0x2,8449
.L72_z$: nop
  jns .L72_s$
  movb $0x3,8450
.L72_s$: nop
  jnp .L72_p$
  movb $0x4,8451
.L72_p$: nop
  jno .L72_o$
  movb $0x5,8452
.L72_o$: nop

    ret
         .size   add1, .-add1

    
.globl add1_constant
         .type   add1_constant, @function
add1_constant:
      

  mov $1,%al
  .byte 0x04,0x02
  mov %al,8192
  jnc .L73_c$
  movb $0x1,8448
.L73_c$: nop
  jnz .L73_z$
  movb $0x2,8449
.L73_z$: nop
  jns .L73_s$
  movb $0x3,8450
.L73_s$: nop
  jnp .L73_p$
  movb $0x4,8451
.L73_p$: nop
  jno .L73_o$
  movb $0x5,8452
.L73_o$: nop

    ret
         .size   add1_constant, .-add1_constant

    
.globl add1_allregs
         .type   add1_allregs, @function
add1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x04,0x02
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   add1_allregs, .-add1_allregs

    
.globl add2
         .type   add2, @function
add2:
      

  mov 4096,%al
  .byte 0x04,0xfe
  mov %al,8192
  jnc .L74_c$
  movb $0x1,8448
.L74_c$: nop
  jnz .L74_z$
  movb $0x2,8449
.L74_z$: nop
  jns .L74_s$
  movb $0x3,8450
.L74_s$: nop
  jnp .L74_p$
  movb $0x4,8451
.L74_p$: nop
  jno .L74_o$
  movb $0x5,8452
.L74_o$: nop

    ret
         .size   add2, .-add2

    
.globl add2_constant
         .type   add2_constant, @function
add2_constant:
      

  mov $1,%al
  .byte 0x04,0xfe
  mov %al,8192
  jnc .L75_c$
  movb $0x1,8448
.L75_c$: nop
  jnz .L75_z$
  movb $0x2,8449
.L75_z$: nop
  jns .L75_s$
  movb $0x3,8450
.L75_s$: nop
  jnp .L75_p$
  movb $0x4,8451
.L75_p$: nop
  jno .L75_o$
  movb $0x5,8452
.L75_o$: nop

    ret
         .size   add2_constant, .-add2_constant

    
.globl add2_allregs
         .type   add2_allregs, @function
add2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x04,0xfe
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   add2_allregs, .-add2_allregs

    
.globl add3
         .type   add3, @function
add3:
      

  mov 4096,%ax
  .byte 0x66,0x05,0x02,0x00
  mov %ax,8192
  jnc .L76_c$
  movb $0x1,8448
.L76_c$: nop
  jnz .L76_z$
  movb $0x2,8449
.L76_z$: nop
  jns .L76_s$
  movb $0x3,8450
.L76_s$: nop
  jnp .L76_p$
  movb $0x4,8451
.L76_p$: nop
  jno .L76_o$
  movb $0x5,8452
.L76_o$: nop

    ret
         .size   add3, .-add3

    
.globl add3_constant
         .type   add3_constant, @function
add3_constant:
      

  mov $1,%ax
  .byte 0x66,0x05,0x02,0x00
  mov %ax,8192
  jnc .L77_c$
  movb $0x1,8448
.L77_c$: nop
  jnz .L77_z$
  movb $0x2,8449
.L77_z$: nop
  jns .L77_s$
  movb $0x3,8450
.L77_s$: nop
  jnp .L77_p$
  movb $0x4,8451
.L77_p$: nop
  jno .L77_o$
  movb $0x5,8452
.L77_o$: nop

    ret
         .size   add3_constant, .-add3_constant

    
.globl add3_allregs
         .type   add3_allregs, @function
add3_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0x05,0x02,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   add3_allregs, .-add3_allregs

    
.globl add4
         .type   add4, @function
add4:
      

  mov 4096,%ax
  .byte 0x66,0x05,0xfe,0xff
  mov %ax,8192
  jnc .L78_c$
  movb $0x1,8448
.L78_c$: nop
  jnz .L78_z$
  movb $0x2,8449
.L78_z$: nop
  jns .L78_s$
  movb $0x3,8450
.L78_s$: nop
  jnp .L78_p$
  movb $0x4,8451
.L78_p$: nop
  jno .L78_o$
  movb $0x5,8452
.L78_o$: nop

    ret
         .size   add4, .-add4

    
.globl add4_constant
         .type   add4_constant, @function
add4_constant:
      

  mov $1,%ax
  .byte 0x66,0x05,0xfe,0xff
  mov %ax,8192
  jnc .L79_c$
  movb $0x1,8448
.L79_c$: nop
  jnz .L79_z$
  movb $0x2,8449
.L79_z$: nop
  jns .L79_s$
  movb $0x3,8450
.L79_s$: nop
  jnp .L79_p$
  movb $0x4,8451
.L79_p$: nop
  jno .L79_o$
  movb $0x5,8452
.L79_o$: nop

    ret
         .size   add4_constant, .-add4_constant

    
.globl add4_allregs
         .type   add4_allregs, @function
add4_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0x05,0xfe,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   add4_allregs, .-add4_allregs

    
.globl add5
         .type   add5, @function
add5:
      

  mov 4096,%eax
  .byte 0x05,0x02,0x00,0x00,0x00
  mov %eax,8192
  jnc .L80_c$
  movb $0x1,8448
.L80_c$: nop
  jnz .L80_z$
  movb $0x2,8449
.L80_z$: nop
  jns .L80_s$
  movb $0x3,8450
.L80_s$: nop
  jnp .L80_p$
  movb $0x4,8451
.L80_p$: nop
  jno .L80_o$
  movb $0x5,8452
.L80_o$: nop

    ret
         .size   add5, .-add5

    
.globl add5_constant
         .type   add5_constant, @function
add5_constant:
      

  mov $1,%eax
  .byte 0x05,0x02,0x00,0x00,0x00
  mov %eax,8192
  jnc .L81_c$
  movb $0x1,8448
.L81_c$: nop
  jnz .L81_z$
  movb $0x2,8449
.L81_z$: nop
  jns .L81_s$
  movb $0x3,8450
.L81_s$: nop
  jnp .L81_p$
  movb $0x4,8451
.L81_p$: nop
  jno .L81_o$
  movb $0x5,8452
.L81_o$: nop

    ret
         .size   add5_constant, .-add5_constant

    
.globl add5_allregs
         .type   add5_allregs, @function
add5_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x05,0x02,0x00,0x00,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   add5_allregs, .-add5_allregs

    
.globl add6
         .type   add6, @function
add6:
      

  mov 4096,%eax
  .byte 0x05,0xfe,0xff,0xff,0xff
  mov %eax,8192
  jnc .L82_c$
  movb $0x1,8448
.L82_c$: nop
  jnz .L82_z$
  movb $0x2,8449
.L82_z$: nop
  jns .L82_s$
  movb $0x3,8450
.L82_s$: nop
  jnp .L82_p$
  movb $0x4,8451
.L82_p$: nop
  jno .L82_o$
  movb $0x5,8452
.L82_o$: nop

    ret
         .size   add6, .-add6

    
.globl add6_constant
         .type   add6_constant, @function
add6_constant:
      

  mov $1,%eax
  .byte 0x05,0xfe,0xff,0xff,0xff
  mov %eax,8192
  jnc .L83_c$
  movb $0x1,8448
.L83_c$: nop
  jnz .L83_z$
  movb $0x2,8449
.L83_z$: nop
  jns .L83_s$
  movb $0x3,8450
.L83_s$: nop
  jnp .L83_p$
  movb $0x4,8451
.L83_p$: nop
  jno .L83_o$
  movb $0x5,8452
.L83_o$: nop

    ret
         .size   add6_constant, .-add6_constant

    
.globl add6_allregs
         .type   add6_allregs, @function
add6_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x05,0xfe,0xff,0xff,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   add6_allregs, .-add6_allregs

    
.globl add7
         .type   add7, @function
add7:
      

  mov 4096,%eax
  mov 4100,%ebp
  addl 8(%ebp), %eax
  mov %eax,8192
  jnc .L84_c$
  movb $0x1,8448
.L84_c$: nop
  jnz .L84_z$
  movb $0x2,8449
.L84_z$: nop
  jns .L84_s$
  movb $0x3,8450
.L84_s$: nop
  jnp .L84_p$
  movb $0x4,8451
.L84_p$: nop
  jno .L84_o$
  movb $0x5,8452
.L84_o$: nop

    ret
         .size   add7, .-add7

    
.globl add7_constant
         .type   add7_constant, @function
add7_constant:
      

  mov $1,%eax
  mov $2,%ebp
  addl 8(%ebp), %eax
  mov %eax,8192
  jnc .L85_c$
  movb $0x1,8448
.L85_c$: nop
  jnz .L85_z$
  movb $0x2,8449
.L85_z$: nop
  jns .L85_s$
  movb $0x3,8450
.L85_s$: nop
  jnp .L85_p$
  movb $0x4,8451
.L85_p$: nop
  jno .L85_o$
  movb $0x5,8452
.L85_o$: nop

    ret
         .size   add7_constant, .-add7_constant

    
.globl add7_allregs
         .type   add7_allregs, @function
add7_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  addl 8(%ebp), %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   add7_allregs, .-add7_allregs

    
.globl add_locked
         .type   add_locked, @function
add_locked:
      


  lock addl 8(%ebp), %eax


    ret
         .size   add_locked, .-add_locked

    
.globl add_locked_constant
         .type   add_locked_constant, @function
add_locked_constant:
      


  lock addl 8(%ebp), %eax


    ret
         .size   add_locked_constant, .-add_locked_constant

    
.globl add_locked_allregs
         .type   add_locked_allregs, @function
add_locked_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  lock addl 8(%ebp), %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   add_locked_allregs, .-add_locked_allregs

    
.globl and1
         .type   and1, @function
and1:
      

  mov 4096,%al
  .byte 0x24,0x02
  mov %al,8192
  jnc .L86_c$
  movb $0x1,8448
.L86_c$: nop
  jnz .L86_z$
  movb $0x2,8449
.L86_z$: nop
  jns .L86_s$
  movb $0x3,8450
.L86_s$: nop
  jnp .L86_p$
  movb $0x4,8451
.L86_p$: nop
  jno .L86_o$
  movb $0x5,8452
.L86_o$: nop

    ret
         .size   and1, .-and1

    
.globl and1_constant
         .type   and1_constant, @function
and1_constant:
      

  mov $1,%al
  .byte 0x24,0x02
  mov %al,8192
  jnc .L87_c$
  movb $0x1,8448
.L87_c$: nop
  jnz .L87_z$
  movb $0x2,8449
.L87_z$: nop
  jns .L87_s$
  movb $0x3,8450
.L87_s$: nop
  jnp .L87_p$
  movb $0x4,8451
.L87_p$: nop
  jno .L87_o$
  movb $0x5,8452
.L87_o$: nop

    ret
         .size   and1_constant, .-and1_constant

    
.globl and1_allregs
         .type   and1_allregs, @function
and1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x24,0x02
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   and1_allregs, .-and1_allregs

    
.globl and2
         .type   and2, @function
and2:
      

  mov 4096,%al
  .byte 0x24,0xfe
  mov %al,8192
  jnc .L88_c$
  movb $0x1,8448
.L88_c$: nop
  jnz .L88_z$
  movb $0x2,8449
.L88_z$: nop
  jns .L88_s$
  movb $0x3,8450
.L88_s$: nop
  jnp .L88_p$
  movb $0x4,8451
.L88_p$: nop
  jno .L88_o$
  movb $0x5,8452
.L88_o$: nop

    ret
         .size   and2, .-and2

    
.globl and2_constant
         .type   and2_constant, @function
and2_constant:
      

  mov $1,%al
  .byte 0x24,0xfe
  mov %al,8192
  jnc .L89_c$
  movb $0x1,8448
.L89_c$: nop
  jnz .L89_z$
  movb $0x2,8449
.L89_z$: nop
  jns .L89_s$
  movb $0x3,8450
.L89_s$: nop
  jnp .L89_p$
  movb $0x4,8451
.L89_p$: nop
  jno .L89_o$
  movb $0x5,8452
.L89_o$: nop

    ret
         .size   and2_constant, .-and2_constant

    
.globl and2_allregs
         .type   and2_allregs, @function
and2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x24,0xfe
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   and2_allregs, .-and2_allregs

    
.globl and3
         .type   and3, @function
and3:
      

  mov 4096,%ax
  .byte 0x66,0x25,0x02,0x00
  mov %ax,8192
  jnc .L90_c$
  movb $0x1,8448
.L90_c$: nop
  jnz .L90_z$
  movb $0x2,8449
.L90_z$: nop
  jns .L90_s$
  movb $0x3,8450
.L90_s$: nop
  jnp .L90_p$
  movb $0x4,8451
.L90_p$: nop
  jno .L90_o$
  movb $0x5,8452
.L90_o$: nop

    ret
         .size   and3, .-and3

    
.globl and3_constant
         .type   and3_constant, @function
and3_constant:
      

  mov $1,%ax
  .byte 0x66,0x25,0x02,0x00
  mov %ax,8192
  jnc .L91_c$
  movb $0x1,8448
.L91_c$: nop
  jnz .L91_z$
  movb $0x2,8449
.L91_z$: nop
  jns .L91_s$
  movb $0x3,8450
.L91_s$: nop
  jnp .L91_p$
  movb $0x4,8451
.L91_p$: nop
  jno .L91_o$
  movb $0x5,8452
.L91_o$: nop

    ret
         .size   and3_constant, .-and3_constant

    
.globl and3_allregs
         .type   and3_allregs, @function
and3_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0x25,0x02,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   and3_allregs, .-and3_allregs

    
.globl and4
         .type   and4, @function
and4:
      

  mov 4096,%ax
  .byte 0x66,0x25,0xfe,0xff
  mov %ax,8192
  jnc .L92_c$
  movb $0x1,8448
.L92_c$: nop
  jnz .L92_z$
  movb $0x2,8449
.L92_z$: nop
  jns .L92_s$
  movb $0x3,8450
.L92_s$: nop
  jnp .L92_p$
  movb $0x4,8451
.L92_p$: nop
  jno .L92_o$
  movb $0x5,8452
.L92_o$: nop

    ret
         .size   and4, .-and4

    
.globl and4_constant
         .type   and4_constant, @function
and4_constant:
      

  mov $1,%ax
  .byte 0x66,0x25,0xfe,0xff
  mov %ax,8192
  jnc .L93_c$
  movb $0x1,8448
.L93_c$: nop
  jnz .L93_z$
  movb $0x2,8449
.L93_z$: nop
  jns .L93_s$
  movb $0x3,8450
.L93_s$: nop
  jnp .L93_p$
  movb $0x4,8451
.L93_p$: nop
  jno .L93_o$
  movb $0x5,8452
.L93_o$: nop

    ret
         .size   and4_constant, .-and4_constant

    
.globl and4_allregs
         .type   and4_allregs, @function
and4_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0x25,0xfe,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   and4_allregs, .-and4_allregs

    
.globl and5
         .type   and5, @function
and5:
      

  mov 4096,%eax
  .byte 0x25,0x02,0x00,0x00,0x00
  mov %eax,8192
  jnc .L94_c$
  movb $0x1,8448
.L94_c$: nop
  jnz .L94_z$
  movb $0x2,8449
.L94_z$: nop
  jns .L94_s$
  movb $0x3,8450
.L94_s$: nop
  jnp .L94_p$
  movb $0x4,8451
.L94_p$: nop
  jno .L94_o$
  movb $0x5,8452
.L94_o$: nop

    ret
         .size   and5, .-and5

    
.globl and5_constant
         .type   and5_constant, @function
and5_constant:
      

  mov $1,%eax
  .byte 0x25,0x02,0x00,0x00,0x00
  mov %eax,8192
  jnc .L95_c$
  movb $0x1,8448
.L95_c$: nop
  jnz .L95_z$
  movb $0x2,8449
.L95_z$: nop
  jns .L95_s$
  movb $0x3,8450
.L95_s$: nop
  jnp .L95_p$
  movb $0x4,8451
.L95_p$: nop
  jno .L95_o$
  movb $0x5,8452
.L95_o$: nop

    ret
         .size   and5_constant, .-and5_constant

    
.globl and5_allregs
         .type   and5_allregs, @function
and5_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x25,0x02,0x00,0x00,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   and5_allregs, .-and5_allregs

    
.globl and6
         .type   and6, @function
and6:
      

  mov 4096,%eax
  .byte 0x25,0xfe,0xff,0xff,0xff
  mov %eax,8192
  jnc .L96_c$
  movb $0x1,8448
.L96_c$: nop
  jnz .L96_z$
  movb $0x2,8449
.L96_z$: nop
  jns .L96_s$
  movb $0x3,8450
.L96_s$: nop
  jnp .L96_p$
  movb $0x4,8451
.L96_p$: nop
  jno .L96_o$
  movb $0x5,8452
.L96_o$: nop

    ret
         .size   and6, .-and6

    
.globl and6_constant
         .type   and6_constant, @function
and6_constant:
      

  mov $1,%eax
  .byte 0x25,0xfe,0xff,0xff,0xff
  mov %eax,8192
  jnc .L97_c$
  movb $0x1,8448
.L97_c$: nop
  jnz .L97_z$
  movb $0x2,8449
.L97_z$: nop
  jns .L97_s$
  movb $0x3,8450
.L97_s$: nop
  jnp .L97_p$
  movb $0x4,8451
.L97_p$: nop
  jno .L97_o$
  movb $0x5,8452
.L97_o$: nop

    ret
         .size   and6_constant, .-and6_constant

    
.globl and6_allregs
         .type   and6_allregs, @function
and6_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x25,0xfe,0xff,0xff,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   and6_allregs, .-and6_allregs

    
.globl and7
         .type   and7, @function
and7:
      

  mov 4096,%eax
  mov 4100,%ebp
  andl 8(%ebp), %eax
  mov %eax,8192
  jnc .L98_c$
  movb $0x1,8448
.L98_c$: nop
  jnz .L98_z$
  movb $0x2,8449
.L98_z$: nop
  jns .L98_s$
  movb $0x3,8450
.L98_s$: nop
  jnp .L98_p$
  movb $0x4,8451
.L98_p$: nop
  jno .L98_o$
  movb $0x5,8452
.L98_o$: nop

    ret
         .size   and7, .-and7

    
.globl and7_constant
         .type   and7_constant, @function
and7_constant:
      

  mov $1,%eax
  mov $2,%ebp
  andl 8(%ebp), %eax
  mov %eax,8192
  jnc .L99_c$
  movb $0x1,8448
.L99_c$: nop
  jnz .L99_z$
  movb $0x2,8449
.L99_z$: nop
  jns .L99_s$
  movb $0x3,8450
.L99_s$: nop
  jnp .L99_p$
  movb $0x4,8451
.L99_p$: nop
  jno .L99_o$
  movb $0x5,8452
.L99_o$: nop

    ret
         .size   and7_constant, .-and7_constant

    
.globl and7_allregs
         .type   and7_allregs, @function
and7_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  andl 8(%ebp), %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   and7_allregs, .-and7_allregs

    
.globl and_locked
         .type   and_locked, @function
and_locked:
      


  lock andl 8(%ebp), %eax


    ret
         .size   and_locked, .-and_locked

    
.globl and_locked_constant
         .type   and_locked_constant, @function
and_locked_constant:
      


  lock andl 8(%ebp), %eax


    ret
         .size   and_locked_constant, .-and_locked_constant

    
.globl and_locked_allregs
         .type   and_locked_allregs, @function
and_locked_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  lock andl 8(%ebp), %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   and_locked_allregs, .-and_locked_allregs

    
.globl arpl
         .type   arpl, @function
arpl:
      

  mov 4096,%ax
  mov 4100,%bx
  arpl %ax, %bx
  jnc .L100_c$
  movb $0x1,8448
.L100_c$: nop
  jnz .L100_z$
  movb $0x2,8449
.L100_z$: nop
  jns .L100_s$
  movb $0x3,8450
.L100_s$: nop
  jnp .L100_p$
  movb $0x4,8451
.L100_p$: nop
  jno .L100_o$
  movb $0x5,8452
.L100_o$: nop

    ret
         .size   arpl, .-arpl

    
.globl arpl_constant
         .type   arpl_constant, @function
arpl_constant:
      

  mov $1,%ax
  mov $2,%bx
  arpl %ax, %bx
  jnc .L101_c$
  movb $0x1,8448
.L101_c$: nop
  jnz .L101_z$
  movb $0x2,8449
.L101_z$: nop
  jns .L101_s$
  movb $0x3,8450
.L101_s$: nop
  jnp .L101_p$
  movb $0x4,8451
.L101_p$: nop
  jno .L101_o$
  movb $0x5,8452
.L101_o$: nop

    ret
         .size   arpl_constant, .-arpl_constant

    
.globl arpl_allregs
         .type   arpl_allregs, @function
arpl_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  arpl %ax, %bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   arpl_allregs, .-arpl_allregs

    
.globl bound1
         .type   bound1, @function
bound1:
      

  mov 4096,%ax
  mov 4100,%bx
  bound %ax,(%bx)
  jnc .L102_c$
  movb $0x1,8448
.L102_c$: nop
  jnz .L102_z$
  movb $0x2,8449
.L102_z$: nop
  jns .L102_s$
  movb $0x3,8450
.L102_s$: nop
  jnp .L102_p$
  movb $0x4,8451
.L102_p$: nop
  jno .L102_o$
  movb $0x5,8452
.L102_o$: nop

    ret
         .size   bound1, .-bound1

    
.globl bound1_constant
         .type   bound1_constant, @function
bound1_constant:
      

  mov $1,%ax
  mov $2,%bx
  bound %ax,(%bx)
  jnc .L103_c$
  movb $0x1,8448
.L103_c$: nop
  jnz .L103_z$
  movb $0x2,8449
.L103_z$: nop
  jns .L103_s$
  movb $0x3,8450
.L103_s$: nop
  jnp .L103_p$
  movb $0x4,8451
.L103_p$: nop
  jno .L103_o$
  movb $0x5,8452
.L103_o$: nop

    ret
         .size   bound1_constant, .-bound1_constant

    
.globl bound1_allregs
         .type   bound1_allregs, @function
bound1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  bound %ax,(%bx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   bound1_allregs, .-bound1_allregs

    
.globl bound2
         .type   bound2, @function
bound2:
      

  mov 4096,%eax
  mov 4100,%ebx
  bound %eax,(%ebx)
  jnc .L104_c$
  movb $0x1,8448
.L104_c$: nop
  jnz .L104_z$
  movb $0x2,8449
.L104_z$: nop
  jns .L104_s$
  movb $0x3,8450
.L104_s$: nop
  jnp .L104_p$
  movb $0x4,8451
.L104_p$: nop
  jno .L104_o$
  movb $0x5,8452
.L104_o$: nop

    ret
         .size   bound2, .-bound2

    
.globl bound2_constant
         .type   bound2_constant, @function
bound2_constant:
      

  mov $1,%eax
  mov $2,%ebx
  bound %eax,(%ebx)
  jnc .L105_c$
  movb $0x1,8448
.L105_c$: nop
  jnz .L105_z$
  movb $0x2,8449
.L105_z$: nop
  jns .L105_s$
  movb $0x3,8450
.L105_s$: nop
  jnp .L105_p$
  movb $0x4,8451
.L105_p$: nop
  jno .L105_o$
  movb $0x5,8452
.L105_o$: nop

    ret
         .size   bound2_constant, .-bound2_constant

    
.globl bound2_allregs
         .type   bound2_allregs, @function
bound2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  bound %eax,(%ebx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   bound2_allregs, .-bound2_allregs

    
.globl bsf1
         .type   bsf1, @function
bsf1:
      

  mov 4096,%bx
  bsf (%bx),%ax
  mov %ax,8192
  jnc .L106_c$
  movb $0x1,8448
.L106_c$: nop
  jnz .L106_z$
  movb $0x2,8449
.L106_z$: nop
  jns .L106_s$
  movb $0x3,8450
.L106_s$: nop
  jnp .L106_p$
  movb $0x4,8451
.L106_p$: nop
  jno .L106_o$
  movb $0x5,8452
.L106_o$: nop

    ret
         .size   bsf1, .-bsf1

    
.globl bsf1_constant
         .type   bsf1_constant, @function
bsf1_constant:
      

  mov $1,%bx
  bsf (%bx),%ax
  mov %ax,8192
  jnc .L107_c$
  movb $0x1,8448
.L107_c$: nop
  jnz .L107_z$
  movb $0x2,8449
.L107_z$: nop
  jns .L107_s$
  movb $0x3,8450
.L107_s$: nop
  jnp .L107_p$
  movb $0x4,8451
.L107_p$: nop
  jno .L107_o$
  movb $0x5,8452
.L107_o$: nop

    ret
         .size   bsf1_constant, .-bsf1_constant

    
.globl bsf1_allregs
         .type   bsf1_allregs, @function
bsf1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  bsf (%bx),%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   bsf1_allregs, .-bsf1_allregs

    
.globl bsf2
         .type   bsf2, @function
bsf2:
      

  mov 4096,%ebx
  bsf (%ebx),%eax
  mov %eax,8192
  jnc .L108_c$
  movb $0x1,8448
.L108_c$: nop
  jnz .L108_z$
  movb $0x2,8449
.L108_z$: nop
  jns .L108_s$
  movb $0x3,8450
.L108_s$: nop
  jnp .L108_p$
  movb $0x4,8451
.L108_p$: nop
  jno .L108_o$
  movb $0x5,8452
.L108_o$: nop

    ret
         .size   bsf2, .-bsf2

    
.globl bsf2_constant
         .type   bsf2_constant, @function
bsf2_constant:
      

  mov $1,%ebx
  bsf (%ebx),%eax
  mov %eax,8192
  jnc .L109_c$
  movb $0x1,8448
.L109_c$: nop
  jnz .L109_z$
  movb $0x2,8449
.L109_z$: nop
  jns .L109_s$
  movb $0x3,8450
.L109_s$: nop
  jnp .L109_p$
  movb $0x4,8451
.L109_p$: nop
  jno .L109_o$
  movb $0x5,8452
.L109_o$: nop

    ret
         .size   bsf2_constant, .-bsf2_constant

    
.globl bsf2_allregs
         .type   bsf2_allregs, @function
bsf2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  bsf (%ebx),%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   bsf2_allregs, .-bsf2_allregs

    
.globl bsf3
         .type   bsf3, @function
bsf3:
      

  mov 4096,%bx
  bsf (%bx),%eax
  mov %eax,8192
  jnc .L110_c$
  movb $0x1,8448
.L110_c$: nop
  jnz .L110_z$
  movb $0x2,8449
.L110_z$: nop
  jns .L110_s$
  movb $0x3,8450
.L110_s$: nop
  jnp .L110_p$
  movb $0x4,8451
.L110_p$: nop
  jno .L110_o$
  movb $0x5,8452
.L110_o$: nop

    ret
         .size   bsf3, .-bsf3

    
.globl bsf3_constant
         .type   bsf3_constant, @function
bsf3_constant:
      

  mov $1,%bx
  bsf (%bx),%eax
  mov %eax,8192
  jnc .L111_c$
  movb $0x1,8448
.L111_c$: nop
  jnz .L111_z$
  movb $0x2,8449
.L111_z$: nop
  jns .L111_s$
  movb $0x3,8450
.L111_s$: nop
  jnp .L111_p$
  movb $0x4,8451
.L111_p$: nop
  jno .L111_o$
  movb $0x5,8452
.L111_o$: nop

    ret
         .size   bsf3_constant, .-bsf3_constant

    
.globl bsf3_allregs
         .type   bsf3_allregs, @function
bsf3_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  bsf (%bx),%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   bsf3_allregs, .-bsf3_allregs

    
.globl bsf4
         .type   bsf4, @function
bsf4:
      

  mov 4096,%ebx
  bsf (%ebx),%ax
  mov %eax,8192
  jnc .L112_c$
  movb $0x1,8448
.L112_c$: nop
  jnz .L112_z$
  movb $0x2,8449
.L112_z$: nop
  jns .L112_s$
  movb $0x3,8450
.L112_s$: nop
  jnp .L112_p$
  movb $0x4,8451
.L112_p$: nop
  jno .L112_o$
  movb $0x5,8452
.L112_o$: nop

    ret
         .size   bsf4, .-bsf4

    
.globl bsf4_constant
         .type   bsf4_constant, @function
bsf4_constant:
      

  mov $1,%ebx
  bsf (%ebx),%ax
  mov %eax,8192
  jnc .L113_c$
  movb $0x1,8448
.L113_c$: nop
  jnz .L113_z$
  movb $0x2,8449
.L113_z$: nop
  jns .L113_s$
  movb $0x3,8450
.L113_s$: nop
  jnp .L113_p$
  movb $0x4,8451
.L113_p$: nop
  jno .L113_o$
  movb $0x5,8452
.L113_o$: nop

    ret
         .size   bsf4_constant, .-bsf4_constant

    
.globl bsf4_allregs
         .type   bsf4_allregs, @function
bsf4_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  bsf (%ebx),%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   bsf4_allregs, .-bsf4_allregs

    
.globl bsr1
         .type   bsr1, @function
bsr1:
      

  mov 4096,%bx
  bsr (%bx),%ax
  mov %ax,8192
  jnc .L114_c$
  movb $0x1,8448
.L114_c$: nop
  jnz .L114_z$
  movb $0x2,8449
.L114_z$: nop
  jns .L114_s$
  movb $0x3,8450
.L114_s$: nop
  jnp .L114_p$
  movb $0x4,8451
.L114_p$: nop
  jno .L114_o$
  movb $0x5,8452
.L114_o$: nop

    ret
         .size   bsr1, .-bsr1

    
.globl bsr1_constant
         .type   bsr1_constant, @function
bsr1_constant:
      

  mov $1,%bx
  bsr (%bx),%ax
  mov %ax,8192
  jnc .L115_c$
  movb $0x1,8448
.L115_c$: nop
  jnz .L115_z$
  movb $0x2,8449
.L115_z$: nop
  jns .L115_s$
  movb $0x3,8450
.L115_s$: nop
  jnp .L115_p$
  movb $0x4,8451
.L115_p$: nop
  jno .L115_o$
  movb $0x5,8452
.L115_o$: nop

    ret
         .size   bsr1_constant, .-bsr1_constant

    
.globl bsr1_allregs
         .type   bsr1_allregs, @function
bsr1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  bsr (%bx),%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   bsr1_allregs, .-bsr1_allregs

    
.globl bsr2
         .type   bsr2, @function
bsr2:
      

  mov 4096,%ebx
  bsr (%ebx),%eax
  mov %eax,8192
  jnc .L116_c$
  movb $0x1,8448
.L116_c$: nop
  jnz .L116_z$
  movb $0x2,8449
.L116_z$: nop
  jns .L116_s$
  movb $0x3,8450
.L116_s$: nop
  jnp .L116_p$
  movb $0x4,8451
.L116_p$: nop
  jno .L116_o$
  movb $0x5,8452
.L116_o$: nop

    ret
         .size   bsr2, .-bsr2

    
.globl bsr2_constant
         .type   bsr2_constant, @function
bsr2_constant:
      

  mov $1,%ebx
  bsr (%ebx),%eax
  mov %eax,8192
  jnc .L117_c$
  movb $0x1,8448
.L117_c$: nop
  jnz .L117_z$
  movb $0x2,8449
.L117_z$: nop
  jns .L117_s$
  movb $0x3,8450
.L117_s$: nop
  jnp .L117_p$
  movb $0x4,8451
.L117_p$: nop
  jno .L117_o$
  movb $0x5,8452
.L117_o$: nop

    ret
         .size   bsr2_constant, .-bsr2_constant

    
.globl bsr2_allregs
         .type   bsr2_allregs, @function
bsr2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  bsr (%ebx),%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   bsr2_allregs, .-bsr2_allregs

    
.globl bsr3
         .type   bsr3, @function
bsr3:
      

  mov 4096,%bx
  bsr (%bx),%eax
  mov %ax,8192
  jnc .L118_c$
  movb $0x1,8448
.L118_c$: nop
  jnz .L118_z$
  movb $0x2,8449
.L118_z$: nop
  jns .L118_s$
  movb $0x3,8450
.L118_s$: nop
  jnp .L118_p$
  movb $0x4,8451
.L118_p$: nop
  jno .L118_o$
  movb $0x5,8452
.L118_o$: nop

    ret
         .size   bsr3, .-bsr3

    
.globl bsr3_constant
         .type   bsr3_constant, @function
bsr3_constant:
      

  mov $1,%bx
  bsr (%bx),%eax
  mov %ax,8192
  jnc .L119_c$
  movb $0x1,8448
.L119_c$: nop
  jnz .L119_z$
  movb $0x2,8449
.L119_z$: nop
  jns .L119_s$
  movb $0x3,8450
.L119_s$: nop
  jnp .L119_p$
  movb $0x4,8451
.L119_p$: nop
  jno .L119_o$
  movb $0x5,8452
.L119_o$: nop

    ret
         .size   bsr3_constant, .-bsr3_constant

    
.globl bsr3_allregs
         .type   bsr3_allregs, @function
bsr3_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  bsr (%bx),%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   bsr3_allregs, .-bsr3_allregs

    
.globl bsr4
         .type   bsr4, @function
bsr4:
      

  mov 4096,%ebx
  bsr (%ebx),%ax
  mov %ax,8192
  jnc .L120_c$
  movb $0x1,8448
.L120_c$: nop
  jnz .L120_z$
  movb $0x2,8449
.L120_z$: nop
  jns .L120_s$
  movb $0x3,8450
.L120_s$: nop
  jnp .L120_p$
  movb $0x4,8451
.L120_p$: nop
  jno .L120_o$
  movb $0x5,8452
.L120_o$: nop

    ret
         .size   bsr4, .-bsr4

    
.globl bsr4_constant
         .type   bsr4_constant, @function
bsr4_constant:
      

  mov $1,%ebx
  bsr (%ebx),%ax
  mov %ax,8192
  jnc .L121_c$
  movb $0x1,8448
.L121_c$: nop
  jnz .L121_z$
  movb $0x2,8449
.L121_z$: nop
  jns .L121_s$
  movb $0x3,8450
.L121_s$: nop
  jnp .L121_p$
  movb $0x4,8451
.L121_p$: nop
  jno .L121_o$
  movb $0x5,8452
.L121_o$: nop

    ret
         .size   bsr4_constant, .-bsr4_constant

    
.globl bsr4_allregs
         .type   bsr4_allregs, @function
bsr4_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  bsr (%ebx),%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   bsr4_allregs, .-bsr4_allregs

    
.globl bt1
         .type   bt1, @function
bt1:
      

  mov 4096,%ax
  bt $4,%ax
  jnc .L122_c$
  movb $0x1,8448
.L122_c$: nop
  jnz .L122_z$
  movb $0x2,8449
.L122_z$: nop
  jns .L122_s$
  movb $0x3,8450
.L122_s$: nop
  jnp .L122_p$
  movb $0x4,8451
.L122_p$: nop
  jno .L122_o$
  movb $0x5,8452
.L122_o$: nop

    ret
         .size   bt1, .-bt1

    
.globl bt1_constant
         .type   bt1_constant, @function
bt1_constant:
      

  mov $1,%ax
  bt $4,%ax
  jnc .L123_c$
  movb $0x1,8448
.L123_c$: nop
  jnz .L123_z$
  movb $0x2,8449
.L123_z$: nop
  jns .L123_s$
  movb $0x3,8450
.L123_s$: nop
  jnp .L123_p$
  movb $0x4,8451
.L123_p$: nop
  jno .L123_o$
  movb $0x5,8452
.L123_o$: nop

    ret
         .size   bt1_constant, .-bt1_constant

    
.globl bt1_allregs
         .type   bt1_allregs, @function
bt1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  bt $4,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   bt1_allregs, .-bt1_allregs

    
.globl bt2
         .type   bt2, @function
bt2:
      

  mov 4096,%ax
  mov 4100,%bx
  bt %bx,%ax
  jnc .L124_c$
  movb $0x1,8448
.L124_c$: nop
  jnz .L124_z$
  movb $0x2,8449
.L124_z$: nop
  jns .L124_s$
  movb $0x3,8450
.L124_s$: nop
  jnp .L124_p$
  movb $0x4,8451
.L124_p$: nop
  jno .L124_o$
  movb $0x5,8452
.L124_o$: nop

    ret
         .size   bt2, .-bt2

    
.globl bt2_constant
         .type   bt2_constant, @function
bt2_constant:
      

  mov $1,%ax
  mov $2,%bx
  bt %bx,%ax
  jnc .L125_c$
  movb $0x1,8448
.L125_c$: nop
  jnz .L125_z$
  movb $0x2,8449
.L125_z$: nop
  jns .L125_s$
  movb $0x3,8450
.L125_s$: nop
  jnp .L125_p$
  movb $0x4,8451
.L125_p$: nop
  jno .L125_o$
  movb $0x5,8452
.L125_o$: nop

    ret
         .size   bt2_constant, .-bt2_constant

    
.globl bt2_allregs
         .type   bt2_allregs, @function
bt2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  bt %bx,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   bt2_allregs, .-bt2_allregs

    
.globl bt3
         .type   bt3, @function
bt3:
      

  mov 4096,%eax
  bt $31,%eax
  jnc .L126_c$
  movb $0x1,8448
.L126_c$: nop
  jnz .L126_z$
  movb $0x2,8449
.L126_z$: nop
  jns .L126_s$
  movb $0x3,8450
.L126_s$: nop
  jnp .L126_p$
  movb $0x4,8451
.L126_p$: nop
  jno .L126_o$
  movb $0x5,8452
.L126_o$: nop

    ret
         .size   bt3, .-bt3

    
.globl bt3_constant
         .type   bt3_constant, @function
bt3_constant:
      

  mov $1,%eax
  bt $31,%eax
  jnc .L127_c$
  movb $0x1,8448
.L127_c$: nop
  jnz .L127_z$
  movb $0x2,8449
.L127_z$: nop
  jns .L127_s$
  movb $0x3,8450
.L127_s$: nop
  jnp .L127_p$
  movb $0x4,8451
.L127_p$: nop
  jno .L127_o$
  movb $0x5,8452
.L127_o$: nop

    ret
         .size   bt3_constant, .-bt3_constant

    
.globl bt3_allregs
         .type   bt3_allregs, @function
bt3_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  bt $31,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   bt3_allregs, .-bt3_allregs

    
.globl bt4
         .type   bt4, @function
bt4:
      

  mov 4096,%eax
  mov 4100,%bx
  bt %bx,%eax
  jnc .L128_c$
  movb $0x1,8448
.L128_c$: nop
  jnz .L128_z$
  movb $0x2,8449
.L128_z$: nop
  jns .L128_s$
  movb $0x3,8450
.L128_s$: nop
  jnp .L128_p$
  movb $0x4,8451
.L128_p$: nop
  jno .L128_o$
  movb $0x5,8452
.L128_o$: nop

    ret
         .size   bt4, .-bt4

    
.globl bt4_constant
         .type   bt4_constant, @function
bt4_constant:
      

  mov $1,%eax
  mov $2,%bx
  bt %bx,%eax
  jnc .L129_c$
  movb $0x1,8448
.L129_c$: nop
  jnz .L129_z$
  movb $0x2,8449
.L129_z$: nop
  jns .L129_s$
  movb $0x3,8450
.L129_s$: nop
  jnp .L129_p$
  movb $0x4,8451
.L129_p$: nop
  jno .L129_o$
  movb $0x5,8452
.L129_o$: nop

    ret
         .size   bt4_constant, .-bt4_constant

    
.globl bt4_allregs
         .type   bt4_allregs, @function
bt4_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  bt %bx,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   bt4_allregs, .-bt4_allregs

    
.globl bt5
         .type   bt5, @function
bt5:
      

  mov 4096,%eax
  mov 4100,%ebx
  bt %ebx,(%eax)
  jnc .L130_c$
  movb $0x1,8448
.L130_c$: nop
  jnz .L130_z$
  movb $0x2,8449
.L130_z$: nop
  jns .L130_s$
  movb $0x3,8450
.L130_s$: nop
  jnp .L130_p$
  movb $0x4,8451
.L130_p$: nop
  jno .L130_o$
  movb $0x5,8452
.L130_o$: nop

    ret
         .size   bt5, .-bt5

    
.globl bt5_constant
         .type   bt5_constant, @function
bt5_constant:
      

  mov $1,%eax
  mov $2,%ebx
  bt %ebx,(%eax)
  jnc .L131_c$
  movb $0x1,8448
.L131_c$: nop
  jnz .L131_z$
  movb $0x2,8449
.L131_z$: nop
  jns .L131_s$
  movb $0x3,8450
.L131_s$: nop
  jnp .L131_p$
  movb $0x4,8451
.L131_p$: nop
  jno .L131_o$
  movb $0x5,8452
.L131_o$: nop

    ret
         .size   bt5_constant, .-bt5_constant

    
.globl bt5_allregs
         .type   bt5_allregs, @function
bt5_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  bt %ebx,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   bt5_allregs, .-bt5_allregs

    
.globl btc1
         .type   btc1, @function
btc1:
      

  mov 4096,%ax
  btc $4,%ax
  mov %ax,8192
  jnc .L132_c$
  movb $0x1,8448
.L132_c$: nop
  jnz .L132_z$
  movb $0x2,8449
.L132_z$: nop
  jns .L132_s$
  movb $0x3,8450
.L132_s$: nop
  jnp .L132_p$
  movb $0x4,8451
.L132_p$: nop
  jno .L132_o$
  movb $0x5,8452
.L132_o$: nop

    ret
         .size   btc1, .-btc1

    
.globl btc1_constant
         .type   btc1_constant, @function
btc1_constant:
      

  mov $1,%ax
  btc $4,%ax
  mov %ax,8192
  jnc .L133_c$
  movb $0x1,8448
.L133_c$: nop
  jnz .L133_z$
  movb $0x2,8449
.L133_z$: nop
  jns .L133_s$
  movb $0x3,8450
.L133_s$: nop
  jnp .L133_p$
  movb $0x4,8451
.L133_p$: nop
  jno .L133_o$
  movb $0x5,8452
.L133_o$: nop

    ret
         .size   btc1_constant, .-btc1_constant

    
.globl btc1_allregs
         .type   btc1_allregs, @function
btc1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  btc $4,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   btc1_allregs, .-btc1_allregs

    
.globl btc2
         .type   btc2, @function
btc2:
      

  mov 4096,%ax
  mov 4100,%bx
  btc %bx,%ax
  mov %ax,8192
  jnc .L134_c$
  movb $0x1,8448
.L134_c$: nop
  jnz .L134_z$
  movb $0x2,8449
.L134_z$: nop
  jns .L134_s$
  movb $0x3,8450
.L134_s$: nop
  jnp .L134_p$
  movb $0x4,8451
.L134_p$: nop
  jno .L134_o$
  movb $0x5,8452
.L134_o$: nop

    ret
         .size   btc2, .-btc2

    
.globl btc2_constant
         .type   btc2_constant, @function
btc2_constant:
      

  mov $1,%ax
  mov $2,%bx
  btc %bx,%ax
  mov %ax,8192
  jnc .L135_c$
  movb $0x1,8448
.L135_c$: nop
  jnz .L135_z$
  movb $0x2,8449
.L135_z$: nop
  jns .L135_s$
  movb $0x3,8450
.L135_s$: nop
  jnp .L135_p$
  movb $0x4,8451
.L135_p$: nop
  jno .L135_o$
  movb $0x5,8452
.L135_o$: nop

    ret
         .size   btc2_constant, .-btc2_constant

    
.globl btc2_allregs
         .type   btc2_allregs, @function
btc2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  btc %bx,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   btc2_allregs, .-btc2_allregs

    
.globl btc3
         .type   btc3, @function
btc3:
      

  mov 4096,%eax
  btc $31,%eax
  mov %eax,8192
  jnc .L136_c$
  movb $0x1,8448
.L136_c$: nop
  jnz .L136_z$
  movb $0x2,8449
.L136_z$: nop
  jns .L136_s$
  movb $0x3,8450
.L136_s$: nop
  jnp .L136_p$
  movb $0x4,8451
.L136_p$: nop
  jno .L136_o$
  movb $0x5,8452
.L136_o$: nop

    ret
         .size   btc3, .-btc3

    
.globl btc3_constant
         .type   btc3_constant, @function
btc3_constant:
      

  mov $1,%eax
  btc $31,%eax
  mov %eax,8192
  jnc .L137_c$
  movb $0x1,8448
.L137_c$: nop
  jnz .L137_z$
  movb $0x2,8449
.L137_z$: nop
  jns .L137_s$
  movb $0x3,8450
.L137_s$: nop
  jnp .L137_p$
  movb $0x4,8451
.L137_p$: nop
  jno .L137_o$
  movb $0x5,8452
.L137_o$: nop

    ret
         .size   btc3_constant, .-btc3_constant

    
.globl btc3_allregs
         .type   btc3_allregs, @function
btc3_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  btc $31,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   btc3_allregs, .-btc3_allregs

    
.globl btc4
         .type   btc4, @function
btc4:
      

  mov 4096,%eax
  mov 4100,%bx
  btc %bx,%eax
  mov %eax,8192
  jnc .L138_c$
  movb $0x1,8448
.L138_c$: nop
  jnz .L138_z$
  movb $0x2,8449
.L138_z$: nop
  jns .L138_s$
  movb $0x3,8450
.L138_s$: nop
  jnp .L138_p$
  movb $0x4,8451
.L138_p$: nop
  jno .L138_o$
  movb $0x5,8452
.L138_o$: nop

    ret
         .size   btc4, .-btc4

    
.globl btc4_constant
         .type   btc4_constant, @function
btc4_constant:
      

  mov $1,%eax
  mov $2,%bx
  btc %bx,%eax
  mov %eax,8192
  jnc .L139_c$
  movb $0x1,8448
.L139_c$: nop
  jnz .L139_z$
  movb $0x2,8449
.L139_z$: nop
  jns .L139_s$
  movb $0x3,8450
.L139_s$: nop
  jnp .L139_p$
  movb $0x4,8451
.L139_p$: nop
  jno .L139_o$
  movb $0x5,8452
.L139_o$: nop

    ret
         .size   btc4_constant, .-btc4_constant

    
.globl btc4_allregs
         .type   btc4_allregs, @function
btc4_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  btc %bx,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   btc4_allregs, .-btc4_allregs

    
.globl btc5
         .type   btc5, @function
btc5:
      

  mov 4096,%eax
  mov 4100,%ebx
  btc %ebx,(%eax)
  jnc .L140_c$
  movb $0x1,8448
.L140_c$: nop
  jnz .L140_z$
  movb $0x2,8449
.L140_z$: nop
  jns .L140_s$
  movb $0x3,8450
.L140_s$: nop
  jnp .L140_p$
  movb $0x4,8451
.L140_p$: nop
  jno .L140_o$
  movb $0x5,8452
.L140_o$: nop

    ret
         .size   btc5, .-btc5

    
.globl btc5_constant
         .type   btc5_constant, @function
btc5_constant:
      

  mov $1,%eax
  mov $2,%ebx
  btc %ebx,(%eax)
  jnc .L141_c$
  movb $0x1,8448
.L141_c$: nop
  jnz .L141_z$
  movb $0x2,8449
.L141_z$: nop
  jns .L141_s$
  movb $0x3,8450
.L141_s$: nop
  jnp .L141_p$
  movb $0x4,8451
.L141_p$: nop
  jno .L141_o$
  movb $0x5,8452
.L141_o$: nop

    ret
         .size   btc5_constant, .-btc5_constant

    
.globl btc5_allregs
         .type   btc5_allregs, @function
btc5_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  btc %ebx,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   btc5_allregs, .-btc5_allregs

    
.globl btc_locked
         .type   btc_locked, @function
btc_locked:
      


  lock btc %ebx,(%eax)


    ret
         .size   btc_locked, .-btc_locked

    
.globl btc_locked_constant
         .type   btc_locked_constant, @function
btc_locked_constant:
      


  lock btc %ebx,(%eax)


    ret
         .size   btc_locked_constant, .-btc_locked_constant

    
.globl btc_locked_allregs
         .type   btc_locked_allregs, @function
btc_locked_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  lock btc %ebx,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   btc_locked_allregs, .-btc_locked_allregs

    
.globl btr1
         .type   btr1, @function
btr1:
      

  mov 4096,%ax
  btr $4,%ax
  mov %ax,8192
  jnc .L142_c$
  movb $0x1,8448
.L142_c$: nop
  jnz .L142_z$
  movb $0x2,8449
.L142_z$: nop
  jns .L142_s$
  movb $0x3,8450
.L142_s$: nop
  jnp .L142_p$
  movb $0x4,8451
.L142_p$: nop
  jno .L142_o$
  movb $0x5,8452
.L142_o$: nop

    ret
         .size   btr1, .-btr1

    
.globl btr1_constant
         .type   btr1_constant, @function
btr1_constant:
      

  mov $1,%ax
  btr $4,%ax
  mov %ax,8192
  jnc .L143_c$
  movb $0x1,8448
.L143_c$: nop
  jnz .L143_z$
  movb $0x2,8449
.L143_z$: nop
  jns .L143_s$
  movb $0x3,8450
.L143_s$: nop
  jnp .L143_p$
  movb $0x4,8451
.L143_p$: nop
  jno .L143_o$
  movb $0x5,8452
.L143_o$: nop

    ret
         .size   btr1_constant, .-btr1_constant

    
.globl btr1_allregs
         .type   btr1_allregs, @function
btr1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  btr $4,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   btr1_allregs, .-btr1_allregs

    
.globl btr2
         .type   btr2, @function
btr2:
      

  mov 4096,%ax
  mov 4100,%bx
  btr %bx,%ax
  mov %ax,8192
  jnc .L144_c$
  movb $0x1,8448
.L144_c$: nop
  jnz .L144_z$
  movb $0x2,8449
.L144_z$: nop
  jns .L144_s$
  movb $0x3,8450
.L144_s$: nop
  jnp .L144_p$
  movb $0x4,8451
.L144_p$: nop
  jno .L144_o$
  movb $0x5,8452
.L144_o$: nop

    ret
         .size   btr2, .-btr2

    
.globl btr2_constant
         .type   btr2_constant, @function
btr2_constant:
      

  mov $1,%ax
  mov $2,%bx
  btr %bx,%ax
  mov %ax,8192
  jnc .L145_c$
  movb $0x1,8448
.L145_c$: nop
  jnz .L145_z$
  movb $0x2,8449
.L145_z$: nop
  jns .L145_s$
  movb $0x3,8450
.L145_s$: nop
  jnp .L145_p$
  movb $0x4,8451
.L145_p$: nop
  jno .L145_o$
  movb $0x5,8452
.L145_o$: nop

    ret
         .size   btr2_constant, .-btr2_constant

    
.globl btr2_allregs
         .type   btr2_allregs, @function
btr2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  btr %bx,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   btr2_allregs, .-btr2_allregs

    
.globl btr3
         .type   btr3, @function
btr3:
      

  mov 4096,%eax
  btr $31,%eax
  mov %eax,8192
  jnc .L146_c$
  movb $0x1,8448
.L146_c$: nop
  jnz .L146_z$
  movb $0x2,8449
.L146_z$: nop
  jns .L146_s$
  movb $0x3,8450
.L146_s$: nop
  jnp .L146_p$
  movb $0x4,8451
.L146_p$: nop
  jno .L146_o$
  movb $0x5,8452
.L146_o$: nop

    ret
         .size   btr3, .-btr3

    
.globl btr3_constant
         .type   btr3_constant, @function
btr3_constant:
      

  mov $1,%eax
  btr $31,%eax
  mov %eax,8192
  jnc .L147_c$
  movb $0x1,8448
.L147_c$: nop
  jnz .L147_z$
  movb $0x2,8449
.L147_z$: nop
  jns .L147_s$
  movb $0x3,8450
.L147_s$: nop
  jnp .L147_p$
  movb $0x4,8451
.L147_p$: nop
  jno .L147_o$
  movb $0x5,8452
.L147_o$: nop

    ret
         .size   btr3_constant, .-btr3_constant

    
.globl btr3_allregs
         .type   btr3_allregs, @function
btr3_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  btr $31,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   btr3_allregs, .-btr3_allregs

    
.globl btr4
         .type   btr4, @function
btr4:
      

  mov 4096,%eax
  mov 4100,%bx
  btr %bx,%eax
  mov %eax,8192
  jnc .L148_c$
  movb $0x1,8448
.L148_c$: nop
  jnz .L148_z$
  movb $0x2,8449
.L148_z$: nop
  jns .L148_s$
  movb $0x3,8450
.L148_s$: nop
  jnp .L148_p$
  movb $0x4,8451
.L148_p$: nop
  jno .L148_o$
  movb $0x5,8452
.L148_o$: nop

    ret
         .size   btr4, .-btr4

    
.globl btr4_constant
         .type   btr4_constant, @function
btr4_constant:
      

  mov $1,%eax
  mov $2,%bx
  btr %bx,%eax
  mov %eax,8192
  jnc .L149_c$
  movb $0x1,8448
.L149_c$: nop
  jnz .L149_z$
  movb $0x2,8449
.L149_z$: nop
  jns .L149_s$
  movb $0x3,8450
.L149_s$: nop
  jnp .L149_p$
  movb $0x4,8451
.L149_p$: nop
  jno .L149_o$
  movb $0x5,8452
.L149_o$: nop

    ret
         .size   btr4_constant, .-btr4_constant

    
.globl btr4_allregs
         .type   btr4_allregs, @function
btr4_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  btr %bx,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   btr4_allregs, .-btr4_allregs

    
.globl btr5
         .type   btr5, @function
btr5:
      

  mov 4096,%eax
  mov 4100,%ebx
  btr %ebx,(%eax)
  jnc .L150_c$
  movb $0x1,8448
.L150_c$: nop
  jnz .L150_z$
  movb $0x2,8449
.L150_z$: nop
  jns .L150_s$
  movb $0x3,8450
.L150_s$: nop
  jnp .L150_p$
  movb $0x4,8451
.L150_p$: nop
  jno .L150_o$
  movb $0x5,8452
.L150_o$: nop

    ret
         .size   btr5, .-btr5

    
.globl btr5_constant
         .type   btr5_constant, @function
btr5_constant:
      

  mov $1,%eax
  mov $2,%ebx
  btr %ebx,(%eax)
  jnc .L151_c$
  movb $0x1,8448
.L151_c$: nop
  jnz .L151_z$
  movb $0x2,8449
.L151_z$: nop
  jns .L151_s$
  movb $0x3,8450
.L151_s$: nop
  jnp .L151_p$
  movb $0x4,8451
.L151_p$: nop
  jno .L151_o$
  movb $0x5,8452
.L151_o$: nop

    ret
         .size   btr5_constant, .-btr5_constant

    
.globl btr5_allregs
         .type   btr5_allregs, @function
btr5_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  btr %ebx,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   btr5_allregs, .-btr5_allregs

    
.globl btr_locked
         .type   btr_locked, @function
btr_locked:
      


  lock btr %ebx,(%eax)


    ret
         .size   btr_locked, .-btr_locked

    
.globl btr_locked_constant
         .type   btr_locked_constant, @function
btr_locked_constant:
      


  lock btr %ebx,(%eax)


    ret
         .size   btr_locked_constant, .-btr_locked_constant

    
.globl btr_locked_allregs
         .type   btr_locked_allregs, @function
btr_locked_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  lock btr %ebx,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   btr_locked_allregs, .-btr_locked_allregs

    
.globl bts1
         .type   bts1, @function
bts1:
      

  mov 4096,%ax
  bts $4,%ax
  mov %ax,8192
  jnc .L152_c$
  movb $0x1,8448
.L152_c$: nop
  jnz .L152_z$
  movb $0x2,8449
.L152_z$: nop
  jns .L152_s$
  movb $0x3,8450
.L152_s$: nop
  jnp .L152_p$
  movb $0x4,8451
.L152_p$: nop
  jno .L152_o$
  movb $0x5,8452
.L152_o$: nop

    ret
         .size   bts1, .-bts1

    
.globl bts1_constant
         .type   bts1_constant, @function
bts1_constant:
      

  mov $1,%ax
  bts $4,%ax
  mov %ax,8192
  jnc .L153_c$
  movb $0x1,8448
.L153_c$: nop
  jnz .L153_z$
  movb $0x2,8449
.L153_z$: nop
  jns .L153_s$
  movb $0x3,8450
.L153_s$: nop
  jnp .L153_p$
  movb $0x4,8451
.L153_p$: nop
  jno .L153_o$
  movb $0x5,8452
.L153_o$: nop

    ret
         .size   bts1_constant, .-bts1_constant

    
.globl bts1_allregs
         .type   bts1_allregs, @function
bts1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  bts $4,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   bts1_allregs, .-bts1_allregs

    
.globl bts2
         .type   bts2, @function
bts2:
      

  mov 4096,%ax
  mov 4100,%bx
  bts %bx,%ax
  mov %ax,8192
  jnc .L154_c$
  movb $0x1,8448
.L154_c$: nop
  jnz .L154_z$
  movb $0x2,8449
.L154_z$: nop
  jns .L154_s$
  movb $0x3,8450
.L154_s$: nop
  jnp .L154_p$
  movb $0x4,8451
.L154_p$: nop
  jno .L154_o$
  movb $0x5,8452
.L154_o$: nop

    ret
         .size   bts2, .-bts2

    
.globl bts2_constant
         .type   bts2_constant, @function
bts2_constant:
      

  mov $1,%ax
  mov $2,%bx
  bts %bx,%ax
  mov %ax,8192
  jnc .L155_c$
  movb $0x1,8448
.L155_c$: nop
  jnz .L155_z$
  movb $0x2,8449
.L155_z$: nop
  jns .L155_s$
  movb $0x3,8450
.L155_s$: nop
  jnp .L155_p$
  movb $0x4,8451
.L155_p$: nop
  jno .L155_o$
  movb $0x5,8452
.L155_o$: nop

    ret
         .size   bts2_constant, .-bts2_constant

    
.globl bts2_allregs
         .type   bts2_allregs, @function
bts2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  bts %bx,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   bts2_allregs, .-bts2_allregs

    
.globl bts3
         .type   bts3, @function
bts3:
      

  mov 4096,%eax
  bts $31,%eax
  mov %eax,8192
  jnc .L156_c$
  movb $0x1,8448
.L156_c$: nop
  jnz .L156_z$
  movb $0x2,8449
.L156_z$: nop
  jns .L156_s$
  movb $0x3,8450
.L156_s$: nop
  jnp .L156_p$
  movb $0x4,8451
.L156_p$: nop
  jno .L156_o$
  movb $0x5,8452
.L156_o$: nop

    ret
         .size   bts3, .-bts3

    
.globl bts3_constant
         .type   bts3_constant, @function
bts3_constant:
      

  mov $1,%eax
  bts $31,%eax
  mov %eax,8192
  jnc .L157_c$
  movb $0x1,8448
.L157_c$: nop
  jnz .L157_z$
  movb $0x2,8449
.L157_z$: nop
  jns .L157_s$
  movb $0x3,8450
.L157_s$: nop
  jnp .L157_p$
  movb $0x4,8451
.L157_p$: nop
  jno .L157_o$
  movb $0x5,8452
.L157_o$: nop

    ret
         .size   bts3_constant, .-bts3_constant

    
.globl bts3_allregs
         .type   bts3_allregs, @function
bts3_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  bts $31,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   bts3_allregs, .-bts3_allregs

    
.globl bts4
         .type   bts4, @function
bts4:
      

  mov 4096,%eax
  mov 4100,%bx
  bts %bx,%eax
  mov %eax,8192
  jnc .L158_c$
  movb $0x1,8448
.L158_c$: nop
  jnz .L158_z$
  movb $0x2,8449
.L158_z$: nop
  jns .L158_s$
  movb $0x3,8450
.L158_s$: nop
  jnp .L158_p$
  movb $0x4,8451
.L158_p$: nop
  jno .L158_o$
  movb $0x5,8452
.L158_o$: nop

    ret
         .size   bts4, .-bts4

    
.globl bts4_constant
         .type   bts4_constant, @function
bts4_constant:
      

  mov $1,%eax
  mov $2,%bx
  bts %bx,%eax
  mov %eax,8192
  jnc .L159_c$
  movb $0x1,8448
.L159_c$: nop
  jnz .L159_z$
  movb $0x2,8449
.L159_z$: nop
  jns .L159_s$
  movb $0x3,8450
.L159_s$: nop
  jnp .L159_p$
  movb $0x4,8451
.L159_p$: nop
  jno .L159_o$
  movb $0x5,8452
.L159_o$: nop

    ret
         .size   bts4_constant, .-bts4_constant

    
.globl bts4_allregs
         .type   bts4_allregs, @function
bts4_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  bts %bx,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   bts4_allregs, .-bts4_allregs

    
.globl bts5
         .type   bts5, @function
bts5:
      

  mov 4096,%eax
  mov 4100,%ebx
  bts %ebx,(%eax)
  jnc .L160_c$
  movb $0x1,8448
.L160_c$: nop
  jnz .L160_z$
  movb $0x2,8449
.L160_z$: nop
  jns .L160_s$
  movb $0x3,8450
.L160_s$: nop
  jnp .L160_p$
  movb $0x4,8451
.L160_p$: nop
  jno .L160_o$
  movb $0x5,8452
.L160_o$: nop

    ret
         .size   bts5, .-bts5

    
.globl bts5_constant
         .type   bts5_constant, @function
bts5_constant:
      

  mov $1,%eax
  mov $2,%ebx
  bts %ebx,(%eax)
  jnc .L161_c$
  movb $0x1,8448
.L161_c$: nop
  jnz .L161_z$
  movb $0x2,8449
.L161_z$: nop
  jns .L161_s$
  movb $0x3,8450
.L161_s$: nop
  jnp .L161_p$
  movb $0x4,8451
.L161_p$: nop
  jno .L161_o$
  movb $0x5,8452
.L161_o$: nop

    ret
         .size   bts5_constant, .-bts5_constant

    
.globl bts5_allregs
         .type   bts5_allregs, @function
bts5_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  bts %ebx,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   bts5_allregs, .-bts5_allregs

    
.globl bts_locked
         .type   bts_locked, @function
bts_locked:
      


  lock bts %ebx,(%eax)


    ret
         .size   bts_locked, .-bts_locked

    
.globl bts_locked_constant
         .type   bts_locked_constant, @function
bts_locked_constant:
      


  lock bts %ebx,(%eax)


    ret
         .size   bts_locked_constant, .-bts_locked_constant

    
.globl bts_locked_allregs
         .type   bts_locked_allregs, @function
bts_locked_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  lock bts %ebx,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   bts_locked_allregs, .-bts_locked_allregs

    
.globl call1
         .type   call1, @function
call1:
      


  .byte 0xe8,0xfb,0xff,0xff,0xff


    ret
         .size   call1, .-call1

    
.globl call1_constant
         .type   call1_constant, @function
call1_constant:
      


  .byte 0xe8,0xfb,0xff,0xff,0xff


    ret
         .size   call1_constant, .-call1_constant

    
.globl call1_allregs
         .type   call1_allregs, @function
call1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xe8,0xfb,0xff,0xff,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   call1_allregs, .-call1_allregs

    
.globl call2
         .type   call2, @function
call2:
      


  call call2


    ret
         .size   call2, .-call2

    
.globl call2_constant
         .type   call2_constant, @function
call2_constant:
      


  call call2


    ret
         .size   call2_constant, .-call2_constant

    
.globl call2_allregs
         .type   call2_allregs, @function
call2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  call call2
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   call2_allregs, .-call2_allregs

    
.globl call3
         .type   call3, @function
call3:
      


  call malloc


    ret
         .size   call3, .-call3

    
.globl call3_constant
         .type   call3_constant, @function
call3_constant:
      


  call malloc


    ret
         .size   call3_constant, .-call3_constant

    
.globl call3_allregs
         .type   call3_allregs, @function
call3_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  call malloc
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   call3_allregs, .-call3_allregs

    
.globl call5
         .type   call5, @function
call5:
      

  mov 4096,%eax
  call *%eax
  jnc .L162_c$
  movb $0x1,8448
.L162_c$: nop
  jnz .L162_z$
  movb $0x2,8449
.L162_z$: nop
  jns .L162_s$
  movb $0x3,8450
.L162_s$: nop
  jnp .L162_p$
  movb $0x4,8451
.L162_p$: nop
  jno .L162_o$
  movb $0x5,8452
.L162_o$: nop

    ret
         .size   call5, .-call5

    
.globl call5_constant
         .type   call5_constant, @function
call5_constant:
      

  mov $1,%eax
  call *%eax
  jnc .L163_c$
  movb $0x1,8448
.L163_c$: nop
  jnz .L163_z$
  movb $0x2,8449
.L163_z$: nop
  jns .L163_s$
  movb $0x3,8450
.L163_s$: nop
  jnp .L163_p$
  movb $0x4,8451
.L163_p$: nop
  jno .L163_o$
  movb $0x5,8452
.L163_o$: nop

    ret
         .size   call5_constant, .-call5_constant

    
.globl call5_allregs
         .type   call5_allregs, @function
call5_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  call *%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   call5_allregs, .-call5_allregs

    
.globl call6
         .type   call6, @function
call6:
      

  mov 4096,%eax
  call *(%eax)
  jnc .L164_c$
  movb $0x1,8448
.L164_c$: nop
  jnz .L164_z$
  movb $0x2,8449
.L164_z$: nop
  jns .L164_s$
  movb $0x3,8450
.L164_s$: nop
  jnp .L164_p$
  movb $0x4,8451
.L164_p$: nop
  jno .L164_o$
  movb $0x5,8452
.L164_o$: nop

    ret
         .size   call6, .-call6

    
.globl call6_constant
         .type   call6_constant, @function
call6_constant:
      

  mov $1,%eax
  call *(%eax)
  jnc .L165_c$
  movb $0x1,8448
.L165_c$: nop
  jnz .L165_z$
  movb $0x2,8449
.L165_z$: nop
  jns .L165_s$
  movb $0x3,8450
.L165_s$: nop
  jnp .L165_p$
  movb $0x4,8451
.L165_p$: nop
  jno .L165_o$
  movb $0x5,8452
.L165_o$: nop

    ret
         .size   call6_constant, .-call6_constant

    
.globl call6_allregs
         .type   call6_allregs, @function
call6_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  call *(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   call6_allregs, .-call6_allregs

    
.globl cbw1
         .type   cbw1, @function
cbw1:
      

  mov 4096,%ax
  .byte 0x98
  mov %eax,8192
  jnc .L166_c$
  movb $0x1,8448
.L166_c$: nop
  jnz .L166_z$
  movb $0x2,8449
.L166_z$: nop
  jns .L166_s$
  movb $0x3,8450
.L166_s$: nop
  jnp .L166_p$
  movb $0x4,8451
.L166_p$: nop
  jno .L166_o$
  movb $0x5,8452
.L166_o$: nop

    ret
         .size   cbw1, .-cbw1

    
.globl cbw1_constant
         .type   cbw1_constant, @function
cbw1_constant:
      

  mov $1,%ax
  .byte 0x98
  mov %eax,8192
  jnc .L167_c$
  movb $0x1,8448
.L167_c$: nop
  jnz .L167_z$
  movb $0x2,8449
.L167_z$: nop
  jns .L167_s$
  movb $0x3,8450
.L167_s$: nop
  jnp .L167_p$
  movb $0x4,8451
.L167_p$: nop
  jno .L167_o$
  movb $0x5,8452
.L167_o$: nop

    ret
         .size   cbw1_constant, .-cbw1_constant

    
.globl cbw1_allregs
         .type   cbw1_allregs, @function
cbw1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x98
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   cbw1_allregs, .-cbw1_allregs

    
.globl cbw2
         .type   cbw2, @function
cbw2:
      

  mov 4096,%al
  .byte 0x66,0x98
  mov %ax,8192
  jnc .L168_c$
  movb $0x1,8448
.L168_c$: nop
  jnz .L168_z$
  movb $0x2,8449
.L168_z$: nop
  jns .L168_s$
  movb $0x3,8450
.L168_s$: nop
  jnp .L168_p$
  movb $0x4,8451
.L168_p$: nop
  jno .L168_o$
  movb $0x5,8452
.L168_o$: nop

    ret
         .size   cbw2, .-cbw2

    
.globl cbw2_constant
         .type   cbw2_constant, @function
cbw2_constant:
      

  mov $1,%al
  .byte 0x66,0x98
  mov %ax,8192
  jnc .L169_c$
  movb $0x1,8448
.L169_c$: nop
  jnz .L169_z$
  movb $0x2,8449
.L169_z$: nop
  jns .L169_s$
  movb $0x3,8450
.L169_s$: nop
  jnp .L169_p$
  movb $0x4,8451
.L169_p$: nop
  jno .L169_o$
  movb $0x5,8452
.L169_o$: nop

    ret
         .size   cbw2_constant, .-cbw2_constant

    
.globl cbw2_allregs
         .type   cbw2_allregs, @function
cbw2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0x98
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   cbw2_allregs, .-cbw2_allregs

    
.globl clc_flags_clear
         .type   clc_flags_clear, @function
clc_flags_clear:
      
  movl $0x2,%eax
  decl %eax

  clc
  jnc .L170_c$
  movb $0x1,8448
.L170_c$: nop
  jnz .L170_z$
  movb $0x2,8449
.L170_z$: nop
  jns .L170_s$
  movb $0x3,8450
.L170_s$: nop
  jnp .L170_p$
  movb $0x4,8451
.L170_p$: nop
  jno .L170_o$
  movb $0x5,8452
.L170_o$: nop

    ret
         .size   clc_flags_clear, .-clc_flags_clear

    
.globl clc_flags_clear_constant
         .type   clc_flags_clear_constant, @function
clc_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax

  clc
  jnc .L171_c$
  movb $0x1,8448
.L171_c$: nop
  jnz .L171_z$
  movb $0x2,8449
.L171_z$: nop
  jns .L171_s$
  movb $0x3,8450
.L171_s$: nop
  jnp .L171_p$
  movb $0x4,8451
.L171_p$: nop
  jno .L171_o$
  movb $0x5,8452
.L171_o$: nop

    ret
         .size   clc_flags_clear_constant, .-clc_flags_clear_constant

    
.globl clc_flags_clear_allregs
         .type   clc_flags_clear_allregs, @function
clc_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  clc
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   clc_flags_clear_allregs, .-clc_flags_clear_allregs

    
.globl clc_flags_set1
         .type   clc_flags_set1, @function
clc_flags_set1:
      
  movl $0x0,%eax
  negl %eax

  clc
  jnc .L172_c$
  movb $0x1,8448
.L172_c$: nop
  jnz .L172_z$
  movb $0x2,8449
.L172_z$: nop
  jns .L172_s$
  movb $0x3,8450
.L172_s$: nop
  jnp .L172_p$
  movb $0x4,8451
.L172_p$: nop
  jno .L172_o$
  movb $0x5,8452
.L172_o$: nop

    ret
         .size   clc_flags_set1, .-clc_flags_set1

    
.globl clc_flags_set1_constant
         .type   clc_flags_set1_constant, @function
clc_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax

  clc
  jnc .L173_c$
  movb $0x1,8448
.L173_c$: nop
  jnz .L173_z$
  movb $0x2,8449
.L173_z$: nop
  jns .L173_s$
  movb $0x3,8450
.L173_s$: nop
  jnp .L173_p$
  movb $0x4,8451
.L173_p$: nop
  jno .L173_o$
  movb $0x5,8452
.L173_o$: nop

    ret
         .size   clc_flags_set1_constant, .-clc_flags_set1_constant

    
.globl clc_flags_set1_allregs
         .type   clc_flags_set1_allregs, @function
clc_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  clc
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   clc_flags_set1_allregs, .-clc_flags_set1_allregs

    
.globl clc_flags_set2
         .type   clc_flags_set2, @function
clc_flags_set2:
      
  movl $0x2,%eax
  negl %eax

  clc
  jnc .L174_c$
  movb $0x1,8448
.L174_c$: nop
  jnz .L174_z$
  movb $0x2,8449
.L174_z$: nop
  jns .L174_s$
  movb $0x3,8450
.L174_s$: nop
  jnp .L174_p$
  movb $0x4,8451
.L174_p$: nop
  jno .L174_o$
  movb $0x5,8452
.L174_o$: nop

    ret
         .size   clc_flags_set2, .-clc_flags_set2

    
.globl clc_flags_set2_constant
         .type   clc_flags_set2_constant, @function
clc_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax

  clc
  jnc .L175_c$
  movb $0x1,8448
.L175_c$: nop
  jnz .L175_z$
  movb $0x2,8449
.L175_z$: nop
  jns .L175_s$
  movb $0x3,8450
.L175_s$: nop
  jnp .L175_p$
  movb $0x4,8451
.L175_p$: nop
  jno .L175_o$
  movb $0x5,8452
.L175_o$: nop

    ret
         .size   clc_flags_set2_constant, .-clc_flags_set2_constant

    
.globl clc_flags_set2_allregs
         .type   clc_flags_set2_allregs, @function
clc_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  clc
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   clc_flags_set2_allregs, .-clc_flags_set2_allregs

    
.globl clc_flags_cmp
         .type   clc_flags_cmp, @function
clc_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  clc
  jnc .L176_c$
  movb $0x1,8448
.L176_c$: nop
  jnz .L176_z$
  movb $0x2,8449
.L176_z$: nop
  jns .L176_s$
  movb $0x3,8450
.L176_s$: nop
  jnp .L176_p$
  movb $0x4,8451
.L176_p$: nop
  jno .L176_o$
  movb $0x5,8452
.L176_o$: nop

    ret
         .size   clc_flags_cmp, .-clc_flags_cmp

    
.globl clc_flags_cmp_constant
         .type   clc_flags_cmp_constant, @function
clc_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  clc
  jnc .L177_c$
  movb $0x1,8448
.L177_c$: nop
  jnz .L177_z$
  movb $0x2,8449
.L177_z$: nop
  jns .L177_s$
  movb $0x3,8450
.L177_s$: nop
  jnp .L177_p$
  movb $0x4,8451
.L177_p$: nop
  jno .L177_o$
  movb $0x5,8452
.L177_o$: nop

    ret
         .size   clc_flags_cmp_constant, .-clc_flags_cmp_constant

    
.globl clc_flags_cmp_allregs
         .type   clc_flags_cmp_allregs, @function
clc_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  clc
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   clc_flags_cmp_allregs, .-clc_flags_cmp_allregs

    
.globl cld
         .type   cld, @function
cld:
      


  cld


    ret
         .size   cld, .-cld

    
.globl cld_constant
         .type   cld_constant, @function
cld_constant:
      


  cld


    ret
         .size   cld_constant, .-cld_constant

    
.globl cld_allregs
         .type   cld_allregs, @function
cld_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  cld
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   cld_allregs, .-cld_allregs

    
.globl cli
         .type   cli, @function
cli:
      


  cli


    ret
         .size   cli, .-cli

    
.globl cli_constant
         .type   cli_constant, @function
cli_constant:
      


  cli


    ret
         .size   cli_constant, .-cli_constant

    
.globl cli_allregs
         .type   cli_allregs, @function
cli_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  cli
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   cli_allregs, .-cli_allregs

    
.globl clts
         .type   clts, @function
clts:
      


  clts


    ret
         .size   clts, .-clts

    
.globl clts_constant
         .type   clts_constant, @function
clts_constant:
      


  clts


    ret
         .size   clts_constant, .-clts_constant

    
.globl clts_allregs
         .type   clts_allregs, @function
clts_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  clts
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   clts_allregs, .-clts_allregs

    
.globl cmc_flags_clear
         .type   cmc_flags_clear, @function
cmc_flags_clear:
      
  movl $0x2,%eax
  decl %eax

  cmc
  jnc .L178_c$
  movb $0x1,8448
.L178_c$: nop
  jnz .L178_z$
  movb $0x2,8449
.L178_z$: nop
  jns .L178_s$
  movb $0x3,8450
.L178_s$: nop
  jnp .L178_p$
  movb $0x4,8451
.L178_p$: nop
  jno .L178_o$
  movb $0x5,8452
.L178_o$: nop

    ret
         .size   cmc_flags_clear, .-cmc_flags_clear

    
.globl cmc_flags_clear_constant
         .type   cmc_flags_clear_constant, @function
cmc_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax

  cmc
  jnc .L179_c$
  movb $0x1,8448
.L179_c$: nop
  jnz .L179_z$
  movb $0x2,8449
.L179_z$: nop
  jns .L179_s$
  movb $0x3,8450
.L179_s$: nop
  jnp .L179_p$
  movb $0x4,8451
.L179_p$: nop
  jno .L179_o$
  movb $0x5,8452
.L179_o$: nop

    ret
         .size   cmc_flags_clear_constant, .-cmc_flags_clear_constant

    
.globl cmc_flags_clear_allregs
         .type   cmc_flags_clear_allregs, @function
cmc_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  cmc
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   cmc_flags_clear_allregs, .-cmc_flags_clear_allregs

    
.globl cmc_flags_set1
         .type   cmc_flags_set1, @function
cmc_flags_set1:
      
  movl $0x0,%eax
  negl %eax

  cmc
  jnc .L180_c$
  movb $0x1,8448
.L180_c$: nop
  jnz .L180_z$
  movb $0x2,8449
.L180_z$: nop
  jns .L180_s$
  movb $0x3,8450
.L180_s$: nop
  jnp .L180_p$
  movb $0x4,8451
.L180_p$: nop
  jno .L180_o$
  movb $0x5,8452
.L180_o$: nop

    ret
         .size   cmc_flags_set1, .-cmc_flags_set1

    
.globl cmc_flags_set1_constant
         .type   cmc_flags_set1_constant, @function
cmc_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax

  cmc
  jnc .L181_c$
  movb $0x1,8448
.L181_c$: nop
  jnz .L181_z$
  movb $0x2,8449
.L181_z$: nop
  jns .L181_s$
  movb $0x3,8450
.L181_s$: nop
  jnp .L181_p$
  movb $0x4,8451
.L181_p$: nop
  jno .L181_o$
  movb $0x5,8452
.L181_o$: nop

    ret
         .size   cmc_flags_set1_constant, .-cmc_flags_set1_constant

    
.globl cmc_flags_set1_allregs
         .type   cmc_flags_set1_allregs, @function
cmc_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  cmc
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   cmc_flags_set1_allregs, .-cmc_flags_set1_allregs

    
.globl cmc_flags_set2
         .type   cmc_flags_set2, @function
cmc_flags_set2:
      
  movl $0x2,%eax
  negl %eax

  cmc
  jnc .L182_c$
  movb $0x1,8448
.L182_c$: nop
  jnz .L182_z$
  movb $0x2,8449
.L182_z$: nop
  jns .L182_s$
  movb $0x3,8450
.L182_s$: nop
  jnp .L182_p$
  movb $0x4,8451
.L182_p$: nop
  jno .L182_o$
  movb $0x5,8452
.L182_o$: nop

    ret
         .size   cmc_flags_set2, .-cmc_flags_set2

    
.globl cmc_flags_set2_constant
         .type   cmc_flags_set2_constant, @function
cmc_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax

  cmc
  jnc .L183_c$
  movb $0x1,8448
.L183_c$: nop
  jnz .L183_z$
  movb $0x2,8449
.L183_z$: nop
  jns .L183_s$
  movb $0x3,8450
.L183_s$: nop
  jnp .L183_p$
  movb $0x4,8451
.L183_p$: nop
  jno .L183_o$
  movb $0x5,8452
.L183_o$: nop

    ret
         .size   cmc_flags_set2_constant, .-cmc_flags_set2_constant

    
.globl cmc_flags_set2_allregs
         .type   cmc_flags_set2_allregs, @function
cmc_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  cmc
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   cmc_flags_set2_allregs, .-cmc_flags_set2_allregs

    
.globl cmc_flags_cmp
         .type   cmc_flags_cmp, @function
cmc_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  cmc
  jnc .L184_c$
  movb $0x1,8448
.L184_c$: nop
  jnz .L184_z$
  movb $0x2,8449
.L184_z$: nop
  jns .L184_s$
  movb $0x3,8450
.L184_s$: nop
  jnp .L184_p$
  movb $0x4,8451
.L184_p$: nop
  jno .L184_o$
  movb $0x5,8452
.L184_o$: nop

    ret
         .size   cmc_flags_cmp, .-cmc_flags_cmp

    
.globl cmc_flags_cmp_constant
         .type   cmc_flags_cmp_constant, @function
cmc_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  cmc
  jnc .L185_c$
  movb $0x1,8448
.L185_c$: nop
  jnz .L185_z$
  movb $0x2,8449
.L185_z$: nop
  jns .L185_s$
  movb $0x3,8450
.L185_s$: nop
  jnp .L185_p$
  movb $0x4,8451
.L185_p$: nop
  jno .L185_o$
  movb $0x5,8452
.L185_o$: nop

    ret
         .size   cmc_flags_cmp_constant, .-cmc_flags_cmp_constant

    
.globl cmc_flags_cmp_allregs
         .type   cmc_flags_cmp_allregs, @function
cmc_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  cmc
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   cmc_flags_cmp_allregs, .-cmc_flags_cmp_allregs

    
.globl cmp1
         .type   cmp1, @function
cmp1:
      

  mov 4096,%al
  .byte 0x3c,0x02
  jnc .L186_c$
  movb $0x1,8448
.L186_c$: nop
  jnz .L186_z$
  movb $0x2,8449
.L186_z$: nop
  jns .L186_s$
  movb $0x3,8450
.L186_s$: nop
  jnp .L186_p$
  movb $0x4,8451
.L186_p$: nop
  jno .L186_o$
  movb $0x5,8452
.L186_o$: nop

    ret
         .size   cmp1, .-cmp1

    
.globl cmp1_constant
         .type   cmp1_constant, @function
cmp1_constant:
      

  mov $1,%al
  .byte 0x3c,0x02
  jnc .L187_c$
  movb $0x1,8448
.L187_c$: nop
  jnz .L187_z$
  movb $0x2,8449
.L187_z$: nop
  jns .L187_s$
  movb $0x3,8450
.L187_s$: nop
  jnp .L187_p$
  movb $0x4,8451
.L187_p$: nop
  jno .L187_o$
  movb $0x5,8452
.L187_o$: nop

    ret
         .size   cmp1_constant, .-cmp1_constant

    
.globl cmp1_allregs
         .type   cmp1_allregs, @function
cmp1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x3c,0x02
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   cmp1_allregs, .-cmp1_allregs

    
.globl cmp2
         .type   cmp2, @function
cmp2:
      

  mov 4096,%al
  .byte 0x3c,0xfe
  jnc .L188_c$
  movb $0x1,8448
.L188_c$: nop
  jnz .L188_z$
  movb $0x2,8449
.L188_z$: nop
  jns .L188_s$
  movb $0x3,8450
.L188_s$: nop
  jnp .L188_p$
  movb $0x4,8451
.L188_p$: nop
  jno .L188_o$
  movb $0x5,8452
.L188_o$: nop

    ret
         .size   cmp2, .-cmp2

    
.globl cmp2_constant
         .type   cmp2_constant, @function
cmp2_constant:
      

  mov $1,%al
  .byte 0x3c,0xfe
  jnc .L189_c$
  movb $0x1,8448
.L189_c$: nop
  jnz .L189_z$
  movb $0x2,8449
.L189_z$: nop
  jns .L189_s$
  movb $0x3,8450
.L189_s$: nop
  jnp .L189_p$
  movb $0x4,8451
.L189_p$: nop
  jno .L189_o$
  movb $0x5,8452
.L189_o$: nop

    ret
         .size   cmp2_constant, .-cmp2_constant

    
.globl cmp2_allregs
         .type   cmp2_allregs, @function
cmp2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x3c,0xfe
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   cmp2_allregs, .-cmp2_allregs

    
.globl cmp3
         .type   cmp3, @function
cmp3:
      

  mov 4096,%ax
  .byte 0x66,0x3d,0x02,0x00
  jnc .L190_c$
  movb $0x1,8448
.L190_c$: nop
  jnz .L190_z$
  movb $0x2,8449
.L190_z$: nop
  jns .L190_s$
  movb $0x3,8450
.L190_s$: nop
  jnp .L190_p$
  movb $0x4,8451
.L190_p$: nop
  jno .L190_o$
  movb $0x5,8452
.L190_o$: nop

    ret
         .size   cmp3, .-cmp3

    
.globl cmp3_constant
         .type   cmp3_constant, @function
cmp3_constant:
      

  mov $1,%ax
  .byte 0x66,0x3d,0x02,0x00
  jnc .L191_c$
  movb $0x1,8448
.L191_c$: nop
  jnz .L191_z$
  movb $0x2,8449
.L191_z$: nop
  jns .L191_s$
  movb $0x3,8450
.L191_s$: nop
  jnp .L191_p$
  movb $0x4,8451
.L191_p$: nop
  jno .L191_o$
  movb $0x5,8452
.L191_o$: nop

    ret
         .size   cmp3_constant, .-cmp3_constant

    
.globl cmp3_allregs
         .type   cmp3_allregs, @function
cmp3_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0x3d,0x02,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   cmp3_allregs, .-cmp3_allregs

    
.globl cmp4
         .type   cmp4, @function
cmp4:
      

  mov 4096,%ax
  .byte 0x66,0x3d,0xfe,0xff
  jnc .L192_c$
  movb $0x1,8448
.L192_c$: nop
  jnz .L192_z$
  movb $0x2,8449
.L192_z$: nop
  jns .L192_s$
  movb $0x3,8450
.L192_s$: nop
  jnp .L192_p$
  movb $0x4,8451
.L192_p$: nop
  jno .L192_o$
  movb $0x5,8452
.L192_o$: nop

    ret
         .size   cmp4, .-cmp4

    
.globl cmp4_constant
         .type   cmp4_constant, @function
cmp4_constant:
      

  mov $1,%ax
  .byte 0x66,0x3d,0xfe,0xff
  jnc .L193_c$
  movb $0x1,8448
.L193_c$: nop
  jnz .L193_z$
  movb $0x2,8449
.L193_z$: nop
  jns .L193_s$
  movb $0x3,8450
.L193_s$: nop
  jnp .L193_p$
  movb $0x4,8451
.L193_p$: nop
  jno .L193_o$
  movb $0x5,8452
.L193_o$: nop

    ret
         .size   cmp4_constant, .-cmp4_constant

    
.globl cmp4_allregs
         .type   cmp4_allregs, @function
cmp4_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0x3d,0xfe,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   cmp4_allregs, .-cmp4_allregs

    
.globl cmp5
         .type   cmp5, @function
cmp5:
      

  mov 4096,%eax
  .byte 0x3d,0x02,0x00,0x00,0x00
  jnc .L194_c$
  movb $0x1,8448
.L194_c$: nop
  jnz .L194_z$
  movb $0x2,8449
.L194_z$: nop
  jns .L194_s$
  movb $0x3,8450
.L194_s$: nop
  jnp .L194_p$
  movb $0x4,8451
.L194_p$: nop
  jno .L194_o$
  movb $0x5,8452
.L194_o$: nop

    ret
         .size   cmp5, .-cmp5

    
.globl cmp5_constant
         .type   cmp5_constant, @function
cmp5_constant:
      

  mov $1,%eax
  .byte 0x3d,0x02,0x00,0x00,0x00
  jnc .L195_c$
  movb $0x1,8448
.L195_c$: nop
  jnz .L195_z$
  movb $0x2,8449
.L195_z$: nop
  jns .L195_s$
  movb $0x3,8450
.L195_s$: nop
  jnp .L195_p$
  movb $0x4,8451
.L195_p$: nop
  jno .L195_o$
  movb $0x5,8452
.L195_o$: nop

    ret
         .size   cmp5_constant, .-cmp5_constant

    
.globl cmp5_allregs
         .type   cmp5_allregs, @function
cmp5_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x3d,0x02,0x00,0x00,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   cmp5_allregs, .-cmp5_allregs

    
.globl cmp6
         .type   cmp6, @function
cmp6:
      

  mov 4096,%eax
  .byte 0x3d,0xfe,0xff,0xff,0xff
  jnc .L196_c$
  movb $0x1,8448
.L196_c$: nop
  jnz .L196_z$
  movb $0x2,8449
.L196_z$: nop
  jns .L196_s$
  movb $0x3,8450
.L196_s$: nop
  jnp .L196_p$
  movb $0x4,8451
.L196_p$: nop
  jno .L196_o$
  movb $0x5,8452
.L196_o$: nop

    ret
         .size   cmp6, .-cmp6

    
.globl cmp6_constant
         .type   cmp6_constant, @function
cmp6_constant:
      

  mov $1,%eax
  .byte 0x3d,0xfe,0xff,0xff,0xff
  jnc .L197_c$
  movb $0x1,8448
.L197_c$: nop
  jnz .L197_z$
  movb $0x2,8449
.L197_z$: nop
  jns .L197_s$
  movb $0x3,8450
.L197_s$: nop
  jnp .L197_p$
  movb $0x4,8451
.L197_p$: nop
  jno .L197_o$
  movb $0x5,8452
.L197_o$: nop

    ret
         .size   cmp6_constant, .-cmp6_constant

    
.globl cmp6_allregs
         .type   cmp6_allregs, @function
cmp6_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x3d,0xfe,0xff,0xff,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   cmp6_allregs, .-cmp6_allregs

    
.globl cmp7
         .type   cmp7, @function
cmp7:
      

  mov 4096,%eax
  mov 4100,%ebp
  cmpl 8(%ebp), %eax
  jnc .L198_c$
  movb $0x1,8448
.L198_c$: nop
  jnz .L198_z$
  movb $0x2,8449
.L198_z$: nop
  jns .L198_s$
  movb $0x3,8450
.L198_s$: nop
  jnp .L198_p$
  movb $0x4,8451
.L198_p$: nop
  jno .L198_o$
  movb $0x5,8452
.L198_o$: nop

    ret
         .size   cmp7, .-cmp7

    
.globl cmp7_constant
         .type   cmp7_constant, @function
cmp7_constant:
      

  mov $1,%eax
  mov $2,%ebp
  cmpl 8(%ebp), %eax
  jnc .L199_c$
  movb $0x1,8448
.L199_c$: nop
  jnz .L199_z$
  movb $0x2,8449
.L199_z$: nop
  jns .L199_s$
  movb $0x3,8450
.L199_s$: nop
  jnp .L199_p$
  movb $0x4,8451
.L199_p$: nop
  jno .L199_o$
  movb $0x5,8452
.L199_o$: nop

    ret
         .size   cmp7_constant, .-cmp7_constant

    
.globl cmp7_allregs
         .type   cmp7_allregs, @function
cmp7_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  cmpl 8(%ebp), %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   cmp7_allregs, .-cmp7_allregs

    
.globl cmp8
         .type   cmp8, @function
cmp8:
      

  mov 4096,%eax
  mov 4100,%ebp
  cmpl $100, 7(%eax,%ebp)
  jnc .L200_c$
  movb $0x1,8448
.L200_c$: nop
  jnz .L200_z$
  movb $0x2,8449
.L200_z$: nop
  jns .L200_s$
  movb $0x3,8450
.L200_s$: nop
  jnp .L200_p$
  movb $0x4,8451
.L200_p$: nop
  jno .L200_o$
  movb $0x5,8452
.L200_o$: nop

    ret
         .size   cmp8, .-cmp8

    
.globl cmp8_constant
         .type   cmp8_constant, @function
cmp8_constant:
      

  mov $1,%eax
  mov $2,%ebp
  cmpl $100, 7(%eax,%ebp)
  jnc .L201_c$
  movb $0x1,8448
.L201_c$: nop
  jnz .L201_z$
  movb $0x2,8449
.L201_z$: nop
  jns .L201_s$
  movb $0x3,8450
.L201_s$: nop
  jnp .L201_p$
  movb $0x4,8451
.L201_p$: nop
  jno .L201_o$
  movb $0x5,8452
.L201_o$: nop

    ret
         .size   cmp8_constant, .-cmp8_constant

    
.globl cmp8_allregs
         .type   cmp8_allregs, @function
cmp8_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  cmpl $100, 7(%eax,%ebp)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   cmp8_allregs, .-cmp8_allregs

    
.globl cmps1
         .type   cmps1, @function
cmps1:
      

  mov 4096,%edi
  mov 4100,%esi
  .byte 0xa6
  jnc .L202_c$
  movb $0x1,8448
.L202_c$: nop
  jnz .L202_z$
  movb $0x2,8449
.L202_z$: nop
  jns .L202_s$
  movb $0x3,8450
.L202_s$: nop
  jnp .L202_p$
  movb $0x4,8451
.L202_p$: nop
  jno .L202_o$
  movb $0x5,8452
.L202_o$: nop

    ret
         .size   cmps1, .-cmps1

    
.globl cmps1_constant
         .type   cmps1_constant, @function
cmps1_constant:
      

  mov $1,%edi
  mov $2,%esi
  .byte 0xa6
  jnc .L203_c$
  movb $0x1,8448
.L203_c$: nop
  jnz .L203_z$
  movb $0x2,8449
.L203_z$: nop
  jns .L203_s$
  movb $0x3,8450
.L203_s$: nop
  jnp .L203_p$
  movb $0x4,8451
.L203_p$: nop
  jno .L203_o$
  movb $0x5,8452
.L203_o$: nop

    ret
         .size   cmps1_constant, .-cmps1_constant

    
.globl cmps1_allregs
         .type   cmps1_allregs, @function
cmps1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xa6
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   cmps1_allregs, .-cmps1_allregs

    
.globl cmps2
         .type   cmps2, @function
cmps2:
      

  mov 4096,%di
  mov 4100,%si
  .byte 0x67,0xa6
  jnc .L204_c$
  movb $0x1,8448
.L204_c$: nop
  jnz .L204_z$
  movb $0x2,8449
.L204_z$: nop
  jns .L204_s$
  movb $0x3,8450
.L204_s$: nop
  jnp .L204_p$
  movb $0x4,8451
.L204_p$: nop
  jno .L204_o$
  movb $0x5,8452
.L204_o$: nop

    ret
         .size   cmps2, .-cmps2

    
.globl cmps2_constant
         .type   cmps2_constant, @function
cmps2_constant:
      

  mov $1,%di
  mov $2,%si
  .byte 0x67,0xa6
  jnc .L205_c$
  movb $0x1,8448
.L205_c$: nop
  jnz .L205_z$
  movb $0x2,8449
.L205_z$: nop
  jns .L205_s$
  movb $0x3,8450
.L205_s$: nop
  jnp .L205_p$
  movb $0x4,8451
.L205_p$: nop
  jno .L205_o$
  movb $0x5,8452
.L205_o$: nop

    ret
         .size   cmps2_constant, .-cmps2_constant

    
.globl cmps2_allregs
         .type   cmps2_allregs, @function
cmps2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x67,0xa6
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   cmps2_allregs, .-cmps2_allregs

    
.globl cmps3
         .type   cmps3, @function
cmps3:
      

  mov 4096,%edi
  mov 4100,%esi
  .byte 0xa7
  jnc .L206_c$
  movb $0x1,8448
.L206_c$: nop
  jnz .L206_z$
  movb $0x2,8449
.L206_z$: nop
  jns .L206_s$
  movb $0x3,8450
.L206_s$: nop
  jnp .L206_p$
  movb $0x4,8451
.L206_p$: nop
  jno .L206_o$
  movb $0x5,8452
.L206_o$: nop

    ret
         .size   cmps3, .-cmps3

    
.globl cmps3_constant
         .type   cmps3_constant, @function
cmps3_constant:
      

  mov $1,%edi
  mov $2,%esi
  .byte 0xa7
  jnc .L207_c$
  movb $0x1,8448
.L207_c$: nop
  jnz .L207_z$
  movb $0x2,8449
.L207_z$: nop
  jns .L207_s$
  movb $0x3,8450
.L207_s$: nop
  jnp .L207_p$
  movb $0x4,8451
.L207_p$: nop
  jno .L207_o$
  movb $0x5,8452
.L207_o$: nop

    ret
         .size   cmps3_constant, .-cmps3_constant

    
.globl cmps3_allregs
         .type   cmps3_allregs, @function
cmps3_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xa7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   cmps3_allregs, .-cmps3_allregs

    
.globl cmps4
         .type   cmps4, @function
cmps4:
      

  mov 4096,%edi
  mov 4100,%esi
  .byte 0x66,0xa7
  jnc .L208_c$
  movb $0x1,8448
.L208_c$: nop
  jnz .L208_z$
  movb $0x2,8449
.L208_z$: nop
  jns .L208_s$
  movb $0x3,8450
.L208_s$: nop
  jnp .L208_p$
  movb $0x4,8451
.L208_p$: nop
  jno .L208_o$
  movb $0x5,8452
.L208_o$: nop

    ret
         .size   cmps4, .-cmps4

    
.globl cmps4_constant
         .type   cmps4_constant, @function
cmps4_constant:
      

  mov $1,%edi
  mov $2,%esi
  .byte 0x66,0xa7
  jnc .L209_c$
  movb $0x1,8448
.L209_c$: nop
  jnz .L209_z$
  movb $0x2,8449
.L209_z$: nop
  jns .L209_s$
  movb $0x3,8450
.L209_s$: nop
  jnp .L209_p$
  movb $0x4,8451
.L209_p$: nop
  jno .L209_o$
  movb $0x5,8452
.L209_o$: nop

    ret
         .size   cmps4_constant, .-cmps4_constant

    
.globl cmps4_allregs
         .type   cmps4_allregs, @function
cmps4_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0xa7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   cmps4_allregs, .-cmps4_allregs

    
.globl cmps5
         .type   cmps5, @function
cmps5:
      

  mov 4096,%di
  mov 4100,%si
  .byte 0x66,0x67,0xa7
  jnc .L210_c$
  movb $0x1,8448
.L210_c$: nop
  jnz .L210_z$
  movb $0x2,8449
.L210_z$: nop
  jns .L210_s$
  movb $0x3,8450
.L210_s$: nop
  jnp .L210_p$
  movb $0x4,8451
.L210_p$: nop
  jno .L210_o$
  movb $0x5,8452
.L210_o$: nop

    ret
         .size   cmps5, .-cmps5

    
.globl cmps5_constant
         .type   cmps5_constant, @function
cmps5_constant:
      

  mov $1,%di
  mov $2,%si
  .byte 0x66,0x67,0xa7
  jnc .L211_c$
  movb $0x1,8448
.L211_c$: nop
  jnz .L211_z$
  movb $0x2,8449
.L211_z$: nop
  jns .L211_s$
  movb $0x3,8450
.L211_s$: nop
  jnp .L211_p$
  movb $0x4,8451
.L211_p$: nop
  jno .L211_o$
  movb $0x5,8452
.L211_o$: nop

    ret
         .size   cmps5_constant, .-cmps5_constant

    
.globl cmps5_allregs
         .type   cmps5_allregs, @function
cmps5_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0x67,0xa7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   cmps5_allregs, .-cmps5_allregs

    
.globl cmps6
         .type   cmps6, @function
cmps6:
      

  mov 4096,%di
  mov 4100,%si
  .byte 0x67,0xa7
  jnc .L212_c$
  movb $0x1,8448
.L212_c$: nop
  jnz .L212_z$
  movb $0x2,8449
.L212_z$: nop
  jns .L212_s$
  movb $0x3,8450
.L212_s$: nop
  jnp .L212_p$
  movb $0x4,8451
.L212_p$: nop
  jno .L212_o$
  movb $0x5,8452
.L212_o$: nop

    ret
         .size   cmps6, .-cmps6

    
.globl cmps6_constant
         .type   cmps6_constant, @function
cmps6_constant:
      

  mov $1,%di
  mov $2,%si
  .byte 0x67,0xa7
  jnc .L213_c$
  movb $0x1,8448
.L213_c$: nop
  jnz .L213_z$
  movb $0x2,8449
.L213_z$: nop
  jns .L213_s$
  movb $0x3,8450
.L213_s$: nop
  jnp .L213_p$
  movb $0x4,8451
.L213_p$: nop
  jno .L213_o$
  movb $0x5,8452
.L213_o$: nop

    ret
         .size   cmps6_constant, .-cmps6_constant

    
.globl cmps6_allregs
         .type   cmps6_allregs, @function
cmps6_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x67,0xa7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   cmps6_allregs, .-cmps6_allregs

    
.globl cmps_seg
         .type   cmps_seg, @function
cmps_seg:
      


  .byte 0x36,0x67,0xa7


    ret
         .size   cmps_seg, .-cmps_seg

    
.globl cmps_seg_constant
         .type   cmps_seg_constant, @function
cmps_seg_constant:
      


  .byte 0x36,0x67,0xa7


    ret
         .size   cmps_seg_constant, .-cmps_seg_constant

    
.globl cmps_seg_allregs
         .type   cmps_seg_allregs, @function
cmps_seg_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x36,0x67,0xa7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   cmps_seg_allregs, .-cmps_seg_allregs

    
.globl cwd1
         .type   cwd1, @function
cwd1:
      

  mov 4096,%eax
  .byte 0x99
  mov %eax,8192
  mov %edx,8196
  jnc .L214_c$
  movb $0x1,8448
.L214_c$: nop
  jnz .L214_z$
  movb $0x2,8449
.L214_z$: nop
  jns .L214_s$
  movb $0x3,8450
.L214_s$: nop
  jnp .L214_p$
  movb $0x4,8451
.L214_p$: nop
  jno .L214_o$
  movb $0x5,8452
.L214_o$: nop

    ret
         .size   cwd1, .-cwd1

    
.globl cwd1_constant
         .type   cwd1_constant, @function
cwd1_constant:
      

  mov $1,%eax
  .byte 0x99
  mov %eax,8192
  mov %edx,8196
  jnc .L215_c$
  movb $0x1,8448
.L215_c$: nop
  jnz .L215_z$
  movb $0x2,8449
.L215_z$: nop
  jns .L215_s$
  movb $0x3,8450
.L215_s$: nop
  jnp .L215_p$
  movb $0x4,8451
.L215_p$: nop
  jno .L215_o$
  movb $0x5,8452
.L215_o$: nop

    ret
         .size   cwd1_constant, .-cwd1_constant

    
.globl cwd1_allregs
         .type   cwd1_allregs, @function
cwd1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x99
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   cwd1_allregs, .-cwd1_allregs

    
.globl cwd2
         .type   cwd2, @function
cwd2:
      

  mov 4096,%ax
  .byte 0x66,0x99
  mov %ax,8192
  mov %dx,8196
  jnc .L216_c$
  movb $0x1,8448
.L216_c$: nop
  jnz .L216_z$
  movb $0x2,8449
.L216_z$: nop
  jns .L216_s$
  movb $0x3,8450
.L216_s$: nop
  jnp .L216_p$
  movb $0x4,8451
.L216_p$: nop
  jno .L216_o$
  movb $0x5,8452
.L216_o$: nop

    ret
         .size   cwd2, .-cwd2

    
.globl cwd2_constant
         .type   cwd2_constant, @function
cwd2_constant:
      

  mov $1,%ax
  .byte 0x66,0x99
  mov %ax,8192
  mov %dx,8196
  jnc .L217_c$
  movb $0x1,8448
.L217_c$: nop
  jnz .L217_z$
  movb $0x2,8449
.L217_z$: nop
  jns .L217_s$
  movb $0x3,8450
.L217_s$: nop
  jnp .L217_p$
  movb $0x4,8451
.L217_p$: nop
  jno .L217_o$
  movb $0x5,8452
.L217_o$: nop

    ret
         .size   cwd2_constant, .-cwd2_constant

    
.globl cwd2_allregs
         .type   cwd2_allregs, @function
cwd2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0x99
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   cwd2_allregs, .-cwd2_allregs

    
.globl daa_flags_clear
         .type   daa_flags_clear, @function
daa_flags_clear:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%al
  daa
  mov %al,8192
  jnc .L218_c$
  movb $0x1,8448
.L218_c$: nop
  jnz .L218_z$
  movb $0x2,8449
.L218_z$: nop
  jns .L218_s$
  movb $0x3,8450
.L218_s$: nop
  jnp .L218_p$
  movb $0x4,8451
.L218_p$: nop
  jno .L218_o$
  movb $0x5,8452
.L218_o$: nop

    ret
         .size   daa_flags_clear, .-daa_flags_clear

    
.globl daa_flags_clear_constant
         .type   daa_flags_clear_constant, @function
daa_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax
  mov $1,%al
  daa
  mov %al,8192
  jnc .L219_c$
  movb $0x1,8448
.L219_c$: nop
  jnz .L219_z$
  movb $0x2,8449
.L219_z$: nop
  jns .L219_s$
  movb $0x3,8450
.L219_s$: nop
  jnp .L219_p$
  movb $0x4,8451
.L219_p$: nop
  jno .L219_o$
  movb $0x5,8452
.L219_o$: nop

    ret
         .size   daa_flags_clear_constant, .-daa_flags_clear_constant

    
.globl daa_flags_clear_allregs
         .type   daa_flags_clear_allregs, @function
daa_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  daa
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   daa_flags_clear_allregs, .-daa_flags_clear_allregs

    
.globl daa_flags_set1
         .type   daa_flags_set1, @function
daa_flags_set1:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%al
  daa
  mov %al,8192
  jnc .L220_c$
  movb $0x1,8448
.L220_c$: nop
  jnz .L220_z$
  movb $0x2,8449
.L220_z$: nop
  jns .L220_s$
  movb $0x3,8450
.L220_s$: nop
  jnp .L220_p$
  movb $0x4,8451
.L220_p$: nop
  jno .L220_o$
  movb $0x5,8452
.L220_o$: nop

    ret
         .size   daa_flags_set1, .-daa_flags_set1

    
.globl daa_flags_set1_constant
         .type   daa_flags_set1_constant, @function
daa_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax
  mov $1,%al
  daa
  mov %al,8192
  jnc .L221_c$
  movb $0x1,8448
.L221_c$: nop
  jnz .L221_z$
  movb $0x2,8449
.L221_z$: nop
  jns .L221_s$
  movb $0x3,8450
.L221_s$: nop
  jnp .L221_p$
  movb $0x4,8451
.L221_p$: nop
  jno .L221_o$
  movb $0x5,8452
.L221_o$: nop

    ret
         .size   daa_flags_set1_constant, .-daa_flags_set1_constant

    
.globl daa_flags_set1_allregs
         .type   daa_flags_set1_allregs, @function
daa_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  daa
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   daa_flags_set1_allregs, .-daa_flags_set1_allregs

    
.globl daa_flags_set2
         .type   daa_flags_set2, @function
daa_flags_set2:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%al
  daa
  mov %al,8192
  jnc .L222_c$
  movb $0x1,8448
.L222_c$: nop
  jnz .L222_z$
  movb $0x2,8449
.L222_z$: nop
  jns .L222_s$
  movb $0x3,8450
.L222_s$: nop
  jnp .L222_p$
  movb $0x4,8451
.L222_p$: nop
  jno .L222_o$
  movb $0x5,8452
.L222_o$: nop

    ret
         .size   daa_flags_set2, .-daa_flags_set2

    
.globl daa_flags_set2_constant
         .type   daa_flags_set2_constant, @function
daa_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax
  mov $1,%al
  daa
  mov %al,8192
  jnc .L223_c$
  movb $0x1,8448
.L223_c$: nop
  jnz .L223_z$
  movb $0x2,8449
.L223_z$: nop
  jns .L223_s$
  movb $0x3,8450
.L223_s$: nop
  jnp .L223_p$
  movb $0x4,8451
.L223_p$: nop
  jno .L223_o$
  movb $0x5,8452
.L223_o$: nop

    ret
         .size   daa_flags_set2_constant, .-daa_flags_set2_constant

    
.globl daa_flags_set2_allregs
         .type   daa_flags_set2_allregs, @function
daa_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  daa
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   daa_flags_set2_allregs, .-daa_flags_set2_allregs

    
.globl daa_flags_cmp
         .type   daa_flags_cmp, @function
daa_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%al
  daa
  mov %al,8192
  jnc .L224_c$
  movb $0x1,8448
.L224_c$: nop
  jnz .L224_z$
  movb $0x2,8449
.L224_z$: nop
  jns .L224_s$
  movb $0x3,8450
.L224_s$: nop
  jnp .L224_p$
  movb $0x4,8451
.L224_p$: nop
  jno .L224_o$
  movb $0x5,8452
.L224_o$: nop

    ret
         .size   daa_flags_cmp, .-daa_flags_cmp

    
.globl daa_flags_cmp_constant
         .type   daa_flags_cmp_constant, @function
daa_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov $1,%al
  daa
  mov %al,8192
  jnc .L225_c$
  movb $0x1,8448
.L225_c$: nop
  jnz .L225_z$
  movb $0x2,8449
.L225_z$: nop
  jns .L225_s$
  movb $0x3,8450
.L225_s$: nop
  jnp .L225_p$
  movb $0x4,8451
.L225_p$: nop
  jno .L225_o$
  movb $0x5,8452
.L225_o$: nop

    ret
         .size   daa_flags_cmp_constant, .-daa_flags_cmp_constant

    
.globl daa_flags_cmp_allregs
         .type   daa_flags_cmp_allregs, @function
daa_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  daa
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   daa_flags_cmp_allregs, .-daa_flags_cmp_allregs

    
.globl das_flags_clear
         .type   das_flags_clear, @function
das_flags_clear:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%al
  das
  mov %al,8192
  jnc .L226_c$
  movb $0x1,8448
.L226_c$: nop
  jnz .L226_z$
  movb $0x2,8449
.L226_z$: nop
  jns .L226_s$
  movb $0x3,8450
.L226_s$: nop
  jnp .L226_p$
  movb $0x4,8451
.L226_p$: nop
  jno .L226_o$
  movb $0x5,8452
.L226_o$: nop

    ret
         .size   das_flags_clear, .-das_flags_clear

    
.globl das_flags_clear_constant
         .type   das_flags_clear_constant, @function
das_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax
  mov $1,%al
  das
  mov %al,8192
  jnc .L227_c$
  movb $0x1,8448
.L227_c$: nop
  jnz .L227_z$
  movb $0x2,8449
.L227_z$: nop
  jns .L227_s$
  movb $0x3,8450
.L227_s$: nop
  jnp .L227_p$
  movb $0x4,8451
.L227_p$: nop
  jno .L227_o$
  movb $0x5,8452
.L227_o$: nop

    ret
         .size   das_flags_clear_constant, .-das_flags_clear_constant

    
.globl das_flags_clear_allregs
         .type   das_flags_clear_allregs, @function
das_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  das
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   das_flags_clear_allregs, .-das_flags_clear_allregs

    
.globl das_flags_set1
         .type   das_flags_set1, @function
das_flags_set1:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%al
  das
  mov %al,8192
  jnc .L228_c$
  movb $0x1,8448
.L228_c$: nop
  jnz .L228_z$
  movb $0x2,8449
.L228_z$: nop
  jns .L228_s$
  movb $0x3,8450
.L228_s$: nop
  jnp .L228_p$
  movb $0x4,8451
.L228_p$: nop
  jno .L228_o$
  movb $0x5,8452
.L228_o$: nop

    ret
         .size   das_flags_set1, .-das_flags_set1

    
.globl das_flags_set1_constant
         .type   das_flags_set1_constant, @function
das_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax
  mov $1,%al
  das
  mov %al,8192
  jnc .L229_c$
  movb $0x1,8448
.L229_c$: nop
  jnz .L229_z$
  movb $0x2,8449
.L229_z$: nop
  jns .L229_s$
  movb $0x3,8450
.L229_s$: nop
  jnp .L229_p$
  movb $0x4,8451
.L229_p$: nop
  jno .L229_o$
  movb $0x5,8452
.L229_o$: nop

    ret
         .size   das_flags_set1_constant, .-das_flags_set1_constant

    
.globl das_flags_set1_allregs
         .type   das_flags_set1_allregs, @function
das_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  das
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   das_flags_set1_allregs, .-das_flags_set1_allregs

    
.globl das_flags_set2
         .type   das_flags_set2, @function
das_flags_set2:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%al
  das
  mov %al,8192
  jnc .L230_c$
  movb $0x1,8448
.L230_c$: nop
  jnz .L230_z$
  movb $0x2,8449
.L230_z$: nop
  jns .L230_s$
  movb $0x3,8450
.L230_s$: nop
  jnp .L230_p$
  movb $0x4,8451
.L230_p$: nop
  jno .L230_o$
  movb $0x5,8452
.L230_o$: nop

    ret
         .size   das_flags_set2, .-das_flags_set2

    
.globl das_flags_set2_constant
         .type   das_flags_set2_constant, @function
das_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax
  mov $1,%al
  das
  mov %al,8192
  jnc .L231_c$
  movb $0x1,8448
.L231_c$: nop
  jnz .L231_z$
  movb $0x2,8449
.L231_z$: nop
  jns .L231_s$
  movb $0x3,8450
.L231_s$: nop
  jnp .L231_p$
  movb $0x4,8451
.L231_p$: nop
  jno .L231_o$
  movb $0x5,8452
.L231_o$: nop

    ret
         .size   das_flags_set2_constant, .-das_flags_set2_constant

    
.globl das_flags_set2_allregs
         .type   das_flags_set2_allregs, @function
das_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  das
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   das_flags_set2_allregs, .-das_flags_set2_allregs

    
.globl das_flags_cmp
         .type   das_flags_cmp, @function
das_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%al
  das
  mov %al,8192
  jnc .L232_c$
  movb $0x1,8448
.L232_c$: nop
  jnz .L232_z$
  movb $0x2,8449
.L232_z$: nop
  jns .L232_s$
  movb $0x3,8450
.L232_s$: nop
  jnp .L232_p$
  movb $0x4,8451
.L232_p$: nop
  jno .L232_o$
  movb $0x5,8452
.L232_o$: nop

    ret
         .size   das_flags_cmp, .-das_flags_cmp

    
.globl das_flags_cmp_constant
         .type   das_flags_cmp_constant, @function
das_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov $1,%al
  das
  mov %al,8192
  jnc .L233_c$
  movb $0x1,8448
.L233_c$: nop
  jnz .L233_z$
  movb $0x2,8449
.L233_z$: nop
  jns .L233_s$
  movb $0x3,8450
.L233_s$: nop
  jnp .L233_p$
  movb $0x4,8451
.L233_p$: nop
  jno .L233_o$
  movb $0x5,8452
.L233_o$: nop

    ret
         .size   das_flags_cmp_constant, .-das_flags_cmp_constant

    
.globl das_flags_cmp_allregs
         .type   das_flags_cmp_allregs, @function
das_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  das
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   das_flags_cmp_allregs, .-das_flags_cmp_allregs

    
.globl dec1
         .type   dec1, @function
dec1:
      

  mov 4096,%al
  dec %al
  mov %al,8192
  jnc .L234_c$
  movb $0x1,8448
.L234_c$: nop
  jnz .L234_z$
  movb $0x2,8449
.L234_z$: nop
  jns .L234_s$
  movb $0x3,8450
.L234_s$: nop
  jnp .L234_p$
  movb $0x4,8451
.L234_p$: nop
  jno .L234_o$
  movb $0x5,8452
.L234_o$: nop

    ret
         .size   dec1, .-dec1

    
.globl dec1_constant
         .type   dec1_constant, @function
dec1_constant:
      

  mov $1,%al
  dec %al
  mov %al,8192
  jnc .L235_c$
  movb $0x1,8448
.L235_c$: nop
  jnz .L235_z$
  movb $0x2,8449
.L235_z$: nop
  jns .L235_s$
  movb $0x3,8450
.L235_s$: nop
  jnp .L235_p$
  movb $0x4,8451
.L235_p$: nop
  jno .L235_o$
  movb $0x5,8452
.L235_o$: nop

    ret
         .size   dec1_constant, .-dec1_constant

    
.globl dec1_allregs
         .type   dec1_allregs, @function
dec1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  dec %al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   dec1_allregs, .-dec1_allregs

    
.globl dec2
         .type   dec2, @function
dec2:
      

  mov 4096,%ax
  dec %ax
  mov %ax,8192
  jnc .L236_c$
  movb $0x1,8448
.L236_c$: nop
  jnz .L236_z$
  movb $0x2,8449
.L236_z$: nop
  jns .L236_s$
  movb $0x3,8450
.L236_s$: nop
  jnp .L236_p$
  movb $0x4,8451
.L236_p$: nop
  jno .L236_o$
  movb $0x5,8452
.L236_o$: nop

    ret
         .size   dec2, .-dec2

    
.globl dec2_constant
         .type   dec2_constant, @function
dec2_constant:
      

  mov $1,%ax
  dec %ax
  mov %ax,8192
  jnc .L237_c$
  movb $0x1,8448
.L237_c$: nop
  jnz .L237_z$
  movb $0x2,8449
.L237_z$: nop
  jns .L237_s$
  movb $0x3,8450
.L237_s$: nop
  jnp .L237_p$
  movb $0x4,8451
.L237_p$: nop
  jno .L237_o$
  movb $0x5,8452
.L237_o$: nop

    ret
         .size   dec2_constant, .-dec2_constant

    
.globl dec2_allregs
         .type   dec2_allregs, @function
dec2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  dec %ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   dec2_allregs, .-dec2_allregs

    
.globl dec3
         .type   dec3, @function
dec3:
      

  mov 4096,%ah
  dec %ah
  mov %ah,8192
  jnc .L238_c$
  movb $0x1,8448
.L238_c$: nop
  jnz .L238_z$
  movb $0x2,8449
.L238_z$: nop
  jns .L238_s$
  movb $0x3,8450
.L238_s$: nop
  jnp .L238_p$
  movb $0x4,8451
.L238_p$: nop
  jno .L238_o$
  movb $0x5,8452
.L238_o$: nop

    ret
         .size   dec3, .-dec3

    
.globl dec3_constant
         .type   dec3_constant, @function
dec3_constant:
      

  mov $1,%ah
  dec %ah
  mov %ah,8192
  jnc .L239_c$
  movb $0x1,8448
.L239_c$: nop
  jnz .L239_z$
  movb $0x2,8449
.L239_z$: nop
  jns .L239_s$
  movb $0x3,8450
.L239_s$: nop
  jnp .L239_p$
  movb $0x4,8451
.L239_p$: nop
  jno .L239_o$
  movb $0x5,8452
.L239_o$: nop

    ret
         .size   dec3_constant, .-dec3_constant

    
.globl dec3_allregs
         .type   dec3_allregs, @function
dec3_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  dec %ah
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   dec3_allregs, .-dec3_allregs

    
.globl dec4
         .type   dec4, @function
dec4:
      

  mov 4096,%eax
  dec %eax
  mov %eax,8192
  jnc .L240_c$
  movb $0x1,8448
.L240_c$: nop
  jnz .L240_z$
  movb $0x2,8449
.L240_z$: nop
  jns .L240_s$
  movb $0x3,8450
.L240_s$: nop
  jnp .L240_p$
  movb $0x4,8451
.L240_p$: nop
  jno .L240_o$
  movb $0x5,8452
.L240_o$: nop

    ret
         .size   dec4, .-dec4

    
.globl dec4_constant
         .type   dec4_constant, @function
dec4_constant:
      

  mov $1,%eax
  dec %eax
  mov %eax,8192
  jnc .L241_c$
  movb $0x1,8448
.L241_c$: nop
  jnz .L241_z$
  movb $0x2,8449
.L241_z$: nop
  jns .L241_s$
  movb $0x3,8450
.L241_s$: nop
  jnp .L241_p$
  movb $0x4,8451
.L241_p$: nop
  jno .L241_o$
  movb $0x5,8452
.L241_o$: nop

    ret
         .size   dec4_constant, .-dec4_constant

    
.globl dec4_allregs
         .type   dec4_allregs, @function
dec4_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  dec %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   dec4_allregs, .-dec4_allregs

    
.globl dec5b
         .type   dec5b, @function
dec5b:
      

  mov 4096,%eax
  decb (%eax)
  jnc .L242_c$
  movb $0x1,8448
.L242_c$: nop
  jnz .L242_z$
  movb $0x2,8449
.L242_z$: nop
  jns .L242_s$
  movb $0x3,8450
.L242_s$: nop
  jnp .L242_p$
  movb $0x4,8451
.L242_p$: nop
  jno .L242_o$
  movb $0x5,8452
.L242_o$: nop

    ret
         .size   dec5b, .-dec5b

    
.globl dec5b_constant
         .type   dec5b_constant, @function
dec5b_constant:
      

  mov $1,%eax
  decb (%eax)
  jnc .L243_c$
  movb $0x1,8448
.L243_c$: nop
  jnz .L243_z$
  movb $0x2,8449
.L243_z$: nop
  jns .L243_s$
  movb $0x3,8450
.L243_s$: nop
  jnp .L243_p$
  movb $0x4,8451
.L243_p$: nop
  jno .L243_o$
  movb $0x5,8452
.L243_o$: nop

    ret
         .size   dec5b_constant, .-dec5b_constant

    
.globl dec5b_allregs
         .type   dec5b_allregs, @function
dec5b_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  decb (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   dec5b_allregs, .-dec5b_allregs

    
.globl dec5w
         .type   dec5w, @function
dec5w:
      

  mov 4096,%eax
  decw (%eax)
  jnc .L244_c$
  movb $0x1,8448
.L244_c$: nop
  jnz .L244_z$
  movb $0x2,8449
.L244_z$: nop
  jns .L244_s$
  movb $0x3,8450
.L244_s$: nop
  jnp .L244_p$
  movb $0x4,8451
.L244_p$: nop
  jno .L244_o$
  movb $0x5,8452
.L244_o$: nop

    ret
         .size   dec5w, .-dec5w

    
.globl dec5w_constant
         .type   dec5w_constant, @function
dec5w_constant:
      

  mov $1,%eax
  decw (%eax)
  jnc .L245_c$
  movb $0x1,8448
.L245_c$: nop
  jnz .L245_z$
  movb $0x2,8449
.L245_z$: nop
  jns .L245_s$
  movb $0x3,8450
.L245_s$: nop
  jnp .L245_p$
  movb $0x4,8451
.L245_p$: nop
  jno .L245_o$
  movb $0x5,8452
.L245_o$: nop

    ret
         .size   dec5w_constant, .-dec5w_constant

    
.globl dec5w_allregs
         .type   dec5w_allregs, @function
dec5w_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  decw (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   dec5w_allregs, .-dec5w_allregs

    
.globl dec5l
         .type   dec5l, @function
dec5l:
      

  mov 4096,%eax
  decl (%eax)
  jnc .L246_c$
  movb $0x1,8448
.L246_c$: nop
  jnz .L246_z$
  movb $0x2,8449
.L246_z$: nop
  jns .L246_s$
  movb $0x3,8450
.L246_s$: nop
  jnp .L246_p$
  movb $0x4,8451
.L246_p$: nop
  jno .L246_o$
  movb $0x5,8452
.L246_o$: nop

    ret
         .size   dec5l, .-dec5l

    
.globl dec5l_constant
         .type   dec5l_constant, @function
dec5l_constant:
      

  mov $1,%eax
  decl (%eax)
  jnc .L247_c$
  movb $0x1,8448
.L247_c$: nop
  jnz .L247_z$
  movb $0x2,8449
.L247_z$: nop
  jns .L247_s$
  movb $0x3,8450
.L247_s$: nop
  jnp .L247_p$
  movb $0x4,8451
.L247_p$: nop
  jno .L247_o$
  movb $0x5,8452
.L247_o$: nop

    ret
         .size   dec5l_constant, .-dec5l_constant

    
.globl dec5l_allregs
         .type   dec5l_allregs, @function
dec5l_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  decl (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   dec5l_allregs, .-dec5l_allregs

    
.globl dec_locked
         .type   dec_locked, @function
dec_locked:
      


  lock decl (%eax)


    ret
         .size   dec_locked, .-dec_locked

    
.globl dec_locked_constant
         .type   dec_locked_constant, @function
dec_locked_constant:
      


  lock decl (%eax)


    ret
         .size   dec_locked_constant, .-dec_locked_constant

    
.globl dec_locked_allregs
         .type   dec_locked_allregs, @function
dec_locked_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  lock decl (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   dec_locked_allregs, .-dec_locked_allregs

    
.globl div1
         .type   div1, @function
div1:
      

  mov 4096,%ax
  mov 4100,%bl
  div %bl,%al
  mov %al,8192
  mov %ah,8196
  jnc .L248_c$
  movb $0x1,8448
.L248_c$: nop
  jnz .L248_z$
  movb $0x2,8449
.L248_z$: nop
  jns .L248_s$
  movb $0x3,8450
.L248_s$: nop
  jnp .L248_p$
  movb $0x4,8451
.L248_p$: nop
  jno .L248_o$
  movb $0x5,8452
.L248_o$: nop

    ret
         .size   div1, .-div1

    
.globl div1_constant
         .type   div1_constant, @function
div1_constant:
      

  mov $1,%ax
  mov $2,%bl
  div %bl,%al
  mov %al,8192
  mov %ah,8196
  jnc .L249_c$
  movb $0x1,8448
.L249_c$: nop
  jnz .L249_z$
  movb $0x2,8449
.L249_z$: nop
  jns .L249_s$
  movb $0x3,8450
.L249_s$: nop
  jnp .L249_p$
  movb $0x4,8451
.L249_p$: nop
  jno .L249_o$
  movb $0x5,8452
.L249_o$: nop

    ret
         .size   div1_constant, .-div1_constant

    
.globl div1_allregs
         .type   div1_allregs, @function
div1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  div %bl,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   div1_allregs, .-div1_allregs

    
.globl div2
         .type   div2, @function
div2:
      

  mov 4096,%ax
  mov 4100,%bh
  div %bh,%al
  mov %al,8192
  mov %ah,8196
  jnc .L250_c$
  movb $0x1,8448
.L250_c$: nop
  jnz .L250_z$
  movb $0x2,8449
.L250_z$: nop
  jns .L250_s$
  movb $0x3,8450
.L250_s$: nop
  jnp .L250_p$
  movb $0x4,8451
.L250_p$: nop
  jno .L250_o$
  movb $0x5,8452
.L250_o$: nop

    ret
         .size   div2, .-div2

    
.globl div2_constant
         .type   div2_constant, @function
div2_constant:
      

  mov $1,%ax
  mov $2,%bh
  div %bh,%al
  mov %al,8192
  mov %ah,8196
  jnc .L251_c$
  movb $0x1,8448
.L251_c$: nop
  jnz .L251_z$
  movb $0x2,8449
.L251_z$: nop
  jns .L251_s$
  movb $0x3,8450
.L251_s$: nop
  jnp .L251_p$
  movb $0x4,8451
.L251_p$: nop
  jno .L251_o$
  movb $0x5,8452
.L251_o$: nop

    ret
         .size   div2_constant, .-div2_constant

    
.globl div2_allregs
         .type   div2_allregs, @function
div2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  div %bh,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   div2_allregs, .-div2_allregs

    
.globl div3
         .type   div3, @function
div3:
      

  mov 4096,%ax
  mov 4100,%ax
  mov 4104,%bx
  div %bx,%ax
  mov %ax,8192
  mov %dx,8196
  jnc .L252_c$
  movb $0x1,8448
.L252_c$: nop
  jnz .L252_z$
  movb $0x2,8449
.L252_z$: nop
  jns .L252_s$
  movb $0x3,8450
.L252_s$: nop
  jnp .L252_p$
  movb $0x4,8451
.L252_p$: nop
  jno .L252_o$
  movb $0x5,8452
.L252_o$: nop

    ret
         .size   div3, .-div3

    
.globl div3_constant
         .type   div3_constant, @function
div3_constant:
      

  mov $1,%ax
  mov $2,%ax
  mov $3,%bx
  div %bx,%ax
  mov %ax,8192
  mov %dx,8196
  jnc .L253_c$
  movb $0x1,8448
.L253_c$: nop
  jnz .L253_z$
  movb $0x2,8449
.L253_z$: nop
  jns .L253_s$
  movb $0x3,8450
.L253_s$: nop
  jnp .L253_p$
  movb $0x4,8451
.L253_p$: nop
  jno .L253_o$
  movb $0x5,8452
.L253_o$: nop

    ret
         .size   div3_constant, .-div3_constant

    
.globl div3_allregs
         .type   div3_allregs, @function
div3_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  div %bx,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   div3_allregs, .-div3_allregs

    
.globl div4
         .type   div4, @function
div4:
      

  mov 4096,%eax
  mov 4100,%edx
  mov 4104,%ebx
  div %ebx,%eax
  mov %eax,8192
  mov %edx,8196
  jnc .L254_c$
  movb $0x1,8448
.L254_c$: nop
  jnz .L254_z$
  movb $0x2,8449
.L254_z$: nop
  jns .L254_s$
  movb $0x3,8450
.L254_s$: nop
  jnp .L254_p$
  movb $0x4,8451
.L254_p$: nop
  jno .L254_o$
  movb $0x5,8452
.L254_o$: nop

    ret
         .size   div4, .-div4

    
.globl div4_constant
         .type   div4_constant, @function
div4_constant:
      

  mov $1,%eax
  mov $2,%edx
  mov $3,%ebx
  div %ebx,%eax
  mov %eax,8192
  mov %edx,8196
  jnc .L255_c$
  movb $0x1,8448
.L255_c$: nop
  jnz .L255_z$
  movb $0x2,8449
.L255_z$: nop
  jns .L255_s$
  movb $0x3,8450
.L255_s$: nop
  jnp .L255_p$
  movb $0x4,8451
.L255_p$: nop
  jno .L255_o$
  movb $0x5,8452
.L255_o$: nop

    ret
         .size   div4_constant, .-div4_constant

    
.globl div4_allregs
         .type   div4_allregs, @function
div4_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  div %ebx,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   div4_allregs, .-div4_allregs

    
.globl div5
         .type   div5, @function
div5:
      

  mov 4096,%ax
  mov 4100,%ebx
  divb 0x1234(%ebx),%al
  mov %al,8192
  mov %ah,8196
  jnc .L256_c$
  movb $0x1,8448
.L256_c$: nop
  jnz .L256_z$
  movb $0x2,8449
.L256_z$: nop
  jns .L256_s$
  movb $0x3,8450
.L256_s$: nop
  jnp .L256_p$
  movb $0x4,8451
.L256_p$: nop
  jno .L256_o$
  movb $0x5,8452
.L256_o$: nop

    ret
         .size   div5, .-div5

    
.globl div5_constant
         .type   div5_constant, @function
div5_constant:
      

  mov $1,%ax
  mov $2,%ebx
  divb 0x1234(%ebx),%al
  mov %al,8192
  mov %ah,8196
  jnc .L257_c$
  movb $0x1,8448
.L257_c$: nop
  jnz .L257_z$
  movb $0x2,8449
.L257_z$: nop
  jns .L257_s$
  movb $0x3,8450
.L257_s$: nop
  jnp .L257_p$
  movb $0x4,8451
.L257_p$: nop
  jno .L257_o$
  movb $0x5,8452
.L257_o$: nop

    ret
         .size   div5_constant, .-div5_constant

    
.globl div5_allregs
         .type   div5_allregs, @function
div5_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  divb 0x1234(%ebx),%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   div5_allregs, .-div5_allregs

    
.globl enter1
         .type   enter1, @function
enter1:
      


  .byte 0xc8,0x34,0x12,0x00


    ret
         .size   enter1, .-enter1

    
.globl enter1_constant
         .type   enter1_constant, @function
enter1_constant:
      


  .byte 0xc8,0x34,0x12,0x00


    ret
         .size   enter1_constant, .-enter1_constant

    
.globl enter1_allregs
         .type   enter1_allregs, @function
enter1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xc8,0x34,0x12,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   enter1_allregs, .-enter1_allregs

    
.globl enter2
         .type   enter2, @function
enter2:
      


  .byte 0xc8,0x34,0x12,0x01


    ret
         .size   enter2, .-enter2

    
.globl enter2_constant
         .type   enter2_constant, @function
enter2_constant:
      


  .byte 0xc8,0x34,0x12,0x01


    ret
         .size   enter2_constant, .-enter2_constant

    
.globl enter2_allregs
         .type   enter2_allregs, @function
enter2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xc8,0x34,0x12,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   enter2_allregs, .-enter2_allregs

    
.globl enter3
         .type   enter3, @function
enter3:
      


  .byte 0xc8,0x34,0x12,0x55


    ret
         .size   enter3, .-enter3

    
.globl enter3_constant
         .type   enter3_constant, @function
enter3_constant:
      


  .byte 0xc8,0x34,0x12,0x55


    ret
         .size   enter3_constant, .-enter3_constant

    
.globl enter3_allregs
         .type   enter3_allregs, @function
enter3_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xc8,0x34,0x12,0x55
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   enter3_allregs, .-enter3_allregs

    
.globl hlt
         .type   hlt, @function
hlt:
      


  hlt


    ret
         .size   hlt, .-hlt

    
.globl hlt_constant
         .type   hlt_constant, @function
hlt_constant:
      


  hlt


    ret
         .size   hlt_constant, .-hlt_constant

    
.globl hlt_allregs
         .type   hlt_allregs, @function
hlt_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  hlt
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   hlt_allregs, .-hlt_allregs

    
.globl idiv1
         .type   idiv1, @function
idiv1:
      

  mov 4096,%ax
  mov 4100,%bl
  idiv %bl,%al
  mov %al,8192
  mov %ah,8196
  jnc .L258_c$
  movb $0x1,8448
.L258_c$: nop
  jnz .L258_z$
  movb $0x2,8449
.L258_z$: nop
  jns .L258_s$
  movb $0x3,8450
.L258_s$: nop
  jnp .L258_p$
  movb $0x4,8451
.L258_p$: nop
  jno .L258_o$
  movb $0x5,8452
.L258_o$: nop

    ret
         .size   idiv1, .-idiv1

    
.globl idiv1_constant
         .type   idiv1_constant, @function
idiv1_constant:
      

  mov $1,%ax
  mov $2,%bl
  idiv %bl,%al
  mov %al,8192
  mov %ah,8196
  jnc .L259_c$
  movb $0x1,8448
.L259_c$: nop
  jnz .L259_z$
  movb $0x2,8449
.L259_z$: nop
  jns .L259_s$
  movb $0x3,8450
.L259_s$: nop
  jnp .L259_p$
  movb $0x4,8451
.L259_p$: nop
  jno .L259_o$
  movb $0x5,8452
.L259_o$: nop

    ret
         .size   idiv1_constant, .-idiv1_constant

    
.globl idiv1_allregs
         .type   idiv1_allregs, @function
idiv1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  idiv %bl,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   idiv1_allregs, .-idiv1_allregs

    
.globl idiv2
         .type   idiv2, @function
idiv2:
      

  mov 4096,%ax
  mov 4100,%dx
  mov 4104,%bx
  idiv %bx,%ax
  mov %ax,8192
  mov %dx,8196
  jnc .L260_c$
  movb $0x1,8448
.L260_c$: nop
  jnz .L260_z$
  movb $0x2,8449
.L260_z$: nop
  jns .L260_s$
  movb $0x3,8450
.L260_s$: nop
  jnp .L260_p$
  movb $0x4,8451
.L260_p$: nop
  jno .L260_o$
  movb $0x5,8452
.L260_o$: nop

    ret
         .size   idiv2, .-idiv2

    
.globl idiv2_constant
         .type   idiv2_constant, @function
idiv2_constant:
      

  mov $1,%ax
  mov $2,%dx
  mov $3,%bx
  idiv %bx,%ax
  mov %ax,8192
  mov %dx,8196
  jnc .L261_c$
  movb $0x1,8448
.L261_c$: nop
  jnz .L261_z$
  movb $0x2,8449
.L261_z$: nop
  jns .L261_s$
  movb $0x3,8450
.L261_s$: nop
  jnp .L261_p$
  movb $0x4,8451
.L261_p$: nop
  jno .L261_o$
  movb $0x5,8452
.L261_o$: nop

    ret
         .size   idiv2_constant, .-idiv2_constant

    
.globl idiv2_allregs
         .type   idiv2_allregs, @function
idiv2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  idiv %bx,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   idiv2_allregs, .-idiv2_allregs

    
.globl idiv3
         .type   idiv3, @function
idiv3:
      

  mov 4096,%eax
  mov 4100,%edx
  mov 4104,%ebx
  idiv %ebx,%eax
  mov %eax,8192
  mov %edx,8196
  jnc .L262_c$
  movb $0x1,8448
.L262_c$: nop
  jnz .L262_z$
  movb $0x2,8449
.L262_z$: nop
  jns .L262_s$
  movb $0x3,8450
.L262_s$: nop
  jnp .L262_p$
  movb $0x4,8451
.L262_p$: nop
  jno .L262_o$
  movb $0x5,8452
.L262_o$: nop

    ret
         .size   idiv3, .-idiv3

    
.globl idiv3_constant
         .type   idiv3_constant, @function
idiv3_constant:
      

  mov $1,%eax
  mov $2,%edx
  mov $3,%ebx
  idiv %ebx,%eax
  mov %eax,8192
  mov %edx,8196
  jnc .L263_c$
  movb $0x1,8448
.L263_c$: nop
  jnz .L263_z$
  movb $0x2,8449
.L263_z$: nop
  jns .L263_s$
  movb $0x3,8450
.L263_s$: nop
  jnp .L263_p$
  movb $0x4,8451
.L263_p$: nop
  jno .L263_o$
  movb $0x5,8452
.L263_o$: nop

    ret
         .size   idiv3_constant, .-idiv3_constant

    
.globl idiv3_allregs
         .type   idiv3_allregs, @function
idiv3_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  idiv %ebx,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   idiv3_allregs, .-idiv3_allregs

    
.globl imul_one_op1
         .type   imul_one_op1, @function
imul_one_op1:
      

  mov 4096,%al
  mov 4100,%bl
  imul %bl
  mov %ax,8192
  jnc .L264_c$
  movb $0x1,8448
.L264_c$: nop
  jnz .L264_z$
  movb $0x2,8449
.L264_z$: nop
  jns .L264_s$
  movb $0x3,8450
.L264_s$: nop
  jnp .L264_p$
  movb $0x4,8451
.L264_p$: nop
  jno .L264_o$
  movb $0x5,8452
.L264_o$: nop

    ret
         .size   imul_one_op1, .-imul_one_op1

    
.globl imul_one_op1_constant
         .type   imul_one_op1_constant, @function
imul_one_op1_constant:
      

  mov $1,%al
  mov $2,%bl
  imul %bl
  mov %ax,8192
  jnc .L265_c$
  movb $0x1,8448
.L265_c$: nop
  jnz .L265_z$
  movb $0x2,8449
.L265_z$: nop
  jns .L265_s$
  movb $0x3,8450
.L265_s$: nop
  jnp .L265_p$
  movb $0x4,8451
.L265_p$: nop
  jno .L265_o$
  movb $0x5,8452
.L265_o$: nop

    ret
         .size   imul_one_op1_constant, .-imul_one_op1_constant

    
.globl imul_one_op1_allregs
         .type   imul_one_op1_allregs, @function
imul_one_op1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  imul %bl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   imul_one_op1_allregs, .-imul_one_op1_allregs

    
.globl imul_one_op2
         .type   imul_one_op2, @function
imul_one_op2:
      

  mov 4096,%ax
  mov 4100,%bx
  imul %bx
  mov %ax,8192
  mov %dx,8196
  jnc .L266_c$
  movb $0x1,8448
.L266_c$: nop
  jnz .L266_z$
  movb $0x2,8449
.L266_z$: nop
  jns .L266_s$
  movb $0x3,8450
.L266_s$: nop
  jnp .L266_p$
  movb $0x4,8451
.L266_p$: nop
  jno .L266_o$
  movb $0x5,8452
.L266_o$: nop

    ret
         .size   imul_one_op2, .-imul_one_op2

    
.globl imul_one_op2_constant
         .type   imul_one_op2_constant, @function
imul_one_op2_constant:
      

  mov $1,%ax
  mov $2,%bx
  imul %bx
  mov %ax,8192
  mov %dx,8196
  jnc .L267_c$
  movb $0x1,8448
.L267_c$: nop
  jnz .L267_z$
  movb $0x2,8449
.L267_z$: nop
  jns .L267_s$
  movb $0x3,8450
.L267_s$: nop
  jnp .L267_p$
  movb $0x4,8451
.L267_p$: nop
  jno .L267_o$
  movb $0x5,8452
.L267_o$: nop

    ret
         .size   imul_one_op2_constant, .-imul_one_op2_constant

    
.globl imul_one_op2_allregs
         .type   imul_one_op2_allregs, @function
imul_one_op2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  imul %bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   imul_one_op2_allregs, .-imul_one_op2_allregs

    
.globl imul_one_op3
         .type   imul_one_op3, @function
imul_one_op3:
      

  mov 4096,%eax
  mov 4100,%ebx
  imul %ebx
  mov %eax,8192
  mov %edx,8196
  jnc .L268_c$
  movb $0x1,8448
.L268_c$: nop
  jnz .L268_z$
  movb $0x2,8449
.L268_z$: nop
  jns .L268_s$
  movb $0x3,8450
.L268_s$: nop
  jnp .L268_p$
  movb $0x4,8451
.L268_p$: nop
  jno .L268_o$
  movb $0x5,8452
.L268_o$: nop

    ret
         .size   imul_one_op3, .-imul_one_op3

    
.globl imul_one_op3_constant
         .type   imul_one_op3_constant, @function
imul_one_op3_constant:
      

  mov $1,%eax
  mov $2,%ebx
  imul %ebx
  mov %eax,8192
  mov %edx,8196
  jnc .L269_c$
  movb $0x1,8448
.L269_c$: nop
  jnz .L269_z$
  movb $0x2,8449
.L269_z$: nop
  jns .L269_s$
  movb $0x3,8450
.L269_s$: nop
  jnp .L269_p$
  movb $0x4,8451
.L269_p$: nop
  jno .L269_o$
  movb $0x5,8452
.L269_o$: nop

    ret
         .size   imul_one_op3_constant, .-imul_one_op3_constant

    
.globl imul_one_op3_allregs
         .type   imul_one_op3_allregs, @function
imul_one_op3_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  imul %ebx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   imul_one_op3_allregs, .-imul_one_op3_allregs

    
.globl imul_one_op4
         .type   imul_one_op4, @function
imul_one_op4:
      

  mov 4096,%ax
  mov 4100,%ebx
  imulw (%ebx)
  jnc .L270_c$
  movb $0x1,8448
.L270_c$: nop
  jnz .L270_z$
  movb $0x2,8449
.L270_z$: nop
  jns .L270_s$
  movb $0x3,8450
.L270_s$: nop
  jnp .L270_p$
  movb $0x4,8451
.L270_p$: nop
  jno .L270_o$
  movb $0x5,8452
.L270_o$: nop

    ret
         .size   imul_one_op4, .-imul_one_op4

    
.globl imul_one_op4_constant
         .type   imul_one_op4_constant, @function
imul_one_op4_constant:
      

  mov $1,%ax
  mov $2,%ebx
  imulw (%ebx)
  jnc .L271_c$
  movb $0x1,8448
.L271_c$: nop
  jnz .L271_z$
  movb $0x2,8449
.L271_z$: nop
  jns .L271_s$
  movb $0x3,8450
.L271_s$: nop
  jnp .L271_p$
  movb $0x4,8451
.L271_p$: nop
  jno .L271_o$
  movb $0x5,8452
.L271_o$: nop

    ret
         .size   imul_one_op4_constant, .-imul_one_op4_constant

    
.globl imul_one_op4_allregs
         .type   imul_one_op4_allregs, @function
imul_one_op4_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  imulw (%ebx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   imul_one_op4_allregs, .-imul_one_op4_allregs

    
.globl imul_two_op1
         .type   imul_two_op1, @function
imul_two_op1:
      

  mov 4096,%bx
  mov 4100,%cx
  imul %bx,%cx
  mov %cx,8192
  jnc .L272_c$
  movb $0x1,8448
.L272_c$: nop
  jnz .L272_z$
  movb $0x2,8449
.L272_z$: nop
  jns .L272_s$
  movb $0x3,8450
.L272_s$: nop
  jnp .L272_p$
  movb $0x4,8451
.L272_p$: nop
  jno .L272_o$
  movb $0x5,8452
.L272_o$: nop

    ret
         .size   imul_two_op1, .-imul_two_op1

    
.globl imul_two_op1_constant
         .type   imul_two_op1_constant, @function
imul_two_op1_constant:
      

  mov $1,%bx
  mov $2,%cx
  imul %bx,%cx
  mov %cx,8192
  jnc .L273_c$
  movb $0x1,8448
.L273_c$: nop
  jnz .L273_z$
  movb $0x2,8449
.L273_z$: nop
  jns .L273_s$
  movb $0x3,8450
.L273_s$: nop
  jnp .L273_p$
  movb $0x4,8451
.L273_p$: nop
  jno .L273_o$
  movb $0x5,8452
.L273_o$: nop

    ret
         .size   imul_two_op1_constant, .-imul_two_op1_constant

    
.globl imul_two_op1_allregs
         .type   imul_two_op1_allregs, @function
imul_two_op1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  imul %bx,%cx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   imul_two_op1_allregs, .-imul_two_op1_allregs

    
.globl imul_two_op2
         .type   imul_two_op2, @function
imul_two_op2:
      

  mov 4096,%ebx
  mov 4100,%ecx
  imul %ebx,%ecx
  mov %ecx,8192
  jnc .L274_c$
  movb $0x1,8448
.L274_c$: nop
  jnz .L274_z$
  movb $0x2,8449
.L274_z$: nop
  jns .L274_s$
  movb $0x3,8450
.L274_s$: nop
  jnp .L274_p$
  movb $0x4,8451
.L274_p$: nop
  jno .L274_o$
  movb $0x5,8452
.L274_o$: nop

    ret
         .size   imul_two_op2, .-imul_two_op2

    
.globl imul_two_op2_constant
         .type   imul_two_op2_constant, @function
imul_two_op2_constant:
      

  mov $1,%ebx
  mov $2,%ecx
  imul %ebx,%ecx
  mov %ecx,8192
  jnc .L275_c$
  movb $0x1,8448
.L275_c$: nop
  jnz .L275_z$
  movb $0x2,8449
.L275_z$: nop
  jns .L275_s$
  movb $0x3,8450
.L275_s$: nop
  jnp .L275_p$
  movb $0x4,8451
.L275_p$: nop
  jno .L275_o$
  movb $0x5,8452
.L275_o$: nop

    ret
         .size   imul_two_op2_constant, .-imul_two_op2_constant

    
.globl imul_two_op2_allregs
         .type   imul_two_op2_allregs, @function
imul_two_op2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  imul %ebx,%ecx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   imul_two_op2_allregs, .-imul_two_op2_allregs

    
.globl imul_two_op3
         .type   imul_two_op3, @function
imul_two_op3:
      

  mov 4096,%ebx
  mov 4100,%ecx
  imul (%ebx),%ecx
  mov %ecx,8192
  jnc .L276_c$
  movb $0x1,8448
.L276_c$: nop
  jnz .L276_z$
  movb $0x2,8449
.L276_z$: nop
  jns .L276_s$
  movb $0x3,8450
.L276_s$: nop
  jnp .L276_p$
  movb $0x4,8451
.L276_p$: nop
  jno .L276_o$
  movb $0x5,8452
.L276_o$: nop

    ret
         .size   imul_two_op3, .-imul_two_op3

    
.globl imul_two_op3_constant
         .type   imul_two_op3_constant, @function
imul_two_op3_constant:
      

  mov $1,%ebx
  mov $2,%ecx
  imul (%ebx),%ecx
  mov %ecx,8192
  jnc .L277_c$
  movb $0x1,8448
.L277_c$: nop
  jnz .L277_z$
  movb $0x2,8449
.L277_z$: nop
  jns .L277_s$
  movb $0x3,8450
.L277_s$: nop
  jnp .L277_p$
  movb $0x4,8451
.L277_p$: nop
  jno .L277_o$
  movb $0x5,8452
.L277_o$: nop

    ret
         .size   imul_two_op3_constant, .-imul_two_op3_constant

    
.globl imul_two_op3_allregs
         .type   imul_two_op3_allregs, @function
imul_two_op3_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  imul (%ebx),%ecx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   imul_two_op3_allregs, .-imul_two_op3_allregs

    
.globl imul_three_op1
         .type   imul_three_op1, @function
imul_three_op1:
      

  mov 4096,%bx
  mov 4100,%cx
  imul $10,%bx,%cx
  mov %cx,8192
  jnc .L278_c$
  movb $0x1,8448
.L278_c$: nop
  jnz .L278_z$
  movb $0x2,8449
.L278_z$: nop
  jns .L278_s$
  movb $0x3,8450
.L278_s$: nop
  jnp .L278_p$
  movb $0x4,8451
.L278_p$: nop
  jno .L278_o$
  movb $0x5,8452
.L278_o$: nop

    ret
         .size   imul_three_op1, .-imul_three_op1

    
.globl imul_three_op1_constant
         .type   imul_three_op1_constant, @function
imul_three_op1_constant:
      

  mov $1,%bx
  mov $2,%cx
  imul $10,%bx,%cx
  mov %cx,8192
  jnc .L279_c$
  movb $0x1,8448
.L279_c$: nop
  jnz .L279_z$
  movb $0x2,8449
.L279_z$: nop
  jns .L279_s$
  movb $0x3,8450
.L279_s$: nop
  jnp .L279_p$
  movb $0x4,8451
.L279_p$: nop
  jno .L279_o$
  movb $0x5,8452
.L279_o$: nop

    ret
         .size   imul_three_op1_constant, .-imul_three_op1_constant

    
.globl imul_three_op1_allregs
         .type   imul_three_op1_allregs, @function
imul_three_op1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  imul $10,%bx,%cx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   imul_three_op1_allregs, .-imul_three_op1_allregs

    
.globl imul_three_op2
         .type   imul_three_op2, @function
imul_three_op2:
      

  mov 4096,%ebx
  mov 4100,%ecx
  imul $10,%ebx,%ecx
  mov %ecx,8192
  jnc .L280_c$
  movb $0x1,8448
.L280_c$: nop
  jnz .L280_z$
  movb $0x2,8449
.L280_z$: nop
  jns .L280_s$
  movb $0x3,8450
.L280_s$: nop
  jnp .L280_p$
  movb $0x4,8451
.L280_p$: nop
  jno .L280_o$
  movb $0x5,8452
.L280_o$: nop

    ret
         .size   imul_three_op2, .-imul_three_op2

    
.globl imul_three_op2_constant
         .type   imul_three_op2_constant, @function
imul_three_op2_constant:
      

  mov $1,%ebx
  mov $2,%ecx
  imul $10,%ebx,%ecx
  mov %ecx,8192
  jnc .L281_c$
  movb $0x1,8448
.L281_c$: nop
  jnz .L281_z$
  movb $0x2,8449
.L281_z$: nop
  jns .L281_s$
  movb $0x3,8450
.L281_s$: nop
  jnp .L281_p$
  movb $0x4,8451
.L281_p$: nop
  jno .L281_o$
  movb $0x5,8452
.L281_o$: nop

    ret
         .size   imul_three_op2_constant, .-imul_three_op2_constant

    
.globl imul_three_op2_allregs
         .type   imul_three_op2_allregs, @function
imul_three_op2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  imul $10,%ebx,%ecx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   imul_three_op2_allregs, .-imul_three_op2_allregs

    
.globl imul_three_op3
         .type   imul_three_op3, @function
imul_three_op3:
      

  mov 4096,%ebx
  mov 4100,%ecx
  imul $10,(%ebx),%ecx
  mov %ecx,8192
  jnc .L282_c$
  movb $0x1,8448
.L282_c$: nop
  jnz .L282_z$
  movb $0x2,8449
.L282_z$: nop
  jns .L282_s$
  movb $0x3,8450
.L282_s$: nop
  jnp .L282_p$
  movb $0x4,8451
.L282_p$: nop
  jno .L282_o$
  movb $0x5,8452
.L282_o$: nop

    ret
         .size   imul_three_op3, .-imul_three_op3

    
.globl imul_three_op3_constant
         .type   imul_three_op3_constant, @function
imul_three_op3_constant:
      

  mov $1,%ebx
  mov $2,%ecx
  imul $10,(%ebx),%ecx
  mov %ecx,8192
  jnc .L283_c$
  movb $0x1,8448
.L283_c$: nop
  jnz .L283_z$
  movb $0x2,8449
.L283_z$: nop
  jns .L283_s$
  movb $0x3,8450
.L283_s$: nop
  jnp .L283_p$
  movb $0x4,8451
.L283_p$: nop
  jno .L283_o$
  movb $0x5,8452
.L283_o$: nop

    ret
         .size   imul_three_op3_constant, .-imul_three_op3_constant

    
.globl imul_three_op3_allregs
         .type   imul_three_op3_allregs, @function
imul_three_op3_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  imul $10,(%ebx),%ecx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   imul_three_op3_allregs, .-imul_three_op3_allregs

    
.globl in1
         .type   in1, @function
in1:
      


  .byte 0xe4,0x12
  mov %al,8192
  jnc .L284_c$
  movb $0x1,8448
.L284_c$: nop
  jnz .L284_z$
  movb $0x2,8449
.L284_z$: nop
  jns .L284_s$
  movb $0x3,8450
.L284_s$: nop
  jnp .L284_p$
  movb $0x4,8451
.L284_p$: nop
  jno .L284_o$
  movb $0x5,8452
.L284_o$: nop

    ret
         .size   in1, .-in1

    
.globl in1_constant
         .type   in1_constant, @function
in1_constant:
      


  .byte 0xe4,0x12
  mov %al,8192
  jnc .L285_c$
  movb $0x1,8448
.L285_c$: nop
  jnz .L285_z$
  movb $0x2,8449
.L285_z$: nop
  jns .L285_s$
  movb $0x3,8450
.L285_s$: nop
  jnp .L285_p$
  movb $0x4,8451
.L285_p$: nop
  jno .L285_o$
  movb $0x5,8452
.L285_o$: nop

    ret
         .size   in1_constant, .-in1_constant

    
.globl in1_allregs
         .type   in1_allregs, @function
in1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xe4,0x12
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   in1_allregs, .-in1_allregs

    
.globl in2
         .type   in2, @function
in2:
      


  .byte 0x66,0xe5,0x12
  mov %ax,8192
  jnc .L286_c$
  movb $0x1,8448
.L286_c$: nop
  jnz .L286_z$
  movb $0x2,8449
.L286_z$: nop
  jns .L286_s$
  movb $0x3,8450
.L286_s$: nop
  jnp .L286_p$
  movb $0x4,8451
.L286_p$: nop
  jno .L286_o$
  movb $0x5,8452
.L286_o$: nop

    ret
         .size   in2, .-in2

    
.globl in2_constant
         .type   in2_constant, @function
in2_constant:
      


  .byte 0x66,0xe5,0x12
  mov %ax,8192
  jnc .L287_c$
  movb $0x1,8448
.L287_c$: nop
  jnz .L287_z$
  movb $0x2,8449
.L287_z$: nop
  jns .L287_s$
  movb $0x3,8450
.L287_s$: nop
  jnp .L287_p$
  movb $0x4,8451
.L287_p$: nop
  jno .L287_o$
  movb $0x5,8452
.L287_o$: nop

    ret
         .size   in2_constant, .-in2_constant

    
.globl in2_allregs
         .type   in2_allregs, @function
in2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0xe5,0x12
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   in2_allregs, .-in2_allregs

    
.globl in3
         .type   in3, @function
in3:
      


  .byte 0xe5,0x12
  mov %eax,8192
  jnc .L288_c$
  movb $0x1,8448
.L288_c$: nop
  jnz .L288_z$
  movb $0x2,8449
.L288_z$: nop
  jns .L288_s$
  movb $0x3,8450
.L288_s$: nop
  jnp .L288_p$
  movb $0x4,8451
.L288_p$: nop
  jno .L288_o$
  movb $0x5,8452
.L288_o$: nop

    ret
         .size   in3, .-in3

    
.globl in3_constant
         .type   in3_constant, @function
in3_constant:
      


  .byte 0xe5,0x12
  mov %eax,8192
  jnc .L289_c$
  movb $0x1,8448
.L289_c$: nop
  jnz .L289_z$
  movb $0x2,8449
.L289_z$: nop
  jns .L289_s$
  movb $0x3,8450
.L289_s$: nop
  jnp .L289_p$
  movb $0x4,8451
.L289_p$: nop
  jno .L289_o$
  movb $0x5,8452
.L289_o$: nop

    ret
         .size   in3_constant, .-in3_constant

    
.globl in3_allregs
         .type   in3_allregs, @function
in3_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xe5,0x12
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   in3_allregs, .-in3_allregs

    
.globl in4
         .type   in4, @function
in4:
      

  mov 4096,%dx
  .byte 0xec
  mov %al,8192
  jnc .L290_c$
  movb $0x1,8448
.L290_c$: nop
  jnz .L290_z$
  movb $0x2,8449
.L290_z$: nop
  jns .L290_s$
  movb $0x3,8450
.L290_s$: nop
  jnp .L290_p$
  movb $0x4,8451
.L290_p$: nop
  jno .L290_o$
  movb $0x5,8452
.L290_o$: nop

    ret
         .size   in4, .-in4

    
.globl in4_constant
         .type   in4_constant, @function
in4_constant:
      

  mov $1,%dx
  .byte 0xec
  mov %al,8192
  jnc .L291_c$
  movb $0x1,8448
.L291_c$: nop
  jnz .L291_z$
  movb $0x2,8449
.L291_z$: nop
  jns .L291_s$
  movb $0x3,8450
.L291_s$: nop
  jnp .L291_p$
  movb $0x4,8451
.L291_p$: nop
  jno .L291_o$
  movb $0x5,8452
.L291_o$: nop

    ret
         .size   in4_constant, .-in4_constant

    
.globl in4_allregs
         .type   in4_allregs, @function
in4_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xec
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   in4_allregs, .-in4_allregs

    
.globl in5
         .type   in5, @function
in5:
      

  mov 4096,%dx
  .byte 0x66,0xed
  mov %ax,8192
  jnc .L292_c$
  movb $0x1,8448
.L292_c$: nop
  jnz .L292_z$
  movb $0x2,8449
.L292_z$: nop
  jns .L292_s$
  movb $0x3,8450
.L292_s$: nop
  jnp .L292_p$
  movb $0x4,8451
.L292_p$: nop
  jno .L292_o$
  movb $0x5,8452
.L292_o$: nop

    ret
         .size   in5, .-in5

    
.globl in5_constant
         .type   in5_constant, @function
in5_constant:
      

  mov $1,%dx
  .byte 0x66,0xed
  mov %ax,8192
  jnc .L293_c$
  movb $0x1,8448
.L293_c$: nop
  jnz .L293_z$
  movb $0x2,8449
.L293_z$: nop
  jns .L293_s$
  movb $0x3,8450
.L293_s$: nop
  jnp .L293_p$
  movb $0x4,8451
.L293_p$: nop
  jno .L293_o$
  movb $0x5,8452
.L293_o$: nop

    ret
         .size   in5_constant, .-in5_constant

    
.globl in5_allregs
         .type   in5_allregs, @function
in5_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0xed
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   in5_allregs, .-in5_allregs

    
.globl in6
         .type   in6, @function
in6:
      

  mov 4096,%dx
  .byte 0xed
  mov %eax,8192
  jnc .L294_c$
  movb $0x1,8448
.L294_c$: nop
  jnz .L294_z$
  movb $0x2,8449
.L294_z$: nop
  jns .L294_s$
  movb $0x3,8450
.L294_s$: nop
  jnp .L294_p$
  movb $0x4,8451
.L294_p$: nop
  jno .L294_o$
  movb $0x5,8452
.L294_o$: nop

    ret
         .size   in6, .-in6

    
.globl in6_constant
         .type   in6_constant, @function
in6_constant:
      

  mov $1,%dx
  .byte 0xed
  mov %eax,8192
  jnc .L295_c$
  movb $0x1,8448
.L295_c$: nop
  jnz .L295_z$
  movb $0x2,8449
.L295_z$: nop
  jns .L295_s$
  movb $0x3,8450
.L295_s$: nop
  jnp .L295_p$
  movb $0x4,8451
.L295_p$: nop
  jno .L295_o$
  movb $0x5,8452
.L295_o$: nop

    ret
         .size   in6_constant, .-in6_constant

    
.globl in6_allregs
         .type   in6_allregs, @function
in6_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xed
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   in6_allregs, .-in6_allregs

    
.globl inc1
         .type   inc1, @function
inc1:
      

  mov 4096,%al
  inc %al
  mov %al,8192
  jnc .L296_c$
  movb $0x1,8448
.L296_c$: nop
  jnz .L296_z$
  movb $0x2,8449
.L296_z$: nop
  jns .L296_s$
  movb $0x3,8450
.L296_s$: nop
  jnp .L296_p$
  movb $0x4,8451
.L296_p$: nop
  jno .L296_o$
  movb $0x5,8452
.L296_o$: nop

    ret
         .size   inc1, .-inc1

    
.globl inc1_constant
         .type   inc1_constant, @function
inc1_constant:
      

  mov $1,%al
  inc %al
  mov %al,8192
  jnc .L297_c$
  movb $0x1,8448
.L297_c$: nop
  jnz .L297_z$
  movb $0x2,8449
.L297_z$: nop
  jns .L297_s$
  movb $0x3,8450
.L297_s$: nop
  jnp .L297_p$
  movb $0x4,8451
.L297_p$: nop
  jno .L297_o$
  movb $0x5,8452
.L297_o$: nop

    ret
         .size   inc1_constant, .-inc1_constant

    
.globl inc1_allregs
         .type   inc1_allregs, @function
inc1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  inc %al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   inc1_allregs, .-inc1_allregs

    
.globl inc2
         .type   inc2, @function
inc2:
      

  mov 4096,%ax
  inc %ax
  mov %ax,8192
  jnc .L298_c$
  movb $0x1,8448
.L298_c$: nop
  jnz .L298_z$
  movb $0x2,8449
.L298_z$: nop
  jns .L298_s$
  movb $0x3,8450
.L298_s$: nop
  jnp .L298_p$
  movb $0x4,8451
.L298_p$: nop
  jno .L298_o$
  movb $0x5,8452
.L298_o$: nop

    ret
         .size   inc2, .-inc2

    
.globl inc2_constant
         .type   inc2_constant, @function
inc2_constant:
      

  mov $1,%ax
  inc %ax
  mov %ax,8192
  jnc .L299_c$
  movb $0x1,8448
.L299_c$: nop
  jnz .L299_z$
  movb $0x2,8449
.L299_z$: nop
  jns .L299_s$
  movb $0x3,8450
.L299_s$: nop
  jnp .L299_p$
  movb $0x4,8451
.L299_p$: nop
  jno .L299_o$
  movb $0x5,8452
.L299_o$: nop

    ret
         .size   inc2_constant, .-inc2_constant

    
.globl inc2_allregs
         .type   inc2_allregs, @function
inc2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  inc %ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   inc2_allregs, .-inc2_allregs

    
.globl inc3
         .type   inc3, @function
inc3:
      

  mov 4096,%ah
  inc %ah
  mov %ah,8192
  jnc .L300_c$
  movb $0x1,8448
.L300_c$: nop
  jnz .L300_z$
  movb $0x2,8449
.L300_z$: nop
  jns .L300_s$
  movb $0x3,8450
.L300_s$: nop
  jnp .L300_p$
  movb $0x4,8451
.L300_p$: nop
  jno .L300_o$
  movb $0x5,8452
.L300_o$: nop

    ret
         .size   inc3, .-inc3

    
.globl inc3_constant
         .type   inc3_constant, @function
inc3_constant:
      

  mov $1,%ah
  inc %ah
  mov %ah,8192
  jnc .L301_c$
  movb $0x1,8448
.L301_c$: nop
  jnz .L301_z$
  movb $0x2,8449
.L301_z$: nop
  jns .L301_s$
  movb $0x3,8450
.L301_s$: nop
  jnp .L301_p$
  movb $0x4,8451
.L301_p$: nop
  jno .L301_o$
  movb $0x5,8452
.L301_o$: nop

    ret
         .size   inc3_constant, .-inc3_constant

    
.globl inc3_allregs
         .type   inc3_allregs, @function
inc3_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  inc %ah
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   inc3_allregs, .-inc3_allregs

    
.globl inc4
         .type   inc4, @function
inc4:
      

  mov 4096,%eax
  inc %eax
  mov %eax,8192
  jnc .L302_c$
  movb $0x1,8448
.L302_c$: nop
  jnz .L302_z$
  movb $0x2,8449
.L302_z$: nop
  jns .L302_s$
  movb $0x3,8450
.L302_s$: nop
  jnp .L302_p$
  movb $0x4,8451
.L302_p$: nop
  jno .L302_o$
  movb $0x5,8452
.L302_o$: nop

    ret
         .size   inc4, .-inc4

    
.globl inc4_constant
         .type   inc4_constant, @function
inc4_constant:
      

  mov $1,%eax
  inc %eax
  mov %eax,8192
  jnc .L303_c$
  movb $0x1,8448
.L303_c$: nop
  jnz .L303_z$
  movb $0x2,8449
.L303_z$: nop
  jns .L303_s$
  movb $0x3,8450
.L303_s$: nop
  jnp .L303_p$
  movb $0x4,8451
.L303_p$: nop
  jno .L303_o$
  movb $0x5,8452
.L303_o$: nop

    ret
         .size   inc4_constant, .-inc4_constant

    
.globl inc4_allregs
         .type   inc4_allregs, @function
inc4_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  inc %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   inc4_allregs, .-inc4_allregs

    
.globl inc5b
         .type   inc5b, @function
inc5b:
      

  mov 4096,%eax
  incb (%eax)
  jnc .L304_c$
  movb $0x1,8448
.L304_c$: nop
  jnz .L304_z$
  movb $0x2,8449
.L304_z$: nop
  jns .L304_s$
  movb $0x3,8450
.L304_s$: nop
  jnp .L304_p$
  movb $0x4,8451
.L304_p$: nop
  jno .L304_o$
  movb $0x5,8452
.L304_o$: nop

    ret
         .size   inc5b, .-inc5b

    
.globl inc5b_constant
         .type   inc5b_constant, @function
inc5b_constant:
      

  mov $1,%eax
  incb (%eax)
  jnc .L305_c$
  movb $0x1,8448
.L305_c$: nop
  jnz .L305_z$
  movb $0x2,8449
.L305_z$: nop
  jns .L305_s$
  movb $0x3,8450
.L305_s$: nop
  jnp .L305_p$
  movb $0x4,8451
.L305_p$: nop
  jno .L305_o$
  movb $0x5,8452
.L305_o$: nop

    ret
         .size   inc5b_constant, .-inc5b_constant

    
.globl inc5b_allregs
         .type   inc5b_allregs, @function
inc5b_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  incb (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   inc5b_allregs, .-inc5b_allregs

    
.globl inc5w
         .type   inc5w, @function
inc5w:
      

  mov 4096,%eax
  incw (%eax)
  jnc .L306_c$
  movb $0x1,8448
.L306_c$: nop
  jnz .L306_z$
  movb $0x2,8449
.L306_z$: nop
  jns .L306_s$
  movb $0x3,8450
.L306_s$: nop
  jnp .L306_p$
  movb $0x4,8451
.L306_p$: nop
  jno .L306_o$
  movb $0x5,8452
.L306_o$: nop

    ret
         .size   inc5w, .-inc5w

    
.globl inc5w_constant
         .type   inc5w_constant, @function
inc5w_constant:
      

  mov $1,%eax
  incw (%eax)
  jnc .L307_c$
  movb $0x1,8448
.L307_c$: nop
  jnz .L307_z$
  movb $0x2,8449
.L307_z$: nop
  jns .L307_s$
  movb $0x3,8450
.L307_s$: nop
  jnp .L307_p$
  movb $0x4,8451
.L307_p$: nop
  jno .L307_o$
  movb $0x5,8452
.L307_o$: nop

    ret
         .size   inc5w_constant, .-inc5w_constant

    
.globl inc5w_allregs
         .type   inc5w_allregs, @function
inc5w_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  incw (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   inc5w_allregs, .-inc5w_allregs

    
.globl inc5l
         .type   inc5l, @function
inc5l:
      

  mov 4096,%eax
  incl (%eax)
  jnc .L308_c$
  movb $0x1,8448
.L308_c$: nop
  jnz .L308_z$
  movb $0x2,8449
.L308_z$: nop
  jns .L308_s$
  movb $0x3,8450
.L308_s$: nop
  jnp .L308_p$
  movb $0x4,8451
.L308_p$: nop
  jno .L308_o$
  movb $0x5,8452
.L308_o$: nop

    ret
         .size   inc5l, .-inc5l

    
.globl inc5l_constant
         .type   inc5l_constant, @function
inc5l_constant:
      

  mov $1,%eax
  incl (%eax)
  jnc .L309_c$
  movb $0x1,8448
.L309_c$: nop
  jnz .L309_z$
  movb $0x2,8449
.L309_z$: nop
  jns .L309_s$
  movb $0x3,8450
.L309_s$: nop
  jnp .L309_p$
  movb $0x4,8451
.L309_p$: nop
  jno .L309_o$
  movb $0x5,8452
.L309_o$: nop

    ret
         .size   inc5l_constant, .-inc5l_constant

    
.globl inc5l_allregs
         .type   inc5l_allregs, @function
inc5l_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  incl (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   inc5l_allregs, .-inc5l_allregs

    
.globl inc_locked
         .type   inc_locked, @function
inc_locked:
      


  lock incl (%eax)


    ret
         .size   inc_locked, .-inc_locked

    
.globl inc_locked_constant
         .type   inc_locked_constant, @function
inc_locked_constant:
      


  lock incl (%eax)


    ret
         .size   inc_locked_constant, .-inc_locked_constant

    
.globl inc_locked_allregs
         .type   inc_locked_allregs, @function
inc_locked_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  lock incl (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   inc_locked_allregs, .-inc_locked_allregs

    
.globl ins1_cld
         .type   ins1_cld, @function
ins1_cld:
      cld

  mov 4096,%edi
  mov 4100,%dx
  .byte 0x6c
  mov %edi,8192
  jnc .L310_c$
  movb $0x1,8448
.L310_c$: nop
  jnz .L310_z$
  movb $0x2,8449
.L310_z$: nop
  jns .L310_s$
  movb $0x3,8450
.L310_s$: nop
  jnp .L310_p$
  movb $0x4,8451
.L310_p$: nop
  jno .L310_o$
  movb $0x5,8452
.L310_o$: nop

    ret
         .size   ins1_cld, .-ins1_cld

    
.globl ins1_cld_constant
         .type   ins1_cld_constant, @function
ins1_cld_constant:
      cld

  mov $1,%edi
  mov $2,%dx
  .byte 0x6c
  mov %edi,8192
  jnc .L311_c$
  movb $0x1,8448
.L311_c$: nop
  jnz .L311_z$
  movb $0x2,8449
.L311_z$: nop
  jns .L311_s$
  movb $0x3,8450
.L311_s$: nop
  jnp .L311_p$
  movb $0x4,8451
.L311_p$: nop
  jno .L311_o$
  movb $0x5,8452
.L311_o$: nop

    ret
         .size   ins1_cld_constant, .-ins1_cld_constant

    
.globl ins1_cld_allregs
         .type   ins1_cld_allregs, @function
ins1_cld_allregs:
      cld

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x6c
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   ins1_cld_allregs, .-ins1_cld_allregs

    
.globl ins1_std
         .type   ins1_std, @function
ins1_std:
      std

  mov 4096,%edi
  mov 4100,%dx
  .byte 0x6c
  mov %edi,8192
  jnc .L312_c$
  movb $0x1,8448
.L312_c$: nop
  jnz .L312_z$
  movb $0x2,8449
.L312_z$: nop
  jns .L312_s$
  movb $0x3,8450
.L312_s$: nop
  jnp .L312_p$
  movb $0x4,8451
.L312_p$: nop
  jno .L312_o$
  movb $0x5,8452
.L312_o$: nop

    ret
         .size   ins1_std, .-ins1_std

    
.globl ins1_std_constant
         .type   ins1_std_constant, @function
ins1_std_constant:
      std

  mov $1,%edi
  mov $2,%dx
  .byte 0x6c
  mov %edi,8192
  jnc .L313_c$
  movb $0x1,8448
.L313_c$: nop
  jnz .L313_z$
  movb $0x2,8449
.L313_z$: nop
  jns .L313_s$
  movb $0x3,8450
.L313_s$: nop
  jnp .L313_p$
  movb $0x4,8451
.L313_p$: nop
  jno .L313_o$
  movb $0x5,8452
.L313_o$: nop

    ret
         .size   ins1_std_constant, .-ins1_std_constant

    
.globl ins1_std_allregs
         .type   ins1_std_allregs, @function
ins1_std_allregs:
      std

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x6c
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   ins1_std_allregs, .-ins1_std_allregs

    
.globl ins1
         .type   ins1, @function
ins1:
      

  mov 4096,%edi
  mov 4100,%dx
  .byte 0x6c
  mov %edi,8192
  jnc .L314_c$
  movb $0x1,8448
.L314_c$: nop
  jnz .L314_z$
  movb $0x2,8449
.L314_z$: nop
  jns .L314_s$
  movb $0x3,8450
.L314_s$: nop
  jnp .L314_p$
  movb $0x4,8451
.L314_p$: nop
  jno .L314_o$
  movb $0x5,8452
.L314_o$: nop

    ret
         .size   ins1, .-ins1

    
.globl ins1_constant
         .type   ins1_constant, @function
ins1_constant:
      

  mov $1,%edi
  mov $2,%dx
  .byte 0x6c
  mov %edi,8192
  jnc .L315_c$
  movb $0x1,8448
.L315_c$: nop
  jnz .L315_z$
  movb $0x2,8449
.L315_z$: nop
  jns .L315_s$
  movb $0x3,8450
.L315_s$: nop
  jnp .L315_p$
  movb $0x4,8451
.L315_p$: nop
  jno .L315_o$
  movb $0x5,8452
.L315_o$: nop

    ret
         .size   ins1_constant, .-ins1_constant

    
.globl ins1_allregs
         .type   ins1_allregs, @function
ins1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x6c
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   ins1_allregs, .-ins1_allregs

    
.globl ins2_cld
         .type   ins2_cld, @function
ins2_cld:
      cld

  mov 4096,%edi
  mov 4100,%dx
  .byte 0x66,0x6d
  mov %edi,8192
  jnc .L316_c$
  movb $0x1,8448
.L316_c$: nop
  jnz .L316_z$
  movb $0x2,8449
.L316_z$: nop
  jns .L316_s$
  movb $0x3,8450
.L316_s$: nop
  jnp .L316_p$
  movb $0x4,8451
.L316_p$: nop
  jno .L316_o$
  movb $0x5,8452
.L316_o$: nop

    ret
         .size   ins2_cld, .-ins2_cld

    
.globl ins2_cld_constant
         .type   ins2_cld_constant, @function
ins2_cld_constant:
      cld

  mov $1,%edi
  mov $2,%dx
  .byte 0x66,0x6d
  mov %edi,8192
  jnc .L317_c$
  movb $0x1,8448
.L317_c$: nop
  jnz .L317_z$
  movb $0x2,8449
.L317_z$: nop
  jns .L317_s$
  movb $0x3,8450
.L317_s$: nop
  jnp .L317_p$
  movb $0x4,8451
.L317_p$: nop
  jno .L317_o$
  movb $0x5,8452
.L317_o$: nop

    ret
         .size   ins2_cld_constant, .-ins2_cld_constant

    
.globl ins2_cld_allregs
         .type   ins2_cld_allregs, @function
ins2_cld_allregs:
      cld

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0x6d
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   ins2_cld_allregs, .-ins2_cld_allregs

    
.globl ins2_std
         .type   ins2_std, @function
ins2_std:
      std

  mov 4096,%edi
  mov 4100,%dx
  .byte 0x66,0x6d
  mov %edi,8192
  jnc .L318_c$
  movb $0x1,8448
.L318_c$: nop
  jnz .L318_z$
  movb $0x2,8449
.L318_z$: nop
  jns .L318_s$
  movb $0x3,8450
.L318_s$: nop
  jnp .L318_p$
  movb $0x4,8451
.L318_p$: nop
  jno .L318_o$
  movb $0x5,8452
.L318_o$: nop

    ret
         .size   ins2_std, .-ins2_std

    
.globl ins2_std_constant
         .type   ins2_std_constant, @function
ins2_std_constant:
      std

  mov $1,%edi
  mov $2,%dx
  .byte 0x66,0x6d
  mov %edi,8192
  jnc .L319_c$
  movb $0x1,8448
.L319_c$: nop
  jnz .L319_z$
  movb $0x2,8449
.L319_z$: nop
  jns .L319_s$
  movb $0x3,8450
.L319_s$: nop
  jnp .L319_p$
  movb $0x4,8451
.L319_p$: nop
  jno .L319_o$
  movb $0x5,8452
.L319_o$: nop

    ret
         .size   ins2_std_constant, .-ins2_std_constant

    
.globl ins2_std_allregs
         .type   ins2_std_allregs, @function
ins2_std_allregs:
      std

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0x6d
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   ins2_std_allregs, .-ins2_std_allregs

    
.globl ins2
         .type   ins2, @function
ins2:
      

  mov 4096,%edi
  mov 4100,%dx
  .byte 0x66,0x6d
  mov %edi,8192
  jnc .L320_c$
  movb $0x1,8448
.L320_c$: nop
  jnz .L320_z$
  movb $0x2,8449
.L320_z$: nop
  jns .L320_s$
  movb $0x3,8450
.L320_s$: nop
  jnp .L320_p$
  movb $0x4,8451
.L320_p$: nop
  jno .L320_o$
  movb $0x5,8452
.L320_o$: nop

    ret
         .size   ins2, .-ins2

    
.globl ins2_constant
         .type   ins2_constant, @function
ins2_constant:
      

  mov $1,%edi
  mov $2,%dx
  .byte 0x66,0x6d
  mov %edi,8192
  jnc .L321_c$
  movb $0x1,8448
.L321_c$: nop
  jnz .L321_z$
  movb $0x2,8449
.L321_z$: nop
  jns .L321_s$
  movb $0x3,8450
.L321_s$: nop
  jnp .L321_p$
  movb $0x4,8451
.L321_p$: nop
  jno .L321_o$
  movb $0x5,8452
.L321_o$: nop

    ret
         .size   ins2_constant, .-ins2_constant

    
.globl ins2_allregs
         .type   ins2_allregs, @function
ins2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0x6d
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   ins2_allregs, .-ins2_allregs

    
.globl ins3_cld
         .type   ins3_cld, @function
ins3_cld:
      cld

  mov 4096,%edi
  mov 4100,%dx
  .byte 0x6d
  mov %edi,8192
  jnc .L322_c$
  movb $0x1,8448
.L322_c$: nop
  jnz .L322_z$
  movb $0x2,8449
.L322_z$: nop
  jns .L322_s$
  movb $0x3,8450
.L322_s$: nop
  jnp .L322_p$
  movb $0x4,8451
.L322_p$: nop
  jno .L322_o$
  movb $0x5,8452
.L322_o$: nop

    ret
         .size   ins3_cld, .-ins3_cld

    
.globl ins3_cld_constant
         .type   ins3_cld_constant, @function
ins3_cld_constant:
      cld

  mov $1,%edi
  mov $2,%dx
  .byte 0x6d
  mov %edi,8192
  jnc .L323_c$
  movb $0x1,8448
.L323_c$: nop
  jnz .L323_z$
  movb $0x2,8449
.L323_z$: nop
  jns .L323_s$
  movb $0x3,8450
.L323_s$: nop
  jnp .L323_p$
  movb $0x4,8451
.L323_p$: nop
  jno .L323_o$
  movb $0x5,8452
.L323_o$: nop

    ret
         .size   ins3_cld_constant, .-ins3_cld_constant

    
.globl ins3_cld_allregs
         .type   ins3_cld_allregs, @function
ins3_cld_allregs:
      cld

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x6d
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   ins3_cld_allregs, .-ins3_cld_allregs

    
.globl ins3_std
         .type   ins3_std, @function
ins3_std:
      std

  mov 4096,%edi
  mov 4100,%dx
  .byte 0x6d
  mov %edi,8192
  jnc .L324_c$
  movb $0x1,8448
.L324_c$: nop
  jnz .L324_z$
  movb $0x2,8449
.L324_z$: nop
  jns .L324_s$
  movb $0x3,8450
.L324_s$: nop
  jnp .L324_p$
  movb $0x4,8451
.L324_p$: nop
  jno .L324_o$
  movb $0x5,8452
.L324_o$: nop

    ret
         .size   ins3_std, .-ins3_std

    
.globl ins3_std_constant
         .type   ins3_std_constant, @function
ins3_std_constant:
      std

  mov $1,%edi
  mov $2,%dx
  .byte 0x6d
  mov %edi,8192
  jnc .L325_c$
  movb $0x1,8448
.L325_c$: nop
  jnz .L325_z$
  movb $0x2,8449
.L325_z$: nop
  jns .L325_s$
  movb $0x3,8450
.L325_s$: nop
  jnp .L325_p$
  movb $0x4,8451
.L325_p$: nop
  jno .L325_o$
  movb $0x5,8452
.L325_o$: nop

    ret
         .size   ins3_std_constant, .-ins3_std_constant

    
.globl ins3_std_allregs
         .type   ins3_std_allregs, @function
ins3_std_allregs:
      std

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x6d
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   ins3_std_allregs, .-ins3_std_allregs

    
.globl ins3
         .type   ins3, @function
ins3:
      

  mov 4096,%edi
  mov 4100,%dx
  .byte 0x6d
  mov %edi,8192
  jnc .L326_c$
  movb $0x1,8448
.L326_c$: nop
  jnz .L326_z$
  movb $0x2,8449
.L326_z$: nop
  jns .L326_s$
  movb $0x3,8450
.L326_s$: nop
  jnp .L326_p$
  movb $0x4,8451
.L326_p$: nop
  jno .L326_o$
  movb $0x5,8452
.L326_o$: nop

    ret
         .size   ins3, .-ins3

    
.globl ins3_constant
         .type   ins3_constant, @function
ins3_constant:
      

  mov $1,%edi
  mov $2,%dx
  .byte 0x6d
  mov %edi,8192
  jnc .L327_c$
  movb $0x1,8448
.L327_c$: nop
  jnz .L327_z$
  movb $0x2,8449
.L327_z$: nop
  jns .L327_s$
  movb $0x3,8450
.L327_s$: nop
  jnp .L327_p$
  movb $0x4,8451
.L327_p$: nop
  jno .L327_o$
  movb $0x5,8452
.L327_o$: nop

    ret
         .size   ins3_constant, .-ins3_constant

    
.globl ins3_allregs
         .type   ins3_allregs, @function
ins3_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x6d
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   ins3_allregs, .-ins3_allregs

    
.globl int1
         .type   int1, @function
int1:
      


  .byte 0xcc


    ret
         .size   int1, .-int1

    
.globl int1_constant
         .type   int1_constant, @function
int1_constant:
      


  .byte 0xcc


    ret
         .size   int1_constant, .-int1_constant

    
.globl int1_allregs
         .type   int1_allregs, @function
int1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xcc
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   int1_allregs, .-int1_allregs

    
.globl int2
         .type   int2, @function
int2:
      


  .byte 0xcd,0x12


    ret
         .size   int2, .-int2

    
.globl int2_constant
         .type   int2_constant, @function
int2_constant:
      


  .byte 0xcd,0x12


    ret
         .size   int2_constant, .-int2_constant

    
.globl int2_allregs
         .type   int2_allregs, @function
int2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xcd,0x12
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   int2_allregs, .-int2_allregs

    
.globl int3
         .type   int3, @function
int3:
      


  .byte 0xce


    ret
         .size   int3, .-int3

    
.globl int3_constant
         .type   int3_constant, @function
int3_constant:
      


  .byte 0xce


    ret
         .size   int3_constant, .-int3_constant

    
.globl int3_allregs
         .type   int3_allregs, @function
int3_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xce
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   int3_allregs, .-int3_allregs

    
.globl iret1
         .type   iret1, @function
iret1:
      


  .byte 0xcf


    ret
         .size   iret1, .-iret1

    
.globl iret1_constant
         .type   iret1_constant, @function
iret1_constant:
      


  .byte 0xcf


    ret
         .size   iret1_constant, .-iret1_constant

    
.globl iret1_allregs
         .type   iret1_allregs, @function
iret1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xcf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   iret1_allregs, .-iret1_allregs

    
.globl iret2
         .type   iret2, @function
iret2:
      


  .byte 0x66,0xcf


    ret
         .size   iret2, .-iret2

    
.globl iret2_constant
         .type   iret2_constant, @function
iret2_constant:
      


  .byte 0x66,0xcf


    ret
         .size   iret2_constant, .-iret2_constant

    
.globl iret2_allregs
         .type   iret2_allregs, @function
iret2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0xcf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   iret2_allregs, .-iret2_allregs

    
.globl jcc_short_with_code_0_flags_clear
         .type   jcc_short_with_code_0_flags_clear, @function
jcc_short_with_code_0_flags_clear:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x70,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_0_flags_clear, .-jcc_short_with_code_0_flags_clear

    
.globl jcc_short_with_code_0_flags_clear_constant
         .type   jcc_short_with_code_0_flags_clear_constant, @function
jcc_short_with_code_0_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x70,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_0_flags_clear_constant, .-jcc_short_with_code_0_flags_clear_constant

    
.globl jcc_short_with_code_0_flags_clear_allregs
         .type   jcc_short_with_code_0_flags_clear_allregs, @function
jcc_short_with_code_0_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x70,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_0_flags_clear_allregs, .-jcc_short_with_code_0_flags_clear_allregs

    
.globl jcc_short_with_code_0_flags_set1
         .type   jcc_short_with_code_0_flags_set1, @function
jcc_short_with_code_0_flags_set1:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x70,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_0_flags_set1, .-jcc_short_with_code_0_flags_set1

    
.globl jcc_short_with_code_0_flags_set1_constant
         .type   jcc_short_with_code_0_flags_set1_constant, @function
jcc_short_with_code_0_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x70,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_0_flags_set1_constant, .-jcc_short_with_code_0_flags_set1_constant

    
.globl jcc_short_with_code_0_flags_set1_allregs
         .type   jcc_short_with_code_0_flags_set1_allregs, @function
jcc_short_with_code_0_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x70,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_0_flags_set1_allregs, .-jcc_short_with_code_0_flags_set1_allregs

    
.globl jcc_short_with_code_0_flags_set2
         .type   jcc_short_with_code_0_flags_set2, @function
jcc_short_with_code_0_flags_set2:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x70,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_0_flags_set2, .-jcc_short_with_code_0_flags_set2

    
.globl jcc_short_with_code_0_flags_set2_constant
         .type   jcc_short_with_code_0_flags_set2_constant, @function
jcc_short_with_code_0_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x70,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_0_flags_set2_constant, .-jcc_short_with_code_0_flags_set2_constant

    
.globl jcc_short_with_code_0_flags_set2_allregs
         .type   jcc_short_with_code_0_flags_set2_allregs, @function
jcc_short_with_code_0_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x70,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_0_flags_set2_allregs, .-jcc_short_with_code_0_flags_set2_allregs

    
.globl jcc_short_with_code_0_flags_cmp
         .type   jcc_short_with_code_0_flags_cmp, @function
jcc_short_with_code_0_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x70,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_0_flags_cmp, .-jcc_short_with_code_0_flags_cmp

    
.globl jcc_short_with_code_0_flags_cmp_constant
         .type   jcc_short_with_code_0_flags_cmp_constant, @function
jcc_short_with_code_0_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x70,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_0_flags_cmp_constant, .-jcc_short_with_code_0_flags_cmp_constant

    
.globl jcc_short_with_code_0_flags_cmp_allregs
         .type   jcc_short_with_code_0_flags_cmp_allregs, @function
jcc_short_with_code_0_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x70,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_0_flags_cmp_allregs, .-jcc_short_with_code_0_flags_cmp_allregs

    
.globl jcc_short_with_code_1_flags_clear
         .type   jcc_short_with_code_1_flags_clear, @function
jcc_short_with_code_1_flags_clear:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x71,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_1_flags_clear, .-jcc_short_with_code_1_flags_clear

    
.globl jcc_short_with_code_1_flags_clear_constant
         .type   jcc_short_with_code_1_flags_clear_constant, @function
jcc_short_with_code_1_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x71,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_1_flags_clear_constant, .-jcc_short_with_code_1_flags_clear_constant

    
.globl jcc_short_with_code_1_flags_clear_allregs
         .type   jcc_short_with_code_1_flags_clear_allregs, @function
jcc_short_with_code_1_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x71,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_1_flags_clear_allregs, .-jcc_short_with_code_1_flags_clear_allregs

    
.globl jcc_short_with_code_1_flags_set1
         .type   jcc_short_with_code_1_flags_set1, @function
jcc_short_with_code_1_flags_set1:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x71,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_1_flags_set1, .-jcc_short_with_code_1_flags_set1

    
.globl jcc_short_with_code_1_flags_set1_constant
         .type   jcc_short_with_code_1_flags_set1_constant, @function
jcc_short_with_code_1_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x71,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_1_flags_set1_constant, .-jcc_short_with_code_1_flags_set1_constant

    
.globl jcc_short_with_code_1_flags_set1_allregs
         .type   jcc_short_with_code_1_flags_set1_allregs, @function
jcc_short_with_code_1_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x71,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_1_flags_set1_allregs, .-jcc_short_with_code_1_flags_set1_allregs

    
.globl jcc_short_with_code_1_flags_set2
         .type   jcc_short_with_code_1_flags_set2, @function
jcc_short_with_code_1_flags_set2:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x71,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_1_flags_set2, .-jcc_short_with_code_1_flags_set2

    
.globl jcc_short_with_code_1_flags_set2_constant
         .type   jcc_short_with_code_1_flags_set2_constant, @function
jcc_short_with_code_1_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x71,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_1_flags_set2_constant, .-jcc_short_with_code_1_flags_set2_constant

    
.globl jcc_short_with_code_1_flags_set2_allregs
         .type   jcc_short_with_code_1_flags_set2_allregs, @function
jcc_short_with_code_1_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x71,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_1_flags_set2_allregs, .-jcc_short_with_code_1_flags_set2_allregs

    
.globl jcc_short_with_code_1_flags_cmp
         .type   jcc_short_with_code_1_flags_cmp, @function
jcc_short_with_code_1_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x71,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_1_flags_cmp, .-jcc_short_with_code_1_flags_cmp

    
.globl jcc_short_with_code_1_flags_cmp_constant
         .type   jcc_short_with_code_1_flags_cmp_constant, @function
jcc_short_with_code_1_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x71,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_1_flags_cmp_constant, .-jcc_short_with_code_1_flags_cmp_constant

    
.globl jcc_short_with_code_1_flags_cmp_allregs
         .type   jcc_short_with_code_1_flags_cmp_allregs, @function
jcc_short_with_code_1_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x71,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_1_flags_cmp_allregs, .-jcc_short_with_code_1_flags_cmp_allregs

    
.globl jcc_short_with_code_2_flags_clear
         .type   jcc_short_with_code_2_flags_clear, @function
jcc_short_with_code_2_flags_clear:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x72,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_2_flags_clear, .-jcc_short_with_code_2_flags_clear

    
.globl jcc_short_with_code_2_flags_clear_constant
         .type   jcc_short_with_code_2_flags_clear_constant, @function
jcc_short_with_code_2_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x72,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_2_flags_clear_constant, .-jcc_short_with_code_2_flags_clear_constant

    
.globl jcc_short_with_code_2_flags_clear_allregs
         .type   jcc_short_with_code_2_flags_clear_allregs, @function
jcc_short_with_code_2_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x72,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_2_flags_clear_allregs, .-jcc_short_with_code_2_flags_clear_allregs

    
.globl jcc_short_with_code_2_flags_set1
         .type   jcc_short_with_code_2_flags_set1, @function
jcc_short_with_code_2_flags_set1:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x72,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_2_flags_set1, .-jcc_short_with_code_2_flags_set1

    
.globl jcc_short_with_code_2_flags_set1_constant
         .type   jcc_short_with_code_2_flags_set1_constant, @function
jcc_short_with_code_2_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x72,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_2_flags_set1_constant, .-jcc_short_with_code_2_flags_set1_constant

    
.globl jcc_short_with_code_2_flags_set1_allregs
         .type   jcc_short_with_code_2_flags_set1_allregs, @function
jcc_short_with_code_2_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x72,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_2_flags_set1_allregs, .-jcc_short_with_code_2_flags_set1_allregs

    
.globl jcc_short_with_code_2_flags_set2
         .type   jcc_short_with_code_2_flags_set2, @function
jcc_short_with_code_2_flags_set2:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x72,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_2_flags_set2, .-jcc_short_with_code_2_flags_set2

    
.globl jcc_short_with_code_2_flags_set2_constant
         .type   jcc_short_with_code_2_flags_set2_constant, @function
jcc_short_with_code_2_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x72,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_2_flags_set2_constant, .-jcc_short_with_code_2_flags_set2_constant

    
.globl jcc_short_with_code_2_flags_set2_allregs
         .type   jcc_short_with_code_2_flags_set2_allregs, @function
jcc_short_with_code_2_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x72,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_2_flags_set2_allregs, .-jcc_short_with_code_2_flags_set2_allregs

    
.globl jcc_short_with_code_2_flags_cmp
         .type   jcc_short_with_code_2_flags_cmp, @function
jcc_short_with_code_2_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x72,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_2_flags_cmp, .-jcc_short_with_code_2_flags_cmp

    
.globl jcc_short_with_code_2_flags_cmp_constant
         .type   jcc_short_with_code_2_flags_cmp_constant, @function
jcc_short_with_code_2_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x72,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_2_flags_cmp_constant, .-jcc_short_with_code_2_flags_cmp_constant

    
.globl jcc_short_with_code_2_flags_cmp_allregs
         .type   jcc_short_with_code_2_flags_cmp_allregs, @function
jcc_short_with_code_2_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x72,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_2_flags_cmp_allregs, .-jcc_short_with_code_2_flags_cmp_allregs

    
.globl jcc_short_with_code_3_flags_clear
         .type   jcc_short_with_code_3_flags_clear, @function
jcc_short_with_code_3_flags_clear:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x73,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_3_flags_clear, .-jcc_short_with_code_3_flags_clear

    
.globl jcc_short_with_code_3_flags_clear_constant
         .type   jcc_short_with_code_3_flags_clear_constant, @function
jcc_short_with_code_3_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x73,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_3_flags_clear_constant, .-jcc_short_with_code_3_flags_clear_constant

    
.globl jcc_short_with_code_3_flags_clear_allregs
         .type   jcc_short_with_code_3_flags_clear_allregs, @function
jcc_short_with_code_3_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x73,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_3_flags_clear_allregs, .-jcc_short_with_code_3_flags_clear_allregs

    
.globl jcc_short_with_code_3_flags_set1
         .type   jcc_short_with_code_3_flags_set1, @function
jcc_short_with_code_3_flags_set1:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x73,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_3_flags_set1, .-jcc_short_with_code_3_flags_set1

    
.globl jcc_short_with_code_3_flags_set1_constant
         .type   jcc_short_with_code_3_flags_set1_constant, @function
jcc_short_with_code_3_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x73,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_3_flags_set1_constant, .-jcc_short_with_code_3_flags_set1_constant

    
.globl jcc_short_with_code_3_flags_set1_allregs
         .type   jcc_short_with_code_3_flags_set1_allregs, @function
jcc_short_with_code_3_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x73,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_3_flags_set1_allregs, .-jcc_short_with_code_3_flags_set1_allregs

    
.globl jcc_short_with_code_3_flags_set2
         .type   jcc_short_with_code_3_flags_set2, @function
jcc_short_with_code_3_flags_set2:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x73,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_3_flags_set2, .-jcc_short_with_code_3_flags_set2

    
.globl jcc_short_with_code_3_flags_set2_constant
         .type   jcc_short_with_code_3_flags_set2_constant, @function
jcc_short_with_code_3_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x73,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_3_flags_set2_constant, .-jcc_short_with_code_3_flags_set2_constant

    
.globl jcc_short_with_code_3_flags_set2_allregs
         .type   jcc_short_with_code_3_flags_set2_allregs, @function
jcc_short_with_code_3_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x73,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_3_flags_set2_allregs, .-jcc_short_with_code_3_flags_set2_allregs

    
.globl jcc_short_with_code_3_flags_cmp
         .type   jcc_short_with_code_3_flags_cmp, @function
jcc_short_with_code_3_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x73,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_3_flags_cmp, .-jcc_short_with_code_3_flags_cmp

    
.globl jcc_short_with_code_3_flags_cmp_constant
         .type   jcc_short_with_code_3_flags_cmp_constant, @function
jcc_short_with_code_3_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x73,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_3_flags_cmp_constant, .-jcc_short_with_code_3_flags_cmp_constant

    
.globl jcc_short_with_code_3_flags_cmp_allregs
         .type   jcc_short_with_code_3_flags_cmp_allregs, @function
jcc_short_with_code_3_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x73,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_3_flags_cmp_allregs, .-jcc_short_with_code_3_flags_cmp_allregs

    
.globl jcc_short_with_code_4_flags_clear
         .type   jcc_short_with_code_4_flags_clear, @function
jcc_short_with_code_4_flags_clear:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x74,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_4_flags_clear, .-jcc_short_with_code_4_flags_clear

    
.globl jcc_short_with_code_4_flags_clear_constant
         .type   jcc_short_with_code_4_flags_clear_constant, @function
jcc_short_with_code_4_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x74,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_4_flags_clear_constant, .-jcc_short_with_code_4_flags_clear_constant

    
.globl jcc_short_with_code_4_flags_clear_allregs
         .type   jcc_short_with_code_4_flags_clear_allregs, @function
jcc_short_with_code_4_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x74,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_4_flags_clear_allregs, .-jcc_short_with_code_4_flags_clear_allregs

    
.globl jcc_short_with_code_4_flags_set1
         .type   jcc_short_with_code_4_flags_set1, @function
jcc_short_with_code_4_flags_set1:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x74,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_4_flags_set1, .-jcc_short_with_code_4_flags_set1

    
.globl jcc_short_with_code_4_flags_set1_constant
         .type   jcc_short_with_code_4_flags_set1_constant, @function
jcc_short_with_code_4_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x74,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_4_flags_set1_constant, .-jcc_short_with_code_4_flags_set1_constant

    
.globl jcc_short_with_code_4_flags_set1_allregs
         .type   jcc_short_with_code_4_flags_set1_allregs, @function
jcc_short_with_code_4_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x74,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_4_flags_set1_allregs, .-jcc_short_with_code_4_flags_set1_allregs

    
.globl jcc_short_with_code_4_flags_set2
         .type   jcc_short_with_code_4_flags_set2, @function
jcc_short_with_code_4_flags_set2:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x74,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_4_flags_set2, .-jcc_short_with_code_4_flags_set2

    
.globl jcc_short_with_code_4_flags_set2_constant
         .type   jcc_short_with_code_4_flags_set2_constant, @function
jcc_short_with_code_4_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x74,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_4_flags_set2_constant, .-jcc_short_with_code_4_flags_set2_constant

    
.globl jcc_short_with_code_4_flags_set2_allregs
         .type   jcc_short_with_code_4_flags_set2_allregs, @function
jcc_short_with_code_4_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x74,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_4_flags_set2_allregs, .-jcc_short_with_code_4_flags_set2_allregs

    
.globl jcc_short_with_code_4_flags_cmp
         .type   jcc_short_with_code_4_flags_cmp, @function
jcc_short_with_code_4_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x74,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_4_flags_cmp, .-jcc_short_with_code_4_flags_cmp

    
.globl jcc_short_with_code_4_flags_cmp_constant
         .type   jcc_short_with_code_4_flags_cmp_constant, @function
jcc_short_with_code_4_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x74,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_4_flags_cmp_constant, .-jcc_short_with_code_4_flags_cmp_constant

    
.globl jcc_short_with_code_4_flags_cmp_allregs
         .type   jcc_short_with_code_4_flags_cmp_allregs, @function
jcc_short_with_code_4_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x74,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_4_flags_cmp_allregs, .-jcc_short_with_code_4_flags_cmp_allregs

    
.globl jcc_short_with_code_5_flags_clear
         .type   jcc_short_with_code_5_flags_clear, @function
jcc_short_with_code_5_flags_clear:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x75,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_5_flags_clear, .-jcc_short_with_code_5_flags_clear

    
.globl jcc_short_with_code_5_flags_clear_constant
         .type   jcc_short_with_code_5_flags_clear_constant, @function
jcc_short_with_code_5_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x75,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_5_flags_clear_constant, .-jcc_short_with_code_5_flags_clear_constant

    
.globl jcc_short_with_code_5_flags_clear_allregs
         .type   jcc_short_with_code_5_flags_clear_allregs, @function
jcc_short_with_code_5_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x75,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_5_flags_clear_allregs, .-jcc_short_with_code_5_flags_clear_allregs

    
.globl jcc_short_with_code_5_flags_set1
         .type   jcc_short_with_code_5_flags_set1, @function
jcc_short_with_code_5_flags_set1:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x75,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_5_flags_set1, .-jcc_short_with_code_5_flags_set1

    
.globl jcc_short_with_code_5_flags_set1_constant
         .type   jcc_short_with_code_5_flags_set1_constant, @function
jcc_short_with_code_5_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x75,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_5_flags_set1_constant, .-jcc_short_with_code_5_flags_set1_constant

    
.globl jcc_short_with_code_5_flags_set1_allregs
         .type   jcc_short_with_code_5_flags_set1_allregs, @function
jcc_short_with_code_5_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x75,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_5_flags_set1_allregs, .-jcc_short_with_code_5_flags_set1_allregs

    
.globl jcc_short_with_code_5_flags_set2
         .type   jcc_short_with_code_5_flags_set2, @function
jcc_short_with_code_5_flags_set2:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x75,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_5_flags_set2, .-jcc_short_with_code_5_flags_set2

    
.globl jcc_short_with_code_5_flags_set2_constant
         .type   jcc_short_with_code_5_flags_set2_constant, @function
jcc_short_with_code_5_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x75,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_5_flags_set2_constant, .-jcc_short_with_code_5_flags_set2_constant

    
.globl jcc_short_with_code_5_flags_set2_allregs
         .type   jcc_short_with_code_5_flags_set2_allregs, @function
jcc_short_with_code_5_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x75,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_5_flags_set2_allregs, .-jcc_short_with_code_5_flags_set2_allregs

    
.globl jcc_short_with_code_5_flags_cmp
         .type   jcc_short_with_code_5_flags_cmp, @function
jcc_short_with_code_5_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x75,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_5_flags_cmp, .-jcc_short_with_code_5_flags_cmp

    
.globl jcc_short_with_code_5_flags_cmp_constant
         .type   jcc_short_with_code_5_flags_cmp_constant, @function
jcc_short_with_code_5_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x75,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_5_flags_cmp_constant, .-jcc_short_with_code_5_flags_cmp_constant

    
.globl jcc_short_with_code_5_flags_cmp_allregs
         .type   jcc_short_with_code_5_flags_cmp_allregs, @function
jcc_short_with_code_5_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x75,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_5_flags_cmp_allregs, .-jcc_short_with_code_5_flags_cmp_allregs

    
.globl jcc_short_with_code_6_flags_clear
         .type   jcc_short_with_code_6_flags_clear, @function
jcc_short_with_code_6_flags_clear:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x76,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_6_flags_clear, .-jcc_short_with_code_6_flags_clear

    
.globl jcc_short_with_code_6_flags_clear_constant
         .type   jcc_short_with_code_6_flags_clear_constant, @function
jcc_short_with_code_6_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x76,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_6_flags_clear_constant, .-jcc_short_with_code_6_flags_clear_constant

    
.globl jcc_short_with_code_6_flags_clear_allregs
         .type   jcc_short_with_code_6_flags_clear_allregs, @function
jcc_short_with_code_6_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x76,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_6_flags_clear_allregs, .-jcc_short_with_code_6_flags_clear_allregs

    
.globl jcc_short_with_code_6_flags_set1
         .type   jcc_short_with_code_6_flags_set1, @function
jcc_short_with_code_6_flags_set1:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x76,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_6_flags_set1, .-jcc_short_with_code_6_flags_set1

    
.globl jcc_short_with_code_6_flags_set1_constant
         .type   jcc_short_with_code_6_flags_set1_constant, @function
jcc_short_with_code_6_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x76,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_6_flags_set1_constant, .-jcc_short_with_code_6_flags_set1_constant

    
.globl jcc_short_with_code_6_flags_set1_allregs
         .type   jcc_short_with_code_6_flags_set1_allregs, @function
jcc_short_with_code_6_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x76,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_6_flags_set1_allregs, .-jcc_short_with_code_6_flags_set1_allregs

    
.globl jcc_short_with_code_6_flags_set2
         .type   jcc_short_with_code_6_flags_set2, @function
jcc_short_with_code_6_flags_set2:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x76,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_6_flags_set2, .-jcc_short_with_code_6_flags_set2

    
.globl jcc_short_with_code_6_flags_set2_constant
         .type   jcc_short_with_code_6_flags_set2_constant, @function
jcc_short_with_code_6_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x76,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_6_flags_set2_constant, .-jcc_short_with_code_6_flags_set2_constant

    
.globl jcc_short_with_code_6_flags_set2_allregs
         .type   jcc_short_with_code_6_flags_set2_allregs, @function
jcc_short_with_code_6_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x76,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_6_flags_set2_allregs, .-jcc_short_with_code_6_flags_set2_allregs

    
.globl jcc_short_with_code_6_flags_cmp
         .type   jcc_short_with_code_6_flags_cmp, @function
jcc_short_with_code_6_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x76,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_6_flags_cmp, .-jcc_short_with_code_6_flags_cmp

    
.globl jcc_short_with_code_6_flags_cmp_constant
         .type   jcc_short_with_code_6_flags_cmp_constant, @function
jcc_short_with_code_6_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x76,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_6_flags_cmp_constant, .-jcc_short_with_code_6_flags_cmp_constant

    
.globl jcc_short_with_code_6_flags_cmp_allregs
         .type   jcc_short_with_code_6_flags_cmp_allregs, @function
jcc_short_with_code_6_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x76,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_6_flags_cmp_allregs, .-jcc_short_with_code_6_flags_cmp_allregs

    
.globl jcc_short_with_code_7_flags_clear
         .type   jcc_short_with_code_7_flags_clear, @function
jcc_short_with_code_7_flags_clear:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x77,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_7_flags_clear, .-jcc_short_with_code_7_flags_clear

    
.globl jcc_short_with_code_7_flags_clear_constant
         .type   jcc_short_with_code_7_flags_clear_constant, @function
jcc_short_with_code_7_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x77,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_7_flags_clear_constant, .-jcc_short_with_code_7_flags_clear_constant

    
.globl jcc_short_with_code_7_flags_clear_allregs
         .type   jcc_short_with_code_7_flags_clear_allregs, @function
jcc_short_with_code_7_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x77,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_7_flags_clear_allregs, .-jcc_short_with_code_7_flags_clear_allregs

    
.globl jcc_short_with_code_7_flags_set1
         .type   jcc_short_with_code_7_flags_set1, @function
jcc_short_with_code_7_flags_set1:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x77,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_7_flags_set1, .-jcc_short_with_code_7_flags_set1

    
.globl jcc_short_with_code_7_flags_set1_constant
         .type   jcc_short_with_code_7_flags_set1_constant, @function
jcc_short_with_code_7_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x77,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_7_flags_set1_constant, .-jcc_short_with_code_7_flags_set1_constant

    
.globl jcc_short_with_code_7_flags_set1_allregs
         .type   jcc_short_with_code_7_flags_set1_allregs, @function
jcc_short_with_code_7_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x77,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_7_flags_set1_allregs, .-jcc_short_with_code_7_flags_set1_allregs

    
.globl jcc_short_with_code_7_flags_set2
         .type   jcc_short_with_code_7_flags_set2, @function
jcc_short_with_code_7_flags_set2:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x77,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_7_flags_set2, .-jcc_short_with_code_7_flags_set2

    
.globl jcc_short_with_code_7_flags_set2_constant
         .type   jcc_short_with_code_7_flags_set2_constant, @function
jcc_short_with_code_7_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x77,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_7_flags_set2_constant, .-jcc_short_with_code_7_flags_set2_constant

    
.globl jcc_short_with_code_7_flags_set2_allregs
         .type   jcc_short_with_code_7_flags_set2_allregs, @function
jcc_short_with_code_7_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x77,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_7_flags_set2_allregs, .-jcc_short_with_code_7_flags_set2_allregs

    
.globl jcc_short_with_code_7_flags_cmp
         .type   jcc_short_with_code_7_flags_cmp, @function
jcc_short_with_code_7_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x77,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_7_flags_cmp, .-jcc_short_with_code_7_flags_cmp

    
.globl jcc_short_with_code_7_flags_cmp_constant
         .type   jcc_short_with_code_7_flags_cmp_constant, @function
jcc_short_with_code_7_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x77,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_7_flags_cmp_constant, .-jcc_short_with_code_7_flags_cmp_constant

    
.globl jcc_short_with_code_7_flags_cmp_allregs
         .type   jcc_short_with_code_7_flags_cmp_allregs, @function
jcc_short_with_code_7_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x77,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_7_flags_cmp_allregs, .-jcc_short_with_code_7_flags_cmp_allregs

    
.globl jcc_short_with_code_8_flags_clear
         .type   jcc_short_with_code_8_flags_clear, @function
jcc_short_with_code_8_flags_clear:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x78,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_8_flags_clear, .-jcc_short_with_code_8_flags_clear

    
.globl jcc_short_with_code_8_flags_clear_constant
         .type   jcc_short_with_code_8_flags_clear_constant, @function
jcc_short_with_code_8_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x78,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_8_flags_clear_constant, .-jcc_short_with_code_8_flags_clear_constant

    
.globl jcc_short_with_code_8_flags_clear_allregs
         .type   jcc_short_with_code_8_flags_clear_allregs, @function
jcc_short_with_code_8_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x78,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_8_flags_clear_allregs, .-jcc_short_with_code_8_flags_clear_allregs

    
.globl jcc_short_with_code_8_flags_set1
         .type   jcc_short_with_code_8_flags_set1, @function
jcc_short_with_code_8_flags_set1:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x78,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_8_flags_set1, .-jcc_short_with_code_8_flags_set1

    
.globl jcc_short_with_code_8_flags_set1_constant
         .type   jcc_short_with_code_8_flags_set1_constant, @function
jcc_short_with_code_8_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x78,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_8_flags_set1_constant, .-jcc_short_with_code_8_flags_set1_constant

    
.globl jcc_short_with_code_8_flags_set1_allregs
         .type   jcc_short_with_code_8_flags_set1_allregs, @function
jcc_short_with_code_8_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x78,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_8_flags_set1_allregs, .-jcc_short_with_code_8_flags_set1_allregs

    
.globl jcc_short_with_code_8_flags_set2
         .type   jcc_short_with_code_8_flags_set2, @function
jcc_short_with_code_8_flags_set2:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x78,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_8_flags_set2, .-jcc_short_with_code_8_flags_set2

    
.globl jcc_short_with_code_8_flags_set2_constant
         .type   jcc_short_with_code_8_flags_set2_constant, @function
jcc_short_with_code_8_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x78,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_8_flags_set2_constant, .-jcc_short_with_code_8_flags_set2_constant

    
.globl jcc_short_with_code_8_flags_set2_allregs
         .type   jcc_short_with_code_8_flags_set2_allregs, @function
jcc_short_with_code_8_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x78,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_8_flags_set2_allregs, .-jcc_short_with_code_8_flags_set2_allregs

    
.globl jcc_short_with_code_8_flags_cmp
         .type   jcc_short_with_code_8_flags_cmp, @function
jcc_short_with_code_8_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x78,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_8_flags_cmp, .-jcc_short_with_code_8_flags_cmp

    
.globl jcc_short_with_code_8_flags_cmp_constant
         .type   jcc_short_with_code_8_flags_cmp_constant, @function
jcc_short_with_code_8_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x78,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_8_flags_cmp_constant, .-jcc_short_with_code_8_flags_cmp_constant

    
.globl jcc_short_with_code_8_flags_cmp_allregs
         .type   jcc_short_with_code_8_flags_cmp_allregs, @function
jcc_short_with_code_8_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x78,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_8_flags_cmp_allregs, .-jcc_short_with_code_8_flags_cmp_allregs

    
.globl jcc_short_with_code_9_flags_clear
         .type   jcc_short_with_code_9_flags_clear, @function
jcc_short_with_code_9_flags_clear:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x79,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_9_flags_clear, .-jcc_short_with_code_9_flags_clear

    
.globl jcc_short_with_code_9_flags_clear_constant
         .type   jcc_short_with_code_9_flags_clear_constant, @function
jcc_short_with_code_9_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x79,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_9_flags_clear_constant, .-jcc_short_with_code_9_flags_clear_constant

    
.globl jcc_short_with_code_9_flags_clear_allregs
         .type   jcc_short_with_code_9_flags_clear_allregs, @function
jcc_short_with_code_9_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x79,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_9_flags_clear_allregs, .-jcc_short_with_code_9_flags_clear_allregs

    
.globl jcc_short_with_code_9_flags_set1
         .type   jcc_short_with_code_9_flags_set1, @function
jcc_short_with_code_9_flags_set1:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x79,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_9_flags_set1, .-jcc_short_with_code_9_flags_set1

    
.globl jcc_short_with_code_9_flags_set1_constant
         .type   jcc_short_with_code_9_flags_set1_constant, @function
jcc_short_with_code_9_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x79,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_9_flags_set1_constant, .-jcc_short_with_code_9_flags_set1_constant

    
.globl jcc_short_with_code_9_flags_set1_allregs
         .type   jcc_short_with_code_9_flags_set1_allregs, @function
jcc_short_with_code_9_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x79,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_9_flags_set1_allregs, .-jcc_short_with_code_9_flags_set1_allregs

    
.globl jcc_short_with_code_9_flags_set2
         .type   jcc_short_with_code_9_flags_set2, @function
jcc_short_with_code_9_flags_set2:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x79,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_9_flags_set2, .-jcc_short_with_code_9_flags_set2

    
.globl jcc_short_with_code_9_flags_set2_constant
         .type   jcc_short_with_code_9_flags_set2_constant, @function
jcc_short_with_code_9_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x79,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_9_flags_set2_constant, .-jcc_short_with_code_9_flags_set2_constant

    
.globl jcc_short_with_code_9_flags_set2_allregs
         .type   jcc_short_with_code_9_flags_set2_allregs, @function
jcc_short_with_code_9_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x79,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_9_flags_set2_allregs, .-jcc_short_with_code_9_flags_set2_allregs

    
.globl jcc_short_with_code_9_flags_cmp
         .type   jcc_short_with_code_9_flags_cmp, @function
jcc_short_with_code_9_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x79,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_9_flags_cmp, .-jcc_short_with_code_9_flags_cmp

    
.globl jcc_short_with_code_9_flags_cmp_constant
         .type   jcc_short_with_code_9_flags_cmp_constant, @function
jcc_short_with_code_9_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x79,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_9_flags_cmp_constant, .-jcc_short_with_code_9_flags_cmp_constant

    
.globl jcc_short_with_code_9_flags_cmp_allregs
         .type   jcc_short_with_code_9_flags_cmp_allregs, @function
jcc_short_with_code_9_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x79,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_9_flags_cmp_allregs, .-jcc_short_with_code_9_flags_cmp_allregs

    
.globl jcc_short_with_code_a_flags_clear
         .type   jcc_short_with_code_a_flags_clear, @function
jcc_short_with_code_a_flags_clear:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x7a,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_a_flags_clear, .-jcc_short_with_code_a_flags_clear

    
.globl jcc_short_with_code_a_flags_clear_constant
         .type   jcc_short_with_code_a_flags_clear_constant, @function
jcc_short_with_code_a_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x7a,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_a_flags_clear_constant, .-jcc_short_with_code_a_flags_clear_constant

    
.globl jcc_short_with_code_a_flags_clear_allregs
         .type   jcc_short_with_code_a_flags_clear_allregs, @function
jcc_short_with_code_a_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x7a,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_a_flags_clear_allregs, .-jcc_short_with_code_a_flags_clear_allregs

    
.globl jcc_short_with_code_a_flags_set1
         .type   jcc_short_with_code_a_flags_set1, @function
jcc_short_with_code_a_flags_set1:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x7a,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_a_flags_set1, .-jcc_short_with_code_a_flags_set1

    
.globl jcc_short_with_code_a_flags_set1_constant
         .type   jcc_short_with_code_a_flags_set1_constant, @function
jcc_short_with_code_a_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x7a,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_a_flags_set1_constant, .-jcc_short_with_code_a_flags_set1_constant

    
.globl jcc_short_with_code_a_flags_set1_allregs
         .type   jcc_short_with_code_a_flags_set1_allregs, @function
jcc_short_with_code_a_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x7a,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_a_flags_set1_allregs, .-jcc_short_with_code_a_flags_set1_allregs

    
.globl jcc_short_with_code_a_flags_set2
         .type   jcc_short_with_code_a_flags_set2, @function
jcc_short_with_code_a_flags_set2:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x7a,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_a_flags_set2, .-jcc_short_with_code_a_flags_set2

    
.globl jcc_short_with_code_a_flags_set2_constant
         .type   jcc_short_with_code_a_flags_set2_constant, @function
jcc_short_with_code_a_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x7a,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_a_flags_set2_constant, .-jcc_short_with_code_a_flags_set2_constant

    
.globl jcc_short_with_code_a_flags_set2_allregs
         .type   jcc_short_with_code_a_flags_set2_allregs, @function
jcc_short_with_code_a_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x7a,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_a_flags_set2_allregs, .-jcc_short_with_code_a_flags_set2_allregs

    
.globl jcc_short_with_code_a_flags_cmp
         .type   jcc_short_with_code_a_flags_cmp, @function
jcc_short_with_code_a_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x7a,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_a_flags_cmp, .-jcc_short_with_code_a_flags_cmp

    
.globl jcc_short_with_code_a_flags_cmp_constant
         .type   jcc_short_with_code_a_flags_cmp_constant, @function
jcc_short_with_code_a_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x7a,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_a_flags_cmp_constant, .-jcc_short_with_code_a_flags_cmp_constant

    
.globl jcc_short_with_code_a_flags_cmp_allregs
         .type   jcc_short_with_code_a_flags_cmp_allregs, @function
jcc_short_with_code_a_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x7a,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_a_flags_cmp_allregs, .-jcc_short_with_code_a_flags_cmp_allregs

    
.globl jcc_short_with_code_b_flags_clear
         .type   jcc_short_with_code_b_flags_clear, @function
jcc_short_with_code_b_flags_clear:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x7b,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_b_flags_clear, .-jcc_short_with_code_b_flags_clear

    
.globl jcc_short_with_code_b_flags_clear_constant
         .type   jcc_short_with_code_b_flags_clear_constant, @function
jcc_short_with_code_b_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x7b,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_b_flags_clear_constant, .-jcc_short_with_code_b_flags_clear_constant

    
.globl jcc_short_with_code_b_flags_clear_allregs
         .type   jcc_short_with_code_b_flags_clear_allregs, @function
jcc_short_with_code_b_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x7b,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_b_flags_clear_allregs, .-jcc_short_with_code_b_flags_clear_allregs

    
.globl jcc_short_with_code_b_flags_set1
         .type   jcc_short_with_code_b_flags_set1, @function
jcc_short_with_code_b_flags_set1:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x7b,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_b_flags_set1, .-jcc_short_with_code_b_flags_set1

    
.globl jcc_short_with_code_b_flags_set1_constant
         .type   jcc_short_with_code_b_flags_set1_constant, @function
jcc_short_with_code_b_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x7b,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_b_flags_set1_constant, .-jcc_short_with_code_b_flags_set1_constant

    
.globl jcc_short_with_code_b_flags_set1_allregs
         .type   jcc_short_with_code_b_flags_set1_allregs, @function
jcc_short_with_code_b_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x7b,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_b_flags_set1_allregs, .-jcc_short_with_code_b_flags_set1_allregs

    
.globl jcc_short_with_code_b_flags_set2
         .type   jcc_short_with_code_b_flags_set2, @function
jcc_short_with_code_b_flags_set2:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x7b,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_b_flags_set2, .-jcc_short_with_code_b_flags_set2

    
.globl jcc_short_with_code_b_flags_set2_constant
         .type   jcc_short_with_code_b_flags_set2_constant, @function
jcc_short_with_code_b_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x7b,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_b_flags_set2_constant, .-jcc_short_with_code_b_flags_set2_constant

    
.globl jcc_short_with_code_b_flags_set2_allregs
         .type   jcc_short_with_code_b_flags_set2_allregs, @function
jcc_short_with_code_b_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x7b,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_b_flags_set2_allregs, .-jcc_short_with_code_b_flags_set2_allregs

    
.globl jcc_short_with_code_b_flags_cmp
         .type   jcc_short_with_code_b_flags_cmp, @function
jcc_short_with_code_b_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x7b,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_b_flags_cmp, .-jcc_short_with_code_b_flags_cmp

    
.globl jcc_short_with_code_b_flags_cmp_constant
         .type   jcc_short_with_code_b_flags_cmp_constant, @function
jcc_short_with_code_b_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x7b,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_b_flags_cmp_constant, .-jcc_short_with_code_b_flags_cmp_constant

    
.globl jcc_short_with_code_b_flags_cmp_allregs
         .type   jcc_short_with_code_b_flags_cmp_allregs, @function
jcc_short_with_code_b_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x7b,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_b_flags_cmp_allregs, .-jcc_short_with_code_b_flags_cmp_allregs

    
.globl jcc_short_with_code_c_flags_clear
         .type   jcc_short_with_code_c_flags_clear, @function
jcc_short_with_code_c_flags_clear:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x7c,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_c_flags_clear, .-jcc_short_with_code_c_flags_clear

    
.globl jcc_short_with_code_c_flags_clear_constant
         .type   jcc_short_with_code_c_flags_clear_constant, @function
jcc_short_with_code_c_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x7c,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_c_flags_clear_constant, .-jcc_short_with_code_c_flags_clear_constant

    
.globl jcc_short_with_code_c_flags_clear_allregs
         .type   jcc_short_with_code_c_flags_clear_allregs, @function
jcc_short_with_code_c_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x7c,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_c_flags_clear_allregs, .-jcc_short_with_code_c_flags_clear_allregs

    
.globl jcc_short_with_code_c_flags_set1
         .type   jcc_short_with_code_c_flags_set1, @function
jcc_short_with_code_c_flags_set1:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x7c,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_c_flags_set1, .-jcc_short_with_code_c_flags_set1

    
.globl jcc_short_with_code_c_flags_set1_constant
         .type   jcc_short_with_code_c_flags_set1_constant, @function
jcc_short_with_code_c_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x7c,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_c_flags_set1_constant, .-jcc_short_with_code_c_flags_set1_constant

    
.globl jcc_short_with_code_c_flags_set1_allregs
         .type   jcc_short_with_code_c_flags_set1_allregs, @function
jcc_short_with_code_c_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x7c,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_c_flags_set1_allregs, .-jcc_short_with_code_c_flags_set1_allregs

    
.globl jcc_short_with_code_c_flags_set2
         .type   jcc_short_with_code_c_flags_set2, @function
jcc_short_with_code_c_flags_set2:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x7c,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_c_flags_set2, .-jcc_short_with_code_c_flags_set2

    
.globl jcc_short_with_code_c_flags_set2_constant
         .type   jcc_short_with_code_c_flags_set2_constant, @function
jcc_short_with_code_c_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x7c,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_c_flags_set2_constant, .-jcc_short_with_code_c_flags_set2_constant

    
.globl jcc_short_with_code_c_flags_set2_allregs
         .type   jcc_short_with_code_c_flags_set2_allregs, @function
jcc_short_with_code_c_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x7c,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_c_flags_set2_allregs, .-jcc_short_with_code_c_flags_set2_allregs

    
.globl jcc_short_with_code_c_flags_cmp
         .type   jcc_short_with_code_c_flags_cmp, @function
jcc_short_with_code_c_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x7c,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_c_flags_cmp, .-jcc_short_with_code_c_flags_cmp

    
.globl jcc_short_with_code_c_flags_cmp_constant
         .type   jcc_short_with_code_c_flags_cmp_constant, @function
jcc_short_with_code_c_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x7c,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_c_flags_cmp_constant, .-jcc_short_with_code_c_flags_cmp_constant

    
.globl jcc_short_with_code_c_flags_cmp_allregs
         .type   jcc_short_with_code_c_flags_cmp_allregs, @function
jcc_short_with_code_c_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x7c,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_c_flags_cmp_allregs, .-jcc_short_with_code_c_flags_cmp_allregs

    
.globl jcc_short_with_code_d_flags_clear
         .type   jcc_short_with_code_d_flags_clear, @function
jcc_short_with_code_d_flags_clear:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x7d,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_d_flags_clear, .-jcc_short_with_code_d_flags_clear

    
.globl jcc_short_with_code_d_flags_clear_constant
         .type   jcc_short_with_code_d_flags_clear_constant, @function
jcc_short_with_code_d_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x7d,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_d_flags_clear_constant, .-jcc_short_with_code_d_flags_clear_constant

    
.globl jcc_short_with_code_d_flags_clear_allregs
         .type   jcc_short_with_code_d_flags_clear_allregs, @function
jcc_short_with_code_d_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x7d,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_d_flags_clear_allregs, .-jcc_short_with_code_d_flags_clear_allregs

    
.globl jcc_short_with_code_d_flags_set1
         .type   jcc_short_with_code_d_flags_set1, @function
jcc_short_with_code_d_flags_set1:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x7d,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_d_flags_set1, .-jcc_short_with_code_d_flags_set1

    
.globl jcc_short_with_code_d_flags_set1_constant
         .type   jcc_short_with_code_d_flags_set1_constant, @function
jcc_short_with_code_d_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x7d,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_d_flags_set1_constant, .-jcc_short_with_code_d_flags_set1_constant

    
.globl jcc_short_with_code_d_flags_set1_allregs
         .type   jcc_short_with_code_d_flags_set1_allregs, @function
jcc_short_with_code_d_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x7d,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_d_flags_set1_allregs, .-jcc_short_with_code_d_flags_set1_allregs

    
.globl jcc_short_with_code_d_flags_set2
         .type   jcc_short_with_code_d_flags_set2, @function
jcc_short_with_code_d_flags_set2:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x7d,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_d_flags_set2, .-jcc_short_with_code_d_flags_set2

    
.globl jcc_short_with_code_d_flags_set2_constant
         .type   jcc_short_with_code_d_flags_set2_constant, @function
jcc_short_with_code_d_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x7d,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_d_flags_set2_constant, .-jcc_short_with_code_d_flags_set2_constant

    
.globl jcc_short_with_code_d_flags_set2_allregs
         .type   jcc_short_with_code_d_flags_set2_allregs, @function
jcc_short_with_code_d_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x7d,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_d_flags_set2_allregs, .-jcc_short_with_code_d_flags_set2_allregs

    
.globl jcc_short_with_code_d_flags_cmp
         .type   jcc_short_with_code_d_flags_cmp, @function
jcc_short_with_code_d_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x7d,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_d_flags_cmp, .-jcc_short_with_code_d_flags_cmp

    
.globl jcc_short_with_code_d_flags_cmp_constant
         .type   jcc_short_with_code_d_flags_cmp_constant, @function
jcc_short_with_code_d_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x7d,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_d_flags_cmp_constant, .-jcc_short_with_code_d_flags_cmp_constant

    
.globl jcc_short_with_code_d_flags_cmp_allregs
         .type   jcc_short_with_code_d_flags_cmp_allregs, @function
jcc_short_with_code_d_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x7d,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_d_flags_cmp_allregs, .-jcc_short_with_code_d_flags_cmp_allregs

    
.globl jcc_short_with_code_e_flags_clear
         .type   jcc_short_with_code_e_flags_clear, @function
jcc_short_with_code_e_flags_clear:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x7e,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_e_flags_clear, .-jcc_short_with_code_e_flags_clear

    
.globl jcc_short_with_code_e_flags_clear_constant
         .type   jcc_short_with_code_e_flags_clear_constant, @function
jcc_short_with_code_e_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x7e,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_e_flags_clear_constant, .-jcc_short_with_code_e_flags_clear_constant

    
.globl jcc_short_with_code_e_flags_clear_allregs
         .type   jcc_short_with_code_e_flags_clear_allregs, @function
jcc_short_with_code_e_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x7e,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_e_flags_clear_allregs, .-jcc_short_with_code_e_flags_clear_allregs

    
.globl jcc_short_with_code_e_flags_set1
         .type   jcc_short_with_code_e_flags_set1, @function
jcc_short_with_code_e_flags_set1:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x7e,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_e_flags_set1, .-jcc_short_with_code_e_flags_set1

    
.globl jcc_short_with_code_e_flags_set1_constant
         .type   jcc_short_with_code_e_flags_set1_constant, @function
jcc_short_with_code_e_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x7e,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_e_flags_set1_constant, .-jcc_short_with_code_e_flags_set1_constant

    
.globl jcc_short_with_code_e_flags_set1_allregs
         .type   jcc_short_with_code_e_flags_set1_allregs, @function
jcc_short_with_code_e_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x7e,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_e_flags_set1_allregs, .-jcc_short_with_code_e_flags_set1_allregs

    
.globl jcc_short_with_code_e_flags_set2
         .type   jcc_short_with_code_e_flags_set2, @function
jcc_short_with_code_e_flags_set2:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x7e,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_e_flags_set2, .-jcc_short_with_code_e_flags_set2

    
.globl jcc_short_with_code_e_flags_set2_constant
         .type   jcc_short_with_code_e_flags_set2_constant, @function
jcc_short_with_code_e_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x7e,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_e_flags_set2_constant, .-jcc_short_with_code_e_flags_set2_constant

    
.globl jcc_short_with_code_e_flags_set2_allregs
         .type   jcc_short_with_code_e_flags_set2_allregs, @function
jcc_short_with_code_e_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x7e,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_e_flags_set2_allregs, .-jcc_short_with_code_e_flags_set2_allregs

    
.globl jcc_short_with_code_e_flags_cmp
         .type   jcc_short_with_code_e_flags_cmp, @function
jcc_short_with_code_e_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x7e,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_e_flags_cmp, .-jcc_short_with_code_e_flags_cmp

    
.globl jcc_short_with_code_e_flags_cmp_constant
         .type   jcc_short_with_code_e_flags_cmp_constant, @function
jcc_short_with_code_e_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x7e,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_e_flags_cmp_constant, .-jcc_short_with_code_e_flags_cmp_constant

    
.globl jcc_short_with_code_e_flags_cmp_allregs
         .type   jcc_short_with_code_e_flags_cmp_allregs, @function
jcc_short_with_code_e_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x7e,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_e_flags_cmp_allregs, .-jcc_short_with_code_e_flags_cmp_allregs

    
.globl jcc_short_with_code_f_flags_clear
         .type   jcc_short_with_code_f_flags_clear, @function
jcc_short_with_code_f_flags_clear:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x7f,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_f_flags_clear, .-jcc_short_with_code_f_flags_clear

    
.globl jcc_short_with_code_f_flags_clear_constant
         .type   jcc_short_with_code_f_flags_clear_constant, @function
jcc_short_with_code_f_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x7f,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_f_flags_clear_constant, .-jcc_short_with_code_f_flags_clear_constant

    
.globl jcc_short_with_code_f_flags_clear_allregs
         .type   jcc_short_with_code_f_flags_clear_allregs, @function
jcc_short_with_code_f_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x7f,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_f_flags_clear_allregs, .-jcc_short_with_code_f_flags_clear_allregs

    
.globl jcc_short_with_code_f_flags_set1
         .type   jcc_short_with_code_f_flags_set1, @function
jcc_short_with_code_f_flags_set1:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x7f,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_f_flags_set1, .-jcc_short_with_code_f_flags_set1

    
.globl jcc_short_with_code_f_flags_set1_constant
         .type   jcc_short_with_code_f_flags_set1_constant, @function
jcc_short_with_code_f_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x7f,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_f_flags_set1_constant, .-jcc_short_with_code_f_flags_set1_constant

    
.globl jcc_short_with_code_f_flags_set1_allregs
         .type   jcc_short_with_code_f_flags_set1_allregs, @function
jcc_short_with_code_f_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x7f,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_f_flags_set1_allregs, .-jcc_short_with_code_f_flags_set1_allregs

    
.globl jcc_short_with_code_f_flags_set2
         .type   jcc_short_with_code_f_flags_set2, @function
jcc_short_with_code_f_flags_set2:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x7f,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_f_flags_set2, .-jcc_short_with_code_f_flags_set2

    
.globl jcc_short_with_code_f_flags_set2_constant
         .type   jcc_short_with_code_f_flags_set2_constant, @function
jcc_short_with_code_f_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x7f,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_f_flags_set2_constant, .-jcc_short_with_code_f_flags_set2_constant

    
.globl jcc_short_with_code_f_flags_set2_allregs
         .type   jcc_short_with_code_f_flags_set2_allregs, @function
jcc_short_with_code_f_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x7f,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_f_flags_set2_allregs, .-jcc_short_with_code_f_flags_set2_allregs

    
.globl jcc_short_with_code_f_flags_cmp
         .type   jcc_short_with_code_f_flags_cmp, @function
jcc_short_with_code_f_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x7f,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_f_flags_cmp, .-jcc_short_with_code_f_flags_cmp

    
.globl jcc_short_with_code_f_flags_cmp_constant
         .type   jcc_short_with_code_f_flags_cmp_constant, @function
jcc_short_with_code_f_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x7f,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_short_with_code_f_flags_cmp_constant, .-jcc_short_with_code_f_flags_cmp_constant

    
.globl jcc_short_with_code_f_flags_cmp_allregs
         .type   jcc_short_with_code_f_flags_cmp_allregs, @function
jcc_short_with_code_f_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x7f,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_short_with_code_f_flags_cmp_allregs, .-jcc_short_with_code_f_flags_cmp_allregs

    
.globl jcc_long_with_code_0_flags_clear
         .type   jcc_long_with_code_0_flags_clear, @function
jcc_long_with_code_0_flags_clear:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x0f,0x80,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_0_flags_clear, .-jcc_long_with_code_0_flags_clear

    
.globl jcc_long_with_code_0_flags_clear_constant
         .type   jcc_long_with_code_0_flags_clear_constant, @function
jcc_long_with_code_0_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x0f,0x80,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_0_flags_clear_constant, .-jcc_long_with_code_0_flags_clear_constant

    
.globl jcc_long_with_code_0_flags_clear_allregs
         .type   jcc_long_with_code_0_flags_clear_allregs, @function
jcc_long_with_code_0_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x80,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_0_flags_clear_allregs, .-jcc_long_with_code_0_flags_clear_allregs

    
.globl jcc_long_with_code_0_flags_set1
         .type   jcc_long_with_code_0_flags_set1, @function
jcc_long_with_code_0_flags_set1:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x80,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_0_flags_set1, .-jcc_long_with_code_0_flags_set1

    
.globl jcc_long_with_code_0_flags_set1_constant
         .type   jcc_long_with_code_0_flags_set1_constant, @function
jcc_long_with_code_0_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x80,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_0_flags_set1_constant, .-jcc_long_with_code_0_flags_set1_constant

    
.globl jcc_long_with_code_0_flags_set1_allregs
         .type   jcc_long_with_code_0_flags_set1_allregs, @function
jcc_long_with_code_0_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x80,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_0_flags_set1_allregs, .-jcc_long_with_code_0_flags_set1_allregs

    
.globl jcc_long_with_code_0_flags_set2
         .type   jcc_long_with_code_0_flags_set2, @function
jcc_long_with_code_0_flags_set2:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x80,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_0_flags_set2, .-jcc_long_with_code_0_flags_set2

    
.globl jcc_long_with_code_0_flags_set2_constant
         .type   jcc_long_with_code_0_flags_set2_constant, @function
jcc_long_with_code_0_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x80,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_0_flags_set2_constant, .-jcc_long_with_code_0_flags_set2_constant

    
.globl jcc_long_with_code_0_flags_set2_allregs
         .type   jcc_long_with_code_0_flags_set2_allregs, @function
jcc_long_with_code_0_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x80,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_0_flags_set2_allregs, .-jcc_long_with_code_0_flags_set2_allregs

    
.globl jcc_long_with_code_0_flags_cmp
         .type   jcc_long_with_code_0_flags_cmp, @function
jcc_long_with_code_0_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x0f,0x80,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_0_flags_cmp, .-jcc_long_with_code_0_flags_cmp

    
.globl jcc_long_with_code_0_flags_cmp_constant
         .type   jcc_long_with_code_0_flags_cmp_constant, @function
jcc_long_with_code_0_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x0f,0x80,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_0_flags_cmp_constant, .-jcc_long_with_code_0_flags_cmp_constant

    
.globl jcc_long_with_code_0_flags_cmp_allregs
         .type   jcc_long_with_code_0_flags_cmp_allregs, @function
jcc_long_with_code_0_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x80,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_0_flags_cmp_allregs, .-jcc_long_with_code_0_flags_cmp_allregs

    
.globl jcc_long_with_code_1_flags_clear
         .type   jcc_long_with_code_1_flags_clear, @function
jcc_long_with_code_1_flags_clear:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x0f,0x81,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_1_flags_clear, .-jcc_long_with_code_1_flags_clear

    
.globl jcc_long_with_code_1_flags_clear_constant
         .type   jcc_long_with_code_1_flags_clear_constant, @function
jcc_long_with_code_1_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x0f,0x81,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_1_flags_clear_constant, .-jcc_long_with_code_1_flags_clear_constant

    
.globl jcc_long_with_code_1_flags_clear_allregs
         .type   jcc_long_with_code_1_flags_clear_allregs, @function
jcc_long_with_code_1_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x81,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_1_flags_clear_allregs, .-jcc_long_with_code_1_flags_clear_allregs

    
.globl jcc_long_with_code_1_flags_set1
         .type   jcc_long_with_code_1_flags_set1, @function
jcc_long_with_code_1_flags_set1:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x81,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_1_flags_set1, .-jcc_long_with_code_1_flags_set1

    
.globl jcc_long_with_code_1_flags_set1_constant
         .type   jcc_long_with_code_1_flags_set1_constant, @function
jcc_long_with_code_1_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x81,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_1_flags_set1_constant, .-jcc_long_with_code_1_flags_set1_constant

    
.globl jcc_long_with_code_1_flags_set1_allregs
         .type   jcc_long_with_code_1_flags_set1_allregs, @function
jcc_long_with_code_1_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x81,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_1_flags_set1_allregs, .-jcc_long_with_code_1_flags_set1_allregs

    
.globl jcc_long_with_code_1_flags_set2
         .type   jcc_long_with_code_1_flags_set2, @function
jcc_long_with_code_1_flags_set2:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x81,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_1_flags_set2, .-jcc_long_with_code_1_flags_set2

    
.globl jcc_long_with_code_1_flags_set2_constant
         .type   jcc_long_with_code_1_flags_set2_constant, @function
jcc_long_with_code_1_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x81,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_1_flags_set2_constant, .-jcc_long_with_code_1_flags_set2_constant

    
.globl jcc_long_with_code_1_flags_set2_allregs
         .type   jcc_long_with_code_1_flags_set2_allregs, @function
jcc_long_with_code_1_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x81,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_1_flags_set2_allregs, .-jcc_long_with_code_1_flags_set2_allregs

    
.globl jcc_long_with_code_1_flags_cmp
         .type   jcc_long_with_code_1_flags_cmp, @function
jcc_long_with_code_1_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x0f,0x81,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_1_flags_cmp, .-jcc_long_with_code_1_flags_cmp

    
.globl jcc_long_with_code_1_flags_cmp_constant
         .type   jcc_long_with_code_1_flags_cmp_constant, @function
jcc_long_with_code_1_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x0f,0x81,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_1_flags_cmp_constant, .-jcc_long_with_code_1_flags_cmp_constant

    
.globl jcc_long_with_code_1_flags_cmp_allregs
         .type   jcc_long_with_code_1_flags_cmp_allregs, @function
jcc_long_with_code_1_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x81,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_1_flags_cmp_allregs, .-jcc_long_with_code_1_flags_cmp_allregs

    
.globl jcc_long_with_code_2_flags_clear
         .type   jcc_long_with_code_2_flags_clear, @function
jcc_long_with_code_2_flags_clear:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x0f,0x82,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_2_flags_clear, .-jcc_long_with_code_2_flags_clear

    
.globl jcc_long_with_code_2_flags_clear_constant
         .type   jcc_long_with_code_2_flags_clear_constant, @function
jcc_long_with_code_2_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x0f,0x82,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_2_flags_clear_constant, .-jcc_long_with_code_2_flags_clear_constant

    
.globl jcc_long_with_code_2_flags_clear_allregs
         .type   jcc_long_with_code_2_flags_clear_allregs, @function
jcc_long_with_code_2_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x82,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_2_flags_clear_allregs, .-jcc_long_with_code_2_flags_clear_allregs

    
.globl jcc_long_with_code_2_flags_set1
         .type   jcc_long_with_code_2_flags_set1, @function
jcc_long_with_code_2_flags_set1:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x82,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_2_flags_set1, .-jcc_long_with_code_2_flags_set1

    
.globl jcc_long_with_code_2_flags_set1_constant
         .type   jcc_long_with_code_2_flags_set1_constant, @function
jcc_long_with_code_2_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x82,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_2_flags_set1_constant, .-jcc_long_with_code_2_flags_set1_constant

    
.globl jcc_long_with_code_2_flags_set1_allregs
         .type   jcc_long_with_code_2_flags_set1_allregs, @function
jcc_long_with_code_2_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x82,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_2_flags_set1_allregs, .-jcc_long_with_code_2_flags_set1_allregs

    
.globl jcc_long_with_code_2_flags_set2
         .type   jcc_long_with_code_2_flags_set2, @function
jcc_long_with_code_2_flags_set2:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x82,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_2_flags_set2, .-jcc_long_with_code_2_flags_set2

    
.globl jcc_long_with_code_2_flags_set2_constant
         .type   jcc_long_with_code_2_flags_set2_constant, @function
jcc_long_with_code_2_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x82,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_2_flags_set2_constant, .-jcc_long_with_code_2_flags_set2_constant

    
.globl jcc_long_with_code_2_flags_set2_allregs
         .type   jcc_long_with_code_2_flags_set2_allregs, @function
jcc_long_with_code_2_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x82,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_2_flags_set2_allregs, .-jcc_long_with_code_2_flags_set2_allregs

    
.globl jcc_long_with_code_2_flags_cmp
         .type   jcc_long_with_code_2_flags_cmp, @function
jcc_long_with_code_2_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x0f,0x82,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_2_flags_cmp, .-jcc_long_with_code_2_flags_cmp

    
.globl jcc_long_with_code_2_flags_cmp_constant
         .type   jcc_long_with_code_2_flags_cmp_constant, @function
jcc_long_with_code_2_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x0f,0x82,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_2_flags_cmp_constant, .-jcc_long_with_code_2_flags_cmp_constant

    
.globl jcc_long_with_code_2_flags_cmp_allregs
         .type   jcc_long_with_code_2_flags_cmp_allregs, @function
jcc_long_with_code_2_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x82,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_2_flags_cmp_allregs, .-jcc_long_with_code_2_flags_cmp_allregs

    
.globl jcc_long_with_code_3_flags_clear
         .type   jcc_long_with_code_3_flags_clear, @function
jcc_long_with_code_3_flags_clear:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x0f,0x83,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_3_flags_clear, .-jcc_long_with_code_3_flags_clear

    
.globl jcc_long_with_code_3_flags_clear_constant
         .type   jcc_long_with_code_3_flags_clear_constant, @function
jcc_long_with_code_3_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x0f,0x83,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_3_flags_clear_constant, .-jcc_long_with_code_3_flags_clear_constant

    
.globl jcc_long_with_code_3_flags_clear_allregs
         .type   jcc_long_with_code_3_flags_clear_allregs, @function
jcc_long_with_code_3_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x83,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_3_flags_clear_allregs, .-jcc_long_with_code_3_flags_clear_allregs

    
.globl jcc_long_with_code_3_flags_set1
         .type   jcc_long_with_code_3_flags_set1, @function
jcc_long_with_code_3_flags_set1:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x83,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_3_flags_set1, .-jcc_long_with_code_3_flags_set1

    
.globl jcc_long_with_code_3_flags_set1_constant
         .type   jcc_long_with_code_3_flags_set1_constant, @function
jcc_long_with_code_3_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x83,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_3_flags_set1_constant, .-jcc_long_with_code_3_flags_set1_constant

    
.globl jcc_long_with_code_3_flags_set1_allregs
         .type   jcc_long_with_code_3_flags_set1_allregs, @function
jcc_long_with_code_3_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x83,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_3_flags_set1_allregs, .-jcc_long_with_code_3_flags_set1_allregs

    
.globl jcc_long_with_code_3_flags_set2
         .type   jcc_long_with_code_3_flags_set2, @function
jcc_long_with_code_3_flags_set2:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x83,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_3_flags_set2, .-jcc_long_with_code_3_flags_set2

    
.globl jcc_long_with_code_3_flags_set2_constant
         .type   jcc_long_with_code_3_flags_set2_constant, @function
jcc_long_with_code_3_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x83,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_3_flags_set2_constant, .-jcc_long_with_code_3_flags_set2_constant

    
.globl jcc_long_with_code_3_flags_set2_allregs
         .type   jcc_long_with_code_3_flags_set2_allregs, @function
jcc_long_with_code_3_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x83,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_3_flags_set2_allregs, .-jcc_long_with_code_3_flags_set2_allregs

    
.globl jcc_long_with_code_3_flags_cmp
         .type   jcc_long_with_code_3_flags_cmp, @function
jcc_long_with_code_3_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x0f,0x83,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_3_flags_cmp, .-jcc_long_with_code_3_flags_cmp

    
.globl jcc_long_with_code_3_flags_cmp_constant
         .type   jcc_long_with_code_3_flags_cmp_constant, @function
jcc_long_with_code_3_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x0f,0x83,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_3_flags_cmp_constant, .-jcc_long_with_code_3_flags_cmp_constant

    
.globl jcc_long_with_code_3_flags_cmp_allregs
         .type   jcc_long_with_code_3_flags_cmp_allregs, @function
jcc_long_with_code_3_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x83,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_3_flags_cmp_allregs, .-jcc_long_with_code_3_flags_cmp_allregs

    
.globl jcc_long_with_code_4_flags_clear
         .type   jcc_long_with_code_4_flags_clear, @function
jcc_long_with_code_4_flags_clear:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x0f,0x84,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_4_flags_clear, .-jcc_long_with_code_4_flags_clear

    
.globl jcc_long_with_code_4_flags_clear_constant
         .type   jcc_long_with_code_4_flags_clear_constant, @function
jcc_long_with_code_4_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x0f,0x84,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_4_flags_clear_constant, .-jcc_long_with_code_4_flags_clear_constant

    
.globl jcc_long_with_code_4_flags_clear_allregs
         .type   jcc_long_with_code_4_flags_clear_allregs, @function
jcc_long_with_code_4_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x84,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_4_flags_clear_allregs, .-jcc_long_with_code_4_flags_clear_allregs

    
.globl jcc_long_with_code_4_flags_set1
         .type   jcc_long_with_code_4_flags_set1, @function
jcc_long_with_code_4_flags_set1:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x84,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_4_flags_set1, .-jcc_long_with_code_4_flags_set1

    
.globl jcc_long_with_code_4_flags_set1_constant
         .type   jcc_long_with_code_4_flags_set1_constant, @function
jcc_long_with_code_4_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x84,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_4_flags_set1_constant, .-jcc_long_with_code_4_flags_set1_constant

    
.globl jcc_long_with_code_4_flags_set1_allregs
         .type   jcc_long_with_code_4_flags_set1_allregs, @function
jcc_long_with_code_4_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x84,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_4_flags_set1_allregs, .-jcc_long_with_code_4_flags_set1_allregs

    
.globl jcc_long_with_code_4_flags_set2
         .type   jcc_long_with_code_4_flags_set2, @function
jcc_long_with_code_4_flags_set2:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x84,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_4_flags_set2, .-jcc_long_with_code_4_flags_set2

    
.globl jcc_long_with_code_4_flags_set2_constant
         .type   jcc_long_with_code_4_flags_set2_constant, @function
jcc_long_with_code_4_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x84,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_4_flags_set2_constant, .-jcc_long_with_code_4_flags_set2_constant

    
.globl jcc_long_with_code_4_flags_set2_allregs
         .type   jcc_long_with_code_4_flags_set2_allregs, @function
jcc_long_with_code_4_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x84,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_4_flags_set2_allregs, .-jcc_long_with_code_4_flags_set2_allregs

    
.globl jcc_long_with_code_4_flags_cmp
         .type   jcc_long_with_code_4_flags_cmp, @function
jcc_long_with_code_4_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x0f,0x84,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_4_flags_cmp, .-jcc_long_with_code_4_flags_cmp

    
.globl jcc_long_with_code_4_flags_cmp_constant
         .type   jcc_long_with_code_4_flags_cmp_constant, @function
jcc_long_with_code_4_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x0f,0x84,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_4_flags_cmp_constant, .-jcc_long_with_code_4_flags_cmp_constant

    
.globl jcc_long_with_code_4_flags_cmp_allregs
         .type   jcc_long_with_code_4_flags_cmp_allregs, @function
jcc_long_with_code_4_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x84,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_4_flags_cmp_allregs, .-jcc_long_with_code_4_flags_cmp_allregs

    
.globl jcc_long_with_code_5_flags_clear
         .type   jcc_long_with_code_5_flags_clear, @function
jcc_long_with_code_5_flags_clear:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x0f,0x85,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_5_flags_clear, .-jcc_long_with_code_5_flags_clear

    
.globl jcc_long_with_code_5_flags_clear_constant
         .type   jcc_long_with_code_5_flags_clear_constant, @function
jcc_long_with_code_5_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x0f,0x85,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_5_flags_clear_constant, .-jcc_long_with_code_5_flags_clear_constant

    
.globl jcc_long_with_code_5_flags_clear_allregs
         .type   jcc_long_with_code_5_flags_clear_allregs, @function
jcc_long_with_code_5_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x85,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_5_flags_clear_allregs, .-jcc_long_with_code_5_flags_clear_allregs

    
.globl jcc_long_with_code_5_flags_set1
         .type   jcc_long_with_code_5_flags_set1, @function
jcc_long_with_code_5_flags_set1:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x85,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_5_flags_set1, .-jcc_long_with_code_5_flags_set1

    
.globl jcc_long_with_code_5_flags_set1_constant
         .type   jcc_long_with_code_5_flags_set1_constant, @function
jcc_long_with_code_5_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x85,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_5_flags_set1_constant, .-jcc_long_with_code_5_flags_set1_constant

    
.globl jcc_long_with_code_5_flags_set1_allregs
         .type   jcc_long_with_code_5_flags_set1_allregs, @function
jcc_long_with_code_5_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x85,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_5_flags_set1_allregs, .-jcc_long_with_code_5_flags_set1_allregs

    
.globl jcc_long_with_code_5_flags_set2
         .type   jcc_long_with_code_5_flags_set2, @function
jcc_long_with_code_5_flags_set2:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x85,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_5_flags_set2, .-jcc_long_with_code_5_flags_set2

    
.globl jcc_long_with_code_5_flags_set2_constant
         .type   jcc_long_with_code_5_flags_set2_constant, @function
jcc_long_with_code_5_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x85,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_5_flags_set2_constant, .-jcc_long_with_code_5_flags_set2_constant

    
.globl jcc_long_with_code_5_flags_set2_allregs
         .type   jcc_long_with_code_5_flags_set2_allregs, @function
jcc_long_with_code_5_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x85,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_5_flags_set2_allregs, .-jcc_long_with_code_5_flags_set2_allregs

    
.globl jcc_long_with_code_5_flags_cmp
         .type   jcc_long_with_code_5_flags_cmp, @function
jcc_long_with_code_5_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x0f,0x85,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_5_flags_cmp, .-jcc_long_with_code_5_flags_cmp

    
.globl jcc_long_with_code_5_flags_cmp_constant
         .type   jcc_long_with_code_5_flags_cmp_constant, @function
jcc_long_with_code_5_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x0f,0x85,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_5_flags_cmp_constant, .-jcc_long_with_code_5_flags_cmp_constant

    
.globl jcc_long_with_code_5_flags_cmp_allregs
         .type   jcc_long_with_code_5_flags_cmp_allregs, @function
jcc_long_with_code_5_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x85,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_5_flags_cmp_allregs, .-jcc_long_with_code_5_flags_cmp_allregs

    
.globl jcc_long_with_code_6_flags_clear
         .type   jcc_long_with_code_6_flags_clear, @function
jcc_long_with_code_6_flags_clear:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x0f,0x86,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_6_flags_clear, .-jcc_long_with_code_6_flags_clear

    
.globl jcc_long_with_code_6_flags_clear_constant
         .type   jcc_long_with_code_6_flags_clear_constant, @function
jcc_long_with_code_6_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x0f,0x86,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_6_flags_clear_constant, .-jcc_long_with_code_6_flags_clear_constant

    
.globl jcc_long_with_code_6_flags_clear_allregs
         .type   jcc_long_with_code_6_flags_clear_allregs, @function
jcc_long_with_code_6_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x86,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_6_flags_clear_allregs, .-jcc_long_with_code_6_flags_clear_allregs

    
.globl jcc_long_with_code_6_flags_set1
         .type   jcc_long_with_code_6_flags_set1, @function
jcc_long_with_code_6_flags_set1:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x86,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_6_flags_set1, .-jcc_long_with_code_6_flags_set1

    
.globl jcc_long_with_code_6_flags_set1_constant
         .type   jcc_long_with_code_6_flags_set1_constant, @function
jcc_long_with_code_6_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x86,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_6_flags_set1_constant, .-jcc_long_with_code_6_flags_set1_constant

    
.globl jcc_long_with_code_6_flags_set1_allregs
         .type   jcc_long_with_code_6_flags_set1_allregs, @function
jcc_long_with_code_6_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x86,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_6_flags_set1_allregs, .-jcc_long_with_code_6_flags_set1_allregs

    
.globl jcc_long_with_code_6_flags_set2
         .type   jcc_long_with_code_6_flags_set2, @function
jcc_long_with_code_6_flags_set2:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x86,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_6_flags_set2, .-jcc_long_with_code_6_flags_set2

    
.globl jcc_long_with_code_6_flags_set2_constant
         .type   jcc_long_with_code_6_flags_set2_constant, @function
jcc_long_with_code_6_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x86,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_6_flags_set2_constant, .-jcc_long_with_code_6_flags_set2_constant

    
.globl jcc_long_with_code_6_flags_set2_allregs
         .type   jcc_long_with_code_6_flags_set2_allregs, @function
jcc_long_with_code_6_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x86,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_6_flags_set2_allregs, .-jcc_long_with_code_6_flags_set2_allregs

    
.globl jcc_long_with_code_6_flags_cmp
         .type   jcc_long_with_code_6_flags_cmp, @function
jcc_long_with_code_6_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x0f,0x86,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_6_flags_cmp, .-jcc_long_with_code_6_flags_cmp

    
.globl jcc_long_with_code_6_flags_cmp_constant
         .type   jcc_long_with_code_6_flags_cmp_constant, @function
jcc_long_with_code_6_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x0f,0x86,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_6_flags_cmp_constant, .-jcc_long_with_code_6_flags_cmp_constant

    
.globl jcc_long_with_code_6_flags_cmp_allregs
         .type   jcc_long_with_code_6_flags_cmp_allregs, @function
jcc_long_with_code_6_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x86,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_6_flags_cmp_allregs, .-jcc_long_with_code_6_flags_cmp_allregs

    
.globl jcc_long_with_code_7_flags_clear
         .type   jcc_long_with_code_7_flags_clear, @function
jcc_long_with_code_7_flags_clear:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x0f,0x87,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_7_flags_clear, .-jcc_long_with_code_7_flags_clear

    
.globl jcc_long_with_code_7_flags_clear_constant
         .type   jcc_long_with_code_7_flags_clear_constant, @function
jcc_long_with_code_7_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x0f,0x87,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_7_flags_clear_constant, .-jcc_long_with_code_7_flags_clear_constant

    
.globl jcc_long_with_code_7_flags_clear_allregs
         .type   jcc_long_with_code_7_flags_clear_allregs, @function
jcc_long_with_code_7_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x87,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_7_flags_clear_allregs, .-jcc_long_with_code_7_flags_clear_allregs

    
.globl jcc_long_with_code_7_flags_set1
         .type   jcc_long_with_code_7_flags_set1, @function
jcc_long_with_code_7_flags_set1:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x87,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_7_flags_set1, .-jcc_long_with_code_7_flags_set1

    
.globl jcc_long_with_code_7_flags_set1_constant
         .type   jcc_long_with_code_7_flags_set1_constant, @function
jcc_long_with_code_7_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x87,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_7_flags_set1_constant, .-jcc_long_with_code_7_flags_set1_constant

    
.globl jcc_long_with_code_7_flags_set1_allregs
         .type   jcc_long_with_code_7_flags_set1_allregs, @function
jcc_long_with_code_7_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x87,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_7_flags_set1_allregs, .-jcc_long_with_code_7_flags_set1_allregs

    
.globl jcc_long_with_code_7_flags_set2
         .type   jcc_long_with_code_7_flags_set2, @function
jcc_long_with_code_7_flags_set2:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x87,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_7_flags_set2, .-jcc_long_with_code_7_flags_set2

    
.globl jcc_long_with_code_7_flags_set2_constant
         .type   jcc_long_with_code_7_flags_set2_constant, @function
jcc_long_with_code_7_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x87,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_7_flags_set2_constant, .-jcc_long_with_code_7_flags_set2_constant

    
.globl jcc_long_with_code_7_flags_set2_allregs
         .type   jcc_long_with_code_7_flags_set2_allregs, @function
jcc_long_with_code_7_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x87,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_7_flags_set2_allregs, .-jcc_long_with_code_7_flags_set2_allregs

    
.globl jcc_long_with_code_7_flags_cmp
         .type   jcc_long_with_code_7_flags_cmp, @function
jcc_long_with_code_7_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x0f,0x87,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_7_flags_cmp, .-jcc_long_with_code_7_flags_cmp

    
.globl jcc_long_with_code_7_flags_cmp_constant
         .type   jcc_long_with_code_7_flags_cmp_constant, @function
jcc_long_with_code_7_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x0f,0x87,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_7_flags_cmp_constant, .-jcc_long_with_code_7_flags_cmp_constant

    
.globl jcc_long_with_code_7_flags_cmp_allregs
         .type   jcc_long_with_code_7_flags_cmp_allregs, @function
jcc_long_with_code_7_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x87,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_7_flags_cmp_allregs, .-jcc_long_with_code_7_flags_cmp_allregs

    
.globl jcc_long_with_code_8_flags_clear
         .type   jcc_long_with_code_8_flags_clear, @function
jcc_long_with_code_8_flags_clear:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x0f,0x88,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_8_flags_clear, .-jcc_long_with_code_8_flags_clear

    
.globl jcc_long_with_code_8_flags_clear_constant
         .type   jcc_long_with_code_8_flags_clear_constant, @function
jcc_long_with_code_8_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x0f,0x88,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_8_flags_clear_constant, .-jcc_long_with_code_8_flags_clear_constant

    
.globl jcc_long_with_code_8_flags_clear_allregs
         .type   jcc_long_with_code_8_flags_clear_allregs, @function
jcc_long_with_code_8_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x88,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_8_flags_clear_allregs, .-jcc_long_with_code_8_flags_clear_allregs

    
.globl jcc_long_with_code_8_flags_set1
         .type   jcc_long_with_code_8_flags_set1, @function
jcc_long_with_code_8_flags_set1:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x88,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_8_flags_set1, .-jcc_long_with_code_8_flags_set1

    
.globl jcc_long_with_code_8_flags_set1_constant
         .type   jcc_long_with_code_8_flags_set1_constant, @function
jcc_long_with_code_8_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x88,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_8_flags_set1_constant, .-jcc_long_with_code_8_flags_set1_constant

    
.globl jcc_long_with_code_8_flags_set1_allregs
         .type   jcc_long_with_code_8_flags_set1_allregs, @function
jcc_long_with_code_8_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x88,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_8_flags_set1_allregs, .-jcc_long_with_code_8_flags_set1_allregs

    
.globl jcc_long_with_code_8_flags_set2
         .type   jcc_long_with_code_8_flags_set2, @function
jcc_long_with_code_8_flags_set2:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x88,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_8_flags_set2, .-jcc_long_with_code_8_flags_set2

    
.globl jcc_long_with_code_8_flags_set2_constant
         .type   jcc_long_with_code_8_flags_set2_constant, @function
jcc_long_with_code_8_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x88,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_8_flags_set2_constant, .-jcc_long_with_code_8_flags_set2_constant

    
.globl jcc_long_with_code_8_flags_set2_allregs
         .type   jcc_long_with_code_8_flags_set2_allregs, @function
jcc_long_with_code_8_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x88,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_8_flags_set2_allregs, .-jcc_long_with_code_8_flags_set2_allregs

    
.globl jcc_long_with_code_8_flags_cmp
         .type   jcc_long_with_code_8_flags_cmp, @function
jcc_long_with_code_8_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x0f,0x88,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_8_flags_cmp, .-jcc_long_with_code_8_flags_cmp

    
.globl jcc_long_with_code_8_flags_cmp_constant
         .type   jcc_long_with_code_8_flags_cmp_constant, @function
jcc_long_with_code_8_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x0f,0x88,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_8_flags_cmp_constant, .-jcc_long_with_code_8_flags_cmp_constant

    
.globl jcc_long_with_code_8_flags_cmp_allregs
         .type   jcc_long_with_code_8_flags_cmp_allregs, @function
jcc_long_with_code_8_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x88,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_8_flags_cmp_allregs, .-jcc_long_with_code_8_flags_cmp_allregs

    
.globl jcc_long_with_code_9_flags_clear
         .type   jcc_long_with_code_9_flags_clear, @function
jcc_long_with_code_9_flags_clear:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x0f,0x89,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_9_flags_clear, .-jcc_long_with_code_9_flags_clear

    
.globl jcc_long_with_code_9_flags_clear_constant
         .type   jcc_long_with_code_9_flags_clear_constant, @function
jcc_long_with_code_9_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x0f,0x89,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_9_flags_clear_constant, .-jcc_long_with_code_9_flags_clear_constant

    
.globl jcc_long_with_code_9_flags_clear_allregs
         .type   jcc_long_with_code_9_flags_clear_allregs, @function
jcc_long_with_code_9_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x89,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_9_flags_clear_allregs, .-jcc_long_with_code_9_flags_clear_allregs

    
.globl jcc_long_with_code_9_flags_set1
         .type   jcc_long_with_code_9_flags_set1, @function
jcc_long_with_code_9_flags_set1:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x89,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_9_flags_set1, .-jcc_long_with_code_9_flags_set1

    
.globl jcc_long_with_code_9_flags_set1_constant
         .type   jcc_long_with_code_9_flags_set1_constant, @function
jcc_long_with_code_9_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x89,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_9_flags_set1_constant, .-jcc_long_with_code_9_flags_set1_constant

    
.globl jcc_long_with_code_9_flags_set1_allregs
         .type   jcc_long_with_code_9_flags_set1_allregs, @function
jcc_long_with_code_9_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x89,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_9_flags_set1_allregs, .-jcc_long_with_code_9_flags_set1_allregs

    
.globl jcc_long_with_code_9_flags_set2
         .type   jcc_long_with_code_9_flags_set2, @function
jcc_long_with_code_9_flags_set2:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x89,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_9_flags_set2, .-jcc_long_with_code_9_flags_set2

    
.globl jcc_long_with_code_9_flags_set2_constant
         .type   jcc_long_with_code_9_flags_set2_constant, @function
jcc_long_with_code_9_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x89,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_9_flags_set2_constant, .-jcc_long_with_code_9_flags_set2_constant

    
.globl jcc_long_with_code_9_flags_set2_allregs
         .type   jcc_long_with_code_9_flags_set2_allregs, @function
jcc_long_with_code_9_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x89,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_9_flags_set2_allregs, .-jcc_long_with_code_9_flags_set2_allregs

    
.globl jcc_long_with_code_9_flags_cmp
         .type   jcc_long_with_code_9_flags_cmp, @function
jcc_long_with_code_9_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x0f,0x89,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_9_flags_cmp, .-jcc_long_with_code_9_flags_cmp

    
.globl jcc_long_with_code_9_flags_cmp_constant
         .type   jcc_long_with_code_9_flags_cmp_constant, @function
jcc_long_with_code_9_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x0f,0x89,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_9_flags_cmp_constant, .-jcc_long_with_code_9_flags_cmp_constant

    
.globl jcc_long_with_code_9_flags_cmp_allregs
         .type   jcc_long_with_code_9_flags_cmp_allregs, @function
jcc_long_with_code_9_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x89,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_9_flags_cmp_allregs, .-jcc_long_with_code_9_flags_cmp_allregs

    
.globl jcc_long_with_code_a_flags_clear
         .type   jcc_long_with_code_a_flags_clear, @function
jcc_long_with_code_a_flags_clear:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x0f,0x8a,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_a_flags_clear, .-jcc_long_with_code_a_flags_clear

    
.globl jcc_long_with_code_a_flags_clear_constant
         .type   jcc_long_with_code_a_flags_clear_constant, @function
jcc_long_with_code_a_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x0f,0x8a,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_a_flags_clear_constant, .-jcc_long_with_code_a_flags_clear_constant

    
.globl jcc_long_with_code_a_flags_clear_allregs
         .type   jcc_long_with_code_a_flags_clear_allregs, @function
jcc_long_with_code_a_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x8a,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_a_flags_clear_allregs, .-jcc_long_with_code_a_flags_clear_allregs

    
.globl jcc_long_with_code_a_flags_set1
         .type   jcc_long_with_code_a_flags_set1, @function
jcc_long_with_code_a_flags_set1:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x8a,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_a_flags_set1, .-jcc_long_with_code_a_flags_set1

    
.globl jcc_long_with_code_a_flags_set1_constant
         .type   jcc_long_with_code_a_flags_set1_constant, @function
jcc_long_with_code_a_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x8a,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_a_flags_set1_constant, .-jcc_long_with_code_a_flags_set1_constant

    
.globl jcc_long_with_code_a_flags_set1_allregs
         .type   jcc_long_with_code_a_flags_set1_allregs, @function
jcc_long_with_code_a_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x8a,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_a_flags_set1_allregs, .-jcc_long_with_code_a_flags_set1_allregs

    
.globl jcc_long_with_code_a_flags_set2
         .type   jcc_long_with_code_a_flags_set2, @function
jcc_long_with_code_a_flags_set2:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x8a,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_a_flags_set2, .-jcc_long_with_code_a_flags_set2

    
.globl jcc_long_with_code_a_flags_set2_constant
         .type   jcc_long_with_code_a_flags_set2_constant, @function
jcc_long_with_code_a_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x8a,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_a_flags_set2_constant, .-jcc_long_with_code_a_flags_set2_constant

    
.globl jcc_long_with_code_a_flags_set2_allregs
         .type   jcc_long_with_code_a_flags_set2_allregs, @function
jcc_long_with_code_a_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x8a,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_a_flags_set2_allregs, .-jcc_long_with_code_a_flags_set2_allregs

    
.globl jcc_long_with_code_a_flags_cmp
         .type   jcc_long_with_code_a_flags_cmp, @function
jcc_long_with_code_a_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x0f,0x8a,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_a_flags_cmp, .-jcc_long_with_code_a_flags_cmp

    
.globl jcc_long_with_code_a_flags_cmp_constant
         .type   jcc_long_with_code_a_flags_cmp_constant, @function
jcc_long_with_code_a_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x0f,0x8a,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_a_flags_cmp_constant, .-jcc_long_with_code_a_flags_cmp_constant

    
.globl jcc_long_with_code_a_flags_cmp_allregs
         .type   jcc_long_with_code_a_flags_cmp_allregs, @function
jcc_long_with_code_a_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x8a,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_a_flags_cmp_allregs, .-jcc_long_with_code_a_flags_cmp_allregs

    
.globl jcc_long_with_code_b_flags_clear
         .type   jcc_long_with_code_b_flags_clear, @function
jcc_long_with_code_b_flags_clear:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x0f,0x8b,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_b_flags_clear, .-jcc_long_with_code_b_flags_clear

    
.globl jcc_long_with_code_b_flags_clear_constant
         .type   jcc_long_with_code_b_flags_clear_constant, @function
jcc_long_with_code_b_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x0f,0x8b,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_b_flags_clear_constant, .-jcc_long_with_code_b_flags_clear_constant

    
.globl jcc_long_with_code_b_flags_clear_allregs
         .type   jcc_long_with_code_b_flags_clear_allregs, @function
jcc_long_with_code_b_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x8b,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_b_flags_clear_allregs, .-jcc_long_with_code_b_flags_clear_allregs

    
.globl jcc_long_with_code_b_flags_set1
         .type   jcc_long_with_code_b_flags_set1, @function
jcc_long_with_code_b_flags_set1:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x8b,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_b_flags_set1, .-jcc_long_with_code_b_flags_set1

    
.globl jcc_long_with_code_b_flags_set1_constant
         .type   jcc_long_with_code_b_flags_set1_constant, @function
jcc_long_with_code_b_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x8b,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_b_flags_set1_constant, .-jcc_long_with_code_b_flags_set1_constant

    
.globl jcc_long_with_code_b_flags_set1_allregs
         .type   jcc_long_with_code_b_flags_set1_allregs, @function
jcc_long_with_code_b_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x8b,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_b_flags_set1_allregs, .-jcc_long_with_code_b_flags_set1_allregs

    
.globl jcc_long_with_code_b_flags_set2
         .type   jcc_long_with_code_b_flags_set2, @function
jcc_long_with_code_b_flags_set2:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x8b,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_b_flags_set2, .-jcc_long_with_code_b_flags_set2

    
.globl jcc_long_with_code_b_flags_set2_constant
         .type   jcc_long_with_code_b_flags_set2_constant, @function
jcc_long_with_code_b_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x8b,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_b_flags_set2_constant, .-jcc_long_with_code_b_flags_set2_constant

    
.globl jcc_long_with_code_b_flags_set2_allregs
         .type   jcc_long_with_code_b_flags_set2_allregs, @function
jcc_long_with_code_b_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x8b,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_b_flags_set2_allregs, .-jcc_long_with_code_b_flags_set2_allregs

    
.globl jcc_long_with_code_b_flags_cmp
         .type   jcc_long_with_code_b_flags_cmp, @function
jcc_long_with_code_b_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x0f,0x8b,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_b_flags_cmp, .-jcc_long_with_code_b_flags_cmp

    
.globl jcc_long_with_code_b_flags_cmp_constant
         .type   jcc_long_with_code_b_flags_cmp_constant, @function
jcc_long_with_code_b_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x0f,0x8b,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_b_flags_cmp_constant, .-jcc_long_with_code_b_flags_cmp_constant

    
.globl jcc_long_with_code_b_flags_cmp_allregs
         .type   jcc_long_with_code_b_flags_cmp_allregs, @function
jcc_long_with_code_b_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x8b,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_b_flags_cmp_allregs, .-jcc_long_with_code_b_flags_cmp_allregs

    
.globl jcc_long_with_code_c_flags_clear
         .type   jcc_long_with_code_c_flags_clear, @function
jcc_long_with_code_c_flags_clear:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x0f,0x8c,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_c_flags_clear, .-jcc_long_with_code_c_flags_clear

    
.globl jcc_long_with_code_c_flags_clear_constant
         .type   jcc_long_with_code_c_flags_clear_constant, @function
jcc_long_with_code_c_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x0f,0x8c,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_c_flags_clear_constant, .-jcc_long_with_code_c_flags_clear_constant

    
.globl jcc_long_with_code_c_flags_clear_allregs
         .type   jcc_long_with_code_c_flags_clear_allregs, @function
jcc_long_with_code_c_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x8c,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_c_flags_clear_allregs, .-jcc_long_with_code_c_flags_clear_allregs

    
.globl jcc_long_with_code_c_flags_set1
         .type   jcc_long_with_code_c_flags_set1, @function
jcc_long_with_code_c_flags_set1:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x8c,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_c_flags_set1, .-jcc_long_with_code_c_flags_set1

    
.globl jcc_long_with_code_c_flags_set1_constant
         .type   jcc_long_with_code_c_flags_set1_constant, @function
jcc_long_with_code_c_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x8c,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_c_flags_set1_constant, .-jcc_long_with_code_c_flags_set1_constant

    
.globl jcc_long_with_code_c_flags_set1_allregs
         .type   jcc_long_with_code_c_flags_set1_allregs, @function
jcc_long_with_code_c_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x8c,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_c_flags_set1_allregs, .-jcc_long_with_code_c_flags_set1_allregs

    
.globl jcc_long_with_code_c_flags_set2
         .type   jcc_long_with_code_c_flags_set2, @function
jcc_long_with_code_c_flags_set2:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x8c,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_c_flags_set2, .-jcc_long_with_code_c_flags_set2

    
.globl jcc_long_with_code_c_flags_set2_constant
         .type   jcc_long_with_code_c_flags_set2_constant, @function
jcc_long_with_code_c_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x8c,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_c_flags_set2_constant, .-jcc_long_with_code_c_flags_set2_constant

    
.globl jcc_long_with_code_c_flags_set2_allregs
         .type   jcc_long_with_code_c_flags_set2_allregs, @function
jcc_long_with_code_c_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x8c,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_c_flags_set2_allregs, .-jcc_long_with_code_c_flags_set2_allregs

    
.globl jcc_long_with_code_c_flags_cmp
         .type   jcc_long_with_code_c_flags_cmp, @function
jcc_long_with_code_c_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x0f,0x8c,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_c_flags_cmp, .-jcc_long_with_code_c_flags_cmp

    
.globl jcc_long_with_code_c_flags_cmp_constant
         .type   jcc_long_with_code_c_flags_cmp_constant, @function
jcc_long_with_code_c_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x0f,0x8c,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_c_flags_cmp_constant, .-jcc_long_with_code_c_flags_cmp_constant

    
.globl jcc_long_with_code_c_flags_cmp_allregs
         .type   jcc_long_with_code_c_flags_cmp_allregs, @function
jcc_long_with_code_c_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x8c,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_c_flags_cmp_allregs, .-jcc_long_with_code_c_flags_cmp_allregs

    
.globl jcc_long_with_code_d_flags_clear
         .type   jcc_long_with_code_d_flags_clear, @function
jcc_long_with_code_d_flags_clear:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x0f,0x8d,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_d_flags_clear, .-jcc_long_with_code_d_flags_clear

    
.globl jcc_long_with_code_d_flags_clear_constant
         .type   jcc_long_with_code_d_flags_clear_constant, @function
jcc_long_with_code_d_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x0f,0x8d,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_d_flags_clear_constant, .-jcc_long_with_code_d_flags_clear_constant

    
.globl jcc_long_with_code_d_flags_clear_allregs
         .type   jcc_long_with_code_d_flags_clear_allregs, @function
jcc_long_with_code_d_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x8d,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_d_flags_clear_allregs, .-jcc_long_with_code_d_flags_clear_allregs

    
.globl jcc_long_with_code_d_flags_set1
         .type   jcc_long_with_code_d_flags_set1, @function
jcc_long_with_code_d_flags_set1:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x8d,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_d_flags_set1, .-jcc_long_with_code_d_flags_set1

    
.globl jcc_long_with_code_d_flags_set1_constant
         .type   jcc_long_with_code_d_flags_set1_constant, @function
jcc_long_with_code_d_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x8d,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_d_flags_set1_constant, .-jcc_long_with_code_d_flags_set1_constant

    
.globl jcc_long_with_code_d_flags_set1_allregs
         .type   jcc_long_with_code_d_flags_set1_allregs, @function
jcc_long_with_code_d_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x8d,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_d_flags_set1_allregs, .-jcc_long_with_code_d_flags_set1_allregs

    
.globl jcc_long_with_code_d_flags_set2
         .type   jcc_long_with_code_d_flags_set2, @function
jcc_long_with_code_d_flags_set2:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x8d,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_d_flags_set2, .-jcc_long_with_code_d_flags_set2

    
.globl jcc_long_with_code_d_flags_set2_constant
         .type   jcc_long_with_code_d_flags_set2_constant, @function
jcc_long_with_code_d_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x8d,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_d_flags_set2_constant, .-jcc_long_with_code_d_flags_set2_constant

    
.globl jcc_long_with_code_d_flags_set2_allregs
         .type   jcc_long_with_code_d_flags_set2_allregs, @function
jcc_long_with_code_d_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x8d,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_d_flags_set2_allregs, .-jcc_long_with_code_d_flags_set2_allregs

    
.globl jcc_long_with_code_d_flags_cmp
         .type   jcc_long_with_code_d_flags_cmp, @function
jcc_long_with_code_d_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x0f,0x8d,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_d_flags_cmp, .-jcc_long_with_code_d_flags_cmp

    
.globl jcc_long_with_code_d_flags_cmp_constant
         .type   jcc_long_with_code_d_flags_cmp_constant, @function
jcc_long_with_code_d_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x0f,0x8d,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_d_flags_cmp_constant, .-jcc_long_with_code_d_flags_cmp_constant

    
.globl jcc_long_with_code_d_flags_cmp_allregs
         .type   jcc_long_with_code_d_flags_cmp_allregs, @function
jcc_long_with_code_d_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x8d,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_d_flags_cmp_allregs, .-jcc_long_with_code_d_flags_cmp_allregs

    
.globl jcc_long_with_code_e_flags_clear
         .type   jcc_long_with_code_e_flags_clear, @function
jcc_long_with_code_e_flags_clear:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x0f,0x8e,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_e_flags_clear, .-jcc_long_with_code_e_flags_clear

    
.globl jcc_long_with_code_e_flags_clear_constant
         .type   jcc_long_with_code_e_flags_clear_constant, @function
jcc_long_with_code_e_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x0f,0x8e,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_e_flags_clear_constant, .-jcc_long_with_code_e_flags_clear_constant

    
.globl jcc_long_with_code_e_flags_clear_allregs
         .type   jcc_long_with_code_e_flags_clear_allregs, @function
jcc_long_with_code_e_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x8e,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_e_flags_clear_allregs, .-jcc_long_with_code_e_flags_clear_allregs

    
.globl jcc_long_with_code_e_flags_set1
         .type   jcc_long_with_code_e_flags_set1, @function
jcc_long_with_code_e_flags_set1:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x8e,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_e_flags_set1, .-jcc_long_with_code_e_flags_set1

    
.globl jcc_long_with_code_e_flags_set1_constant
         .type   jcc_long_with_code_e_flags_set1_constant, @function
jcc_long_with_code_e_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x8e,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_e_flags_set1_constant, .-jcc_long_with_code_e_flags_set1_constant

    
.globl jcc_long_with_code_e_flags_set1_allregs
         .type   jcc_long_with_code_e_flags_set1_allregs, @function
jcc_long_with_code_e_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x8e,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_e_flags_set1_allregs, .-jcc_long_with_code_e_flags_set1_allregs

    
.globl jcc_long_with_code_e_flags_set2
         .type   jcc_long_with_code_e_flags_set2, @function
jcc_long_with_code_e_flags_set2:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x8e,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_e_flags_set2, .-jcc_long_with_code_e_flags_set2

    
.globl jcc_long_with_code_e_flags_set2_constant
         .type   jcc_long_with_code_e_flags_set2_constant, @function
jcc_long_with_code_e_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x8e,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_e_flags_set2_constant, .-jcc_long_with_code_e_flags_set2_constant

    
.globl jcc_long_with_code_e_flags_set2_allregs
         .type   jcc_long_with_code_e_flags_set2_allregs, @function
jcc_long_with_code_e_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x8e,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_e_flags_set2_allregs, .-jcc_long_with_code_e_flags_set2_allregs

    
.globl jcc_long_with_code_e_flags_cmp
         .type   jcc_long_with_code_e_flags_cmp, @function
jcc_long_with_code_e_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x0f,0x8e,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_e_flags_cmp, .-jcc_long_with_code_e_flags_cmp

    
.globl jcc_long_with_code_e_flags_cmp_constant
         .type   jcc_long_with_code_e_flags_cmp_constant, @function
jcc_long_with_code_e_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x0f,0x8e,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_e_flags_cmp_constant, .-jcc_long_with_code_e_flags_cmp_constant

    
.globl jcc_long_with_code_e_flags_cmp_allregs
         .type   jcc_long_with_code_e_flags_cmp_allregs, @function
jcc_long_with_code_e_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x8e,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_e_flags_cmp_allregs, .-jcc_long_with_code_e_flags_cmp_allregs

    
.globl jcc_long_with_code_f_flags_clear
         .type   jcc_long_with_code_f_flags_clear, @function
jcc_long_with_code_f_flags_clear:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x0f,0x8f,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_f_flags_clear, .-jcc_long_with_code_f_flags_clear

    
.globl jcc_long_with_code_f_flags_clear_constant
         .type   jcc_long_with_code_f_flags_clear_constant, @function
jcc_long_with_code_f_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax

  .byte 0xb0,0x01,0x0f,0x8f,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_f_flags_clear_constant, .-jcc_long_with_code_f_flags_clear_constant

    
.globl jcc_long_with_code_f_flags_clear_allregs
         .type   jcc_long_with_code_f_flags_clear_allregs, @function
jcc_long_with_code_f_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x8f,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_f_flags_clear_allregs, .-jcc_long_with_code_f_flags_clear_allregs

    
.globl jcc_long_with_code_f_flags_set1
         .type   jcc_long_with_code_f_flags_set1, @function
jcc_long_with_code_f_flags_set1:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x8f,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_f_flags_set1, .-jcc_long_with_code_f_flags_set1

    
.globl jcc_long_with_code_f_flags_set1_constant
         .type   jcc_long_with_code_f_flags_set1_constant, @function
jcc_long_with_code_f_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x8f,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_f_flags_set1_constant, .-jcc_long_with_code_f_flags_set1_constant

    
.globl jcc_long_with_code_f_flags_set1_allregs
         .type   jcc_long_with_code_f_flags_set1_allregs, @function
jcc_long_with_code_f_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x8f,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_f_flags_set1_allregs, .-jcc_long_with_code_f_flags_set1_allregs

    
.globl jcc_long_with_code_f_flags_set2
         .type   jcc_long_with_code_f_flags_set2, @function
jcc_long_with_code_f_flags_set2:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x8f,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_f_flags_set2, .-jcc_long_with_code_f_flags_set2

    
.globl jcc_long_with_code_f_flags_set2_constant
         .type   jcc_long_with_code_f_flags_set2_constant, @function
jcc_long_with_code_f_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax

  .byte 0xb0,0x01,0x0f,0x8f,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_f_flags_set2_constant, .-jcc_long_with_code_f_flags_set2_constant

    
.globl jcc_long_with_code_f_flags_set2_allregs
         .type   jcc_long_with_code_f_flags_set2_allregs, @function
jcc_long_with_code_f_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x8f,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_f_flags_set2_allregs, .-jcc_long_with_code_f_flags_set2_allregs

    
.globl jcc_long_with_code_f_flags_cmp
         .type   jcc_long_with_code_f_flags_cmp, @function
jcc_long_with_code_f_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x0f,0x8f,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_f_flags_cmp, .-jcc_long_with_code_f_flags_cmp

    
.globl jcc_long_with_code_f_flags_cmp_constant
         .type   jcc_long_with_code_f_flags_cmp_constant, @function
jcc_long_with_code_f_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  .byte 0xb0,0x01,0x0f,0x8f,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcc_long_with_code_f_flags_cmp_constant, .-jcc_long_with_code_f_flags_cmp_constant

    
.globl jcc_long_with_code_f_flags_cmp_allregs
         .type   jcc_long_with_code_f_flags_cmp_allregs, @function
jcc_long_with_code_f_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x0f,0x8f,0x02,0x00,0x00,0x00,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcc_long_with_code_f_flags_cmp_allregs, .-jcc_long_with_code_f_flags_cmp_allregs

    
.globl jcxz
         .type   jcxz, @function
jcxz:
      

  mov 4096,%cx
  .byte 0xb0,0x01,0x67,0xe3,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcxz, .-jcxz

    
.globl jcxz_constant
         .type   jcxz_constant, @function
jcxz_constant:
      

  mov $1,%cx
  .byte 0xb0,0x01,0x67,0xe3,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jcxz_constant, .-jcxz_constant

    
.globl jcxz_allregs
         .type   jcxz_allregs, @function
jcxz_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0x67,0xe3,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jcxz_allregs, .-jcxz_allregs

    
.globl jecxz
         .type   jecxz, @function
jecxz:
      

  mov 4096,%ecx
  .byte 0xb0,0x01,0xe3,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jecxz, .-jecxz

    
.globl jecxz_constant
         .type   jecxz_constant, @function
jecxz_constant:
      

  mov $1,%ecx
  .byte 0xb0,0x01,0xe3,0x02,0xb0,0x00,0x90
  mov %al,8192

    ret
         .size   jecxz_constant, .-jecxz_constant

    
.globl jecxz_allregs
         .type   jecxz_allregs, @function
jecxz_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xb0,0x01,0xe3,0x02,0xb0,0x00,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jecxz_allregs, .-jecxz_allregs

    
.globl jmp1
         .type   jmp1, @function
jmp1:
      


  .byte 0xeb,0x01,0x90,0x90


    ret
         .size   jmp1, .-jmp1

    
.globl jmp1_constant
         .type   jmp1_constant, @function
jmp1_constant:
      


  .byte 0xeb,0x01,0x90,0x90


    ret
         .size   jmp1_constant, .-jmp1_constant

    
.globl jmp1_allregs
         .type   jmp1_allregs, @function
jmp1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xeb,0x01,0x90,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jmp1_allregs, .-jmp1_allregs

    
.globl jmp2
         .type   jmp2, @function
jmp2:
      


  .byte 0xe9,0x01,0x00,0x00,0x00,0x90,0x90


    ret
         .size   jmp2, .-jmp2

    
.globl jmp2_constant
         .type   jmp2_constant, @function
jmp2_constant:
      


  .byte 0xe9,0x01,0x00,0x00,0x00,0x90,0x90


    ret
         .size   jmp2_constant, .-jmp2_constant

    
.globl jmp2_allregs
         .type   jmp2_allregs, @function
jmp2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xe9,0x01,0x00,0x00,0x00,0x90,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jmp2_allregs, .-jmp2_allregs

    
.globl jmp3
         .type   jmp3, @function
jmp3:
      


  .byte 0xff,0x23


    ret
         .size   jmp3, .-jmp3

    
.globl jmp3_constant
         .type   jmp3_constant, @function
jmp3_constant:
      


  .byte 0xff,0x23


    ret
         .size   jmp3_constant, .-jmp3_constant

    
.globl jmp3_allregs
         .type   jmp3_allregs, @function
jmp3_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xff,0x23
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   jmp3_allregs, .-jmp3_allregs

    
.globl lahf_flags_clear
         .type   lahf_flags_clear, @function
lahf_flags_clear:
      
  movl $0x2,%eax
  decl %eax

  lahf
  mov %ah,8192
  jnc .L328_c$
  movb $0x1,8448
.L328_c$: nop
  jnz .L328_z$
  movb $0x2,8449
.L328_z$: nop
  jns .L328_s$
  movb $0x3,8450
.L328_s$: nop
  jnp .L328_p$
  movb $0x4,8451
.L328_p$: nop
  jno .L328_o$
  movb $0x5,8452
.L328_o$: nop

    ret
         .size   lahf_flags_clear, .-lahf_flags_clear

    
.globl lahf_flags_clear_constant
         .type   lahf_flags_clear_constant, @function
lahf_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax

  lahf
  mov %ah,8192
  jnc .L329_c$
  movb $0x1,8448
.L329_c$: nop
  jnz .L329_z$
  movb $0x2,8449
.L329_z$: nop
  jns .L329_s$
  movb $0x3,8450
.L329_s$: nop
  jnp .L329_p$
  movb $0x4,8451
.L329_p$: nop
  jno .L329_o$
  movb $0x5,8452
.L329_o$: nop

    ret
         .size   lahf_flags_clear_constant, .-lahf_flags_clear_constant

    
.globl lahf_flags_clear_allregs
         .type   lahf_flags_clear_allregs, @function
lahf_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  lahf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   lahf_flags_clear_allregs, .-lahf_flags_clear_allregs

    
.globl lahf_flags_set1
         .type   lahf_flags_set1, @function
lahf_flags_set1:
      
  movl $0x0,%eax
  negl %eax

  lahf
  mov %ah,8192
  jnc .L330_c$
  movb $0x1,8448
.L330_c$: nop
  jnz .L330_z$
  movb $0x2,8449
.L330_z$: nop
  jns .L330_s$
  movb $0x3,8450
.L330_s$: nop
  jnp .L330_p$
  movb $0x4,8451
.L330_p$: nop
  jno .L330_o$
  movb $0x5,8452
.L330_o$: nop

    ret
         .size   lahf_flags_set1, .-lahf_flags_set1

    
.globl lahf_flags_set1_constant
         .type   lahf_flags_set1_constant, @function
lahf_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax

  lahf
  mov %ah,8192
  jnc .L331_c$
  movb $0x1,8448
.L331_c$: nop
  jnz .L331_z$
  movb $0x2,8449
.L331_z$: nop
  jns .L331_s$
  movb $0x3,8450
.L331_s$: nop
  jnp .L331_p$
  movb $0x4,8451
.L331_p$: nop
  jno .L331_o$
  movb $0x5,8452
.L331_o$: nop

    ret
         .size   lahf_flags_set1_constant, .-lahf_flags_set1_constant

    
.globl lahf_flags_set1_allregs
         .type   lahf_flags_set1_allregs, @function
lahf_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  lahf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   lahf_flags_set1_allregs, .-lahf_flags_set1_allregs

    
.globl lahf_flags_set2
         .type   lahf_flags_set2, @function
lahf_flags_set2:
      
  movl $0x2,%eax
  negl %eax

  lahf
  mov %ah,8192
  jnc .L332_c$
  movb $0x1,8448
.L332_c$: nop
  jnz .L332_z$
  movb $0x2,8449
.L332_z$: nop
  jns .L332_s$
  movb $0x3,8450
.L332_s$: nop
  jnp .L332_p$
  movb $0x4,8451
.L332_p$: nop
  jno .L332_o$
  movb $0x5,8452
.L332_o$: nop

    ret
         .size   lahf_flags_set2, .-lahf_flags_set2

    
.globl lahf_flags_set2_constant
         .type   lahf_flags_set2_constant, @function
lahf_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax

  lahf
  mov %ah,8192
  jnc .L333_c$
  movb $0x1,8448
.L333_c$: nop
  jnz .L333_z$
  movb $0x2,8449
.L333_z$: nop
  jns .L333_s$
  movb $0x3,8450
.L333_s$: nop
  jnp .L333_p$
  movb $0x4,8451
.L333_p$: nop
  jno .L333_o$
  movb $0x5,8452
.L333_o$: nop

    ret
         .size   lahf_flags_set2_constant, .-lahf_flags_set2_constant

    
.globl lahf_flags_set2_allregs
         .type   lahf_flags_set2_allregs, @function
lahf_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  lahf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   lahf_flags_set2_allregs, .-lahf_flags_set2_allregs

    
.globl lahf_flags_cmp
         .type   lahf_flags_cmp, @function
lahf_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  lahf
  mov %ah,8192
  jnc .L334_c$
  movb $0x1,8448
.L334_c$: nop
  jnz .L334_z$
  movb $0x2,8449
.L334_z$: nop
  jns .L334_s$
  movb $0x3,8450
.L334_s$: nop
  jnp .L334_p$
  movb $0x4,8451
.L334_p$: nop
  jno .L334_o$
  movb $0x5,8452
.L334_o$: nop

    ret
         .size   lahf_flags_cmp, .-lahf_flags_cmp

    
.globl lahf_flags_cmp_constant
         .type   lahf_flags_cmp_constant, @function
lahf_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  lahf
  mov %ah,8192
  jnc .L335_c$
  movb $0x1,8448
.L335_c$: nop
  jnz .L335_z$
  movb $0x2,8449
.L335_z$: nop
  jns .L335_s$
  movb $0x3,8450
.L335_s$: nop
  jnp .L335_p$
  movb $0x4,8451
.L335_p$: nop
  jno .L335_o$
  movb $0x5,8452
.L335_o$: nop

    ret
         .size   lahf_flags_cmp_constant, .-lahf_flags_cmp_constant

    
.globl lahf_flags_cmp_allregs
         .type   lahf_flags_cmp_allregs, @function
lahf_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  lahf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   lahf_flags_cmp_allregs, .-lahf_flags_cmp_allregs

    
.globl lar
         .type   lar, @function
lar:
      


  lar %ax,%ebx


    ret
         .size   lar, .-lar

    
.globl lar_constant
         .type   lar_constant, @function
lar_constant:
      


  lar %ax,%ebx


    ret
         .size   lar_constant, .-lar_constant

    
.globl lar_allregs
         .type   lar_allregs, @function
lar_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  lar %ax,%ebx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   lar_allregs, .-lar_allregs

    
.globl lea1
         .type   lea1, @function
lea1:
      

  mov 4096,%ebx
  lea 0x42(%ebx),%eax
  mov %eax,8192
  jnc .L336_c$
  movb $0x1,8448
.L336_c$: nop
  jnz .L336_z$
  movb $0x2,8449
.L336_z$: nop
  jns .L336_s$
  movb $0x3,8450
.L336_s$: nop
  jnp .L336_p$
  movb $0x4,8451
.L336_p$: nop
  jno .L336_o$
  movb $0x5,8452
.L336_o$: nop

    ret
         .size   lea1, .-lea1

    
.globl lea1_constant
         .type   lea1_constant, @function
lea1_constant:
      

  mov $1,%ebx
  lea 0x42(%ebx),%eax
  mov %eax,8192
  jnc .L337_c$
  movb $0x1,8448
.L337_c$: nop
  jnz .L337_z$
  movb $0x2,8449
.L337_z$: nop
  jns .L337_s$
  movb $0x3,8450
.L337_s$: nop
  jnp .L337_p$
  movb $0x4,8451
.L337_p$: nop
  jno .L337_o$
  movb $0x5,8452
.L337_o$: nop

    ret
         .size   lea1_constant, .-lea1_constant

    
.globl lea1_allregs
         .type   lea1_allregs, @function
lea1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  lea 0x42(%ebx),%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   lea1_allregs, .-lea1_allregs

    
.globl lea2
         .type   lea2, @function
lea2:
      

  mov 4096,%ebx
  .byte 0x66,0x8d,0x43,0x42
  mov %ax,8192
  jnc .L338_c$
  movb $0x1,8448
.L338_c$: nop
  jnz .L338_z$
  movb $0x2,8449
.L338_z$: nop
  jns .L338_s$
  movb $0x3,8450
.L338_s$: nop
  jnp .L338_p$
  movb $0x4,8451
.L338_p$: nop
  jno .L338_o$
  movb $0x5,8452
.L338_o$: nop

    ret
         .size   lea2, .-lea2

    
.globl lea2_constant
         .type   lea2_constant, @function
lea2_constant:
      

  mov $1,%ebx
  .byte 0x66,0x8d,0x43,0x42
  mov %ax,8192
  jnc .L339_c$
  movb $0x1,8448
.L339_c$: nop
  jnz .L339_z$
  movb $0x2,8449
.L339_z$: nop
  jns .L339_s$
  movb $0x3,8450
.L339_s$: nop
  jnp .L339_p$
  movb $0x4,8451
.L339_p$: nop
  jno .L339_o$
  movb $0x5,8452
.L339_o$: nop

    ret
         .size   lea2_constant, .-lea2_constant

    
.globl lea2_allregs
         .type   lea2_allregs, @function
lea2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0x8d,0x43,0x42
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   lea2_allregs, .-lea2_allregs

    
.globl leave1
         .type   leave1, @function
leave1:
      


  .byte 0xc9


    ret
         .size   leave1, .-leave1

    
.globl leave1_constant
         .type   leave1_constant, @function
leave1_constant:
      


  .byte 0xc9


    ret
         .size   leave1_constant, .-leave1_constant

    
.globl leave1_allregs
         .type   leave1_allregs, @function
leave1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xc9
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   leave1_allregs, .-leave1_allregs

    
.globl leave2
         .type   leave2, @function
leave2:
      


  .byte 0x66,0xc9


    ret
         .size   leave2, .-leave2

    
.globl leave2_constant
         .type   leave2_constant, @function
leave2_constant:
      


  .byte 0x66,0xc9


    ret
         .size   leave2_constant, .-leave2_constant

    
.globl leave2_allregs
         .type   leave2_allregs, @function
leave2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0xc9
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   leave2_allregs, .-leave2_allregs

    
.globl lgdtl
         .type   lgdtl, @function
lgdtl:
      


  lgdtl (%eax)


    ret
         .size   lgdtl, .-lgdtl

    
.globl lgdtl_constant
         .type   lgdtl_constant, @function
lgdtl_constant:
      


  lgdtl (%eax)


    ret
         .size   lgdtl_constant, .-lgdtl_constant

    
.globl lgdtl_allregs
         .type   lgdtl_allregs, @function
lgdtl_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  lgdtl (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   lgdtl_allregs, .-lgdtl_allregs

    
.globl lidtl
         .type   lidtl, @function
lidtl:
      


  lidtl (%eax)


    ret
         .size   lidtl, .-lidtl

    
.globl lidtl_constant
         .type   lidtl_constant, @function
lidtl_constant:
      


  lidtl (%eax)


    ret
         .size   lidtl_constant, .-lidtl_constant

    
.globl lidtl_allregs
         .type   lidtl_allregs, @function
lidtl_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  lidtl (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   lidtl_allregs, .-lidtl_allregs

    
.globl lds1
         .type   lds1, @function
lds1:
      


  lds (%ecx),%edx


    ret
         .size   lds1, .-lds1

    
.globl lds1_constant
         .type   lds1_constant, @function
lds1_constant:
      


  lds (%ecx),%edx


    ret
         .size   lds1_constant, .-lds1_constant

    
.globl lds1_allregs
         .type   lds1_allregs, @function
lds1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  lds (%ecx),%edx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   lds1_allregs, .-lds1_allregs

    
.globl lds2
         .type   lds2, @function
lds2:
      


  lds (%ecx),%dx


    ret
         .size   lds2, .-lds2

    
.globl lds2_constant
         .type   lds2_constant, @function
lds2_constant:
      


  lds (%ecx),%dx


    ret
         .size   lds2_constant, .-lds2_constant

    
.globl lds2_allregs
         .type   lds2_allregs, @function
lds2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  lds (%ecx),%dx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   lds2_allregs, .-lds2_allregs

    
.globl les1
         .type   les1, @function
les1:
      


  les (%ecx),%edx


    ret
         .size   les1, .-les1

    
.globl les1_constant
         .type   les1_constant, @function
les1_constant:
      


  les (%ecx),%edx


    ret
         .size   les1_constant, .-les1_constant

    
.globl les1_allregs
         .type   les1_allregs, @function
les1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  les (%ecx),%edx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   les1_allregs, .-les1_allregs

    
.globl les2
         .type   les2, @function
les2:
      


  les (%ecx),%dx


    ret
         .size   les2, .-les2

    
.globl les2_constant
         .type   les2_constant, @function
les2_constant:
      


  les (%ecx),%dx


    ret
         .size   les2_constant, .-les2_constant

    
.globl les2_allregs
         .type   les2_allregs, @function
les2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  les (%ecx),%dx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   les2_allregs, .-les2_allregs

    
.globl lfs1
         .type   lfs1, @function
lfs1:
      


  lfs (%ecx),%edx


    ret
         .size   lfs1, .-lfs1

    
.globl lfs1_constant
         .type   lfs1_constant, @function
lfs1_constant:
      


  lfs (%ecx),%edx


    ret
         .size   lfs1_constant, .-lfs1_constant

    
.globl lfs1_allregs
         .type   lfs1_allregs, @function
lfs1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  lfs (%ecx),%edx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   lfs1_allregs, .-lfs1_allregs

    
.globl lfs2
         .type   lfs2, @function
lfs2:
      


  lfs (%ecx),%dx


    ret
         .size   lfs2, .-lfs2

    
.globl lfs2_constant
         .type   lfs2_constant, @function
lfs2_constant:
      


  lfs (%ecx),%dx


    ret
         .size   lfs2_constant, .-lfs2_constant

    
.globl lfs2_allregs
         .type   lfs2_allregs, @function
lfs2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  lfs (%ecx),%dx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   lfs2_allregs, .-lfs2_allregs

    
.globl lgs1
         .type   lgs1, @function
lgs1:
      


  lgs (%ecx),%edx


    ret
         .size   lgs1, .-lgs1

    
.globl lgs1_constant
         .type   lgs1_constant, @function
lgs1_constant:
      


  lgs (%ecx),%edx


    ret
         .size   lgs1_constant, .-lgs1_constant

    
.globl lgs1_allregs
         .type   lgs1_allregs, @function
lgs1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  lgs (%ecx),%edx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   lgs1_allregs, .-lgs1_allregs

    
.globl lgs2
         .type   lgs2, @function
lgs2:
      


  lgs (%ecx),%dx


    ret
         .size   lgs2, .-lgs2

    
.globl lgs2_constant
         .type   lgs2_constant, @function
lgs2_constant:
      


  lgs (%ecx),%dx


    ret
         .size   lgs2_constant, .-lgs2_constant

    
.globl lgs2_allregs
         .type   lgs2_allregs, @function
lgs2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  lgs (%ecx),%dx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   lgs2_allregs, .-lgs2_allregs

    
.globl lss1
         .type   lss1, @function
lss1:
      


  lss (%ecx),%edx


    ret
         .size   lss1, .-lss1

    
.globl lss1_constant
         .type   lss1_constant, @function
lss1_constant:
      


  lss (%ecx),%edx


    ret
         .size   lss1_constant, .-lss1_constant

    
.globl lss1_allregs
         .type   lss1_allregs, @function
lss1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  lss (%ecx),%edx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   lss1_allregs, .-lss1_allregs

    
.globl lss2
         .type   lss2, @function
lss2:
      


  lss (%ecx),%dx


    ret
         .size   lss2, .-lss2

    
.globl lss2_constant
         .type   lss2_constant, @function
lss2_constant:
      


  lss (%ecx),%dx


    ret
         .size   lss2_constant, .-lss2_constant

    
.globl lss2_allregs
         .type   lss2_allregs, @function
lss2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  lss (%ecx),%dx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   lss2_allregs, .-lss2_allregs

    
.globl lldt
         .type   lldt, @function
lldt:
      


  lldt (%eax)


    ret
         .size   lldt, .-lldt

    
.globl lldt_constant
         .type   lldt_constant, @function
lldt_constant:
      


  lldt (%eax)


    ret
         .size   lldt_constant, .-lldt_constant

    
.globl lldt_allregs
         .type   lldt_allregs, @function
lldt_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  lldt (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   lldt_allregs, .-lldt_allregs

    
.globl lmsw
         .type   lmsw, @function
lmsw:
      


  lmsw (%eax)


    ret
         .size   lmsw, .-lmsw

    
.globl lmsw_constant
         .type   lmsw_constant, @function
lmsw_constant:
      


  lmsw (%eax)


    ret
         .size   lmsw_constant, .-lmsw_constant

    
.globl lmsw_allregs
         .type   lmsw_allregs, @function
lmsw_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  lmsw (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   lmsw_allregs, .-lmsw_allregs

    
.globl lods1_cld
         .type   lods1_cld, @function
lods1_cld:
      cld

  mov 4096,%esi
  .byte 0xac
  mov %esi,8192
  mov %al,8196
  jnc .L340_c$
  movb $0x1,8448
.L340_c$: nop
  jnz .L340_z$
  movb $0x2,8449
.L340_z$: nop
  jns .L340_s$
  movb $0x3,8450
.L340_s$: nop
  jnp .L340_p$
  movb $0x4,8451
.L340_p$: nop
  jno .L340_o$
  movb $0x5,8452
.L340_o$: nop

    ret
         .size   lods1_cld, .-lods1_cld

    
.globl lods1_cld_constant
         .type   lods1_cld_constant, @function
lods1_cld_constant:
      cld

  mov $1,%esi
  .byte 0xac
  mov %esi,8192
  mov %al,8196
  jnc .L341_c$
  movb $0x1,8448
.L341_c$: nop
  jnz .L341_z$
  movb $0x2,8449
.L341_z$: nop
  jns .L341_s$
  movb $0x3,8450
.L341_s$: nop
  jnp .L341_p$
  movb $0x4,8451
.L341_p$: nop
  jno .L341_o$
  movb $0x5,8452
.L341_o$: nop

    ret
         .size   lods1_cld_constant, .-lods1_cld_constant

    
.globl lods1_cld_allregs
         .type   lods1_cld_allregs, @function
lods1_cld_allregs:
      cld

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xac
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   lods1_cld_allregs, .-lods1_cld_allregs

    
.globl lods1_std
         .type   lods1_std, @function
lods1_std:
      std

  mov 4096,%esi
  .byte 0xac
  mov %esi,8192
  mov %al,8196
  jnc .L342_c$
  movb $0x1,8448
.L342_c$: nop
  jnz .L342_z$
  movb $0x2,8449
.L342_z$: nop
  jns .L342_s$
  movb $0x3,8450
.L342_s$: nop
  jnp .L342_p$
  movb $0x4,8451
.L342_p$: nop
  jno .L342_o$
  movb $0x5,8452
.L342_o$: nop

    ret
         .size   lods1_std, .-lods1_std

    
.globl lods1_std_constant
         .type   lods1_std_constant, @function
lods1_std_constant:
      std

  mov $1,%esi
  .byte 0xac
  mov %esi,8192
  mov %al,8196
  jnc .L343_c$
  movb $0x1,8448
.L343_c$: nop
  jnz .L343_z$
  movb $0x2,8449
.L343_z$: nop
  jns .L343_s$
  movb $0x3,8450
.L343_s$: nop
  jnp .L343_p$
  movb $0x4,8451
.L343_p$: nop
  jno .L343_o$
  movb $0x5,8452
.L343_o$: nop

    ret
         .size   lods1_std_constant, .-lods1_std_constant

    
.globl lods1_std_allregs
         .type   lods1_std_allregs, @function
lods1_std_allregs:
      std

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xac
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   lods1_std_allregs, .-lods1_std_allregs

    
.globl lods1
         .type   lods1, @function
lods1:
      

  mov 4096,%esi
  .byte 0xac
  mov %esi,8192
  mov %al,8196
  jnc .L344_c$
  movb $0x1,8448
.L344_c$: nop
  jnz .L344_z$
  movb $0x2,8449
.L344_z$: nop
  jns .L344_s$
  movb $0x3,8450
.L344_s$: nop
  jnp .L344_p$
  movb $0x4,8451
.L344_p$: nop
  jno .L344_o$
  movb $0x5,8452
.L344_o$: nop

    ret
         .size   lods1, .-lods1

    
.globl lods1_constant
         .type   lods1_constant, @function
lods1_constant:
      

  mov $1,%esi
  .byte 0xac
  mov %esi,8192
  mov %al,8196
  jnc .L345_c$
  movb $0x1,8448
.L345_c$: nop
  jnz .L345_z$
  movb $0x2,8449
.L345_z$: nop
  jns .L345_s$
  movb $0x3,8450
.L345_s$: nop
  jnp .L345_p$
  movb $0x4,8451
.L345_p$: nop
  jno .L345_o$
  movb $0x5,8452
.L345_o$: nop

    ret
         .size   lods1_constant, .-lods1_constant

    
.globl lods1_allregs
         .type   lods1_allregs, @function
lods1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xac
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   lods1_allregs, .-lods1_allregs

    
.globl lods2_cld
         .type   lods2_cld, @function
lods2_cld:
      cld

  mov 4096,%esi
  .byte 0x66,0xad
  mov %esi,8192
  mov %ax,8196
  jnc .L346_c$
  movb $0x1,8448
.L346_c$: nop
  jnz .L346_z$
  movb $0x2,8449
.L346_z$: nop
  jns .L346_s$
  movb $0x3,8450
.L346_s$: nop
  jnp .L346_p$
  movb $0x4,8451
.L346_p$: nop
  jno .L346_o$
  movb $0x5,8452
.L346_o$: nop

    ret
         .size   lods2_cld, .-lods2_cld

    
.globl lods2_cld_constant
         .type   lods2_cld_constant, @function
lods2_cld_constant:
      cld

  mov $1,%esi
  .byte 0x66,0xad
  mov %esi,8192
  mov %ax,8196
  jnc .L347_c$
  movb $0x1,8448
.L347_c$: nop
  jnz .L347_z$
  movb $0x2,8449
.L347_z$: nop
  jns .L347_s$
  movb $0x3,8450
.L347_s$: nop
  jnp .L347_p$
  movb $0x4,8451
.L347_p$: nop
  jno .L347_o$
  movb $0x5,8452
.L347_o$: nop

    ret
         .size   lods2_cld_constant, .-lods2_cld_constant

    
.globl lods2_cld_allregs
         .type   lods2_cld_allregs, @function
lods2_cld_allregs:
      cld

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0xad
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   lods2_cld_allregs, .-lods2_cld_allregs

    
.globl lods2_std
         .type   lods2_std, @function
lods2_std:
      std

  mov 4096,%esi
  .byte 0x66,0xad
  mov %esi,8192
  mov %ax,8196
  jnc .L348_c$
  movb $0x1,8448
.L348_c$: nop
  jnz .L348_z$
  movb $0x2,8449
.L348_z$: nop
  jns .L348_s$
  movb $0x3,8450
.L348_s$: nop
  jnp .L348_p$
  movb $0x4,8451
.L348_p$: nop
  jno .L348_o$
  movb $0x5,8452
.L348_o$: nop

    ret
         .size   lods2_std, .-lods2_std

    
.globl lods2_std_constant
         .type   lods2_std_constant, @function
lods2_std_constant:
      std

  mov $1,%esi
  .byte 0x66,0xad
  mov %esi,8192
  mov %ax,8196
  jnc .L349_c$
  movb $0x1,8448
.L349_c$: nop
  jnz .L349_z$
  movb $0x2,8449
.L349_z$: nop
  jns .L349_s$
  movb $0x3,8450
.L349_s$: nop
  jnp .L349_p$
  movb $0x4,8451
.L349_p$: nop
  jno .L349_o$
  movb $0x5,8452
.L349_o$: nop

    ret
         .size   lods2_std_constant, .-lods2_std_constant

    
.globl lods2_std_allregs
         .type   lods2_std_allregs, @function
lods2_std_allregs:
      std

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0xad
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   lods2_std_allregs, .-lods2_std_allregs

    
.globl lods2
         .type   lods2, @function
lods2:
      

  mov 4096,%esi
  .byte 0x66,0xad
  mov %esi,8192
  mov %ax,8196
  jnc .L350_c$
  movb $0x1,8448
.L350_c$: nop
  jnz .L350_z$
  movb $0x2,8449
.L350_z$: nop
  jns .L350_s$
  movb $0x3,8450
.L350_s$: nop
  jnp .L350_p$
  movb $0x4,8451
.L350_p$: nop
  jno .L350_o$
  movb $0x5,8452
.L350_o$: nop

    ret
         .size   lods2, .-lods2

    
.globl lods2_constant
         .type   lods2_constant, @function
lods2_constant:
      

  mov $1,%esi
  .byte 0x66,0xad
  mov %esi,8192
  mov %ax,8196
  jnc .L351_c$
  movb $0x1,8448
.L351_c$: nop
  jnz .L351_z$
  movb $0x2,8449
.L351_z$: nop
  jns .L351_s$
  movb $0x3,8450
.L351_s$: nop
  jnp .L351_p$
  movb $0x4,8451
.L351_p$: nop
  jno .L351_o$
  movb $0x5,8452
.L351_o$: nop

    ret
         .size   lods2_constant, .-lods2_constant

    
.globl lods2_allregs
         .type   lods2_allregs, @function
lods2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0xad
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   lods2_allregs, .-lods2_allregs

    
.globl lods3_cld
         .type   lods3_cld, @function
lods3_cld:
      cld

  mov 4096,%esi
  .byte 0xad
  mov %esi,8192
  mov %eax,8196
  jnc .L352_c$
  movb $0x1,8448
.L352_c$: nop
  jnz .L352_z$
  movb $0x2,8449
.L352_z$: nop
  jns .L352_s$
  movb $0x3,8450
.L352_s$: nop
  jnp .L352_p$
  movb $0x4,8451
.L352_p$: nop
  jno .L352_o$
  movb $0x5,8452
.L352_o$: nop

    ret
         .size   lods3_cld, .-lods3_cld

    
.globl lods3_cld_constant
         .type   lods3_cld_constant, @function
lods3_cld_constant:
      cld

  mov $1,%esi
  .byte 0xad
  mov %esi,8192
  mov %eax,8196
  jnc .L353_c$
  movb $0x1,8448
.L353_c$: nop
  jnz .L353_z$
  movb $0x2,8449
.L353_z$: nop
  jns .L353_s$
  movb $0x3,8450
.L353_s$: nop
  jnp .L353_p$
  movb $0x4,8451
.L353_p$: nop
  jno .L353_o$
  movb $0x5,8452
.L353_o$: nop

    ret
         .size   lods3_cld_constant, .-lods3_cld_constant

    
.globl lods3_cld_allregs
         .type   lods3_cld_allregs, @function
lods3_cld_allregs:
      cld

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xad
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   lods3_cld_allregs, .-lods3_cld_allregs

    
.globl lods3_std
         .type   lods3_std, @function
lods3_std:
      std

  mov 4096,%esi
  .byte 0xad
  mov %esi,8192
  mov %eax,8196
  jnc .L354_c$
  movb $0x1,8448
.L354_c$: nop
  jnz .L354_z$
  movb $0x2,8449
.L354_z$: nop
  jns .L354_s$
  movb $0x3,8450
.L354_s$: nop
  jnp .L354_p$
  movb $0x4,8451
.L354_p$: nop
  jno .L354_o$
  movb $0x5,8452
.L354_o$: nop

    ret
         .size   lods3_std, .-lods3_std

    
.globl lods3_std_constant
         .type   lods3_std_constant, @function
lods3_std_constant:
      std

  mov $1,%esi
  .byte 0xad
  mov %esi,8192
  mov %eax,8196
  jnc .L355_c$
  movb $0x1,8448
.L355_c$: nop
  jnz .L355_z$
  movb $0x2,8449
.L355_z$: nop
  jns .L355_s$
  movb $0x3,8450
.L355_s$: nop
  jnp .L355_p$
  movb $0x4,8451
.L355_p$: nop
  jno .L355_o$
  movb $0x5,8452
.L355_o$: nop

    ret
         .size   lods3_std_constant, .-lods3_std_constant

    
.globl lods3_std_allregs
         .type   lods3_std_allregs, @function
lods3_std_allregs:
      std

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xad
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   lods3_std_allregs, .-lods3_std_allregs

    
.globl lods3
         .type   lods3, @function
lods3:
      

  mov 4096,%esi
  .byte 0xad
  mov %esi,8192
  mov %eax,8196
  jnc .L356_c$
  movb $0x1,8448
.L356_c$: nop
  jnz .L356_z$
  movb $0x2,8449
.L356_z$: nop
  jns .L356_s$
  movb $0x3,8450
.L356_s$: nop
  jnp .L356_p$
  movb $0x4,8451
.L356_p$: nop
  jno .L356_o$
  movb $0x5,8452
.L356_o$: nop

    ret
         .size   lods3, .-lods3

    
.globl lods3_constant
         .type   lods3_constant, @function
lods3_constant:
      

  mov $1,%esi
  .byte 0xad
  mov %esi,8192
  mov %eax,8196
  jnc .L357_c$
  movb $0x1,8448
.L357_c$: nop
  jnz .L357_z$
  movb $0x2,8449
.L357_z$: nop
  jns .L357_s$
  movb $0x3,8450
.L357_s$: nop
  jnp .L357_p$
  movb $0x4,8451
.L357_p$: nop
  jno .L357_o$
  movb $0x5,8452
.L357_o$: nop

    ret
         .size   lods3_constant, .-lods3_constant

    
.globl lods3_allregs
         .type   lods3_allregs, @function
lods3_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xad
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   lods3_allregs, .-lods3_allregs

    
.globl lods_seg
         .type   lods_seg, @function
lods_seg:
      


  .byte 0x36,0xad


    ret
         .size   lods_seg, .-lods_seg

    
.globl lods_seg_constant
         .type   lods_seg_constant, @function
lods_seg_constant:
      


  .byte 0x36,0xad


    ret
         .size   lods_seg_constant, .-lods_seg_constant

    
.globl lods_seg_allregs
         .type   lods_seg_allregs, @function
lods_seg_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x36,0xad
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   lods_seg_allregs, .-lods_seg_allregs

    
.globl loop_type_0
         .type   loop_type_0, @function
loop_type_0:
      

  mov 4096,%eax
  mov 4100,%ecx
  .byte 0x40,0xe0,0xfd
  mov %eax,8192
  mov %ecx,8196
  jnc .L358_c$
  movb $0x1,8448
.L358_c$: nop
  jnz .L358_z$
  movb $0x2,8449
.L358_z$: nop
  jns .L358_s$
  movb $0x3,8450
.L358_s$: nop
  jnp .L358_p$
  movb $0x4,8451
.L358_p$: nop
  jno .L358_o$
  movb $0x5,8452
.L358_o$: nop

    ret
         .size   loop_type_0, .-loop_type_0

    
.globl loop_type_0_constant
         .type   loop_type_0_constant, @function
loop_type_0_constant:
      

  mov $1,%eax
  mov $2,%ecx
  .byte 0x40,0xe0,0xfd
  mov %eax,8192
  mov %ecx,8196
  jnc .L359_c$
  movb $0x1,8448
.L359_c$: nop
  jnz .L359_z$
  movb $0x2,8449
.L359_z$: nop
  jns .L359_s$
  movb $0x3,8450
.L359_s$: nop
  jnp .L359_p$
  movb $0x4,8451
.L359_p$: nop
  jno .L359_o$
  movb $0x5,8452
.L359_o$: nop

    ret
         .size   loop_type_0_constant, .-loop_type_0_constant

    
.globl loop_type_0_allregs
         .type   loop_type_0_allregs, @function
loop_type_0_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x40,0xe0,0xfd
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   loop_type_0_allregs, .-loop_type_0_allregs

    
.globl loop_type_0w
         .type   loop_type_0w, @function
loop_type_0w:
      

  mov 4096,%eax
  mov 4100,%cx
  .byte 0x40,0x67,0xe0,0xfc
  mov %eax,8192
  mov %cx,8196
  jnc .L360_c$
  movb $0x1,8448
.L360_c$: nop
  jnz .L360_z$
  movb $0x2,8449
.L360_z$: nop
  jns .L360_s$
  movb $0x3,8450
.L360_s$: nop
  jnp .L360_p$
  movb $0x4,8451
.L360_p$: nop
  jno .L360_o$
  movb $0x5,8452
.L360_o$: nop

    ret
         .size   loop_type_0w, .-loop_type_0w

    
.globl loop_type_0w_constant
         .type   loop_type_0w_constant, @function
loop_type_0w_constant:
      

  mov $1,%eax
  mov $2,%cx
  .byte 0x40,0x67,0xe0,0xfc
  mov %eax,8192
  mov %cx,8196
  jnc .L361_c$
  movb $0x1,8448
.L361_c$: nop
  jnz .L361_z$
  movb $0x2,8449
.L361_z$: nop
  jns .L361_s$
  movb $0x3,8450
.L361_s$: nop
  jnp .L361_p$
  movb $0x4,8451
.L361_p$: nop
  jno .L361_o$
  movb $0x5,8452
.L361_o$: nop

    ret
         .size   loop_type_0w_constant, .-loop_type_0w_constant

    
.globl loop_type_0w_allregs
         .type   loop_type_0w_allregs, @function
loop_type_0w_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x40,0x67,0xe0,0xfc
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   loop_type_0w_allregs, .-loop_type_0w_allregs

    
.globl loop_type_1
         .type   loop_type_1, @function
loop_type_1:
      

  mov 4096,%eax
  mov 4100,%ecx
  .byte 0x40,0xe1,0xfd
  mov %eax,8192
  mov %ecx,8196
  jnc .L362_c$
  movb $0x1,8448
.L362_c$: nop
  jnz .L362_z$
  movb $0x2,8449
.L362_z$: nop
  jns .L362_s$
  movb $0x3,8450
.L362_s$: nop
  jnp .L362_p$
  movb $0x4,8451
.L362_p$: nop
  jno .L362_o$
  movb $0x5,8452
.L362_o$: nop

    ret
         .size   loop_type_1, .-loop_type_1

    
.globl loop_type_1_constant
         .type   loop_type_1_constant, @function
loop_type_1_constant:
      

  mov $1,%eax
  mov $2,%ecx
  .byte 0x40,0xe1,0xfd
  mov %eax,8192
  mov %ecx,8196
  jnc .L363_c$
  movb $0x1,8448
.L363_c$: nop
  jnz .L363_z$
  movb $0x2,8449
.L363_z$: nop
  jns .L363_s$
  movb $0x3,8450
.L363_s$: nop
  jnp .L363_p$
  movb $0x4,8451
.L363_p$: nop
  jno .L363_o$
  movb $0x5,8452
.L363_o$: nop

    ret
         .size   loop_type_1_constant, .-loop_type_1_constant

    
.globl loop_type_1_allregs
         .type   loop_type_1_allregs, @function
loop_type_1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x40,0xe1,0xfd
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   loop_type_1_allregs, .-loop_type_1_allregs

    
.globl loop_type_1w
         .type   loop_type_1w, @function
loop_type_1w:
      

  mov 4096,%eax
  mov 4100,%cx
  .byte 0x40,0x67,0xe1,0xfc
  mov %eax,8192
  mov %cx,8196
  jnc .L364_c$
  movb $0x1,8448
.L364_c$: nop
  jnz .L364_z$
  movb $0x2,8449
.L364_z$: nop
  jns .L364_s$
  movb $0x3,8450
.L364_s$: nop
  jnp .L364_p$
  movb $0x4,8451
.L364_p$: nop
  jno .L364_o$
  movb $0x5,8452
.L364_o$: nop

    ret
         .size   loop_type_1w, .-loop_type_1w

    
.globl loop_type_1w_constant
         .type   loop_type_1w_constant, @function
loop_type_1w_constant:
      

  mov $1,%eax
  mov $2,%cx
  .byte 0x40,0x67,0xe1,0xfc
  mov %eax,8192
  mov %cx,8196
  jnc .L365_c$
  movb $0x1,8448
.L365_c$: nop
  jnz .L365_z$
  movb $0x2,8449
.L365_z$: nop
  jns .L365_s$
  movb $0x3,8450
.L365_s$: nop
  jnp .L365_p$
  movb $0x4,8451
.L365_p$: nop
  jno .L365_o$
  movb $0x5,8452
.L365_o$: nop

    ret
         .size   loop_type_1w_constant, .-loop_type_1w_constant

    
.globl loop_type_1w_allregs
         .type   loop_type_1w_allregs, @function
loop_type_1w_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x40,0x67,0xe1,0xfc
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   loop_type_1w_allregs, .-loop_type_1w_allregs

    
.globl loop_type_2
         .type   loop_type_2, @function
loop_type_2:
      

  mov 4096,%eax
  mov 4100,%ecx
  .byte 0x40,0xe2,0xfd
  mov %eax,8192
  mov %ecx,8196
  jnc .L366_c$
  movb $0x1,8448
.L366_c$: nop
  jnz .L366_z$
  movb $0x2,8449
.L366_z$: nop
  jns .L366_s$
  movb $0x3,8450
.L366_s$: nop
  jnp .L366_p$
  movb $0x4,8451
.L366_p$: nop
  jno .L366_o$
  movb $0x5,8452
.L366_o$: nop

    ret
         .size   loop_type_2, .-loop_type_2

    
.globl loop_type_2_constant
         .type   loop_type_2_constant, @function
loop_type_2_constant:
      

  mov $1,%eax
  mov $2,%ecx
  .byte 0x40,0xe2,0xfd
  mov %eax,8192
  mov %ecx,8196
  jnc .L367_c$
  movb $0x1,8448
.L367_c$: nop
  jnz .L367_z$
  movb $0x2,8449
.L367_z$: nop
  jns .L367_s$
  movb $0x3,8450
.L367_s$: nop
  jnp .L367_p$
  movb $0x4,8451
.L367_p$: nop
  jno .L367_o$
  movb $0x5,8452
.L367_o$: nop

    ret
         .size   loop_type_2_constant, .-loop_type_2_constant

    
.globl loop_type_2_allregs
         .type   loop_type_2_allregs, @function
loop_type_2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x40,0xe2,0xfd
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   loop_type_2_allregs, .-loop_type_2_allregs

    
.globl loop_type_2w
         .type   loop_type_2w, @function
loop_type_2w:
      

  mov 4096,%eax
  mov 4100,%cx
  .byte 0x40,0x67,0xe2,0xfc
  mov %eax,8192
  mov %cx,8196
  jnc .L368_c$
  movb $0x1,8448
.L368_c$: nop
  jnz .L368_z$
  movb $0x2,8449
.L368_z$: nop
  jns .L368_s$
  movb $0x3,8450
.L368_s$: nop
  jnp .L368_p$
  movb $0x4,8451
.L368_p$: nop
  jno .L368_o$
  movb $0x5,8452
.L368_o$: nop

    ret
         .size   loop_type_2w, .-loop_type_2w

    
.globl loop_type_2w_constant
         .type   loop_type_2w_constant, @function
loop_type_2w_constant:
      

  mov $1,%eax
  mov $2,%cx
  .byte 0x40,0x67,0xe2,0xfc
  mov %eax,8192
  mov %cx,8196
  jnc .L369_c$
  movb $0x1,8448
.L369_c$: nop
  jnz .L369_z$
  movb $0x2,8449
.L369_z$: nop
  jns .L369_s$
  movb $0x3,8450
.L369_s$: nop
  jnp .L369_p$
  movb $0x4,8451
.L369_p$: nop
  jno .L369_o$
  movb $0x5,8452
.L369_o$: nop

    ret
         .size   loop_type_2w_constant, .-loop_type_2w_constant

    
.globl loop_type_2w_allregs
         .type   loop_type_2w_allregs, @function
loop_type_2w_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x40,0x67,0xe2,0xfc
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   loop_type_2w_allregs, .-loop_type_2w_allregs

    
.globl lsl
         .type   lsl, @function
lsl:
      


  lsl (%eax),%ebx


    ret
         .size   lsl, .-lsl

    
.globl lsl_constant
         .type   lsl_constant, @function
lsl_constant:
      


  lsl (%eax),%ebx


    ret
         .size   lsl_constant, .-lsl_constant

    
.globl lsl_allregs
         .type   lsl_allregs, @function
lsl_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  lsl (%eax),%ebx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   lsl_allregs, .-lsl_allregs

    
.globl ltr
         .type   ltr, @function
ltr:
      


  ltr %bx


    ret
         .size   ltr, .-ltr

    
.globl ltr_constant
         .type   ltr_constant, @function
ltr_constant:
      


  ltr %bx


    ret
         .size   ltr_constant, .-ltr_constant

    
.globl ltr_allregs
         .type   ltr_allregs, @function
ltr_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  ltr %bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   ltr_allregs, .-ltr_allregs

    
.globl mov_b1
         .type   mov_b1, @function
mov_b1:
      

  mov 4096,%bh
  mov %bh,%cl
  mov %cl,8192
  jnc .L370_c$
  movb $0x1,8448
.L370_c$: nop
  jnz .L370_z$
  movb $0x2,8449
.L370_z$: nop
  jns .L370_s$
  movb $0x3,8450
.L370_s$: nop
  jnp .L370_p$
  movb $0x4,8451
.L370_p$: nop
  jno .L370_o$
  movb $0x5,8452
.L370_o$: nop

    ret
         .size   mov_b1, .-mov_b1

    
.globl mov_b1_constant
         .type   mov_b1_constant, @function
mov_b1_constant:
      

  mov $1,%bh
  mov %bh,%cl
  mov %cl,8192
  jnc .L371_c$
  movb $0x1,8448
.L371_c$: nop
  jnz .L371_z$
  movb $0x2,8449
.L371_z$: nop
  jns .L371_s$
  movb $0x3,8450
.L371_s$: nop
  jnp .L371_p$
  movb $0x4,8451
.L371_p$: nop
  jno .L371_o$
  movb $0x5,8452
.L371_o$: nop

    ret
         .size   mov_b1_constant, .-mov_b1_constant

    
.globl mov_b1_allregs
         .type   mov_b1_allregs, @function
mov_b1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  mov %bh,%cl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   mov_b1_allregs, .-mov_b1_allregs

    
.globl mov_b2
         .type   mov_b2, @function
mov_b2:
      

  mov 4096,%al
  mov %al,%cl
  mov %cl,8192
  jnc .L372_c$
  movb $0x1,8448
.L372_c$: nop
  jnz .L372_z$
  movb $0x2,8449
.L372_z$: nop
  jns .L372_s$
  movb $0x3,8450
.L372_s$: nop
  jnp .L372_p$
  movb $0x4,8451
.L372_p$: nop
  jno .L372_o$
  movb $0x5,8452
.L372_o$: nop

    ret
         .size   mov_b2, .-mov_b2

    
.globl mov_b2_constant
         .type   mov_b2_constant, @function
mov_b2_constant:
      

  mov $1,%al
  mov %al,%cl
  mov %cl,8192
  jnc .L373_c$
  movb $0x1,8448
.L373_c$: nop
  jnz .L373_z$
  movb $0x2,8449
.L373_z$: nop
  jns .L373_s$
  movb $0x3,8450
.L373_s$: nop
  jnp .L373_p$
  movb $0x4,8451
.L373_p$: nop
  jno .L373_o$
  movb $0x5,8452
.L373_o$: nop

    ret
         .size   mov_b2_constant, .-mov_b2_constant

    
.globl mov_b2_allregs
         .type   mov_b2_allregs, @function
mov_b2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  mov %al,%cl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   mov_b2_allregs, .-mov_b2_allregs

    
.globl mov_b3
         .type   mov_b3, @function
mov_b3:
      

  mov 4096,%cl
  mov %cl,%al
  mov %al,8192
  jnc .L374_c$
  movb $0x1,8448
.L374_c$: nop
  jnz .L374_z$
  movb $0x2,8449
.L374_z$: nop
  jns .L374_s$
  movb $0x3,8450
.L374_s$: nop
  jnp .L374_p$
  movb $0x4,8451
.L374_p$: nop
  jno .L374_o$
  movb $0x5,8452
.L374_o$: nop

    ret
         .size   mov_b3, .-mov_b3

    
.globl mov_b3_constant
         .type   mov_b3_constant, @function
mov_b3_constant:
      

  mov $1,%cl
  mov %cl,%al
  mov %al,8192
  jnc .L375_c$
  movb $0x1,8448
.L375_c$: nop
  jnz .L375_z$
  movb $0x2,8449
.L375_z$: nop
  jns .L375_s$
  movb $0x3,8450
.L375_s$: nop
  jnp .L375_p$
  movb $0x4,8451
.L375_p$: nop
  jno .L375_o$
  movb $0x5,8452
.L375_o$: nop

    ret
         .size   mov_b3_constant, .-mov_b3_constant

    
.globl mov_b3_allregs
         .type   mov_b3_allregs, @function
mov_b3_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  mov %cl,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   mov_b3_allregs, .-mov_b3_allregs

    
.globl mov_b4
         .type   mov_b4, @function
mov_b4:
      


  mov $0x10,%cl
  mov %cl,8192
  jnc .L376_c$
  movb $0x1,8448
.L376_c$: nop
  jnz .L376_z$
  movb $0x2,8449
.L376_z$: nop
  jns .L376_s$
  movb $0x3,8450
.L376_s$: nop
  jnp .L376_p$
  movb $0x4,8451
.L376_p$: nop
  jno .L376_o$
  movb $0x5,8452
.L376_o$: nop

    ret
         .size   mov_b4, .-mov_b4

    
.globl mov_b4_constant
         .type   mov_b4_constant, @function
mov_b4_constant:
      


  mov $0x10,%cl
  mov %cl,8192
  jnc .L377_c$
  movb $0x1,8448
.L377_c$: nop
  jnz .L377_z$
  movb $0x2,8449
.L377_z$: nop
  jns .L377_s$
  movb $0x3,8450
.L377_s$: nop
  jnp .L377_p$
  movb $0x4,8451
.L377_p$: nop
  jno .L377_o$
  movb $0x5,8452
.L377_o$: nop

    ret
         .size   mov_b4_constant, .-mov_b4_constant

    
.globl mov_b4_allregs
         .type   mov_b4_allregs, @function
mov_b4_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  mov $0x10,%cl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   mov_b4_allregs, .-mov_b4_allregs

    
.globl mov_b5
         .type   mov_b5, @function
mov_b5:
      


  mov $0x10,%al
  mov %al,8192
  jnc .L378_c$
  movb $0x1,8448
.L378_c$: nop
  jnz .L378_z$
  movb $0x2,8449
.L378_z$: nop
  jns .L378_s$
  movb $0x3,8450
.L378_s$: nop
  jnp .L378_p$
  movb $0x4,8451
.L378_p$: nop
  jno .L378_o$
  movb $0x5,8452
.L378_o$: nop

    ret
         .size   mov_b5, .-mov_b5

    
.globl mov_b5_constant
         .type   mov_b5_constant, @function
mov_b5_constant:
      


  mov $0x10,%al
  mov %al,8192
  jnc .L379_c$
  movb $0x1,8448
.L379_c$: nop
  jnz .L379_z$
  movb $0x2,8449
.L379_z$: nop
  jns .L379_s$
  movb $0x3,8450
.L379_s$: nop
  jnp .L379_p$
  movb $0x4,8451
.L379_p$: nop
  jno .L379_o$
  movb $0x5,8452
.L379_o$: nop

    ret
         .size   mov_b5_constant, .-mov_b5_constant

    
.globl mov_b5_allregs
         .type   mov_b5_allregs, @function
mov_b5_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  mov $0x10,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   mov_b5_allregs, .-mov_b5_allregs

    
.globl mov_b6
         .type   mov_b6, @function
mov_b6:
      

  mov 4096,%ah
  mov 4100,%ebx
  mov %ah,(%ebx)
  jnc .L380_c$
  movb $0x1,8448
.L380_c$: nop
  jnz .L380_z$
  movb $0x2,8449
.L380_z$: nop
  jns .L380_s$
  movb $0x3,8450
.L380_s$: nop
  jnp .L380_p$
  movb $0x4,8451
.L380_p$: nop
  jno .L380_o$
  movb $0x5,8452
.L380_o$: nop

    ret
         .size   mov_b6, .-mov_b6

    
.globl mov_b6_constant
         .type   mov_b6_constant, @function
mov_b6_constant:
      

  mov $1,%ah
  mov $2,%ebx
  mov %ah,(%ebx)
  jnc .L381_c$
  movb $0x1,8448
.L381_c$: nop
  jnz .L381_z$
  movb $0x2,8449
.L381_z$: nop
  jns .L381_s$
  movb $0x3,8450
.L381_s$: nop
  jnp .L381_p$
  movb $0x4,8451
.L381_p$: nop
  jno .L381_o$
  movb $0x5,8452
.L381_o$: nop

    ret
         .size   mov_b6_constant, .-mov_b6_constant

    
.globl mov_b6_allregs
         .type   mov_b6_allregs, @function
mov_b6_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  mov %ah,(%ebx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   mov_b6_allregs, .-mov_b6_allregs

    
.globl mov_b7
         .type   mov_b7, @function
mov_b7:
      

  mov 4096,%ebx
  mov (%ebx),%ah
  mov %ah,8192
  jnc .L382_c$
  movb $0x1,8448
.L382_c$: nop
  jnz .L382_z$
  movb $0x2,8449
.L382_z$: nop
  jns .L382_s$
  movb $0x3,8450
.L382_s$: nop
  jnp .L382_p$
  movb $0x4,8451
.L382_p$: nop
  jno .L382_o$
  movb $0x5,8452
.L382_o$: nop

    ret
         .size   mov_b7, .-mov_b7

    
.globl mov_b7_constant
         .type   mov_b7_constant, @function
mov_b7_constant:
      

  mov $1,%ebx
  mov (%ebx),%ah
  mov %ah,8192
  jnc .L383_c$
  movb $0x1,8448
.L383_c$: nop
  jnz .L383_z$
  movb $0x2,8449
.L383_z$: nop
  jns .L383_s$
  movb $0x3,8450
.L383_s$: nop
  jnp .L383_p$
  movb $0x4,8451
.L383_p$: nop
  jno .L383_o$
  movb $0x5,8452
.L383_o$: nop

    ret
         .size   mov_b7_constant, .-mov_b7_constant

    
.globl mov_b7_allregs
         .type   mov_b7_allregs, @function
mov_b7_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  mov (%ebx),%ah
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   mov_b7_allregs, .-mov_b7_allregs

    
.globl mov_w1
         .type   mov_w1, @function
mov_w1:
      

  mov 4096,%ax
  mov %ax,%cx
  mov %cx,8192
  jnc .L384_c$
  movb $0x1,8448
.L384_c$: nop
  jnz .L384_z$
  movb $0x2,8449
.L384_z$: nop
  jns .L384_s$
  movb $0x3,8450
.L384_s$: nop
  jnp .L384_p$
  movb $0x4,8451
.L384_p$: nop
  jno .L384_o$
  movb $0x5,8452
.L384_o$: nop

    ret
         .size   mov_w1, .-mov_w1

    
.globl mov_w1_constant
         .type   mov_w1_constant, @function
mov_w1_constant:
      

  mov $1,%ax
  mov %ax,%cx
  mov %cx,8192
  jnc .L385_c$
  movb $0x1,8448
.L385_c$: nop
  jnz .L385_z$
  movb $0x2,8449
.L385_z$: nop
  jns .L385_s$
  movb $0x3,8450
.L385_s$: nop
  jnp .L385_p$
  movb $0x4,8451
.L385_p$: nop
  jno .L385_o$
  movb $0x5,8452
.L385_o$: nop

    ret
         .size   mov_w1_constant, .-mov_w1_constant

    
.globl mov_w1_allregs
         .type   mov_w1_allregs, @function
mov_w1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  mov %ax,%cx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   mov_w1_allregs, .-mov_w1_allregs

    
.globl mov_w2
         .type   mov_w2, @function
mov_w2:
      


  mov $0x10,%ax
  mov %ax,8192
  jnc .L386_c$
  movb $0x1,8448
.L386_c$: nop
  jnz .L386_z$
  movb $0x2,8449
.L386_z$: nop
  jns .L386_s$
  movb $0x3,8450
.L386_s$: nop
  jnp .L386_p$
  movb $0x4,8451
.L386_p$: nop
  jno .L386_o$
  movb $0x5,8452
.L386_o$: nop

    ret
         .size   mov_w2, .-mov_w2

    
.globl mov_w2_constant
         .type   mov_w2_constant, @function
mov_w2_constant:
      


  mov $0x10,%ax
  mov %ax,8192
  jnc .L387_c$
  movb $0x1,8448
.L387_c$: nop
  jnz .L387_z$
  movb $0x2,8449
.L387_z$: nop
  jns .L387_s$
  movb $0x3,8450
.L387_s$: nop
  jnp .L387_p$
  movb $0x4,8451
.L387_p$: nop
  jno .L387_o$
  movb $0x5,8452
.L387_o$: nop

    ret
         .size   mov_w2_constant, .-mov_w2_constant

    
.globl mov_w2_allregs
         .type   mov_w2_allregs, @function
mov_w2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  mov $0x10,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   mov_w2_allregs, .-mov_w2_allregs

    
.globl mov_w3
         .type   mov_w3, @function
mov_w3:
      

  mov 4096,%ax
  mov 4100,%ebx
  mov %ax,(%ebx)
  jnc .L388_c$
  movb $0x1,8448
.L388_c$: nop
  jnz .L388_z$
  movb $0x2,8449
.L388_z$: nop
  jns .L388_s$
  movb $0x3,8450
.L388_s$: nop
  jnp .L388_p$
  movb $0x4,8451
.L388_p$: nop
  jno .L388_o$
  movb $0x5,8452
.L388_o$: nop

    ret
         .size   mov_w3, .-mov_w3

    
.globl mov_w3_constant
         .type   mov_w3_constant, @function
mov_w3_constant:
      

  mov $1,%ax
  mov $2,%ebx
  mov %ax,(%ebx)
  jnc .L389_c$
  movb $0x1,8448
.L389_c$: nop
  jnz .L389_z$
  movb $0x2,8449
.L389_z$: nop
  jns .L389_s$
  movb $0x3,8450
.L389_s$: nop
  jnp .L389_p$
  movb $0x4,8451
.L389_p$: nop
  jno .L389_o$
  movb $0x5,8452
.L389_o$: nop

    ret
         .size   mov_w3_constant, .-mov_w3_constant

    
.globl mov_w3_allregs
         .type   mov_w3_allregs, @function
mov_w3_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  mov %ax,(%ebx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   mov_w3_allregs, .-mov_w3_allregs

    
.globl mov_w4
         .type   mov_w4, @function
mov_w4:
      

  mov 4096,%ebx
  mov (%ebx),%ax
  mov %ax,8192
  jnc .L390_c$
  movb $0x1,8448
.L390_c$: nop
  jnz .L390_z$
  movb $0x2,8449
.L390_z$: nop
  jns .L390_s$
  movb $0x3,8450
.L390_s$: nop
  jnp .L390_p$
  movb $0x4,8451
.L390_p$: nop
  jno .L390_o$
  movb $0x5,8452
.L390_o$: nop

    ret
         .size   mov_w4, .-mov_w4

    
.globl mov_w4_constant
         .type   mov_w4_constant, @function
mov_w4_constant:
      

  mov $1,%ebx
  mov (%ebx),%ax
  mov %ax,8192
  jnc .L391_c$
  movb $0x1,8448
.L391_c$: nop
  jnz .L391_z$
  movb $0x2,8449
.L391_z$: nop
  jns .L391_s$
  movb $0x3,8450
.L391_s$: nop
  jnp .L391_p$
  movb $0x4,8451
.L391_p$: nop
  jno .L391_o$
  movb $0x5,8452
.L391_o$: nop

    ret
         .size   mov_w4_constant, .-mov_w4_constant

    
.globl mov_w4_allregs
         .type   mov_w4_allregs, @function
mov_w4_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  mov (%ebx),%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   mov_w4_allregs, .-mov_w4_allregs

    
.globl mov_l1
         .type   mov_l1, @function
mov_l1:
      

  mov 4096,%eax
  mov %eax,%ecx
  mov %ecx,8192
  jnc .L392_c$
  movb $0x1,8448
.L392_c$: nop
  jnz .L392_z$
  movb $0x2,8449
.L392_z$: nop
  jns .L392_s$
  movb $0x3,8450
.L392_s$: nop
  jnp .L392_p$
  movb $0x4,8451
.L392_p$: nop
  jno .L392_o$
  movb $0x5,8452
.L392_o$: nop

    ret
         .size   mov_l1, .-mov_l1

    
.globl mov_l1_constant
         .type   mov_l1_constant, @function
mov_l1_constant:
      

  mov $1,%eax
  mov %eax,%ecx
  mov %ecx,8192
  jnc .L393_c$
  movb $0x1,8448
.L393_c$: nop
  jnz .L393_z$
  movb $0x2,8449
.L393_z$: nop
  jns .L393_s$
  movb $0x3,8450
.L393_s$: nop
  jnp .L393_p$
  movb $0x4,8451
.L393_p$: nop
  jno .L393_o$
  movb $0x5,8452
.L393_o$: nop

    ret
         .size   mov_l1_constant, .-mov_l1_constant

    
.globl mov_l1_allregs
         .type   mov_l1_allregs, @function
mov_l1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  mov %eax,%ecx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   mov_l1_allregs, .-mov_l1_allregs

    
.globl mov_l2
         .type   mov_l2, @function
mov_l2:
      


  mov $0x10,%eax
  mov %eax,8192
  jnc .L394_c$
  movb $0x1,8448
.L394_c$: nop
  jnz .L394_z$
  movb $0x2,8449
.L394_z$: nop
  jns .L394_s$
  movb $0x3,8450
.L394_s$: nop
  jnp .L394_p$
  movb $0x4,8451
.L394_p$: nop
  jno .L394_o$
  movb $0x5,8452
.L394_o$: nop

    ret
         .size   mov_l2, .-mov_l2

    
.globl mov_l2_constant
         .type   mov_l2_constant, @function
mov_l2_constant:
      


  mov $0x10,%eax
  mov %eax,8192
  jnc .L395_c$
  movb $0x1,8448
.L395_c$: nop
  jnz .L395_z$
  movb $0x2,8449
.L395_z$: nop
  jns .L395_s$
  movb $0x3,8450
.L395_s$: nop
  jnp .L395_p$
  movb $0x4,8451
.L395_p$: nop
  jno .L395_o$
  movb $0x5,8452
.L395_o$: nop

    ret
         .size   mov_l2_constant, .-mov_l2_constant

    
.globl mov_l2_allregs
         .type   mov_l2_allregs, @function
mov_l2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  mov $0x10,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   mov_l2_allregs, .-mov_l2_allregs

    
.globl mov_l3
         .type   mov_l3, @function
mov_l3:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov %eax,(%ebx)
  jnc .L396_c$
  movb $0x1,8448
.L396_c$: nop
  jnz .L396_z$
  movb $0x2,8449
.L396_z$: nop
  jns .L396_s$
  movb $0x3,8450
.L396_s$: nop
  jnp .L396_p$
  movb $0x4,8451
.L396_p$: nop
  jno .L396_o$
  movb $0x5,8452
.L396_o$: nop

    ret
         .size   mov_l3, .-mov_l3

    
.globl mov_l3_constant
         .type   mov_l3_constant, @function
mov_l3_constant:
      

  mov $1,%eax
  mov $2,%ebx
  mov %eax,(%ebx)
  jnc .L397_c$
  movb $0x1,8448
.L397_c$: nop
  jnz .L397_z$
  movb $0x2,8449
.L397_z$: nop
  jns .L397_s$
  movb $0x3,8450
.L397_s$: nop
  jnp .L397_p$
  movb $0x4,8451
.L397_p$: nop
  jno .L397_o$
  movb $0x5,8452
.L397_o$: nop

    ret
         .size   mov_l3_constant, .-mov_l3_constant

    
.globl mov_l3_allregs
         .type   mov_l3_allregs, @function
mov_l3_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  mov %eax,(%ebx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   mov_l3_allregs, .-mov_l3_allregs

    
.globl mov_l4
         .type   mov_l4, @function
mov_l4:
      

  mov 4096,%ebx
  mov (%ebx),%eax
  mov %eax,8192
  jnc .L398_c$
  movb $0x1,8448
.L398_c$: nop
  jnz .L398_z$
  movb $0x2,8449
.L398_z$: nop
  jns .L398_s$
  movb $0x3,8450
.L398_s$: nop
  jnp .L398_p$
  movb $0x4,8451
.L398_p$: nop
  jno .L398_o$
  movb $0x5,8452
.L398_o$: nop

    ret
         .size   mov_l4, .-mov_l4

    
.globl mov_l4_constant
         .type   mov_l4_constant, @function
mov_l4_constant:
      

  mov $1,%ebx
  mov (%ebx),%eax
  mov %eax,8192
  jnc .L399_c$
  movb $0x1,8448
.L399_c$: nop
  jnz .L399_z$
  movb $0x2,8449
.L399_z$: nop
  jns .L399_s$
  movb $0x3,8450
.L399_s$: nop
  jnp .L399_p$
  movb $0x4,8451
.L399_p$: nop
  jno .L399_o$
  movb $0x5,8452
.L399_o$: nop

    ret
         .size   mov_l4_constant, .-mov_l4_constant

    
.globl mov_l4_allregs
         .type   mov_l4_allregs, @function
mov_l4_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  mov (%ebx),%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   mov_l4_allregs, .-mov_l4_allregs

    
.globl mov_from_cr
         .type   mov_from_cr, @function
mov_from_cr:
      


  mov %cr4,%eax


    ret
         .size   mov_from_cr, .-mov_from_cr

    
.globl mov_from_cr_constant
         .type   mov_from_cr_constant, @function
mov_from_cr_constant:
      


  mov %cr4,%eax


    ret
         .size   mov_from_cr_constant, .-mov_from_cr_constant

    
.globl mov_from_cr_allregs
         .type   mov_from_cr_allregs, @function
mov_from_cr_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  mov %cr4,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   mov_from_cr_allregs, .-mov_from_cr_allregs

    
.globl mov_to_cr
         .type   mov_to_cr, @function
mov_to_cr:
      


  mov %eax,%cr4


    ret
         .size   mov_to_cr, .-mov_to_cr

    
.globl mov_to_cr_constant
         .type   mov_to_cr_constant, @function
mov_to_cr_constant:
      


  mov %eax,%cr4


    ret
         .size   mov_to_cr_constant, .-mov_to_cr_constant

    
.globl mov_to_cr_allregs
         .type   mov_to_cr_allregs, @function
mov_to_cr_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  mov %eax,%cr4
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   mov_to_cr_allregs, .-mov_to_cr_allregs

    
.globl mov_from_dr
         .type   mov_from_dr, @function
mov_from_dr:
      


  mov %dr4,%eax


    ret
         .size   mov_from_dr, .-mov_from_dr

    
.globl mov_from_dr_constant
         .type   mov_from_dr_constant, @function
mov_from_dr_constant:
      


  mov %dr4,%eax


    ret
         .size   mov_from_dr_constant, .-mov_from_dr_constant

    
.globl mov_from_dr_allregs
         .type   mov_from_dr_allregs, @function
mov_from_dr_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  mov %dr4,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   mov_from_dr_allregs, .-mov_from_dr_allregs

    
.globl mov_to_dr
         .type   mov_to_dr, @function
mov_to_dr:
      


  mov %eax,%dr4


    ret
         .size   mov_to_dr, .-mov_to_dr

    
.globl mov_to_dr_constant
         .type   mov_to_dr_constant, @function
mov_to_dr_constant:
      


  mov %eax,%dr4


    ret
         .size   mov_to_dr_constant, .-mov_to_dr_constant

    
.globl mov_to_dr_allregs
         .type   mov_to_dr_allregs, @function
mov_to_dr_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  mov %eax,%dr4
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   mov_to_dr_allregs, .-mov_to_dr_allregs

    
.globl mov_from_tr
         .type   mov_from_tr, @function
mov_from_tr:
      


  mov %tr6,%eax


    ret
         .size   mov_from_tr, .-mov_from_tr

    
.globl mov_from_tr_constant
         .type   mov_from_tr_constant, @function
mov_from_tr_constant:
      


  mov %tr6,%eax


    ret
         .size   mov_from_tr_constant, .-mov_from_tr_constant

    
.globl mov_from_tr_allregs
         .type   mov_from_tr_allregs, @function
mov_from_tr_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  mov %tr6,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   mov_from_tr_allregs, .-mov_from_tr_allregs

    
.globl mov_to_tr
         .type   mov_to_tr, @function
mov_to_tr:
      


  mov %eax,%tr6


    ret
         .size   mov_to_tr, .-mov_to_tr

    
.globl mov_to_tr_constant
         .type   mov_to_tr_constant, @function
mov_to_tr_constant:
      


  mov %eax,%tr6


    ret
         .size   mov_to_tr_constant, .-mov_to_tr_constant

    
.globl mov_to_tr_allregs
         .type   mov_to_tr_allregs, @function
mov_to_tr_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  mov %eax,%tr6
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   mov_to_tr_allregs, .-mov_to_tr_allregs

    
.globl movs1_cld
         .type   movs1_cld, @function
movs1_cld:
      cld

  mov 4096,%esi
  mov 4100,%edi
  .byte 0xa4
  mov %esi,8192
  mov %edi,8196
  jnc .L400_c$
  movb $0x1,8448
.L400_c$: nop
  jnz .L400_z$
  movb $0x2,8449
.L400_z$: nop
  jns .L400_s$
  movb $0x3,8450
.L400_s$: nop
  jnp .L400_p$
  movb $0x4,8451
.L400_p$: nop
  jno .L400_o$
  movb $0x5,8452
.L400_o$: nop

    ret
         .size   movs1_cld, .-movs1_cld

    
.globl movs1_cld_constant
         .type   movs1_cld_constant, @function
movs1_cld_constant:
      cld

  mov $1,%esi
  mov $2,%edi
  .byte 0xa4
  mov %esi,8192
  mov %edi,8196
  jnc .L401_c$
  movb $0x1,8448
.L401_c$: nop
  jnz .L401_z$
  movb $0x2,8449
.L401_z$: nop
  jns .L401_s$
  movb $0x3,8450
.L401_s$: nop
  jnp .L401_p$
  movb $0x4,8451
.L401_p$: nop
  jno .L401_o$
  movb $0x5,8452
.L401_o$: nop

    ret
         .size   movs1_cld_constant, .-movs1_cld_constant

    
.globl movs1_cld_allregs
         .type   movs1_cld_allregs, @function
movs1_cld_allregs:
      cld

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xa4
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   movs1_cld_allregs, .-movs1_cld_allregs

    
.globl movs1_std
         .type   movs1_std, @function
movs1_std:
      std

  mov 4096,%esi
  mov 4100,%edi
  .byte 0xa4
  mov %esi,8192
  mov %edi,8196
  jnc .L402_c$
  movb $0x1,8448
.L402_c$: nop
  jnz .L402_z$
  movb $0x2,8449
.L402_z$: nop
  jns .L402_s$
  movb $0x3,8450
.L402_s$: nop
  jnp .L402_p$
  movb $0x4,8451
.L402_p$: nop
  jno .L402_o$
  movb $0x5,8452
.L402_o$: nop

    ret
         .size   movs1_std, .-movs1_std

    
.globl movs1_std_constant
         .type   movs1_std_constant, @function
movs1_std_constant:
      std

  mov $1,%esi
  mov $2,%edi
  .byte 0xa4
  mov %esi,8192
  mov %edi,8196
  jnc .L403_c$
  movb $0x1,8448
.L403_c$: nop
  jnz .L403_z$
  movb $0x2,8449
.L403_z$: nop
  jns .L403_s$
  movb $0x3,8450
.L403_s$: nop
  jnp .L403_p$
  movb $0x4,8451
.L403_p$: nop
  jno .L403_o$
  movb $0x5,8452
.L403_o$: nop

    ret
         .size   movs1_std_constant, .-movs1_std_constant

    
.globl movs1_std_allregs
         .type   movs1_std_allregs, @function
movs1_std_allregs:
      std

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xa4
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   movs1_std_allregs, .-movs1_std_allregs

    
.globl movs1
         .type   movs1, @function
movs1:
      

  mov 4096,%esi
  mov 4100,%edi
  .byte 0xa4
  mov %esi,8192
  mov %edi,8196
  jnc .L404_c$
  movb $0x1,8448
.L404_c$: nop
  jnz .L404_z$
  movb $0x2,8449
.L404_z$: nop
  jns .L404_s$
  movb $0x3,8450
.L404_s$: nop
  jnp .L404_p$
  movb $0x4,8451
.L404_p$: nop
  jno .L404_o$
  movb $0x5,8452
.L404_o$: nop

    ret
         .size   movs1, .-movs1

    
.globl movs1_constant
         .type   movs1_constant, @function
movs1_constant:
      

  mov $1,%esi
  mov $2,%edi
  .byte 0xa4
  mov %esi,8192
  mov %edi,8196
  jnc .L405_c$
  movb $0x1,8448
.L405_c$: nop
  jnz .L405_z$
  movb $0x2,8449
.L405_z$: nop
  jns .L405_s$
  movb $0x3,8450
.L405_s$: nop
  jnp .L405_p$
  movb $0x4,8451
.L405_p$: nop
  jno .L405_o$
  movb $0x5,8452
.L405_o$: nop

    ret
         .size   movs1_constant, .-movs1_constant

    
.globl movs1_allregs
         .type   movs1_allregs, @function
movs1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xa4
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   movs1_allregs, .-movs1_allregs

    
.globl movs2_cld
         .type   movs2_cld, @function
movs2_cld:
      cld

  mov 4096,%esi
  mov 4100,%edi
  .byte 0x66,0xa5
  mov %esi,8192
  mov %edi,8196
  jnc .L406_c$
  movb $0x1,8448
.L406_c$: nop
  jnz .L406_z$
  movb $0x2,8449
.L406_z$: nop
  jns .L406_s$
  movb $0x3,8450
.L406_s$: nop
  jnp .L406_p$
  movb $0x4,8451
.L406_p$: nop
  jno .L406_o$
  movb $0x5,8452
.L406_o$: nop

    ret
         .size   movs2_cld, .-movs2_cld

    
.globl movs2_cld_constant
         .type   movs2_cld_constant, @function
movs2_cld_constant:
      cld

  mov $1,%esi
  mov $2,%edi
  .byte 0x66,0xa5
  mov %esi,8192
  mov %edi,8196
  jnc .L407_c$
  movb $0x1,8448
.L407_c$: nop
  jnz .L407_z$
  movb $0x2,8449
.L407_z$: nop
  jns .L407_s$
  movb $0x3,8450
.L407_s$: nop
  jnp .L407_p$
  movb $0x4,8451
.L407_p$: nop
  jno .L407_o$
  movb $0x5,8452
.L407_o$: nop

    ret
         .size   movs2_cld_constant, .-movs2_cld_constant

    
.globl movs2_cld_allregs
         .type   movs2_cld_allregs, @function
movs2_cld_allregs:
      cld

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0xa5
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   movs2_cld_allregs, .-movs2_cld_allregs

    
.globl movs2_std
         .type   movs2_std, @function
movs2_std:
      std

  mov 4096,%esi
  mov 4100,%edi
  .byte 0x66,0xa5
  mov %esi,8192
  mov %edi,8196
  jnc .L408_c$
  movb $0x1,8448
.L408_c$: nop
  jnz .L408_z$
  movb $0x2,8449
.L408_z$: nop
  jns .L408_s$
  movb $0x3,8450
.L408_s$: nop
  jnp .L408_p$
  movb $0x4,8451
.L408_p$: nop
  jno .L408_o$
  movb $0x5,8452
.L408_o$: nop

    ret
         .size   movs2_std, .-movs2_std

    
.globl movs2_std_constant
         .type   movs2_std_constant, @function
movs2_std_constant:
      std

  mov $1,%esi
  mov $2,%edi
  .byte 0x66,0xa5
  mov %esi,8192
  mov %edi,8196
  jnc .L409_c$
  movb $0x1,8448
.L409_c$: nop
  jnz .L409_z$
  movb $0x2,8449
.L409_z$: nop
  jns .L409_s$
  movb $0x3,8450
.L409_s$: nop
  jnp .L409_p$
  movb $0x4,8451
.L409_p$: nop
  jno .L409_o$
  movb $0x5,8452
.L409_o$: nop

    ret
         .size   movs2_std_constant, .-movs2_std_constant

    
.globl movs2_std_allregs
         .type   movs2_std_allregs, @function
movs2_std_allregs:
      std

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0xa5
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   movs2_std_allregs, .-movs2_std_allregs

    
.globl movs2
         .type   movs2, @function
movs2:
      

  mov 4096,%esi
  mov 4100,%edi
  .byte 0x66,0xa5
  mov %esi,8192
  mov %edi,8196
  jnc .L410_c$
  movb $0x1,8448
.L410_c$: nop
  jnz .L410_z$
  movb $0x2,8449
.L410_z$: nop
  jns .L410_s$
  movb $0x3,8450
.L410_s$: nop
  jnp .L410_p$
  movb $0x4,8451
.L410_p$: nop
  jno .L410_o$
  movb $0x5,8452
.L410_o$: nop

    ret
         .size   movs2, .-movs2

    
.globl movs2_constant
         .type   movs2_constant, @function
movs2_constant:
      

  mov $1,%esi
  mov $2,%edi
  .byte 0x66,0xa5
  mov %esi,8192
  mov %edi,8196
  jnc .L411_c$
  movb $0x1,8448
.L411_c$: nop
  jnz .L411_z$
  movb $0x2,8449
.L411_z$: nop
  jns .L411_s$
  movb $0x3,8450
.L411_s$: nop
  jnp .L411_p$
  movb $0x4,8451
.L411_p$: nop
  jno .L411_o$
  movb $0x5,8452
.L411_o$: nop

    ret
         .size   movs2_constant, .-movs2_constant

    
.globl movs2_allregs
         .type   movs2_allregs, @function
movs2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0xa5
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   movs2_allregs, .-movs2_allregs

    
.globl movs3_cld
         .type   movs3_cld, @function
movs3_cld:
      cld

  mov 4096,%esi
  mov 4100,%edi
  .byte 0xa5
  mov %esi,8192
  mov %edi,8196
  jnc .L412_c$
  movb $0x1,8448
.L412_c$: nop
  jnz .L412_z$
  movb $0x2,8449
.L412_z$: nop
  jns .L412_s$
  movb $0x3,8450
.L412_s$: nop
  jnp .L412_p$
  movb $0x4,8451
.L412_p$: nop
  jno .L412_o$
  movb $0x5,8452
.L412_o$: nop

    ret
         .size   movs3_cld, .-movs3_cld

    
.globl movs3_cld_constant
         .type   movs3_cld_constant, @function
movs3_cld_constant:
      cld

  mov $1,%esi
  mov $2,%edi
  .byte 0xa5
  mov %esi,8192
  mov %edi,8196
  jnc .L413_c$
  movb $0x1,8448
.L413_c$: nop
  jnz .L413_z$
  movb $0x2,8449
.L413_z$: nop
  jns .L413_s$
  movb $0x3,8450
.L413_s$: nop
  jnp .L413_p$
  movb $0x4,8451
.L413_p$: nop
  jno .L413_o$
  movb $0x5,8452
.L413_o$: nop

    ret
         .size   movs3_cld_constant, .-movs3_cld_constant

    
.globl movs3_cld_allregs
         .type   movs3_cld_allregs, @function
movs3_cld_allregs:
      cld

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xa5
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   movs3_cld_allregs, .-movs3_cld_allregs

    
.globl movs3_std
         .type   movs3_std, @function
movs3_std:
      std

  mov 4096,%esi
  mov 4100,%edi
  .byte 0xa5
  mov %esi,8192
  mov %edi,8196
  jnc .L414_c$
  movb $0x1,8448
.L414_c$: nop
  jnz .L414_z$
  movb $0x2,8449
.L414_z$: nop
  jns .L414_s$
  movb $0x3,8450
.L414_s$: nop
  jnp .L414_p$
  movb $0x4,8451
.L414_p$: nop
  jno .L414_o$
  movb $0x5,8452
.L414_o$: nop

    ret
         .size   movs3_std, .-movs3_std

    
.globl movs3_std_constant
         .type   movs3_std_constant, @function
movs3_std_constant:
      std

  mov $1,%esi
  mov $2,%edi
  .byte 0xa5
  mov %esi,8192
  mov %edi,8196
  jnc .L415_c$
  movb $0x1,8448
.L415_c$: nop
  jnz .L415_z$
  movb $0x2,8449
.L415_z$: nop
  jns .L415_s$
  movb $0x3,8450
.L415_s$: nop
  jnp .L415_p$
  movb $0x4,8451
.L415_p$: nop
  jno .L415_o$
  movb $0x5,8452
.L415_o$: nop

    ret
         .size   movs3_std_constant, .-movs3_std_constant

    
.globl movs3_std_allregs
         .type   movs3_std_allregs, @function
movs3_std_allregs:
      std

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xa5
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   movs3_std_allregs, .-movs3_std_allregs

    
.globl movs3
         .type   movs3, @function
movs3:
      

  mov 4096,%esi
  mov 4100,%edi
  .byte 0xa5
  mov %esi,8192
  mov %edi,8196
  jnc .L416_c$
  movb $0x1,8448
.L416_c$: nop
  jnz .L416_z$
  movb $0x2,8449
.L416_z$: nop
  jns .L416_s$
  movb $0x3,8450
.L416_s$: nop
  jnp .L416_p$
  movb $0x4,8451
.L416_p$: nop
  jno .L416_o$
  movb $0x5,8452
.L416_o$: nop

    ret
         .size   movs3, .-movs3

    
.globl movs3_constant
         .type   movs3_constant, @function
movs3_constant:
      

  mov $1,%esi
  mov $2,%edi
  .byte 0xa5
  mov %esi,8192
  mov %edi,8196
  jnc .L417_c$
  movb $0x1,8448
.L417_c$: nop
  jnz .L417_z$
  movb $0x2,8449
.L417_z$: nop
  jns .L417_s$
  movb $0x3,8450
.L417_s$: nop
  jnp .L417_p$
  movb $0x4,8451
.L417_p$: nop
  jno .L417_o$
  movb $0x5,8452
.L417_o$: nop

    ret
         .size   movs3_constant, .-movs3_constant

    
.globl movs3_allregs
         .type   movs3_allregs, @function
movs3_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xa5
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   movs3_allregs, .-movs3_allregs

    
.globl movs_seg
         .type   movs_seg, @function
movs_seg:
      


  .byte 0x36,0xa5


    ret
         .size   movs_seg, .-movs_seg

    
.globl movs_seg_constant
         .type   movs_seg_constant, @function
movs_seg_constant:
      


  .byte 0x36,0xa5


    ret
         .size   movs_seg_constant, .-movs_seg_constant

    
.globl movs_seg_allregs
         .type   movs_seg_allregs, @function
movs_seg_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x36,0xa5
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   movs_seg_allregs, .-movs_seg_allregs

    
.globl movsx1
         .type   movsx1, @function
movsx1:
      

  mov 4096,%al
  movsx %al,%cx
  mov %cx,8192
  jnc .L418_c$
  movb $0x1,8448
.L418_c$: nop
  jnz .L418_z$
  movb $0x2,8449
.L418_z$: nop
  jns .L418_s$
  movb $0x3,8450
.L418_s$: nop
  jnp .L418_p$
  movb $0x4,8451
.L418_p$: nop
  jno .L418_o$
  movb $0x5,8452
.L418_o$: nop

    ret
         .size   movsx1, .-movsx1

    
.globl movsx1_constant
         .type   movsx1_constant, @function
movsx1_constant:
      

  mov $1,%al
  movsx %al,%cx
  mov %cx,8192
  jnc .L419_c$
  movb $0x1,8448
.L419_c$: nop
  jnz .L419_z$
  movb $0x2,8449
.L419_z$: nop
  jns .L419_s$
  movb $0x3,8450
.L419_s$: nop
  jnp .L419_p$
  movb $0x4,8451
.L419_p$: nop
  jno .L419_o$
  movb $0x5,8452
.L419_o$: nop

    ret
         .size   movsx1_constant, .-movsx1_constant

    
.globl movsx1_allregs
         .type   movsx1_allregs, @function
movsx1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  movsx %al,%cx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   movsx1_allregs, .-movsx1_allregs

    
.globl movsx2
         .type   movsx2, @function
movsx2:
      

  mov 4096,%ax
  movsx %ax,%ecx
  mov %ecx,8192
  jnc .L420_c$
  movb $0x1,8448
.L420_c$: nop
  jnz .L420_z$
  movb $0x2,8449
.L420_z$: nop
  jns .L420_s$
  movb $0x3,8450
.L420_s$: nop
  jnp .L420_p$
  movb $0x4,8451
.L420_p$: nop
  jno .L420_o$
  movb $0x5,8452
.L420_o$: nop

    ret
         .size   movsx2, .-movsx2

    
.globl movsx2_constant
         .type   movsx2_constant, @function
movsx2_constant:
      

  mov $1,%ax
  movsx %ax,%ecx
  mov %ecx,8192
  jnc .L421_c$
  movb $0x1,8448
.L421_c$: nop
  jnz .L421_z$
  movb $0x2,8449
.L421_z$: nop
  jns .L421_s$
  movb $0x3,8450
.L421_s$: nop
  jnp .L421_p$
  movb $0x4,8451
.L421_p$: nop
  jno .L421_o$
  movb $0x5,8452
.L421_o$: nop

    ret
         .size   movsx2_constant, .-movsx2_constant

    
.globl movsx2_allregs
         .type   movsx2_allregs, @function
movsx2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  movsx %ax,%ecx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   movsx2_allregs, .-movsx2_allregs

    
.globl movsx3
         .type   movsx3, @function
movsx3:
      

  mov 4096,%al
  movsx %al,%ecx
  mov %ecx,8192
  jnc .L422_c$
  movb $0x1,8448
.L422_c$: nop
  jnz .L422_z$
  movb $0x2,8449
.L422_z$: nop
  jns .L422_s$
  movb $0x3,8450
.L422_s$: nop
  jnp .L422_p$
  movb $0x4,8451
.L422_p$: nop
  jno .L422_o$
  movb $0x5,8452
.L422_o$: nop

    ret
         .size   movsx3, .-movsx3

    
.globl movsx3_constant
         .type   movsx3_constant, @function
movsx3_constant:
      

  mov $1,%al
  movsx %al,%ecx
  mov %ecx,8192
  jnc .L423_c$
  movb $0x1,8448
.L423_c$: nop
  jnz .L423_z$
  movb $0x2,8449
.L423_z$: nop
  jns .L423_s$
  movb $0x3,8450
.L423_s$: nop
  jnp .L423_p$
  movb $0x4,8451
.L423_p$: nop
  jno .L423_o$
  movb $0x5,8452
.L423_o$: nop

    ret
         .size   movsx3_constant, .-movsx3_constant

    
.globl movsx3_allregs
         .type   movsx3_allregs, @function
movsx3_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  movsx %al,%ecx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   movsx3_allregs, .-movsx3_allregs

    
.globl movzx1
         .type   movzx1, @function
movzx1:
      

  mov 4096,%al
  movzx %al,%cx
  mov %cx,8192
  jnc .L424_c$
  movb $0x1,8448
.L424_c$: nop
  jnz .L424_z$
  movb $0x2,8449
.L424_z$: nop
  jns .L424_s$
  movb $0x3,8450
.L424_s$: nop
  jnp .L424_p$
  movb $0x4,8451
.L424_p$: nop
  jno .L424_o$
  movb $0x5,8452
.L424_o$: nop

    ret
         .size   movzx1, .-movzx1

    
.globl movzx1_constant
         .type   movzx1_constant, @function
movzx1_constant:
      

  mov $1,%al
  movzx %al,%cx
  mov %cx,8192
  jnc .L425_c$
  movb $0x1,8448
.L425_c$: nop
  jnz .L425_z$
  movb $0x2,8449
.L425_z$: nop
  jns .L425_s$
  movb $0x3,8450
.L425_s$: nop
  jnp .L425_p$
  movb $0x4,8451
.L425_p$: nop
  jno .L425_o$
  movb $0x5,8452
.L425_o$: nop

    ret
         .size   movzx1_constant, .-movzx1_constant

    
.globl movzx1_allregs
         .type   movzx1_allregs, @function
movzx1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  movzx %al,%cx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   movzx1_allregs, .-movzx1_allregs

    
.globl movzx2
         .type   movzx2, @function
movzx2:
      

  mov 4096,%ax
  movzx %ax,%ecx
  mov %ecx,8192
  jnc .L426_c$
  movb $0x1,8448
.L426_c$: nop
  jnz .L426_z$
  movb $0x2,8449
.L426_z$: nop
  jns .L426_s$
  movb $0x3,8450
.L426_s$: nop
  jnp .L426_p$
  movb $0x4,8451
.L426_p$: nop
  jno .L426_o$
  movb $0x5,8452
.L426_o$: nop

    ret
         .size   movzx2, .-movzx2

    
.globl movzx2_constant
         .type   movzx2_constant, @function
movzx2_constant:
      

  mov $1,%ax
  movzx %ax,%ecx
  mov %ecx,8192
  jnc .L427_c$
  movb $0x1,8448
.L427_c$: nop
  jnz .L427_z$
  movb $0x2,8449
.L427_z$: nop
  jns .L427_s$
  movb $0x3,8450
.L427_s$: nop
  jnp .L427_p$
  movb $0x4,8451
.L427_p$: nop
  jno .L427_o$
  movb $0x5,8452
.L427_o$: nop

    ret
         .size   movzx2_constant, .-movzx2_constant

    
.globl movzx2_allregs
         .type   movzx2_allregs, @function
movzx2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  movzx %ax,%ecx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   movzx2_allregs, .-movzx2_allregs

    
.globl movzx3
         .type   movzx3, @function
movzx3:
      

  mov 4096,%al
  movzx %al,%ecx
  mov %ecx,8192
  jnc .L428_c$
  movb $0x1,8448
.L428_c$: nop
  jnz .L428_z$
  movb $0x2,8449
.L428_z$: nop
  jns .L428_s$
  movb $0x3,8450
.L428_s$: nop
  jnp .L428_p$
  movb $0x4,8451
.L428_p$: nop
  jno .L428_o$
  movb $0x5,8452
.L428_o$: nop

    ret
         .size   movzx3, .-movzx3

    
.globl movzx3_constant
         .type   movzx3_constant, @function
movzx3_constant:
      

  mov $1,%al
  movzx %al,%ecx
  mov %ecx,8192
  jnc .L429_c$
  movb $0x1,8448
.L429_c$: nop
  jnz .L429_z$
  movb $0x2,8449
.L429_z$: nop
  jns .L429_s$
  movb $0x3,8450
.L429_s$: nop
  jnp .L429_p$
  movb $0x4,8451
.L429_p$: nop
  jno .L429_o$
  movb $0x5,8452
.L429_o$: nop

    ret
         .size   movzx3_constant, .-movzx3_constant

    
.globl movzx3_allregs
         .type   movzx3_allregs, @function
movzx3_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  movzx %al,%ecx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   movzx3_allregs, .-movzx3_allregs

    
.globl mul1
         .type   mul1, @function
mul1:
      

  mov 4096,%al
  mov 4100,%bl
  mul %bl
  mov %ax,8192
  jnc .L430_c$
  movb $0x1,8448
.L430_c$: nop
  jnz .L430_z$
  movb $0x2,8449
.L430_z$: nop
  jns .L430_s$
  movb $0x3,8450
.L430_s$: nop
  jnp .L430_p$
  movb $0x4,8451
.L430_p$: nop
  jno .L430_o$
  movb $0x5,8452
.L430_o$: nop

    ret
         .size   mul1, .-mul1

    
.globl mul1_constant
         .type   mul1_constant, @function
mul1_constant:
      

  mov $1,%al
  mov $2,%bl
  mul %bl
  mov %ax,8192
  jnc .L431_c$
  movb $0x1,8448
.L431_c$: nop
  jnz .L431_z$
  movb $0x2,8449
.L431_z$: nop
  jns .L431_s$
  movb $0x3,8450
.L431_s$: nop
  jnp .L431_p$
  movb $0x4,8451
.L431_p$: nop
  jno .L431_o$
  movb $0x5,8452
.L431_o$: nop

    ret
         .size   mul1_constant, .-mul1_constant

    
.globl mul1_allregs
         .type   mul1_allregs, @function
mul1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  mul %bl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   mul1_allregs, .-mul1_allregs

    
.globl mul2
         .type   mul2, @function
mul2:
      

  mov 4096,%ax
  mov 4100,%bx
  mul %bx
  mov %ax,8192
  mov %dx,8196
  jnc .L432_c$
  movb $0x1,8448
.L432_c$: nop
  jnz .L432_z$
  movb $0x2,8449
.L432_z$: nop
  jns .L432_s$
  movb $0x3,8450
.L432_s$: nop
  jnp .L432_p$
  movb $0x4,8451
.L432_p$: nop
  jno .L432_o$
  movb $0x5,8452
.L432_o$: nop

    ret
         .size   mul2, .-mul2

    
.globl mul2_constant
         .type   mul2_constant, @function
mul2_constant:
      

  mov $1,%ax
  mov $2,%bx
  mul %bx
  mov %ax,8192
  mov %dx,8196
  jnc .L433_c$
  movb $0x1,8448
.L433_c$: nop
  jnz .L433_z$
  movb $0x2,8449
.L433_z$: nop
  jns .L433_s$
  movb $0x3,8450
.L433_s$: nop
  jnp .L433_p$
  movb $0x4,8451
.L433_p$: nop
  jno .L433_o$
  movb $0x5,8452
.L433_o$: nop

    ret
         .size   mul2_constant, .-mul2_constant

    
.globl mul2_allregs
         .type   mul2_allregs, @function
mul2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  mul %bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   mul2_allregs, .-mul2_allregs

    
.globl mul3
         .type   mul3, @function
mul3:
      

  mov 4096,%eax
  mov 4100,%ebx
  mul %ebx
  mov %eax,8192
  mov %edx,8196
  jnc .L434_c$
  movb $0x1,8448
.L434_c$: nop
  jnz .L434_z$
  movb $0x2,8449
.L434_z$: nop
  jns .L434_s$
  movb $0x3,8450
.L434_s$: nop
  jnp .L434_p$
  movb $0x4,8451
.L434_p$: nop
  jno .L434_o$
  movb $0x5,8452
.L434_o$: nop

    ret
         .size   mul3, .-mul3

    
.globl mul3_constant
         .type   mul3_constant, @function
mul3_constant:
      

  mov $1,%eax
  mov $2,%ebx
  mul %ebx
  mov %eax,8192
  mov %edx,8196
  jnc .L435_c$
  movb $0x1,8448
.L435_c$: nop
  jnz .L435_z$
  movb $0x2,8449
.L435_z$: nop
  jns .L435_s$
  movb $0x3,8450
.L435_s$: nop
  jnp .L435_p$
  movb $0x4,8451
.L435_p$: nop
  jno .L435_o$
  movb $0x5,8452
.L435_o$: nop

    ret
         .size   mul3_constant, .-mul3_constant

    
.globl mul3_allregs
         .type   mul3_allregs, @function
mul3_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  mul %ebx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   mul3_allregs, .-mul3_allregs

    
.globl neg1
         .type   neg1, @function
neg1:
      

  mov 4096,%al
  neg %bl
  mov %al,8192
  jnc .L436_c$
  movb $0x1,8448
.L436_c$: nop
  jnz .L436_z$
  movb $0x2,8449
.L436_z$: nop
  jns .L436_s$
  movb $0x3,8450
.L436_s$: nop
  jnp .L436_p$
  movb $0x4,8451
.L436_p$: nop
  jno .L436_o$
  movb $0x5,8452
.L436_o$: nop

    ret
         .size   neg1, .-neg1

    
.globl neg1_constant
         .type   neg1_constant, @function
neg1_constant:
      

  mov $1,%al
  neg %bl
  mov %al,8192
  jnc .L437_c$
  movb $0x1,8448
.L437_c$: nop
  jnz .L437_z$
  movb $0x2,8449
.L437_z$: nop
  jns .L437_s$
  movb $0x3,8450
.L437_s$: nop
  jnp .L437_p$
  movb $0x4,8451
.L437_p$: nop
  jno .L437_o$
  movb $0x5,8452
.L437_o$: nop

    ret
         .size   neg1_constant, .-neg1_constant

    
.globl neg1_allregs
         .type   neg1_allregs, @function
neg1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  neg %bl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   neg1_allregs, .-neg1_allregs

    
.globl neg2
         .type   neg2, @function
neg2:
      

  mov 4096,%bx
  neg %bx
  mov %bx,8192
  jnc .L438_c$
  movb $0x1,8448
.L438_c$: nop
  jnz .L438_z$
  movb $0x2,8449
.L438_z$: nop
  jns .L438_s$
  movb $0x3,8450
.L438_s$: nop
  jnp .L438_p$
  movb $0x4,8451
.L438_p$: nop
  jno .L438_o$
  movb $0x5,8452
.L438_o$: nop

    ret
         .size   neg2, .-neg2

    
.globl neg2_constant
         .type   neg2_constant, @function
neg2_constant:
      

  mov $1,%bx
  neg %bx
  mov %bx,8192
  jnc .L439_c$
  movb $0x1,8448
.L439_c$: nop
  jnz .L439_z$
  movb $0x2,8449
.L439_z$: nop
  jns .L439_s$
  movb $0x3,8450
.L439_s$: nop
  jnp .L439_p$
  movb $0x4,8451
.L439_p$: nop
  jno .L439_o$
  movb $0x5,8452
.L439_o$: nop

    ret
         .size   neg2_constant, .-neg2_constant

    
.globl neg2_allregs
         .type   neg2_allregs, @function
neg2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  neg %bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   neg2_allregs, .-neg2_allregs

    
.globl neg3
         .type   neg3, @function
neg3:
      

  mov 4096,%ebx
  neg %ebx
  mov %ebx,8192
  jnc .L440_c$
  movb $0x1,8448
.L440_c$: nop
  jnz .L440_z$
  movb $0x2,8449
.L440_z$: nop
  jns .L440_s$
  movb $0x3,8450
.L440_s$: nop
  jnp .L440_p$
  movb $0x4,8451
.L440_p$: nop
  jno .L440_o$
  movb $0x5,8452
.L440_o$: nop

    ret
         .size   neg3, .-neg3

    
.globl neg3_constant
         .type   neg3_constant, @function
neg3_constant:
      

  mov $1,%ebx
  neg %ebx
  mov %ebx,8192
  jnc .L441_c$
  movb $0x1,8448
.L441_c$: nop
  jnz .L441_z$
  movb $0x2,8449
.L441_z$: nop
  jns .L441_s$
  movb $0x3,8450
.L441_s$: nop
  jnp .L441_p$
  movb $0x4,8451
.L441_p$: nop
  jno .L441_o$
  movb $0x5,8452
.L441_o$: nop

    ret
         .size   neg3_constant, .-neg3_constant

    
.globl neg3_allregs
         .type   neg3_allregs, @function
neg3_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  neg %ebx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   neg3_allregs, .-neg3_allregs

    
.globl neg_locked
         .type   neg_locked, @function
neg_locked:
      


  lock negl (%ebx)


    ret
         .size   neg_locked, .-neg_locked

    
.globl neg_locked_constant
         .type   neg_locked_constant, @function
neg_locked_constant:
      


  lock negl (%ebx)


    ret
         .size   neg_locked_constant, .-neg_locked_constant

    
.globl neg_locked_allregs
         .type   neg_locked_allregs, @function
neg_locked_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  lock negl (%ebx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   neg_locked_allregs, .-neg_locked_allregs

    
.globl nop1
         .type   nop1, @function
nop1:
      


  .byte 0x90


    ret
         .size   nop1, .-nop1

    
.globl nop1_constant
         .type   nop1_constant, @function
nop1_constant:
      


  .byte 0x90


    ret
         .size   nop1_constant, .-nop1_constant

    
.globl nop1_allregs
         .type   nop1_allregs, @function
nop1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   nop1_allregs, .-nop1_allregs

    
.globl nop2
         .type   nop2, @function
nop2:
      


  .byte 0x66,0x90


    ret
         .size   nop2, .-nop2

    
.globl nop2_constant
         .type   nop2_constant, @function
nop2_constant:
      


  .byte 0x66,0x90


    ret
         .size   nop2_constant, .-nop2_constant

    
.globl nop2_allregs
         .type   nop2_allregs, @function
nop2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0x90
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   nop2_allregs, .-nop2_allregs

    
.globl nop3
         .type   nop3, @function
nop3:
      


  .byte 0x0f,0x1f,0x00


    ret
         .size   nop3, .-nop3

    
.globl nop3_constant
         .type   nop3_constant, @function
nop3_constant:
      


  .byte 0x0f,0x1f,0x00


    ret
         .size   nop3_constant, .-nop3_constant

    
.globl nop3_allregs
         .type   nop3_allregs, @function
nop3_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x1f,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   nop3_allregs, .-nop3_allregs

    
.globl nop4
         .type   nop4, @function
nop4:
      


  .byte 0x0f,0x1f,0x40,0x00


    ret
         .size   nop4, .-nop4

    
.globl nop4_constant
         .type   nop4_constant, @function
nop4_constant:
      


  .byte 0x0f,0x1f,0x40,0x00


    ret
         .size   nop4_constant, .-nop4_constant

    
.globl nop4_allregs
         .type   nop4_allregs, @function
nop4_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x1f,0x40,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   nop4_allregs, .-nop4_allregs

    
.globl nop5
         .type   nop5, @function
nop5:
      


  .byte 0x0f,0x1f,0x44,0x00,0x00


    ret
         .size   nop5, .-nop5

    
.globl nop5_constant
         .type   nop5_constant, @function
nop5_constant:
      


  .byte 0x0f,0x1f,0x44,0x00,0x00


    ret
         .size   nop5_constant, .-nop5_constant

    
.globl nop5_allregs
         .type   nop5_allregs, @function
nop5_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x1f,0x44,0x00,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   nop5_allregs, .-nop5_allregs

    
.globl nop6
         .type   nop6, @function
nop6:
      


  .byte 0x66,0x0f,0x1f,0x44,0x00,0x00


    ret
         .size   nop6, .-nop6

    
.globl nop6_constant
         .type   nop6_constant, @function
nop6_constant:
      


  .byte 0x66,0x0f,0x1f,0x44,0x00,0x00


    ret
         .size   nop6_constant, .-nop6_constant

    
.globl nop6_allregs
         .type   nop6_allregs, @function
nop6_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0x0f,0x1f,0x44,0x00,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   nop6_allregs, .-nop6_allregs

    
.globl nop7
         .type   nop7, @function
nop7:
      


  .byte 0x0f,0x1f,0x80,0x00,0x00,0x00,0x00


    ret
         .size   nop7, .-nop7

    
.globl nop7_constant
         .type   nop7_constant, @function
nop7_constant:
      


  .byte 0x0f,0x1f,0x80,0x00,0x00,0x00,0x00


    ret
         .size   nop7_constant, .-nop7_constant

    
.globl nop7_allregs
         .type   nop7_allregs, @function
nop7_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x1f,0x80,0x00,0x00,0x00,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   nop7_allregs, .-nop7_allregs

    
.globl not1
         .type   not1, @function
not1:
      

  mov 4096,%bl
  not %bl
  mov %bl,8192
  jnc .L442_c$
  movb $0x1,8448
.L442_c$: nop
  jnz .L442_z$
  movb $0x2,8449
.L442_z$: nop
  jns .L442_s$
  movb $0x3,8450
.L442_s$: nop
  jnp .L442_p$
  movb $0x4,8451
.L442_p$: nop
  jno .L442_o$
  movb $0x5,8452
.L442_o$: nop

    ret
         .size   not1, .-not1

    
.globl not1_constant
         .type   not1_constant, @function
not1_constant:
      

  mov $1,%bl
  not %bl
  mov %bl,8192
  jnc .L443_c$
  movb $0x1,8448
.L443_c$: nop
  jnz .L443_z$
  movb $0x2,8449
.L443_z$: nop
  jns .L443_s$
  movb $0x3,8450
.L443_s$: nop
  jnp .L443_p$
  movb $0x4,8451
.L443_p$: nop
  jno .L443_o$
  movb $0x5,8452
.L443_o$: nop

    ret
         .size   not1_constant, .-not1_constant

    
.globl not1_allregs
         .type   not1_allregs, @function
not1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  not %bl
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   not1_allregs, .-not1_allregs

    
.globl not2
         .type   not2, @function
not2:
      

  mov 4096,%bx
  not %bx
  mov %bx,8192
  jnc .L444_c$
  movb $0x1,8448
.L444_c$: nop
  jnz .L444_z$
  movb $0x2,8449
.L444_z$: nop
  jns .L444_s$
  movb $0x3,8450
.L444_s$: nop
  jnp .L444_p$
  movb $0x4,8451
.L444_p$: nop
  jno .L444_o$
  movb $0x5,8452
.L444_o$: nop

    ret
         .size   not2, .-not2

    
.globl not2_constant
         .type   not2_constant, @function
not2_constant:
      

  mov $1,%bx
  not %bx
  mov %bx,8192
  jnc .L445_c$
  movb $0x1,8448
.L445_c$: nop
  jnz .L445_z$
  movb $0x2,8449
.L445_z$: nop
  jns .L445_s$
  movb $0x3,8450
.L445_s$: nop
  jnp .L445_p$
  movb $0x4,8451
.L445_p$: nop
  jno .L445_o$
  movb $0x5,8452
.L445_o$: nop

    ret
         .size   not2_constant, .-not2_constant

    
.globl not2_allregs
         .type   not2_allregs, @function
not2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  not %bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   not2_allregs, .-not2_allregs

    
.globl not3
         .type   not3, @function
not3:
      

  mov 4096,%ebx
  not %ebx
  mov %ebx,8192
  jnc .L446_c$
  movb $0x1,8448
.L446_c$: nop
  jnz .L446_z$
  movb $0x2,8449
.L446_z$: nop
  jns .L446_s$
  movb $0x3,8450
.L446_s$: nop
  jnp .L446_p$
  movb $0x4,8451
.L446_p$: nop
  jno .L446_o$
  movb $0x5,8452
.L446_o$: nop

    ret
         .size   not3, .-not3

    
.globl not3_constant
         .type   not3_constant, @function
not3_constant:
      

  mov $1,%ebx
  not %ebx
  mov %ebx,8192
  jnc .L447_c$
  movb $0x1,8448
.L447_c$: nop
  jnz .L447_z$
  movb $0x2,8449
.L447_z$: nop
  jns .L447_s$
  movb $0x3,8450
.L447_s$: nop
  jnp .L447_p$
  movb $0x4,8451
.L447_p$: nop
  jno .L447_o$
  movb $0x5,8452
.L447_o$: nop

    ret
         .size   not3_constant, .-not3_constant

    
.globl not3_allregs
         .type   not3_allregs, @function
not3_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  not %ebx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   not3_allregs, .-not3_allregs

    
.globl not_locked
         .type   not_locked, @function
not_locked:
      


  lock notl (%ebx)


    ret
         .size   not_locked, .-not_locked

    
.globl not_locked_constant
         .type   not_locked_constant, @function
not_locked_constant:
      


  lock notl (%ebx)


    ret
         .size   not_locked_constant, .-not_locked_constant

    
.globl not_locked_allregs
         .type   not_locked_allregs, @function
not_locked_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  lock notl (%ebx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   not_locked_allregs, .-not_locked_allregs

    
.globl or1
         .type   or1, @function
or1:
      

  mov 4096,%al
  .byte 0x0c,0x02
  mov %al,8192
  jnc .L448_c$
  movb $0x1,8448
.L448_c$: nop
  jnz .L448_z$
  movb $0x2,8449
.L448_z$: nop
  jns .L448_s$
  movb $0x3,8450
.L448_s$: nop
  jnp .L448_p$
  movb $0x4,8451
.L448_p$: nop
  jno .L448_o$
  movb $0x5,8452
.L448_o$: nop

    ret
         .size   or1, .-or1

    
.globl or1_constant
         .type   or1_constant, @function
or1_constant:
      

  mov $1,%al
  .byte 0x0c,0x02
  mov %al,8192
  jnc .L449_c$
  movb $0x1,8448
.L449_c$: nop
  jnz .L449_z$
  movb $0x2,8449
.L449_z$: nop
  jns .L449_s$
  movb $0x3,8450
.L449_s$: nop
  jnp .L449_p$
  movb $0x4,8451
.L449_p$: nop
  jno .L449_o$
  movb $0x5,8452
.L449_o$: nop

    ret
         .size   or1_constant, .-or1_constant

    
.globl or1_allregs
         .type   or1_allregs, @function
or1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0c,0x02
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   or1_allregs, .-or1_allregs

    
.globl or2
         .type   or2, @function
or2:
      

  mov 4096,%al
  .byte 0x0c,0xfe
  mov %al,8192
  jnc .L450_c$
  movb $0x1,8448
.L450_c$: nop
  jnz .L450_z$
  movb $0x2,8449
.L450_z$: nop
  jns .L450_s$
  movb $0x3,8450
.L450_s$: nop
  jnp .L450_p$
  movb $0x4,8451
.L450_p$: nop
  jno .L450_o$
  movb $0x5,8452
.L450_o$: nop

    ret
         .size   or2, .-or2

    
.globl or2_constant
         .type   or2_constant, @function
or2_constant:
      

  mov $1,%al
  .byte 0x0c,0xfe
  mov %al,8192
  jnc .L451_c$
  movb $0x1,8448
.L451_c$: nop
  jnz .L451_z$
  movb $0x2,8449
.L451_z$: nop
  jns .L451_s$
  movb $0x3,8450
.L451_s$: nop
  jnp .L451_p$
  movb $0x4,8451
.L451_p$: nop
  jno .L451_o$
  movb $0x5,8452
.L451_o$: nop

    ret
         .size   or2_constant, .-or2_constant

    
.globl or2_allregs
         .type   or2_allregs, @function
or2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0c,0xfe
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   or2_allregs, .-or2_allregs

    
.globl or3
         .type   or3, @function
or3:
      

  mov 4096,%ax
  .byte 0x66,0x0d,0x02,0x00
  mov %ax,8192
  jnc .L452_c$
  movb $0x1,8448
.L452_c$: nop
  jnz .L452_z$
  movb $0x2,8449
.L452_z$: nop
  jns .L452_s$
  movb $0x3,8450
.L452_s$: nop
  jnp .L452_p$
  movb $0x4,8451
.L452_p$: nop
  jno .L452_o$
  movb $0x5,8452
.L452_o$: nop

    ret
         .size   or3, .-or3

    
.globl or3_constant
         .type   or3_constant, @function
or3_constant:
      

  mov $1,%ax
  .byte 0x66,0x0d,0x02,0x00
  mov %ax,8192
  jnc .L453_c$
  movb $0x1,8448
.L453_c$: nop
  jnz .L453_z$
  movb $0x2,8449
.L453_z$: nop
  jns .L453_s$
  movb $0x3,8450
.L453_s$: nop
  jnp .L453_p$
  movb $0x4,8451
.L453_p$: nop
  jno .L453_o$
  movb $0x5,8452
.L453_o$: nop

    ret
         .size   or3_constant, .-or3_constant

    
.globl or3_allregs
         .type   or3_allregs, @function
or3_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0x0d,0x02,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   or3_allregs, .-or3_allregs

    
.globl or4
         .type   or4, @function
or4:
      

  mov 4096,%ax
  .byte 0x66,0x0d,0xfe,0xff
  mov %ax,8192
  jnc .L454_c$
  movb $0x1,8448
.L454_c$: nop
  jnz .L454_z$
  movb $0x2,8449
.L454_z$: nop
  jns .L454_s$
  movb $0x3,8450
.L454_s$: nop
  jnp .L454_p$
  movb $0x4,8451
.L454_p$: nop
  jno .L454_o$
  movb $0x5,8452
.L454_o$: nop

    ret
         .size   or4, .-or4

    
.globl or4_constant
         .type   or4_constant, @function
or4_constant:
      

  mov $1,%ax
  .byte 0x66,0x0d,0xfe,0xff
  mov %ax,8192
  jnc .L455_c$
  movb $0x1,8448
.L455_c$: nop
  jnz .L455_z$
  movb $0x2,8449
.L455_z$: nop
  jns .L455_s$
  movb $0x3,8450
.L455_s$: nop
  jnp .L455_p$
  movb $0x4,8451
.L455_p$: nop
  jno .L455_o$
  movb $0x5,8452
.L455_o$: nop

    ret
         .size   or4_constant, .-or4_constant

    
.globl or4_allregs
         .type   or4_allregs, @function
or4_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0x0d,0xfe,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   or4_allregs, .-or4_allregs

    
.globl or5
         .type   or5, @function
or5:
      

  mov 4096,%eax
  .byte 0x0d,0x02,0x00,0x00,0x00
  mov %eax,8192
  jnc .L456_c$
  movb $0x1,8448
.L456_c$: nop
  jnz .L456_z$
  movb $0x2,8449
.L456_z$: nop
  jns .L456_s$
  movb $0x3,8450
.L456_s$: nop
  jnp .L456_p$
  movb $0x4,8451
.L456_p$: nop
  jno .L456_o$
  movb $0x5,8452
.L456_o$: nop

    ret
         .size   or5, .-or5

    
.globl or5_constant
         .type   or5_constant, @function
or5_constant:
      

  mov $1,%eax
  .byte 0x0d,0x02,0x00,0x00,0x00
  mov %eax,8192
  jnc .L457_c$
  movb $0x1,8448
.L457_c$: nop
  jnz .L457_z$
  movb $0x2,8449
.L457_z$: nop
  jns .L457_s$
  movb $0x3,8450
.L457_s$: nop
  jnp .L457_p$
  movb $0x4,8451
.L457_p$: nop
  jno .L457_o$
  movb $0x5,8452
.L457_o$: nop

    ret
         .size   or5_constant, .-or5_constant

    
.globl or5_allregs
         .type   or5_allregs, @function
or5_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0d,0x02,0x00,0x00,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   or5_allregs, .-or5_allregs

    
.globl or6
         .type   or6, @function
or6:
      

  mov 4096,%eax
  .byte 0x0d,0xfe,0xff,0xff,0xff
  mov %eax,8192
  jnc .L458_c$
  movb $0x1,8448
.L458_c$: nop
  jnz .L458_z$
  movb $0x2,8449
.L458_z$: nop
  jns .L458_s$
  movb $0x3,8450
.L458_s$: nop
  jnp .L458_p$
  movb $0x4,8451
.L458_p$: nop
  jno .L458_o$
  movb $0x5,8452
.L458_o$: nop

    ret
         .size   or6, .-or6

    
.globl or6_constant
         .type   or6_constant, @function
or6_constant:
      

  mov $1,%eax
  .byte 0x0d,0xfe,0xff,0xff,0xff
  mov %eax,8192
  jnc .L459_c$
  movb $0x1,8448
.L459_c$: nop
  jnz .L459_z$
  movb $0x2,8449
.L459_z$: nop
  jns .L459_s$
  movb $0x3,8450
.L459_s$: nop
  jnp .L459_p$
  movb $0x4,8451
.L459_p$: nop
  jno .L459_o$
  movb $0x5,8452
.L459_o$: nop

    ret
         .size   or6_constant, .-or6_constant

    
.globl or6_allregs
         .type   or6_allregs, @function
or6_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0d,0xfe,0xff,0xff,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   or6_allregs, .-or6_allregs

    
.globl or7
         .type   or7, @function
or7:
      

  mov 4096,%eax
  mov 4100,%ebp
  orl 8(%ebp), %eax
  mov %eax,8192
  jnc .L460_c$
  movb $0x1,8448
.L460_c$: nop
  jnz .L460_z$
  movb $0x2,8449
.L460_z$: nop
  jns .L460_s$
  movb $0x3,8450
.L460_s$: nop
  jnp .L460_p$
  movb $0x4,8451
.L460_p$: nop
  jno .L460_o$
  movb $0x5,8452
.L460_o$: nop

    ret
         .size   or7, .-or7

    
.globl or7_constant
         .type   or7_constant, @function
or7_constant:
      

  mov $1,%eax
  mov $2,%ebp
  orl 8(%ebp), %eax
  mov %eax,8192
  jnc .L461_c$
  movb $0x1,8448
.L461_c$: nop
  jnz .L461_z$
  movb $0x2,8449
.L461_z$: nop
  jns .L461_s$
  movb $0x3,8450
.L461_s$: nop
  jnp .L461_p$
  movb $0x4,8451
.L461_p$: nop
  jno .L461_o$
  movb $0x5,8452
.L461_o$: nop

    ret
         .size   or7_constant, .-or7_constant

    
.globl or7_allregs
         .type   or7_allregs, @function
or7_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  orl 8(%ebp), %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   or7_allregs, .-or7_allregs

    
.globl or8
         .type   or8, @function
or8:
      

  mov 4096,%eax
  orl $0x02,%eax
  mov %eax,8192
  jnc .L462_c$
  movb $0x1,8448
.L462_c$: nop
  jnz .L462_z$
  movb $0x2,8449
.L462_z$: nop
  jns .L462_s$
  movb $0x3,8450
.L462_s$: nop
  jnp .L462_p$
  movb $0x4,8451
.L462_p$: nop
  jno .L462_o$
  movb $0x5,8452
.L462_o$: nop

    ret
         .size   or8, .-or8

    
.globl or8_constant
         .type   or8_constant, @function
or8_constant:
      

  mov $1,%eax
  orl $0x02,%eax
  mov %eax,8192
  jnc .L463_c$
  movb $0x1,8448
.L463_c$: nop
  jnz .L463_z$
  movb $0x2,8449
.L463_z$: nop
  jns .L463_s$
  movb $0x3,8450
.L463_s$: nop
  jnp .L463_p$
  movb $0x4,8451
.L463_p$: nop
  jno .L463_o$
  movb $0x5,8452
.L463_o$: nop

    ret
         .size   or8_constant, .-or8_constant

    
.globl or8_allregs
         .type   or8_allregs, @function
or8_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  orl $0x02,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   or8_allregs, .-or8_allregs

    
.globl or9
         .type   or9, @function
or9:
      

  mov 4096,%eax
  orl $0xf2,%eax
  mov %eax,8192
  jnc .L464_c$
  movb $0x1,8448
.L464_c$: nop
  jnz .L464_z$
  movb $0x2,8449
.L464_z$: nop
  jns .L464_s$
  movb $0x3,8450
.L464_s$: nop
  jnp .L464_p$
  movb $0x4,8451
.L464_p$: nop
  jno .L464_o$
  movb $0x5,8452
.L464_o$: nop

    ret
         .size   or9, .-or9

    
.globl or9_constant
         .type   or9_constant, @function
or9_constant:
      

  mov $1,%eax
  orl $0xf2,%eax
  mov %eax,8192
  jnc .L465_c$
  movb $0x1,8448
.L465_c$: nop
  jnz .L465_z$
  movb $0x2,8449
.L465_z$: nop
  jns .L465_s$
  movb $0x3,8450
.L465_s$: nop
  jnp .L465_p$
  movb $0x4,8451
.L465_p$: nop
  jno .L465_o$
  movb $0x5,8452
.L465_o$: nop

    ret
         .size   or9_constant, .-or9_constant

    
.globl or9_allregs
         .type   or9_allregs, @function
or9_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  orl $0xf2,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   or9_allregs, .-or9_allregs

    
.globl or_locked
         .type   or_locked, @function
or_locked:
      


  lock or 8(%ebp), %eax


    ret
         .size   or_locked, .-or_locked

    
.globl or_locked_constant
         .type   or_locked_constant, @function
or_locked_constant:
      


  lock or 8(%ebp), %eax


    ret
         .size   or_locked_constant, .-or_locked_constant

    
.globl or_locked_allregs
         .type   or_locked_allregs, @function
or_locked_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  lock or 8(%ebp), %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   or_locked_allregs, .-or_locked_allregs

    
.globl out1
         .type   out1, @function
out1:
      

  mov 4096,%al
  .byte 0xe6,0x12
  jnc .L466_c$
  movb $0x1,8448
.L466_c$: nop
  jnz .L466_z$
  movb $0x2,8449
.L466_z$: nop
  jns .L466_s$
  movb $0x3,8450
.L466_s$: nop
  jnp .L466_p$
  movb $0x4,8451
.L466_p$: nop
  jno .L466_o$
  movb $0x5,8452
.L466_o$: nop

    ret
         .size   out1, .-out1

    
.globl out1_constant
         .type   out1_constant, @function
out1_constant:
      

  mov $1,%al
  .byte 0xe6,0x12
  jnc .L467_c$
  movb $0x1,8448
.L467_c$: nop
  jnz .L467_z$
  movb $0x2,8449
.L467_z$: nop
  jns .L467_s$
  movb $0x3,8450
.L467_s$: nop
  jnp .L467_p$
  movb $0x4,8451
.L467_p$: nop
  jno .L467_o$
  movb $0x5,8452
.L467_o$: nop

    ret
         .size   out1_constant, .-out1_constant

    
.globl out1_allregs
         .type   out1_allregs, @function
out1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xe6,0x12
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   out1_allregs, .-out1_allregs

    
.globl out2
         .type   out2, @function
out2:
      

  mov 4096,%ax
  .byte 0x66,0xe7,0x12
  jnc .L468_c$
  movb $0x1,8448
.L468_c$: nop
  jnz .L468_z$
  movb $0x2,8449
.L468_z$: nop
  jns .L468_s$
  movb $0x3,8450
.L468_s$: nop
  jnp .L468_p$
  movb $0x4,8451
.L468_p$: nop
  jno .L468_o$
  movb $0x5,8452
.L468_o$: nop

    ret
         .size   out2, .-out2

    
.globl out2_constant
         .type   out2_constant, @function
out2_constant:
      

  mov $1,%ax
  .byte 0x66,0xe7,0x12
  jnc .L469_c$
  movb $0x1,8448
.L469_c$: nop
  jnz .L469_z$
  movb $0x2,8449
.L469_z$: nop
  jns .L469_s$
  movb $0x3,8450
.L469_s$: nop
  jnp .L469_p$
  movb $0x4,8451
.L469_p$: nop
  jno .L469_o$
  movb $0x5,8452
.L469_o$: nop

    ret
         .size   out2_constant, .-out2_constant

    
.globl out2_allregs
         .type   out2_allregs, @function
out2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0xe7,0x12
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   out2_allregs, .-out2_allregs

    
.globl out3
         .type   out3, @function
out3:
      

  mov 4096,%eax
  .byte 0xe7,0x12
  jnc .L470_c$
  movb $0x1,8448
.L470_c$: nop
  jnz .L470_z$
  movb $0x2,8449
.L470_z$: nop
  jns .L470_s$
  movb $0x3,8450
.L470_s$: nop
  jnp .L470_p$
  movb $0x4,8451
.L470_p$: nop
  jno .L470_o$
  movb $0x5,8452
.L470_o$: nop

    ret
         .size   out3, .-out3

    
.globl out3_constant
         .type   out3_constant, @function
out3_constant:
      

  mov $1,%eax
  .byte 0xe7,0x12
  jnc .L471_c$
  movb $0x1,8448
.L471_c$: nop
  jnz .L471_z$
  movb $0x2,8449
.L471_z$: nop
  jns .L471_s$
  movb $0x3,8450
.L471_s$: nop
  jnp .L471_p$
  movb $0x4,8451
.L471_p$: nop
  jno .L471_o$
  movb $0x5,8452
.L471_o$: nop

    ret
         .size   out3_constant, .-out3_constant

    
.globl out3_allregs
         .type   out3_allregs, @function
out3_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xe7,0x12
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   out3_allregs, .-out3_allregs

    
.globl out4
         .type   out4, @function
out4:
      

  mov 4096,%al
  mov 4100,%dx
  .byte 0xee
  jnc .L472_c$
  movb $0x1,8448
.L472_c$: nop
  jnz .L472_z$
  movb $0x2,8449
.L472_z$: nop
  jns .L472_s$
  movb $0x3,8450
.L472_s$: nop
  jnp .L472_p$
  movb $0x4,8451
.L472_p$: nop
  jno .L472_o$
  movb $0x5,8452
.L472_o$: nop

    ret
         .size   out4, .-out4

    
.globl out4_constant
         .type   out4_constant, @function
out4_constant:
      

  mov $1,%al
  mov $2,%dx
  .byte 0xee
  jnc .L473_c$
  movb $0x1,8448
.L473_c$: nop
  jnz .L473_z$
  movb $0x2,8449
.L473_z$: nop
  jns .L473_s$
  movb $0x3,8450
.L473_s$: nop
  jnp .L473_p$
  movb $0x4,8451
.L473_p$: nop
  jno .L473_o$
  movb $0x5,8452
.L473_o$: nop

    ret
         .size   out4_constant, .-out4_constant

    
.globl out4_allregs
         .type   out4_allregs, @function
out4_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xee
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   out4_allregs, .-out4_allregs

    
.globl out5
         .type   out5, @function
out5:
      

  mov 4096,%ax
  mov 4100,%dx
  .byte 0x66,0xef
  jnc .L474_c$
  movb $0x1,8448
.L474_c$: nop
  jnz .L474_z$
  movb $0x2,8449
.L474_z$: nop
  jns .L474_s$
  movb $0x3,8450
.L474_s$: nop
  jnp .L474_p$
  movb $0x4,8451
.L474_p$: nop
  jno .L474_o$
  movb $0x5,8452
.L474_o$: nop

    ret
         .size   out5, .-out5

    
.globl out5_constant
         .type   out5_constant, @function
out5_constant:
      

  mov $1,%ax
  mov $2,%dx
  .byte 0x66,0xef
  jnc .L475_c$
  movb $0x1,8448
.L475_c$: nop
  jnz .L475_z$
  movb $0x2,8449
.L475_z$: nop
  jns .L475_s$
  movb $0x3,8450
.L475_s$: nop
  jnp .L475_p$
  movb $0x4,8451
.L475_p$: nop
  jno .L475_o$
  movb $0x5,8452
.L475_o$: nop

    ret
         .size   out5_constant, .-out5_constant

    
.globl out5_allregs
         .type   out5_allregs, @function
out5_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0xef
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   out5_allregs, .-out5_allregs

    
.globl out6
         .type   out6, @function
out6:
      

  mov 4096,%eax
  mov 4100,%dx
  .byte 0xef
  jnc .L476_c$
  movb $0x1,8448
.L476_c$: nop
  jnz .L476_z$
  movb $0x2,8449
.L476_z$: nop
  jns .L476_s$
  movb $0x3,8450
.L476_s$: nop
  jnp .L476_p$
  movb $0x4,8451
.L476_p$: nop
  jno .L476_o$
  movb $0x5,8452
.L476_o$: nop

    ret
         .size   out6, .-out6

    
.globl out6_constant
         .type   out6_constant, @function
out6_constant:
      

  mov $1,%eax
  mov $2,%dx
  .byte 0xef
  jnc .L477_c$
  movb $0x1,8448
.L477_c$: nop
  jnz .L477_z$
  movb $0x2,8449
.L477_z$: nop
  jns .L477_s$
  movb $0x3,8450
.L477_s$: nop
  jnp .L477_p$
  movb $0x4,8451
.L477_p$: nop
  jno .L477_o$
  movb $0x5,8452
.L477_o$: nop

    ret
         .size   out6_constant, .-out6_constant

    
.globl out6_allregs
         .type   out6_allregs, @function
out6_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xef
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   out6_allregs, .-out6_allregs

    
.globl outs1
         .type   outs1, @function
outs1:
      

  mov 4096,%dx
  mov 4100,%al
  mov 4104,%esi
  .byte 0x6e
  mov %esi,8192
  jnc .L478_c$
  movb $0x1,8448
.L478_c$: nop
  jnz .L478_z$
  movb $0x2,8449
.L478_z$: nop
  jns .L478_s$
  movb $0x3,8450
.L478_s$: nop
  jnp .L478_p$
  movb $0x4,8451
.L478_p$: nop
  jno .L478_o$
  movb $0x5,8452
.L478_o$: nop

    ret
         .size   outs1, .-outs1

    
.globl outs1_constant
         .type   outs1_constant, @function
outs1_constant:
      

  mov $1,%dx
  mov $2,%al
  mov $3,%esi
  .byte 0x6e
  mov %esi,8192
  jnc .L479_c$
  movb $0x1,8448
.L479_c$: nop
  jnz .L479_z$
  movb $0x2,8449
.L479_z$: nop
  jns .L479_s$
  movb $0x3,8450
.L479_s$: nop
  jnp .L479_p$
  movb $0x4,8451
.L479_p$: nop
  jno .L479_o$
  movb $0x5,8452
.L479_o$: nop

    ret
         .size   outs1_constant, .-outs1_constant

    
.globl outs1_allregs
         .type   outs1_allregs, @function
outs1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x6e
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   outs1_allregs, .-outs1_allregs

    
.globl outs2
         .type   outs2, @function
outs2:
      

  mov 4096,%dx
  mov 4100,%ax
  mov 4104,%esi
  .byte 0x66,0x6f
  mov %esi,8192
  jnc .L480_c$
  movb $0x1,8448
.L480_c$: nop
  jnz .L480_z$
  movb $0x2,8449
.L480_z$: nop
  jns .L480_s$
  movb $0x3,8450
.L480_s$: nop
  jnp .L480_p$
  movb $0x4,8451
.L480_p$: nop
  jno .L480_o$
  movb $0x5,8452
.L480_o$: nop

    ret
         .size   outs2, .-outs2

    
.globl outs2_constant
         .type   outs2_constant, @function
outs2_constant:
      

  mov $1,%dx
  mov $2,%ax
  mov $3,%esi
  .byte 0x66,0x6f
  mov %esi,8192
  jnc .L481_c$
  movb $0x1,8448
.L481_c$: nop
  jnz .L481_z$
  movb $0x2,8449
.L481_z$: nop
  jns .L481_s$
  movb $0x3,8450
.L481_s$: nop
  jnp .L481_p$
  movb $0x4,8451
.L481_p$: nop
  jno .L481_o$
  movb $0x5,8452
.L481_o$: nop

    ret
         .size   outs2_constant, .-outs2_constant

    
.globl outs2_allregs
         .type   outs2_allregs, @function
outs2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0x6f
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   outs2_allregs, .-outs2_allregs

    
.globl outs3
         .type   outs3, @function
outs3:
      

  mov 4096,%dx
  mov 4100,%eax
  mov 4104,%esi
  .byte 0x6f
  mov %esi,8192
  jnc .L482_c$
  movb $0x1,8448
.L482_c$: nop
  jnz .L482_z$
  movb $0x2,8449
.L482_z$: nop
  jns .L482_s$
  movb $0x3,8450
.L482_s$: nop
  jnp .L482_p$
  movb $0x4,8451
.L482_p$: nop
  jno .L482_o$
  movb $0x5,8452
.L482_o$: nop

    ret
         .size   outs3, .-outs3

    
.globl outs3_constant
         .type   outs3_constant, @function
outs3_constant:
      

  mov $1,%dx
  mov $2,%eax
  mov $3,%esi
  .byte 0x6f
  mov %esi,8192
  jnc .L483_c$
  movb $0x1,8448
.L483_c$: nop
  jnz .L483_z$
  movb $0x2,8449
.L483_z$: nop
  jns .L483_s$
  movb $0x3,8450
.L483_s$: nop
  jnp .L483_p$
  movb $0x4,8451
.L483_p$: nop
  jno .L483_o$
  movb $0x5,8452
.L483_o$: nop

    ret
         .size   outs3_constant, .-outs3_constant

    
.globl outs3_allregs
         .type   outs3_allregs, @function
outs3_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x6f
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   outs3_allregs, .-outs3_allregs

    
.globl pop1
         .type   pop1, @function
pop1:
      


  popw (%eax)


    ret
         .size   pop1, .-pop1

    
.globl pop1_constant
         .type   pop1_constant, @function
pop1_constant:
      


  popw (%eax)


    ret
         .size   pop1_constant, .-pop1_constant

    
.globl pop1_allregs
         .type   pop1_allregs, @function
pop1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  popw (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   pop1_allregs, .-pop1_allregs

    
.globl pop2
         .type   pop2, @function
pop2:
      


  pop (%eax)


    ret
         .size   pop2, .-pop2

    
.globl pop2_constant
         .type   pop2_constant, @function
pop2_constant:
      


  pop (%eax)


    ret
         .size   pop2_constant, .-pop2_constant

    
.globl pop2_allregs
         .type   pop2_allregs, @function
pop2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  pop (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   pop2_allregs, .-pop2_allregs

    
.globl pop3
         .type   pop3, @function
pop3:
      


  pop %ax


    ret
         .size   pop3, .-pop3

    
.globl pop3_constant
         .type   pop3_constant, @function
pop3_constant:
      


  pop %ax


    ret
         .size   pop3_constant, .-pop3_constant

    
.globl pop3_allregs
         .type   pop3_allregs, @function
pop3_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  pop %ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   pop3_allregs, .-pop3_allregs

    
.globl pop4
         .type   pop4, @function
pop4:
      


  pop %eax


    ret
         .size   pop4, .-pop4

    
.globl pop4_constant
         .type   pop4_constant, @function
pop4_constant:
      


  pop %eax


    ret
         .size   pop4_constant, .-pop4_constant

    
.globl pop4_allregs
         .type   pop4_allregs, @function
pop4_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  pop %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   pop4_allregs, .-pop4_allregs

    
.globl pop_seg1
         .type   pop_seg1, @function
pop_seg1:
      


  pop %ds


    ret
         .size   pop_seg1, .-pop_seg1

    
.globl pop_seg1_constant
         .type   pop_seg1_constant, @function
pop_seg1_constant:
      


  pop %ds


    ret
         .size   pop_seg1_constant, .-pop_seg1_constant

    
.globl pop_seg1_allregs
         .type   pop_seg1_allregs, @function
pop_seg1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  pop %ds
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   pop_seg1_allregs, .-pop_seg1_allregs

    
.globl pop_seg2
         .type   pop_seg2, @function
pop_seg2:
      


  pop %es


    ret
         .size   pop_seg2, .-pop_seg2

    
.globl pop_seg2_constant
         .type   pop_seg2_constant, @function
pop_seg2_constant:
      


  pop %es


    ret
         .size   pop_seg2_constant, .-pop_seg2_constant

    
.globl pop_seg2_allregs
         .type   pop_seg2_allregs, @function
pop_seg2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  pop %es
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   pop_seg2_allregs, .-pop_seg2_allregs

    
.globl pop_seg3
         .type   pop_seg3, @function
pop_seg3:
      


  pop %fs


    ret
         .size   pop_seg3, .-pop_seg3

    
.globl pop_seg3_constant
         .type   pop_seg3_constant, @function
pop_seg3_constant:
      


  pop %fs


    ret
         .size   pop_seg3_constant, .-pop_seg3_constant

    
.globl pop_seg3_allregs
         .type   pop_seg3_allregs, @function
pop_seg3_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  pop %fs
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   pop_seg3_allregs, .-pop_seg3_allregs

    
.globl pop_seg4
         .type   pop_seg4, @function
pop_seg4:
      


  pop %gs


    ret
         .size   pop_seg4, .-pop_seg4

    
.globl pop_seg4_constant
         .type   pop_seg4_constant, @function
pop_seg4_constant:
      


  pop %gs


    ret
         .size   pop_seg4_constant, .-pop_seg4_constant

    
.globl pop_seg4_allregs
         .type   pop_seg4_allregs, @function
pop_seg4_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  pop %gs
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   pop_seg4_allregs, .-pop_seg4_allregs

    
.globl pop_seg5
         .type   pop_seg5, @function
pop_seg5:
      


  pop %ss


    ret
         .size   pop_seg5, .-pop_seg5

    
.globl pop_seg5_constant
         .type   pop_seg5_constant, @function
pop_seg5_constant:
      


  pop %ss


    ret
         .size   pop_seg5_constant, .-pop_seg5_constant

    
.globl pop_seg5_allregs
         .type   pop_seg5_allregs, @function
pop_seg5_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  pop %ss
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   pop_seg5_allregs, .-pop_seg5_allregs

    
.globl popa1
         .type   popa1, @function
popa1:
      


  .byte 0x61


    ret
         .size   popa1, .-popa1

    
.globl popa1_constant
         .type   popa1_constant, @function
popa1_constant:
      


  .byte 0x61


    ret
         .size   popa1_constant, .-popa1_constant

    
.globl popa1_allregs
         .type   popa1_allregs, @function
popa1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x61
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   popa1_allregs, .-popa1_allregs

    
.globl popa2
         .type   popa2, @function
popa2:
      


  .byte 0x66,0x61


    ret
         .size   popa2, .-popa2

    
.globl popa2_constant
         .type   popa2_constant, @function
popa2_constant:
      


  .byte 0x66,0x61


    ret
         .size   popa2_constant, .-popa2_constant

    
.globl popa2_allregs
         .type   popa2_allregs, @function
popa2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0x61
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   popa2_allregs, .-popa2_allregs

    
.globl popf1
         .type   popf1, @function
popf1:
      


  .byte 0x9d


    ret
         .size   popf1, .-popf1

    
.globl popf1_constant
         .type   popf1_constant, @function
popf1_constant:
      


  .byte 0x9d


    ret
         .size   popf1_constant, .-popf1_constant

    
.globl popf1_allregs
         .type   popf1_allregs, @function
popf1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x9d
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   popf1_allregs, .-popf1_allregs

    
.globl popf2
         .type   popf2, @function
popf2:
      


  .byte 0x66,0x9d


    ret
         .size   popf2, .-popf2

    
.globl popf2_constant
         .type   popf2_constant, @function
popf2_constant:
      


  .byte 0x66,0x9d


    ret
         .size   popf2_constant, .-popf2_constant

    
.globl popf2_allregs
         .type   popf2_allregs, @function
popf2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0x9d
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   popf2_allregs, .-popf2_allregs

    
.globl push1
         .type   push1, @function
push1:
      


  pushw (%eax)


    ret
         .size   push1, .-push1

    
.globl push1_constant
         .type   push1_constant, @function
push1_constant:
      


  pushw (%eax)


    ret
         .size   push1_constant, .-push1_constant

    
.globl push1_allregs
         .type   push1_allregs, @function
push1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  pushw (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   push1_allregs, .-push1_allregs

    
.globl push2
         .type   push2, @function
push2:
      


  push (%eax)


    ret
         .size   push2, .-push2

    
.globl push2_constant
         .type   push2_constant, @function
push2_constant:
      


  push (%eax)


    ret
         .size   push2_constant, .-push2_constant

    
.globl push2_allregs
         .type   push2_allregs, @function
push2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  push (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   push2_allregs, .-push2_allregs

    
.globl push3
         .type   push3, @function
push3:
      


  push %ax


    ret
         .size   push3, .-push3

    
.globl push3_constant
         .type   push3_constant, @function
push3_constant:
      


  push %ax


    ret
         .size   push3_constant, .-push3_constant

    
.globl push3_allregs
         .type   push3_allregs, @function
push3_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  push %ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   push3_allregs, .-push3_allregs

    
.globl push4
         .type   push4, @function
push4:
      


  push %eax


    ret
         .size   push4, .-push4

    
.globl push4_constant
         .type   push4_constant, @function
push4_constant:
      


  push %eax


    ret
         .size   push4_constant, .-push4_constant

    
.globl push4_allregs
         .type   push4_allregs, @function
push4_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  push %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   push4_allregs, .-push4_allregs

    
.globl push5
         .type   push5, @function
push5:
      


  push $0x11


    ret
         .size   push5, .-push5

    
.globl push5_constant
         .type   push5_constant, @function
push5_constant:
      


  push $0x11


    ret
         .size   push5_constant, .-push5_constant

    
.globl push5_allregs
         .type   push5_allregs, @function
push5_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  push $0x11
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   push5_allregs, .-push5_allregs

    
.globl push6
         .type   push6, @function
push6:
      


  push $0x1122


    ret
         .size   push6, .-push6

    
.globl push6_constant
         .type   push6_constant, @function
push6_constant:
      


  push $0x1122


    ret
         .size   push6_constant, .-push6_constant

    
.globl push6_allregs
         .type   push6_allregs, @function
push6_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  push $0x1122
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   push6_allregs, .-push6_allregs

    
.globl push7
         .type   push7, @function
push7:
      


  push $0x11223344


    ret
         .size   push7, .-push7

    
.globl push7_constant
         .type   push7_constant, @function
push7_constant:
      


  push $0x11223344


    ret
         .size   push7_constant, .-push7_constant

    
.globl push7_allregs
         .type   push7_allregs, @function
push7_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  push $0x11223344
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   push7_allregs, .-push7_allregs

    
.globl push_seg1
         .type   push_seg1, @function
push_seg1:
      


  push %ds


    ret
         .size   push_seg1, .-push_seg1

    
.globl push_seg1_constant
         .type   push_seg1_constant, @function
push_seg1_constant:
      


  push %ds


    ret
         .size   push_seg1_constant, .-push_seg1_constant

    
.globl push_seg1_allregs
         .type   push_seg1_allregs, @function
push_seg1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  push %ds
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   push_seg1_allregs, .-push_seg1_allregs

    
.globl push_seg2
         .type   push_seg2, @function
push_seg2:
      


  push %es


    ret
         .size   push_seg2, .-push_seg2

    
.globl push_seg2_constant
         .type   push_seg2_constant, @function
push_seg2_constant:
      


  push %es


    ret
         .size   push_seg2_constant, .-push_seg2_constant

    
.globl push_seg2_allregs
         .type   push_seg2_allregs, @function
push_seg2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  push %es
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   push_seg2_allregs, .-push_seg2_allregs

    
.globl push_seg3
         .type   push_seg3, @function
push_seg3:
      


  push %fs


    ret
         .size   push_seg3, .-push_seg3

    
.globl push_seg3_constant
         .type   push_seg3_constant, @function
push_seg3_constant:
      


  push %fs


    ret
         .size   push_seg3_constant, .-push_seg3_constant

    
.globl push_seg3_allregs
         .type   push_seg3_allregs, @function
push_seg3_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  push %fs
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   push_seg3_allregs, .-push_seg3_allregs

    
.globl push_seg4
         .type   push_seg4, @function
push_seg4:
      


  push %gs


    ret
         .size   push_seg4, .-push_seg4

    
.globl push_seg4_constant
         .type   push_seg4_constant, @function
push_seg4_constant:
      


  push %gs


    ret
         .size   push_seg4_constant, .-push_seg4_constant

    
.globl push_seg4_allregs
         .type   push_seg4_allregs, @function
push_seg4_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  push %gs
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   push_seg4_allregs, .-push_seg4_allregs

    
.globl push_seg5
         .type   push_seg5, @function
push_seg5:
      


  push %ss


    ret
         .size   push_seg5, .-push_seg5

    
.globl push_seg5_constant
         .type   push_seg5_constant, @function
push_seg5_constant:
      


  push %ss


    ret
         .size   push_seg5_constant, .-push_seg5_constant

    
.globl push_seg5_allregs
         .type   push_seg5_allregs, @function
push_seg5_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  push %ss
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   push_seg5_allregs, .-push_seg5_allregs

    
.globl pusha1
         .type   pusha1, @function
pusha1:
      


  .byte 0x60


    ret
         .size   pusha1, .-pusha1

    
.globl pusha1_constant
         .type   pusha1_constant, @function
pusha1_constant:
      


  .byte 0x60


    ret
         .size   pusha1_constant, .-pusha1_constant

    
.globl pusha1_allregs
         .type   pusha1_allregs, @function
pusha1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x60
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   pusha1_allregs, .-pusha1_allregs

    
.globl pusha2
         .type   pusha2, @function
pusha2:
      


  .byte 0x66,0x60


    ret
         .size   pusha2, .-pusha2

    
.globl pusha2_constant
         .type   pusha2_constant, @function
pusha2_constant:
      


  .byte 0x66,0x60


    ret
         .size   pusha2_constant, .-pusha2_constant

    
.globl pusha2_allregs
         .type   pusha2_allregs, @function
pusha2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0x60
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   pusha2_allregs, .-pusha2_allregs

    
.globl pushf1
         .type   pushf1, @function
pushf1:
      


  .byte 0x9c


    ret
         .size   pushf1, .-pushf1

    
.globl pushf1_constant
         .type   pushf1_constant, @function
pushf1_constant:
      


  .byte 0x9c


    ret
         .size   pushf1_constant, .-pushf1_constant

    
.globl pushf1_allregs
         .type   pushf1_allregs, @function
pushf1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x9c
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   pushf1_allregs, .-pushf1_allregs

    
.globl pushf2
         .type   pushf2, @function
pushf2:
      


  .byte 0x66,0x9c


    ret
         .size   pushf2, .-pushf2

    
.globl pushf2_constant
         .type   pushf2_constant, @function
pushf2_constant:
      


  .byte 0x66,0x9c


    ret
         .size   pushf2_constant, .-pushf2_constant

    
.globl pushf2_allregs
         .type   pushf2_allregs, @function
pushf2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0x9c
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   pushf2_allregs, .-pushf2_allregs

    
.globl rotate_once_rol_b
         .type   rotate_once_rol_b, @function
rotate_once_rol_b:
      

  mov 4096,%eax
  .byte 0xd0,0x00
  jnc .L484_c$
  movb $0x1,8448
.L484_c$: nop
  jnz .L484_z$
  movb $0x2,8449
.L484_z$: nop
  jns .L484_s$
  movb $0x3,8450
.L484_s$: nop
  jnp .L484_p$
  movb $0x4,8451
.L484_p$: nop
  jno .L484_o$
  movb $0x5,8452
.L484_o$: nop

    ret
         .size   rotate_once_rol_b, .-rotate_once_rol_b

    
.globl rotate_once_rol_b_constant
         .type   rotate_once_rol_b_constant, @function
rotate_once_rol_b_constant:
      

  mov $1,%eax
  .byte 0xd0,0x00
  jnc .L485_c$
  movb $0x1,8448
.L485_c$: nop
  jnz .L485_z$
  movb $0x2,8449
.L485_z$: nop
  jns .L485_s$
  movb $0x3,8450
.L485_s$: nop
  jnp .L485_p$
  movb $0x4,8451
.L485_p$: nop
  jno .L485_o$
  movb $0x5,8452
.L485_o$: nop

    ret
         .size   rotate_once_rol_b_constant, .-rotate_once_rol_b_constant

    
.globl rotate_once_rol_b_allregs
         .type   rotate_once_rol_b_allregs, @function
rotate_once_rol_b_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xd0,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_once_rol_b_allregs, .-rotate_once_rol_b_allregs

    
.globl rotate_once_rol_w
         .type   rotate_once_rol_w, @function
rotate_once_rol_w:
      

  mov 4096,%eax
  .byte 0x66,0xd1,0x00
  jnc .L486_c$
  movb $0x1,8448
.L486_c$: nop
  jnz .L486_z$
  movb $0x2,8449
.L486_z$: nop
  jns .L486_s$
  movb $0x3,8450
.L486_s$: nop
  jnp .L486_p$
  movb $0x4,8451
.L486_p$: nop
  jno .L486_o$
  movb $0x5,8452
.L486_o$: nop

    ret
         .size   rotate_once_rol_w, .-rotate_once_rol_w

    
.globl rotate_once_rol_w_constant
         .type   rotate_once_rol_w_constant, @function
rotate_once_rol_w_constant:
      

  mov $1,%eax
  .byte 0x66,0xd1,0x00
  jnc .L487_c$
  movb $0x1,8448
.L487_c$: nop
  jnz .L487_z$
  movb $0x2,8449
.L487_z$: nop
  jns .L487_s$
  movb $0x3,8450
.L487_s$: nop
  jnp .L487_p$
  movb $0x4,8451
.L487_p$: nop
  jno .L487_o$
  movb $0x5,8452
.L487_o$: nop

    ret
         .size   rotate_once_rol_w_constant, .-rotate_once_rol_w_constant

    
.globl rotate_once_rol_w_allregs
         .type   rotate_once_rol_w_allregs, @function
rotate_once_rol_w_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0xd1,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_once_rol_w_allregs, .-rotate_once_rol_w_allregs

    
.globl rotate_once_rol_l
         .type   rotate_once_rol_l, @function
rotate_once_rol_l:
      

  mov 4096,%eax
  .byte 0xd1,0x00
  jnc .L488_c$
  movb $0x1,8448
.L488_c$: nop
  jnz .L488_z$
  movb $0x2,8449
.L488_z$: nop
  jns .L488_s$
  movb $0x3,8450
.L488_s$: nop
  jnp .L488_p$
  movb $0x4,8451
.L488_p$: nop
  jno .L488_o$
  movb $0x5,8452
.L488_o$: nop

    ret
         .size   rotate_once_rol_l, .-rotate_once_rol_l

    
.globl rotate_once_rol_l_constant
         .type   rotate_once_rol_l_constant, @function
rotate_once_rol_l_constant:
      

  mov $1,%eax
  .byte 0xd1,0x00
  jnc .L489_c$
  movb $0x1,8448
.L489_c$: nop
  jnz .L489_z$
  movb $0x2,8449
.L489_z$: nop
  jns .L489_s$
  movb $0x3,8450
.L489_s$: nop
  jnp .L489_p$
  movb $0x4,8451
.L489_p$: nop
  jno .L489_o$
  movb $0x5,8452
.L489_o$: nop

    ret
         .size   rotate_once_rol_l_constant, .-rotate_once_rol_l_constant

    
.globl rotate_once_rol_l_allregs
         .type   rotate_once_rol_l_allregs, @function
rotate_once_rol_l_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xd1,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_once_rol_l_allregs, .-rotate_once_rol_l_allregs

    
.globl rotate_once_ror_b
         .type   rotate_once_ror_b, @function
rotate_once_ror_b:
      

  mov 4096,%eax
  .byte 0xd0,0x08
  jnc .L490_c$
  movb $0x1,8448
.L490_c$: nop
  jnz .L490_z$
  movb $0x2,8449
.L490_z$: nop
  jns .L490_s$
  movb $0x3,8450
.L490_s$: nop
  jnp .L490_p$
  movb $0x4,8451
.L490_p$: nop
  jno .L490_o$
  movb $0x5,8452
.L490_o$: nop

    ret
         .size   rotate_once_ror_b, .-rotate_once_ror_b

    
.globl rotate_once_ror_b_constant
         .type   rotate_once_ror_b_constant, @function
rotate_once_ror_b_constant:
      

  mov $1,%eax
  .byte 0xd0,0x08
  jnc .L491_c$
  movb $0x1,8448
.L491_c$: nop
  jnz .L491_z$
  movb $0x2,8449
.L491_z$: nop
  jns .L491_s$
  movb $0x3,8450
.L491_s$: nop
  jnp .L491_p$
  movb $0x4,8451
.L491_p$: nop
  jno .L491_o$
  movb $0x5,8452
.L491_o$: nop

    ret
         .size   rotate_once_ror_b_constant, .-rotate_once_ror_b_constant

    
.globl rotate_once_ror_b_allregs
         .type   rotate_once_ror_b_allregs, @function
rotate_once_ror_b_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xd0,0x08
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_once_ror_b_allregs, .-rotate_once_ror_b_allregs

    
.globl rotate_once_ror_w
         .type   rotate_once_ror_w, @function
rotate_once_ror_w:
      

  mov 4096,%eax
  .byte 0x66,0xd1,0x08
  jnc .L492_c$
  movb $0x1,8448
.L492_c$: nop
  jnz .L492_z$
  movb $0x2,8449
.L492_z$: nop
  jns .L492_s$
  movb $0x3,8450
.L492_s$: nop
  jnp .L492_p$
  movb $0x4,8451
.L492_p$: nop
  jno .L492_o$
  movb $0x5,8452
.L492_o$: nop

    ret
         .size   rotate_once_ror_w, .-rotate_once_ror_w

    
.globl rotate_once_ror_w_constant
         .type   rotate_once_ror_w_constant, @function
rotate_once_ror_w_constant:
      

  mov $1,%eax
  .byte 0x66,0xd1,0x08
  jnc .L493_c$
  movb $0x1,8448
.L493_c$: nop
  jnz .L493_z$
  movb $0x2,8449
.L493_z$: nop
  jns .L493_s$
  movb $0x3,8450
.L493_s$: nop
  jnp .L493_p$
  movb $0x4,8451
.L493_p$: nop
  jno .L493_o$
  movb $0x5,8452
.L493_o$: nop

    ret
         .size   rotate_once_ror_w_constant, .-rotate_once_ror_w_constant

    
.globl rotate_once_ror_w_allregs
         .type   rotate_once_ror_w_allregs, @function
rotate_once_ror_w_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0xd1,0x08
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_once_ror_w_allregs, .-rotate_once_ror_w_allregs

    
.globl rotate_once_ror_l
         .type   rotate_once_ror_l, @function
rotate_once_ror_l:
      

  mov 4096,%eax
  .byte 0xd1,0x08
  jnc .L494_c$
  movb $0x1,8448
.L494_c$: nop
  jnz .L494_z$
  movb $0x2,8449
.L494_z$: nop
  jns .L494_s$
  movb $0x3,8450
.L494_s$: nop
  jnp .L494_p$
  movb $0x4,8451
.L494_p$: nop
  jno .L494_o$
  movb $0x5,8452
.L494_o$: nop

    ret
         .size   rotate_once_ror_l, .-rotate_once_ror_l

    
.globl rotate_once_ror_l_constant
         .type   rotate_once_ror_l_constant, @function
rotate_once_ror_l_constant:
      

  mov $1,%eax
  .byte 0xd1,0x08
  jnc .L495_c$
  movb $0x1,8448
.L495_c$: nop
  jnz .L495_z$
  movb $0x2,8449
.L495_z$: nop
  jns .L495_s$
  movb $0x3,8450
.L495_s$: nop
  jnp .L495_p$
  movb $0x4,8451
.L495_p$: nop
  jno .L495_o$
  movb $0x5,8452
.L495_o$: nop

    ret
         .size   rotate_once_ror_l_constant, .-rotate_once_ror_l_constant

    
.globl rotate_once_ror_l_allregs
         .type   rotate_once_ror_l_allregs, @function
rotate_once_ror_l_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xd1,0x08
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_once_ror_l_allregs, .-rotate_once_ror_l_allregs

    
.globl rotate_once_rcl_b
         .type   rotate_once_rcl_b, @function
rotate_once_rcl_b:
      

  mov 4096,%eax
  .byte 0xd0,0x10
  jnc .L496_c$
  movb $0x1,8448
.L496_c$: nop
  jnz .L496_z$
  movb $0x2,8449
.L496_z$: nop
  jns .L496_s$
  movb $0x3,8450
.L496_s$: nop
  jnp .L496_p$
  movb $0x4,8451
.L496_p$: nop
  jno .L496_o$
  movb $0x5,8452
.L496_o$: nop

    ret
         .size   rotate_once_rcl_b, .-rotate_once_rcl_b

    
.globl rotate_once_rcl_b_constant
         .type   rotate_once_rcl_b_constant, @function
rotate_once_rcl_b_constant:
      

  mov $1,%eax
  .byte 0xd0,0x10
  jnc .L497_c$
  movb $0x1,8448
.L497_c$: nop
  jnz .L497_z$
  movb $0x2,8449
.L497_z$: nop
  jns .L497_s$
  movb $0x3,8450
.L497_s$: nop
  jnp .L497_p$
  movb $0x4,8451
.L497_p$: nop
  jno .L497_o$
  movb $0x5,8452
.L497_o$: nop

    ret
         .size   rotate_once_rcl_b_constant, .-rotate_once_rcl_b_constant

    
.globl rotate_once_rcl_b_allregs
         .type   rotate_once_rcl_b_allregs, @function
rotate_once_rcl_b_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xd0,0x10
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_once_rcl_b_allregs, .-rotate_once_rcl_b_allregs

    
.globl rotate_once_rcl_w
         .type   rotate_once_rcl_w, @function
rotate_once_rcl_w:
      

  mov 4096,%eax
  .byte 0x66,0xd1,0x10
  jnc .L498_c$
  movb $0x1,8448
.L498_c$: nop
  jnz .L498_z$
  movb $0x2,8449
.L498_z$: nop
  jns .L498_s$
  movb $0x3,8450
.L498_s$: nop
  jnp .L498_p$
  movb $0x4,8451
.L498_p$: nop
  jno .L498_o$
  movb $0x5,8452
.L498_o$: nop

    ret
         .size   rotate_once_rcl_w, .-rotate_once_rcl_w

    
.globl rotate_once_rcl_w_constant
         .type   rotate_once_rcl_w_constant, @function
rotate_once_rcl_w_constant:
      

  mov $1,%eax
  .byte 0x66,0xd1,0x10
  jnc .L499_c$
  movb $0x1,8448
.L499_c$: nop
  jnz .L499_z$
  movb $0x2,8449
.L499_z$: nop
  jns .L499_s$
  movb $0x3,8450
.L499_s$: nop
  jnp .L499_p$
  movb $0x4,8451
.L499_p$: nop
  jno .L499_o$
  movb $0x5,8452
.L499_o$: nop

    ret
         .size   rotate_once_rcl_w_constant, .-rotate_once_rcl_w_constant

    
.globl rotate_once_rcl_w_allregs
         .type   rotate_once_rcl_w_allregs, @function
rotate_once_rcl_w_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0xd1,0x10
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_once_rcl_w_allregs, .-rotate_once_rcl_w_allregs

    
.globl rotate_once_rcl_l
         .type   rotate_once_rcl_l, @function
rotate_once_rcl_l:
      

  mov 4096,%eax
  .byte 0xd1,0x10
  jnc .L500_c$
  movb $0x1,8448
.L500_c$: nop
  jnz .L500_z$
  movb $0x2,8449
.L500_z$: nop
  jns .L500_s$
  movb $0x3,8450
.L500_s$: nop
  jnp .L500_p$
  movb $0x4,8451
.L500_p$: nop
  jno .L500_o$
  movb $0x5,8452
.L500_o$: nop

    ret
         .size   rotate_once_rcl_l, .-rotate_once_rcl_l

    
.globl rotate_once_rcl_l_constant
         .type   rotate_once_rcl_l_constant, @function
rotate_once_rcl_l_constant:
      

  mov $1,%eax
  .byte 0xd1,0x10
  jnc .L501_c$
  movb $0x1,8448
.L501_c$: nop
  jnz .L501_z$
  movb $0x2,8449
.L501_z$: nop
  jns .L501_s$
  movb $0x3,8450
.L501_s$: nop
  jnp .L501_p$
  movb $0x4,8451
.L501_p$: nop
  jno .L501_o$
  movb $0x5,8452
.L501_o$: nop

    ret
         .size   rotate_once_rcl_l_constant, .-rotate_once_rcl_l_constant

    
.globl rotate_once_rcl_l_allregs
         .type   rotate_once_rcl_l_allregs, @function
rotate_once_rcl_l_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xd1,0x10
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_once_rcl_l_allregs, .-rotate_once_rcl_l_allregs

    
.globl rotate_once_rcr_b
         .type   rotate_once_rcr_b, @function
rotate_once_rcr_b:
      

  mov 4096,%eax
  .byte 0xd0,0x18
  jnc .L502_c$
  movb $0x1,8448
.L502_c$: nop
  jnz .L502_z$
  movb $0x2,8449
.L502_z$: nop
  jns .L502_s$
  movb $0x3,8450
.L502_s$: nop
  jnp .L502_p$
  movb $0x4,8451
.L502_p$: nop
  jno .L502_o$
  movb $0x5,8452
.L502_o$: nop

    ret
         .size   rotate_once_rcr_b, .-rotate_once_rcr_b

    
.globl rotate_once_rcr_b_constant
         .type   rotate_once_rcr_b_constant, @function
rotate_once_rcr_b_constant:
      

  mov $1,%eax
  .byte 0xd0,0x18
  jnc .L503_c$
  movb $0x1,8448
.L503_c$: nop
  jnz .L503_z$
  movb $0x2,8449
.L503_z$: nop
  jns .L503_s$
  movb $0x3,8450
.L503_s$: nop
  jnp .L503_p$
  movb $0x4,8451
.L503_p$: nop
  jno .L503_o$
  movb $0x5,8452
.L503_o$: nop

    ret
         .size   rotate_once_rcr_b_constant, .-rotate_once_rcr_b_constant

    
.globl rotate_once_rcr_b_allregs
         .type   rotate_once_rcr_b_allregs, @function
rotate_once_rcr_b_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xd0,0x18
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_once_rcr_b_allregs, .-rotate_once_rcr_b_allregs

    
.globl rotate_once_rcr_w
         .type   rotate_once_rcr_w, @function
rotate_once_rcr_w:
      

  mov 4096,%eax
  .byte 0x66,0xd1,0x18
  jnc .L504_c$
  movb $0x1,8448
.L504_c$: nop
  jnz .L504_z$
  movb $0x2,8449
.L504_z$: nop
  jns .L504_s$
  movb $0x3,8450
.L504_s$: nop
  jnp .L504_p$
  movb $0x4,8451
.L504_p$: nop
  jno .L504_o$
  movb $0x5,8452
.L504_o$: nop

    ret
         .size   rotate_once_rcr_w, .-rotate_once_rcr_w

    
.globl rotate_once_rcr_w_constant
         .type   rotate_once_rcr_w_constant, @function
rotate_once_rcr_w_constant:
      

  mov $1,%eax
  .byte 0x66,0xd1,0x18
  jnc .L505_c$
  movb $0x1,8448
.L505_c$: nop
  jnz .L505_z$
  movb $0x2,8449
.L505_z$: nop
  jns .L505_s$
  movb $0x3,8450
.L505_s$: nop
  jnp .L505_p$
  movb $0x4,8451
.L505_p$: nop
  jno .L505_o$
  movb $0x5,8452
.L505_o$: nop

    ret
         .size   rotate_once_rcr_w_constant, .-rotate_once_rcr_w_constant

    
.globl rotate_once_rcr_w_allregs
         .type   rotate_once_rcr_w_allregs, @function
rotate_once_rcr_w_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0xd1,0x18
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_once_rcr_w_allregs, .-rotate_once_rcr_w_allregs

    
.globl rotate_once_rcr_l
         .type   rotate_once_rcr_l, @function
rotate_once_rcr_l:
      

  mov 4096,%eax
  .byte 0xd1,0x18
  jnc .L506_c$
  movb $0x1,8448
.L506_c$: nop
  jnz .L506_z$
  movb $0x2,8449
.L506_z$: nop
  jns .L506_s$
  movb $0x3,8450
.L506_s$: nop
  jnp .L506_p$
  movb $0x4,8451
.L506_p$: nop
  jno .L506_o$
  movb $0x5,8452
.L506_o$: nop

    ret
         .size   rotate_once_rcr_l, .-rotate_once_rcr_l

    
.globl rotate_once_rcr_l_constant
         .type   rotate_once_rcr_l_constant, @function
rotate_once_rcr_l_constant:
      

  mov $1,%eax
  .byte 0xd1,0x18
  jnc .L507_c$
  movb $0x1,8448
.L507_c$: nop
  jnz .L507_z$
  movb $0x2,8449
.L507_z$: nop
  jns .L507_s$
  movb $0x3,8450
.L507_s$: nop
  jnp .L507_p$
  movb $0x4,8451
.L507_p$: nop
  jno .L507_o$
  movb $0x5,8452
.L507_o$: nop

    ret
         .size   rotate_once_rcr_l_constant, .-rotate_once_rcr_l_constant

    
.globl rotate_once_rcr_l_allregs
         .type   rotate_once_rcr_l_allregs, @function
rotate_once_rcr_l_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xd1,0x18
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_once_rcr_l_allregs, .-rotate_once_rcr_l_allregs

    
.globl rotate_once_shl_b
         .type   rotate_once_shl_b, @function
rotate_once_shl_b:
      

  mov 4096,%eax
  .byte 0xd0,0x20
  jnc .L508_c$
  movb $0x1,8448
.L508_c$: nop
  jnz .L508_z$
  movb $0x2,8449
.L508_z$: nop
  jns .L508_s$
  movb $0x3,8450
.L508_s$: nop
  jnp .L508_p$
  movb $0x4,8451
.L508_p$: nop
  jno .L508_o$
  movb $0x5,8452
.L508_o$: nop

    ret
         .size   rotate_once_shl_b, .-rotate_once_shl_b

    
.globl rotate_once_shl_b_constant
         .type   rotate_once_shl_b_constant, @function
rotate_once_shl_b_constant:
      

  mov $1,%eax
  .byte 0xd0,0x20
  jnc .L509_c$
  movb $0x1,8448
.L509_c$: nop
  jnz .L509_z$
  movb $0x2,8449
.L509_z$: nop
  jns .L509_s$
  movb $0x3,8450
.L509_s$: nop
  jnp .L509_p$
  movb $0x4,8451
.L509_p$: nop
  jno .L509_o$
  movb $0x5,8452
.L509_o$: nop

    ret
         .size   rotate_once_shl_b_constant, .-rotate_once_shl_b_constant

    
.globl rotate_once_shl_b_allregs
         .type   rotate_once_shl_b_allregs, @function
rotate_once_shl_b_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xd0,0x20
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_once_shl_b_allregs, .-rotate_once_shl_b_allregs

    
.globl rotate_once_shl_w
         .type   rotate_once_shl_w, @function
rotate_once_shl_w:
      

  mov 4096,%eax
  .byte 0x66,0xd1,0x20
  jnc .L510_c$
  movb $0x1,8448
.L510_c$: nop
  jnz .L510_z$
  movb $0x2,8449
.L510_z$: nop
  jns .L510_s$
  movb $0x3,8450
.L510_s$: nop
  jnp .L510_p$
  movb $0x4,8451
.L510_p$: nop
  jno .L510_o$
  movb $0x5,8452
.L510_o$: nop

    ret
         .size   rotate_once_shl_w, .-rotate_once_shl_w

    
.globl rotate_once_shl_w_constant
         .type   rotate_once_shl_w_constant, @function
rotate_once_shl_w_constant:
      

  mov $1,%eax
  .byte 0x66,0xd1,0x20
  jnc .L511_c$
  movb $0x1,8448
.L511_c$: nop
  jnz .L511_z$
  movb $0x2,8449
.L511_z$: nop
  jns .L511_s$
  movb $0x3,8450
.L511_s$: nop
  jnp .L511_p$
  movb $0x4,8451
.L511_p$: nop
  jno .L511_o$
  movb $0x5,8452
.L511_o$: nop

    ret
         .size   rotate_once_shl_w_constant, .-rotate_once_shl_w_constant

    
.globl rotate_once_shl_w_allregs
         .type   rotate_once_shl_w_allregs, @function
rotate_once_shl_w_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0xd1,0x20
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_once_shl_w_allregs, .-rotate_once_shl_w_allregs

    
.globl rotate_once_shl_l
         .type   rotate_once_shl_l, @function
rotate_once_shl_l:
      

  mov 4096,%eax
  .byte 0xd1,0x20
  jnc .L512_c$
  movb $0x1,8448
.L512_c$: nop
  jnz .L512_z$
  movb $0x2,8449
.L512_z$: nop
  jns .L512_s$
  movb $0x3,8450
.L512_s$: nop
  jnp .L512_p$
  movb $0x4,8451
.L512_p$: nop
  jno .L512_o$
  movb $0x5,8452
.L512_o$: nop

    ret
         .size   rotate_once_shl_l, .-rotate_once_shl_l

    
.globl rotate_once_shl_l_constant
         .type   rotate_once_shl_l_constant, @function
rotate_once_shl_l_constant:
      

  mov $1,%eax
  .byte 0xd1,0x20
  jnc .L513_c$
  movb $0x1,8448
.L513_c$: nop
  jnz .L513_z$
  movb $0x2,8449
.L513_z$: nop
  jns .L513_s$
  movb $0x3,8450
.L513_s$: nop
  jnp .L513_p$
  movb $0x4,8451
.L513_p$: nop
  jno .L513_o$
  movb $0x5,8452
.L513_o$: nop

    ret
         .size   rotate_once_shl_l_constant, .-rotate_once_shl_l_constant

    
.globl rotate_once_shl_l_allregs
         .type   rotate_once_shl_l_allregs, @function
rotate_once_shl_l_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xd1,0x20
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_once_shl_l_allregs, .-rotate_once_shl_l_allregs

    
.globl rotate_once_shr_b
         .type   rotate_once_shr_b, @function
rotate_once_shr_b:
      

  mov 4096,%eax
  .byte 0xd0,0x28
  jnc .L514_c$
  movb $0x1,8448
.L514_c$: nop
  jnz .L514_z$
  movb $0x2,8449
.L514_z$: nop
  jns .L514_s$
  movb $0x3,8450
.L514_s$: nop
  jnp .L514_p$
  movb $0x4,8451
.L514_p$: nop
  jno .L514_o$
  movb $0x5,8452
.L514_o$: nop

    ret
         .size   rotate_once_shr_b, .-rotate_once_shr_b

    
.globl rotate_once_shr_b_constant
         .type   rotate_once_shr_b_constant, @function
rotate_once_shr_b_constant:
      

  mov $1,%eax
  .byte 0xd0,0x28
  jnc .L515_c$
  movb $0x1,8448
.L515_c$: nop
  jnz .L515_z$
  movb $0x2,8449
.L515_z$: nop
  jns .L515_s$
  movb $0x3,8450
.L515_s$: nop
  jnp .L515_p$
  movb $0x4,8451
.L515_p$: nop
  jno .L515_o$
  movb $0x5,8452
.L515_o$: nop

    ret
         .size   rotate_once_shr_b_constant, .-rotate_once_shr_b_constant

    
.globl rotate_once_shr_b_allregs
         .type   rotate_once_shr_b_allregs, @function
rotate_once_shr_b_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xd0,0x28
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_once_shr_b_allregs, .-rotate_once_shr_b_allregs

    
.globl rotate_once_shr_w
         .type   rotate_once_shr_w, @function
rotate_once_shr_w:
      

  mov 4096,%eax
  .byte 0x66,0xd1,0x28
  jnc .L516_c$
  movb $0x1,8448
.L516_c$: nop
  jnz .L516_z$
  movb $0x2,8449
.L516_z$: nop
  jns .L516_s$
  movb $0x3,8450
.L516_s$: nop
  jnp .L516_p$
  movb $0x4,8451
.L516_p$: nop
  jno .L516_o$
  movb $0x5,8452
.L516_o$: nop

    ret
         .size   rotate_once_shr_w, .-rotate_once_shr_w

    
.globl rotate_once_shr_w_constant
         .type   rotate_once_shr_w_constant, @function
rotate_once_shr_w_constant:
      

  mov $1,%eax
  .byte 0x66,0xd1,0x28
  jnc .L517_c$
  movb $0x1,8448
.L517_c$: nop
  jnz .L517_z$
  movb $0x2,8449
.L517_z$: nop
  jns .L517_s$
  movb $0x3,8450
.L517_s$: nop
  jnp .L517_p$
  movb $0x4,8451
.L517_p$: nop
  jno .L517_o$
  movb $0x5,8452
.L517_o$: nop

    ret
         .size   rotate_once_shr_w_constant, .-rotate_once_shr_w_constant

    
.globl rotate_once_shr_w_allregs
         .type   rotate_once_shr_w_allregs, @function
rotate_once_shr_w_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0xd1,0x28
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_once_shr_w_allregs, .-rotate_once_shr_w_allregs

    
.globl rotate_once_shr_l
         .type   rotate_once_shr_l, @function
rotate_once_shr_l:
      

  mov 4096,%eax
  .byte 0xd1,0x28
  jnc .L518_c$
  movb $0x1,8448
.L518_c$: nop
  jnz .L518_z$
  movb $0x2,8449
.L518_z$: nop
  jns .L518_s$
  movb $0x3,8450
.L518_s$: nop
  jnp .L518_p$
  movb $0x4,8451
.L518_p$: nop
  jno .L518_o$
  movb $0x5,8452
.L518_o$: nop

    ret
         .size   rotate_once_shr_l, .-rotate_once_shr_l

    
.globl rotate_once_shr_l_constant
         .type   rotate_once_shr_l_constant, @function
rotate_once_shr_l_constant:
      

  mov $1,%eax
  .byte 0xd1,0x28
  jnc .L519_c$
  movb $0x1,8448
.L519_c$: nop
  jnz .L519_z$
  movb $0x2,8449
.L519_z$: nop
  jns .L519_s$
  movb $0x3,8450
.L519_s$: nop
  jnp .L519_p$
  movb $0x4,8451
.L519_p$: nop
  jno .L519_o$
  movb $0x5,8452
.L519_o$: nop

    ret
         .size   rotate_once_shr_l_constant, .-rotate_once_shr_l_constant

    
.globl rotate_once_shr_l_allregs
         .type   rotate_once_shr_l_allregs, @function
rotate_once_shr_l_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xd1,0x28
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_once_shr_l_allregs, .-rotate_once_shr_l_allregs

    
.globl rotate_once_sar_b
         .type   rotate_once_sar_b, @function
rotate_once_sar_b:
      

  mov 4096,%eax
  .byte 0xd0,0x38
  jnc .L520_c$
  movb $0x1,8448
.L520_c$: nop
  jnz .L520_z$
  movb $0x2,8449
.L520_z$: nop
  jns .L520_s$
  movb $0x3,8450
.L520_s$: nop
  jnp .L520_p$
  movb $0x4,8451
.L520_p$: nop
  jno .L520_o$
  movb $0x5,8452
.L520_o$: nop

    ret
         .size   rotate_once_sar_b, .-rotate_once_sar_b

    
.globl rotate_once_sar_b_constant
         .type   rotate_once_sar_b_constant, @function
rotate_once_sar_b_constant:
      

  mov $1,%eax
  .byte 0xd0,0x38
  jnc .L521_c$
  movb $0x1,8448
.L521_c$: nop
  jnz .L521_z$
  movb $0x2,8449
.L521_z$: nop
  jns .L521_s$
  movb $0x3,8450
.L521_s$: nop
  jnp .L521_p$
  movb $0x4,8451
.L521_p$: nop
  jno .L521_o$
  movb $0x5,8452
.L521_o$: nop

    ret
         .size   rotate_once_sar_b_constant, .-rotate_once_sar_b_constant

    
.globl rotate_once_sar_b_allregs
         .type   rotate_once_sar_b_allregs, @function
rotate_once_sar_b_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xd0,0x38
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_once_sar_b_allregs, .-rotate_once_sar_b_allregs

    
.globl rotate_once_sar_w
         .type   rotate_once_sar_w, @function
rotate_once_sar_w:
      

  mov 4096,%eax
  .byte 0x66,0xd1,0x38
  jnc .L522_c$
  movb $0x1,8448
.L522_c$: nop
  jnz .L522_z$
  movb $0x2,8449
.L522_z$: nop
  jns .L522_s$
  movb $0x3,8450
.L522_s$: nop
  jnp .L522_p$
  movb $0x4,8451
.L522_p$: nop
  jno .L522_o$
  movb $0x5,8452
.L522_o$: nop

    ret
         .size   rotate_once_sar_w, .-rotate_once_sar_w

    
.globl rotate_once_sar_w_constant
         .type   rotate_once_sar_w_constant, @function
rotate_once_sar_w_constant:
      

  mov $1,%eax
  .byte 0x66,0xd1,0x38
  jnc .L523_c$
  movb $0x1,8448
.L523_c$: nop
  jnz .L523_z$
  movb $0x2,8449
.L523_z$: nop
  jns .L523_s$
  movb $0x3,8450
.L523_s$: nop
  jnp .L523_p$
  movb $0x4,8451
.L523_p$: nop
  jno .L523_o$
  movb $0x5,8452
.L523_o$: nop

    ret
         .size   rotate_once_sar_w_constant, .-rotate_once_sar_w_constant

    
.globl rotate_once_sar_w_allregs
         .type   rotate_once_sar_w_allregs, @function
rotate_once_sar_w_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0xd1,0x38
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_once_sar_w_allregs, .-rotate_once_sar_w_allregs

    
.globl rotate_once_sar_l
         .type   rotate_once_sar_l, @function
rotate_once_sar_l:
      

  mov 4096,%eax
  .byte 0xd1,0x38
  jnc .L524_c$
  movb $0x1,8448
.L524_c$: nop
  jnz .L524_z$
  movb $0x2,8449
.L524_z$: nop
  jns .L524_s$
  movb $0x3,8450
.L524_s$: nop
  jnp .L524_p$
  movb $0x4,8451
.L524_p$: nop
  jno .L524_o$
  movb $0x5,8452
.L524_o$: nop

    ret
         .size   rotate_once_sar_l, .-rotate_once_sar_l

    
.globl rotate_once_sar_l_constant
         .type   rotate_once_sar_l_constant, @function
rotate_once_sar_l_constant:
      

  mov $1,%eax
  .byte 0xd1,0x38
  jnc .L525_c$
  movb $0x1,8448
.L525_c$: nop
  jnz .L525_z$
  movb $0x2,8449
.L525_z$: nop
  jns .L525_s$
  movb $0x3,8450
.L525_s$: nop
  jnp .L525_p$
  movb $0x4,8451
.L525_p$: nop
  jno .L525_o$
  movb $0x5,8452
.L525_o$: nop

    ret
         .size   rotate_once_sar_l_constant, .-rotate_once_sar_l_constant

    
.globl rotate_once_sar_l_allregs
         .type   rotate_once_sar_l_allregs, @function
rotate_once_sar_l_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xd1,0x38
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_once_sar_l_allregs, .-rotate_once_sar_l_allregs

    
.globl rotate_cl_controlled_rol_b
         .type   rotate_cl_controlled_rol_b, @function
rotate_cl_controlled_rol_b:
      

  mov 4096,%eax
  mov 4100,%cl
  .byte 0xd2,0x00
  jnc .L526_c$
  movb $0x1,8448
.L526_c$: nop
  jnz .L526_z$
  movb $0x2,8449
.L526_z$: nop
  jns .L526_s$
  movb $0x3,8450
.L526_s$: nop
  jnp .L526_p$
  movb $0x4,8451
.L526_p$: nop
  jno .L526_o$
  movb $0x5,8452
.L526_o$: nop

    ret
         .size   rotate_cl_controlled_rol_b, .-rotate_cl_controlled_rol_b

    
.globl rotate_cl_controlled_rol_b_constant
         .type   rotate_cl_controlled_rol_b_constant, @function
rotate_cl_controlled_rol_b_constant:
      

  mov $1,%eax
  mov $2,%cl
  .byte 0xd2,0x00
  jnc .L527_c$
  movb $0x1,8448
.L527_c$: nop
  jnz .L527_z$
  movb $0x2,8449
.L527_z$: nop
  jns .L527_s$
  movb $0x3,8450
.L527_s$: nop
  jnp .L527_p$
  movb $0x4,8451
.L527_p$: nop
  jno .L527_o$
  movb $0x5,8452
.L527_o$: nop

    ret
         .size   rotate_cl_controlled_rol_b_constant, .-rotate_cl_controlled_rol_b_constant

    
.globl rotate_cl_controlled_rol_b_allregs
         .type   rotate_cl_controlled_rol_b_allregs, @function
rotate_cl_controlled_rol_b_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xd2,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_cl_controlled_rol_b_allregs, .-rotate_cl_controlled_rol_b_allregs

    
.globl rotate_cl_controlled_rol_w
         .type   rotate_cl_controlled_rol_w, @function
rotate_cl_controlled_rol_w:
      

  mov 4096,%eax
  mov 4100,%cl
  .byte 0x66,0xd3,0x00
  jnc .L528_c$
  movb $0x1,8448
.L528_c$: nop
  jnz .L528_z$
  movb $0x2,8449
.L528_z$: nop
  jns .L528_s$
  movb $0x3,8450
.L528_s$: nop
  jnp .L528_p$
  movb $0x4,8451
.L528_p$: nop
  jno .L528_o$
  movb $0x5,8452
.L528_o$: nop

    ret
         .size   rotate_cl_controlled_rol_w, .-rotate_cl_controlled_rol_w

    
.globl rotate_cl_controlled_rol_w_constant
         .type   rotate_cl_controlled_rol_w_constant, @function
rotate_cl_controlled_rol_w_constant:
      

  mov $1,%eax
  mov $2,%cl
  .byte 0x66,0xd3,0x00
  jnc .L529_c$
  movb $0x1,8448
.L529_c$: nop
  jnz .L529_z$
  movb $0x2,8449
.L529_z$: nop
  jns .L529_s$
  movb $0x3,8450
.L529_s$: nop
  jnp .L529_p$
  movb $0x4,8451
.L529_p$: nop
  jno .L529_o$
  movb $0x5,8452
.L529_o$: nop

    ret
         .size   rotate_cl_controlled_rol_w_constant, .-rotate_cl_controlled_rol_w_constant

    
.globl rotate_cl_controlled_rol_w_allregs
         .type   rotate_cl_controlled_rol_w_allregs, @function
rotate_cl_controlled_rol_w_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0xd3,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_cl_controlled_rol_w_allregs, .-rotate_cl_controlled_rol_w_allregs

    
.globl rotate_cl_controlled_rol_l
         .type   rotate_cl_controlled_rol_l, @function
rotate_cl_controlled_rol_l:
      

  mov 4096,%eax
  mov 4100,%cl
  .byte 0xd3,0x00
  jnc .L530_c$
  movb $0x1,8448
.L530_c$: nop
  jnz .L530_z$
  movb $0x2,8449
.L530_z$: nop
  jns .L530_s$
  movb $0x3,8450
.L530_s$: nop
  jnp .L530_p$
  movb $0x4,8451
.L530_p$: nop
  jno .L530_o$
  movb $0x5,8452
.L530_o$: nop

    ret
         .size   rotate_cl_controlled_rol_l, .-rotate_cl_controlled_rol_l

    
.globl rotate_cl_controlled_rol_l_constant
         .type   rotate_cl_controlled_rol_l_constant, @function
rotate_cl_controlled_rol_l_constant:
      

  mov $1,%eax
  mov $2,%cl
  .byte 0xd3,0x00
  jnc .L531_c$
  movb $0x1,8448
.L531_c$: nop
  jnz .L531_z$
  movb $0x2,8449
.L531_z$: nop
  jns .L531_s$
  movb $0x3,8450
.L531_s$: nop
  jnp .L531_p$
  movb $0x4,8451
.L531_p$: nop
  jno .L531_o$
  movb $0x5,8452
.L531_o$: nop

    ret
         .size   rotate_cl_controlled_rol_l_constant, .-rotate_cl_controlled_rol_l_constant

    
.globl rotate_cl_controlled_rol_l_allregs
         .type   rotate_cl_controlled_rol_l_allregs, @function
rotate_cl_controlled_rol_l_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xd3,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_cl_controlled_rol_l_allregs, .-rotate_cl_controlled_rol_l_allregs

    
.globl rotate_cl_controlled_ror_b
         .type   rotate_cl_controlled_ror_b, @function
rotate_cl_controlled_ror_b:
      

  mov 4096,%eax
  mov 4100,%cl
  .byte 0xd2,0x08
  jnc .L532_c$
  movb $0x1,8448
.L532_c$: nop
  jnz .L532_z$
  movb $0x2,8449
.L532_z$: nop
  jns .L532_s$
  movb $0x3,8450
.L532_s$: nop
  jnp .L532_p$
  movb $0x4,8451
.L532_p$: nop
  jno .L532_o$
  movb $0x5,8452
.L532_o$: nop

    ret
         .size   rotate_cl_controlled_ror_b, .-rotate_cl_controlled_ror_b

    
.globl rotate_cl_controlled_ror_b_constant
         .type   rotate_cl_controlled_ror_b_constant, @function
rotate_cl_controlled_ror_b_constant:
      

  mov $1,%eax
  mov $2,%cl
  .byte 0xd2,0x08
  jnc .L533_c$
  movb $0x1,8448
.L533_c$: nop
  jnz .L533_z$
  movb $0x2,8449
.L533_z$: nop
  jns .L533_s$
  movb $0x3,8450
.L533_s$: nop
  jnp .L533_p$
  movb $0x4,8451
.L533_p$: nop
  jno .L533_o$
  movb $0x5,8452
.L533_o$: nop

    ret
         .size   rotate_cl_controlled_ror_b_constant, .-rotate_cl_controlled_ror_b_constant

    
.globl rotate_cl_controlled_ror_b_allregs
         .type   rotate_cl_controlled_ror_b_allregs, @function
rotate_cl_controlled_ror_b_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xd2,0x08
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_cl_controlled_ror_b_allregs, .-rotate_cl_controlled_ror_b_allregs

    
.globl rotate_cl_controlled_ror_w
         .type   rotate_cl_controlled_ror_w, @function
rotate_cl_controlled_ror_w:
      

  mov 4096,%eax
  mov 4100,%cl
  .byte 0x66,0xd3,0x08
  jnc .L534_c$
  movb $0x1,8448
.L534_c$: nop
  jnz .L534_z$
  movb $0x2,8449
.L534_z$: nop
  jns .L534_s$
  movb $0x3,8450
.L534_s$: nop
  jnp .L534_p$
  movb $0x4,8451
.L534_p$: nop
  jno .L534_o$
  movb $0x5,8452
.L534_o$: nop

    ret
         .size   rotate_cl_controlled_ror_w, .-rotate_cl_controlled_ror_w

    
.globl rotate_cl_controlled_ror_w_constant
         .type   rotate_cl_controlled_ror_w_constant, @function
rotate_cl_controlled_ror_w_constant:
      

  mov $1,%eax
  mov $2,%cl
  .byte 0x66,0xd3,0x08
  jnc .L535_c$
  movb $0x1,8448
.L535_c$: nop
  jnz .L535_z$
  movb $0x2,8449
.L535_z$: nop
  jns .L535_s$
  movb $0x3,8450
.L535_s$: nop
  jnp .L535_p$
  movb $0x4,8451
.L535_p$: nop
  jno .L535_o$
  movb $0x5,8452
.L535_o$: nop

    ret
         .size   rotate_cl_controlled_ror_w_constant, .-rotate_cl_controlled_ror_w_constant

    
.globl rotate_cl_controlled_ror_w_allregs
         .type   rotate_cl_controlled_ror_w_allregs, @function
rotate_cl_controlled_ror_w_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0xd3,0x08
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_cl_controlled_ror_w_allregs, .-rotate_cl_controlled_ror_w_allregs

    
.globl rotate_cl_controlled_ror_l
         .type   rotate_cl_controlled_ror_l, @function
rotate_cl_controlled_ror_l:
      

  mov 4096,%eax
  mov 4100,%cl
  .byte 0xd3,0x08
  jnc .L536_c$
  movb $0x1,8448
.L536_c$: nop
  jnz .L536_z$
  movb $0x2,8449
.L536_z$: nop
  jns .L536_s$
  movb $0x3,8450
.L536_s$: nop
  jnp .L536_p$
  movb $0x4,8451
.L536_p$: nop
  jno .L536_o$
  movb $0x5,8452
.L536_o$: nop

    ret
         .size   rotate_cl_controlled_ror_l, .-rotate_cl_controlled_ror_l

    
.globl rotate_cl_controlled_ror_l_constant
         .type   rotate_cl_controlled_ror_l_constant, @function
rotate_cl_controlled_ror_l_constant:
      

  mov $1,%eax
  mov $2,%cl
  .byte 0xd3,0x08
  jnc .L537_c$
  movb $0x1,8448
.L537_c$: nop
  jnz .L537_z$
  movb $0x2,8449
.L537_z$: nop
  jns .L537_s$
  movb $0x3,8450
.L537_s$: nop
  jnp .L537_p$
  movb $0x4,8451
.L537_p$: nop
  jno .L537_o$
  movb $0x5,8452
.L537_o$: nop

    ret
         .size   rotate_cl_controlled_ror_l_constant, .-rotate_cl_controlled_ror_l_constant

    
.globl rotate_cl_controlled_ror_l_allregs
         .type   rotate_cl_controlled_ror_l_allregs, @function
rotate_cl_controlled_ror_l_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xd3,0x08
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_cl_controlled_ror_l_allregs, .-rotate_cl_controlled_ror_l_allregs

    
.globl rotate_cl_controlled_rcl_b
         .type   rotate_cl_controlled_rcl_b, @function
rotate_cl_controlled_rcl_b:
      

  mov 4096,%eax
  mov 4100,%cl
  .byte 0xd2,0x10
  jnc .L538_c$
  movb $0x1,8448
.L538_c$: nop
  jnz .L538_z$
  movb $0x2,8449
.L538_z$: nop
  jns .L538_s$
  movb $0x3,8450
.L538_s$: nop
  jnp .L538_p$
  movb $0x4,8451
.L538_p$: nop
  jno .L538_o$
  movb $0x5,8452
.L538_o$: nop

    ret
         .size   rotate_cl_controlled_rcl_b, .-rotate_cl_controlled_rcl_b

    
.globl rotate_cl_controlled_rcl_b_constant
         .type   rotate_cl_controlled_rcl_b_constant, @function
rotate_cl_controlled_rcl_b_constant:
      

  mov $1,%eax
  mov $2,%cl
  .byte 0xd2,0x10
  jnc .L539_c$
  movb $0x1,8448
.L539_c$: nop
  jnz .L539_z$
  movb $0x2,8449
.L539_z$: nop
  jns .L539_s$
  movb $0x3,8450
.L539_s$: nop
  jnp .L539_p$
  movb $0x4,8451
.L539_p$: nop
  jno .L539_o$
  movb $0x5,8452
.L539_o$: nop

    ret
         .size   rotate_cl_controlled_rcl_b_constant, .-rotate_cl_controlled_rcl_b_constant

    
.globl rotate_cl_controlled_rcl_b_allregs
         .type   rotate_cl_controlled_rcl_b_allregs, @function
rotate_cl_controlled_rcl_b_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xd2,0x10
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_cl_controlled_rcl_b_allregs, .-rotate_cl_controlled_rcl_b_allregs

    
.globl rotate_cl_controlled_rcl_w
         .type   rotate_cl_controlled_rcl_w, @function
rotate_cl_controlled_rcl_w:
      

  mov 4096,%eax
  mov 4100,%cl
  .byte 0x66,0xd3,0x10
  jnc .L540_c$
  movb $0x1,8448
.L540_c$: nop
  jnz .L540_z$
  movb $0x2,8449
.L540_z$: nop
  jns .L540_s$
  movb $0x3,8450
.L540_s$: nop
  jnp .L540_p$
  movb $0x4,8451
.L540_p$: nop
  jno .L540_o$
  movb $0x5,8452
.L540_o$: nop

    ret
         .size   rotate_cl_controlled_rcl_w, .-rotate_cl_controlled_rcl_w

    
.globl rotate_cl_controlled_rcl_w_constant
         .type   rotate_cl_controlled_rcl_w_constant, @function
rotate_cl_controlled_rcl_w_constant:
      

  mov $1,%eax
  mov $2,%cl
  .byte 0x66,0xd3,0x10
  jnc .L541_c$
  movb $0x1,8448
.L541_c$: nop
  jnz .L541_z$
  movb $0x2,8449
.L541_z$: nop
  jns .L541_s$
  movb $0x3,8450
.L541_s$: nop
  jnp .L541_p$
  movb $0x4,8451
.L541_p$: nop
  jno .L541_o$
  movb $0x5,8452
.L541_o$: nop

    ret
         .size   rotate_cl_controlled_rcl_w_constant, .-rotate_cl_controlled_rcl_w_constant

    
.globl rotate_cl_controlled_rcl_w_allregs
         .type   rotate_cl_controlled_rcl_w_allregs, @function
rotate_cl_controlled_rcl_w_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0xd3,0x10
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_cl_controlled_rcl_w_allregs, .-rotate_cl_controlled_rcl_w_allregs

    
.globl rotate_cl_controlled_rcl_l
         .type   rotate_cl_controlled_rcl_l, @function
rotate_cl_controlled_rcl_l:
      

  mov 4096,%eax
  mov 4100,%cl
  .byte 0xd3,0x10
  jnc .L542_c$
  movb $0x1,8448
.L542_c$: nop
  jnz .L542_z$
  movb $0x2,8449
.L542_z$: nop
  jns .L542_s$
  movb $0x3,8450
.L542_s$: nop
  jnp .L542_p$
  movb $0x4,8451
.L542_p$: nop
  jno .L542_o$
  movb $0x5,8452
.L542_o$: nop

    ret
         .size   rotate_cl_controlled_rcl_l, .-rotate_cl_controlled_rcl_l

    
.globl rotate_cl_controlled_rcl_l_constant
         .type   rotate_cl_controlled_rcl_l_constant, @function
rotate_cl_controlled_rcl_l_constant:
      

  mov $1,%eax
  mov $2,%cl
  .byte 0xd3,0x10
  jnc .L543_c$
  movb $0x1,8448
.L543_c$: nop
  jnz .L543_z$
  movb $0x2,8449
.L543_z$: nop
  jns .L543_s$
  movb $0x3,8450
.L543_s$: nop
  jnp .L543_p$
  movb $0x4,8451
.L543_p$: nop
  jno .L543_o$
  movb $0x5,8452
.L543_o$: nop

    ret
         .size   rotate_cl_controlled_rcl_l_constant, .-rotate_cl_controlled_rcl_l_constant

    
.globl rotate_cl_controlled_rcl_l_allregs
         .type   rotate_cl_controlled_rcl_l_allregs, @function
rotate_cl_controlled_rcl_l_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xd3,0x10
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_cl_controlled_rcl_l_allregs, .-rotate_cl_controlled_rcl_l_allregs

    
.globl rotate_cl_controlled_rcr_b
         .type   rotate_cl_controlled_rcr_b, @function
rotate_cl_controlled_rcr_b:
      

  mov 4096,%eax
  mov 4100,%cl
  .byte 0xd2,0x18
  jnc .L544_c$
  movb $0x1,8448
.L544_c$: nop
  jnz .L544_z$
  movb $0x2,8449
.L544_z$: nop
  jns .L544_s$
  movb $0x3,8450
.L544_s$: nop
  jnp .L544_p$
  movb $0x4,8451
.L544_p$: nop
  jno .L544_o$
  movb $0x5,8452
.L544_o$: nop

    ret
         .size   rotate_cl_controlled_rcr_b, .-rotate_cl_controlled_rcr_b

    
.globl rotate_cl_controlled_rcr_b_constant
         .type   rotate_cl_controlled_rcr_b_constant, @function
rotate_cl_controlled_rcr_b_constant:
      

  mov $1,%eax
  mov $2,%cl
  .byte 0xd2,0x18
  jnc .L545_c$
  movb $0x1,8448
.L545_c$: nop
  jnz .L545_z$
  movb $0x2,8449
.L545_z$: nop
  jns .L545_s$
  movb $0x3,8450
.L545_s$: nop
  jnp .L545_p$
  movb $0x4,8451
.L545_p$: nop
  jno .L545_o$
  movb $0x5,8452
.L545_o$: nop

    ret
         .size   rotate_cl_controlled_rcr_b_constant, .-rotate_cl_controlled_rcr_b_constant

    
.globl rotate_cl_controlled_rcr_b_allregs
         .type   rotate_cl_controlled_rcr_b_allregs, @function
rotate_cl_controlled_rcr_b_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xd2,0x18
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_cl_controlled_rcr_b_allregs, .-rotate_cl_controlled_rcr_b_allregs

    
.globl rotate_cl_controlled_rcr_w
         .type   rotate_cl_controlled_rcr_w, @function
rotate_cl_controlled_rcr_w:
      

  mov 4096,%eax
  mov 4100,%cl
  .byte 0x66,0xd3,0x18
  jnc .L546_c$
  movb $0x1,8448
.L546_c$: nop
  jnz .L546_z$
  movb $0x2,8449
.L546_z$: nop
  jns .L546_s$
  movb $0x3,8450
.L546_s$: nop
  jnp .L546_p$
  movb $0x4,8451
.L546_p$: nop
  jno .L546_o$
  movb $0x5,8452
.L546_o$: nop

    ret
         .size   rotate_cl_controlled_rcr_w, .-rotate_cl_controlled_rcr_w

    
.globl rotate_cl_controlled_rcr_w_constant
         .type   rotate_cl_controlled_rcr_w_constant, @function
rotate_cl_controlled_rcr_w_constant:
      

  mov $1,%eax
  mov $2,%cl
  .byte 0x66,0xd3,0x18
  jnc .L547_c$
  movb $0x1,8448
.L547_c$: nop
  jnz .L547_z$
  movb $0x2,8449
.L547_z$: nop
  jns .L547_s$
  movb $0x3,8450
.L547_s$: nop
  jnp .L547_p$
  movb $0x4,8451
.L547_p$: nop
  jno .L547_o$
  movb $0x5,8452
.L547_o$: nop

    ret
         .size   rotate_cl_controlled_rcr_w_constant, .-rotate_cl_controlled_rcr_w_constant

    
.globl rotate_cl_controlled_rcr_w_allregs
         .type   rotate_cl_controlled_rcr_w_allregs, @function
rotate_cl_controlled_rcr_w_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0xd3,0x18
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_cl_controlled_rcr_w_allregs, .-rotate_cl_controlled_rcr_w_allregs

    
.globl rotate_cl_controlled_rcr_l
         .type   rotate_cl_controlled_rcr_l, @function
rotate_cl_controlled_rcr_l:
      

  mov 4096,%eax
  mov 4100,%cl
  .byte 0xd3,0x18
  jnc .L548_c$
  movb $0x1,8448
.L548_c$: nop
  jnz .L548_z$
  movb $0x2,8449
.L548_z$: nop
  jns .L548_s$
  movb $0x3,8450
.L548_s$: nop
  jnp .L548_p$
  movb $0x4,8451
.L548_p$: nop
  jno .L548_o$
  movb $0x5,8452
.L548_o$: nop

    ret
         .size   rotate_cl_controlled_rcr_l, .-rotate_cl_controlled_rcr_l

    
.globl rotate_cl_controlled_rcr_l_constant
         .type   rotate_cl_controlled_rcr_l_constant, @function
rotate_cl_controlled_rcr_l_constant:
      

  mov $1,%eax
  mov $2,%cl
  .byte 0xd3,0x18
  jnc .L549_c$
  movb $0x1,8448
.L549_c$: nop
  jnz .L549_z$
  movb $0x2,8449
.L549_z$: nop
  jns .L549_s$
  movb $0x3,8450
.L549_s$: nop
  jnp .L549_p$
  movb $0x4,8451
.L549_p$: nop
  jno .L549_o$
  movb $0x5,8452
.L549_o$: nop

    ret
         .size   rotate_cl_controlled_rcr_l_constant, .-rotate_cl_controlled_rcr_l_constant

    
.globl rotate_cl_controlled_rcr_l_allregs
         .type   rotate_cl_controlled_rcr_l_allregs, @function
rotate_cl_controlled_rcr_l_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xd3,0x18
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_cl_controlled_rcr_l_allregs, .-rotate_cl_controlled_rcr_l_allregs

    
.globl rotate_cl_controlled_shl_b
         .type   rotate_cl_controlled_shl_b, @function
rotate_cl_controlled_shl_b:
      

  mov 4096,%eax
  mov 4100,%cl
  .byte 0xd2,0x20
  jnc .L550_c$
  movb $0x1,8448
.L550_c$: nop
  jnz .L550_z$
  movb $0x2,8449
.L550_z$: nop
  jns .L550_s$
  movb $0x3,8450
.L550_s$: nop
  jnp .L550_p$
  movb $0x4,8451
.L550_p$: nop
  jno .L550_o$
  movb $0x5,8452
.L550_o$: nop

    ret
         .size   rotate_cl_controlled_shl_b, .-rotate_cl_controlled_shl_b

    
.globl rotate_cl_controlled_shl_b_constant
         .type   rotate_cl_controlled_shl_b_constant, @function
rotate_cl_controlled_shl_b_constant:
      

  mov $1,%eax
  mov $2,%cl
  .byte 0xd2,0x20
  jnc .L551_c$
  movb $0x1,8448
.L551_c$: nop
  jnz .L551_z$
  movb $0x2,8449
.L551_z$: nop
  jns .L551_s$
  movb $0x3,8450
.L551_s$: nop
  jnp .L551_p$
  movb $0x4,8451
.L551_p$: nop
  jno .L551_o$
  movb $0x5,8452
.L551_o$: nop

    ret
         .size   rotate_cl_controlled_shl_b_constant, .-rotate_cl_controlled_shl_b_constant

    
.globl rotate_cl_controlled_shl_b_allregs
         .type   rotate_cl_controlled_shl_b_allregs, @function
rotate_cl_controlled_shl_b_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xd2,0x20
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_cl_controlled_shl_b_allregs, .-rotate_cl_controlled_shl_b_allregs

    
.globl rotate_cl_controlled_shl_w
         .type   rotate_cl_controlled_shl_w, @function
rotate_cl_controlled_shl_w:
      

  mov 4096,%eax
  mov 4100,%cl
  .byte 0x66,0xd3,0x20
  jnc .L552_c$
  movb $0x1,8448
.L552_c$: nop
  jnz .L552_z$
  movb $0x2,8449
.L552_z$: nop
  jns .L552_s$
  movb $0x3,8450
.L552_s$: nop
  jnp .L552_p$
  movb $0x4,8451
.L552_p$: nop
  jno .L552_o$
  movb $0x5,8452
.L552_o$: nop

    ret
         .size   rotate_cl_controlled_shl_w, .-rotate_cl_controlled_shl_w

    
.globl rotate_cl_controlled_shl_w_constant
         .type   rotate_cl_controlled_shl_w_constant, @function
rotate_cl_controlled_shl_w_constant:
      

  mov $1,%eax
  mov $2,%cl
  .byte 0x66,0xd3,0x20
  jnc .L553_c$
  movb $0x1,8448
.L553_c$: nop
  jnz .L553_z$
  movb $0x2,8449
.L553_z$: nop
  jns .L553_s$
  movb $0x3,8450
.L553_s$: nop
  jnp .L553_p$
  movb $0x4,8451
.L553_p$: nop
  jno .L553_o$
  movb $0x5,8452
.L553_o$: nop

    ret
         .size   rotate_cl_controlled_shl_w_constant, .-rotate_cl_controlled_shl_w_constant

    
.globl rotate_cl_controlled_shl_w_allregs
         .type   rotate_cl_controlled_shl_w_allregs, @function
rotate_cl_controlled_shl_w_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0xd3,0x20
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_cl_controlled_shl_w_allregs, .-rotate_cl_controlled_shl_w_allregs

    
.globl rotate_cl_controlled_shl_l
         .type   rotate_cl_controlled_shl_l, @function
rotate_cl_controlled_shl_l:
      

  mov 4096,%eax
  mov 4100,%cl
  .byte 0xd3,0x20
  jnc .L554_c$
  movb $0x1,8448
.L554_c$: nop
  jnz .L554_z$
  movb $0x2,8449
.L554_z$: nop
  jns .L554_s$
  movb $0x3,8450
.L554_s$: nop
  jnp .L554_p$
  movb $0x4,8451
.L554_p$: nop
  jno .L554_o$
  movb $0x5,8452
.L554_o$: nop

    ret
         .size   rotate_cl_controlled_shl_l, .-rotate_cl_controlled_shl_l

    
.globl rotate_cl_controlled_shl_l_constant
         .type   rotate_cl_controlled_shl_l_constant, @function
rotate_cl_controlled_shl_l_constant:
      

  mov $1,%eax
  mov $2,%cl
  .byte 0xd3,0x20
  jnc .L555_c$
  movb $0x1,8448
.L555_c$: nop
  jnz .L555_z$
  movb $0x2,8449
.L555_z$: nop
  jns .L555_s$
  movb $0x3,8450
.L555_s$: nop
  jnp .L555_p$
  movb $0x4,8451
.L555_p$: nop
  jno .L555_o$
  movb $0x5,8452
.L555_o$: nop

    ret
         .size   rotate_cl_controlled_shl_l_constant, .-rotate_cl_controlled_shl_l_constant

    
.globl rotate_cl_controlled_shl_l_allregs
         .type   rotate_cl_controlled_shl_l_allregs, @function
rotate_cl_controlled_shl_l_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xd3,0x20
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_cl_controlled_shl_l_allregs, .-rotate_cl_controlled_shl_l_allregs

    
.globl rotate_cl_controlled_shr_b
         .type   rotate_cl_controlled_shr_b, @function
rotate_cl_controlled_shr_b:
      

  mov 4096,%eax
  mov 4100,%cl
  .byte 0xd2,0x28
  jnc .L556_c$
  movb $0x1,8448
.L556_c$: nop
  jnz .L556_z$
  movb $0x2,8449
.L556_z$: nop
  jns .L556_s$
  movb $0x3,8450
.L556_s$: nop
  jnp .L556_p$
  movb $0x4,8451
.L556_p$: nop
  jno .L556_o$
  movb $0x5,8452
.L556_o$: nop

    ret
         .size   rotate_cl_controlled_shr_b, .-rotate_cl_controlled_shr_b

    
.globl rotate_cl_controlled_shr_b_constant
         .type   rotate_cl_controlled_shr_b_constant, @function
rotate_cl_controlled_shr_b_constant:
      

  mov $1,%eax
  mov $2,%cl
  .byte 0xd2,0x28
  jnc .L557_c$
  movb $0x1,8448
.L557_c$: nop
  jnz .L557_z$
  movb $0x2,8449
.L557_z$: nop
  jns .L557_s$
  movb $0x3,8450
.L557_s$: nop
  jnp .L557_p$
  movb $0x4,8451
.L557_p$: nop
  jno .L557_o$
  movb $0x5,8452
.L557_o$: nop

    ret
         .size   rotate_cl_controlled_shr_b_constant, .-rotate_cl_controlled_shr_b_constant

    
.globl rotate_cl_controlled_shr_b_allregs
         .type   rotate_cl_controlled_shr_b_allregs, @function
rotate_cl_controlled_shr_b_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xd2,0x28
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_cl_controlled_shr_b_allregs, .-rotate_cl_controlled_shr_b_allregs

    
.globl rotate_cl_controlled_shr_w
         .type   rotate_cl_controlled_shr_w, @function
rotate_cl_controlled_shr_w:
      

  mov 4096,%eax
  mov 4100,%cl
  .byte 0x66,0xd3,0x28
  jnc .L558_c$
  movb $0x1,8448
.L558_c$: nop
  jnz .L558_z$
  movb $0x2,8449
.L558_z$: nop
  jns .L558_s$
  movb $0x3,8450
.L558_s$: nop
  jnp .L558_p$
  movb $0x4,8451
.L558_p$: nop
  jno .L558_o$
  movb $0x5,8452
.L558_o$: nop

    ret
         .size   rotate_cl_controlled_shr_w, .-rotate_cl_controlled_shr_w

    
.globl rotate_cl_controlled_shr_w_constant
         .type   rotate_cl_controlled_shr_w_constant, @function
rotate_cl_controlled_shr_w_constant:
      

  mov $1,%eax
  mov $2,%cl
  .byte 0x66,0xd3,0x28
  jnc .L559_c$
  movb $0x1,8448
.L559_c$: nop
  jnz .L559_z$
  movb $0x2,8449
.L559_z$: nop
  jns .L559_s$
  movb $0x3,8450
.L559_s$: nop
  jnp .L559_p$
  movb $0x4,8451
.L559_p$: nop
  jno .L559_o$
  movb $0x5,8452
.L559_o$: nop

    ret
         .size   rotate_cl_controlled_shr_w_constant, .-rotate_cl_controlled_shr_w_constant

    
.globl rotate_cl_controlled_shr_w_allregs
         .type   rotate_cl_controlled_shr_w_allregs, @function
rotate_cl_controlled_shr_w_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0xd3,0x28
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_cl_controlled_shr_w_allregs, .-rotate_cl_controlled_shr_w_allregs

    
.globl rotate_cl_controlled_shr_l
         .type   rotate_cl_controlled_shr_l, @function
rotate_cl_controlled_shr_l:
      

  mov 4096,%eax
  mov 4100,%cl
  .byte 0xd3,0x28
  jnc .L560_c$
  movb $0x1,8448
.L560_c$: nop
  jnz .L560_z$
  movb $0x2,8449
.L560_z$: nop
  jns .L560_s$
  movb $0x3,8450
.L560_s$: nop
  jnp .L560_p$
  movb $0x4,8451
.L560_p$: nop
  jno .L560_o$
  movb $0x5,8452
.L560_o$: nop

    ret
         .size   rotate_cl_controlled_shr_l, .-rotate_cl_controlled_shr_l

    
.globl rotate_cl_controlled_shr_l_constant
         .type   rotate_cl_controlled_shr_l_constant, @function
rotate_cl_controlled_shr_l_constant:
      

  mov $1,%eax
  mov $2,%cl
  .byte 0xd3,0x28
  jnc .L561_c$
  movb $0x1,8448
.L561_c$: nop
  jnz .L561_z$
  movb $0x2,8449
.L561_z$: nop
  jns .L561_s$
  movb $0x3,8450
.L561_s$: nop
  jnp .L561_p$
  movb $0x4,8451
.L561_p$: nop
  jno .L561_o$
  movb $0x5,8452
.L561_o$: nop

    ret
         .size   rotate_cl_controlled_shr_l_constant, .-rotate_cl_controlled_shr_l_constant

    
.globl rotate_cl_controlled_shr_l_allregs
         .type   rotate_cl_controlled_shr_l_allregs, @function
rotate_cl_controlled_shr_l_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xd3,0x28
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_cl_controlled_shr_l_allregs, .-rotate_cl_controlled_shr_l_allregs

    
.globl rotate_cl_controlled_sar_b
         .type   rotate_cl_controlled_sar_b, @function
rotate_cl_controlled_sar_b:
      

  mov 4096,%eax
  mov 4100,%cl
  .byte 0xd2,0x38
  jnc .L562_c$
  movb $0x1,8448
.L562_c$: nop
  jnz .L562_z$
  movb $0x2,8449
.L562_z$: nop
  jns .L562_s$
  movb $0x3,8450
.L562_s$: nop
  jnp .L562_p$
  movb $0x4,8451
.L562_p$: nop
  jno .L562_o$
  movb $0x5,8452
.L562_o$: nop

    ret
         .size   rotate_cl_controlled_sar_b, .-rotate_cl_controlled_sar_b

    
.globl rotate_cl_controlled_sar_b_constant
         .type   rotate_cl_controlled_sar_b_constant, @function
rotate_cl_controlled_sar_b_constant:
      

  mov $1,%eax
  mov $2,%cl
  .byte 0xd2,0x38
  jnc .L563_c$
  movb $0x1,8448
.L563_c$: nop
  jnz .L563_z$
  movb $0x2,8449
.L563_z$: nop
  jns .L563_s$
  movb $0x3,8450
.L563_s$: nop
  jnp .L563_p$
  movb $0x4,8451
.L563_p$: nop
  jno .L563_o$
  movb $0x5,8452
.L563_o$: nop

    ret
         .size   rotate_cl_controlled_sar_b_constant, .-rotate_cl_controlled_sar_b_constant

    
.globl rotate_cl_controlled_sar_b_allregs
         .type   rotate_cl_controlled_sar_b_allregs, @function
rotate_cl_controlled_sar_b_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xd2,0x38
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_cl_controlled_sar_b_allregs, .-rotate_cl_controlled_sar_b_allregs

    
.globl rotate_cl_controlled_sar_w
         .type   rotate_cl_controlled_sar_w, @function
rotate_cl_controlled_sar_w:
      

  mov 4096,%eax
  mov 4100,%cl
  .byte 0x66,0xd3,0x38
  jnc .L564_c$
  movb $0x1,8448
.L564_c$: nop
  jnz .L564_z$
  movb $0x2,8449
.L564_z$: nop
  jns .L564_s$
  movb $0x3,8450
.L564_s$: nop
  jnp .L564_p$
  movb $0x4,8451
.L564_p$: nop
  jno .L564_o$
  movb $0x5,8452
.L564_o$: nop

    ret
         .size   rotate_cl_controlled_sar_w, .-rotate_cl_controlled_sar_w

    
.globl rotate_cl_controlled_sar_w_constant
         .type   rotate_cl_controlled_sar_w_constant, @function
rotate_cl_controlled_sar_w_constant:
      

  mov $1,%eax
  mov $2,%cl
  .byte 0x66,0xd3,0x38
  jnc .L565_c$
  movb $0x1,8448
.L565_c$: nop
  jnz .L565_z$
  movb $0x2,8449
.L565_z$: nop
  jns .L565_s$
  movb $0x3,8450
.L565_s$: nop
  jnp .L565_p$
  movb $0x4,8451
.L565_p$: nop
  jno .L565_o$
  movb $0x5,8452
.L565_o$: nop

    ret
         .size   rotate_cl_controlled_sar_w_constant, .-rotate_cl_controlled_sar_w_constant

    
.globl rotate_cl_controlled_sar_w_allregs
         .type   rotate_cl_controlled_sar_w_allregs, @function
rotate_cl_controlled_sar_w_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0xd3,0x38
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_cl_controlled_sar_w_allregs, .-rotate_cl_controlled_sar_w_allregs

    
.globl rotate_cl_controlled_sar_l
         .type   rotate_cl_controlled_sar_l, @function
rotate_cl_controlled_sar_l:
      

  mov 4096,%eax
  mov 4100,%cl
  .byte 0xd3,0x38
  jnc .L566_c$
  movb $0x1,8448
.L566_c$: nop
  jnz .L566_z$
  movb $0x2,8449
.L566_z$: nop
  jns .L566_s$
  movb $0x3,8450
.L566_s$: nop
  jnp .L566_p$
  movb $0x4,8451
.L566_p$: nop
  jno .L566_o$
  movb $0x5,8452
.L566_o$: nop

    ret
         .size   rotate_cl_controlled_sar_l, .-rotate_cl_controlled_sar_l

    
.globl rotate_cl_controlled_sar_l_constant
         .type   rotate_cl_controlled_sar_l_constant, @function
rotate_cl_controlled_sar_l_constant:
      

  mov $1,%eax
  mov $2,%cl
  .byte 0xd3,0x38
  jnc .L567_c$
  movb $0x1,8448
.L567_c$: nop
  jnz .L567_z$
  movb $0x2,8449
.L567_z$: nop
  jns .L567_s$
  movb $0x3,8450
.L567_s$: nop
  jnp .L567_p$
  movb $0x4,8451
.L567_p$: nop
  jno .L567_o$
  movb $0x5,8452
.L567_o$: nop

    ret
         .size   rotate_cl_controlled_sar_l_constant, .-rotate_cl_controlled_sar_l_constant

    
.globl rotate_cl_controlled_sar_l_allregs
         .type   rotate_cl_controlled_sar_l_allregs, @function
rotate_cl_controlled_sar_l_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xd3,0x38
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_cl_controlled_sar_l_allregs, .-rotate_cl_controlled_sar_l_allregs

    
.globl rotate_imm8_rol_b
         .type   rotate_imm8_rol_b, @function
rotate_imm8_rol_b:
      

  mov 4096,%eax
  .byte 0xc0,0x00,0x04
  jnc .L568_c$
  movb $0x1,8448
.L568_c$: nop
  jnz .L568_z$
  movb $0x2,8449
.L568_z$: nop
  jns .L568_s$
  movb $0x3,8450
.L568_s$: nop
  jnp .L568_p$
  movb $0x4,8451
.L568_p$: nop
  jno .L568_o$
  movb $0x5,8452
.L568_o$: nop

    ret
         .size   rotate_imm8_rol_b, .-rotate_imm8_rol_b

    
.globl rotate_imm8_rol_b_constant
         .type   rotate_imm8_rol_b_constant, @function
rotate_imm8_rol_b_constant:
      

  mov $1,%eax
  .byte 0xc0,0x00,0x04
  jnc .L569_c$
  movb $0x1,8448
.L569_c$: nop
  jnz .L569_z$
  movb $0x2,8449
.L569_z$: nop
  jns .L569_s$
  movb $0x3,8450
.L569_s$: nop
  jnp .L569_p$
  movb $0x4,8451
.L569_p$: nop
  jno .L569_o$
  movb $0x5,8452
.L569_o$: nop

    ret
         .size   rotate_imm8_rol_b_constant, .-rotate_imm8_rol_b_constant

    
.globl rotate_imm8_rol_b_allregs
         .type   rotate_imm8_rol_b_allregs, @function
rotate_imm8_rol_b_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xc0,0x00,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_imm8_rol_b_allregs, .-rotate_imm8_rol_b_allregs

    
.globl rotate_imm8_rol_w
         .type   rotate_imm8_rol_w, @function
rotate_imm8_rol_w:
      

  mov 4096,%eax
  .byte 0x66,0xc1,0x00,0x04
  jnc .L570_c$
  movb $0x1,8448
.L570_c$: nop
  jnz .L570_z$
  movb $0x2,8449
.L570_z$: nop
  jns .L570_s$
  movb $0x3,8450
.L570_s$: nop
  jnp .L570_p$
  movb $0x4,8451
.L570_p$: nop
  jno .L570_o$
  movb $0x5,8452
.L570_o$: nop

    ret
         .size   rotate_imm8_rol_w, .-rotate_imm8_rol_w

    
.globl rotate_imm8_rol_w_constant
         .type   rotate_imm8_rol_w_constant, @function
rotate_imm8_rol_w_constant:
      

  mov $1,%eax
  .byte 0x66,0xc1,0x00,0x04
  jnc .L571_c$
  movb $0x1,8448
.L571_c$: nop
  jnz .L571_z$
  movb $0x2,8449
.L571_z$: nop
  jns .L571_s$
  movb $0x3,8450
.L571_s$: nop
  jnp .L571_p$
  movb $0x4,8451
.L571_p$: nop
  jno .L571_o$
  movb $0x5,8452
.L571_o$: nop

    ret
         .size   rotate_imm8_rol_w_constant, .-rotate_imm8_rol_w_constant

    
.globl rotate_imm8_rol_w_allregs
         .type   rotate_imm8_rol_w_allregs, @function
rotate_imm8_rol_w_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0xc1,0x00,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_imm8_rol_w_allregs, .-rotate_imm8_rol_w_allregs

    
.globl rotate_imm8_rol_l
         .type   rotate_imm8_rol_l, @function
rotate_imm8_rol_l:
      

  mov 4096,%eax
  .byte 0xc1,0x00,0x04
  jnc .L572_c$
  movb $0x1,8448
.L572_c$: nop
  jnz .L572_z$
  movb $0x2,8449
.L572_z$: nop
  jns .L572_s$
  movb $0x3,8450
.L572_s$: nop
  jnp .L572_p$
  movb $0x4,8451
.L572_p$: nop
  jno .L572_o$
  movb $0x5,8452
.L572_o$: nop

    ret
         .size   rotate_imm8_rol_l, .-rotate_imm8_rol_l

    
.globl rotate_imm8_rol_l_constant
         .type   rotate_imm8_rol_l_constant, @function
rotate_imm8_rol_l_constant:
      

  mov $1,%eax
  .byte 0xc1,0x00,0x04
  jnc .L573_c$
  movb $0x1,8448
.L573_c$: nop
  jnz .L573_z$
  movb $0x2,8449
.L573_z$: nop
  jns .L573_s$
  movb $0x3,8450
.L573_s$: nop
  jnp .L573_p$
  movb $0x4,8451
.L573_p$: nop
  jno .L573_o$
  movb $0x5,8452
.L573_o$: nop

    ret
         .size   rotate_imm8_rol_l_constant, .-rotate_imm8_rol_l_constant

    
.globl rotate_imm8_rol_l_allregs
         .type   rotate_imm8_rol_l_allregs, @function
rotate_imm8_rol_l_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xc1,0x00,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_imm8_rol_l_allregs, .-rotate_imm8_rol_l_allregs

    
.globl rotate_imm8_ror_b
         .type   rotate_imm8_ror_b, @function
rotate_imm8_ror_b:
      

  mov 4096,%eax
  .byte 0xc0,0x08,0x04
  jnc .L574_c$
  movb $0x1,8448
.L574_c$: nop
  jnz .L574_z$
  movb $0x2,8449
.L574_z$: nop
  jns .L574_s$
  movb $0x3,8450
.L574_s$: nop
  jnp .L574_p$
  movb $0x4,8451
.L574_p$: nop
  jno .L574_o$
  movb $0x5,8452
.L574_o$: nop

    ret
         .size   rotate_imm8_ror_b, .-rotate_imm8_ror_b

    
.globl rotate_imm8_ror_b_constant
         .type   rotate_imm8_ror_b_constant, @function
rotate_imm8_ror_b_constant:
      

  mov $1,%eax
  .byte 0xc0,0x08,0x04
  jnc .L575_c$
  movb $0x1,8448
.L575_c$: nop
  jnz .L575_z$
  movb $0x2,8449
.L575_z$: nop
  jns .L575_s$
  movb $0x3,8450
.L575_s$: nop
  jnp .L575_p$
  movb $0x4,8451
.L575_p$: nop
  jno .L575_o$
  movb $0x5,8452
.L575_o$: nop

    ret
         .size   rotate_imm8_ror_b_constant, .-rotate_imm8_ror_b_constant

    
.globl rotate_imm8_ror_b_allregs
         .type   rotate_imm8_ror_b_allregs, @function
rotate_imm8_ror_b_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xc0,0x08,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_imm8_ror_b_allregs, .-rotate_imm8_ror_b_allregs

    
.globl rotate_imm8_ror_w
         .type   rotate_imm8_ror_w, @function
rotate_imm8_ror_w:
      

  mov 4096,%eax
  .byte 0x66,0xc1,0x08,0x04
  jnc .L576_c$
  movb $0x1,8448
.L576_c$: nop
  jnz .L576_z$
  movb $0x2,8449
.L576_z$: nop
  jns .L576_s$
  movb $0x3,8450
.L576_s$: nop
  jnp .L576_p$
  movb $0x4,8451
.L576_p$: nop
  jno .L576_o$
  movb $0x5,8452
.L576_o$: nop

    ret
         .size   rotate_imm8_ror_w, .-rotate_imm8_ror_w

    
.globl rotate_imm8_ror_w_constant
         .type   rotate_imm8_ror_w_constant, @function
rotate_imm8_ror_w_constant:
      

  mov $1,%eax
  .byte 0x66,0xc1,0x08,0x04
  jnc .L577_c$
  movb $0x1,8448
.L577_c$: nop
  jnz .L577_z$
  movb $0x2,8449
.L577_z$: nop
  jns .L577_s$
  movb $0x3,8450
.L577_s$: nop
  jnp .L577_p$
  movb $0x4,8451
.L577_p$: nop
  jno .L577_o$
  movb $0x5,8452
.L577_o$: nop

    ret
         .size   rotate_imm8_ror_w_constant, .-rotate_imm8_ror_w_constant

    
.globl rotate_imm8_ror_w_allregs
         .type   rotate_imm8_ror_w_allregs, @function
rotate_imm8_ror_w_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0xc1,0x08,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_imm8_ror_w_allregs, .-rotate_imm8_ror_w_allregs

    
.globl rotate_imm8_ror_l
         .type   rotate_imm8_ror_l, @function
rotate_imm8_ror_l:
      

  mov 4096,%eax
  .byte 0xc1,0x08,0x04
  jnc .L578_c$
  movb $0x1,8448
.L578_c$: nop
  jnz .L578_z$
  movb $0x2,8449
.L578_z$: nop
  jns .L578_s$
  movb $0x3,8450
.L578_s$: nop
  jnp .L578_p$
  movb $0x4,8451
.L578_p$: nop
  jno .L578_o$
  movb $0x5,8452
.L578_o$: nop

    ret
         .size   rotate_imm8_ror_l, .-rotate_imm8_ror_l

    
.globl rotate_imm8_ror_l_constant
         .type   rotate_imm8_ror_l_constant, @function
rotate_imm8_ror_l_constant:
      

  mov $1,%eax
  .byte 0xc1,0x08,0x04
  jnc .L579_c$
  movb $0x1,8448
.L579_c$: nop
  jnz .L579_z$
  movb $0x2,8449
.L579_z$: nop
  jns .L579_s$
  movb $0x3,8450
.L579_s$: nop
  jnp .L579_p$
  movb $0x4,8451
.L579_p$: nop
  jno .L579_o$
  movb $0x5,8452
.L579_o$: nop

    ret
         .size   rotate_imm8_ror_l_constant, .-rotate_imm8_ror_l_constant

    
.globl rotate_imm8_ror_l_allregs
         .type   rotate_imm8_ror_l_allregs, @function
rotate_imm8_ror_l_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xc1,0x08,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_imm8_ror_l_allregs, .-rotate_imm8_ror_l_allregs

    
.globl rotate_imm8_rcl_b
         .type   rotate_imm8_rcl_b, @function
rotate_imm8_rcl_b:
      

  mov 4096,%eax
  .byte 0xc0,0x10,0x04
  jnc .L580_c$
  movb $0x1,8448
.L580_c$: nop
  jnz .L580_z$
  movb $0x2,8449
.L580_z$: nop
  jns .L580_s$
  movb $0x3,8450
.L580_s$: nop
  jnp .L580_p$
  movb $0x4,8451
.L580_p$: nop
  jno .L580_o$
  movb $0x5,8452
.L580_o$: nop

    ret
         .size   rotate_imm8_rcl_b, .-rotate_imm8_rcl_b

    
.globl rotate_imm8_rcl_b_constant
         .type   rotate_imm8_rcl_b_constant, @function
rotate_imm8_rcl_b_constant:
      

  mov $1,%eax
  .byte 0xc0,0x10,0x04
  jnc .L581_c$
  movb $0x1,8448
.L581_c$: nop
  jnz .L581_z$
  movb $0x2,8449
.L581_z$: nop
  jns .L581_s$
  movb $0x3,8450
.L581_s$: nop
  jnp .L581_p$
  movb $0x4,8451
.L581_p$: nop
  jno .L581_o$
  movb $0x5,8452
.L581_o$: nop

    ret
         .size   rotate_imm8_rcl_b_constant, .-rotate_imm8_rcl_b_constant

    
.globl rotate_imm8_rcl_b_allregs
         .type   rotate_imm8_rcl_b_allregs, @function
rotate_imm8_rcl_b_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xc0,0x10,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_imm8_rcl_b_allregs, .-rotate_imm8_rcl_b_allregs

    
.globl rotate_imm8_rcl_w
         .type   rotate_imm8_rcl_w, @function
rotate_imm8_rcl_w:
      

  mov 4096,%eax
  .byte 0x66,0xc1,0x10,0x04
  jnc .L582_c$
  movb $0x1,8448
.L582_c$: nop
  jnz .L582_z$
  movb $0x2,8449
.L582_z$: nop
  jns .L582_s$
  movb $0x3,8450
.L582_s$: nop
  jnp .L582_p$
  movb $0x4,8451
.L582_p$: nop
  jno .L582_o$
  movb $0x5,8452
.L582_o$: nop

    ret
         .size   rotate_imm8_rcl_w, .-rotate_imm8_rcl_w

    
.globl rotate_imm8_rcl_w_constant
         .type   rotate_imm8_rcl_w_constant, @function
rotate_imm8_rcl_w_constant:
      

  mov $1,%eax
  .byte 0x66,0xc1,0x10,0x04
  jnc .L583_c$
  movb $0x1,8448
.L583_c$: nop
  jnz .L583_z$
  movb $0x2,8449
.L583_z$: nop
  jns .L583_s$
  movb $0x3,8450
.L583_s$: nop
  jnp .L583_p$
  movb $0x4,8451
.L583_p$: nop
  jno .L583_o$
  movb $0x5,8452
.L583_o$: nop

    ret
         .size   rotate_imm8_rcl_w_constant, .-rotate_imm8_rcl_w_constant

    
.globl rotate_imm8_rcl_w_allregs
         .type   rotate_imm8_rcl_w_allregs, @function
rotate_imm8_rcl_w_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0xc1,0x10,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_imm8_rcl_w_allregs, .-rotate_imm8_rcl_w_allregs

    
.globl rotate_imm8_rcl_l
         .type   rotate_imm8_rcl_l, @function
rotate_imm8_rcl_l:
      

  mov 4096,%eax
  .byte 0xc1,0x10,0x04
  jnc .L584_c$
  movb $0x1,8448
.L584_c$: nop
  jnz .L584_z$
  movb $0x2,8449
.L584_z$: nop
  jns .L584_s$
  movb $0x3,8450
.L584_s$: nop
  jnp .L584_p$
  movb $0x4,8451
.L584_p$: nop
  jno .L584_o$
  movb $0x5,8452
.L584_o$: nop

    ret
         .size   rotate_imm8_rcl_l, .-rotate_imm8_rcl_l

    
.globl rotate_imm8_rcl_l_constant
         .type   rotate_imm8_rcl_l_constant, @function
rotate_imm8_rcl_l_constant:
      

  mov $1,%eax
  .byte 0xc1,0x10,0x04
  jnc .L585_c$
  movb $0x1,8448
.L585_c$: nop
  jnz .L585_z$
  movb $0x2,8449
.L585_z$: nop
  jns .L585_s$
  movb $0x3,8450
.L585_s$: nop
  jnp .L585_p$
  movb $0x4,8451
.L585_p$: nop
  jno .L585_o$
  movb $0x5,8452
.L585_o$: nop

    ret
         .size   rotate_imm8_rcl_l_constant, .-rotate_imm8_rcl_l_constant

    
.globl rotate_imm8_rcl_l_allregs
         .type   rotate_imm8_rcl_l_allregs, @function
rotate_imm8_rcl_l_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xc1,0x10,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_imm8_rcl_l_allregs, .-rotate_imm8_rcl_l_allregs

    
.globl rotate_imm8_rcr_b
         .type   rotate_imm8_rcr_b, @function
rotate_imm8_rcr_b:
      

  mov 4096,%eax
  .byte 0xc0,0x18,0x04
  jnc .L586_c$
  movb $0x1,8448
.L586_c$: nop
  jnz .L586_z$
  movb $0x2,8449
.L586_z$: nop
  jns .L586_s$
  movb $0x3,8450
.L586_s$: nop
  jnp .L586_p$
  movb $0x4,8451
.L586_p$: nop
  jno .L586_o$
  movb $0x5,8452
.L586_o$: nop

    ret
         .size   rotate_imm8_rcr_b, .-rotate_imm8_rcr_b

    
.globl rotate_imm8_rcr_b_constant
         .type   rotate_imm8_rcr_b_constant, @function
rotate_imm8_rcr_b_constant:
      

  mov $1,%eax
  .byte 0xc0,0x18,0x04
  jnc .L587_c$
  movb $0x1,8448
.L587_c$: nop
  jnz .L587_z$
  movb $0x2,8449
.L587_z$: nop
  jns .L587_s$
  movb $0x3,8450
.L587_s$: nop
  jnp .L587_p$
  movb $0x4,8451
.L587_p$: nop
  jno .L587_o$
  movb $0x5,8452
.L587_o$: nop

    ret
         .size   rotate_imm8_rcr_b_constant, .-rotate_imm8_rcr_b_constant

    
.globl rotate_imm8_rcr_b_allregs
         .type   rotate_imm8_rcr_b_allregs, @function
rotate_imm8_rcr_b_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xc0,0x18,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_imm8_rcr_b_allregs, .-rotate_imm8_rcr_b_allregs

    
.globl rotate_imm8_rcr_w
         .type   rotate_imm8_rcr_w, @function
rotate_imm8_rcr_w:
      

  mov 4096,%eax
  .byte 0x66,0xc1,0x18,0x04
  jnc .L588_c$
  movb $0x1,8448
.L588_c$: nop
  jnz .L588_z$
  movb $0x2,8449
.L588_z$: nop
  jns .L588_s$
  movb $0x3,8450
.L588_s$: nop
  jnp .L588_p$
  movb $0x4,8451
.L588_p$: nop
  jno .L588_o$
  movb $0x5,8452
.L588_o$: nop

    ret
         .size   rotate_imm8_rcr_w, .-rotate_imm8_rcr_w

    
.globl rotate_imm8_rcr_w_constant
         .type   rotate_imm8_rcr_w_constant, @function
rotate_imm8_rcr_w_constant:
      

  mov $1,%eax
  .byte 0x66,0xc1,0x18,0x04
  jnc .L589_c$
  movb $0x1,8448
.L589_c$: nop
  jnz .L589_z$
  movb $0x2,8449
.L589_z$: nop
  jns .L589_s$
  movb $0x3,8450
.L589_s$: nop
  jnp .L589_p$
  movb $0x4,8451
.L589_p$: nop
  jno .L589_o$
  movb $0x5,8452
.L589_o$: nop

    ret
         .size   rotate_imm8_rcr_w_constant, .-rotate_imm8_rcr_w_constant

    
.globl rotate_imm8_rcr_w_allregs
         .type   rotate_imm8_rcr_w_allregs, @function
rotate_imm8_rcr_w_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0xc1,0x18,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_imm8_rcr_w_allregs, .-rotate_imm8_rcr_w_allregs

    
.globl rotate_imm8_rcr_l
         .type   rotate_imm8_rcr_l, @function
rotate_imm8_rcr_l:
      

  mov 4096,%eax
  .byte 0xc1,0x18,0x04
  jnc .L590_c$
  movb $0x1,8448
.L590_c$: nop
  jnz .L590_z$
  movb $0x2,8449
.L590_z$: nop
  jns .L590_s$
  movb $0x3,8450
.L590_s$: nop
  jnp .L590_p$
  movb $0x4,8451
.L590_p$: nop
  jno .L590_o$
  movb $0x5,8452
.L590_o$: nop

    ret
         .size   rotate_imm8_rcr_l, .-rotate_imm8_rcr_l

    
.globl rotate_imm8_rcr_l_constant
         .type   rotate_imm8_rcr_l_constant, @function
rotate_imm8_rcr_l_constant:
      

  mov $1,%eax
  .byte 0xc1,0x18,0x04
  jnc .L591_c$
  movb $0x1,8448
.L591_c$: nop
  jnz .L591_z$
  movb $0x2,8449
.L591_z$: nop
  jns .L591_s$
  movb $0x3,8450
.L591_s$: nop
  jnp .L591_p$
  movb $0x4,8451
.L591_p$: nop
  jno .L591_o$
  movb $0x5,8452
.L591_o$: nop

    ret
         .size   rotate_imm8_rcr_l_constant, .-rotate_imm8_rcr_l_constant

    
.globl rotate_imm8_rcr_l_allregs
         .type   rotate_imm8_rcr_l_allregs, @function
rotate_imm8_rcr_l_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xc1,0x18,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_imm8_rcr_l_allregs, .-rotate_imm8_rcr_l_allregs

    
.globl rotate_imm8_shl_b
         .type   rotate_imm8_shl_b, @function
rotate_imm8_shl_b:
      

  mov 4096,%eax
  .byte 0xc0,0x20,0x04
  jnc .L592_c$
  movb $0x1,8448
.L592_c$: nop
  jnz .L592_z$
  movb $0x2,8449
.L592_z$: nop
  jns .L592_s$
  movb $0x3,8450
.L592_s$: nop
  jnp .L592_p$
  movb $0x4,8451
.L592_p$: nop
  jno .L592_o$
  movb $0x5,8452
.L592_o$: nop

    ret
         .size   rotate_imm8_shl_b, .-rotate_imm8_shl_b

    
.globl rotate_imm8_shl_b_constant
         .type   rotate_imm8_shl_b_constant, @function
rotate_imm8_shl_b_constant:
      

  mov $1,%eax
  .byte 0xc0,0x20,0x04
  jnc .L593_c$
  movb $0x1,8448
.L593_c$: nop
  jnz .L593_z$
  movb $0x2,8449
.L593_z$: nop
  jns .L593_s$
  movb $0x3,8450
.L593_s$: nop
  jnp .L593_p$
  movb $0x4,8451
.L593_p$: nop
  jno .L593_o$
  movb $0x5,8452
.L593_o$: nop

    ret
         .size   rotate_imm8_shl_b_constant, .-rotate_imm8_shl_b_constant

    
.globl rotate_imm8_shl_b_allregs
         .type   rotate_imm8_shl_b_allregs, @function
rotate_imm8_shl_b_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xc0,0x20,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_imm8_shl_b_allregs, .-rotate_imm8_shl_b_allregs

    
.globl rotate_imm8_shl_w
         .type   rotate_imm8_shl_w, @function
rotate_imm8_shl_w:
      

  mov 4096,%eax
  .byte 0x66,0xc1,0x20,0x04
  jnc .L594_c$
  movb $0x1,8448
.L594_c$: nop
  jnz .L594_z$
  movb $0x2,8449
.L594_z$: nop
  jns .L594_s$
  movb $0x3,8450
.L594_s$: nop
  jnp .L594_p$
  movb $0x4,8451
.L594_p$: nop
  jno .L594_o$
  movb $0x5,8452
.L594_o$: nop

    ret
         .size   rotate_imm8_shl_w, .-rotate_imm8_shl_w

    
.globl rotate_imm8_shl_w_constant
         .type   rotate_imm8_shl_w_constant, @function
rotate_imm8_shl_w_constant:
      

  mov $1,%eax
  .byte 0x66,0xc1,0x20,0x04
  jnc .L595_c$
  movb $0x1,8448
.L595_c$: nop
  jnz .L595_z$
  movb $0x2,8449
.L595_z$: nop
  jns .L595_s$
  movb $0x3,8450
.L595_s$: nop
  jnp .L595_p$
  movb $0x4,8451
.L595_p$: nop
  jno .L595_o$
  movb $0x5,8452
.L595_o$: nop

    ret
         .size   rotate_imm8_shl_w_constant, .-rotate_imm8_shl_w_constant

    
.globl rotate_imm8_shl_w_allregs
         .type   rotate_imm8_shl_w_allregs, @function
rotate_imm8_shl_w_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0xc1,0x20,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_imm8_shl_w_allregs, .-rotate_imm8_shl_w_allregs

    
.globl rotate_imm8_shl_l
         .type   rotate_imm8_shl_l, @function
rotate_imm8_shl_l:
      

  mov 4096,%eax
  .byte 0xc1,0x20,0x04
  jnc .L596_c$
  movb $0x1,8448
.L596_c$: nop
  jnz .L596_z$
  movb $0x2,8449
.L596_z$: nop
  jns .L596_s$
  movb $0x3,8450
.L596_s$: nop
  jnp .L596_p$
  movb $0x4,8451
.L596_p$: nop
  jno .L596_o$
  movb $0x5,8452
.L596_o$: nop

    ret
         .size   rotate_imm8_shl_l, .-rotate_imm8_shl_l

    
.globl rotate_imm8_shl_l_constant
         .type   rotate_imm8_shl_l_constant, @function
rotate_imm8_shl_l_constant:
      

  mov $1,%eax
  .byte 0xc1,0x20,0x04
  jnc .L597_c$
  movb $0x1,8448
.L597_c$: nop
  jnz .L597_z$
  movb $0x2,8449
.L597_z$: nop
  jns .L597_s$
  movb $0x3,8450
.L597_s$: nop
  jnp .L597_p$
  movb $0x4,8451
.L597_p$: nop
  jno .L597_o$
  movb $0x5,8452
.L597_o$: nop

    ret
         .size   rotate_imm8_shl_l_constant, .-rotate_imm8_shl_l_constant

    
.globl rotate_imm8_shl_l_allregs
         .type   rotate_imm8_shl_l_allregs, @function
rotate_imm8_shl_l_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xc1,0x20,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_imm8_shl_l_allregs, .-rotate_imm8_shl_l_allregs

    
.globl rotate_imm8_shr_b
         .type   rotate_imm8_shr_b, @function
rotate_imm8_shr_b:
      

  mov 4096,%eax
  .byte 0xc0,0x28,0x04
  jnc .L598_c$
  movb $0x1,8448
.L598_c$: nop
  jnz .L598_z$
  movb $0x2,8449
.L598_z$: nop
  jns .L598_s$
  movb $0x3,8450
.L598_s$: nop
  jnp .L598_p$
  movb $0x4,8451
.L598_p$: nop
  jno .L598_o$
  movb $0x5,8452
.L598_o$: nop

    ret
         .size   rotate_imm8_shr_b, .-rotate_imm8_shr_b

    
.globl rotate_imm8_shr_b_constant
         .type   rotate_imm8_shr_b_constant, @function
rotate_imm8_shr_b_constant:
      

  mov $1,%eax
  .byte 0xc0,0x28,0x04
  jnc .L599_c$
  movb $0x1,8448
.L599_c$: nop
  jnz .L599_z$
  movb $0x2,8449
.L599_z$: nop
  jns .L599_s$
  movb $0x3,8450
.L599_s$: nop
  jnp .L599_p$
  movb $0x4,8451
.L599_p$: nop
  jno .L599_o$
  movb $0x5,8452
.L599_o$: nop

    ret
         .size   rotate_imm8_shr_b_constant, .-rotate_imm8_shr_b_constant

    
.globl rotate_imm8_shr_b_allregs
         .type   rotate_imm8_shr_b_allregs, @function
rotate_imm8_shr_b_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xc0,0x28,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_imm8_shr_b_allregs, .-rotate_imm8_shr_b_allregs

    
.globl rotate_imm8_shr_w
         .type   rotate_imm8_shr_w, @function
rotate_imm8_shr_w:
      

  mov 4096,%eax
  .byte 0x66,0xc1,0x28,0x04
  jnc .L600_c$
  movb $0x1,8448
.L600_c$: nop
  jnz .L600_z$
  movb $0x2,8449
.L600_z$: nop
  jns .L600_s$
  movb $0x3,8450
.L600_s$: nop
  jnp .L600_p$
  movb $0x4,8451
.L600_p$: nop
  jno .L600_o$
  movb $0x5,8452
.L600_o$: nop

    ret
         .size   rotate_imm8_shr_w, .-rotate_imm8_shr_w

    
.globl rotate_imm8_shr_w_constant
         .type   rotate_imm8_shr_w_constant, @function
rotate_imm8_shr_w_constant:
      

  mov $1,%eax
  .byte 0x66,0xc1,0x28,0x04
  jnc .L601_c$
  movb $0x1,8448
.L601_c$: nop
  jnz .L601_z$
  movb $0x2,8449
.L601_z$: nop
  jns .L601_s$
  movb $0x3,8450
.L601_s$: nop
  jnp .L601_p$
  movb $0x4,8451
.L601_p$: nop
  jno .L601_o$
  movb $0x5,8452
.L601_o$: nop

    ret
         .size   rotate_imm8_shr_w_constant, .-rotate_imm8_shr_w_constant

    
.globl rotate_imm8_shr_w_allregs
         .type   rotate_imm8_shr_w_allregs, @function
rotate_imm8_shr_w_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0xc1,0x28,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_imm8_shr_w_allregs, .-rotate_imm8_shr_w_allregs

    
.globl rotate_imm8_shr_l
         .type   rotate_imm8_shr_l, @function
rotate_imm8_shr_l:
      

  mov 4096,%eax
  .byte 0xc1,0x28,0x04
  jnc .L602_c$
  movb $0x1,8448
.L602_c$: nop
  jnz .L602_z$
  movb $0x2,8449
.L602_z$: nop
  jns .L602_s$
  movb $0x3,8450
.L602_s$: nop
  jnp .L602_p$
  movb $0x4,8451
.L602_p$: nop
  jno .L602_o$
  movb $0x5,8452
.L602_o$: nop

    ret
         .size   rotate_imm8_shr_l, .-rotate_imm8_shr_l

    
.globl rotate_imm8_shr_l_constant
         .type   rotate_imm8_shr_l_constant, @function
rotate_imm8_shr_l_constant:
      

  mov $1,%eax
  .byte 0xc1,0x28,0x04
  jnc .L603_c$
  movb $0x1,8448
.L603_c$: nop
  jnz .L603_z$
  movb $0x2,8449
.L603_z$: nop
  jns .L603_s$
  movb $0x3,8450
.L603_s$: nop
  jnp .L603_p$
  movb $0x4,8451
.L603_p$: nop
  jno .L603_o$
  movb $0x5,8452
.L603_o$: nop

    ret
         .size   rotate_imm8_shr_l_constant, .-rotate_imm8_shr_l_constant

    
.globl rotate_imm8_shr_l_allregs
         .type   rotate_imm8_shr_l_allregs, @function
rotate_imm8_shr_l_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xc1,0x28,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_imm8_shr_l_allregs, .-rotate_imm8_shr_l_allregs

    
.globl rotate_imm8_sar_b
         .type   rotate_imm8_sar_b, @function
rotate_imm8_sar_b:
      

  mov 4096,%eax
  .byte 0xc0,0x38,0x04
  jnc .L604_c$
  movb $0x1,8448
.L604_c$: nop
  jnz .L604_z$
  movb $0x2,8449
.L604_z$: nop
  jns .L604_s$
  movb $0x3,8450
.L604_s$: nop
  jnp .L604_p$
  movb $0x4,8451
.L604_p$: nop
  jno .L604_o$
  movb $0x5,8452
.L604_o$: nop

    ret
         .size   rotate_imm8_sar_b, .-rotate_imm8_sar_b

    
.globl rotate_imm8_sar_b_constant
         .type   rotate_imm8_sar_b_constant, @function
rotate_imm8_sar_b_constant:
      

  mov $1,%eax
  .byte 0xc0,0x38,0x04
  jnc .L605_c$
  movb $0x1,8448
.L605_c$: nop
  jnz .L605_z$
  movb $0x2,8449
.L605_z$: nop
  jns .L605_s$
  movb $0x3,8450
.L605_s$: nop
  jnp .L605_p$
  movb $0x4,8451
.L605_p$: nop
  jno .L605_o$
  movb $0x5,8452
.L605_o$: nop

    ret
         .size   rotate_imm8_sar_b_constant, .-rotate_imm8_sar_b_constant

    
.globl rotate_imm8_sar_b_allregs
         .type   rotate_imm8_sar_b_allregs, @function
rotate_imm8_sar_b_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xc0,0x38,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_imm8_sar_b_allregs, .-rotate_imm8_sar_b_allregs

    
.globl rotate_imm8_sar_w
         .type   rotate_imm8_sar_w, @function
rotate_imm8_sar_w:
      

  mov 4096,%eax
  .byte 0x66,0xc1,0x38,0x04
  jnc .L606_c$
  movb $0x1,8448
.L606_c$: nop
  jnz .L606_z$
  movb $0x2,8449
.L606_z$: nop
  jns .L606_s$
  movb $0x3,8450
.L606_s$: nop
  jnp .L606_p$
  movb $0x4,8451
.L606_p$: nop
  jno .L606_o$
  movb $0x5,8452
.L606_o$: nop

    ret
         .size   rotate_imm8_sar_w, .-rotate_imm8_sar_w

    
.globl rotate_imm8_sar_w_constant
         .type   rotate_imm8_sar_w_constant, @function
rotate_imm8_sar_w_constant:
      

  mov $1,%eax
  .byte 0x66,0xc1,0x38,0x04
  jnc .L607_c$
  movb $0x1,8448
.L607_c$: nop
  jnz .L607_z$
  movb $0x2,8449
.L607_z$: nop
  jns .L607_s$
  movb $0x3,8450
.L607_s$: nop
  jnp .L607_p$
  movb $0x4,8451
.L607_p$: nop
  jno .L607_o$
  movb $0x5,8452
.L607_o$: nop

    ret
         .size   rotate_imm8_sar_w_constant, .-rotate_imm8_sar_w_constant

    
.globl rotate_imm8_sar_w_allregs
         .type   rotate_imm8_sar_w_allregs, @function
rotate_imm8_sar_w_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0xc1,0x38,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_imm8_sar_w_allregs, .-rotate_imm8_sar_w_allregs

    
.globl rotate_imm8_sar_l
         .type   rotate_imm8_sar_l, @function
rotate_imm8_sar_l:
      

  mov 4096,%eax
  .byte 0xc1,0x38,0x04
  jnc .L608_c$
  movb $0x1,8448
.L608_c$: nop
  jnz .L608_z$
  movb $0x2,8449
.L608_z$: nop
  jns .L608_s$
  movb $0x3,8450
.L608_s$: nop
  jnp .L608_p$
  movb $0x4,8451
.L608_p$: nop
  jno .L608_o$
  movb $0x5,8452
.L608_o$: nop

    ret
         .size   rotate_imm8_sar_l, .-rotate_imm8_sar_l

    
.globl rotate_imm8_sar_l_constant
         .type   rotate_imm8_sar_l_constant, @function
rotate_imm8_sar_l_constant:
      

  mov $1,%eax
  .byte 0xc1,0x38,0x04
  jnc .L609_c$
  movb $0x1,8448
.L609_c$: nop
  jnz .L609_z$
  movb $0x2,8449
.L609_z$: nop
  jns .L609_s$
  movb $0x3,8450
.L609_s$: nop
  jnp .L609_p$
  movb $0x4,8451
.L609_p$: nop
  jno .L609_o$
  movb $0x5,8452
.L609_o$: nop

    ret
         .size   rotate_imm8_sar_l_constant, .-rotate_imm8_sar_l_constant

    
.globl rotate_imm8_sar_l_allregs
         .type   rotate_imm8_sar_l_allregs, @function
rotate_imm8_sar_l_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xc1,0x38,0x04
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rotate_imm8_sar_l_allregs, .-rotate_imm8_sar_l_allregs

    
.globl rep_ins1b_cld
         .type   rep_ins1b_cld, @function
rep_ins1b_cld:
      cld

  mov 4096,%edi
  mov 4100,%dx
  mov 4104,%ecx
  .byte 0xf2,0x6c
  mov %edi,8192
  mov %ecx,8196
  jnc .L610_c$
  movb $0x1,8448
.L610_c$: nop
  jnz .L610_z$
  movb $0x2,8449
.L610_z$: nop
  jns .L610_s$
  movb $0x3,8450
.L610_s$: nop
  jnp .L610_p$
  movb $0x4,8451
.L610_p$: nop
  jno .L610_o$
  movb $0x5,8452
.L610_o$: nop

    ret
         .size   rep_ins1b_cld, .-rep_ins1b_cld

    
.globl rep_ins1b_cld_constant
         .type   rep_ins1b_cld_constant, @function
rep_ins1b_cld_constant:
      cld

  mov $1,%edi
  mov $2,%dx
  mov $3,%ecx
  .byte 0xf2,0x6c
  mov %edi,8192
  mov %ecx,8196
  jnc .L611_c$
  movb $0x1,8448
.L611_c$: nop
  jnz .L611_z$
  movb $0x2,8449
.L611_z$: nop
  jns .L611_s$
  movb $0x3,8450
.L611_s$: nop
  jnp .L611_p$
  movb $0x4,8451
.L611_p$: nop
  jno .L611_o$
  movb $0x5,8452
.L611_o$: nop

    ret
         .size   rep_ins1b_cld_constant, .-rep_ins1b_cld_constant

    
.globl rep_ins1b_cld_allregs
         .type   rep_ins1b_cld_allregs, @function
rep_ins1b_cld_allregs:
      cld

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0x6c
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_ins1b_cld_allregs, .-rep_ins1b_cld_allregs

    
.globl rep_ins1b_std
         .type   rep_ins1b_std, @function
rep_ins1b_std:
      std

  mov 4096,%edi
  mov 4100,%dx
  mov 4104,%ecx
  .byte 0xf2,0x6c
  mov %edi,8192
  mov %ecx,8196
  jnc .L612_c$
  movb $0x1,8448
.L612_c$: nop
  jnz .L612_z$
  movb $0x2,8449
.L612_z$: nop
  jns .L612_s$
  movb $0x3,8450
.L612_s$: nop
  jnp .L612_p$
  movb $0x4,8451
.L612_p$: nop
  jno .L612_o$
  movb $0x5,8452
.L612_o$: nop

    ret
         .size   rep_ins1b_std, .-rep_ins1b_std

    
.globl rep_ins1b_std_constant
         .type   rep_ins1b_std_constant, @function
rep_ins1b_std_constant:
      std

  mov $1,%edi
  mov $2,%dx
  mov $3,%ecx
  .byte 0xf2,0x6c
  mov %edi,8192
  mov %ecx,8196
  jnc .L613_c$
  movb $0x1,8448
.L613_c$: nop
  jnz .L613_z$
  movb $0x2,8449
.L613_z$: nop
  jns .L613_s$
  movb $0x3,8450
.L613_s$: nop
  jnp .L613_p$
  movb $0x4,8451
.L613_p$: nop
  jno .L613_o$
  movb $0x5,8452
.L613_o$: nop

    ret
         .size   rep_ins1b_std_constant, .-rep_ins1b_std_constant

    
.globl rep_ins1b_std_allregs
         .type   rep_ins1b_std_allregs, @function
rep_ins1b_std_allregs:
      std

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0x6c
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_ins1b_std_allregs, .-rep_ins1b_std_allregs

    
.globl rep_ins1b
         .type   rep_ins1b, @function
rep_ins1b:
      

  mov 4096,%edi
  mov 4100,%dx
  mov 4104,%ecx
  .byte 0xf2,0x6c
  mov %edi,8192
  mov %ecx,8196
  jnc .L614_c$
  movb $0x1,8448
.L614_c$: nop
  jnz .L614_z$
  movb $0x2,8449
.L614_z$: nop
  jns .L614_s$
  movb $0x3,8450
.L614_s$: nop
  jnp .L614_p$
  movb $0x4,8451
.L614_p$: nop
  jno .L614_o$
  movb $0x5,8452
.L614_o$: nop

    ret
         .size   rep_ins1b, .-rep_ins1b

    
.globl rep_ins1b_constant
         .type   rep_ins1b_constant, @function
rep_ins1b_constant:
      

  mov $1,%edi
  mov $2,%dx
  mov $3,%ecx
  .byte 0xf2,0x6c
  mov %edi,8192
  mov %ecx,8196
  jnc .L615_c$
  movb $0x1,8448
.L615_c$: nop
  jnz .L615_z$
  movb $0x2,8449
.L615_z$: nop
  jns .L615_s$
  movb $0x3,8450
.L615_s$: nop
  jnp .L615_p$
  movb $0x4,8451
.L615_p$: nop
  jno .L615_o$
  movb $0x5,8452
.L615_o$: nop

    ret
         .size   rep_ins1b_constant, .-rep_ins1b_constant

    
.globl rep_ins1b_allregs
         .type   rep_ins1b_allregs, @function
rep_ins1b_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0x6c
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_ins1b_allregs, .-rep_ins1b_allregs

    
.globl rep_ins1w_cld
         .type   rep_ins1w_cld, @function
rep_ins1w_cld:
      cld

  mov 4096,%edi
  mov 4100,%dx
  mov 4104,%ecx
  .byte 0xf2,0x66,0x6d
  mov %edi,8192
  mov %ecx,8196
  jnc .L616_c$
  movb $0x1,8448
.L616_c$: nop
  jnz .L616_z$
  movb $0x2,8449
.L616_z$: nop
  jns .L616_s$
  movb $0x3,8450
.L616_s$: nop
  jnp .L616_p$
  movb $0x4,8451
.L616_p$: nop
  jno .L616_o$
  movb $0x5,8452
.L616_o$: nop

    ret
         .size   rep_ins1w_cld, .-rep_ins1w_cld

    
.globl rep_ins1w_cld_constant
         .type   rep_ins1w_cld_constant, @function
rep_ins1w_cld_constant:
      cld

  mov $1,%edi
  mov $2,%dx
  mov $3,%ecx
  .byte 0xf2,0x66,0x6d
  mov %edi,8192
  mov %ecx,8196
  jnc .L617_c$
  movb $0x1,8448
.L617_c$: nop
  jnz .L617_z$
  movb $0x2,8449
.L617_z$: nop
  jns .L617_s$
  movb $0x3,8450
.L617_s$: nop
  jnp .L617_p$
  movb $0x4,8451
.L617_p$: nop
  jno .L617_o$
  movb $0x5,8452
.L617_o$: nop

    ret
         .size   rep_ins1w_cld_constant, .-rep_ins1w_cld_constant

    
.globl rep_ins1w_cld_allregs
         .type   rep_ins1w_cld_allregs, @function
rep_ins1w_cld_allregs:
      cld

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0x66,0x6d
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_ins1w_cld_allregs, .-rep_ins1w_cld_allregs

    
.globl rep_ins1w_std
         .type   rep_ins1w_std, @function
rep_ins1w_std:
      std

  mov 4096,%edi
  mov 4100,%dx
  mov 4104,%ecx
  .byte 0xf2,0x66,0x6d
  mov %edi,8192
  mov %ecx,8196
  jnc .L618_c$
  movb $0x1,8448
.L618_c$: nop
  jnz .L618_z$
  movb $0x2,8449
.L618_z$: nop
  jns .L618_s$
  movb $0x3,8450
.L618_s$: nop
  jnp .L618_p$
  movb $0x4,8451
.L618_p$: nop
  jno .L618_o$
  movb $0x5,8452
.L618_o$: nop

    ret
         .size   rep_ins1w_std, .-rep_ins1w_std

    
.globl rep_ins1w_std_constant
         .type   rep_ins1w_std_constant, @function
rep_ins1w_std_constant:
      std

  mov $1,%edi
  mov $2,%dx
  mov $3,%ecx
  .byte 0xf2,0x66,0x6d
  mov %edi,8192
  mov %ecx,8196
  jnc .L619_c$
  movb $0x1,8448
.L619_c$: nop
  jnz .L619_z$
  movb $0x2,8449
.L619_z$: nop
  jns .L619_s$
  movb $0x3,8450
.L619_s$: nop
  jnp .L619_p$
  movb $0x4,8451
.L619_p$: nop
  jno .L619_o$
  movb $0x5,8452
.L619_o$: nop

    ret
         .size   rep_ins1w_std_constant, .-rep_ins1w_std_constant

    
.globl rep_ins1w_std_allregs
         .type   rep_ins1w_std_allregs, @function
rep_ins1w_std_allregs:
      std

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0x66,0x6d
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_ins1w_std_allregs, .-rep_ins1w_std_allregs

    
.globl rep_ins1w
         .type   rep_ins1w, @function
rep_ins1w:
      

  mov 4096,%edi
  mov 4100,%dx
  mov 4104,%ecx
  .byte 0xf2,0x66,0x6d
  mov %edi,8192
  mov %ecx,8196
  jnc .L620_c$
  movb $0x1,8448
.L620_c$: nop
  jnz .L620_z$
  movb $0x2,8449
.L620_z$: nop
  jns .L620_s$
  movb $0x3,8450
.L620_s$: nop
  jnp .L620_p$
  movb $0x4,8451
.L620_p$: nop
  jno .L620_o$
  movb $0x5,8452
.L620_o$: nop

    ret
         .size   rep_ins1w, .-rep_ins1w

    
.globl rep_ins1w_constant
         .type   rep_ins1w_constant, @function
rep_ins1w_constant:
      

  mov $1,%edi
  mov $2,%dx
  mov $3,%ecx
  .byte 0xf2,0x66,0x6d
  mov %edi,8192
  mov %ecx,8196
  jnc .L621_c$
  movb $0x1,8448
.L621_c$: nop
  jnz .L621_z$
  movb $0x2,8449
.L621_z$: nop
  jns .L621_s$
  movb $0x3,8450
.L621_s$: nop
  jnp .L621_p$
  movb $0x4,8451
.L621_p$: nop
  jno .L621_o$
  movb $0x5,8452
.L621_o$: nop

    ret
         .size   rep_ins1w_constant, .-rep_ins1w_constant

    
.globl rep_ins1w_allregs
         .type   rep_ins1w_allregs, @function
rep_ins1w_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0x66,0x6d
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_ins1w_allregs, .-rep_ins1w_allregs

    
.globl rep_ins1l_cld
         .type   rep_ins1l_cld, @function
rep_ins1l_cld:
      cld

  mov 4096,%edi
  mov 4100,%dx
  mov 4104,%ecx
  .byte 0xf2,0x6d
  mov %edi,8192
  mov %ecx,8196
  jnc .L622_c$
  movb $0x1,8448
.L622_c$: nop
  jnz .L622_z$
  movb $0x2,8449
.L622_z$: nop
  jns .L622_s$
  movb $0x3,8450
.L622_s$: nop
  jnp .L622_p$
  movb $0x4,8451
.L622_p$: nop
  jno .L622_o$
  movb $0x5,8452
.L622_o$: nop

    ret
         .size   rep_ins1l_cld, .-rep_ins1l_cld

    
.globl rep_ins1l_cld_constant
         .type   rep_ins1l_cld_constant, @function
rep_ins1l_cld_constant:
      cld

  mov $1,%edi
  mov $2,%dx
  mov $3,%ecx
  .byte 0xf2,0x6d
  mov %edi,8192
  mov %ecx,8196
  jnc .L623_c$
  movb $0x1,8448
.L623_c$: nop
  jnz .L623_z$
  movb $0x2,8449
.L623_z$: nop
  jns .L623_s$
  movb $0x3,8450
.L623_s$: nop
  jnp .L623_p$
  movb $0x4,8451
.L623_p$: nop
  jno .L623_o$
  movb $0x5,8452
.L623_o$: nop

    ret
         .size   rep_ins1l_cld_constant, .-rep_ins1l_cld_constant

    
.globl rep_ins1l_cld_allregs
         .type   rep_ins1l_cld_allregs, @function
rep_ins1l_cld_allregs:
      cld

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0x6d
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_ins1l_cld_allregs, .-rep_ins1l_cld_allregs

    
.globl rep_ins1l_std
         .type   rep_ins1l_std, @function
rep_ins1l_std:
      std

  mov 4096,%edi
  mov 4100,%dx
  mov 4104,%ecx
  .byte 0xf2,0x6d
  mov %edi,8192
  mov %ecx,8196
  jnc .L624_c$
  movb $0x1,8448
.L624_c$: nop
  jnz .L624_z$
  movb $0x2,8449
.L624_z$: nop
  jns .L624_s$
  movb $0x3,8450
.L624_s$: nop
  jnp .L624_p$
  movb $0x4,8451
.L624_p$: nop
  jno .L624_o$
  movb $0x5,8452
.L624_o$: nop

    ret
         .size   rep_ins1l_std, .-rep_ins1l_std

    
.globl rep_ins1l_std_constant
         .type   rep_ins1l_std_constant, @function
rep_ins1l_std_constant:
      std

  mov $1,%edi
  mov $2,%dx
  mov $3,%ecx
  .byte 0xf2,0x6d
  mov %edi,8192
  mov %ecx,8196
  jnc .L625_c$
  movb $0x1,8448
.L625_c$: nop
  jnz .L625_z$
  movb $0x2,8449
.L625_z$: nop
  jns .L625_s$
  movb $0x3,8450
.L625_s$: nop
  jnp .L625_p$
  movb $0x4,8451
.L625_p$: nop
  jno .L625_o$
  movb $0x5,8452
.L625_o$: nop

    ret
         .size   rep_ins1l_std_constant, .-rep_ins1l_std_constant

    
.globl rep_ins1l_std_allregs
         .type   rep_ins1l_std_allregs, @function
rep_ins1l_std_allregs:
      std

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0x6d
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_ins1l_std_allregs, .-rep_ins1l_std_allregs

    
.globl rep_ins1l
         .type   rep_ins1l, @function
rep_ins1l:
      

  mov 4096,%edi
  mov 4100,%dx
  mov 4104,%ecx
  .byte 0xf2,0x6d
  mov %edi,8192
  mov %ecx,8196
  jnc .L626_c$
  movb $0x1,8448
.L626_c$: nop
  jnz .L626_z$
  movb $0x2,8449
.L626_z$: nop
  jns .L626_s$
  movb $0x3,8450
.L626_s$: nop
  jnp .L626_p$
  movb $0x4,8451
.L626_p$: nop
  jno .L626_o$
  movb $0x5,8452
.L626_o$: nop

    ret
         .size   rep_ins1l, .-rep_ins1l

    
.globl rep_ins1l_constant
         .type   rep_ins1l_constant, @function
rep_ins1l_constant:
      

  mov $1,%edi
  mov $2,%dx
  mov $3,%ecx
  .byte 0xf2,0x6d
  mov %edi,8192
  mov %ecx,8196
  jnc .L627_c$
  movb $0x1,8448
.L627_c$: nop
  jnz .L627_z$
  movb $0x2,8449
.L627_z$: nop
  jns .L627_s$
  movb $0x3,8450
.L627_s$: nop
  jnp .L627_p$
  movb $0x4,8451
.L627_p$: nop
  jno .L627_o$
  movb $0x5,8452
.L627_o$: nop

    ret
         .size   rep_ins1l_constant, .-rep_ins1l_constant

    
.globl rep_ins1l_allregs
         .type   rep_ins1l_allregs, @function
rep_ins1l_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0x6d
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_ins1l_allregs, .-rep_ins1l_allregs

    
.globl rep_ins2b_cld
         .type   rep_ins2b_cld, @function
rep_ins2b_cld:
      cld

  mov 4096,%edi
  mov 4100,%dx
  mov 4104,%ecx
  .byte 0xf3,0x6c
  mov %edi,8192
  mov %ecx,8196
  jnc .L628_c$
  movb $0x1,8448
.L628_c$: nop
  jnz .L628_z$
  movb $0x2,8449
.L628_z$: nop
  jns .L628_s$
  movb $0x3,8450
.L628_s$: nop
  jnp .L628_p$
  movb $0x4,8451
.L628_p$: nop
  jno .L628_o$
  movb $0x5,8452
.L628_o$: nop

    ret
         .size   rep_ins2b_cld, .-rep_ins2b_cld

    
.globl rep_ins2b_cld_constant
         .type   rep_ins2b_cld_constant, @function
rep_ins2b_cld_constant:
      cld

  mov $1,%edi
  mov $2,%dx
  mov $3,%ecx
  .byte 0xf3,0x6c
  mov %edi,8192
  mov %ecx,8196
  jnc .L629_c$
  movb $0x1,8448
.L629_c$: nop
  jnz .L629_z$
  movb $0x2,8449
.L629_z$: nop
  jns .L629_s$
  movb $0x3,8450
.L629_s$: nop
  jnp .L629_p$
  movb $0x4,8451
.L629_p$: nop
  jno .L629_o$
  movb $0x5,8452
.L629_o$: nop

    ret
         .size   rep_ins2b_cld_constant, .-rep_ins2b_cld_constant

    
.globl rep_ins2b_cld_allregs
         .type   rep_ins2b_cld_allregs, @function
rep_ins2b_cld_allregs:
      cld

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0x6c
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_ins2b_cld_allregs, .-rep_ins2b_cld_allregs

    
.globl rep_ins2b_std
         .type   rep_ins2b_std, @function
rep_ins2b_std:
      std

  mov 4096,%edi
  mov 4100,%dx
  mov 4104,%ecx
  .byte 0xf3,0x6c
  mov %edi,8192
  mov %ecx,8196
  jnc .L630_c$
  movb $0x1,8448
.L630_c$: nop
  jnz .L630_z$
  movb $0x2,8449
.L630_z$: nop
  jns .L630_s$
  movb $0x3,8450
.L630_s$: nop
  jnp .L630_p$
  movb $0x4,8451
.L630_p$: nop
  jno .L630_o$
  movb $0x5,8452
.L630_o$: nop

    ret
         .size   rep_ins2b_std, .-rep_ins2b_std

    
.globl rep_ins2b_std_constant
         .type   rep_ins2b_std_constant, @function
rep_ins2b_std_constant:
      std

  mov $1,%edi
  mov $2,%dx
  mov $3,%ecx
  .byte 0xf3,0x6c
  mov %edi,8192
  mov %ecx,8196
  jnc .L631_c$
  movb $0x1,8448
.L631_c$: nop
  jnz .L631_z$
  movb $0x2,8449
.L631_z$: nop
  jns .L631_s$
  movb $0x3,8450
.L631_s$: nop
  jnp .L631_p$
  movb $0x4,8451
.L631_p$: nop
  jno .L631_o$
  movb $0x5,8452
.L631_o$: nop

    ret
         .size   rep_ins2b_std_constant, .-rep_ins2b_std_constant

    
.globl rep_ins2b_std_allregs
         .type   rep_ins2b_std_allregs, @function
rep_ins2b_std_allregs:
      std

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0x6c
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_ins2b_std_allregs, .-rep_ins2b_std_allregs

    
.globl rep_ins2b
         .type   rep_ins2b, @function
rep_ins2b:
      

  mov 4096,%edi
  mov 4100,%dx
  mov 4104,%ecx
  .byte 0xf3,0x6c
  mov %edi,8192
  mov %ecx,8196
  jnc .L632_c$
  movb $0x1,8448
.L632_c$: nop
  jnz .L632_z$
  movb $0x2,8449
.L632_z$: nop
  jns .L632_s$
  movb $0x3,8450
.L632_s$: nop
  jnp .L632_p$
  movb $0x4,8451
.L632_p$: nop
  jno .L632_o$
  movb $0x5,8452
.L632_o$: nop

    ret
         .size   rep_ins2b, .-rep_ins2b

    
.globl rep_ins2b_constant
         .type   rep_ins2b_constant, @function
rep_ins2b_constant:
      

  mov $1,%edi
  mov $2,%dx
  mov $3,%ecx
  .byte 0xf3,0x6c
  mov %edi,8192
  mov %ecx,8196
  jnc .L633_c$
  movb $0x1,8448
.L633_c$: nop
  jnz .L633_z$
  movb $0x2,8449
.L633_z$: nop
  jns .L633_s$
  movb $0x3,8450
.L633_s$: nop
  jnp .L633_p$
  movb $0x4,8451
.L633_p$: nop
  jno .L633_o$
  movb $0x5,8452
.L633_o$: nop

    ret
         .size   rep_ins2b_constant, .-rep_ins2b_constant

    
.globl rep_ins2b_allregs
         .type   rep_ins2b_allregs, @function
rep_ins2b_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0x6c
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_ins2b_allregs, .-rep_ins2b_allregs

    
.globl rep_ins2w_cld
         .type   rep_ins2w_cld, @function
rep_ins2w_cld:
      cld

  mov 4096,%edi
  mov 4100,%dx
  mov 4104,%ecx
  .byte 0xf3,0x66,0x6d
  mov %edi,8192
  mov %ecx,8196
  jnc .L634_c$
  movb $0x1,8448
.L634_c$: nop
  jnz .L634_z$
  movb $0x2,8449
.L634_z$: nop
  jns .L634_s$
  movb $0x3,8450
.L634_s$: nop
  jnp .L634_p$
  movb $0x4,8451
.L634_p$: nop
  jno .L634_o$
  movb $0x5,8452
.L634_o$: nop

    ret
         .size   rep_ins2w_cld, .-rep_ins2w_cld

    
.globl rep_ins2w_cld_constant
         .type   rep_ins2w_cld_constant, @function
rep_ins2w_cld_constant:
      cld

  mov $1,%edi
  mov $2,%dx
  mov $3,%ecx
  .byte 0xf3,0x66,0x6d
  mov %edi,8192
  mov %ecx,8196
  jnc .L635_c$
  movb $0x1,8448
.L635_c$: nop
  jnz .L635_z$
  movb $0x2,8449
.L635_z$: nop
  jns .L635_s$
  movb $0x3,8450
.L635_s$: nop
  jnp .L635_p$
  movb $0x4,8451
.L635_p$: nop
  jno .L635_o$
  movb $0x5,8452
.L635_o$: nop

    ret
         .size   rep_ins2w_cld_constant, .-rep_ins2w_cld_constant

    
.globl rep_ins2w_cld_allregs
         .type   rep_ins2w_cld_allregs, @function
rep_ins2w_cld_allregs:
      cld

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0x66,0x6d
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_ins2w_cld_allregs, .-rep_ins2w_cld_allregs

    
.globl rep_ins2w_std
         .type   rep_ins2w_std, @function
rep_ins2w_std:
      std

  mov 4096,%edi
  mov 4100,%dx
  mov 4104,%ecx
  .byte 0xf3,0x66,0x6d
  mov %edi,8192
  mov %ecx,8196
  jnc .L636_c$
  movb $0x1,8448
.L636_c$: nop
  jnz .L636_z$
  movb $0x2,8449
.L636_z$: nop
  jns .L636_s$
  movb $0x3,8450
.L636_s$: nop
  jnp .L636_p$
  movb $0x4,8451
.L636_p$: nop
  jno .L636_o$
  movb $0x5,8452
.L636_o$: nop

    ret
         .size   rep_ins2w_std, .-rep_ins2w_std

    
.globl rep_ins2w_std_constant
         .type   rep_ins2w_std_constant, @function
rep_ins2w_std_constant:
      std

  mov $1,%edi
  mov $2,%dx
  mov $3,%ecx
  .byte 0xf3,0x66,0x6d
  mov %edi,8192
  mov %ecx,8196
  jnc .L637_c$
  movb $0x1,8448
.L637_c$: nop
  jnz .L637_z$
  movb $0x2,8449
.L637_z$: nop
  jns .L637_s$
  movb $0x3,8450
.L637_s$: nop
  jnp .L637_p$
  movb $0x4,8451
.L637_p$: nop
  jno .L637_o$
  movb $0x5,8452
.L637_o$: nop

    ret
         .size   rep_ins2w_std_constant, .-rep_ins2w_std_constant

    
.globl rep_ins2w_std_allregs
         .type   rep_ins2w_std_allregs, @function
rep_ins2w_std_allregs:
      std

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0x66,0x6d
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_ins2w_std_allregs, .-rep_ins2w_std_allregs

    
.globl rep_ins2w
         .type   rep_ins2w, @function
rep_ins2w:
      

  mov 4096,%edi
  mov 4100,%dx
  mov 4104,%ecx
  .byte 0xf3,0x66,0x6d
  mov %edi,8192
  mov %ecx,8196
  jnc .L638_c$
  movb $0x1,8448
.L638_c$: nop
  jnz .L638_z$
  movb $0x2,8449
.L638_z$: nop
  jns .L638_s$
  movb $0x3,8450
.L638_s$: nop
  jnp .L638_p$
  movb $0x4,8451
.L638_p$: nop
  jno .L638_o$
  movb $0x5,8452
.L638_o$: nop

    ret
         .size   rep_ins2w, .-rep_ins2w

    
.globl rep_ins2w_constant
         .type   rep_ins2w_constant, @function
rep_ins2w_constant:
      

  mov $1,%edi
  mov $2,%dx
  mov $3,%ecx
  .byte 0xf3,0x66,0x6d
  mov %edi,8192
  mov %ecx,8196
  jnc .L639_c$
  movb $0x1,8448
.L639_c$: nop
  jnz .L639_z$
  movb $0x2,8449
.L639_z$: nop
  jns .L639_s$
  movb $0x3,8450
.L639_s$: nop
  jnp .L639_p$
  movb $0x4,8451
.L639_p$: nop
  jno .L639_o$
  movb $0x5,8452
.L639_o$: nop

    ret
         .size   rep_ins2w_constant, .-rep_ins2w_constant

    
.globl rep_ins2w_allregs
         .type   rep_ins2w_allregs, @function
rep_ins2w_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0x66,0x6d
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_ins2w_allregs, .-rep_ins2w_allregs

    
.globl rep_ins2l_cld
         .type   rep_ins2l_cld, @function
rep_ins2l_cld:
      cld

  mov 4096,%edi
  mov 4100,%dx
  mov 4104,%ecx
  .byte 0xf3,0x6d
  mov %edi,8192
  mov %ecx,8196
  jnc .L640_c$
  movb $0x1,8448
.L640_c$: nop
  jnz .L640_z$
  movb $0x2,8449
.L640_z$: nop
  jns .L640_s$
  movb $0x3,8450
.L640_s$: nop
  jnp .L640_p$
  movb $0x4,8451
.L640_p$: nop
  jno .L640_o$
  movb $0x5,8452
.L640_o$: nop

    ret
         .size   rep_ins2l_cld, .-rep_ins2l_cld

    
.globl rep_ins2l_cld_constant
         .type   rep_ins2l_cld_constant, @function
rep_ins2l_cld_constant:
      cld

  mov $1,%edi
  mov $2,%dx
  mov $3,%ecx
  .byte 0xf3,0x6d
  mov %edi,8192
  mov %ecx,8196
  jnc .L641_c$
  movb $0x1,8448
.L641_c$: nop
  jnz .L641_z$
  movb $0x2,8449
.L641_z$: nop
  jns .L641_s$
  movb $0x3,8450
.L641_s$: nop
  jnp .L641_p$
  movb $0x4,8451
.L641_p$: nop
  jno .L641_o$
  movb $0x5,8452
.L641_o$: nop

    ret
         .size   rep_ins2l_cld_constant, .-rep_ins2l_cld_constant

    
.globl rep_ins2l_cld_allregs
         .type   rep_ins2l_cld_allregs, @function
rep_ins2l_cld_allregs:
      cld

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0x6d
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_ins2l_cld_allregs, .-rep_ins2l_cld_allregs

    
.globl rep_ins2l_std
         .type   rep_ins2l_std, @function
rep_ins2l_std:
      std

  mov 4096,%edi
  mov 4100,%dx
  mov 4104,%ecx
  .byte 0xf3,0x6d
  mov %edi,8192
  mov %ecx,8196
  jnc .L642_c$
  movb $0x1,8448
.L642_c$: nop
  jnz .L642_z$
  movb $0x2,8449
.L642_z$: nop
  jns .L642_s$
  movb $0x3,8450
.L642_s$: nop
  jnp .L642_p$
  movb $0x4,8451
.L642_p$: nop
  jno .L642_o$
  movb $0x5,8452
.L642_o$: nop

    ret
         .size   rep_ins2l_std, .-rep_ins2l_std

    
.globl rep_ins2l_std_constant
         .type   rep_ins2l_std_constant, @function
rep_ins2l_std_constant:
      std

  mov $1,%edi
  mov $2,%dx
  mov $3,%ecx
  .byte 0xf3,0x6d
  mov %edi,8192
  mov %ecx,8196
  jnc .L643_c$
  movb $0x1,8448
.L643_c$: nop
  jnz .L643_z$
  movb $0x2,8449
.L643_z$: nop
  jns .L643_s$
  movb $0x3,8450
.L643_s$: nop
  jnp .L643_p$
  movb $0x4,8451
.L643_p$: nop
  jno .L643_o$
  movb $0x5,8452
.L643_o$: nop

    ret
         .size   rep_ins2l_std_constant, .-rep_ins2l_std_constant

    
.globl rep_ins2l_std_allregs
         .type   rep_ins2l_std_allregs, @function
rep_ins2l_std_allregs:
      std

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0x6d
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_ins2l_std_allregs, .-rep_ins2l_std_allregs

    
.globl rep_ins2l
         .type   rep_ins2l, @function
rep_ins2l:
      

  mov 4096,%edi
  mov 4100,%dx
  mov 4104,%ecx
  .byte 0xf3,0x6d
  mov %edi,8192
  mov %ecx,8196
  jnc .L644_c$
  movb $0x1,8448
.L644_c$: nop
  jnz .L644_z$
  movb $0x2,8449
.L644_z$: nop
  jns .L644_s$
  movb $0x3,8450
.L644_s$: nop
  jnp .L644_p$
  movb $0x4,8451
.L644_p$: nop
  jno .L644_o$
  movb $0x5,8452
.L644_o$: nop

    ret
         .size   rep_ins2l, .-rep_ins2l

    
.globl rep_ins2l_constant
         .type   rep_ins2l_constant, @function
rep_ins2l_constant:
      

  mov $1,%edi
  mov $2,%dx
  mov $3,%ecx
  .byte 0xf3,0x6d
  mov %edi,8192
  mov %ecx,8196
  jnc .L645_c$
  movb $0x1,8448
.L645_c$: nop
  jnz .L645_z$
  movb $0x2,8449
.L645_z$: nop
  jns .L645_s$
  movb $0x3,8450
.L645_s$: nop
  jnp .L645_p$
  movb $0x4,8451
.L645_p$: nop
  jno .L645_o$
  movb $0x5,8452
.L645_o$: nop

    ret
         .size   rep_ins2l_constant, .-rep_ins2l_constant

    
.globl rep_ins2l_allregs
         .type   rep_ins2l_allregs, @function
rep_ins2l_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0x6d
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_ins2l_allregs, .-rep_ins2l_allregs

    
.globl rep_lods1b_cld
         .type   rep_lods1b_cld, @function
rep_lods1b_cld:
      cld

  mov 4096,%esi
  mov 4100,%ecx
  .byte 0xf2,0xac
  mov %esi,8192
  mov %al,8196
  mov %ecx,8200
  jnc .L646_c$
  movb $0x1,8448
.L646_c$: nop
  jnz .L646_z$
  movb $0x2,8449
.L646_z$: nop
  jns .L646_s$
  movb $0x3,8450
.L646_s$: nop
  jnp .L646_p$
  movb $0x4,8451
.L646_p$: nop
  jno .L646_o$
  movb $0x5,8452
.L646_o$: nop

    ret
         .size   rep_lods1b_cld, .-rep_lods1b_cld

    
.globl rep_lods1b_cld_constant
         .type   rep_lods1b_cld_constant, @function
rep_lods1b_cld_constant:
      cld

  mov $1,%esi
  mov $2,%ecx
  .byte 0xf2,0xac
  mov %esi,8192
  mov %al,8196
  mov %ecx,8200
  jnc .L647_c$
  movb $0x1,8448
.L647_c$: nop
  jnz .L647_z$
  movb $0x2,8449
.L647_z$: nop
  jns .L647_s$
  movb $0x3,8450
.L647_s$: nop
  jnp .L647_p$
  movb $0x4,8451
.L647_p$: nop
  jno .L647_o$
  movb $0x5,8452
.L647_o$: nop

    ret
         .size   rep_lods1b_cld_constant, .-rep_lods1b_cld_constant

    
.globl rep_lods1b_cld_allregs
         .type   rep_lods1b_cld_allregs, @function
rep_lods1b_cld_allregs:
      cld

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0xac
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_lods1b_cld_allregs, .-rep_lods1b_cld_allregs

    
.globl rep_lods1b_std
         .type   rep_lods1b_std, @function
rep_lods1b_std:
      std

  mov 4096,%esi
  mov 4100,%ecx
  .byte 0xf2,0xac
  mov %esi,8192
  mov %al,8196
  mov %ecx,8200
  jnc .L648_c$
  movb $0x1,8448
.L648_c$: nop
  jnz .L648_z$
  movb $0x2,8449
.L648_z$: nop
  jns .L648_s$
  movb $0x3,8450
.L648_s$: nop
  jnp .L648_p$
  movb $0x4,8451
.L648_p$: nop
  jno .L648_o$
  movb $0x5,8452
.L648_o$: nop

    ret
         .size   rep_lods1b_std, .-rep_lods1b_std

    
.globl rep_lods1b_std_constant
         .type   rep_lods1b_std_constant, @function
rep_lods1b_std_constant:
      std

  mov $1,%esi
  mov $2,%ecx
  .byte 0xf2,0xac
  mov %esi,8192
  mov %al,8196
  mov %ecx,8200
  jnc .L649_c$
  movb $0x1,8448
.L649_c$: nop
  jnz .L649_z$
  movb $0x2,8449
.L649_z$: nop
  jns .L649_s$
  movb $0x3,8450
.L649_s$: nop
  jnp .L649_p$
  movb $0x4,8451
.L649_p$: nop
  jno .L649_o$
  movb $0x5,8452
.L649_o$: nop

    ret
         .size   rep_lods1b_std_constant, .-rep_lods1b_std_constant

    
.globl rep_lods1b_std_allregs
         .type   rep_lods1b_std_allregs, @function
rep_lods1b_std_allregs:
      std

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0xac
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_lods1b_std_allregs, .-rep_lods1b_std_allregs

    
.globl rep_lods1b
         .type   rep_lods1b, @function
rep_lods1b:
      

  mov 4096,%esi
  mov 4100,%ecx
  .byte 0xf2,0xac
  mov %esi,8192
  mov %al,8196
  mov %ecx,8200
  jnc .L650_c$
  movb $0x1,8448
.L650_c$: nop
  jnz .L650_z$
  movb $0x2,8449
.L650_z$: nop
  jns .L650_s$
  movb $0x3,8450
.L650_s$: nop
  jnp .L650_p$
  movb $0x4,8451
.L650_p$: nop
  jno .L650_o$
  movb $0x5,8452
.L650_o$: nop

    ret
         .size   rep_lods1b, .-rep_lods1b

    
.globl rep_lods1b_constant
         .type   rep_lods1b_constant, @function
rep_lods1b_constant:
      

  mov $1,%esi
  mov $2,%ecx
  .byte 0xf2,0xac
  mov %esi,8192
  mov %al,8196
  mov %ecx,8200
  jnc .L651_c$
  movb $0x1,8448
.L651_c$: nop
  jnz .L651_z$
  movb $0x2,8449
.L651_z$: nop
  jns .L651_s$
  movb $0x3,8450
.L651_s$: nop
  jnp .L651_p$
  movb $0x4,8451
.L651_p$: nop
  jno .L651_o$
  movb $0x5,8452
.L651_o$: nop

    ret
         .size   rep_lods1b_constant, .-rep_lods1b_constant

    
.globl rep_lods1b_allregs
         .type   rep_lods1b_allregs, @function
rep_lods1b_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0xac
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_lods1b_allregs, .-rep_lods1b_allregs

    
.globl rep_lods1w_cld
         .type   rep_lods1w_cld, @function
rep_lods1w_cld:
      cld

  mov 4096,%esi
  mov 4100,%ecx
  .byte 0xf2,0x66,0xad
  mov %esi,8192
  mov %ax,8196
  mov %ecx,8200
  jnc .L652_c$
  movb $0x1,8448
.L652_c$: nop
  jnz .L652_z$
  movb $0x2,8449
.L652_z$: nop
  jns .L652_s$
  movb $0x3,8450
.L652_s$: nop
  jnp .L652_p$
  movb $0x4,8451
.L652_p$: nop
  jno .L652_o$
  movb $0x5,8452
.L652_o$: nop

    ret
         .size   rep_lods1w_cld, .-rep_lods1w_cld

    
.globl rep_lods1w_cld_constant
         .type   rep_lods1w_cld_constant, @function
rep_lods1w_cld_constant:
      cld

  mov $1,%esi
  mov $2,%ecx
  .byte 0xf2,0x66,0xad
  mov %esi,8192
  mov %ax,8196
  mov %ecx,8200
  jnc .L653_c$
  movb $0x1,8448
.L653_c$: nop
  jnz .L653_z$
  movb $0x2,8449
.L653_z$: nop
  jns .L653_s$
  movb $0x3,8450
.L653_s$: nop
  jnp .L653_p$
  movb $0x4,8451
.L653_p$: nop
  jno .L653_o$
  movb $0x5,8452
.L653_o$: nop

    ret
         .size   rep_lods1w_cld_constant, .-rep_lods1w_cld_constant

    
.globl rep_lods1w_cld_allregs
         .type   rep_lods1w_cld_allregs, @function
rep_lods1w_cld_allregs:
      cld

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0x66,0xad
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_lods1w_cld_allregs, .-rep_lods1w_cld_allregs

    
.globl rep_lods1w_std
         .type   rep_lods1w_std, @function
rep_lods1w_std:
      std

  mov 4096,%esi
  mov 4100,%ecx
  .byte 0xf2,0x66,0xad
  mov %esi,8192
  mov %ax,8196
  mov %ecx,8200
  jnc .L654_c$
  movb $0x1,8448
.L654_c$: nop
  jnz .L654_z$
  movb $0x2,8449
.L654_z$: nop
  jns .L654_s$
  movb $0x3,8450
.L654_s$: nop
  jnp .L654_p$
  movb $0x4,8451
.L654_p$: nop
  jno .L654_o$
  movb $0x5,8452
.L654_o$: nop

    ret
         .size   rep_lods1w_std, .-rep_lods1w_std

    
.globl rep_lods1w_std_constant
         .type   rep_lods1w_std_constant, @function
rep_lods1w_std_constant:
      std

  mov $1,%esi
  mov $2,%ecx
  .byte 0xf2,0x66,0xad
  mov %esi,8192
  mov %ax,8196
  mov %ecx,8200
  jnc .L655_c$
  movb $0x1,8448
.L655_c$: nop
  jnz .L655_z$
  movb $0x2,8449
.L655_z$: nop
  jns .L655_s$
  movb $0x3,8450
.L655_s$: nop
  jnp .L655_p$
  movb $0x4,8451
.L655_p$: nop
  jno .L655_o$
  movb $0x5,8452
.L655_o$: nop

    ret
         .size   rep_lods1w_std_constant, .-rep_lods1w_std_constant

    
.globl rep_lods1w_std_allregs
         .type   rep_lods1w_std_allregs, @function
rep_lods1w_std_allregs:
      std

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0x66,0xad
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_lods1w_std_allregs, .-rep_lods1w_std_allregs

    
.globl rep_lods1w
         .type   rep_lods1w, @function
rep_lods1w:
      

  mov 4096,%esi
  mov 4100,%ecx
  .byte 0xf2,0x66,0xad
  mov %esi,8192
  mov %ax,8196
  mov %ecx,8200
  jnc .L656_c$
  movb $0x1,8448
.L656_c$: nop
  jnz .L656_z$
  movb $0x2,8449
.L656_z$: nop
  jns .L656_s$
  movb $0x3,8450
.L656_s$: nop
  jnp .L656_p$
  movb $0x4,8451
.L656_p$: nop
  jno .L656_o$
  movb $0x5,8452
.L656_o$: nop

    ret
         .size   rep_lods1w, .-rep_lods1w

    
.globl rep_lods1w_constant
         .type   rep_lods1w_constant, @function
rep_lods1w_constant:
      

  mov $1,%esi
  mov $2,%ecx
  .byte 0xf2,0x66,0xad
  mov %esi,8192
  mov %ax,8196
  mov %ecx,8200
  jnc .L657_c$
  movb $0x1,8448
.L657_c$: nop
  jnz .L657_z$
  movb $0x2,8449
.L657_z$: nop
  jns .L657_s$
  movb $0x3,8450
.L657_s$: nop
  jnp .L657_p$
  movb $0x4,8451
.L657_p$: nop
  jno .L657_o$
  movb $0x5,8452
.L657_o$: nop

    ret
         .size   rep_lods1w_constant, .-rep_lods1w_constant

    
.globl rep_lods1w_allregs
         .type   rep_lods1w_allregs, @function
rep_lods1w_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0x66,0xad
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_lods1w_allregs, .-rep_lods1w_allregs

    
.globl rep_lods1l_cld
         .type   rep_lods1l_cld, @function
rep_lods1l_cld:
      cld

  mov 4096,%esi
  mov 4100,%ecx
  .byte 0xf2,0xad
  mov %esi,8192
  mov %eax,8196
  mov %ecx,8200
  jnc .L658_c$
  movb $0x1,8448
.L658_c$: nop
  jnz .L658_z$
  movb $0x2,8449
.L658_z$: nop
  jns .L658_s$
  movb $0x3,8450
.L658_s$: nop
  jnp .L658_p$
  movb $0x4,8451
.L658_p$: nop
  jno .L658_o$
  movb $0x5,8452
.L658_o$: nop

    ret
         .size   rep_lods1l_cld, .-rep_lods1l_cld

    
.globl rep_lods1l_cld_constant
         .type   rep_lods1l_cld_constant, @function
rep_lods1l_cld_constant:
      cld

  mov $1,%esi
  mov $2,%ecx
  .byte 0xf2,0xad
  mov %esi,8192
  mov %eax,8196
  mov %ecx,8200
  jnc .L659_c$
  movb $0x1,8448
.L659_c$: nop
  jnz .L659_z$
  movb $0x2,8449
.L659_z$: nop
  jns .L659_s$
  movb $0x3,8450
.L659_s$: nop
  jnp .L659_p$
  movb $0x4,8451
.L659_p$: nop
  jno .L659_o$
  movb $0x5,8452
.L659_o$: nop

    ret
         .size   rep_lods1l_cld_constant, .-rep_lods1l_cld_constant

    
.globl rep_lods1l_cld_allregs
         .type   rep_lods1l_cld_allregs, @function
rep_lods1l_cld_allregs:
      cld

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0xad
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_lods1l_cld_allregs, .-rep_lods1l_cld_allregs

    
.globl rep_lods1l_std
         .type   rep_lods1l_std, @function
rep_lods1l_std:
      std

  mov 4096,%esi
  mov 4100,%ecx
  .byte 0xf2,0xad
  mov %esi,8192
  mov %eax,8196
  mov %ecx,8200
  jnc .L660_c$
  movb $0x1,8448
.L660_c$: nop
  jnz .L660_z$
  movb $0x2,8449
.L660_z$: nop
  jns .L660_s$
  movb $0x3,8450
.L660_s$: nop
  jnp .L660_p$
  movb $0x4,8451
.L660_p$: nop
  jno .L660_o$
  movb $0x5,8452
.L660_o$: nop

    ret
         .size   rep_lods1l_std, .-rep_lods1l_std

    
.globl rep_lods1l_std_constant
         .type   rep_lods1l_std_constant, @function
rep_lods1l_std_constant:
      std

  mov $1,%esi
  mov $2,%ecx
  .byte 0xf2,0xad
  mov %esi,8192
  mov %eax,8196
  mov %ecx,8200
  jnc .L661_c$
  movb $0x1,8448
.L661_c$: nop
  jnz .L661_z$
  movb $0x2,8449
.L661_z$: nop
  jns .L661_s$
  movb $0x3,8450
.L661_s$: nop
  jnp .L661_p$
  movb $0x4,8451
.L661_p$: nop
  jno .L661_o$
  movb $0x5,8452
.L661_o$: nop

    ret
         .size   rep_lods1l_std_constant, .-rep_lods1l_std_constant

    
.globl rep_lods1l_std_allregs
         .type   rep_lods1l_std_allregs, @function
rep_lods1l_std_allregs:
      std

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0xad
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_lods1l_std_allregs, .-rep_lods1l_std_allregs

    
.globl rep_lods1l
         .type   rep_lods1l, @function
rep_lods1l:
      

  mov 4096,%esi
  mov 4100,%ecx
  .byte 0xf2,0xad
  mov %esi,8192
  mov %eax,8196
  mov %ecx,8200
  jnc .L662_c$
  movb $0x1,8448
.L662_c$: nop
  jnz .L662_z$
  movb $0x2,8449
.L662_z$: nop
  jns .L662_s$
  movb $0x3,8450
.L662_s$: nop
  jnp .L662_p$
  movb $0x4,8451
.L662_p$: nop
  jno .L662_o$
  movb $0x5,8452
.L662_o$: nop

    ret
         .size   rep_lods1l, .-rep_lods1l

    
.globl rep_lods1l_constant
         .type   rep_lods1l_constant, @function
rep_lods1l_constant:
      

  mov $1,%esi
  mov $2,%ecx
  .byte 0xf2,0xad
  mov %esi,8192
  mov %eax,8196
  mov %ecx,8200
  jnc .L663_c$
  movb $0x1,8448
.L663_c$: nop
  jnz .L663_z$
  movb $0x2,8449
.L663_z$: nop
  jns .L663_s$
  movb $0x3,8450
.L663_s$: nop
  jnp .L663_p$
  movb $0x4,8451
.L663_p$: nop
  jno .L663_o$
  movb $0x5,8452
.L663_o$: nop

    ret
         .size   rep_lods1l_constant, .-rep_lods1l_constant

    
.globl rep_lods1l_allregs
         .type   rep_lods1l_allregs, @function
rep_lods1l_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0xad
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_lods1l_allregs, .-rep_lods1l_allregs

    
.globl rep_lods2b_cld
         .type   rep_lods2b_cld, @function
rep_lods2b_cld:
      cld

  mov 4096,%esi
  mov 4100,%ecx
  .byte 0xf3,0xac
  mov %esi,8192
  mov %al,8196
  mov %ecx,8200
  jnc .L664_c$
  movb $0x1,8448
.L664_c$: nop
  jnz .L664_z$
  movb $0x2,8449
.L664_z$: nop
  jns .L664_s$
  movb $0x3,8450
.L664_s$: nop
  jnp .L664_p$
  movb $0x4,8451
.L664_p$: nop
  jno .L664_o$
  movb $0x5,8452
.L664_o$: nop

    ret
         .size   rep_lods2b_cld, .-rep_lods2b_cld

    
.globl rep_lods2b_cld_constant
         .type   rep_lods2b_cld_constant, @function
rep_lods2b_cld_constant:
      cld

  mov $1,%esi
  mov $2,%ecx
  .byte 0xf3,0xac
  mov %esi,8192
  mov %al,8196
  mov %ecx,8200
  jnc .L665_c$
  movb $0x1,8448
.L665_c$: nop
  jnz .L665_z$
  movb $0x2,8449
.L665_z$: nop
  jns .L665_s$
  movb $0x3,8450
.L665_s$: nop
  jnp .L665_p$
  movb $0x4,8451
.L665_p$: nop
  jno .L665_o$
  movb $0x5,8452
.L665_o$: nop

    ret
         .size   rep_lods2b_cld_constant, .-rep_lods2b_cld_constant

    
.globl rep_lods2b_cld_allregs
         .type   rep_lods2b_cld_allregs, @function
rep_lods2b_cld_allregs:
      cld

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0xac
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_lods2b_cld_allregs, .-rep_lods2b_cld_allregs

    
.globl rep_lods2b_std
         .type   rep_lods2b_std, @function
rep_lods2b_std:
      std

  mov 4096,%esi
  mov 4100,%ecx
  .byte 0xf3,0xac
  mov %esi,8192
  mov %al,8196
  mov %ecx,8200
  jnc .L666_c$
  movb $0x1,8448
.L666_c$: nop
  jnz .L666_z$
  movb $0x2,8449
.L666_z$: nop
  jns .L666_s$
  movb $0x3,8450
.L666_s$: nop
  jnp .L666_p$
  movb $0x4,8451
.L666_p$: nop
  jno .L666_o$
  movb $0x5,8452
.L666_o$: nop

    ret
         .size   rep_lods2b_std, .-rep_lods2b_std

    
.globl rep_lods2b_std_constant
         .type   rep_lods2b_std_constant, @function
rep_lods2b_std_constant:
      std

  mov $1,%esi
  mov $2,%ecx
  .byte 0xf3,0xac
  mov %esi,8192
  mov %al,8196
  mov %ecx,8200
  jnc .L667_c$
  movb $0x1,8448
.L667_c$: nop
  jnz .L667_z$
  movb $0x2,8449
.L667_z$: nop
  jns .L667_s$
  movb $0x3,8450
.L667_s$: nop
  jnp .L667_p$
  movb $0x4,8451
.L667_p$: nop
  jno .L667_o$
  movb $0x5,8452
.L667_o$: nop

    ret
         .size   rep_lods2b_std_constant, .-rep_lods2b_std_constant

    
.globl rep_lods2b_std_allregs
         .type   rep_lods2b_std_allregs, @function
rep_lods2b_std_allregs:
      std

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0xac
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_lods2b_std_allregs, .-rep_lods2b_std_allregs

    
.globl rep_lods2b
         .type   rep_lods2b, @function
rep_lods2b:
      

  mov 4096,%esi
  mov 4100,%ecx
  .byte 0xf3,0xac
  mov %esi,8192
  mov %al,8196
  mov %ecx,8200
  jnc .L668_c$
  movb $0x1,8448
.L668_c$: nop
  jnz .L668_z$
  movb $0x2,8449
.L668_z$: nop
  jns .L668_s$
  movb $0x3,8450
.L668_s$: nop
  jnp .L668_p$
  movb $0x4,8451
.L668_p$: nop
  jno .L668_o$
  movb $0x5,8452
.L668_o$: nop

    ret
         .size   rep_lods2b, .-rep_lods2b

    
.globl rep_lods2b_constant
         .type   rep_lods2b_constant, @function
rep_lods2b_constant:
      

  mov $1,%esi
  mov $2,%ecx
  .byte 0xf3,0xac
  mov %esi,8192
  mov %al,8196
  mov %ecx,8200
  jnc .L669_c$
  movb $0x1,8448
.L669_c$: nop
  jnz .L669_z$
  movb $0x2,8449
.L669_z$: nop
  jns .L669_s$
  movb $0x3,8450
.L669_s$: nop
  jnp .L669_p$
  movb $0x4,8451
.L669_p$: nop
  jno .L669_o$
  movb $0x5,8452
.L669_o$: nop

    ret
         .size   rep_lods2b_constant, .-rep_lods2b_constant

    
.globl rep_lods2b_allregs
         .type   rep_lods2b_allregs, @function
rep_lods2b_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0xac
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_lods2b_allregs, .-rep_lods2b_allregs

    
.globl rep_lods2w_cld
         .type   rep_lods2w_cld, @function
rep_lods2w_cld:
      cld

  mov 4096,%esi
  mov 4100,%ecx
  .byte 0xf3,0x66,0xad
  mov %esi,8192
  mov %ax,8196
  mov %ecx,8200
  jnc .L670_c$
  movb $0x1,8448
.L670_c$: nop
  jnz .L670_z$
  movb $0x2,8449
.L670_z$: nop
  jns .L670_s$
  movb $0x3,8450
.L670_s$: nop
  jnp .L670_p$
  movb $0x4,8451
.L670_p$: nop
  jno .L670_o$
  movb $0x5,8452
.L670_o$: nop

    ret
         .size   rep_lods2w_cld, .-rep_lods2w_cld

    
.globl rep_lods2w_cld_constant
         .type   rep_lods2w_cld_constant, @function
rep_lods2w_cld_constant:
      cld

  mov $1,%esi
  mov $2,%ecx
  .byte 0xf3,0x66,0xad
  mov %esi,8192
  mov %ax,8196
  mov %ecx,8200
  jnc .L671_c$
  movb $0x1,8448
.L671_c$: nop
  jnz .L671_z$
  movb $0x2,8449
.L671_z$: nop
  jns .L671_s$
  movb $0x3,8450
.L671_s$: nop
  jnp .L671_p$
  movb $0x4,8451
.L671_p$: nop
  jno .L671_o$
  movb $0x5,8452
.L671_o$: nop

    ret
         .size   rep_lods2w_cld_constant, .-rep_lods2w_cld_constant

    
.globl rep_lods2w_cld_allregs
         .type   rep_lods2w_cld_allregs, @function
rep_lods2w_cld_allregs:
      cld

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0x66,0xad
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_lods2w_cld_allregs, .-rep_lods2w_cld_allregs

    
.globl rep_lods2w_std
         .type   rep_lods2w_std, @function
rep_lods2w_std:
      std

  mov 4096,%esi
  mov 4100,%ecx
  .byte 0xf3,0x66,0xad
  mov %esi,8192
  mov %ax,8196
  mov %ecx,8200
  jnc .L672_c$
  movb $0x1,8448
.L672_c$: nop
  jnz .L672_z$
  movb $0x2,8449
.L672_z$: nop
  jns .L672_s$
  movb $0x3,8450
.L672_s$: nop
  jnp .L672_p$
  movb $0x4,8451
.L672_p$: nop
  jno .L672_o$
  movb $0x5,8452
.L672_o$: nop

    ret
         .size   rep_lods2w_std, .-rep_lods2w_std

    
.globl rep_lods2w_std_constant
         .type   rep_lods2w_std_constant, @function
rep_lods2w_std_constant:
      std

  mov $1,%esi
  mov $2,%ecx
  .byte 0xf3,0x66,0xad
  mov %esi,8192
  mov %ax,8196
  mov %ecx,8200
  jnc .L673_c$
  movb $0x1,8448
.L673_c$: nop
  jnz .L673_z$
  movb $0x2,8449
.L673_z$: nop
  jns .L673_s$
  movb $0x3,8450
.L673_s$: nop
  jnp .L673_p$
  movb $0x4,8451
.L673_p$: nop
  jno .L673_o$
  movb $0x5,8452
.L673_o$: nop

    ret
         .size   rep_lods2w_std_constant, .-rep_lods2w_std_constant

    
.globl rep_lods2w_std_allregs
         .type   rep_lods2w_std_allregs, @function
rep_lods2w_std_allregs:
      std

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0x66,0xad
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_lods2w_std_allregs, .-rep_lods2w_std_allregs

    
.globl rep_lods2w
         .type   rep_lods2w, @function
rep_lods2w:
      

  mov 4096,%esi
  mov 4100,%ecx
  .byte 0xf3,0x66,0xad
  mov %esi,8192
  mov %ax,8196
  mov %ecx,8200
  jnc .L674_c$
  movb $0x1,8448
.L674_c$: nop
  jnz .L674_z$
  movb $0x2,8449
.L674_z$: nop
  jns .L674_s$
  movb $0x3,8450
.L674_s$: nop
  jnp .L674_p$
  movb $0x4,8451
.L674_p$: nop
  jno .L674_o$
  movb $0x5,8452
.L674_o$: nop

    ret
         .size   rep_lods2w, .-rep_lods2w

    
.globl rep_lods2w_constant
         .type   rep_lods2w_constant, @function
rep_lods2w_constant:
      

  mov $1,%esi
  mov $2,%ecx
  .byte 0xf3,0x66,0xad
  mov %esi,8192
  mov %ax,8196
  mov %ecx,8200
  jnc .L675_c$
  movb $0x1,8448
.L675_c$: nop
  jnz .L675_z$
  movb $0x2,8449
.L675_z$: nop
  jns .L675_s$
  movb $0x3,8450
.L675_s$: nop
  jnp .L675_p$
  movb $0x4,8451
.L675_p$: nop
  jno .L675_o$
  movb $0x5,8452
.L675_o$: nop

    ret
         .size   rep_lods2w_constant, .-rep_lods2w_constant

    
.globl rep_lods2w_allregs
         .type   rep_lods2w_allregs, @function
rep_lods2w_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0x66,0xad
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_lods2w_allregs, .-rep_lods2w_allregs

    
.globl rep_lods2l_cld
         .type   rep_lods2l_cld, @function
rep_lods2l_cld:
      cld

  mov 4096,%esi
  mov 4100,%ecx
  .byte 0xf3,0xad
  mov %esi,8192
  mov %eax,8196
  mov %ecx,8200
  jnc .L676_c$
  movb $0x1,8448
.L676_c$: nop
  jnz .L676_z$
  movb $0x2,8449
.L676_z$: nop
  jns .L676_s$
  movb $0x3,8450
.L676_s$: nop
  jnp .L676_p$
  movb $0x4,8451
.L676_p$: nop
  jno .L676_o$
  movb $0x5,8452
.L676_o$: nop

    ret
         .size   rep_lods2l_cld, .-rep_lods2l_cld

    
.globl rep_lods2l_cld_constant
         .type   rep_lods2l_cld_constant, @function
rep_lods2l_cld_constant:
      cld

  mov $1,%esi
  mov $2,%ecx
  .byte 0xf3,0xad
  mov %esi,8192
  mov %eax,8196
  mov %ecx,8200
  jnc .L677_c$
  movb $0x1,8448
.L677_c$: nop
  jnz .L677_z$
  movb $0x2,8449
.L677_z$: nop
  jns .L677_s$
  movb $0x3,8450
.L677_s$: nop
  jnp .L677_p$
  movb $0x4,8451
.L677_p$: nop
  jno .L677_o$
  movb $0x5,8452
.L677_o$: nop

    ret
         .size   rep_lods2l_cld_constant, .-rep_lods2l_cld_constant

    
.globl rep_lods2l_cld_allregs
         .type   rep_lods2l_cld_allregs, @function
rep_lods2l_cld_allregs:
      cld

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0xad
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_lods2l_cld_allregs, .-rep_lods2l_cld_allregs

    
.globl rep_lods2l_std
         .type   rep_lods2l_std, @function
rep_lods2l_std:
      std

  mov 4096,%esi
  mov 4100,%ecx
  .byte 0xf3,0xad
  mov %esi,8192
  mov %eax,8196
  mov %ecx,8200
  jnc .L678_c$
  movb $0x1,8448
.L678_c$: nop
  jnz .L678_z$
  movb $0x2,8449
.L678_z$: nop
  jns .L678_s$
  movb $0x3,8450
.L678_s$: nop
  jnp .L678_p$
  movb $0x4,8451
.L678_p$: nop
  jno .L678_o$
  movb $0x5,8452
.L678_o$: nop

    ret
         .size   rep_lods2l_std, .-rep_lods2l_std

    
.globl rep_lods2l_std_constant
         .type   rep_lods2l_std_constant, @function
rep_lods2l_std_constant:
      std

  mov $1,%esi
  mov $2,%ecx
  .byte 0xf3,0xad
  mov %esi,8192
  mov %eax,8196
  mov %ecx,8200
  jnc .L679_c$
  movb $0x1,8448
.L679_c$: nop
  jnz .L679_z$
  movb $0x2,8449
.L679_z$: nop
  jns .L679_s$
  movb $0x3,8450
.L679_s$: nop
  jnp .L679_p$
  movb $0x4,8451
.L679_p$: nop
  jno .L679_o$
  movb $0x5,8452
.L679_o$: nop

    ret
         .size   rep_lods2l_std_constant, .-rep_lods2l_std_constant

    
.globl rep_lods2l_std_allregs
         .type   rep_lods2l_std_allregs, @function
rep_lods2l_std_allregs:
      std

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0xad
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_lods2l_std_allregs, .-rep_lods2l_std_allregs

    
.globl rep_lods2l
         .type   rep_lods2l, @function
rep_lods2l:
      

  mov 4096,%esi
  mov 4100,%ecx
  .byte 0xf3,0xad
  mov %esi,8192
  mov %eax,8196
  mov %ecx,8200
  jnc .L680_c$
  movb $0x1,8448
.L680_c$: nop
  jnz .L680_z$
  movb $0x2,8449
.L680_z$: nop
  jns .L680_s$
  movb $0x3,8450
.L680_s$: nop
  jnp .L680_p$
  movb $0x4,8451
.L680_p$: nop
  jno .L680_o$
  movb $0x5,8452
.L680_o$: nop

    ret
         .size   rep_lods2l, .-rep_lods2l

    
.globl rep_lods2l_constant
         .type   rep_lods2l_constant, @function
rep_lods2l_constant:
      

  mov $1,%esi
  mov $2,%ecx
  .byte 0xf3,0xad
  mov %esi,8192
  mov %eax,8196
  mov %ecx,8200
  jnc .L681_c$
  movb $0x1,8448
.L681_c$: nop
  jnz .L681_z$
  movb $0x2,8449
.L681_z$: nop
  jns .L681_s$
  movb $0x3,8450
.L681_s$: nop
  jnp .L681_p$
  movb $0x4,8451
.L681_p$: nop
  jno .L681_o$
  movb $0x5,8452
.L681_o$: nop

    ret
         .size   rep_lods2l_constant, .-rep_lods2l_constant

    
.globl rep_lods2l_allregs
         .type   rep_lods2l_allregs, @function
rep_lods2l_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0xad
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_lods2l_allregs, .-rep_lods2l_allregs

    
.globl rep_movs1b_cld
         .type   rep_movs1b_cld, @function
rep_movs1b_cld:
      cld

  mov 4096,%esi
  mov 4100,%edi
  mov 4104,%ecx
  .byte 0xf2,0xa4
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L682_c$
  movb $0x1,8448
.L682_c$: nop
  jnz .L682_z$
  movb $0x2,8449
.L682_z$: nop
  jns .L682_s$
  movb $0x3,8450
.L682_s$: nop
  jnp .L682_p$
  movb $0x4,8451
.L682_p$: nop
  jno .L682_o$
  movb $0x5,8452
.L682_o$: nop

    ret
         .size   rep_movs1b_cld, .-rep_movs1b_cld

    
.globl rep_movs1b_cld_constant
         .type   rep_movs1b_cld_constant, @function
rep_movs1b_cld_constant:
      cld

  mov $1,%esi
  mov $2,%edi
  mov $3,%ecx
  .byte 0xf2,0xa4
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L683_c$
  movb $0x1,8448
.L683_c$: nop
  jnz .L683_z$
  movb $0x2,8449
.L683_z$: nop
  jns .L683_s$
  movb $0x3,8450
.L683_s$: nop
  jnp .L683_p$
  movb $0x4,8451
.L683_p$: nop
  jno .L683_o$
  movb $0x5,8452
.L683_o$: nop

    ret
         .size   rep_movs1b_cld_constant, .-rep_movs1b_cld_constant

    
.globl rep_movs1b_cld_allregs
         .type   rep_movs1b_cld_allregs, @function
rep_movs1b_cld_allregs:
      cld

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0xa4
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_movs1b_cld_allregs, .-rep_movs1b_cld_allregs

    
.globl rep_movs1b_std
         .type   rep_movs1b_std, @function
rep_movs1b_std:
      std

  mov 4096,%esi
  mov 4100,%edi
  mov 4104,%ecx
  .byte 0xf2,0xa4
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L684_c$
  movb $0x1,8448
.L684_c$: nop
  jnz .L684_z$
  movb $0x2,8449
.L684_z$: nop
  jns .L684_s$
  movb $0x3,8450
.L684_s$: nop
  jnp .L684_p$
  movb $0x4,8451
.L684_p$: nop
  jno .L684_o$
  movb $0x5,8452
.L684_o$: nop

    ret
         .size   rep_movs1b_std, .-rep_movs1b_std

    
.globl rep_movs1b_std_constant
         .type   rep_movs1b_std_constant, @function
rep_movs1b_std_constant:
      std

  mov $1,%esi
  mov $2,%edi
  mov $3,%ecx
  .byte 0xf2,0xa4
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L685_c$
  movb $0x1,8448
.L685_c$: nop
  jnz .L685_z$
  movb $0x2,8449
.L685_z$: nop
  jns .L685_s$
  movb $0x3,8450
.L685_s$: nop
  jnp .L685_p$
  movb $0x4,8451
.L685_p$: nop
  jno .L685_o$
  movb $0x5,8452
.L685_o$: nop

    ret
         .size   rep_movs1b_std_constant, .-rep_movs1b_std_constant

    
.globl rep_movs1b_std_allregs
         .type   rep_movs1b_std_allregs, @function
rep_movs1b_std_allregs:
      std

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0xa4
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_movs1b_std_allregs, .-rep_movs1b_std_allregs

    
.globl rep_movs1b
         .type   rep_movs1b, @function
rep_movs1b:
      

  mov 4096,%esi
  mov 4100,%edi
  mov 4104,%ecx
  .byte 0xf2,0xa4
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L686_c$
  movb $0x1,8448
.L686_c$: nop
  jnz .L686_z$
  movb $0x2,8449
.L686_z$: nop
  jns .L686_s$
  movb $0x3,8450
.L686_s$: nop
  jnp .L686_p$
  movb $0x4,8451
.L686_p$: nop
  jno .L686_o$
  movb $0x5,8452
.L686_o$: nop

    ret
         .size   rep_movs1b, .-rep_movs1b

    
.globl rep_movs1b_constant
         .type   rep_movs1b_constant, @function
rep_movs1b_constant:
      

  mov $1,%esi
  mov $2,%edi
  mov $3,%ecx
  .byte 0xf2,0xa4
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L687_c$
  movb $0x1,8448
.L687_c$: nop
  jnz .L687_z$
  movb $0x2,8449
.L687_z$: nop
  jns .L687_s$
  movb $0x3,8450
.L687_s$: nop
  jnp .L687_p$
  movb $0x4,8451
.L687_p$: nop
  jno .L687_o$
  movb $0x5,8452
.L687_o$: nop

    ret
         .size   rep_movs1b_constant, .-rep_movs1b_constant

    
.globl rep_movs1b_allregs
         .type   rep_movs1b_allregs, @function
rep_movs1b_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0xa4
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_movs1b_allregs, .-rep_movs1b_allregs

    
.globl rep_movs1w_cld
         .type   rep_movs1w_cld, @function
rep_movs1w_cld:
      cld

  mov 4096,%esi
  mov 4100,%edi
  mov 4104,%ecx
  .byte 0xf2,0x66,0xa5
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L688_c$
  movb $0x1,8448
.L688_c$: nop
  jnz .L688_z$
  movb $0x2,8449
.L688_z$: nop
  jns .L688_s$
  movb $0x3,8450
.L688_s$: nop
  jnp .L688_p$
  movb $0x4,8451
.L688_p$: nop
  jno .L688_o$
  movb $0x5,8452
.L688_o$: nop

    ret
         .size   rep_movs1w_cld, .-rep_movs1w_cld

    
.globl rep_movs1w_cld_constant
         .type   rep_movs1w_cld_constant, @function
rep_movs1w_cld_constant:
      cld

  mov $1,%esi
  mov $2,%edi
  mov $3,%ecx
  .byte 0xf2,0x66,0xa5
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L689_c$
  movb $0x1,8448
.L689_c$: nop
  jnz .L689_z$
  movb $0x2,8449
.L689_z$: nop
  jns .L689_s$
  movb $0x3,8450
.L689_s$: nop
  jnp .L689_p$
  movb $0x4,8451
.L689_p$: nop
  jno .L689_o$
  movb $0x5,8452
.L689_o$: nop

    ret
         .size   rep_movs1w_cld_constant, .-rep_movs1w_cld_constant

    
.globl rep_movs1w_cld_allregs
         .type   rep_movs1w_cld_allregs, @function
rep_movs1w_cld_allregs:
      cld

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0x66,0xa5
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_movs1w_cld_allregs, .-rep_movs1w_cld_allregs

    
.globl rep_movs1w_std
         .type   rep_movs1w_std, @function
rep_movs1w_std:
      std

  mov 4096,%esi
  mov 4100,%edi
  mov 4104,%ecx
  .byte 0xf2,0x66,0xa5
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L690_c$
  movb $0x1,8448
.L690_c$: nop
  jnz .L690_z$
  movb $0x2,8449
.L690_z$: nop
  jns .L690_s$
  movb $0x3,8450
.L690_s$: nop
  jnp .L690_p$
  movb $0x4,8451
.L690_p$: nop
  jno .L690_o$
  movb $0x5,8452
.L690_o$: nop

    ret
         .size   rep_movs1w_std, .-rep_movs1w_std

    
.globl rep_movs1w_std_constant
         .type   rep_movs1w_std_constant, @function
rep_movs1w_std_constant:
      std

  mov $1,%esi
  mov $2,%edi
  mov $3,%ecx
  .byte 0xf2,0x66,0xa5
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L691_c$
  movb $0x1,8448
.L691_c$: nop
  jnz .L691_z$
  movb $0x2,8449
.L691_z$: nop
  jns .L691_s$
  movb $0x3,8450
.L691_s$: nop
  jnp .L691_p$
  movb $0x4,8451
.L691_p$: nop
  jno .L691_o$
  movb $0x5,8452
.L691_o$: nop

    ret
         .size   rep_movs1w_std_constant, .-rep_movs1w_std_constant

    
.globl rep_movs1w_std_allregs
         .type   rep_movs1w_std_allregs, @function
rep_movs1w_std_allregs:
      std

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0x66,0xa5
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_movs1w_std_allregs, .-rep_movs1w_std_allregs

    
.globl rep_movs1w
         .type   rep_movs1w, @function
rep_movs1w:
      

  mov 4096,%esi
  mov 4100,%edi
  mov 4104,%ecx
  .byte 0xf2,0x66,0xa5
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L692_c$
  movb $0x1,8448
.L692_c$: nop
  jnz .L692_z$
  movb $0x2,8449
.L692_z$: nop
  jns .L692_s$
  movb $0x3,8450
.L692_s$: nop
  jnp .L692_p$
  movb $0x4,8451
.L692_p$: nop
  jno .L692_o$
  movb $0x5,8452
.L692_o$: nop

    ret
         .size   rep_movs1w, .-rep_movs1w

    
.globl rep_movs1w_constant
         .type   rep_movs1w_constant, @function
rep_movs1w_constant:
      

  mov $1,%esi
  mov $2,%edi
  mov $3,%ecx
  .byte 0xf2,0x66,0xa5
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L693_c$
  movb $0x1,8448
.L693_c$: nop
  jnz .L693_z$
  movb $0x2,8449
.L693_z$: nop
  jns .L693_s$
  movb $0x3,8450
.L693_s$: nop
  jnp .L693_p$
  movb $0x4,8451
.L693_p$: nop
  jno .L693_o$
  movb $0x5,8452
.L693_o$: nop

    ret
         .size   rep_movs1w_constant, .-rep_movs1w_constant

    
.globl rep_movs1w_allregs
         .type   rep_movs1w_allregs, @function
rep_movs1w_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0x66,0xa5
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_movs1w_allregs, .-rep_movs1w_allregs

    
.globl rep_movs1l_cld
         .type   rep_movs1l_cld, @function
rep_movs1l_cld:
      cld

  mov 4096,%esi
  mov 4100,%edi
  mov 4104,%ecx
  .byte 0xf2,0xa5
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L694_c$
  movb $0x1,8448
.L694_c$: nop
  jnz .L694_z$
  movb $0x2,8449
.L694_z$: nop
  jns .L694_s$
  movb $0x3,8450
.L694_s$: nop
  jnp .L694_p$
  movb $0x4,8451
.L694_p$: nop
  jno .L694_o$
  movb $0x5,8452
.L694_o$: nop

    ret
         .size   rep_movs1l_cld, .-rep_movs1l_cld

    
.globl rep_movs1l_cld_constant
         .type   rep_movs1l_cld_constant, @function
rep_movs1l_cld_constant:
      cld

  mov $1,%esi
  mov $2,%edi
  mov $3,%ecx
  .byte 0xf2,0xa5
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L695_c$
  movb $0x1,8448
.L695_c$: nop
  jnz .L695_z$
  movb $0x2,8449
.L695_z$: nop
  jns .L695_s$
  movb $0x3,8450
.L695_s$: nop
  jnp .L695_p$
  movb $0x4,8451
.L695_p$: nop
  jno .L695_o$
  movb $0x5,8452
.L695_o$: nop

    ret
         .size   rep_movs1l_cld_constant, .-rep_movs1l_cld_constant

    
.globl rep_movs1l_cld_allregs
         .type   rep_movs1l_cld_allregs, @function
rep_movs1l_cld_allregs:
      cld

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0xa5
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_movs1l_cld_allregs, .-rep_movs1l_cld_allregs

    
.globl rep_movs1l_std
         .type   rep_movs1l_std, @function
rep_movs1l_std:
      std

  mov 4096,%esi
  mov 4100,%edi
  mov 4104,%ecx
  .byte 0xf2,0xa5
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L696_c$
  movb $0x1,8448
.L696_c$: nop
  jnz .L696_z$
  movb $0x2,8449
.L696_z$: nop
  jns .L696_s$
  movb $0x3,8450
.L696_s$: nop
  jnp .L696_p$
  movb $0x4,8451
.L696_p$: nop
  jno .L696_o$
  movb $0x5,8452
.L696_o$: nop

    ret
         .size   rep_movs1l_std, .-rep_movs1l_std

    
.globl rep_movs1l_std_constant
         .type   rep_movs1l_std_constant, @function
rep_movs1l_std_constant:
      std

  mov $1,%esi
  mov $2,%edi
  mov $3,%ecx
  .byte 0xf2,0xa5
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L697_c$
  movb $0x1,8448
.L697_c$: nop
  jnz .L697_z$
  movb $0x2,8449
.L697_z$: nop
  jns .L697_s$
  movb $0x3,8450
.L697_s$: nop
  jnp .L697_p$
  movb $0x4,8451
.L697_p$: nop
  jno .L697_o$
  movb $0x5,8452
.L697_o$: nop

    ret
         .size   rep_movs1l_std_constant, .-rep_movs1l_std_constant

    
.globl rep_movs1l_std_allregs
         .type   rep_movs1l_std_allregs, @function
rep_movs1l_std_allregs:
      std

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0xa5
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_movs1l_std_allregs, .-rep_movs1l_std_allregs

    
.globl rep_movs1l
         .type   rep_movs1l, @function
rep_movs1l:
      

  mov 4096,%esi
  mov 4100,%edi
  mov 4104,%ecx
  .byte 0xf2,0xa5
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L698_c$
  movb $0x1,8448
.L698_c$: nop
  jnz .L698_z$
  movb $0x2,8449
.L698_z$: nop
  jns .L698_s$
  movb $0x3,8450
.L698_s$: nop
  jnp .L698_p$
  movb $0x4,8451
.L698_p$: nop
  jno .L698_o$
  movb $0x5,8452
.L698_o$: nop

    ret
         .size   rep_movs1l, .-rep_movs1l

    
.globl rep_movs1l_constant
         .type   rep_movs1l_constant, @function
rep_movs1l_constant:
      

  mov $1,%esi
  mov $2,%edi
  mov $3,%ecx
  .byte 0xf2,0xa5
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L699_c$
  movb $0x1,8448
.L699_c$: nop
  jnz .L699_z$
  movb $0x2,8449
.L699_z$: nop
  jns .L699_s$
  movb $0x3,8450
.L699_s$: nop
  jnp .L699_p$
  movb $0x4,8451
.L699_p$: nop
  jno .L699_o$
  movb $0x5,8452
.L699_o$: nop

    ret
         .size   rep_movs1l_constant, .-rep_movs1l_constant

    
.globl rep_movs1l_allregs
         .type   rep_movs1l_allregs, @function
rep_movs1l_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0xa5
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_movs1l_allregs, .-rep_movs1l_allregs

    
.globl rep_movs2b_cld
         .type   rep_movs2b_cld, @function
rep_movs2b_cld:
      cld

  mov 4096,%esi
  mov 4100,%edi
  mov 4104,%ecx
  .byte 0xf3,0xa4
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L700_c$
  movb $0x1,8448
.L700_c$: nop
  jnz .L700_z$
  movb $0x2,8449
.L700_z$: nop
  jns .L700_s$
  movb $0x3,8450
.L700_s$: nop
  jnp .L700_p$
  movb $0x4,8451
.L700_p$: nop
  jno .L700_o$
  movb $0x5,8452
.L700_o$: nop

    ret
         .size   rep_movs2b_cld, .-rep_movs2b_cld

    
.globl rep_movs2b_cld_constant
         .type   rep_movs2b_cld_constant, @function
rep_movs2b_cld_constant:
      cld

  mov $1,%esi
  mov $2,%edi
  mov $3,%ecx
  .byte 0xf3,0xa4
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L701_c$
  movb $0x1,8448
.L701_c$: nop
  jnz .L701_z$
  movb $0x2,8449
.L701_z$: nop
  jns .L701_s$
  movb $0x3,8450
.L701_s$: nop
  jnp .L701_p$
  movb $0x4,8451
.L701_p$: nop
  jno .L701_o$
  movb $0x5,8452
.L701_o$: nop

    ret
         .size   rep_movs2b_cld_constant, .-rep_movs2b_cld_constant

    
.globl rep_movs2b_cld_allregs
         .type   rep_movs2b_cld_allregs, @function
rep_movs2b_cld_allregs:
      cld

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0xa4
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_movs2b_cld_allregs, .-rep_movs2b_cld_allregs

    
.globl rep_movs2b_std
         .type   rep_movs2b_std, @function
rep_movs2b_std:
      std

  mov 4096,%esi
  mov 4100,%edi
  mov 4104,%ecx
  .byte 0xf3,0xa4
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L702_c$
  movb $0x1,8448
.L702_c$: nop
  jnz .L702_z$
  movb $0x2,8449
.L702_z$: nop
  jns .L702_s$
  movb $0x3,8450
.L702_s$: nop
  jnp .L702_p$
  movb $0x4,8451
.L702_p$: nop
  jno .L702_o$
  movb $0x5,8452
.L702_o$: nop

    ret
         .size   rep_movs2b_std, .-rep_movs2b_std

    
.globl rep_movs2b_std_constant
         .type   rep_movs2b_std_constant, @function
rep_movs2b_std_constant:
      std

  mov $1,%esi
  mov $2,%edi
  mov $3,%ecx
  .byte 0xf3,0xa4
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L703_c$
  movb $0x1,8448
.L703_c$: nop
  jnz .L703_z$
  movb $0x2,8449
.L703_z$: nop
  jns .L703_s$
  movb $0x3,8450
.L703_s$: nop
  jnp .L703_p$
  movb $0x4,8451
.L703_p$: nop
  jno .L703_o$
  movb $0x5,8452
.L703_o$: nop

    ret
         .size   rep_movs2b_std_constant, .-rep_movs2b_std_constant

    
.globl rep_movs2b_std_allregs
         .type   rep_movs2b_std_allregs, @function
rep_movs2b_std_allregs:
      std

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0xa4
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_movs2b_std_allregs, .-rep_movs2b_std_allregs

    
.globl rep_movs2b
         .type   rep_movs2b, @function
rep_movs2b:
      

  mov 4096,%esi
  mov 4100,%edi
  mov 4104,%ecx
  .byte 0xf3,0xa4
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L704_c$
  movb $0x1,8448
.L704_c$: nop
  jnz .L704_z$
  movb $0x2,8449
.L704_z$: nop
  jns .L704_s$
  movb $0x3,8450
.L704_s$: nop
  jnp .L704_p$
  movb $0x4,8451
.L704_p$: nop
  jno .L704_o$
  movb $0x5,8452
.L704_o$: nop

    ret
         .size   rep_movs2b, .-rep_movs2b

    
.globl rep_movs2b_constant
         .type   rep_movs2b_constant, @function
rep_movs2b_constant:
      

  mov $1,%esi
  mov $2,%edi
  mov $3,%ecx
  .byte 0xf3,0xa4
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L705_c$
  movb $0x1,8448
.L705_c$: nop
  jnz .L705_z$
  movb $0x2,8449
.L705_z$: nop
  jns .L705_s$
  movb $0x3,8450
.L705_s$: nop
  jnp .L705_p$
  movb $0x4,8451
.L705_p$: nop
  jno .L705_o$
  movb $0x5,8452
.L705_o$: nop

    ret
         .size   rep_movs2b_constant, .-rep_movs2b_constant

    
.globl rep_movs2b_allregs
         .type   rep_movs2b_allregs, @function
rep_movs2b_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0xa4
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_movs2b_allregs, .-rep_movs2b_allregs

    
.globl rep_movs2w_cld
         .type   rep_movs2w_cld, @function
rep_movs2w_cld:
      cld

  mov 4096,%esi
  mov 4100,%edi
  mov 4104,%ecx
  .byte 0xf3,0x66,0xa5
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L706_c$
  movb $0x1,8448
.L706_c$: nop
  jnz .L706_z$
  movb $0x2,8449
.L706_z$: nop
  jns .L706_s$
  movb $0x3,8450
.L706_s$: nop
  jnp .L706_p$
  movb $0x4,8451
.L706_p$: nop
  jno .L706_o$
  movb $0x5,8452
.L706_o$: nop

    ret
         .size   rep_movs2w_cld, .-rep_movs2w_cld

    
.globl rep_movs2w_cld_constant
         .type   rep_movs2w_cld_constant, @function
rep_movs2w_cld_constant:
      cld

  mov $1,%esi
  mov $2,%edi
  mov $3,%ecx
  .byte 0xf3,0x66,0xa5
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L707_c$
  movb $0x1,8448
.L707_c$: nop
  jnz .L707_z$
  movb $0x2,8449
.L707_z$: nop
  jns .L707_s$
  movb $0x3,8450
.L707_s$: nop
  jnp .L707_p$
  movb $0x4,8451
.L707_p$: nop
  jno .L707_o$
  movb $0x5,8452
.L707_o$: nop

    ret
         .size   rep_movs2w_cld_constant, .-rep_movs2w_cld_constant

    
.globl rep_movs2w_cld_allregs
         .type   rep_movs2w_cld_allregs, @function
rep_movs2w_cld_allregs:
      cld

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0x66,0xa5
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_movs2w_cld_allregs, .-rep_movs2w_cld_allregs

    
.globl rep_movs2w_std
         .type   rep_movs2w_std, @function
rep_movs2w_std:
      std

  mov 4096,%esi
  mov 4100,%edi
  mov 4104,%ecx
  .byte 0xf3,0x66,0xa5
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L708_c$
  movb $0x1,8448
.L708_c$: nop
  jnz .L708_z$
  movb $0x2,8449
.L708_z$: nop
  jns .L708_s$
  movb $0x3,8450
.L708_s$: nop
  jnp .L708_p$
  movb $0x4,8451
.L708_p$: nop
  jno .L708_o$
  movb $0x5,8452
.L708_o$: nop

    ret
         .size   rep_movs2w_std, .-rep_movs2w_std

    
.globl rep_movs2w_std_constant
         .type   rep_movs2w_std_constant, @function
rep_movs2w_std_constant:
      std

  mov $1,%esi
  mov $2,%edi
  mov $3,%ecx
  .byte 0xf3,0x66,0xa5
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L709_c$
  movb $0x1,8448
.L709_c$: nop
  jnz .L709_z$
  movb $0x2,8449
.L709_z$: nop
  jns .L709_s$
  movb $0x3,8450
.L709_s$: nop
  jnp .L709_p$
  movb $0x4,8451
.L709_p$: nop
  jno .L709_o$
  movb $0x5,8452
.L709_o$: nop

    ret
         .size   rep_movs2w_std_constant, .-rep_movs2w_std_constant

    
.globl rep_movs2w_std_allregs
         .type   rep_movs2w_std_allregs, @function
rep_movs2w_std_allregs:
      std

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0x66,0xa5
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_movs2w_std_allregs, .-rep_movs2w_std_allregs

    
.globl rep_movs2w
         .type   rep_movs2w, @function
rep_movs2w:
      

  mov 4096,%esi
  mov 4100,%edi
  mov 4104,%ecx
  .byte 0xf3,0x66,0xa5
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L710_c$
  movb $0x1,8448
.L710_c$: nop
  jnz .L710_z$
  movb $0x2,8449
.L710_z$: nop
  jns .L710_s$
  movb $0x3,8450
.L710_s$: nop
  jnp .L710_p$
  movb $0x4,8451
.L710_p$: nop
  jno .L710_o$
  movb $0x5,8452
.L710_o$: nop

    ret
         .size   rep_movs2w, .-rep_movs2w

    
.globl rep_movs2w_constant
         .type   rep_movs2w_constant, @function
rep_movs2w_constant:
      

  mov $1,%esi
  mov $2,%edi
  mov $3,%ecx
  .byte 0xf3,0x66,0xa5
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L711_c$
  movb $0x1,8448
.L711_c$: nop
  jnz .L711_z$
  movb $0x2,8449
.L711_z$: nop
  jns .L711_s$
  movb $0x3,8450
.L711_s$: nop
  jnp .L711_p$
  movb $0x4,8451
.L711_p$: nop
  jno .L711_o$
  movb $0x5,8452
.L711_o$: nop

    ret
         .size   rep_movs2w_constant, .-rep_movs2w_constant

    
.globl rep_movs2w_allregs
         .type   rep_movs2w_allregs, @function
rep_movs2w_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0x66,0xa5
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_movs2w_allregs, .-rep_movs2w_allregs

    
.globl rep_movs2l_cld
         .type   rep_movs2l_cld, @function
rep_movs2l_cld:
      cld

  mov 4096,%esi
  mov 4100,%edi
  mov 4104,%ecx
  .byte 0xf3,0xa5
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L712_c$
  movb $0x1,8448
.L712_c$: nop
  jnz .L712_z$
  movb $0x2,8449
.L712_z$: nop
  jns .L712_s$
  movb $0x3,8450
.L712_s$: nop
  jnp .L712_p$
  movb $0x4,8451
.L712_p$: nop
  jno .L712_o$
  movb $0x5,8452
.L712_o$: nop

    ret
         .size   rep_movs2l_cld, .-rep_movs2l_cld

    
.globl rep_movs2l_cld_constant
         .type   rep_movs2l_cld_constant, @function
rep_movs2l_cld_constant:
      cld

  mov $1,%esi
  mov $2,%edi
  mov $3,%ecx
  .byte 0xf3,0xa5
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L713_c$
  movb $0x1,8448
.L713_c$: nop
  jnz .L713_z$
  movb $0x2,8449
.L713_z$: nop
  jns .L713_s$
  movb $0x3,8450
.L713_s$: nop
  jnp .L713_p$
  movb $0x4,8451
.L713_p$: nop
  jno .L713_o$
  movb $0x5,8452
.L713_o$: nop

    ret
         .size   rep_movs2l_cld_constant, .-rep_movs2l_cld_constant

    
.globl rep_movs2l_cld_allregs
         .type   rep_movs2l_cld_allregs, @function
rep_movs2l_cld_allregs:
      cld

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0xa5
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_movs2l_cld_allregs, .-rep_movs2l_cld_allregs

    
.globl rep_movs2l_std
         .type   rep_movs2l_std, @function
rep_movs2l_std:
      std

  mov 4096,%esi
  mov 4100,%edi
  mov 4104,%ecx
  .byte 0xf3,0xa5
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L714_c$
  movb $0x1,8448
.L714_c$: nop
  jnz .L714_z$
  movb $0x2,8449
.L714_z$: nop
  jns .L714_s$
  movb $0x3,8450
.L714_s$: nop
  jnp .L714_p$
  movb $0x4,8451
.L714_p$: nop
  jno .L714_o$
  movb $0x5,8452
.L714_o$: nop

    ret
         .size   rep_movs2l_std, .-rep_movs2l_std

    
.globl rep_movs2l_std_constant
         .type   rep_movs2l_std_constant, @function
rep_movs2l_std_constant:
      std

  mov $1,%esi
  mov $2,%edi
  mov $3,%ecx
  .byte 0xf3,0xa5
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L715_c$
  movb $0x1,8448
.L715_c$: nop
  jnz .L715_z$
  movb $0x2,8449
.L715_z$: nop
  jns .L715_s$
  movb $0x3,8450
.L715_s$: nop
  jnp .L715_p$
  movb $0x4,8451
.L715_p$: nop
  jno .L715_o$
  movb $0x5,8452
.L715_o$: nop

    ret
         .size   rep_movs2l_std_constant, .-rep_movs2l_std_constant

    
.globl rep_movs2l_std_allregs
         .type   rep_movs2l_std_allregs, @function
rep_movs2l_std_allregs:
      std

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0xa5
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_movs2l_std_allregs, .-rep_movs2l_std_allregs

    
.globl rep_movs2l
         .type   rep_movs2l, @function
rep_movs2l:
      

  mov 4096,%esi
  mov 4100,%edi
  mov 4104,%ecx
  .byte 0xf3,0xa5
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L716_c$
  movb $0x1,8448
.L716_c$: nop
  jnz .L716_z$
  movb $0x2,8449
.L716_z$: nop
  jns .L716_s$
  movb $0x3,8450
.L716_s$: nop
  jnp .L716_p$
  movb $0x4,8451
.L716_p$: nop
  jno .L716_o$
  movb $0x5,8452
.L716_o$: nop

    ret
         .size   rep_movs2l, .-rep_movs2l

    
.globl rep_movs2l_constant
         .type   rep_movs2l_constant, @function
rep_movs2l_constant:
      

  mov $1,%esi
  mov $2,%edi
  mov $3,%ecx
  .byte 0xf3,0xa5
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L717_c$
  movb $0x1,8448
.L717_c$: nop
  jnz .L717_z$
  movb $0x2,8449
.L717_z$: nop
  jns .L717_s$
  movb $0x3,8450
.L717_s$: nop
  jnp .L717_p$
  movb $0x4,8451
.L717_p$: nop
  jno .L717_o$
  movb $0x5,8452
.L717_o$: nop

    ret
         .size   rep_movs2l_constant, .-rep_movs2l_constant

    
.globl rep_movs2l_allregs
         .type   rep_movs2l_allregs, @function
rep_movs2l_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0xa5
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_movs2l_allregs, .-rep_movs2l_allregs

    
.globl rep_outs1b_cld
         .type   rep_outs1b_cld, @function
rep_outs1b_cld:
      cld

  mov 4096,%esi
  mov 4100,%dx
  mov 4104,%ecx
  .byte 0xf2,0x6e
  mov %esi,8192
  mov %ecx,8196
  jnc .L718_c$
  movb $0x1,8448
.L718_c$: nop
  jnz .L718_z$
  movb $0x2,8449
.L718_z$: nop
  jns .L718_s$
  movb $0x3,8450
.L718_s$: nop
  jnp .L718_p$
  movb $0x4,8451
.L718_p$: nop
  jno .L718_o$
  movb $0x5,8452
.L718_o$: nop

    ret
         .size   rep_outs1b_cld, .-rep_outs1b_cld

    
.globl rep_outs1b_cld_constant
         .type   rep_outs1b_cld_constant, @function
rep_outs1b_cld_constant:
      cld

  mov $1,%esi
  mov $2,%dx
  mov $3,%ecx
  .byte 0xf2,0x6e
  mov %esi,8192
  mov %ecx,8196
  jnc .L719_c$
  movb $0x1,8448
.L719_c$: nop
  jnz .L719_z$
  movb $0x2,8449
.L719_z$: nop
  jns .L719_s$
  movb $0x3,8450
.L719_s$: nop
  jnp .L719_p$
  movb $0x4,8451
.L719_p$: nop
  jno .L719_o$
  movb $0x5,8452
.L719_o$: nop

    ret
         .size   rep_outs1b_cld_constant, .-rep_outs1b_cld_constant

    
.globl rep_outs1b_cld_allregs
         .type   rep_outs1b_cld_allregs, @function
rep_outs1b_cld_allregs:
      cld

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0x6e
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_outs1b_cld_allregs, .-rep_outs1b_cld_allregs

    
.globl rep_outs1b_std
         .type   rep_outs1b_std, @function
rep_outs1b_std:
      std

  mov 4096,%esi
  mov 4100,%dx
  mov 4104,%ecx
  .byte 0xf2,0x6e
  mov %esi,8192
  mov %ecx,8196
  jnc .L720_c$
  movb $0x1,8448
.L720_c$: nop
  jnz .L720_z$
  movb $0x2,8449
.L720_z$: nop
  jns .L720_s$
  movb $0x3,8450
.L720_s$: nop
  jnp .L720_p$
  movb $0x4,8451
.L720_p$: nop
  jno .L720_o$
  movb $0x5,8452
.L720_o$: nop

    ret
         .size   rep_outs1b_std, .-rep_outs1b_std

    
.globl rep_outs1b_std_constant
         .type   rep_outs1b_std_constant, @function
rep_outs1b_std_constant:
      std

  mov $1,%esi
  mov $2,%dx
  mov $3,%ecx
  .byte 0xf2,0x6e
  mov %esi,8192
  mov %ecx,8196
  jnc .L721_c$
  movb $0x1,8448
.L721_c$: nop
  jnz .L721_z$
  movb $0x2,8449
.L721_z$: nop
  jns .L721_s$
  movb $0x3,8450
.L721_s$: nop
  jnp .L721_p$
  movb $0x4,8451
.L721_p$: nop
  jno .L721_o$
  movb $0x5,8452
.L721_o$: nop

    ret
         .size   rep_outs1b_std_constant, .-rep_outs1b_std_constant

    
.globl rep_outs1b_std_allregs
         .type   rep_outs1b_std_allregs, @function
rep_outs1b_std_allregs:
      std

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0x6e
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_outs1b_std_allregs, .-rep_outs1b_std_allregs

    
.globl rep_outs1b
         .type   rep_outs1b, @function
rep_outs1b:
      

  mov 4096,%esi
  mov 4100,%dx
  mov 4104,%ecx
  .byte 0xf2,0x6e
  mov %esi,8192
  mov %ecx,8196
  jnc .L722_c$
  movb $0x1,8448
.L722_c$: nop
  jnz .L722_z$
  movb $0x2,8449
.L722_z$: nop
  jns .L722_s$
  movb $0x3,8450
.L722_s$: nop
  jnp .L722_p$
  movb $0x4,8451
.L722_p$: nop
  jno .L722_o$
  movb $0x5,8452
.L722_o$: nop

    ret
         .size   rep_outs1b, .-rep_outs1b

    
.globl rep_outs1b_constant
         .type   rep_outs1b_constant, @function
rep_outs1b_constant:
      

  mov $1,%esi
  mov $2,%dx
  mov $3,%ecx
  .byte 0xf2,0x6e
  mov %esi,8192
  mov %ecx,8196
  jnc .L723_c$
  movb $0x1,8448
.L723_c$: nop
  jnz .L723_z$
  movb $0x2,8449
.L723_z$: nop
  jns .L723_s$
  movb $0x3,8450
.L723_s$: nop
  jnp .L723_p$
  movb $0x4,8451
.L723_p$: nop
  jno .L723_o$
  movb $0x5,8452
.L723_o$: nop

    ret
         .size   rep_outs1b_constant, .-rep_outs1b_constant

    
.globl rep_outs1b_allregs
         .type   rep_outs1b_allregs, @function
rep_outs1b_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0x6e
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_outs1b_allregs, .-rep_outs1b_allregs

    
.globl rep_outs1w_cld
         .type   rep_outs1w_cld, @function
rep_outs1w_cld:
      cld

  mov 4096,%esi
  mov 4100,%dx
  mov 4104,%ecx
  .byte 0xf2,0x66,0x6f
  mov %esi,8192
  mov %ecx,8196
  jnc .L724_c$
  movb $0x1,8448
.L724_c$: nop
  jnz .L724_z$
  movb $0x2,8449
.L724_z$: nop
  jns .L724_s$
  movb $0x3,8450
.L724_s$: nop
  jnp .L724_p$
  movb $0x4,8451
.L724_p$: nop
  jno .L724_o$
  movb $0x5,8452
.L724_o$: nop

    ret
         .size   rep_outs1w_cld, .-rep_outs1w_cld

    
.globl rep_outs1w_cld_constant
         .type   rep_outs1w_cld_constant, @function
rep_outs1w_cld_constant:
      cld

  mov $1,%esi
  mov $2,%dx
  mov $3,%ecx
  .byte 0xf2,0x66,0x6f
  mov %esi,8192
  mov %ecx,8196
  jnc .L725_c$
  movb $0x1,8448
.L725_c$: nop
  jnz .L725_z$
  movb $0x2,8449
.L725_z$: nop
  jns .L725_s$
  movb $0x3,8450
.L725_s$: nop
  jnp .L725_p$
  movb $0x4,8451
.L725_p$: nop
  jno .L725_o$
  movb $0x5,8452
.L725_o$: nop

    ret
         .size   rep_outs1w_cld_constant, .-rep_outs1w_cld_constant

    
.globl rep_outs1w_cld_allregs
         .type   rep_outs1w_cld_allregs, @function
rep_outs1w_cld_allregs:
      cld

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0x66,0x6f
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_outs1w_cld_allregs, .-rep_outs1w_cld_allregs

    
.globl rep_outs1w_std
         .type   rep_outs1w_std, @function
rep_outs1w_std:
      std

  mov 4096,%esi
  mov 4100,%dx
  mov 4104,%ecx
  .byte 0xf2,0x66,0x6f
  mov %esi,8192
  mov %ecx,8196
  jnc .L726_c$
  movb $0x1,8448
.L726_c$: nop
  jnz .L726_z$
  movb $0x2,8449
.L726_z$: nop
  jns .L726_s$
  movb $0x3,8450
.L726_s$: nop
  jnp .L726_p$
  movb $0x4,8451
.L726_p$: nop
  jno .L726_o$
  movb $0x5,8452
.L726_o$: nop

    ret
         .size   rep_outs1w_std, .-rep_outs1w_std

    
.globl rep_outs1w_std_constant
         .type   rep_outs1w_std_constant, @function
rep_outs1w_std_constant:
      std

  mov $1,%esi
  mov $2,%dx
  mov $3,%ecx
  .byte 0xf2,0x66,0x6f
  mov %esi,8192
  mov %ecx,8196
  jnc .L727_c$
  movb $0x1,8448
.L727_c$: nop
  jnz .L727_z$
  movb $0x2,8449
.L727_z$: nop
  jns .L727_s$
  movb $0x3,8450
.L727_s$: nop
  jnp .L727_p$
  movb $0x4,8451
.L727_p$: nop
  jno .L727_o$
  movb $0x5,8452
.L727_o$: nop

    ret
         .size   rep_outs1w_std_constant, .-rep_outs1w_std_constant

    
.globl rep_outs1w_std_allregs
         .type   rep_outs1w_std_allregs, @function
rep_outs1w_std_allregs:
      std

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0x66,0x6f
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_outs1w_std_allregs, .-rep_outs1w_std_allregs

    
.globl rep_outs1w
         .type   rep_outs1w, @function
rep_outs1w:
      

  mov 4096,%esi
  mov 4100,%dx
  mov 4104,%ecx
  .byte 0xf2,0x66,0x6f
  mov %esi,8192
  mov %ecx,8196
  jnc .L728_c$
  movb $0x1,8448
.L728_c$: nop
  jnz .L728_z$
  movb $0x2,8449
.L728_z$: nop
  jns .L728_s$
  movb $0x3,8450
.L728_s$: nop
  jnp .L728_p$
  movb $0x4,8451
.L728_p$: nop
  jno .L728_o$
  movb $0x5,8452
.L728_o$: nop

    ret
         .size   rep_outs1w, .-rep_outs1w

    
.globl rep_outs1w_constant
         .type   rep_outs1w_constant, @function
rep_outs1w_constant:
      

  mov $1,%esi
  mov $2,%dx
  mov $3,%ecx
  .byte 0xf2,0x66,0x6f
  mov %esi,8192
  mov %ecx,8196
  jnc .L729_c$
  movb $0x1,8448
.L729_c$: nop
  jnz .L729_z$
  movb $0x2,8449
.L729_z$: nop
  jns .L729_s$
  movb $0x3,8450
.L729_s$: nop
  jnp .L729_p$
  movb $0x4,8451
.L729_p$: nop
  jno .L729_o$
  movb $0x5,8452
.L729_o$: nop

    ret
         .size   rep_outs1w_constant, .-rep_outs1w_constant

    
.globl rep_outs1w_allregs
         .type   rep_outs1w_allregs, @function
rep_outs1w_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0x66,0x6f
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_outs1w_allregs, .-rep_outs1w_allregs

    
.globl rep_outs1l_cld
         .type   rep_outs1l_cld, @function
rep_outs1l_cld:
      cld

  mov 4096,%esi
  mov 4100,%dx
  mov 4104,%ecx
  .byte 0xf2,0x6f
  mov %esi,8192
  mov %ecx,8196
  jnc .L730_c$
  movb $0x1,8448
.L730_c$: nop
  jnz .L730_z$
  movb $0x2,8449
.L730_z$: nop
  jns .L730_s$
  movb $0x3,8450
.L730_s$: nop
  jnp .L730_p$
  movb $0x4,8451
.L730_p$: nop
  jno .L730_o$
  movb $0x5,8452
.L730_o$: nop

    ret
         .size   rep_outs1l_cld, .-rep_outs1l_cld

    
.globl rep_outs1l_cld_constant
         .type   rep_outs1l_cld_constant, @function
rep_outs1l_cld_constant:
      cld

  mov $1,%esi
  mov $2,%dx
  mov $3,%ecx
  .byte 0xf2,0x6f
  mov %esi,8192
  mov %ecx,8196
  jnc .L731_c$
  movb $0x1,8448
.L731_c$: nop
  jnz .L731_z$
  movb $0x2,8449
.L731_z$: nop
  jns .L731_s$
  movb $0x3,8450
.L731_s$: nop
  jnp .L731_p$
  movb $0x4,8451
.L731_p$: nop
  jno .L731_o$
  movb $0x5,8452
.L731_o$: nop

    ret
         .size   rep_outs1l_cld_constant, .-rep_outs1l_cld_constant

    
.globl rep_outs1l_cld_allregs
         .type   rep_outs1l_cld_allregs, @function
rep_outs1l_cld_allregs:
      cld

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0x6f
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_outs1l_cld_allregs, .-rep_outs1l_cld_allregs

    
.globl rep_outs1l_std
         .type   rep_outs1l_std, @function
rep_outs1l_std:
      std

  mov 4096,%esi
  mov 4100,%dx
  mov 4104,%ecx
  .byte 0xf2,0x6f
  mov %esi,8192
  mov %ecx,8196
  jnc .L732_c$
  movb $0x1,8448
.L732_c$: nop
  jnz .L732_z$
  movb $0x2,8449
.L732_z$: nop
  jns .L732_s$
  movb $0x3,8450
.L732_s$: nop
  jnp .L732_p$
  movb $0x4,8451
.L732_p$: nop
  jno .L732_o$
  movb $0x5,8452
.L732_o$: nop

    ret
         .size   rep_outs1l_std, .-rep_outs1l_std

    
.globl rep_outs1l_std_constant
         .type   rep_outs1l_std_constant, @function
rep_outs1l_std_constant:
      std

  mov $1,%esi
  mov $2,%dx
  mov $3,%ecx
  .byte 0xf2,0x6f
  mov %esi,8192
  mov %ecx,8196
  jnc .L733_c$
  movb $0x1,8448
.L733_c$: nop
  jnz .L733_z$
  movb $0x2,8449
.L733_z$: nop
  jns .L733_s$
  movb $0x3,8450
.L733_s$: nop
  jnp .L733_p$
  movb $0x4,8451
.L733_p$: nop
  jno .L733_o$
  movb $0x5,8452
.L733_o$: nop

    ret
         .size   rep_outs1l_std_constant, .-rep_outs1l_std_constant

    
.globl rep_outs1l_std_allregs
         .type   rep_outs1l_std_allregs, @function
rep_outs1l_std_allregs:
      std

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0x6f
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_outs1l_std_allregs, .-rep_outs1l_std_allregs

    
.globl rep_outs1l
         .type   rep_outs1l, @function
rep_outs1l:
      

  mov 4096,%esi
  mov 4100,%dx
  mov 4104,%ecx
  .byte 0xf2,0x6f
  mov %esi,8192
  mov %ecx,8196
  jnc .L734_c$
  movb $0x1,8448
.L734_c$: nop
  jnz .L734_z$
  movb $0x2,8449
.L734_z$: nop
  jns .L734_s$
  movb $0x3,8450
.L734_s$: nop
  jnp .L734_p$
  movb $0x4,8451
.L734_p$: nop
  jno .L734_o$
  movb $0x5,8452
.L734_o$: nop

    ret
         .size   rep_outs1l, .-rep_outs1l

    
.globl rep_outs1l_constant
         .type   rep_outs1l_constant, @function
rep_outs1l_constant:
      

  mov $1,%esi
  mov $2,%dx
  mov $3,%ecx
  .byte 0xf2,0x6f
  mov %esi,8192
  mov %ecx,8196
  jnc .L735_c$
  movb $0x1,8448
.L735_c$: nop
  jnz .L735_z$
  movb $0x2,8449
.L735_z$: nop
  jns .L735_s$
  movb $0x3,8450
.L735_s$: nop
  jnp .L735_p$
  movb $0x4,8451
.L735_p$: nop
  jno .L735_o$
  movb $0x5,8452
.L735_o$: nop

    ret
         .size   rep_outs1l_constant, .-rep_outs1l_constant

    
.globl rep_outs1l_allregs
         .type   rep_outs1l_allregs, @function
rep_outs1l_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0x6f
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_outs1l_allregs, .-rep_outs1l_allregs

    
.globl rep_outs2b_cld
         .type   rep_outs2b_cld, @function
rep_outs2b_cld:
      cld

  mov 4096,%esi
  mov 4100,%dx
  mov 4104,%ecx
  .byte 0xf3,0x6e
  mov %esi,8192
  mov %ecx,8196
  jnc .L736_c$
  movb $0x1,8448
.L736_c$: nop
  jnz .L736_z$
  movb $0x2,8449
.L736_z$: nop
  jns .L736_s$
  movb $0x3,8450
.L736_s$: nop
  jnp .L736_p$
  movb $0x4,8451
.L736_p$: nop
  jno .L736_o$
  movb $0x5,8452
.L736_o$: nop

    ret
         .size   rep_outs2b_cld, .-rep_outs2b_cld

    
.globl rep_outs2b_cld_constant
         .type   rep_outs2b_cld_constant, @function
rep_outs2b_cld_constant:
      cld

  mov $1,%esi
  mov $2,%dx
  mov $3,%ecx
  .byte 0xf3,0x6e
  mov %esi,8192
  mov %ecx,8196
  jnc .L737_c$
  movb $0x1,8448
.L737_c$: nop
  jnz .L737_z$
  movb $0x2,8449
.L737_z$: nop
  jns .L737_s$
  movb $0x3,8450
.L737_s$: nop
  jnp .L737_p$
  movb $0x4,8451
.L737_p$: nop
  jno .L737_o$
  movb $0x5,8452
.L737_o$: nop

    ret
         .size   rep_outs2b_cld_constant, .-rep_outs2b_cld_constant

    
.globl rep_outs2b_cld_allregs
         .type   rep_outs2b_cld_allregs, @function
rep_outs2b_cld_allregs:
      cld

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0x6e
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_outs2b_cld_allregs, .-rep_outs2b_cld_allregs

    
.globl rep_outs2b_std
         .type   rep_outs2b_std, @function
rep_outs2b_std:
      std

  mov 4096,%esi
  mov 4100,%dx
  mov 4104,%ecx
  .byte 0xf3,0x6e
  mov %esi,8192
  mov %ecx,8196
  jnc .L738_c$
  movb $0x1,8448
.L738_c$: nop
  jnz .L738_z$
  movb $0x2,8449
.L738_z$: nop
  jns .L738_s$
  movb $0x3,8450
.L738_s$: nop
  jnp .L738_p$
  movb $0x4,8451
.L738_p$: nop
  jno .L738_o$
  movb $0x5,8452
.L738_o$: nop

    ret
         .size   rep_outs2b_std, .-rep_outs2b_std

    
.globl rep_outs2b_std_constant
         .type   rep_outs2b_std_constant, @function
rep_outs2b_std_constant:
      std

  mov $1,%esi
  mov $2,%dx
  mov $3,%ecx
  .byte 0xf3,0x6e
  mov %esi,8192
  mov %ecx,8196
  jnc .L739_c$
  movb $0x1,8448
.L739_c$: nop
  jnz .L739_z$
  movb $0x2,8449
.L739_z$: nop
  jns .L739_s$
  movb $0x3,8450
.L739_s$: nop
  jnp .L739_p$
  movb $0x4,8451
.L739_p$: nop
  jno .L739_o$
  movb $0x5,8452
.L739_o$: nop

    ret
         .size   rep_outs2b_std_constant, .-rep_outs2b_std_constant

    
.globl rep_outs2b_std_allregs
         .type   rep_outs2b_std_allregs, @function
rep_outs2b_std_allregs:
      std

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0x6e
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_outs2b_std_allregs, .-rep_outs2b_std_allregs

    
.globl rep_outs2b
         .type   rep_outs2b, @function
rep_outs2b:
      

  mov 4096,%esi
  mov 4100,%dx
  mov 4104,%ecx
  .byte 0xf3,0x6e
  mov %esi,8192
  mov %ecx,8196
  jnc .L740_c$
  movb $0x1,8448
.L740_c$: nop
  jnz .L740_z$
  movb $0x2,8449
.L740_z$: nop
  jns .L740_s$
  movb $0x3,8450
.L740_s$: nop
  jnp .L740_p$
  movb $0x4,8451
.L740_p$: nop
  jno .L740_o$
  movb $0x5,8452
.L740_o$: nop

    ret
         .size   rep_outs2b, .-rep_outs2b

    
.globl rep_outs2b_constant
         .type   rep_outs2b_constant, @function
rep_outs2b_constant:
      

  mov $1,%esi
  mov $2,%dx
  mov $3,%ecx
  .byte 0xf3,0x6e
  mov %esi,8192
  mov %ecx,8196
  jnc .L741_c$
  movb $0x1,8448
.L741_c$: nop
  jnz .L741_z$
  movb $0x2,8449
.L741_z$: nop
  jns .L741_s$
  movb $0x3,8450
.L741_s$: nop
  jnp .L741_p$
  movb $0x4,8451
.L741_p$: nop
  jno .L741_o$
  movb $0x5,8452
.L741_o$: nop

    ret
         .size   rep_outs2b_constant, .-rep_outs2b_constant

    
.globl rep_outs2b_allregs
         .type   rep_outs2b_allregs, @function
rep_outs2b_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0x6e
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_outs2b_allregs, .-rep_outs2b_allregs

    
.globl rep_outs2w_cld
         .type   rep_outs2w_cld, @function
rep_outs2w_cld:
      cld

  mov 4096,%esi
  mov 4100,%dx
  mov 4104,%ecx
  .byte 0xf3,0x66,0x6f
  mov %esi,8192
  mov %ecx,8196
  jnc .L742_c$
  movb $0x1,8448
.L742_c$: nop
  jnz .L742_z$
  movb $0x2,8449
.L742_z$: nop
  jns .L742_s$
  movb $0x3,8450
.L742_s$: nop
  jnp .L742_p$
  movb $0x4,8451
.L742_p$: nop
  jno .L742_o$
  movb $0x5,8452
.L742_o$: nop

    ret
         .size   rep_outs2w_cld, .-rep_outs2w_cld

    
.globl rep_outs2w_cld_constant
         .type   rep_outs2w_cld_constant, @function
rep_outs2w_cld_constant:
      cld

  mov $1,%esi
  mov $2,%dx
  mov $3,%ecx
  .byte 0xf3,0x66,0x6f
  mov %esi,8192
  mov %ecx,8196
  jnc .L743_c$
  movb $0x1,8448
.L743_c$: nop
  jnz .L743_z$
  movb $0x2,8449
.L743_z$: nop
  jns .L743_s$
  movb $0x3,8450
.L743_s$: nop
  jnp .L743_p$
  movb $0x4,8451
.L743_p$: nop
  jno .L743_o$
  movb $0x5,8452
.L743_o$: nop

    ret
         .size   rep_outs2w_cld_constant, .-rep_outs2w_cld_constant

    
.globl rep_outs2w_cld_allregs
         .type   rep_outs2w_cld_allregs, @function
rep_outs2w_cld_allregs:
      cld

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0x66,0x6f
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_outs2w_cld_allregs, .-rep_outs2w_cld_allregs

    
.globl rep_outs2w_std
         .type   rep_outs2w_std, @function
rep_outs2w_std:
      std

  mov 4096,%esi
  mov 4100,%dx
  mov 4104,%ecx
  .byte 0xf3,0x66,0x6f
  mov %esi,8192
  mov %ecx,8196
  jnc .L744_c$
  movb $0x1,8448
.L744_c$: nop
  jnz .L744_z$
  movb $0x2,8449
.L744_z$: nop
  jns .L744_s$
  movb $0x3,8450
.L744_s$: nop
  jnp .L744_p$
  movb $0x4,8451
.L744_p$: nop
  jno .L744_o$
  movb $0x5,8452
.L744_o$: nop

    ret
         .size   rep_outs2w_std, .-rep_outs2w_std

    
.globl rep_outs2w_std_constant
         .type   rep_outs2w_std_constant, @function
rep_outs2w_std_constant:
      std

  mov $1,%esi
  mov $2,%dx
  mov $3,%ecx
  .byte 0xf3,0x66,0x6f
  mov %esi,8192
  mov %ecx,8196
  jnc .L745_c$
  movb $0x1,8448
.L745_c$: nop
  jnz .L745_z$
  movb $0x2,8449
.L745_z$: nop
  jns .L745_s$
  movb $0x3,8450
.L745_s$: nop
  jnp .L745_p$
  movb $0x4,8451
.L745_p$: nop
  jno .L745_o$
  movb $0x5,8452
.L745_o$: nop

    ret
         .size   rep_outs2w_std_constant, .-rep_outs2w_std_constant

    
.globl rep_outs2w_std_allregs
         .type   rep_outs2w_std_allregs, @function
rep_outs2w_std_allregs:
      std

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0x66,0x6f
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_outs2w_std_allregs, .-rep_outs2w_std_allregs

    
.globl rep_outs2w
         .type   rep_outs2w, @function
rep_outs2w:
      

  mov 4096,%esi
  mov 4100,%dx
  mov 4104,%ecx
  .byte 0xf3,0x66,0x6f
  mov %esi,8192
  mov %ecx,8196
  jnc .L746_c$
  movb $0x1,8448
.L746_c$: nop
  jnz .L746_z$
  movb $0x2,8449
.L746_z$: nop
  jns .L746_s$
  movb $0x3,8450
.L746_s$: nop
  jnp .L746_p$
  movb $0x4,8451
.L746_p$: nop
  jno .L746_o$
  movb $0x5,8452
.L746_o$: nop

    ret
         .size   rep_outs2w, .-rep_outs2w

    
.globl rep_outs2w_constant
         .type   rep_outs2w_constant, @function
rep_outs2w_constant:
      

  mov $1,%esi
  mov $2,%dx
  mov $3,%ecx
  .byte 0xf3,0x66,0x6f
  mov %esi,8192
  mov %ecx,8196
  jnc .L747_c$
  movb $0x1,8448
.L747_c$: nop
  jnz .L747_z$
  movb $0x2,8449
.L747_z$: nop
  jns .L747_s$
  movb $0x3,8450
.L747_s$: nop
  jnp .L747_p$
  movb $0x4,8451
.L747_p$: nop
  jno .L747_o$
  movb $0x5,8452
.L747_o$: nop

    ret
         .size   rep_outs2w_constant, .-rep_outs2w_constant

    
.globl rep_outs2w_allregs
         .type   rep_outs2w_allregs, @function
rep_outs2w_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0x66,0x6f
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_outs2w_allregs, .-rep_outs2w_allregs

    
.globl rep_outs2l_cld
         .type   rep_outs2l_cld, @function
rep_outs2l_cld:
      cld

  mov 4096,%esi
  mov 4100,%dx
  mov 4104,%ecx
  .byte 0xf3,0x6f
  mov %esi,8192
  mov %ecx,8196
  jnc .L748_c$
  movb $0x1,8448
.L748_c$: nop
  jnz .L748_z$
  movb $0x2,8449
.L748_z$: nop
  jns .L748_s$
  movb $0x3,8450
.L748_s$: nop
  jnp .L748_p$
  movb $0x4,8451
.L748_p$: nop
  jno .L748_o$
  movb $0x5,8452
.L748_o$: nop

    ret
         .size   rep_outs2l_cld, .-rep_outs2l_cld

    
.globl rep_outs2l_cld_constant
         .type   rep_outs2l_cld_constant, @function
rep_outs2l_cld_constant:
      cld

  mov $1,%esi
  mov $2,%dx
  mov $3,%ecx
  .byte 0xf3,0x6f
  mov %esi,8192
  mov %ecx,8196
  jnc .L749_c$
  movb $0x1,8448
.L749_c$: nop
  jnz .L749_z$
  movb $0x2,8449
.L749_z$: nop
  jns .L749_s$
  movb $0x3,8450
.L749_s$: nop
  jnp .L749_p$
  movb $0x4,8451
.L749_p$: nop
  jno .L749_o$
  movb $0x5,8452
.L749_o$: nop

    ret
         .size   rep_outs2l_cld_constant, .-rep_outs2l_cld_constant

    
.globl rep_outs2l_cld_allregs
         .type   rep_outs2l_cld_allregs, @function
rep_outs2l_cld_allregs:
      cld

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0x6f
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_outs2l_cld_allregs, .-rep_outs2l_cld_allregs

    
.globl rep_outs2l_std
         .type   rep_outs2l_std, @function
rep_outs2l_std:
      std

  mov 4096,%esi
  mov 4100,%dx
  mov 4104,%ecx
  .byte 0xf3,0x6f
  mov %esi,8192
  mov %ecx,8196
  jnc .L750_c$
  movb $0x1,8448
.L750_c$: nop
  jnz .L750_z$
  movb $0x2,8449
.L750_z$: nop
  jns .L750_s$
  movb $0x3,8450
.L750_s$: nop
  jnp .L750_p$
  movb $0x4,8451
.L750_p$: nop
  jno .L750_o$
  movb $0x5,8452
.L750_o$: nop

    ret
         .size   rep_outs2l_std, .-rep_outs2l_std

    
.globl rep_outs2l_std_constant
         .type   rep_outs2l_std_constant, @function
rep_outs2l_std_constant:
      std

  mov $1,%esi
  mov $2,%dx
  mov $3,%ecx
  .byte 0xf3,0x6f
  mov %esi,8192
  mov %ecx,8196
  jnc .L751_c$
  movb $0x1,8448
.L751_c$: nop
  jnz .L751_z$
  movb $0x2,8449
.L751_z$: nop
  jns .L751_s$
  movb $0x3,8450
.L751_s$: nop
  jnp .L751_p$
  movb $0x4,8451
.L751_p$: nop
  jno .L751_o$
  movb $0x5,8452
.L751_o$: nop

    ret
         .size   rep_outs2l_std_constant, .-rep_outs2l_std_constant

    
.globl rep_outs2l_std_allregs
         .type   rep_outs2l_std_allregs, @function
rep_outs2l_std_allregs:
      std

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0x6f
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_outs2l_std_allregs, .-rep_outs2l_std_allregs

    
.globl rep_outs2l
         .type   rep_outs2l, @function
rep_outs2l:
      

  mov 4096,%esi
  mov 4100,%dx
  mov 4104,%ecx
  .byte 0xf3,0x6f
  mov %esi,8192
  mov %ecx,8196
  jnc .L752_c$
  movb $0x1,8448
.L752_c$: nop
  jnz .L752_z$
  movb $0x2,8449
.L752_z$: nop
  jns .L752_s$
  movb $0x3,8450
.L752_s$: nop
  jnp .L752_p$
  movb $0x4,8451
.L752_p$: nop
  jno .L752_o$
  movb $0x5,8452
.L752_o$: nop

    ret
         .size   rep_outs2l, .-rep_outs2l

    
.globl rep_outs2l_constant
         .type   rep_outs2l_constant, @function
rep_outs2l_constant:
      

  mov $1,%esi
  mov $2,%dx
  mov $3,%ecx
  .byte 0xf3,0x6f
  mov %esi,8192
  mov %ecx,8196
  jnc .L753_c$
  movb $0x1,8448
.L753_c$: nop
  jnz .L753_z$
  movb $0x2,8449
.L753_z$: nop
  jns .L753_s$
  movb $0x3,8450
.L753_s$: nop
  jnp .L753_p$
  movb $0x4,8451
.L753_p$: nop
  jno .L753_o$
  movb $0x5,8452
.L753_o$: nop

    ret
         .size   rep_outs2l_constant, .-rep_outs2l_constant

    
.globl rep_outs2l_allregs
         .type   rep_outs2l_allregs, @function
rep_outs2l_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0x6f
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_outs2l_allregs, .-rep_outs2l_allregs

    
.globl rep_stos1b_cld
         .type   rep_stos1b_cld, @function
rep_stos1b_cld:
      cld

  mov 4096,%edi
  mov 4100,%al
  mov 4104,%ecx
  .byte 0xf2,0xaa
  mov %edi,8192
  mov %ecx,8196
  jnc .L754_c$
  movb $0x1,8448
.L754_c$: nop
  jnz .L754_z$
  movb $0x2,8449
.L754_z$: nop
  jns .L754_s$
  movb $0x3,8450
.L754_s$: nop
  jnp .L754_p$
  movb $0x4,8451
.L754_p$: nop
  jno .L754_o$
  movb $0x5,8452
.L754_o$: nop

    ret
         .size   rep_stos1b_cld, .-rep_stos1b_cld

    
.globl rep_stos1b_cld_constant
         .type   rep_stos1b_cld_constant, @function
rep_stos1b_cld_constant:
      cld

  mov $1,%edi
  mov $2,%al
  mov $3,%ecx
  .byte 0xf2,0xaa
  mov %edi,8192
  mov %ecx,8196
  jnc .L755_c$
  movb $0x1,8448
.L755_c$: nop
  jnz .L755_z$
  movb $0x2,8449
.L755_z$: nop
  jns .L755_s$
  movb $0x3,8450
.L755_s$: nop
  jnp .L755_p$
  movb $0x4,8451
.L755_p$: nop
  jno .L755_o$
  movb $0x5,8452
.L755_o$: nop

    ret
         .size   rep_stos1b_cld_constant, .-rep_stos1b_cld_constant

    
.globl rep_stos1b_cld_allregs
         .type   rep_stos1b_cld_allregs, @function
rep_stos1b_cld_allregs:
      cld

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0xaa
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_stos1b_cld_allregs, .-rep_stos1b_cld_allregs

    
.globl rep_stos1b_std
         .type   rep_stos1b_std, @function
rep_stos1b_std:
      std

  mov 4096,%edi
  mov 4100,%al
  mov 4104,%ecx
  .byte 0xf2,0xaa
  mov %edi,8192
  mov %ecx,8196
  jnc .L756_c$
  movb $0x1,8448
.L756_c$: nop
  jnz .L756_z$
  movb $0x2,8449
.L756_z$: nop
  jns .L756_s$
  movb $0x3,8450
.L756_s$: nop
  jnp .L756_p$
  movb $0x4,8451
.L756_p$: nop
  jno .L756_o$
  movb $0x5,8452
.L756_o$: nop

    ret
         .size   rep_stos1b_std, .-rep_stos1b_std

    
.globl rep_stos1b_std_constant
         .type   rep_stos1b_std_constant, @function
rep_stos1b_std_constant:
      std

  mov $1,%edi
  mov $2,%al
  mov $3,%ecx
  .byte 0xf2,0xaa
  mov %edi,8192
  mov %ecx,8196
  jnc .L757_c$
  movb $0x1,8448
.L757_c$: nop
  jnz .L757_z$
  movb $0x2,8449
.L757_z$: nop
  jns .L757_s$
  movb $0x3,8450
.L757_s$: nop
  jnp .L757_p$
  movb $0x4,8451
.L757_p$: nop
  jno .L757_o$
  movb $0x5,8452
.L757_o$: nop

    ret
         .size   rep_stos1b_std_constant, .-rep_stos1b_std_constant

    
.globl rep_stos1b_std_allregs
         .type   rep_stos1b_std_allregs, @function
rep_stos1b_std_allregs:
      std

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0xaa
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_stos1b_std_allregs, .-rep_stos1b_std_allregs

    
.globl rep_stos1b
         .type   rep_stos1b, @function
rep_stos1b:
      

  mov 4096,%edi
  mov 4100,%al
  mov 4104,%ecx
  .byte 0xf2,0xaa
  mov %edi,8192
  mov %ecx,8196
  jnc .L758_c$
  movb $0x1,8448
.L758_c$: nop
  jnz .L758_z$
  movb $0x2,8449
.L758_z$: nop
  jns .L758_s$
  movb $0x3,8450
.L758_s$: nop
  jnp .L758_p$
  movb $0x4,8451
.L758_p$: nop
  jno .L758_o$
  movb $0x5,8452
.L758_o$: nop

    ret
         .size   rep_stos1b, .-rep_stos1b

    
.globl rep_stos1b_constant
         .type   rep_stos1b_constant, @function
rep_stos1b_constant:
      

  mov $1,%edi
  mov $2,%al
  mov $3,%ecx
  .byte 0xf2,0xaa
  mov %edi,8192
  mov %ecx,8196
  jnc .L759_c$
  movb $0x1,8448
.L759_c$: nop
  jnz .L759_z$
  movb $0x2,8449
.L759_z$: nop
  jns .L759_s$
  movb $0x3,8450
.L759_s$: nop
  jnp .L759_p$
  movb $0x4,8451
.L759_p$: nop
  jno .L759_o$
  movb $0x5,8452
.L759_o$: nop

    ret
         .size   rep_stos1b_constant, .-rep_stos1b_constant

    
.globl rep_stos1b_allregs
         .type   rep_stos1b_allregs, @function
rep_stos1b_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0xaa
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_stos1b_allregs, .-rep_stos1b_allregs

    
.globl rep_stos1w_cld
         .type   rep_stos1w_cld, @function
rep_stos1w_cld:
      cld

  mov 4096,%edi
  mov 4100,%ax
  mov 4104,%ecx
  .byte 0xf2,0x66,0xab
  mov %edi,8192
  mov %ecx,8196
  jnc .L760_c$
  movb $0x1,8448
.L760_c$: nop
  jnz .L760_z$
  movb $0x2,8449
.L760_z$: nop
  jns .L760_s$
  movb $0x3,8450
.L760_s$: nop
  jnp .L760_p$
  movb $0x4,8451
.L760_p$: nop
  jno .L760_o$
  movb $0x5,8452
.L760_o$: nop

    ret
         .size   rep_stos1w_cld, .-rep_stos1w_cld

    
.globl rep_stos1w_cld_constant
         .type   rep_stos1w_cld_constant, @function
rep_stos1w_cld_constant:
      cld

  mov $1,%edi
  mov $2,%ax
  mov $3,%ecx
  .byte 0xf2,0x66,0xab
  mov %edi,8192
  mov %ecx,8196
  jnc .L761_c$
  movb $0x1,8448
.L761_c$: nop
  jnz .L761_z$
  movb $0x2,8449
.L761_z$: nop
  jns .L761_s$
  movb $0x3,8450
.L761_s$: nop
  jnp .L761_p$
  movb $0x4,8451
.L761_p$: nop
  jno .L761_o$
  movb $0x5,8452
.L761_o$: nop

    ret
         .size   rep_stos1w_cld_constant, .-rep_stos1w_cld_constant

    
.globl rep_stos1w_cld_allregs
         .type   rep_stos1w_cld_allregs, @function
rep_stos1w_cld_allregs:
      cld

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0x66,0xab
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_stos1w_cld_allregs, .-rep_stos1w_cld_allregs

    
.globl rep_stos1w_std
         .type   rep_stos1w_std, @function
rep_stos1w_std:
      std

  mov 4096,%edi
  mov 4100,%ax
  mov 4104,%ecx
  .byte 0xf2,0x66,0xab
  mov %edi,8192
  mov %ecx,8196
  jnc .L762_c$
  movb $0x1,8448
.L762_c$: nop
  jnz .L762_z$
  movb $0x2,8449
.L762_z$: nop
  jns .L762_s$
  movb $0x3,8450
.L762_s$: nop
  jnp .L762_p$
  movb $0x4,8451
.L762_p$: nop
  jno .L762_o$
  movb $0x5,8452
.L762_o$: nop

    ret
         .size   rep_stos1w_std, .-rep_stos1w_std

    
.globl rep_stos1w_std_constant
         .type   rep_stos1w_std_constant, @function
rep_stos1w_std_constant:
      std

  mov $1,%edi
  mov $2,%ax
  mov $3,%ecx
  .byte 0xf2,0x66,0xab
  mov %edi,8192
  mov %ecx,8196
  jnc .L763_c$
  movb $0x1,8448
.L763_c$: nop
  jnz .L763_z$
  movb $0x2,8449
.L763_z$: nop
  jns .L763_s$
  movb $0x3,8450
.L763_s$: nop
  jnp .L763_p$
  movb $0x4,8451
.L763_p$: nop
  jno .L763_o$
  movb $0x5,8452
.L763_o$: nop

    ret
         .size   rep_stos1w_std_constant, .-rep_stos1w_std_constant

    
.globl rep_stos1w_std_allregs
         .type   rep_stos1w_std_allregs, @function
rep_stos1w_std_allregs:
      std

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0x66,0xab
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_stos1w_std_allregs, .-rep_stos1w_std_allregs

    
.globl rep_stos1w
         .type   rep_stos1w, @function
rep_stos1w:
      

  mov 4096,%edi
  mov 4100,%ax
  mov 4104,%ecx
  .byte 0xf2,0x66,0xab
  mov %edi,8192
  mov %ecx,8196
  jnc .L764_c$
  movb $0x1,8448
.L764_c$: nop
  jnz .L764_z$
  movb $0x2,8449
.L764_z$: nop
  jns .L764_s$
  movb $0x3,8450
.L764_s$: nop
  jnp .L764_p$
  movb $0x4,8451
.L764_p$: nop
  jno .L764_o$
  movb $0x5,8452
.L764_o$: nop

    ret
         .size   rep_stos1w, .-rep_stos1w

    
.globl rep_stos1w_constant
         .type   rep_stos1w_constant, @function
rep_stos1w_constant:
      

  mov $1,%edi
  mov $2,%ax
  mov $3,%ecx
  .byte 0xf2,0x66,0xab
  mov %edi,8192
  mov %ecx,8196
  jnc .L765_c$
  movb $0x1,8448
.L765_c$: nop
  jnz .L765_z$
  movb $0x2,8449
.L765_z$: nop
  jns .L765_s$
  movb $0x3,8450
.L765_s$: nop
  jnp .L765_p$
  movb $0x4,8451
.L765_p$: nop
  jno .L765_o$
  movb $0x5,8452
.L765_o$: nop

    ret
         .size   rep_stos1w_constant, .-rep_stos1w_constant

    
.globl rep_stos1w_allregs
         .type   rep_stos1w_allregs, @function
rep_stos1w_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0x66,0xab
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_stos1w_allregs, .-rep_stos1w_allregs

    
.globl rep_stos1l_cld
         .type   rep_stos1l_cld, @function
rep_stos1l_cld:
      cld

  mov 4096,%edi
  mov 4100,%eax
  mov 4104,%ecx
  .byte 0xf2,0xab
  mov %edi,8192
  mov %ecx,8196
  jnc .L766_c$
  movb $0x1,8448
.L766_c$: nop
  jnz .L766_z$
  movb $0x2,8449
.L766_z$: nop
  jns .L766_s$
  movb $0x3,8450
.L766_s$: nop
  jnp .L766_p$
  movb $0x4,8451
.L766_p$: nop
  jno .L766_o$
  movb $0x5,8452
.L766_o$: nop

    ret
         .size   rep_stos1l_cld, .-rep_stos1l_cld

    
.globl rep_stos1l_cld_constant
         .type   rep_stos1l_cld_constant, @function
rep_stos1l_cld_constant:
      cld

  mov $1,%edi
  mov $2,%eax
  mov $3,%ecx
  .byte 0xf2,0xab
  mov %edi,8192
  mov %ecx,8196
  jnc .L767_c$
  movb $0x1,8448
.L767_c$: nop
  jnz .L767_z$
  movb $0x2,8449
.L767_z$: nop
  jns .L767_s$
  movb $0x3,8450
.L767_s$: nop
  jnp .L767_p$
  movb $0x4,8451
.L767_p$: nop
  jno .L767_o$
  movb $0x5,8452
.L767_o$: nop

    ret
         .size   rep_stos1l_cld_constant, .-rep_stos1l_cld_constant

    
.globl rep_stos1l_cld_allregs
         .type   rep_stos1l_cld_allregs, @function
rep_stos1l_cld_allregs:
      cld

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0xab
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_stos1l_cld_allregs, .-rep_stos1l_cld_allregs

    
.globl rep_stos1l_std
         .type   rep_stos1l_std, @function
rep_stos1l_std:
      std

  mov 4096,%edi
  mov 4100,%eax
  mov 4104,%ecx
  .byte 0xf2,0xab
  mov %edi,8192
  mov %ecx,8196
  jnc .L768_c$
  movb $0x1,8448
.L768_c$: nop
  jnz .L768_z$
  movb $0x2,8449
.L768_z$: nop
  jns .L768_s$
  movb $0x3,8450
.L768_s$: nop
  jnp .L768_p$
  movb $0x4,8451
.L768_p$: nop
  jno .L768_o$
  movb $0x5,8452
.L768_o$: nop

    ret
         .size   rep_stos1l_std, .-rep_stos1l_std

    
.globl rep_stos1l_std_constant
         .type   rep_stos1l_std_constant, @function
rep_stos1l_std_constant:
      std

  mov $1,%edi
  mov $2,%eax
  mov $3,%ecx
  .byte 0xf2,0xab
  mov %edi,8192
  mov %ecx,8196
  jnc .L769_c$
  movb $0x1,8448
.L769_c$: nop
  jnz .L769_z$
  movb $0x2,8449
.L769_z$: nop
  jns .L769_s$
  movb $0x3,8450
.L769_s$: nop
  jnp .L769_p$
  movb $0x4,8451
.L769_p$: nop
  jno .L769_o$
  movb $0x5,8452
.L769_o$: nop

    ret
         .size   rep_stos1l_std_constant, .-rep_stos1l_std_constant

    
.globl rep_stos1l_std_allregs
         .type   rep_stos1l_std_allregs, @function
rep_stos1l_std_allregs:
      std

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0xab
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_stos1l_std_allregs, .-rep_stos1l_std_allregs

    
.globl rep_stos1l
         .type   rep_stos1l, @function
rep_stos1l:
      

  mov 4096,%edi
  mov 4100,%eax
  mov 4104,%ecx
  .byte 0xf2,0xab
  mov %edi,8192
  mov %ecx,8196
  jnc .L770_c$
  movb $0x1,8448
.L770_c$: nop
  jnz .L770_z$
  movb $0x2,8449
.L770_z$: nop
  jns .L770_s$
  movb $0x3,8450
.L770_s$: nop
  jnp .L770_p$
  movb $0x4,8451
.L770_p$: nop
  jno .L770_o$
  movb $0x5,8452
.L770_o$: nop

    ret
         .size   rep_stos1l, .-rep_stos1l

    
.globl rep_stos1l_constant
         .type   rep_stos1l_constant, @function
rep_stos1l_constant:
      

  mov $1,%edi
  mov $2,%eax
  mov $3,%ecx
  .byte 0xf2,0xab
  mov %edi,8192
  mov %ecx,8196
  jnc .L771_c$
  movb $0x1,8448
.L771_c$: nop
  jnz .L771_z$
  movb $0x2,8449
.L771_z$: nop
  jns .L771_s$
  movb $0x3,8450
.L771_s$: nop
  jnp .L771_p$
  movb $0x4,8451
.L771_p$: nop
  jno .L771_o$
  movb $0x5,8452
.L771_o$: nop

    ret
         .size   rep_stos1l_constant, .-rep_stos1l_constant

    
.globl rep_stos1l_allregs
         .type   rep_stos1l_allregs, @function
rep_stos1l_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0xab
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_stos1l_allregs, .-rep_stos1l_allregs

    
.globl rep_stos2b_cld
         .type   rep_stos2b_cld, @function
rep_stos2b_cld:
      cld

  mov 4096,%edi
  mov 4100,%al
  mov 4104,%ecx
  .byte 0xf3,0xaa
  mov %edi,8192
  mov %ecx,8196
  jnc .L772_c$
  movb $0x1,8448
.L772_c$: nop
  jnz .L772_z$
  movb $0x2,8449
.L772_z$: nop
  jns .L772_s$
  movb $0x3,8450
.L772_s$: nop
  jnp .L772_p$
  movb $0x4,8451
.L772_p$: nop
  jno .L772_o$
  movb $0x5,8452
.L772_o$: nop

    ret
         .size   rep_stos2b_cld, .-rep_stos2b_cld

    
.globl rep_stos2b_cld_constant
         .type   rep_stos2b_cld_constant, @function
rep_stos2b_cld_constant:
      cld

  mov $1,%edi
  mov $2,%al
  mov $3,%ecx
  .byte 0xf3,0xaa
  mov %edi,8192
  mov %ecx,8196
  jnc .L773_c$
  movb $0x1,8448
.L773_c$: nop
  jnz .L773_z$
  movb $0x2,8449
.L773_z$: nop
  jns .L773_s$
  movb $0x3,8450
.L773_s$: nop
  jnp .L773_p$
  movb $0x4,8451
.L773_p$: nop
  jno .L773_o$
  movb $0x5,8452
.L773_o$: nop

    ret
         .size   rep_stos2b_cld_constant, .-rep_stos2b_cld_constant

    
.globl rep_stos2b_cld_allregs
         .type   rep_stos2b_cld_allregs, @function
rep_stos2b_cld_allregs:
      cld

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0xaa
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_stos2b_cld_allregs, .-rep_stos2b_cld_allregs

    
.globl rep_stos2b_std
         .type   rep_stos2b_std, @function
rep_stos2b_std:
      std

  mov 4096,%edi
  mov 4100,%al
  mov 4104,%ecx
  .byte 0xf3,0xaa
  mov %edi,8192
  mov %ecx,8196
  jnc .L774_c$
  movb $0x1,8448
.L774_c$: nop
  jnz .L774_z$
  movb $0x2,8449
.L774_z$: nop
  jns .L774_s$
  movb $0x3,8450
.L774_s$: nop
  jnp .L774_p$
  movb $0x4,8451
.L774_p$: nop
  jno .L774_o$
  movb $0x5,8452
.L774_o$: nop

    ret
         .size   rep_stos2b_std, .-rep_stos2b_std

    
.globl rep_stos2b_std_constant
         .type   rep_stos2b_std_constant, @function
rep_stos2b_std_constant:
      std

  mov $1,%edi
  mov $2,%al
  mov $3,%ecx
  .byte 0xf3,0xaa
  mov %edi,8192
  mov %ecx,8196
  jnc .L775_c$
  movb $0x1,8448
.L775_c$: nop
  jnz .L775_z$
  movb $0x2,8449
.L775_z$: nop
  jns .L775_s$
  movb $0x3,8450
.L775_s$: nop
  jnp .L775_p$
  movb $0x4,8451
.L775_p$: nop
  jno .L775_o$
  movb $0x5,8452
.L775_o$: nop

    ret
         .size   rep_stos2b_std_constant, .-rep_stos2b_std_constant

    
.globl rep_stos2b_std_allregs
         .type   rep_stos2b_std_allregs, @function
rep_stos2b_std_allregs:
      std

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0xaa
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_stos2b_std_allregs, .-rep_stos2b_std_allregs

    
.globl rep_stos2b
         .type   rep_stos2b, @function
rep_stos2b:
      

  mov 4096,%edi
  mov 4100,%al
  mov 4104,%ecx
  .byte 0xf3,0xaa
  mov %edi,8192
  mov %ecx,8196
  jnc .L776_c$
  movb $0x1,8448
.L776_c$: nop
  jnz .L776_z$
  movb $0x2,8449
.L776_z$: nop
  jns .L776_s$
  movb $0x3,8450
.L776_s$: nop
  jnp .L776_p$
  movb $0x4,8451
.L776_p$: nop
  jno .L776_o$
  movb $0x5,8452
.L776_o$: nop

    ret
         .size   rep_stos2b, .-rep_stos2b

    
.globl rep_stos2b_constant
         .type   rep_stos2b_constant, @function
rep_stos2b_constant:
      

  mov $1,%edi
  mov $2,%al
  mov $3,%ecx
  .byte 0xf3,0xaa
  mov %edi,8192
  mov %ecx,8196
  jnc .L777_c$
  movb $0x1,8448
.L777_c$: nop
  jnz .L777_z$
  movb $0x2,8449
.L777_z$: nop
  jns .L777_s$
  movb $0x3,8450
.L777_s$: nop
  jnp .L777_p$
  movb $0x4,8451
.L777_p$: nop
  jno .L777_o$
  movb $0x5,8452
.L777_o$: nop

    ret
         .size   rep_stos2b_constant, .-rep_stos2b_constant

    
.globl rep_stos2b_allregs
         .type   rep_stos2b_allregs, @function
rep_stos2b_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0xaa
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_stos2b_allregs, .-rep_stos2b_allregs

    
.globl rep_stos2w_cld
         .type   rep_stos2w_cld, @function
rep_stos2w_cld:
      cld

  mov 4096,%edi
  mov 4100,%ax
  mov 4104,%ecx
  .byte 0xf3,0x66,0xab
  mov %edi,8192
  mov %ecx,8196
  jnc .L778_c$
  movb $0x1,8448
.L778_c$: nop
  jnz .L778_z$
  movb $0x2,8449
.L778_z$: nop
  jns .L778_s$
  movb $0x3,8450
.L778_s$: nop
  jnp .L778_p$
  movb $0x4,8451
.L778_p$: nop
  jno .L778_o$
  movb $0x5,8452
.L778_o$: nop

    ret
         .size   rep_stos2w_cld, .-rep_stos2w_cld

    
.globl rep_stos2w_cld_constant
         .type   rep_stos2w_cld_constant, @function
rep_stos2w_cld_constant:
      cld

  mov $1,%edi
  mov $2,%ax
  mov $3,%ecx
  .byte 0xf3,0x66,0xab
  mov %edi,8192
  mov %ecx,8196
  jnc .L779_c$
  movb $0x1,8448
.L779_c$: nop
  jnz .L779_z$
  movb $0x2,8449
.L779_z$: nop
  jns .L779_s$
  movb $0x3,8450
.L779_s$: nop
  jnp .L779_p$
  movb $0x4,8451
.L779_p$: nop
  jno .L779_o$
  movb $0x5,8452
.L779_o$: nop

    ret
         .size   rep_stos2w_cld_constant, .-rep_stos2w_cld_constant

    
.globl rep_stos2w_cld_allregs
         .type   rep_stos2w_cld_allregs, @function
rep_stos2w_cld_allregs:
      cld

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0x66,0xab
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_stos2w_cld_allregs, .-rep_stos2w_cld_allregs

    
.globl rep_stos2w_std
         .type   rep_stos2w_std, @function
rep_stos2w_std:
      std

  mov 4096,%edi
  mov 4100,%ax
  mov 4104,%ecx
  .byte 0xf3,0x66,0xab
  mov %edi,8192
  mov %ecx,8196
  jnc .L780_c$
  movb $0x1,8448
.L780_c$: nop
  jnz .L780_z$
  movb $0x2,8449
.L780_z$: nop
  jns .L780_s$
  movb $0x3,8450
.L780_s$: nop
  jnp .L780_p$
  movb $0x4,8451
.L780_p$: nop
  jno .L780_o$
  movb $0x5,8452
.L780_o$: nop

    ret
         .size   rep_stos2w_std, .-rep_stos2w_std

    
.globl rep_stos2w_std_constant
         .type   rep_stos2w_std_constant, @function
rep_stos2w_std_constant:
      std

  mov $1,%edi
  mov $2,%ax
  mov $3,%ecx
  .byte 0xf3,0x66,0xab
  mov %edi,8192
  mov %ecx,8196
  jnc .L781_c$
  movb $0x1,8448
.L781_c$: nop
  jnz .L781_z$
  movb $0x2,8449
.L781_z$: nop
  jns .L781_s$
  movb $0x3,8450
.L781_s$: nop
  jnp .L781_p$
  movb $0x4,8451
.L781_p$: nop
  jno .L781_o$
  movb $0x5,8452
.L781_o$: nop

    ret
         .size   rep_stos2w_std_constant, .-rep_stos2w_std_constant

    
.globl rep_stos2w_std_allregs
         .type   rep_stos2w_std_allregs, @function
rep_stos2w_std_allregs:
      std

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0x66,0xab
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_stos2w_std_allregs, .-rep_stos2w_std_allregs

    
.globl rep_stos2w
         .type   rep_stos2w, @function
rep_stos2w:
      

  mov 4096,%edi
  mov 4100,%ax
  mov 4104,%ecx
  .byte 0xf3,0x66,0xab
  mov %edi,8192
  mov %ecx,8196
  jnc .L782_c$
  movb $0x1,8448
.L782_c$: nop
  jnz .L782_z$
  movb $0x2,8449
.L782_z$: nop
  jns .L782_s$
  movb $0x3,8450
.L782_s$: nop
  jnp .L782_p$
  movb $0x4,8451
.L782_p$: nop
  jno .L782_o$
  movb $0x5,8452
.L782_o$: nop

    ret
         .size   rep_stos2w, .-rep_stos2w

    
.globl rep_stos2w_constant
         .type   rep_stos2w_constant, @function
rep_stos2w_constant:
      

  mov $1,%edi
  mov $2,%ax
  mov $3,%ecx
  .byte 0xf3,0x66,0xab
  mov %edi,8192
  mov %ecx,8196
  jnc .L783_c$
  movb $0x1,8448
.L783_c$: nop
  jnz .L783_z$
  movb $0x2,8449
.L783_z$: nop
  jns .L783_s$
  movb $0x3,8450
.L783_s$: nop
  jnp .L783_p$
  movb $0x4,8451
.L783_p$: nop
  jno .L783_o$
  movb $0x5,8452
.L783_o$: nop

    ret
         .size   rep_stos2w_constant, .-rep_stos2w_constant

    
.globl rep_stos2w_allregs
         .type   rep_stos2w_allregs, @function
rep_stos2w_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0x66,0xab
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_stos2w_allregs, .-rep_stos2w_allregs

    
.globl rep_stos2l_cld
         .type   rep_stos2l_cld, @function
rep_stos2l_cld:
      cld

  mov 4096,%edi
  mov 4100,%eax
  mov 4104,%ecx
  .byte 0xf3,0xab
  mov %edi,8192
  mov %ecx,8196
  jnc .L784_c$
  movb $0x1,8448
.L784_c$: nop
  jnz .L784_z$
  movb $0x2,8449
.L784_z$: nop
  jns .L784_s$
  movb $0x3,8450
.L784_s$: nop
  jnp .L784_p$
  movb $0x4,8451
.L784_p$: nop
  jno .L784_o$
  movb $0x5,8452
.L784_o$: nop

    ret
         .size   rep_stos2l_cld, .-rep_stos2l_cld

    
.globl rep_stos2l_cld_constant
         .type   rep_stos2l_cld_constant, @function
rep_stos2l_cld_constant:
      cld

  mov $1,%edi
  mov $2,%eax
  mov $3,%ecx
  .byte 0xf3,0xab
  mov %edi,8192
  mov %ecx,8196
  jnc .L785_c$
  movb $0x1,8448
.L785_c$: nop
  jnz .L785_z$
  movb $0x2,8449
.L785_z$: nop
  jns .L785_s$
  movb $0x3,8450
.L785_s$: nop
  jnp .L785_p$
  movb $0x4,8451
.L785_p$: nop
  jno .L785_o$
  movb $0x5,8452
.L785_o$: nop

    ret
         .size   rep_stos2l_cld_constant, .-rep_stos2l_cld_constant

    
.globl rep_stos2l_cld_allregs
         .type   rep_stos2l_cld_allregs, @function
rep_stos2l_cld_allregs:
      cld

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0xab
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_stos2l_cld_allregs, .-rep_stos2l_cld_allregs

    
.globl rep_stos2l_std
         .type   rep_stos2l_std, @function
rep_stos2l_std:
      std

  mov 4096,%edi
  mov 4100,%eax
  mov 4104,%ecx
  .byte 0xf3,0xab
  mov %edi,8192
  mov %ecx,8196
  jnc .L786_c$
  movb $0x1,8448
.L786_c$: nop
  jnz .L786_z$
  movb $0x2,8449
.L786_z$: nop
  jns .L786_s$
  movb $0x3,8450
.L786_s$: nop
  jnp .L786_p$
  movb $0x4,8451
.L786_p$: nop
  jno .L786_o$
  movb $0x5,8452
.L786_o$: nop

    ret
         .size   rep_stos2l_std, .-rep_stos2l_std

    
.globl rep_stos2l_std_constant
         .type   rep_stos2l_std_constant, @function
rep_stos2l_std_constant:
      std

  mov $1,%edi
  mov $2,%eax
  mov $3,%ecx
  .byte 0xf3,0xab
  mov %edi,8192
  mov %ecx,8196
  jnc .L787_c$
  movb $0x1,8448
.L787_c$: nop
  jnz .L787_z$
  movb $0x2,8449
.L787_z$: nop
  jns .L787_s$
  movb $0x3,8450
.L787_s$: nop
  jnp .L787_p$
  movb $0x4,8451
.L787_p$: nop
  jno .L787_o$
  movb $0x5,8452
.L787_o$: nop

    ret
         .size   rep_stos2l_std_constant, .-rep_stos2l_std_constant

    
.globl rep_stos2l_std_allregs
         .type   rep_stos2l_std_allregs, @function
rep_stos2l_std_allregs:
      std

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0xab
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_stos2l_std_allregs, .-rep_stos2l_std_allregs

    
.globl rep_stos2l
         .type   rep_stos2l, @function
rep_stos2l:
      

  mov 4096,%edi
  mov 4100,%eax
  mov 4104,%ecx
  .byte 0xf3,0xab
  mov %edi,8192
  mov %ecx,8196
  jnc .L788_c$
  movb $0x1,8448
.L788_c$: nop
  jnz .L788_z$
  movb $0x2,8449
.L788_z$: nop
  jns .L788_s$
  movb $0x3,8450
.L788_s$: nop
  jnp .L788_p$
  movb $0x4,8451
.L788_p$: nop
  jno .L788_o$
  movb $0x5,8452
.L788_o$: nop

    ret
         .size   rep_stos2l, .-rep_stos2l

    
.globl rep_stos2l_constant
         .type   rep_stos2l_constant, @function
rep_stos2l_constant:
      

  mov $1,%edi
  mov $2,%eax
  mov $3,%ecx
  .byte 0xf3,0xab
  mov %edi,8192
  mov %ecx,8196
  jnc .L789_c$
  movb $0x1,8448
.L789_c$: nop
  jnz .L789_z$
  movb $0x2,8449
.L789_z$: nop
  jns .L789_s$
  movb $0x3,8450
.L789_s$: nop
  jnp .L789_p$
  movb $0x4,8451
.L789_p$: nop
  jno .L789_o$
  movb $0x5,8452
.L789_o$: nop

    ret
         .size   rep_stos2l_constant, .-rep_stos2l_constant

    
.globl rep_stos2l_allregs
         .type   rep_stos2l_allregs, @function
rep_stos2l_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0xab
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_stos2l_allregs, .-rep_stos2l_allregs

    
.globl rep_cmps1b_cld
         .type   rep_cmps1b_cld, @function
rep_cmps1b_cld:
      cld

  mov 4096,%esi
  mov 4100,%edi
  mov 4104,%ecx
  .byte 0xf2,0xa6
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L790_c$
  movb $0x1,8448
.L790_c$: nop
  jnz .L790_z$
  movb $0x2,8449
.L790_z$: nop
  jns .L790_s$
  movb $0x3,8450
.L790_s$: nop
  jnp .L790_p$
  movb $0x4,8451
.L790_p$: nop
  jno .L790_o$
  movb $0x5,8452
.L790_o$: nop

    ret
         .size   rep_cmps1b_cld, .-rep_cmps1b_cld

    
.globl rep_cmps1b_cld_constant
         .type   rep_cmps1b_cld_constant, @function
rep_cmps1b_cld_constant:
      cld

  mov $1,%esi
  mov $2,%edi
  mov $3,%ecx
  .byte 0xf2,0xa6
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L791_c$
  movb $0x1,8448
.L791_c$: nop
  jnz .L791_z$
  movb $0x2,8449
.L791_z$: nop
  jns .L791_s$
  movb $0x3,8450
.L791_s$: nop
  jnp .L791_p$
  movb $0x4,8451
.L791_p$: nop
  jno .L791_o$
  movb $0x5,8452
.L791_o$: nop

    ret
         .size   rep_cmps1b_cld_constant, .-rep_cmps1b_cld_constant

    
.globl rep_cmps1b_cld_allregs
         .type   rep_cmps1b_cld_allregs, @function
rep_cmps1b_cld_allregs:
      cld

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0xa6
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_cmps1b_cld_allregs, .-rep_cmps1b_cld_allregs

    
.globl rep_cmps1b_std
         .type   rep_cmps1b_std, @function
rep_cmps1b_std:
      std

  mov 4096,%esi
  mov 4100,%edi
  mov 4104,%ecx
  .byte 0xf2,0xa6
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L792_c$
  movb $0x1,8448
.L792_c$: nop
  jnz .L792_z$
  movb $0x2,8449
.L792_z$: nop
  jns .L792_s$
  movb $0x3,8450
.L792_s$: nop
  jnp .L792_p$
  movb $0x4,8451
.L792_p$: nop
  jno .L792_o$
  movb $0x5,8452
.L792_o$: nop

    ret
         .size   rep_cmps1b_std, .-rep_cmps1b_std

    
.globl rep_cmps1b_std_constant
         .type   rep_cmps1b_std_constant, @function
rep_cmps1b_std_constant:
      std

  mov $1,%esi
  mov $2,%edi
  mov $3,%ecx
  .byte 0xf2,0xa6
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L793_c$
  movb $0x1,8448
.L793_c$: nop
  jnz .L793_z$
  movb $0x2,8449
.L793_z$: nop
  jns .L793_s$
  movb $0x3,8450
.L793_s$: nop
  jnp .L793_p$
  movb $0x4,8451
.L793_p$: nop
  jno .L793_o$
  movb $0x5,8452
.L793_o$: nop

    ret
         .size   rep_cmps1b_std_constant, .-rep_cmps1b_std_constant

    
.globl rep_cmps1b_std_allregs
         .type   rep_cmps1b_std_allregs, @function
rep_cmps1b_std_allregs:
      std

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0xa6
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_cmps1b_std_allregs, .-rep_cmps1b_std_allregs

    
.globl rep_cmps1b
         .type   rep_cmps1b, @function
rep_cmps1b:
      

  mov 4096,%esi
  mov 4100,%edi
  mov 4104,%ecx
  .byte 0xf2,0xa6
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L794_c$
  movb $0x1,8448
.L794_c$: nop
  jnz .L794_z$
  movb $0x2,8449
.L794_z$: nop
  jns .L794_s$
  movb $0x3,8450
.L794_s$: nop
  jnp .L794_p$
  movb $0x4,8451
.L794_p$: nop
  jno .L794_o$
  movb $0x5,8452
.L794_o$: nop

    ret
         .size   rep_cmps1b, .-rep_cmps1b

    
.globl rep_cmps1b_constant
         .type   rep_cmps1b_constant, @function
rep_cmps1b_constant:
      

  mov $1,%esi
  mov $2,%edi
  mov $3,%ecx
  .byte 0xf2,0xa6
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L795_c$
  movb $0x1,8448
.L795_c$: nop
  jnz .L795_z$
  movb $0x2,8449
.L795_z$: nop
  jns .L795_s$
  movb $0x3,8450
.L795_s$: nop
  jnp .L795_p$
  movb $0x4,8451
.L795_p$: nop
  jno .L795_o$
  movb $0x5,8452
.L795_o$: nop

    ret
         .size   rep_cmps1b_constant, .-rep_cmps1b_constant

    
.globl rep_cmps1b_allregs
         .type   rep_cmps1b_allregs, @function
rep_cmps1b_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0xa6
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_cmps1b_allregs, .-rep_cmps1b_allregs

    
.globl rep_cmps1w_cld
         .type   rep_cmps1w_cld, @function
rep_cmps1w_cld:
      cld

  mov 4096,%esi
  mov 4100,%edi
  mov 4104,%ecx
  .byte 0xf2,0x66,0xa7
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L796_c$
  movb $0x1,8448
.L796_c$: nop
  jnz .L796_z$
  movb $0x2,8449
.L796_z$: nop
  jns .L796_s$
  movb $0x3,8450
.L796_s$: nop
  jnp .L796_p$
  movb $0x4,8451
.L796_p$: nop
  jno .L796_o$
  movb $0x5,8452
.L796_o$: nop

    ret
         .size   rep_cmps1w_cld, .-rep_cmps1w_cld

    
.globl rep_cmps1w_cld_constant
         .type   rep_cmps1w_cld_constant, @function
rep_cmps1w_cld_constant:
      cld

  mov $1,%esi
  mov $2,%edi
  mov $3,%ecx
  .byte 0xf2,0x66,0xa7
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L797_c$
  movb $0x1,8448
.L797_c$: nop
  jnz .L797_z$
  movb $0x2,8449
.L797_z$: nop
  jns .L797_s$
  movb $0x3,8450
.L797_s$: nop
  jnp .L797_p$
  movb $0x4,8451
.L797_p$: nop
  jno .L797_o$
  movb $0x5,8452
.L797_o$: nop

    ret
         .size   rep_cmps1w_cld_constant, .-rep_cmps1w_cld_constant

    
.globl rep_cmps1w_cld_allregs
         .type   rep_cmps1w_cld_allregs, @function
rep_cmps1w_cld_allregs:
      cld

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0x66,0xa7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_cmps1w_cld_allregs, .-rep_cmps1w_cld_allregs

    
.globl rep_cmps1w_std
         .type   rep_cmps1w_std, @function
rep_cmps1w_std:
      std

  mov 4096,%esi
  mov 4100,%edi
  mov 4104,%ecx
  .byte 0xf2,0x66,0xa7
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L798_c$
  movb $0x1,8448
.L798_c$: nop
  jnz .L798_z$
  movb $0x2,8449
.L798_z$: nop
  jns .L798_s$
  movb $0x3,8450
.L798_s$: nop
  jnp .L798_p$
  movb $0x4,8451
.L798_p$: nop
  jno .L798_o$
  movb $0x5,8452
.L798_o$: nop

    ret
         .size   rep_cmps1w_std, .-rep_cmps1w_std

    
.globl rep_cmps1w_std_constant
         .type   rep_cmps1w_std_constant, @function
rep_cmps1w_std_constant:
      std

  mov $1,%esi
  mov $2,%edi
  mov $3,%ecx
  .byte 0xf2,0x66,0xa7
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L799_c$
  movb $0x1,8448
.L799_c$: nop
  jnz .L799_z$
  movb $0x2,8449
.L799_z$: nop
  jns .L799_s$
  movb $0x3,8450
.L799_s$: nop
  jnp .L799_p$
  movb $0x4,8451
.L799_p$: nop
  jno .L799_o$
  movb $0x5,8452
.L799_o$: nop

    ret
         .size   rep_cmps1w_std_constant, .-rep_cmps1w_std_constant

    
.globl rep_cmps1w_std_allregs
         .type   rep_cmps1w_std_allregs, @function
rep_cmps1w_std_allregs:
      std

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0x66,0xa7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_cmps1w_std_allregs, .-rep_cmps1w_std_allregs

    
.globl rep_cmps1w
         .type   rep_cmps1w, @function
rep_cmps1w:
      

  mov 4096,%esi
  mov 4100,%edi
  mov 4104,%ecx
  .byte 0xf2,0x66,0xa7
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L800_c$
  movb $0x1,8448
.L800_c$: nop
  jnz .L800_z$
  movb $0x2,8449
.L800_z$: nop
  jns .L800_s$
  movb $0x3,8450
.L800_s$: nop
  jnp .L800_p$
  movb $0x4,8451
.L800_p$: nop
  jno .L800_o$
  movb $0x5,8452
.L800_o$: nop

    ret
         .size   rep_cmps1w, .-rep_cmps1w

    
.globl rep_cmps1w_constant
         .type   rep_cmps1w_constant, @function
rep_cmps1w_constant:
      

  mov $1,%esi
  mov $2,%edi
  mov $3,%ecx
  .byte 0xf2,0x66,0xa7
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L801_c$
  movb $0x1,8448
.L801_c$: nop
  jnz .L801_z$
  movb $0x2,8449
.L801_z$: nop
  jns .L801_s$
  movb $0x3,8450
.L801_s$: nop
  jnp .L801_p$
  movb $0x4,8451
.L801_p$: nop
  jno .L801_o$
  movb $0x5,8452
.L801_o$: nop

    ret
         .size   rep_cmps1w_constant, .-rep_cmps1w_constant

    
.globl rep_cmps1w_allregs
         .type   rep_cmps1w_allregs, @function
rep_cmps1w_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0x66,0xa7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_cmps1w_allregs, .-rep_cmps1w_allregs

    
.globl rep_cmps1l_cld
         .type   rep_cmps1l_cld, @function
rep_cmps1l_cld:
      cld

  mov 4096,%esi
  mov 4100,%edi
  mov 4104,%ecx
  .byte 0xf2,0xa7
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L802_c$
  movb $0x1,8448
.L802_c$: nop
  jnz .L802_z$
  movb $0x2,8449
.L802_z$: nop
  jns .L802_s$
  movb $0x3,8450
.L802_s$: nop
  jnp .L802_p$
  movb $0x4,8451
.L802_p$: nop
  jno .L802_o$
  movb $0x5,8452
.L802_o$: nop

    ret
         .size   rep_cmps1l_cld, .-rep_cmps1l_cld

    
.globl rep_cmps1l_cld_constant
         .type   rep_cmps1l_cld_constant, @function
rep_cmps1l_cld_constant:
      cld

  mov $1,%esi
  mov $2,%edi
  mov $3,%ecx
  .byte 0xf2,0xa7
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L803_c$
  movb $0x1,8448
.L803_c$: nop
  jnz .L803_z$
  movb $0x2,8449
.L803_z$: nop
  jns .L803_s$
  movb $0x3,8450
.L803_s$: nop
  jnp .L803_p$
  movb $0x4,8451
.L803_p$: nop
  jno .L803_o$
  movb $0x5,8452
.L803_o$: nop

    ret
         .size   rep_cmps1l_cld_constant, .-rep_cmps1l_cld_constant

    
.globl rep_cmps1l_cld_allregs
         .type   rep_cmps1l_cld_allregs, @function
rep_cmps1l_cld_allregs:
      cld

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0xa7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_cmps1l_cld_allregs, .-rep_cmps1l_cld_allregs

    
.globl rep_cmps1l_std
         .type   rep_cmps1l_std, @function
rep_cmps1l_std:
      std

  mov 4096,%esi
  mov 4100,%edi
  mov 4104,%ecx
  .byte 0xf2,0xa7
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L804_c$
  movb $0x1,8448
.L804_c$: nop
  jnz .L804_z$
  movb $0x2,8449
.L804_z$: nop
  jns .L804_s$
  movb $0x3,8450
.L804_s$: nop
  jnp .L804_p$
  movb $0x4,8451
.L804_p$: nop
  jno .L804_o$
  movb $0x5,8452
.L804_o$: nop

    ret
         .size   rep_cmps1l_std, .-rep_cmps1l_std

    
.globl rep_cmps1l_std_constant
         .type   rep_cmps1l_std_constant, @function
rep_cmps1l_std_constant:
      std

  mov $1,%esi
  mov $2,%edi
  mov $3,%ecx
  .byte 0xf2,0xa7
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L805_c$
  movb $0x1,8448
.L805_c$: nop
  jnz .L805_z$
  movb $0x2,8449
.L805_z$: nop
  jns .L805_s$
  movb $0x3,8450
.L805_s$: nop
  jnp .L805_p$
  movb $0x4,8451
.L805_p$: nop
  jno .L805_o$
  movb $0x5,8452
.L805_o$: nop

    ret
         .size   rep_cmps1l_std_constant, .-rep_cmps1l_std_constant

    
.globl rep_cmps1l_std_allregs
         .type   rep_cmps1l_std_allregs, @function
rep_cmps1l_std_allregs:
      std

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0xa7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_cmps1l_std_allregs, .-rep_cmps1l_std_allregs

    
.globl rep_cmps1l
         .type   rep_cmps1l, @function
rep_cmps1l:
      

  mov 4096,%esi
  mov 4100,%edi
  mov 4104,%ecx
  .byte 0xf2,0xa7
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L806_c$
  movb $0x1,8448
.L806_c$: nop
  jnz .L806_z$
  movb $0x2,8449
.L806_z$: nop
  jns .L806_s$
  movb $0x3,8450
.L806_s$: nop
  jnp .L806_p$
  movb $0x4,8451
.L806_p$: nop
  jno .L806_o$
  movb $0x5,8452
.L806_o$: nop

    ret
         .size   rep_cmps1l, .-rep_cmps1l

    
.globl rep_cmps1l_constant
         .type   rep_cmps1l_constant, @function
rep_cmps1l_constant:
      

  mov $1,%esi
  mov $2,%edi
  mov $3,%ecx
  .byte 0xf2,0xa7
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L807_c$
  movb $0x1,8448
.L807_c$: nop
  jnz .L807_z$
  movb $0x2,8449
.L807_z$: nop
  jns .L807_s$
  movb $0x3,8450
.L807_s$: nop
  jnp .L807_p$
  movb $0x4,8451
.L807_p$: nop
  jno .L807_o$
  movb $0x5,8452
.L807_o$: nop

    ret
         .size   rep_cmps1l_constant, .-rep_cmps1l_constant

    
.globl rep_cmps1l_allregs
         .type   rep_cmps1l_allregs, @function
rep_cmps1l_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0xa7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_cmps1l_allregs, .-rep_cmps1l_allregs

    
.globl rep_cmps2b_cld
         .type   rep_cmps2b_cld, @function
rep_cmps2b_cld:
      cld

  mov 4096,%esi
  mov 4100,%edi
  mov 4104,%ecx
  .byte 0xf3,0xa6
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L808_c$
  movb $0x1,8448
.L808_c$: nop
  jnz .L808_z$
  movb $0x2,8449
.L808_z$: nop
  jns .L808_s$
  movb $0x3,8450
.L808_s$: nop
  jnp .L808_p$
  movb $0x4,8451
.L808_p$: nop
  jno .L808_o$
  movb $0x5,8452
.L808_o$: nop

    ret
         .size   rep_cmps2b_cld, .-rep_cmps2b_cld

    
.globl rep_cmps2b_cld_constant
         .type   rep_cmps2b_cld_constant, @function
rep_cmps2b_cld_constant:
      cld

  mov $1,%esi
  mov $2,%edi
  mov $3,%ecx
  .byte 0xf3,0xa6
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L809_c$
  movb $0x1,8448
.L809_c$: nop
  jnz .L809_z$
  movb $0x2,8449
.L809_z$: nop
  jns .L809_s$
  movb $0x3,8450
.L809_s$: nop
  jnp .L809_p$
  movb $0x4,8451
.L809_p$: nop
  jno .L809_o$
  movb $0x5,8452
.L809_o$: nop

    ret
         .size   rep_cmps2b_cld_constant, .-rep_cmps2b_cld_constant

    
.globl rep_cmps2b_cld_allregs
         .type   rep_cmps2b_cld_allregs, @function
rep_cmps2b_cld_allregs:
      cld

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0xa6
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_cmps2b_cld_allregs, .-rep_cmps2b_cld_allregs

    
.globl rep_cmps2b_std
         .type   rep_cmps2b_std, @function
rep_cmps2b_std:
      std

  mov 4096,%esi
  mov 4100,%edi
  mov 4104,%ecx
  .byte 0xf3,0xa6
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L810_c$
  movb $0x1,8448
.L810_c$: nop
  jnz .L810_z$
  movb $0x2,8449
.L810_z$: nop
  jns .L810_s$
  movb $0x3,8450
.L810_s$: nop
  jnp .L810_p$
  movb $0x4,8451
.L810_p$: nop
  jno .L810_o$
  movb $0x5,8452
.L810_o$: nop

    ret
         .size   rep_cmps2b_std, .-rep_cmps2b_std

    
.globl rep_cmps2b_std_constant
         .type   rep_cmps2b_std_constant, @function
rep_cmps2b_std_constant:
      std

  mov $1,%esi
  mov $2,%edi
  mov $3,%ecx
  .byte 0xf3,0xa6
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L811_c$
  movb $0x1,8448
.L811_c$: nop
  jnz .L811_z$
  movb $0x2,8449
.L811_z$: nop
  jns .L811_s$
  movb $0x3,8450
.L811_s$: nop
  jnp .L811_p$
  movb $0x4,8451
.L811_p$: nop
  jno .L811_o$
  movb $0x5,8452
.L811_o$: nop

    ret
         .size   rep_cmps2b_std_constant, .-rep_cmps2b_std_constant

    
.globl rep_cmps2b_std_allregs
         .type   rep_cmps2b_std_allregs, @function
rep_cmps2b_std_allregs:
      std

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0xa6
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_cmps2b_std_allregs, .-rep_cmps2b_std_allregs

    
.globl rep_cmps2b
         .type   rep_cmps2b, @function
rep_cmps2b:
      

  mov 4096,%esi
  mov 4100,%edi
  mov 4104,%ecx
  .byte 0xf3,0xa6
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L812_c$
  movb $0x1,8448
.L812_c$: nop
  jnz .L812_z$
  movb $0x2,8449
.L812_z$: nop
  jns .L812_s$
  movb $0x3,8450
.L812_s$: nop
  jnp .L812_p$
  movb $0x4,8451
.L812_p$: nop
  jno .L812_o$
  movb $0x5,8452
.L812_o$: nop

    ret
         .size   rep_cmps2b, .-rep_cmps2b

    
.globl rep_cmps2b_constant
         .type   rep_cmps2b_constant, @function
rep_cmps2b_constant:
      

  mov $1,%esi
  mov $2,%edi
  mov $3,%ecx
  .byte 0xf3,0xa6
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L813_c$
  movb $0x1,8448
.L813_c$: nop
  jnz .L813_z$
  movb $0x2,8449
.L813_z$: nop
  jns .L813_s$
  movb $0x3,8450
.L813_s$: nop
  jnp .L813_p$
  movb $0x4,8451
.L813_p$: nop
  jno .L813_o$
  movb $0x5,8452
.L813_o$: nop

    ret
         .size   rep_cmps2b_constant, .-rep_cmps2b_constant

    
.globl rep_cmps2b_allregs
         .type   rep_cmps2b_allregs, @function
rep_cmps2b_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0xa6
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_cmps2b_allregs, .-rep_cmps2b_allregs

    
.globl rep_cmps2w_cld
         .type   rep_cmps2w_cld, @function
rep_cmps2w_cld:
      cld

  mov 4096,%esi
  mov 4100,%edi
  mov 4104,%ecx
  .byte 0xf3,0x66,0xa7
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L814_c$
  movb $0x1,8448
.L814_c$: nop
  jnz .L814_z$
  movb $0x2,8449
.L814_z$: nop
  jns .L814_s$
  movb $0x3,8450
.L814_s$: nop
  jnp .L814_p$
  movb $0x4,8451
.L814_p$: nop
  jno .L814_o$
  movb $0x5,8452
.L814_o$: nop

    ret
         .size   rep_cmps2w_cld, .-rep_cmps2w_cld

    
.globl rep_cmps2w_cld_constant
         .type   rep_cmps2w_cld_constant, @function
rep_cmps2w_cld_constant:
      cld

  mov $1,%esi
  mov $2,%edi
  mov $3,%ecx
  .byte 0xf3,0x66,0xa7
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L815_c$
  movb $0x1,8448
.L815_c$: nop
  jnz .L815_z$
  movb $0x2,8449
.L815_z$: nop
  jns .L815_s$
  movb $0x3,8450
.L815_s$: nop
  jnp .L815_p$
  movb $0x4,8451
.L815_p$: nop
  jno .L815_o$
  movb $0x5,8452
.L815_o$: nop

    ret
         .size   rep_cmps2w_cld_constant, .-rep_cmps2w_cld_constant

    
.globl rep_cmps2w_cld_allregs
         .type   rep_cmps2w_cld_allregs, @function
rep_cmps2w_cld_allregs:
      cld

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0x66,0xa7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_cmps2w_cld_allregs, .-rep_cmps2w_cld_allregs

    
.globl rep_cmps2w_std
         .type   rep_cmps2w_std, @function
rep_cmps2w_std:
      std

  mov 4096,%esi
  mov 4100,%edi
  mov 4104,%ecx
  .byte 0xf3,0x66,0xa7
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L816_c$
  movb $0x1,8448
.L816_c$: nop
  jnz .L816_z$
  movb $0x2,8449
.L816_z$: nop
  jns .L816_s$
  movb $0x3,8450
.L816_s$: nop
  jnp .L816_p$
  movb $0x4,8451
.L816_p$: nop
  jno .L816_o$
  movb $0x5,8452
.L816_o$: nop

    ret
         .size   rep_cmps2w_std, .-rep_cmps2w_std

    
.globl rep_cmps2w_std_constant
         .type   rep_cmps2w_std_constant, @function
rep_cmps2w_std_constant:
      std

  mov $1,%esi
  mov $2,%edi
  mov $3,%ecx
  .byte 0xf3,0x66,0xa7
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L817_c$
  movb $0x1,8448
.L817_c$: nop
  jnz .L817_z$
  movb $0x2,8449
.L817_z$: nop
  jns .L817_s$
  movb $0x3,8450
.L817_s$: nop
  jnp .L817_p$
  movb $0x4,8451
.L817_p$: nop
  jno .L817_o$
  movb $0x5,8452
.L817_o$: nop

    ret
         .size   rep_cmps2w_std_constant, .-rep_cmps2w_std_constant

    
.globl rep_cmps2w_std_allregs
         .type   rep_cmps2w_std_allregs, @function
rep_cmps2w_std_allregs:
      std

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0x66,0xa7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_cmps2w_std_allregs, .-rep_cmps2w_std_allregs

    
.globl rep_cmps2w
         .type   rep_cmps2w, @function
rep_cmps2w:
      

  mov 4096,%esi
  mov 4100,%edi
  mov 4104,%ecx
  .byte 0xf3,0x66,0xa7
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L818_c$
  movb $0x1,8448
.L818_c$: nop
  jnz .L818_z$
  movb $0x2,8449
.L818_z$: nop
  jns .L818_s$
  movb $0x3,8450
.L818_s$: nop
  jnp .L818_p$
  movb $0x4,8451
.L818_p$: nop
  jno .L818_o$
  movb $0x5,8452
.L818_o$: nop

    ret
         .size   rep_cmps2w, .-rep_cmps2w

    
.globl rep_cmps2w_constant
         .type   rep_cmps2w_constant, @function
rep_cmps2w_constant:
      

  mov $1,%esi
  mov $2,%edi
  mov $3,%ecx
  .byte 0xf3,0x66,0xa7
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L819_c$
  movb $0x1,8448
.L819_c$: nop
  jnz .L819_z$
  movb $0x2,8449
.L819_z$: nop
  jns .L819_s$
  movb $0x3,8450
.L819_s$: nop
  jnp .L819_p$
  movb $0x4,8451
.L819_p$: nop
  jno .L819_o$
  movb $0x5,8452
.L819_o$: nop

    ret
         .size   rep_cmps2w_constant, .-rep_cmps2w_constant

    
.globl rep_cmps2w_allregs
         .type   rep_cmps2w_allregs, @function
rep_cmps2w_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0x66,0xa7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_cmps2w_allregs, .-rep_cmps2w_allregs

    
.globl rep_cmps2l_cld
         .type   rep_cmps2l_cld, @function
rep_cmps2l_cld:
      cld

  mov 4096,%esi
  mov 4100,%edi
  mov 4104,%ecx
  .byte 0xf3,0xa7
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L820_c$
  movb $0x1,8448
.L820_c$: nop
  jnz .L820_z$
  movb $0x2,8449
.L820_z$: nop
  jns .L820_s$
  movb $0x3,8450
.L820_s$: nop
  jnp .L820_p$
  movb $0x4,8451
.L820_p$: nop
  jno .L820_o$
  movb $0x5,8452
.L820_o$: nop

    ret
         .size   rep_cmps2l_cld, .-rep_cmps2l_cld

    
.globl rep_cmps2l_cld_constant
         .type   rep_cmps2l_cld_constant, @function
rep_cmps2l_cld_constant:
      cld

  mov $1,%esi
  mov $2,%edi
  mov $3,%ecx
  .byte 0xf3,0xa7
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L821_c$
  movb $0x1,8448
.L821_c$: nop
  jnz .L821_z$
  movb $0x2,8449
.L821_z$: nop
  jns .L821_s$
  movb $0x3,8450
.L821_s$: nop
  jnp .L821_p$
  movb $0x4,8451
.L821_p$: nop
  jno .L821_o$
  movb $0x5,8452
.L821_o$: nop

    ret
         .size   rep_cmps2l_cld_constant, .-rep_cmps2l_cld_constant

    
.globl rep_cmps2l_cld_allregs
         .type   rep_cmps2l_cld_allregs, @function
rep_cmps2l_cld_allregs:
      cld

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0xa7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_cmps2l_cld_allregs, .-rep_cmps2l_cld_allregs

    
.globl rep_cmps2l_std
         .type   rep_cmps2l_std, @function
rep_cmps2l_std:
      std

  mov 4096,%esi
  mov 4100,%edi
  mov 4104,%ecx
  .byte 0xf3,0xa7
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L822_c$
  movb $0x1,8448
.L822_c$: nop
  jnz .L822_z$
  movb $0x2,8449
.L822_z$: nop
  jns .L822_s$
  movb $0x3,8450
.L822_s$: nop
  jnp .L822_p$
  movb $0x4,8451
.L822_p$: nop
  jno .L822_o$
  movb $0x5,8452
.L822_o$: nop

    ret
         .size   rep_cmps2l_std, .-rep_cmps2l_std

    
.globl rep_cmps2l_std_constant
         .type   rep_cmps2l_std_constant, @function
rep_cmps2l_std_constant:
      std

  mov $1,%esi
  mov $2,%edi
  mov $3,%ecx
  .byte 0xf3,0xa7
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L823_c$
  movb $0x1,8448
.L823_c$: nop
  jnz .L823_z$
  movb $0x2,8449
.L823_z$: nop
  jns .L823_s$
  movb $0x3,8450
.L823_s$: nop
  jnp .L823_p$
  movb $0x4,8451
.L823_p$: nop
  jno .L823_o$
  movb $0x5,8452
.L823_o$: nop

    ret
         .size   rep_cmps2l_std_constant, .-rep_cmps2l_std_constant

    
.globl rep_cmps2l_std_allregs
         .type   rep_cmps2l_std_allregs, @function
rep_cmps2l_std_allregs:
      std

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0xa7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_cmps2l_std_allregs, .-rep_cmps2l_std_allregs

    
.globl rep_cmps2l
         .type   rep_cmps2l, @function
rep_cmps2l:
      

  mov 4096,%esi
  mov 4100,%edi
  mov 4104,%ecx
  .byte 0xf3,0xa7
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L824_c$
  movb $0x1,8448
.L824_c$: nop
  jnz .L824_z$
  movb $0x2,8449
.L824_z$: nop
  jns .L824_s$
  movb $0x3,8450
.L824_s$: nop
  jnp .L824_p$
  movb $0x4,8451
.L824_p$: nop
  jno .L824_o$
  movb $0x5,8452
.L824_o$: nop

    ret
         .size   rep_cmps2l, .-rep_cmps2l

    
.globl rep_cmps2l_constant
         .type   rep_cmps2l_constant, @function
rep_cmps2l_constant:
      

  mov $1,%esi
  mov $2,%edi
  mov $3,%ecx
  .byte 0xf3,0xa7
  mov %esi,8192
  mov %edi,8196
  mov %ecx,8200
  jnc .L825_c$
  movb $0x1,8448
.L825_c$: nop
  jnz .L825_z$
  movb $0x2,8449
.L825_z$: nop
  jns .L825_s$
  movb $0x3,8450
.L825_s$: nop
  jnp .L825_p$
  movb $0x4,8451
.L825_p$: nop
  jno .L825_o$
  movb $0x5,8452
.L825_o$: nop

    ret
         .size   rep_cmps2l_constant, .-rep_cmps2l_constant

    
.globl rep_cmps2l_allregs
         .type   rep_cmps2l_allregs, @function
rep_cmps2l_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0xa7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_cmps2l_allregs, .-rep_cmps2l_allregs

    
.globl rep_cmps_seg1
         .type   rep_cmps_seg1, @function
rep_cmps_seg1:
      


  .byte 0x36,0xf2,0xa6


    ret
         .size   rep_cmps_seg1, .-rep_cmps_seg1

    
.globl rep_cmps_seg1_constant
         .type   rep_cmps_seg1_constant, @function
rep_cmps_seg1_constant:
      


  .byte 0x36,0xf2,0xa6


    ret
         .size   rep_cmps_seg1_constant, .-rep_cmps_seg1_constant

    
.globl rep_cmps_seg1_allregs
         .type   rep_cmps_seg1_allregs, @function
rep_cmps_seg1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x36,0xf2,0xa6
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_cmps_seg1_allregs, .-rep_cmps_seg1_allregs

    
.globl rep_cmps_clear
         .type   rep_cmps_clear, @function
rep_cmps_clear:
      


  .byte 0xfc,0x36,0xf2,0xa6


    ret
         .size   rep_cmps_clear, .-rep_cmps_clear

    
.globl rep_cmps_clear_constant
         .type   rep_cmps_clear_constant, @function
rep_cmps_clear_constant:
      


  .byte 0xfc,0x36,0xf2,0xa6


    ret
         .size   rep_cmps_clear_constant, .-rep_cmps_clear_constant

    
.globl rep_cmps_clear_allregs
         .type   rep_cmps_clear_allregs, @function
rep_cmps_clear_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xfc,0x36,0xf2,0xa6
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_cmps_clear_allregs, .-rep_cmps_clear_allregs

    
.globl rep_cmps_set
         .type   rep_cmps_set, @function
rep_cmps_set:
      


  .byte 0xfd,0x36,0xf2,0xa6


    ret
         .size   rep_cmps_set, .-rep_cmps_set

    
.globl rep_cmps_set_constant
         .type   rep_cmps_set_constant, @function
rep_cmps_set_constant:
      


  .byte 0xfd,0x36,0xf2,0xa6


    ret
         .size   rep_cmps_set_constant, .-rep_cmps_set_constant

    
.globl rep_cmps_set_allregs
         .type   rep_cmps_set_allregs, @function
rep_cmps_set_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xfd,0x36,0xf2,0xa6
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_cmps_set_allregs, .-rep_cmps_set_allregs

    
.globl rep_cmpsb_memcmp
         .type   rep_cmpsb_memcmp, @function
rep_cmpsb_memcmp:
      


  .byte 0x55,0xb9,0x08,0x00,0x00,0x00,0x89,0xe5,0xfc,0x83,0xec,0x08,0x89,0x34,0x24,0x8b,0x75,0x08,0x89,0x7c,0x24,0x04,0x8b,0x7d,0x0c,0xf3,0xa6,0x0f,0x92,0xc0,0x8b,0x34,0x24,0x8b,0x7c,0x24,0x04,0x0f,0x97,0xc2,0x89,0xec,0x5d,0x28,0xc2,0x0f,0xbe,0xc2,0xc3


    ret
         .size   rep_cmpsb_memcmp, .-rep_cmpsb_memcmp

    
.globl rep_cmpsb_memcmp_constant
         .type   rep_cmpsb_memcmp_constant, @function
rep_cmpsb_memcmp_constant:
      


  .byte 0x55,0xb9,0x08,0x00,0x00,0x00,0x89,0xe5,0xfc,0x83,0xec,0x08,0x89,0x34,0x24,0x8b,0x75,0x08,0x89,0x7c,0x24,0x04,0x8b,0x7d,0x0c,0xf3,0xa6,0x0f,0x92,0xc0,0x8b,0x34,0x24,0x8b,0x7c,0x24,0x04,0x0f,0x97,0xc2,0x89,0xec,0x5d,0x28,0xc2,0x0f,0xbe,0xc2,0xc3


    ret
         .size   rep_cmpsb_memcmp_constant, .-rep_cmpsb_memcmp_constant

    
.globl rep_cmpsb_memcmp_allregs
         .type   rep_cmpsb_memcmp_allregs, @function
rep_cmpsb_memcmp_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x55,0xb9,0x08,0x00,0x00,0x00,0x89,0xe5,0xfc,0x83,0xec,0x08,0x89,0x34,0x24,0x8b,0x75,0x08,0x89,0x7c,0x24,0x04,0x8b,0x7d,0x0c,0xf3,0xa6,0x0f,0x92,0xc0,0x8b,0x34,0x24,0x8b,0x7c,0x24,0x04,0x0f,0x97,0xc2,0x89,0xec,0x5d,0x28,0xc2,0x0f,0xbe,0xc2,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_cmpsb_memcmp_allregs, .-rep_cmpsb_memcmp_allregs

    
.globl rep_scas1b_cld
         .type   rep_scas1b_cld, @function
rep_scas1b_cld:
      cld

  mov 4096,%edi
  mov 4100,%al
  mov 4104,%ecx
  .byte 0xf2,0xae
  mov %edi,8192
  mov %ecx,8196
  jnc .L826_c$
  movb $0x1,8448
.L826_c$: nop
  jnz .L826_z$
  movb $0x2,8449
.L826_z$: nop
  jns .L826_s$
  movb $0x3,8450
.L826_s$: nop
  jnp .L826_p$
  movb $0x4,8451
.L826_p$: nop
  jno .L826_o$
  movb $0x5,8452
.L826_o$: nop

    ret
         .size   rep_scas1b_cld, .-rep_scas1b_cld

    
.globl rep_scas1b_cld_constant
         .type   rep_scas1b_cld_constant, @function
rep_scas1b_cld_constant:
      cld

  mov $1,%edi
  mov $2,%al
  mov $3,%ecx
  .byte 0xf2,0xae
  mov %edi,8192
  mov %ecx,8196
  jnc .L827_c$
  movb $0x1,8448
.L827_c$: nop
  jnz .L827_z$
  movb $0x2,8449
.L827_z$: nop
  jns .L827_s$
  movb $0x3,8450
.L827_s$: nop
  jnp .L827_p$
  movb $0x4,8451
.L827_p$: nop
  jno .L827_o$
  movb $0x5,8452
.L827_o$: nop

    ret
         .size   rep_scas1b_cld_constant, .-rep_scas1b_cld_constant

    
.globl rep_scas1b_cld_allregs
         .type   rep_scas1b_cld_allregs, @function
rep_scas1b_cld_allregs:
      cld

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0xae
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_scas1b_cld_allregs, .-rep_scas1b_cld_allregs

    
.globl rep_scas1b_std
         .type   rep_scas1b_std, @function
rep_scas1b_std:
      std

  mov 4096,%edi
  mov 4100,%al
  mov 4104,%ecx
  .byte 0xf2,0xae
  mov %edi,8192
  mov %ecx,8196
  jnc .L828_c$
  movb $0x1,8448
.L828_c$: nop
  jnz .L828_z$
  movb $0x2,8449
.L828_z$: nop
  jns .L828_s$
  movb $0x3,8450
.L828_s$: nop
  jnp .L828_p$
  movb $0x4,8451
.L828_p$: nop
  jno .L828_o$
  movb $0x5,8452
.L828_o$: nop

    ret
         .size   rep_scas1b_std, .-rep_scas1b_std

    
.globl rep_scas1b_std_constant
         .type   rep_scas1b_std_constant, @function
rep_scas1b_std_constant:
      std

  mov $1,%edi
  mov $2,%al
  mov $3,%ecx
  .byte 0xf2,0xae
  mov %edi,8192
  mov %ecx,8196
  jnc .L829_c$
  movb $0x1,8448
.L829_c$: nop
  jnz .L829_z$
  movb $0x2,8449
.L829_z$: nop
  jns .L829_s$
  movb $0x3,8450
.L829_s$: nop
  jnp .L829_p$
  movb $0x4,8451
.L829_p$: nop
  jno .L829_o$
  movb $0x5,8452
.L829_o$: nop

    ret
         .size   rep_scas1b_std_constant, .-rep_scas1b_std_constant

    
.globl rep_scas1b_std_allregs
         .type   rep_scas1b_std_allregs, @function
rep_scas1b_std_allregs:
      std

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0xae
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_scas1b_std_allregs, .-rep_scas1b_std_allregs

    
.globl rep_scas1b
         .type   rep_scas1b, @function
rep_scas1b:
      

  mov 4096,%edi
  mov 4100,%al
  mov 4104,%ecx
  .byte 0xf2,0xae
  mov %edi,8192
  mov %ecx,8196
  jnc .L830_c$
  movb $0x1,8448
.L830_c$: nop
  jnz .L830_z$
  movb $0x2,8449
.L830_z$: nop
  jns .L830_s$
  movb $0x3,8450
.L830_s$: nop
  jnp .L830_p$
  movb $0x4,8451
.L830_p$: nop
  jno .L830_o$
  movb $0x5,8452
.L830_o$: nop

    ret
         .size   rep_scas1b, .-rep_scas1b

    
.globl rep_scas1b_constant
         .type   rep_scas1b_constant, @function
rep_scas1b_constant:
      

  mov $1,%edi
  mov $2,%al
  mov $3,%ecx
  .byte 0xf2,0xae
  mov %edi,8192
  mov %ecx,8196
  jnc .L831_c$
  movb $0x1,8448
.L831_c$: nop
  jnz .L831_z$
  movb $0x2,8449
.L831_z$: nop
  jns .L831_s$
  movb $0x3,8450
.L831_s$: nop
  jnp .L831_p$
  movb $0x4,8451
.L831_p$: nop
  jno .L831_o$
  movb $0x5,8452
.L831_o$: nop

    ret
         .size   rep_scas1b_constant, .-rep_scas1b_constant

    
.globl rep_scas1b_allregs
         .type   rep_scas1b_allregs, @function
rep_scas1b_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0xae
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_scas1b_allregs, .-rep_scas1b_allregs

    
.globl rep_scas1w_cld
         .type   rep_scas1w_cld, @function
rep_scas1w_cld:
      cld

  mov 4096,%edi
  mov 4100,%ax
  mov 4104,%ecx
  .byte 0xf2,0x66,0xaf
  mov %edi,8192
  mov %ecx,8196
  jnc .L832_c$
  movb $0x1,8448
.L832_c$: nop
  jnz .L832_z$
  movb $0x2,8449
.L832_z$: nop
  jns .L832_s$
  movb $0x3,8450
.L832_s$: nop
  jnp .L832_p$
  movb $0x4,8451
.L832_p$: nop
  jno .L832_o$
  movb $0x5,8452
.L832_o$: nop

    ret
         .size   rep_scas1w_cld, .-rep_scas1w_cld

    
.globl rep_scas1w_cld_constant
         .type   rep_scas1w_cld_constant, @function
rep_scas1w_cld_constant:
      cld

  mov $1,%edi
  mov $2,%ax
  mov $3,%ecx
  .byte 0xf2,0x66,0xaf
  mov %edi,8192
  mov %ecx,8196
  jnc .L833_c$
  movb $0x1,8448
.L833_c$: nop
  jnz .L833_z$
  movb $0x2,8449
.L833_z$: nop
  jns .L833_s$
  movb $0x3,8450
.L833_s$: nop
  jnp .L833_p$
  movb $0x4,8451
.L833_p$: nop
  jno .L833_o$
  movb $0x5,8452
.L833_o$: nop

    ret
         .size   rep_scas1w_cld_constant, .-rep_scas1w_cld_constant

    
.globl rep_scas1w_cld_allregs
         .type   rep_scas1w_cld_allregs, @function
rep_scas1w_cld_allregs:
      cld

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0x66,0xaf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_scas1w_cld_allregs, .-rep_scas1w_cld_allregs

    
.globl rep_scas1w_std
         .type   rep_scas1w_std, @function
rep_scas1w_std:
      std

  mov 4096,%edi
  mov 4100,%ax
  mov 4104,%ecx
  .byte 0xf2,0x66,0xaf
  mov %edi,8192
  mov %ecx,8196
  jnc .L834_c$
  movb $0x1,8448
.L834_c$: nop
  jnz .L834_z$
  movb $0x2,8449
.L834_z$: nop
  jns .L834_s$
  movb $0x3,8450
.L834_s$: nop
  jnp .L834_p$
  movb $0x4,8451
.L834_p$: nop
  jno .L834_o$
  movb $0x5,8452
.L834_o$: nop

    ret
         .size   rep_scas1w_std, .-rep_scas1w_std

    
.globl rep_scas1w_std_constant
         .type   rep_scas1w_std_constant, @function
rep_scas1w_std_constant:
      std

  mov $1,%edi
  mov $2,%ax
  mov $3,%ecx
  .byte 0xf2,0x66,0xaf
  mov %edi,8192
  mov %ecx,8196
  jnc .L835_c$
  movb $0x1,8448
.L835_c$: nop
  jnz .L835_z$
  movb $0x2,8449
.L835_z$: nop
  jns .L835_s$
  movb $0x3,8450
.L835_s$: nop
  jnp .L835_p$
  movb $0x4,8451
.L835_p$: nop
  jno .L835_o$
  movb $0x5,8452
.L835_o$: nop

    ret
         .size   rep_scas1w_std_constant, .-rep_scas1w_std_constant

    
.globl rep_scas1w_std_allregs
         .type   rep_scas1w_std_allregs, @function
rep_scas1w_std_allregs:
      std

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0x66,0xaf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_scas1w_std_allregs, .-rep_scas1w_std_allregs

    
.globl rep_scas1w
         .type   rep_scas1w, @function
rep_scas1w:
      

  mov 4096,%edi
  mov 4100,%ax
  mov 4104,%ecx
  .byte 0xf2,0x66,0xaf
  mov %edi,8192
  mov %ecx,8196
  jnc .L836_c$
  movb $0x1,8448
.L836_c$: nop
  jnz .L836_z$
  movb $0x2,8449
.L836_z$: nop
  jns .L836_s$
  movb $0x3,8450
.L836_s$: nop
  jnp .L836_p$
  movb $0x4,8451
.L836_p$: nop
  jno .L836_o$
  movb $0x5,8452
.L836_o$: nop

    ret
         .size   rep_scas1w, .-rep_scas1w

    
.globl rep_scas1w_constant
         .type   rep_scas1w_constant, @function
rep_scas1w_constant:
      

  mov $1,%edi
  mov $2,%ax
  mov $3,%ecx
  .byte 0xf2,0x66,0xaf
  mov %edi,8192
  mov %ecx,8196
  jnc .L837_c$
  movb $0x1,8448
.L837_c$: nop
  jnz .L837_z$
  movb $0x2,8449
.L837_z$: nop
  jns .L837_s$
  movb $0x3,8450
.L837_s$: nop
  jnp .L837_p$
  movb $0x4,8451
.L837_p$: nop
  jno .L837_o$
  movb $0x5,8452
.L837_o$: nop

    ret
         .size   rep_scas1w_constant, .-rep_scas1w_constant

    
.globl rep_scas1w_allregs
         .type   rep_scas1w_allregs, @function
rep_scas1w_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0x66,0xaf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_scas1w_allregs, .-rep_scas1w_allregs

    
.globl rep_scas1l_cld
         .type   rep_scas1l_cld, @function
rep_scas1l_cld:
      cld

  mov 4096,%edi
  mov 4100,%eax
  mov 4104,%ecx
  .byte 0xf2,0xaf
  mov %edi,8192
  mov %ecx,8196
  jnc .L838_c$
  movb $0x1,8448
.L838_c$: nop
  jnz .L838_z$
  movb $0x2,8449
.L838_z$: nop
  jns .L838_s$
  movb $0x3,8450
.L838_s$: nop
  jnp .L838_p$
  movb $0x4,8451
.L838_p$: nop
  jno .L838_o$
  movb $0x5,8452
.L838_o$: nop

    ret
         .size   rep_scas1l_cld, .-rep_scas1l_cld

    
.globl rep_scas1l_cld_constant
         .type   rep_scas1l_cld_constant, @function
rep_scas1l_cld_constant:
      cld

  mov $1,%edi
  mov $2,%eax
  mov $3,%ecx
  .byte 0xf2,0xaf
  mov %edi,8192
  mov %ecx,8196
  jnc .L839_c$
  movb $0x1,8448
.L839_c$: nop
  jnz .L839_z$
  movb $0x2,8449
.L839_z$: nop
  jns .L839_s$
  movb $0x3,8450
.L839_s$: nop
  jnp .L839_p$
  movb $0x4,8451
.L839_p$: nop
  jno .L839_o$
  movb $0x5,8452
.L839_o$: nop

    ret
         .size   rep_scas1l_cld_constant, .-rep_scas1l_cld_constant

    
.globl rep_scas1l_cld_allregs
         .type   rep_scas1l_cld_allregs, @function
rep_scas1l_cld_allregs:
      cld

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0xaf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_scas1l_cld_allregs, .-rep_scas1l_cld_allregs

    
.globl rep_scas1l_std
         .type   rep_scas1l_std, @function
rep_scas1l_std:
      std

  mov 4096,%edi
  mov 4100,%eax
  mov 4104,%ecx
  .byte 0xf2,0xaf
  mov %edi,8192
  mov %ecx,8196
  jnc .L840_c$
  movb $0x1,8448
.L840_c$: nop
  jnz .L840_z$
  movb $0x2,8449
.L840_z$: nop
  jns .L840_s$
  movb $0x3,8450
.L840_s$: nop
  jnp .L840_p$
  movb $0x4,8451
.L840_p$: nop
  jno .L840_o$
  movb $0x5,8452
.L840_o$: nop

    ret
         .size   rep_scas1l_std, .-rep_scas1l_std

    
.globl rep_scas1l_std_constant
         .type   rep_scas1l_std_constant, @function
rep_scas1l_std_constant:
      std

  mov $1,%edi
  mov $2,%eax
  mov $3,%ecx
  .byte 0xf2,0xaf
  mov %edi,8192
  mov %ecx,8196
  jnc .L841_c$
  movb $0x1,8448
.L841_c$: nop
  jnz .L841_z$
  movb $0x2,8449
.L841_z$: nop
  jns .L841_s$
  movb $0x3,8450
.L841_s$: nop
  jnp .L841_p$
  movb $0x4,8451
.L841_p$: nop
  jno .L841_o$
  movb $0x5,8452
.L841_o$: nop

    ret
         .size   rep_scas1l_std_constant, .-rep_scas1l_std_constant

    
.globl rep_scas1l_std_allregs
         .type   rep_scas1l_std_allregs, @function
rep_scas1l_std_allregs:
      std

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0xaf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_scas1l_std_allregs, .-rep_scas1l_std_allregs

    
.globl rep_scas1l
         .type   rep_scas1l, @function
rep_scas1l:
      

  mov 4096,%edi
  mov 4100,%eax
  mov 4104,%ecx
  .byte 0xf2,0xaf
  mov %edi,8192
  mov %ecx,8196
  jnc .L842_c$
  movb $0x1,8448
.L842_c$: nop
  jnz .L842_z$
  movb $0x2,8449
.L842_z$: nop
  jns .L842_s$
  movb $0x3,8450
.L842_s$: nop
  jnp .L842_p$
  movb $0x4,8451
.L842_p$: nop
  jno .L842_o$
  movb $0x5,8452
.L842_o$: nop

    ret
         .size   rep_scas1l, .-rep_scas1l

    
.globl rep_scas1l_constant
         .type   rep_scas1l_constant, @function
rep_scas1l_constant:
      

  mov $1,%edi
  mov $2,%eax
  mov $3,%ecx
  .byte 0xf2,0xaf
  mov %edi,8192
  mov %ecx,8196
  jnc .L843_c$
  movb $0x1,8448
.L843_c$: nop
  jnz .L843_z$
  movb $0x2,8449
.L843_z$: nop
  jns .L843_s$
  movb $0x3,8450
.L843_s$: nop
  jnp .L843_p$
  movb $0x4,8451
.L843_p$: nop
  jno .L843_o$
  movb $0x5,8452
.L843_o$: nop

    ret
         .size   rep_scas1l_constant, .-rep_scas1l_constant

    
.globl rep_scas1l_allregs
         .type   rep_scas1l_allregs, @function
rep_scas1l_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0xaf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_scas1l_allregs, .-rep_scas1l_allregs

    
.globl rep_scas2b_cld
         .type   rep_scas2b_cld, @function
rep_scas2b_cld:
      cld

  mov 4096,%edi
  mov 4100,%al
  mov 4104,%ecx
  .byte 0xf3,0xae
  mov %edi,8192
  mov %ecx,8196
  jnc .L844_c$
  movb $0x1,8448
.L844_c$: nop
  jnz .L844_z$
  movb $0x2,8449
.L844_z$: nop
  jns .L844_s$
  movb $0x3,8450
.L844_s$: nop
  jnp .L844_p$
  movb $0x4,8451
.L844_p$: nop
  jno .L844_o$
  movb $0x5,8452
.L844_o$: nop

    ret
         .size   rep_scas2b_cld, .-rep_scas2b_cld

    
.globl rep_scas2b_cld_constant
         .type   rep_scas2b_cld_constant, @function
rep_scas2b_cld_constant:
      cld

  mov $1,%edi
  mov $2,%al
  mov $3,%ecx
  .byte 0xf3,0xae
  mov %edi,8192
  mov %ecx,8196
  jnc .L845_c$
  movb $0x1,8448
.L845_c$: nop
  jnz .L845_z$
  movb $0x2,8449
.L845_z$: nop
  jns .L845_s$
  movb $0x3,8450
.L845_s$: nop
  jnp .L845_p$
  movb $0x4,8451
.L845_p$: nop
  jno .L845_o$
  movb $0x5,8452
.L845_o$: nop

    ret
         .size   rep_scas2b_cld_constant, .-rep_scas2b_cld_constant

    
.globl rep_scas2b_cld_allregs
         .type   rep_scas2b_cld_allregs, @function
rep_scas2b_cld_allregs:
      cld

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0xae
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_scas2b_cld_allregs, .-rep_scas2b_cld_allregs

    
.globl rep_scas2b_std
         .type   rep_scas2b_std, @function
rep_scas2b_std:
      std

  mov 4096,%edi
  mov 4100,%al
  mov 4104,%ecx
  .byte 0xf3,0xae
  mov %edi,8192
  mov %ecx,8196
  jnc .L846_c$
  movb $0x1,8448
.L846_c$: nop
  jnz .L846_z$
  movb $0x2,8449
.L846_z$: nop
  jns .L846_s$
  movb $0x3,8450
.L846_s$: nop
  jnp .L846_p$
  movb $0x4,8451
.L846_p$: nop
  jno .L846_o$
  movb $0x5,8452
.L846_o$: nop

    ret
         .size   rep_scas2b_std, .-rep_scas2b_std

    
.globl rep_scas2b_std_constant
         .type   rep_scas2b_std_constant, @function
rep_scas2b_std_constant:
      std

  mov $1,%edi
  mov $2,%al
  mov $3,%ecx
  .byte 0xf3,0xae
  mov %edi,8192
  mov %ecx,8196
  jnc .L847_c$
  movb $0x1,8448
.L847_c$: nop
  jnz .L847_z$
  movb $0x2,8449
.L847_z$: nop
  jns .L847_s$
  movb $0x3,8450
.L847_s$: nop
  jnp .L847_p$
  movb $0x4,8451
.L847_p$: nop
  jno .L847_o$
  movb $0x5,8452
.L847_o$: nop

    ret
         .size   rep_scas2b_std_constant, .-rep_scas2b_std_constant

    
.globl rep_scas2b_std_allregs
         .type   rep_scas2b_std_allregs, @function
rep_scas2b_std_allregs:
      std

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0xae
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_scas2b_std_allregs, .-rep_scas2b_std_allregs

    
.globl rep_scas2b
         .type   rep_scas2b, @function
rep_scas2b:
      

  mov 4096,%edi
  mov 4100,%al
  mov 4104,%ecx
  .byte 0xf3,0xae
  mov %edi,8192
  mov %ecx,8196
  jnc .L848_c$
  movb $0x1,8448
.L848_c$: nop
  jnz .L848_z$
  movb $0x2,8449
.L848_z$: nop
  jns .L848_s$
  movb $0x3,8450
.L848_s$: nop
  jnp .L848_p$
  movb $0x4,8451
.L848_p$: nop
  jno .L848_o$
  movb $0x5,8452
.L848_o$: nop

    ret
         .size   rep_scas2b, .-rep_scas2b

    
.globl rep_scas2b_constant
         .type   rep_scas2b_constant, @function
rep_scas2b_constant:
      

  mov $1,%edi
  mov $2,%al
  mov $3,%ecx
  .byte 0xf3,0xae
  mov %edi,8192
  mov %ecx,8196
  jnc .L849_c$
  movb $0x1,8448
.L849_c$: nop
  jnz .L849_z$
  movb $0x2,8449
.L849_z$: nop
  jns .L849_s$
  movb $0x3,8450
.L849_s$: nop
  jnp .L849_p$
  movb $0x4,8451
.L849_p$: nop
  jno .L849_o$
  movb $0x5,8452
.L849_o$: nop

    ret
         .size   rep_scas2b_constant, .-rep_scas2b_constant

    
.globl rep_scas2b_allregs
         .type   rep_scas2b_allregs, @function
rep_scas2b_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0xae
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_scas2b_allregs, .-rep_scas2b_allregs

    
.globl rep_scas2w_cld
         .type   rep_scas2w_cld, @function
rep_scas2w_cld:
      cld

  mov 4096,%edi
  mov 4100,%ax
  mov 4104,%ecx
  .byte 0xf3,0x66,0xaf
  mov %edi,8192
  mov %ecx,8196
  jnc .L850_c$
  movb $0x1,8448
.L850_c$: nop
  jnz .L850_z$
  movb $0x2,8449
.L850_z$: nop
  jns .L850_s$
  movb $0x3,8450
.L850_s$: nop
  jnp .L850_p$
  movb $0x4,8451
.L850_p$: nop
  jno .L850_o$
  movb $0x5,8452
.L850_o$: nop

    ret
         .size   rep_scas2w_cld, .-rep_scas2w_cld

    
.globl rep_scas2w_cld_constant
         .type   rep_scas2w_cld_constant, @function
rep_scas2w_cld_constant:
      cld

  mov $1,%edi
  mov $2,%ax
  mov $3,%ecx
  .byte 0xf3,0x66,0xaf
  mov %edi,8192
  mov %ecx,8196
  jnc .L851_c$
  movb $0x1,8448
.L851_c$: nop
  jnz .L851_z$
  movb $0x2,8449
.L851_z$: nop
  jns .L851_s$
  movb $0x3,8450
.L851_s$: nop
  jnp .L851_p$
  movb $0x4,8451
.L851_p$: nop
  jno .L851_o$
  movb $0x5,8452
.L851_o$: nop

    ret
         .size   rep_scas2w_cld_constant, .-rep_scas2w_cld_constant

    
.globl rep_scas2w_cld_allregs
         .type   rep_scas2w_cld_allregs, @function
rep_scas2w_cld_allregs:
      cld

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0x66,0xaf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_scas2w_cld_allregs, .-rep_scas2w_cld_allregs

    
.globl rep_scas2w_std
         .type   rep_scas2w_std, @function
rep_scas2w_std:
      std

  mov 4096,%edi
  mov 4100,%ax
  mov 4104,%ecx
  .byte 0xf3,0x66,0xaf
  mov %edi,8192
  mov %ecx,8196
  jnc .L852_c$
  movb $0x1,8448
.L852_c$: nop
  jnz .L852_z$
  movb $0x2,8449
.L852_z$: nop
  jns .L852_s$
  movb $0x3,8450
.L852_s$: nop
  jnp .L852_p$
  movb $0x4,8451
.L852_p$: nop
  jno .L852_o$
  movb $0x5,8452
.L852_o$: nop

    ret
         .size   rep_scas2w_std, .-rep_scas2w_std

    
.globl rep_scas2w_std_constant
         .type   rep_scas2w_std_constant, @function
rep_scas2w_std_constant:
      std

  mov $1,%edi
  mov $2,%ax
  mov $3,%ecx
  .byte 0xf3,0x66,0xaf
  mov %edi,8192
  mov %ecx,8196
  jnc .L853_c$
  movb $0x1,8448
.L853_c$: nop
  jnz .L853_z$
  movb $0x2,8449
.L853_z$: nop
  jns .L853_s$
  movb $0x3,8450
.L853_s$: nop
  jnp .L853_p$
  movb $0x4,8451
.L853_p$: nop
  jno .L853_o$
  movb $0x5,8452
.L853_o$: nop

    ret
         .size   rep_scas2w_std_constant, .-rep_scas2w_std_constant

    
.globl rep_scas2w_std_allregs
         .type   rep_scas2w_std_allregs, @function
rep_scas2w_std_allregs:
      std

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0x66,0xaf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_scas2w_std_allregs, .-rep_scas2w_std_allregs

    
.globl rep_scas2w
         .type   rep_scas2w, @function
rep_scas2w:
      

  mov 4096,%edi
  mov 4100,%ax
  mov 4104,%ecx
  .byte 0xf3,0x66,0xaf
  mov %edi,8192
  mov %ecx,8196
  jnc .L854_c$
  movb $0x1,8448
.L854_c$: nop
  jnz .L854_z$
  movb $0x2,8449
.L854_z$: nop
  jns .L854_s$
  movb $0x3,8450
.L854_s$: nop
  jnp .L854_p$
  movb $0x4,8451
.L854_p$: nop
  jno .L854_o$
  movb $0x5,8452
.L854_o$: nop

    ret
         .size   rep_scas2w, .-rep_scas2w

    
.globl rep_scas2w_constant
         .type   rep_scas2w_constant, @function
rep_scas2w_constant:
      

  mov $1,%edi
  mov $2,%ax
  mov $3,%ecx
  .byte 0xf3,0x66,0xaf
  mov %edi,8192
  mov %ecx,8196
  jnc .L855_c$
  movb $0x1,8448
.L855_c$: nop
  jnz .L855_z$
  movb $0x2,8449
.L855_z$: nop
  jns .L855_s$
  movb $0x3,8450
.L855_s$: nop
  jnp .L855_p$
  movb $0x4,8451
.L855_p$: nop
  jno .L855_o$
  movb $0x5,8452
.L855_o$: nop

    ret
         .size   rep_scas2w_constant, .-rep_scas2w_constant

    
.globl rep_scas2w_allregs
         .type   rep_scas2w_allregs, @function
rep_scas2w_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0x66,0xaf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_scas2w_allregs, .-rep_scas2w_allregs

    
.globl rep_scas2l_cld
         .type   rep_scas2l_cld, @function
rep_scas2l_cld:
      cld

  mov 4096,%edi
  mov 4100,%eax
  mov 4104,%ecx
  .byte 0xf3,0xaf
  mov %edi,8192
  mov %ecx,8196
  jnc .L856_c$
  movb $0x1,8448
.L856_c$: nop
  jnz .L856_z$
  movb $0x2,8449
.L856_z$: nop
  jns .L856_s$
  movb $0x3,8450
.L856_s$: nop
  jnp .L856_p$
  movb $0x4,8451
.L856_p$: nop
  jno .L856_o$
  movb $0x5,8452
.L856_o$: nop

    ret
         .size   rep_scas2l_cld, .-rep_scas2l_cld

    
.globl rep_scas2l_cld_constant
         .type   rep_scas2l_cld_constant, @function
rep_scas2l_cld_constant:
      cld

  mov $1,%edi
  mov $2,%eax
  mov $3,%ecx
  .byte 0xf3,0xaf
  mov %edi,8192
  mov %ecx,8196
  jnc .L857_c$
  movb $0x1,8448
.L857_c$: nop
  jnz .L857_z$
  movb $0x2,8449
.L857_z$: nop
  jns .L857_s$
  movb $0x3,8450
.L857_s$: nop
  jnp .L857_p$
  movb $0x4,8451
.L857_p$: nop
  jno .L857_o$
  movb $0x5,8452
.L857_o$: nop

    ret
         .size   rep_scas2l_cld_constant, .-rep_scas2l_cld_constant

    
.globl rep_scas2l_cld_allregs
         .type   rep_scas2l_cld_allregs, @function
rep_scas2l_cld_allregs:
      cld

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0xaf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_scas2l_cld_allregs, .-rep_scas2l_cld_allregs

    
.globl rep_scas2l_std
         .type   rep_scas2l_std, @function
rep_scas2l_std:
      std

  mov 4096,%edi
  mov 4100,%eax
  mov 4104,%ecx
  .byte 0xf3,0xaf
  mov %edi,8192
  mov %ecx,8196
  jnc .L858_c$
  movb $0x1,8448
.L858_c$: nop
  jnz .L858_z$
  movb $0x2,8449
.L858_z$: nop
  jns .L858_s$
  movb $0x3,8450
.L858_s$: nop
  jnp .L858_p$
  movb $0x4,8451
.L858_p$: nop
  jno .L858_o$
  movb $0x5,8452
.L858_o$: nop

    ret
         .size   rep_scas2l_std, .-rep_scas2l_std

    
.globl rep_scas2l_std_constant
         .type   rep_scas2l_std_constant, @function
rep_scas2l_std_constant:
      std

  mov $1,%edi
  mov $2,%eax
  mov $3,%ecx
  .byte 0xf3,0xaf
  mov %edi,8192
  mov %ecx,8196
  jnc .L859_c$
  movb $0x1,8448
.L859_c$: nop
  jnz .L859_z$
  movb $0x2,8449
.L859_z$: nop
  jns .L859_s$
  movb $0x3,8450
.L859_s$: nop
  jnp .L859_p$
  movb $0x4,8451
.L859_p$: nop
  jno .L859_o$
  movb $0x5,8452
.L859_o$: nop

    ret
         .size   rep_scas2l_std_constant, .-rep_scas2l_std_constant

    
.globl rep_scas2l_std_allregs
         .type   rep_scas2l_std_allregs, @function
rep_scas2l_std_allregs:
      std

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0xaf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_scas2l_std_allregs, .-rep_scas2l_std_allregs

    
.globl rep_scas2l
         .type   rep_scas2l, @function
rep_scas2l:
      

  mov 4096,%edi
  mov 4100,%eax
  mov 4104,%ecx
  .byte 0xf3,0xaf
  mov %edi,8192
  mov %ecx,8196
  jnc .L860_c$
  movb $0x1,8448
.L860_c$: nop
  jnz .L860_z$
  movb $0x2,8449
.L860_z$: nop
  jns .L860_s$
  movb $0x3,8450
.L860_s$: nop
  jnp .L860_p$
  movb $0x4,8451
.L860_p$: nop
  jno .L860_o$
  movb $0x5,8452
.L860_o$: nop

    ret
         .size   rep_scas2l, .-rep_scas2l

    
.globl rep_scas2l_constant
         .type   rep_scas2l_constant, @function
rep_scas2l_constant:
      

  mov $1,%edi
  mov $2,%eax
  mov $3,%ecx
  .byte 0xf3,0xaf
  mov %edi,8192
  mov %ecx,8196
  jnc .L861_c$
  movb $0x1,8448
.L861_c$: nop
  jnz .L861_z$
  movb $0x2,8449
.L861_z$: nop
  jns .L861_s$
  movb $0x3,8450
.L861_s$: nop
  jnp .L861_p$
  movb $0x4,8451
.L861_p$: nop
  jno .L861_o$
  movb $0x5,8452
.L861_o$: nop

    ret
         .size   rep_scas2l_constant, .-rep_scas2l_constant

    
.globl rep_scas2l_allregs
         .type   rep_scas2l_allregs, @function
rep_scas2l_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf3,0xaf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_scas2l_allregs, .-rep_scas2l_allregs

    
.globl rep_scas_seg
         .type   rep_scas_seg, @function
rep_scas_seg:
      


  .byte 0xf2,0xae


    ret
         .size   rep_scas_seg, .-rep_scas_seg

    
.globl rep_scas_seg_constant
         .type   rep_scas_seg_constant, @function
rep_scas_seg_constant:
      


  .byte 0xf2,0xae


    ret
         .size   rep_scas_seg_constant, .-rep_scas_seg_constant

    
.globl rep_scas_seg_allregs
         .type   rep_scas_seg_allregs, @function
rep_scas_seg_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xf2,0xae
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_scas_seg_allregs, .-rep_scas_seg_allregs

    
.globl rep_scas_memchr
         .type   rep_scas_memchr, @function
rep_scas_memchr:
      


  .byte 0x57,0x8b,0x7c,0x24,0x08,0x8b,0x44,0x24,0x0c,0x8b,0x4c,0x24,0x10,0x85,0xc9,0x74,0x0a,0xfc,0xf2,0xae,0x75,0x05,0x8d,0x47,0xff,0x5f,0xc3,0x31,0xc0,0x5f,0xc3


    ret
         .size   rep_scas_memchr, .-rep_scas_memchr

    
.globl rep_scas_memchr_constant
         .type   rep_scas_memchr_constant, @function
rep_scas_memchr_constant:
      


  .byte 0x57,0x8b,0x7c,0x24,0x08,0x8b,0x44,0x24,0x0c,0x8b,0x4c,0x24,0x10,0x85,0xc9,0x74,0x0a,0xfc,0xf2,0xae,0x75,0x05,0x8d,0x47,0xff,0x5f,0xc3,0x31,0xc0,0x5f,0xc3


    ret
         .size   rep_scas_memchr_constant, .-rep_scas_memchr_constant

    
.globl rep_scas_memchr_allregs
         .type   rep_scas_memchr_allregs, @function
rep_scas_memchr_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x57,0x8b,0x7c,0x24,0x08,0x8b,0x44,0x24,0x0c,0x8b,0x4c,0x24,0x10,0x85,0xc9,0x74,0x0a,0xfc,0xf2,0xae,0x75,0x05,0x8d,0x47,0xff,0x5f,0xc3,0x31,0xc0,0x5f,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   rep_scas_memchr_allregs, .-rep_scas_memchr_allregs

    
.globl ret1
         .type   ret1, @function
ret1:
      


  .byte 0xc3


    ret
         .size   ret1, .-ret1

    
.globl ret1_constant
         .type   ret1_constant, @function
ret1_constant:
      


  .byte 0xc3


    ret
         .size   ret1_constant, .-ret1_constant

    
.globl ret1_allregs
         .type   ret1_allregs, @function
ret1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   ret1_allregs, .-ret1_allregs

    
.globl ret2
         .type   ret2, @function
ret2:
      


  .byte 0x66,0xc3


    ret
         .size   ret2, .-ret2

    
.globl ret2_constant
         .type   ret2_constant, @function
ret2_constant:
      


  .byte 0x66,0xc3


    ret
         .size   ret2_constant, .-ret2_constant

    
.globl ret2_allregs
         .type   ret2_allregs, @function
ret2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0xc3
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   ret2_allregs, .-ret2_allregs

    
.globl ret3
         .type   ret3, @function
ret3:
      


  .byte 0xcb


    ret
         .size   ret3, .-ret3

    
.globl ret3_constant
         .type   ret3_constant, @function
ret3_constant:
      


  .byte 0xcb


    ret
         .size   ret3_constant, .-ret3_constant

    
.globl ret3_allregs
         .type   ret3_allregs, @function
ret3_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xcb
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   ret3_allregs, .-ret3_allregs

    
.globl ret4
         .type   ret4, @function
ret4:
      


  .byte 0x66,0xcb


    ret
         .size   ret4, .-ret4

    
.globl ret4_constant
         .type   ret4_constant, @function
ret4_constant:
      


  .byte 0x66,0xcb


    ret
         .size   ret4_constant, .-ret4_constant

    
.globl ret4_allregs
         .type   ret4_allregs, @function
ret4_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0xcb
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   ret4_allregs, .-ret4_allregs

    
.globl ret_pop1
         .type   ret_pop1, @function
ret_pop1:
      


  .byte 0xc2,0x34,0x12


    ret
         .size   ret_pop1, .-ret_pop1

    
.globl ret_pop1_constant
         .type   ret_pop1_constant, @function
ret_pop1_constant:
      


  .byte 0xc2,0x34,0x12


    ret
         .size   ret_pop1_constant, .-ret_pop1_constant

    
.globl ret_pop1_allregs
         .type   ret_pop1_allregs, @function
ret_pop1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xc2,0x34,0x12
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   ret_pop1_allregs, .-ret_pop1_allregs

    
.globl ret_pop2
         .type   ret_pop2, @function
ret_pop2:
      


  .byte 0x66,0xc2,0x34,0x12


    ret
         .size   ret_pop2, .-ret_pop2

    
.globl ret_pop2_constant
         .type   ret_pop2_constant, @function
ret_pop2_constant:
      


  .byte 0x66,0xc2,0x34,0x12


    ret
         .size   ret_pop2_constant, .-ret_pop2_constant

    
.globl ret_pop2_allregs
         .type   ret_pop2_allregs, @function
ret_pop2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0xc2,0x34,0x12
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   ret_pop2_allregs, .-ret_pop2_allregs

    
.globl ret_pop3
         .type   ret_pop3, @function
ret_pop3:
      


  .byte 0xca,0x34,0x12


    ret
         .size   ret_pop3, .-ret_pop3

    
.globl ret_pop3_constant
         .type   ret_pop3_constant, @function
ret_pop3_constant:
      


  .byte 0xca,0x34,0x12


    ret
         .size   ret_pop3_constant, .-ret_pop3_constant

    
.globl ret_pop3_allregs
         .type   ret_pop3_allregs, @function
ret_pop3_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xca,0x34,0x12
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   ret_pop3_allregs, .-ret_pop3_allregs

    
.globl ret_pop4
         .type   ret_pop4, @function
ret_pop4:
      


  .byte 0x66,0xca,0x34,0x12


    ret
         .size   ret_pop4, .-ret_pop4

    
.globl ret_pop4_constant
         .type   ret_pop4_constant, @function
ret_pop4_constant:
      


  .byte 0x66,0xca,0x34,0x12


    ret
         .size   ret_pop4_constant, .-ret_pop4_constant

    
.globl ret_pop4_allregs
         .type   ret_pop4_allregs, @function
ret_pop4_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0xca,0x34,0x12
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   ret_pop4_allregs, .-ret_pop4_allregs

    
.globl sahf
         .type   sahf, @function
sahf:
      

  mov 4096,%ah
  sahf
  jnc .L862_c$
  movb $0x1,8448
.L862_c$: nop
  jnz .L862_z$
  movb $0x2,8449
.L862_z$: nop
  jns .L862_s$
  movb $0x3,8450
.L862_s$: nop
  jnp .L862_p$
  movb $0x4,8451
.L862_p$: nop
  jno .L862_o$
  movb $0x5,8452
.L862_o$: nop

    ret
         .size   sahf, .-sahf

    
.globl sahf_constant
         .type   sahf_constant, @function
sahf_constant:
      

  mov $1,%ah
  sahf
  jnc .L863_c$
  movb $0x1,8448
.L863_c$: nop
  jnz .L863_z$
  movb $0x2,8449
.L863_z$: nop
  jns .L863_s$
  movb $0x3,8450
.L863_s$: nop
  jnp .L863_p$
  movb $0x4,8451
.L863_p$: nop
  jno .L863_o$
  movb $0x5,8452
.L863_o$: nop

    ret
         .size   sahf_constant, .-sahf_constant

    
.globl sahf_allregs
         .type   sahf_allregs, @function
sahf_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  sahf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   sahf_allregs, .-sahf_allregs

    
.globl sbb1_flags_clear
         .type   sbb1_flags_clear, @function
sbb1_flags_clear:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%al
  sbb $0xe8,%al
  mov %al,8192
  jnc .L864_c$
  movb $0x1,8448
.L864_c$: nop
  jnz .L864_z$
  movb $0x2,8449
.L864_z$: nop
  jns .L864_s$
  movb $0x3,8450
.L864_s$: nop
  jnp .L864_p$
  movb $0x4,8451
.L864_p$: nop
  jno .L864_o$
  movb $0x5,8452
.L864_o$: nop

    ret
         .size   sbb1_flags_clear, .-sbb1_flags_clear

    
.globl sbb1_flags_clear_constant
         .type   sbb1_flags_clear_constant, @function
sbb1_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax
  mov $1,%al
  sbb $0xe8,%al
  mov %al,8192
  jnc .L865_c$
  movb $0x1,8448
.L865_c$: nop
  jnz .L865_z$
  movb $0x2,8449
.L865_z$: nop
  jns .L865_s$
  movb $0x3,8450
.L865_s$: nop
  jnp .L865_p$
  movb $0x4,8451
.L865_p$: nop
  jno .L865_o$
  movb $0x5,8452
.L865_o$: nop

    ret
         .size   sbb1_flags_clear_constant, .-sbb1_flags_clear_constant

    
.globl sbb1_flags_clear_allregs
         .type   sbb1_flags_clear_allregs, @function
sbb1_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  sbb $0xe8,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   sbb1_flags_clear_allregs, .-sbb1_flags_clear_allregs

    
.globl sbb1_flags_set1
         .type   sbb1_flags_set1, @function
sbb1_flags_set1:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%al
  sbb $0xe8,%al
  mov %al,8192
  jnc .L866_c$
  movb $0x1,8448
.L866_c$: nop
  jnz .L866_z$
  movb $0x2,8449
.L866_z$: nop
  jns .L866_s$
  movb $0x3,8450
.L866_s$: nop
  jnp .L866_p$
  movb $0x4,8451
.L866_p$: nop
  jno .L866_o$
  movb $0x5,8452
.L866_o$: nop

    ret
         .size   sbb1_flags_set1, .-sbb1_flags_set1

    
.globl sbb1_flags_set1_constant
         .type   sbb1_flags_set1_constant, @function
sbb1_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax
  mov $1,%al
  sbb $0xe8,%al
  mov %al,8192
  jnc .L867_c$
  movb $0x1,8448
.L867_c$: nop
  jnz .L867_z$
  movb $0x2,8449
.L867_z$: nop
  jns .L867_s$
  movb $0x3,8450
.L867_s$: nop
  jnp .L867_p$
  movb $0x4,8451
.L867_p$: nop
  jno .L867_o$
  movb $0x5,8452
.L867_o$: nop

    ret
         .size   sbb1_flags_set1_constant, .-sbb1_flags_set1_constant

    
.globl sbb1_flags_set1_allregs
         .type   sbb1_flags_set1_allregs, @function
sbb1_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  sbb $0xe8,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   sbb1_flags_set1_allregs, .-sbb1_flags_set1_allregs

    
.globl sbb1_flags_set2
         .type   sbb1_flags_set2, @function
sbb1_flags_set2:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%al
  sbb $0xe8,%al
  mov %al,8192
  jnc .L868_c$
  movb $0x1,8448
.L868_c$: nop
  jnz .L868_z$
  movb $0x2,8449
.L868_z$: nop
  jns .L868_s$
  movb $0x3,8450
.L868_s$: nop
  jnp .L868_p$
  movb $0x4,8451
.L868_p$: nop
  jno .L868_o$
  movb $0x5,8452
.L868_o$: nop

    ret
         .size   sbb1_flags_set2, .-sbb1_flags_set2

    
.globl sbb1_flags_set2_constant
         .type   sbb1_flags_set2_constant, @function
sbb1_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax
  mov $1,%al
  sbb $0xe8,%al
  mov %al,8192
  jnc .L869_c$
  movb $0x1,8448
.L869_c$: nop
  jnz .L869_z$
  movb $0x2,8449
.L869_z$: nop
  jns .L869_s$
  movb $0x3,8450
.L869_s$: nop
  jnp .L869_p$
  movb $0x4,8451
.L869_p$: nop
  jno .L869_o$
  movb $0x5,8452
.L869_o$: nop

    ret
         .size   sbb1_flags_set2_constant, .-sbb1_flags_set2_constant

    
.globl sbb1_flags_set2_allregs
         .type   sbb1_flags_set2_allregs, @function
sbb1_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  sbb $0xe8,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   sbb1_flags_set2_allregs, .-sbb1_flags_set2_allregs

    
.globl sbb1_flags_cmp
         .type   sbb1_flags_cmp, @function
sbb1_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%al
  sbb $0xe8,%al
  mov %al,8192
  jnc .L870_c$
  movb $0x1,8448
.L870_c$: nop
  jnz .L870_z$
  movb $0x2,8449
.L870_z$: nop
  jns .L870_s$
  movb $0x3,8450
.L870_s$: nop
  jnp .L870_p$
  movb $0x4,8451
.L870_p$: nop
  jno .L870_o$
  movb $0x5,8452
.L870_o$: nop

    ret
         .size   sbb1_flags_cmp, .-sbb1_flags_cmp

    
.globl sbb1_flags_cmp_constant
         .type   sbb1_flags_cmp_constant, @function
sbb1_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov $1,%al
  sbb $0xe8,%al
  mov %al,8192
  jnc .L871_c$
  movb $0x1,8448
.L871_c$: nop
  jnz .L871_z$
  movb $0x2,8449
.L871_z$: nop
  jns .L871_s$
  movb $0x3,8450
.L871_s$: nop
  jnp .L871_p$
  movb $0x4,8451
.L871_p$: nop
  jno .L871_o$
  movb $0x5,8452
.L871_o$: nop

    ret
         .size   sbb1_flags_cmp_constant, .-sbb1_flags_cmp_constant

    
.globl sbb1_flags_cmp_allregs
         .type   sbb1_flags_cmp_allregs, @function
sbb1_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  sbb $0xe8,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   sbb1_flags_cmp_allregs, .-sbb1_flags_cmp_allregs

    
.globl sbb2_flags_clear
         .type   sbb2_flags_clear, @function
sbb2_flags_clear:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%ax
  sbb $0xe8,%ax
  mov %ax,8192
  jnc .L872_c$
  movb $0x1,8448
.L872_c$: nop
  jnz .L872_z$
  movb $0x2,8449
.L872_z$: nop
  jns .L872_s$
  movb $0x3,8450
.L872_s$: nop
  jnp .L872_p$
  movb $0x4,8451
.L872_p$: nop
  jno .L872_o$
  movb $0x5,8452
.L872_o$: nop

    ret
         .size   sbb2_flags_clear, .-sbb2_flags_clear

    
.globl sbb2_flags_clear_constant
         .type   sbb2_flags_clear_constant, @function
sbb2_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax
  mov $1,%ax
  sbb $0xe8,%ax
  mov %ax,8192
  jnc .L873_c$
  movb $0x1,8448
.L873_c$: nop
  jnz .L873_z$
  movb $0x2,8449
.L873_z$: nop
  jns .L873_s$
  movb $0x3,8450
.L873_s$: nop
  jnp .L873_p$
  movb $0x4,8451
.L873_p$: nop
  jno .L873_o$
  movb $0x5,8452
.L873_o$: nop

    ret
         .size   sbb2_flags_clear_constant, .-sbb2_flags_clear_constant

    
.globl sbb2_flags_clear_allregs
         .type   sbb2_flags_clear_allregs, @function
sbb2_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  sbb $0xe8,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   sbb2_flags_clear_allregs, .-sbb2_flags_clear_allregs

    
.globl sbb2_flags_set1
         .type   sbb2_flags_set1, @function
sbb2_flags_set1:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%ax
  sbb $0xe8,%ax
  mov %ax,8192
  jnc .L874_c$
  movb $0x1,8448
.L874_c$: nop
  jnz .L874_z$
  movb $0x2,8449
.L874_z$: nop
  jns .L874_s$
  movb $0x3,8450
.L874_s$: nop
  jnp .L874_p$
  movb $0x4,8451
.L874_p$: nop
  jno .L874_o$
  movb $0x5,8452
.L874_o$: nop

    ret
         .size   sbb2_flags_set1, .-sbb2_flags_set1

    
.globl sbb2_flags_set1_constant
         .type   sbb2_flags_set1_constant, @function
sbb2_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax
  mov $1,%ax
  sbb $0xe8,%ax
  mov %ax,8192
  jnc .L875_c$
  movb $0x1,8448
.L875_c$: nop
  jnz .L875_z$
  movb $0x2,8449
.L875_z$: nop
  jns .L875_s$
  movb $0x3,8450
.L875_s$: nop
  jnp .L875_p$
  movb $0x4,8451
.L875_p$: nop
  jno .L875_o$
  movb $0x5,8452
.L875_o$: nop

    ret
         .size   sbb2_flags_set1_constant, .-sbb2_flags_set1_constant

    
.globl sbb2_flags_set1_allregs
         .type   sbb2_flags_set1_allregs, @function
sbb2_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  sbb $0xe8,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   sbb2_flags_set1_allregs, .-sbb2_flags_set1_allregs

    
.globl sbb2_flags_set2
         .type   sbb2_flags_set2, @function
sbb2_flags_set2:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%ax
  sbb $0xe8,%ax
  mov %ax,8192
  jnc .L876_c$
  movb $0x1,8448
.L876_c$: nop
  jnz .L876_z$
  movb $0x2,8449
.L876_z$: nop
  jns .L876_s$
  movb $0x3,8450
.L876_s$: nop
  jnp .L876_p$
  movb $0x4,8451
.L876_p$: nop
  jno .L876_o$
  movb $0x5,8452
.L876_o$: nop

    ret
         .size   sbb2_flags_set2, .-sbb2_flags_set2

    
.globl sbb2_flags_set2_constant
         .type   sbb2_flags_set2_constant, @function
sbb2_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax
  mov $1,%ax
  sbb $0xe8,%ax
  mov %ax,8192
  jnc .L877_c$
  movb $0x1,8448
.L877_c$: nop
  jnz .L877_z$
  movb $0x2,8449
.L877_z$: nop
  jns .L877_s$
  movb $0x3,8450
.L877_s$: nop
  jnp .L877_p$
  movb $0x4,8451
.L877_p$: nop
  jno .L877_o$
  movb $0x5,8452
.L877_o$: nop

    ret
         .size   sbb2_flags_set2_constant, .-sbb2_flags_set2_constant

    
.globl sbb2_flags_set2_allregs
         .type   sbb2_flags_set2_allregs, @function
sbb2_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  sbb $0xe8,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   sbb2_flags_set2_allregs, .-sbb2_flags_set2_allregs

    
.globl sbb2_flags_cmp
         .type   sbb2_flags_cmp, @function
sbb2_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%ax
  sbb $0xe8,%ax
  mov %ax,8192
  jnc .L878_c$
  movb $0x1,8448
.L878_c$: nop
  jnz .L878_z$
  movb $0x2,8449
.L878_z$: nop
  jns .L878_s$
  movb $0x3,8450
.L878_s$: nop
  jnp .L878_p$
  movb $0x4,8451
.L878_p$: nop
  jno .L878_o$
  movb $0x5,8452
.L878_o$: nop

    ret
         .size   sbb2_flags_cmp, .-sbb2_flags_cmp

    
.globl sbb2_flags_cmp_constant
         .type   sbb2_flags_cmp_constant, @function
sbb2_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov $1,%ax
  sbb $0xe8,%ax
  mov %ax,8192
  jnc .L879_c$
  movb $0x1,8448
.L879_c$: nop
  jnz .L879_z$
  movb $0x2,8449
.L879_z$: nop
  jns .L879_s$
  movb $0x3,8450
.L879_s$: nop
  jnp .L879_p$
  movb $0x4,8451
.L879_p$: nop
  jno .L879_o$
  movb $0x5,8452
.L879_o$: nop

    ret
         .size   sbb2_flags_cmp_constant, .-sbb2_flags_cmp_constant

    
.globl sbb2_flags_cmp_allregs
         .type   sbb2_flags_cmp_allregs, @function
sbb2_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  sbb $0xe8,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   sbb2_flags_cmp_allregs, .-sbb2_flags_cmp_allregs

    
.globl sbb3_flags_clear
         .type   sbb3_flags_clear, @function
sbb3_flags_clear:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  sbb $0xe8,%eax
  mov %eax,8192
  jnc .L880_c$
  movb $0x1,8448
.L880_c$: nop
  jnz .L880_z$
  movb $0x2,8449
.L880_z$: nop
  jns .L880_s$
  movb $0x3,8450
.L880_s$: nop
  jnp .L880_p$
  movb $0x4,8451
.L880_p$: nop
  jno .L880_o$
  movb $0x5,8452
.L880_o$: nop

    ret
         .size   sbb3_flags_clear, .-sbb3_flags_clear

    
.globl sbb3_flags_clear_constant
         .type   sbb3_flags_clear_constant, @function
sbb3_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax
  mov $1,%eax
  sbb $0xe8,%eax
  mov %eax,8192
  jnc .L881_c$
  movb $0x1,8448
.L881_c$: nop
  jnz .L881_z$
  movb $0x2,8449
.L881_z$: nop
  jns .L881_s$
  movb $0x3,8450
.L881_s$: nop
  jnp .L881_p$
  movb $0x4,8451
.L881_p$: nop
  jno .L881_o$
  movb $0x5,8452
.L881_o$: nop

    ret
         .size   sbb3_flags_clear_constant, .-sbb3_flags_clear_constant

    
.globl sbb3_flags_clear_allregs
         .type   sbb3_flags_clear_allregs, @function
sbb3_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  sbb $0xe8,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   sbb3_flags_clear_allregs, .-sbb3_flags_clear_allregs

    
.globl sbb3_flags_set1
         .type   sbb3_flags_set1, @function
sbb3_flags_set1:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  sbb $0xe8,%eax
  mov %eax,8192
  jnc .L882_c$
  movb $0x1,8448
.L882_c$: nop
  jnz .L882_z$
  movb $0x2,8449
.L882_z$: nop
  jns .L882_s$
  movb $0x3,8450
.L882_s$: nop
  jnp .L882_p$
  movb $0x4,8451
.L882_p$: nop
  jno .L882_o$
  movb $0x5,8452
.L882_o$: nop

    ret
         .size   sbb3_flags_set1, .-sbb3_flags_set1

    
.globl sbb3_flags_set1_constant
         .type   sbb3_flags_set1_constant, @function
sbb3_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax
  mov $1,%eax
  sbb $0xe8,%eax
  mov %eax,8192
  jnc .L883_c$
  movb $0x1,8448
.L883_c$: nop
  jnz .L883_z$
  movb $0x2,8449
.L883_z$: nop
  jns .L883_s$
  movb $0x3,8450
.L883_s$: nop
  jnp .L883_p$
  movb $0x4,8451
.L883_p$: nop
  jno .L883_o$
  movb $0x5,8452
.L883_o$: nop

    ret
         .size   sbb3_flags_set1_constant, .-sbb3_flags_set1_constant

    
.globl sbb3_flags_set1_allregs
         .type   sbb3_flags_set1_allregs, @function
sbb3_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  sbb $0xe8,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   sbb3_flags_set1_allregs, .-sbb3_flags_set1_allregs

    
.globl sbb3_flags_set2
         .type   sbb3_flags_set2, @function
sbb3_flags_set2:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  sbb $0xe8,%eax
  mov %eax,8192
  jnc .L884_c$
  movb $0x1,8448
.L884_c$: nop
  jnz .L884_z$
  movb $0x2,8449
.L884_z$: nop
  jns .L884_s$
  movb $0x3,8450
.L884_s$: nop
  jnp .L884_p$
  movb $0x4,8451
.L884_p$: nop
  jno .L884_o$
  movb $0x5,8452
.L884_o$: nop

    ret
         .size   sbb3_flags_set2, .-sbb3_flags_set2

    
.globl sbb3_flags_set2_constant
         .type   sbb3_flags_set2_constant, @function
sbb3_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax
  mov $1,%eax
  sbb $0xe8,%eax
  mov %eax,8192
  jnc .L885_c$
  movb $0x1,8448
.L885_c$: nop
  jnz .L885_z$
  movb $0x2,8449
.L885_z$: nop
  jns .L885_s$
  movb $0x3,8450
.L885_s$: nop
  jnp .L885_p$
  movb $0x4,8451
.L885_p$: nop
  jno .L885_o$
  movb $0x5,8452
.L885_o$: nop

    ret
         .size   sbb3_flags_set2_constant, .-sbb3_flags_set2_constant

    
.globl sbb3_flags_set2_allregs
         .type   sbb3_flags_set2_allregs, @function
sbb3_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  sbb $0xe8,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   sbb3_flags_set2_allregs, .-sbb3_flags_set2_allregs

    
.globl sbb3_flags_cmp
         .type   sbb3_flags_cmp, @function
sbb3_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  sbb $0xe8,%eax
  mov %eax,8192
  jnc .L886_c$
  movb $0x1,8448
.L886_c$: nop
  jnz .L886_z$
  movb $0x2,8449
.L886_z$: nop
  jns .L886_s$
  movb $0x3,8450
.L886_s$: nop
  jnp .L886_p$
  movb $0x4,8451
.L886_p$: nop
  jno .L886_o$
  movb $0x5,8452
.L886_o$: nop

    ret
         .size   sbb3_flags_cmp, .-sbb3_flags_cmp

    
.globl sbb3_flags_cmp_constant
         .type   sbb3_flags_cmp_constant, @function
sbb3_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov $1,%eax
  sbb $0xe8,%eax
  mov %eax,8192
  jnc .L887_c$
  movb $0x1,8448
.L887_c$: nop
  jnz .L887_z$
  movb $0x2,8449
.L887_z$: nop
  jns .L887_s$
  movb $0x3,8450
.L887_s$: nop
  jnp .L887_p$
  movb $0x4,8451
.L887_p$: nop
  jno .L887_o$
  movb $0x5,8452
.L887_o$: nop

    ret
         .size   sbb3_flags_cmp_constant, .-sbb3_flags_cmp_constant

    
.globl sbb3_flags_cmp_allregs
         .type   sbb3_flags_cmp_allregs, @function
sbb3_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  sbb $0xe8,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   sbb3_flags_cmp_allregs, .-sbb3_flags_cmp_allregs

    
.globl sbb4_flags_clear
         .type   sbb4_flags_clear, @function
sbb4_flags_clear:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  sbbb $0xe8,(%eax)
  jnc .L888_c$
  movb $0x1,8448
.L888_c$: nop
  jnz .L888_z$
  movb $0x2,8449
.L888_z$: nop
  jns .L888_s$
  movb $0x3,8450
.L888_s$: nop
  jnp .L888_p$
  movb $0x4,8451
.L888_p$: nop
  jno .L888_o$
  movb $0x5,8452
.L888_o$: nop

    ret
         .size   sbb4_flags_clear, .-sbb4_flags_clear

    
.globl sbb4_flags_clear_constant
         .type   sbb4_flags_clear_constant, @function
sbb4_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax
  mov $1,%eax
  sbbb $0xe8,(%eax)
  jnc .L889_c$
  movb $0x1,8448
.L889_c$: nop
  jnz .L889_z$
  movb $0x2,8449
.L889_z$: nop
  jns .L889_s$
  movb $0x3,8450
.L889_s$: nop
  jnp .L889_p$
  movb $0x4,8451
.L889_p$: nop
  jno .L889_o$
  movb $0x5,8452
.L889_o$: nop

    ret
         .size   sbb4_flags_clear_constant, .-sbb4_flags_clear_constant

    
.globl sbb4_flags_clear_allregs
         .type   sbb4_flags_clear_allregs, @function
sbb4_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  sbbb $0xe8,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   sbb4_flags_clear_allregs, .-sbb4_flags_clear_allregs

    
.globl sbb4_flags_set1
         .type   sbb4_flags_set1, @function
sbb4_flags_set1:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  sbbb $0xe8,(%eax)
  jnc .L890_c$
  movb $0x1,8448
.L890_c$: nop
  jnz .L890_z$
  movb $0x2,8449
.L890_z$: nop
  jns .L890_s$
  movb $0x3,8450
.L890_s$: nop
  jnp .L890_p$
  movb $0x4,8451
.L890_p$: nop
  jno .L890_o$
  movb $0x5,8452
.L890_o$: nop

    ret
         .size   sbb4_flags_set1, .-sbb4_flags_set1

    
.globl sbb4_flags_set1_constant
         .type   sbb4_flags_set1_constant, @function
sbb4_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax
  mov $1,%eax
  sbbb $0xe8,(%eax)
  jnc .L891_c$
  movb $0x1,8448
.L891_c$: nop
  jnz .L891_z$
  movb $0x2,8449
.L891_z$: nop
  jns .L891_s$
  movb $0x3,8450
.L891_s$: nop
  jnp .L891_p$
  movb $0x4,8451
.L891_p$: nop
  jno .L891_o$
  movb $0x5,8452
.L891_o$: nop

    ret
         .size   sbb4_flags_set1_constant, .-sbb4_flags_set1_constant

    
.globl sbb4_flags_set1_allregs
         .type   sbb4_flags_set1_allregs, @function
sbb4_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  sbbb $0xe8,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   sbb4_flags_set1_allregs, .-sbb4_flags_set1_allregs

    
.globl sbb4_flags_set2
         .type   sbb4_flags_set2, @function
sbb4_flags_set2:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  sbbb $0xe8,(%eax)
  jnc .L892_c$
  movb $0x1,8448
.L892_c$: nop
  jnz .L892_z$
  movb $0x2,8449
.L892_z$: nop
  jns .L892_s$
  movb $0x3,8450
.L892_s$: nop
  jnp .L892_p$
  movb $0x4,8451
.L892_p$: nop
  jno .L892_o$
  movb $0x5,8452
.L892_o$: nop

    ret
         .size   sbb4_flags_set2, .-sbb4_flags_set2

    
.globl sbb4_flags_set2_constant
         .type   sbb4_flags_set2_constant, @function
sbb4_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax
  mov $1,%eax
  sbbb $0xe8,(%eax)
  jnc .L893_c$
  movb $0x1,8448
.L893_c$: nop
  jnz .L893_z$
  movb $0x2,8449
.L893_z$: nop
  jns .L893_s$
  movb $0x3,8450
.L893_s$: nop
  jnp .L893_p$
  movb $0x4,8451
.L893_p$: nop
  jno .L893_o$
  movb $0x5,8452
.L893_o$: nop

    ret
         .size   sbb4_flags_set2_constant, .-sbb4_flags_set2_constant

    
.globl sbb4_flags_set2_allregs
         .type   sbb4_flags_set2_allregs, @function
sbb4_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  sbbb $0xe8,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   sbb4_flags_set2_allregs, .-sbb4_flags_set2_allregs

    
.globl sbb4_flags_cmp
         .type   sbb4_flags_cmp, @function
sbb4_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  sbbb $0xe8,(%eax)
  jnc .L894_c$
  movb $0x1,8448
.L894_c$: nop
  jnz .L894_z$
  movb $0x2,8449
.L894_z$: nop
  jns .L894_s$
  movb $0x3,8450
.L894_s$: nop
  jnp .L894_p$
  movb $0x4,8451
.L894_p$: nop
  jno .L894_o$
  movb $0x5,8452
.L894_o$: nop

    ret
         .size   sbb4_flags_cmp, .-sbb4_flags_cmp

    
.globl sbb4_flags_cmp_constant
         .type   sbb4_flags_cmp_constant, @function
sbb4_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov $1,%eax
  sbbb $0xe8,(%eax)
  jnc .L895_c$
  movb $0x1,8448
.L895_c$: nop
  jnz .L895_z$
  movb $0x2,8449
.L895_z$: nop
  jns .L895_s$
  movb $0x3,8450
.L895_s$: nop
  jnp .L895_p$
  movb $0x4,8451
.L895_p$: nop
  jno .L895_o$
  movb $0x5,8452
.L895_o$: nop

    ret
         .size   sbb4_flags_cmp_constant, .-sbb4_flags_cmp_constant

    
.globl sbb4_flags_cmp_allregs
         .type   sbb4_flags_cmp_allregs, @function
sbb4_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  sbbb $0xe8,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   sbb4_flags_cmp_allregs, .-sbb4_flags_cmp_allregs

    
.globl sbb5_flags_clear
         .type   sbb5_flags_clear, @function
sbb5_flags_clear:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  sbbw $0xe8,(%eax)
  jnc .L896_c$
  movb $0x1,8448
.L896_c$: nop
  jnz .L896_z$
  movb $0x2,8449
.L896_z$: nop
  jns .L896_s$
  movb $0x3,8450
.L896_s$: nop
  jnp .L896_p$
  movb $0x4,8451
.L896_p$: nop
  jno .L896_o$
  movb $0x5,8452
.L896_o$: nop

    ret
         .size   sbb5_flags_clear, .-sbb5_flags_clear

    
.globl sbb5_flags_clear_constant
         .type   sbb5_flags_clear_constant, @function
sbb5_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax
  mov $1,%eax
  sbbw $0xe8,(%eax)
  jnc .L897_c$
  movb $0x1,8448
.L897_c$: nop
  jnz .L897_z$
  movb $0x2,8449
.L897_z$: nop
  jns .L897_s$
  movb $0x3,8450
.L897_s$: nop
  jnp .L897_p$
  movb $0x4,8451
.L897_p$: nop
  jno .L897_o$
  movb $0x5,8452
.L897_o$: nop

    ret
         .size   sbb5_flags_clear_constant, .-sbb5_flags_clear_constant

    
.globl sbb5_flags_clear_allregs
         .type   sbb5_flags_clear_allregs, @function
sbb5_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  sbbw $0xe8,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   sbb5_flags_clear_allregs, .-sbb5_flags_clear_allregs

    
.globl sbb5_flags_set1
         .type   sbb5_flags_set1, @function
sbb5_flags_set1:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  sbbw $0xe8,(%eax)
  jnc .L898_c$
  movb $0x1,8448
.L898_c$: nop
  jnz .L898_z$
  movb $0x2,8449
.L898_z$: nop
  jns .L898_s$
  movb $0x3,8450
.L898_s$: nop
  jnp .L898_p$
  movb $0x4,8451
.L898_p$: nop
  jno .L898_o$
  movb $0x5,8452
.L898_o$: nop

    ret
         .size   sbb5_flags_set1, .-sbb5_flags_set1

    
.globl sbb5_flags_set1_constant
         .type   sbb5_flags_set1_constant, @function
sbb5_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax
  mov $1,%eax
  sbbw $0xe8,(%eax)
  jnc .L899_c$
  movb $0x1,8448
.L899_c$: nop
  jnz .L899_z$
  movb $0x2,8449
.L899_z$: nop
  jns .L899_s$
  movb $0x3,8450
.L899_s$: nop
  jnp .L899_p$
  movb $0x4,8451
.L899_p$: nop
  jno .L899_o$
  movb $0x5,8452
.L899_o$: nop

    ret
         .size   sbb5_flags_set1_constant, .-sbb5_flags_set1_constant

    
.globl sbb5_flags_set1_allregs
         .type   sbb5_flags_set1_allregs, @function
sbb5_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  sbbw $0xe8,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   sbb5_flags_set1_allregs, .-sbb5_flags_set1_allregs

    
.globl sbb5_flags_set2
         .type   sbb5_flags_set2, @function
sbb5_flags_set2:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  sbbw $0xe8,(%eax)
  jnc .L900_c$
  movb $0x1,8448
.L900_c$: nop
  jnz .L900_z$
  movb $0x2,8449
.L900_z$: nop
  jns .L900_s$
  movb $0x3,8450
.L900_s$: nop
  jnp .L900_p$
  movb $0x4,8451
.L900_p$: nop
  jno .L900_o$
  movb $0x5,8452
.L900_o$: nop

    ret
         .size   sbb5_flags_set2, .-sbb5_flags_set2

    
.globl sbb5_flags_set2_constant
         .type   sbb5_flags_set2_constant, @function
sbb5_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax
  mov $1,%eax
  sbbw $0xe8,(%eax)
  jnc .L901_c$
  movb $0x1,8448
.L901_c$: nop
  jnz .L901_z$
  movb $0x2,8449
.L901_z$: nop
  jns .L901_s$
  movb $0x3,8450
.L901_s$: nop
  jnp .L901_p$
  movb $0x4,8451
.L901_p$: nop
  jno .L901_o$
  movb $0x5,8452
.L901_o$: nop

    ret
         .size   sbb5_flags_set2_constant, .-sbb5_flags_set2_constant

    
.globl sbb5_flags_set2_allregs
         .type   sbb5_flags_set2_allregs, @function
sbb5_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  sbbw $0xe8,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   sbb5_flags_set2_allregs, .-sbb5_flags_set2_allregs

    
.globl sbb5_flags_cmp
         .type   sbb5_flags_cmp, @function
sbb5_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  sbbw $0xe8,(%eax)
  jnc .L902_c$
  movb $0x1,8448
.L902_c$: nop
  jnz .L902_z$
  movb $0x2,8449
.L902_z$: nop
  jns .L902_s$
  movb $0x3,8450
.L902_s$: nop
  jnp .L902_p$
  movb $0x4,8451
.L902_p$: nop
  jno .L902_o$
  movb $0x5,8452
.L902_o$: nop

    ret
         .size   sbb5_flags_cmp, .-sbb5_flags_cmp

    
.globl sbb5_flags_cmp_constant
         .type   sbb5_flags_cmp_constant, @function
sbb5_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov $1,%eax
  sbbw $0xe8,(%eax)
  jnc .L903_c$
  movb $0x1,8448
.L903_c$: nop
  jnz .L903_z$
  movb $0x2,8449
.L903_z$: nop
  jns .L903_s$
  movb $0x3,8450
.L903_s$: nop
  jnp .L903_p$
  movb $0x4,8451
.L903_p$: nop
  jno .L903_o$
  movb $0x5,8452
.L903_o$: nop

    ret
         .size   sbb5_flags_cmp_constant, .-sbb5_flags_cmp_constant

    
.globl sbb5_flags_cmp_allregs
         .type   sbb5_flags_cmp_allregs, @function
sbb5_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  sbbw $0xe8,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   sbb5_flags_cmp_allregs, .-sbb5_flags_cmp_allregs

    
.globl sbb6_flags_clear
         .type   sbb6_flags_clear, @function
sbb6_flags_clear:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  sbbl $0xe8,(%eax)
  jnc .L904_c$
  movb $0x1,8448
.L904_c$: nop
  jnz .L904_z$
  movb $0x2,8449
.L904_z$: nop
  jns .L904_s$
  movb $0x3,8450
.L904_s$: nop
  jnp .L904_p$
  movb $0x4,8451
.L904_p$: nop
  jno .L904_o$
  movb $0x5,8452
.L904_o$: nop

    ret
         .size   sbb6_flags_clear, .-sbb6_flags_clear

    
.globl sbb6_flags_clear_constant
         .type   sbb6_flags_clear_constant, @function
sbb6_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax
  mov $1,%eax
  sbbl $0xe8,(%eax)
  jnc .L905_c$
  movb $0x1,8448
.L905_c$: nop
  jnz .L905_z$
  movb $0x2,8449
.L905_z$: nop
  jns .L905_s$
  movb $0x3,8450
.L905_s$: nop
  jnp .L905_p$
  movb $0x4,8451
.L905_p$: nop
  jno .L905_o$
  movb $0x5,8452
.L905_o$: nop

    ret
         .size   sbb6_flags_clear_constant, .-sbb6_flags_clear_constant

    
.globl sbb6_flags_clear_allregs
         .type   sbb6_flags_clear_allregs, @function
sbb6_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  sbbl $0xe8,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   sbb6_flags_clear_allregs, .-sbb6_flags_clear_allregs

    
.globl sbb6_flags_set1
         .type   sbb6_flags_set1, @function
sbb6_flags_set1:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  sbbl $0xe8,(%eax)
  jnc .L906_c$
  movb $0x1,8448
.L906_c$: nop
  jnz .L906_z$
  movb $0x2,8449
.L906_z$: nop
  jns .L906_s$
  movb $0x3,8450
.L906_s$: nop
  jnp .L906_p$
  movb $0x4,8451
.L906_p$: nop
  jno .L906_o$
  movb $0x5,8452
.L906_o$: nop

    ret
         .size   sbb6_flags_set1, .-sbb6_flags_set1

    
.globl sbb6_flags_set1_constant
         .type   sbb6_flags_set1_constant, @function
sbb6_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax
  mov $1,%eax
  sbbl $0xe8,(%eax)
  jnc .L907_c$
  movb $0x1,8448
.L907_c$: nop
  jnz .L907_z$
  movb $0x2,8449
.L907_z$: nop
  jns .L907_s$
  movb $0x3,8450
.L907_s$: nop
  jnp .L907_p$
  movb $0x4,8451
.L907_p$: nop
  jno .L907_o$
  movb $0x5,8452
.L907_o$: nop

    ret
         .size   sbb6_flags_set1_constant, .-sbb6_flags_set1_constant

    
.globl sbb6_flags_set1_allregs
         .type   sbb6_flags_set1_allregs, @function
sbb6_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  sbbl $0xe8,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   sbb6_flags_set1_allregs, .-sbb6_flags_set1_allregs

    
.globl sbb6_flags_set2
         .type   sbb6_flags_set2, @function
sbb6_flags_set2:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  sbbl $0xe8,(%eax)
  jnc .L908_c$
  movb $0x1,8448
.L908_c$: nop
  jnz .L908_z$
  movb $0x2,8449
.L908_z$: nop
  jns .L908_s$
  movb $0x3,8450
.L908_s$: nop
  jnp .L908_p$
  movb $0x4,8451
.L908_p$: nop
  jno .L908_o$
  movb $0x5,8452
.L908_o$: nop

    ret
         .size   sbb6_flags_set2, .-sbb6_flags_set2

    
.globl sbb6_flags_set2_constant
         .type   sbb6_flags_set2_constant, @function
sbb6_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax
  mov $1,%eax
  sbbl $0xe8,(%eax)
  jnc .L909_c$
  movb $0x1,8448
.L909_c$: nop
  jnz .L909_z$
  movb $0x2,8449
.L909_z$: nop
  jns .L909_s$
  movb $0x3,8450
.L909_s$: nop
  jnp .L909_p$
  movb $0x4,8451
.L909_p$: nop
  jno .L909_o$
  movb $0x5,8452
.L909_o$: nop

    ret
         .size   sbb6_flags_set2_constant, .-sbb6_flags_set2_constant

    
.globl sbb6_flags_set2_allregs
         .type   sbb6_flags_set2_allregs, @function
sbb6_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  sbbl $0xe8,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   sbb6_flags_set2_allregs, .-sbb6_flags_set2_allregs

    
.globl sbb6_flags_cmp
         .type   sbb6_flags_cmp, @function
sbb6_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  sbbl $0xe8,(%eax)
  jnc .L910_c$
  movb $0x1,8448
.L910_c$: nop
  jnz .L910_z$
  movb $0x2,8449
.L910_z$: nop
  jns .L910_s$
  movb $0x3,8450
.L910_s$: nop
  jnp .L910_p$
  movb $0x4,8451
.L910_p$: nop
  jno .L910_o$
  movb $0x5,8452
.L910_o$: nop

    ret
         .size   sbb6_flags_cmp, .-sbb6_flags_cmp

    
.globl sbb6_flags_cmp_constant
         .type   sbb6_flags_cmp_constant, @function
sbb6_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov $1,%eax
  sbbl $0xe8,(%eax)
  jnc .L911_c$
  movb $0x1,8448
.L911_c$: nop
  jnz .L911_z$
  movb $0x2,8449
.L911_z$: nop
  jns .L911_s$
  movb $0x3,8450
.L911_s$: nop
  jnp .L911_p$
  movb $0x4,8451
.L911_p$: nop
  jno .L911_o$
  movb $0x5,8452
.L911_o$: nop

    ret
         .size   sbb6_flags_cmp_constant, .-sbb6_flags_cmp_constant

    
.globl sbb6_flags_cmp_allregs
         .type   sbb6_flags_cmp_allregs, @function
sbb6_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  sbbl $0xe8,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   sbb6_flags_cmp_allregs, .-sbb6_flags_cmp_allregs

    
.globl sbb7_flags_clear
         .type   sbb7_flags_clear, @function
sbb7_flags_clear:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%ax
  mov 4100,%bx
  sbb %ax,%bx
  mov %bx,8192
  jnc .L912_c$
  movb $0x1,8448
.L912_c$: nop
  jnz .L912_z$
  movb $0x2,8449
.L912_z$: nop
  jns .L912_s$
  movb $0x3,8450
.L912_s$: nop
  jnp .L912_p$
  movb $0x4,8451
.L912_p$: nop
  jno .L912_o$
  movb $0x5,8452
.L912_o$: nop

    ret
         .size   sbb7_flags_clear, .-sbb7_flags_clear

    
.globl sbb7_flags_clear_constant
         .type   sbb7_flags_clear_constant, @function
sbb7_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax
  mov $1,%ax
  mov $2,%bx
  sbb %ax,%bx
  mov %bx,8192
  jnc .L913_c$
  movb $0x1,8448
.L913_c$: nop
  jnz .L913_z$
  movb $0x2,8449
.L913_z$: nop
  jns .L913_s$
  movb $0x3,8450
.L913_s$: nop
  jnp .L913_p$
  movb $0x4,8451
.L913_p$: nop
  jno .L913_o$
  movb $0x5,8452
.L913_o$: nop

    ret
         .size   sbb7_flags_clear_constant, .-sbb7_flags_clear_constant

    
.globl sbb7_flags_clear_allregs
         .type   sbb7_flags_clear_allregs, @function
sbb7_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  sbb %ax,%bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   sbb7_flags_clear_allregs, .-sbb7_flags_clear_allregs

    
.globl sbb7_flags_set1
         .type   sbb7_flags_set1, @function
sbb7_flags_set1:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%ax
  mov 4100,%bx
  sbb %ax,%bx
  mov %bx,8192
  jnc .L914_c$
  movb $0x1,8448
.L914_c$: nop
  jnz .L914_z$
  movb $0x2,8449
.L914_z$: nop
  jns .L914_s$
  movb $0x3,8450
.L914_s$: nop
  jnp .L914_p$
  movb $0x4,8451
.L914_p$: nop
  jno .L914_o$
  movb $0x5,8452
.L914_o$: nop

    ret
         .size   sbb7_flags_set1, .-sbb7_flags_set1

    
.globl sbb7_flags_set1_constant
         .type   sbb7_flags_set1_constant, @function
sbb7_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax
  mov $1,%ax
  mov $2,%bx
  sbb %ax,%bx
  mov %bx,8192
  jnc .L915_c$
  movb $0x1,8448
.L915_c$: nop
  jnz .L915_z$
  movb $0x2,8449
.L915_z$: nop
  jns .L915_s$
  movb $0x3,8450
.L915_s$: nop
  jnp .L915_p$
  movb $0x4,8451
.L915_p$: nop
  jno .L915_o$
  movb $0x5,8452
.L915_o$: nop

    ret
         .size   sbb7_flags_set1_constant, .-sbb7_flags_set1_constant

    
.globl sbb7_flags_set1_allregs
         .type   sbb7_flags_set1_allregs, @function
sbb7_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  sbb %ax,%bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   sbb7_flags_set1_allregs, .-sbb7_flags_set1_allregs

    
.globl sbb7_flags_set2
         .type   sbb7_flags_set2, @function
sbb7_flags_set2:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%ax
  mov 4100,%bx
  sbb %ax,%bx
  mov %bx,8192
  jnc .L916_c$
  movb $0x1,8448
.L916_c$: nop
  jnz .L916_z$
  movb $0x2,8449
.L916_z$: nop
  jns .L916_s$
  movb $0x3,8450
.L916_s$: nop
  jnp .L916_p$
  movb $0x4,8451
.L916_p$: nop
  jno .L916_o$
  movb $0x5,8452
.L916_o$: nop

    ret
         .size   sbb7_flags_set2, .-sbb7_flags_set2

    
.globl sbb7_flags_set2_constant
         .type   sbb7_flags_set2_constant, @function
sbb7_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax
  mov $1,%ax
  mov $2,%bx
  sbb %ax,%bx
  mov %bx,8192
  jnc .L917_c$
  movb $0x1,8448
.L917_c$: nop
  jnz .L917_z$
  movb $0x2,8449
.L917_z$: nop
  jns .L917_s$
  movb $0x3,8450
.L917_s$: nop
  jnp .L917_p$
  movb $0x4,8451
.L917_p$: nop
  jno .L917_o$
  movb $0x5,8452
.L917_o$: nop

    ret
         .size   sbb7_flags_set2_constant, .-sbb7_flags_set2_constant

    
.globl sbb7_flags_set2_allregs
         .type   sbb7_flags_set2_allregs, @function
sbb7_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  sbb %ax,%bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   sbb7_flags_set2_allregs, .-sbb7_flags_set2_allregs

    
.globl sbb7_flags_cmp
         .type   sbb7_flags_cmp, @function
sbb7_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%ax
  mov 4100,%bx
  sbb %ax,%bx
  mov %bx,8192
  jnc .L918_c$
  movb $0x1,8448
.L918_c$: nop
  jnz .L918_z$
  movb $0x2,8449
.L918_z$: nop
  jns .L918_s$
  movb $0x3,8450
.L918_s$: nop
  jnp .L918_p$
  movb $0x4,8451
.L918_p$: nop
  jno .L918_o$
  movb $0x5,8452
.L918_o$: nop

    ret
         .size   sbb7_flags_cmp, .-sbb7_flags_cmp

    
.globl sbb7_flags_cmp_constant
         .type   sbb7_flags_cmp_constant, @function
sbb7_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov $1,%ax
  mov $2,%bx
  sbb %ax,%bx
  mov %bx,8192
  jnc .L919_c$
  movb $0x1,8448
.L919_c$: nop
  jnz .L919_z$
  movb $0x2,8449
.L919_z$: nop
  jns .L919_s$
  movb $0x3,8450
.L919_s$: nop
  jnp .L919_p$
  movb $0x4,8451
.L919_p$: nop
  jno .L919_o$
  movb $0x5,8452
.L919_o$: nop

    ret
         .size   sbb7_flags_cmp_constant, .-sbb7_flags_cmp_constant

    
.globl sbb7_flags_cmp_allregs
         .type   sbb7_flags_cmp_allregs, @function
sbb7_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  sbb %ax,%bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   sbb7_flags_cmp_allregs, .-sbb7_flags_cmp_allregs

    
.globl sbb_locked
         .type   sbb_locked, @function
sbb_locked:
      


  lock sbb %eax,(%ebx)


    ret
         .size   sbb_locked, .-sbb_locked

    
.globl sbb_locked_constant
         .type   sbb_locked_constant, @function
sbb_locked_constant:
      


  lock sbb %eax,(%ebx)


    ret
         .size   sbb_locked_constant, .-sbb_locked_constant

    
.globl sbb_locked_allregs
         .type   sbb_locked_allregs, @function
sbb_locked_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  lock sbb %eax,(%ebx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   sbb_locked_allregs, .-sbb_locked_allregs

    
.globl scas1_cld
         .type   scas1_cld, @function
scas1_cld:
      cld

  mov 4096,%edi
  mov 4100,%al
  .byte 0xae
  mov %edi,8192
  jnc .L920_c$
  movb $0x1,8448
.L920_c$: nop
  jnz .L920_z$
  movb $0x2,8449
.L920_z$: nop
  jns .L920_s$
  movb $0x3,8450
.L920_s$: nop
  jnp .L920_p$
  movb $0x4,8451
.L920_p$: nop
  jno .L920_o$
  movb $0x5,8452
.L920_o$: nop

    ret
         .size   scas1_cld, .-scas1_cld

    
.globl scas1_cld_constant
         .type   scas1_cld_constant, @function
scas1_cld_constant:
      cld

  mov $1,%edi
  mov $2,%al
  .byte 0xae
  mov %edi,8192
  jnc .L921_c$
  movb $0x1,8448
.L921_c$: nop
  jnz .L921_z$
  movb $0x2,8449
.L921_z$: nop
  jns .L921_s$
  movb $0x3,8450
.L921_s$: nop
  jnp .L921_p$
  movb $0x4,8451
.L921_p$: nop
  jno .L921_o$
  movb $0x5,8452
.L921_o$: nop

    ret
         .size   scas1_cld_constant, .-scas1_cld_constant

    
.globl scas1_cld_allregs
         .type   scas1_cld_allregs, @function
scas1_cld_allregs:
      cld

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xae
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   scas1_cld_allregs, .-scas1_cld_allregs

    
.globl scas1_std
         .type   scas1_std, @function
scas1_std:
      std

  mov 4096,%edi
  mov 4100,%al
  .byte 0xae
  mov %edi,8192
  jnc .L922_c$
  movb $0x1,8448
.L922_c$: nop
  jnz .L922_z$
  movb $0x2,8449
.L922_z$: nop
  jns .L922_s$
  movb $0x3,8450
.L922_s$: nop
  jnp .L922_p$
  movb $0x4,8451
.L922_p$: nop
  jno .L922_o$
  movb $0x5,8452
.L922_o$: nop

    ret
         .size   scas1_std, .-scas1_std

    
.globl scas1_std_constant
         .type   scas1_std_constant, @function
scas1_std_constant:
      std

  mov $1,%edi
  mov $2,%al
  .byte 0xae
  mov %edi,8192
  jnc .L923_c$
  movb $0x1,8448
.L923_c$: nop
  jnz .L923_z$
  movb $0x2,8449
.L923_z$: nop
  jns .L923_s$
  movb $0x3,8450
.L923_s$: nop
  jnp .L923_p$
  movb $0x4,8451
.L923_p$: nop
  jno .L923_o$
  movb $0x5,8452
.L923_o$: nop

    ret
         .size   scas1_std_constant, .-scas1_std_constant

    
.globl scas1_std_allregs
         .type   scas1_std_allregs, @function
scas1_std_allregs:
      std

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xae
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   scas1_std_allregs, .-scas1_std_allregs

    
.globl scas1
         .type   scas1, @function
scas1:
      

  mov 4096,%edi
  mov 4100,%al
  .byte 0xae
  mov %edi,8192
  jnc .L924_c$
  movb $0x1,8448
.L924_c$: nop
  jnz .L924_z$
  movb $0x2,8449
.L924_z$: nop
  jns .L924_s$
  movb $0x3,8450
.L924_s$: nop
  jnp .L924_p$
  movb $0x4,8451
.L924_p$: nop
  jno .L924_o$
  movb $0x5,8452
.L924_o$: nop

    ret
         .size   scas1, .-scas1

    
.globl scas1_constant
         .type   scas1_constant, @function
scas1_constant:
      

  mov $1,%edi
  mov $2,%al
  .byte 0xae
  mov %edi,8192
  jnc .L925_c$
  movb $0x1,8448
.L925_c$: nop
  jnz .L925_z$
  movb $0x2,8449
.L925_z$: nop
  jns .L925_s$
  movb $0x3,8450
.L925_s$: nop
  jnp .L925_p$
  movb $0x4,8451
.L925_p$: nop
  jno .L925_o$
  movb $0x5,8452
.L925_o$: nop

    ret
         .size   scas1_constant, .-scas1_constant

    
.globl scas1_allregs
         .type   scas1_allregs, @function
scas1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xae
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   scas1_allregs, .-scas1_allregs

    
.globl scas2_cld
         .type   scas2_cld, @function
scas2_cld:
      cld

  mov 4096,%edi
  mov 4100,%al
  .byte 0x66,0xaf
  mov %edi,8192
  jnc .L926_c$
  movb $0x1,8448
.L926_c$: nop
  jnz .L926_z$
  movb $0x2,8449
.L926_z$: nop
  jns .L926_s$
  movb $0x3,8450
.L926_s$: nop
  jnp .L926_p$
  movb $0x4,8451
.L926_p$: nop
  jno .L926_o$
  movb $0x5,8452
.L926_o$: nop

    ret
         .size   scas2_cld, .-scas2_cld

    
.globl scas2_cld_constant
         .type   scas2_cld_constant, @function
scas2_cld_constant:
      cld

  mov $1,%edi
  mov $2,%al
  .byte 0x66,0xaf
  mov %edi,8192
  jnc .L927_c$
  movb $0x1,8448
.L927_c$: nop
  jnz .L927_z$
  movb $0x2,8449
.L927_z$: nop
  jns .L927_s$
  movb $0x3,8450
.L927_s$: nop
  jnp .L927_p$
  movb $0x4,8451
.L927_p$: nop
  jno .L927_o$
  movb $0x5,8452
.L927_o$: nop

    ret
         .size   scas2_cld_constant, .-scas2_cld_constant

    
.globl scas2_cld_allregs
         .type   scas2_cld_allregs, @function
scas2_cld_allregs:
      cld

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0xaf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   scas2_cld_allregs, .-scas2_cld_allregs

    
.globl scas2_std
         .type   scas2_std, @function
scas2_std:
      std

  mov 4096,%edi
  mov 4100,%al
  .byte 0x66,0xaf
  mov %edi,8192
  jnc .L928_c$
  movb $0x1,8448
.L928_c$: nop
  jnz .L928_z$
  movb $0x2,8449
.L928_z$: nop
  jns .L928_s$
  movb $0x3,8450
.L928_s$: nop
  jnp .L928_p$
  movb $0x4,8451
.L928_p$: nop
  jno .L928_o$
  movb $0x5,8452
.L928_o$: nop

    ret
         .size   scas2_std, .-scas2_std

    
.globl scas2_std_constant
         .type   scas2_std_constant, @function
scas2_std_constant:
      std

  mov $1,%edi
  mov $2,%al
  .byte 0x66,0xaf
  mov %edi,8192
  jnc .L929_c$
  movb $0x1,8448
.L929_c$: nop
  jnz .L929_z$
  movb $0x2,8449
.L929_z$: nop
  jns .L929_s$
  movb $0x3,8450
.L929_s$: nop
  jnp .L929_p$
  movb $0x4,8451
.L929_p$: nop
  jno .L929_o$
  movb $0x5,8452
.L929_o$: nop

    ret
         .size   scas2_std_constant, .-scas2_std_constant

    
.globl scas2_std_allregs
         .type   scas2_std_allregs, @function
scas2_std_allregs:
      std

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0xaf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   scas2_std_allregs, .-scas2_std_allregs

    
.globl scas2
         .type   scas2, @function
scas2:
      

  mov 4096,%edi
  mov 4100,%al
  .byte 0x66,0xaf
  mov %edi,8192
  jnc .L930_c$
  movb $0x1,8448
.L930_c$: nop
  jnz .L930_z$
  movb $0x2,8449
.L930_z$: nop
  jns .L930_s$
  movb $0x3,8450
.L930_s$: nop
  jnp .L930_p$
  movb $0x4,8451
.L930_p$: nop
  jno .L930_o$
  movb $0x5,8452
.L930_o$: nop

    ret
         .size   scas2, .-scas2

    
.globl scas2_constant
         .type   scas2_constant, @function
scas2_constant:
      

  mov $1,%edi
  mov $2,%al
  .byte 0x66,0xaf
  mov %edi,8192
  jnc .L931_c$
  movb $0x1,8448
.L931_c$: nop
  jnz .L931_z$
  movb $0x2,8449
.L931_z$: nop
  jns .L931_s$
  movb $0x3,8450
.L931_s$: nop
  jnp .L931_p$
  movb $0x4,8451
.L931_p$: nop
  jno .L931_o$
  movb $0x5,8452
.L931_o$: nop

    ret
         .size   scas2_constant, .-scas2_constant

    
.globl scas2_allregs
         .type   scas2_allregs, @function
scas2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0xaf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   scas2_allregs, .-scas2_allregs

    
.globl scas3_cld
         .type   scas3_cld, @function
scas3_cld:
      cld

  mov 4096,%edi
  mov 4100,%al
  .byte 0xaf
  mov %edi,8192
  jnc .L932_c$
  movb $0x1,8448
.L932_c$: nop
  jnz .L932_z$
  movb $0x2,8449
.L932_z$: nop
  jns .L932_s$
  movb $0x3,8450
.L932_s$: nop
  jnp .L932_p$
  movb $0x4,8451
.L932_p$: nop
  jno .L932_o$
  movb $0x5,8452
.L932_o$: nop

    ret
         .size   scas3_cld, .-scas3_cld

    
.globl scas3_cld_constant
         .type   scas3_cld_constant, @function
scas3_cld_constant:
      cld

  mov $1,%edi
  mov $2,%al
  .byte 0xaf
  mov %edi,8192
  jnc .L933_c$
  movb $0x1,8448
.L933_c$: nop
  jnz .L933_z$
  movb $0x2,8449
.L933_z$: nop
  jns .L933_s$
  movb $0x3,8450
.L933_s$: nop
  jnp .L933_p$
  movb $0x4,8451
.L933_p$: nop
  jno .L933_o$
  movb $0x5,8452
.L933_o$: nop

    ret
         .size   scas3_cld_constant, .-scas3_cld_constant

    
.globl scas3_cld_allregs
         .type   scas3_cld_allregs, @function
scas3_cld_allregs:
      cld

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xaf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   scas3_cld_allregs, .-scas3_cld_allregs

    
.globl scas3_std
         .type   scas3_std, @function
scas3_std:
      std

  mov 4096,%edi
  mov 4100,%al
  .byte 0xaf
  mov %edi,8192
  jnc .L934_c$
  movb $0x1,8448
.L934_c$: nop
  jnz .L934_z$
  movb $0x2,8449
.L934_z$: nop
  jns .L934_s$
  movb $0x3,8450
.L934_s$: nop
  jnp .L934_p$
  movb $0x4,8451
.L934_p$: nop
  jno .L934_o$
  movb $0x5,8452
.L934_o$: nop

    ret
         .size   scas3_std, .-scas3_std

    
.globl scas3_std_constant
         .type   scas3_std_constant, @function
scas3_std_constant:
      std

  mov $1,%edi
  mov $2,%al
  .byte 0xaf
  mov %edi,8192
  jnc .L935_c$
  movb $0x1,8448
.L935_c$: nop
  jnz .L935_z$
  movb $0x2,8449
.L935_z$: nop
  jns .L935_s$
  movb $0x3,8450
.L935_s$: nop
  jnp .L935_p$
  movb $0x4,8451
.L935_p$: nop
  jno .L935_o$
  movb $0x5,8452
.L935_o$: nop

    ret
         .size   scas3_std_constant, .-scas3_std_constant

    
.globl scas3_std_allregs
         .type   scas3_std_allregs, @function
scas3_std_allregs:
      std

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xaf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   scas3_std_allregs, .-scas3_std_allregs

    
.globl scas3
         .type   scas3, @function
scas3:
      

  mov 4096,%edi
  mov 4100,%al
  .byte 0xaf
  mov %edi,8192
  jnc .L936_c$
  movb $0x1,8448
.L936_c$: nop
  jnz .L936_z$
  movb $0x2,8449
.L936_z$: nop
  jns .L936_s$
  movb $0x3,8450
.L936_s$: nop
  jnp .L936_p$
  movb $0x4,8451
.L936_p$: nop
  jno .L936_o$
  movb $0x5,8452
.L936_o$: nop

    ret
         .size   scas3, .-scas3

    
.globl scas3_constant
         .type   scas3_constant, @function
scas3_constant:
      

  mov $1,%edi
  mov $2,%al
  .byte 0xaf
  mov %edi,8192
  jnc .L937_c$
  movb $0x1,8448
.L937_c$: nop
  jnz .L937_z$
  movb $0x2,8449
.L937_z$: nop
  jns .L937_s$
  movb $0x3,8450
.L937_s$: nop
  jnp .L937_p$
  movb $0x4,8451
.L937_p$: nop
  jno .L937_o$
  movb $0x5,8452
.L937_o$: nop

    ret
         .size   scas3_constant, .-scas3_constant

    
.globl scas3_allregs
         .type   scas3_allregs, @function
scas3_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xaf
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   scas3_allregs, .-scas3_allregs

    
.globl setcc_with_code_0_flags_clear
         .type   setcc_with_code_0_flags_clear, @function
setcc_with_code_0_flags_clear:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%ecx
  .byte 0x0f,0x90,0x01
  jnc .L938_c$
  movb $0x1,8448
.L938_c$: nop
  jnz .L938_z$
  movb $0x2,8449
.L938_z$: nop
  jns .L938_s$
  movb $0x3,8450
.L938_s$: nop
  jnp .L938_p$
  movb $0x4,8451
.L938_p$: nop
  jno .L938_o$
  movb $0x5,8452
.L938_o$: nop

    ret
         .size   setcc_with_code_0_flags_clear, .-setcc_with_code_0_flags_clear

    
.globl setcc_with_code_0_flags_clear_constant
         .type   setcc_with_code_0_flags_clear_constant, @function
setcc_with_code_0_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax
  mov $1,%ecx
  .byte 0x0f,0x90,0x01
  jnc .L939_c$
  movb $0x1,8448
.L939_c$: nop
  jnz .L939_z$
  movb $0x2,8449
.L939_z$: nop
  jns .L939_s$
  movb $0x3,8450
.L939_s$: nop
  jnp .L939_p$
  movb $0x4,8451
.L939_p$: nop
  jno .L939_o$
  movb $0x5,8452
.L939_o$: nop

    ret
         .size   setcc_with_code_0_flags_clear_constant, .-setcc_with_code_0_flags_clear_constant

    
.globl setcc_with_code_0_flags_clear_allregs
         .type   setcc_with_code_0_flags_clear_allregs, @function
setcc_with_code_0_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x90,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_0_flags_clear_allregs, .-setcc_with_code_0_flags_clear_allregs

    
.globl setcc_with_code_0_flags_set1
         .type   setcc_with_code_0_flags_set1, @function
setcc_with_code_0_flags_set1:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%ecx
  .byte 0x0f,0x90,0x01
  jnc .L940_c$
  movb $0x1,8448
.L940_c$: nop
  jnz .L940_z$
  movb $0x2,8449
.L940_z$: nop
  jns .L940_s$
  movb $0x3,8450
.L940_s$: nop
  jnp .L940_p$
  movb $0x4,8451
.L940_p$: nop
  jno .L940_o$
  movb $0x5,8452
.L940_o$: nop

    ret
         .size   setcc_with_code_0_flags_set1, .-setcc_with_code_0_flags_set1

    
.globl setcc_with_code_0_flags_set1_constant
         .type   setcc_with_code_0_flags_set1_constant, @function
setcc_with_code_0_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax
  mov $1,%ecx
  .byte 0x0f,0x90,0x01
  jnc .L941_c$
  movb $0x1,8448
.L941_c$: nop
  jnz .L941_z$
  movb $0x2,8449
.L941_z$: nop
  jns .L941_s$
  movb $0x3,8450
.L941_s$: nop
  jnp .L941_p$
  movb $0x4,8451
.L941_p$: nop
  jno .L941_o$
  movb $0x5,8452
.L941_o$: nop

    ret
         .size   setcc_with_code_0_flags_set1_constant, .-setcc_with_code_0_flags_set1_constant

    
.globl setcc_with_code_0_flags_set1_allregs
         .type   setcc_with_code_0_flags_set1_allregs, @function
setcc_with_code_0_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x90,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_0_flags_set1_allregs, .-setcc_with_code_0_flags_set1_allregs

    
.globl setcc_with_code_0_flags_set2
         .type   setcc_with_code_0_flags_set2, @function
setcc_with_code_0_flags_set2:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%ecx
  .byte 0x0f,0x90,0x01
  jnc .L942_c$
  movb $0x1,8448
.L942_c$: nop
  jnz .L942_z$
  movb $0x2,8449
.L942_z$: nop
  jns .L942_s$
  movb $0x3,8450
.L942_s$: nop
  jnp .L942_p$
  movb $0x4,8451
.L942_p$: nop
  jno .L942_o$
  movb $0x5,8452
.L942_o$: nop

    ret
         .size   setcc_with_code_0_flags_set2, .-setcc_with_code_0_flags_set2

    
.globl setcc_with_code_0_flags_set2_constant
         .type   setcc_with_code_0_flags_set2_constant, @function
setcc_with_code_0_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax
  mov $1,%ecx
  .byte 0x0f,0x90,0x01
  jnc .L943_c$
  movb $0x1,8448
.L943_c$: nop
  jnz .L943_z$
  movb $0x2,8449
.L943_z$: nop
  jns .L943_s$
  movb $0x3,8450
.L943_s$: nop
  jnp .L943_p$
  movb $0x4,8451
.L943_p$: nop
  jno .L943_o$
  movb $0x5,8452
.L943_o$: nop

    ret
         .size   setcc_with_code_0_flags_set2_constant, .-setcc_with_code_0_flags_set2_constant

    
.globl setcc_with_code_0_flags_set2_allregs
         .type   setcc_with_code_0_flags_set2_allregs, @function
setcc_with_code_0_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x90,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_0_flags_set2_allregs, .-setcc_with_code_0_flags_set2_allregs

    
.globl setcc_with_code_0_flags_cmp
         .type   setcc_with_code_0_flags_cmp, @function
setcc_with_code_0_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%ecx
  .byte 0x0f,0x90,0x01
  jnc .L944_c$
  movb $0x1,8448
.L944_c$: nop
  jnz .L944_z$
  movb $0x2,8449
.L944_z$: nop
  jns .L944_s$
  movb $0x3,8450
.L944_s$: nop
  jnp .L944_p$
  movb $0x4,8451
.L944_p$: nop
  jno .L944_o$
  movb $0x5,8452
.L944_o$: nop

    ret
         .size   setcc_with_code_0_flags_cmp, .-setcc_with_code_0_flags_cmp

    
.globl setcc_with_code_0_flags_cmp_constant
         .type   setcc_with_code_0_flags_cmp_constant, @function
setcc_with_code_0_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov $1,%ecx
  .byte 0x0f,0x90,0x01
  jnc .L945_c$
  movb $0x1,8448
.L945_c$: nop
  jnz .L945_z$
  movb $0x2,8449
.L945_z$: nop
  jns .L945_s$
  movb $0x3,8450
.L945_s$: nop
  jnp .L945_p$
  movb $0x4,8451
.L945_p$: nop
  jno .L945_o$
  movb $0x5,8452
.L945_o$: nop

    ret
         .size   setcc_with_code_0_flags_cmp_constant, .-setcc_with_code_0_flags_cmp_constant

    
.globl setcc_with_code_0_flags_cmp_allregs
         .type   setcc_with_code_0_flags_cmp_allregs, @function
setcc_with_code_0_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x90,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_0_flags_cmp_allregs, .-setcc_with_code_0_flags_cmp_allregs

    
.globl setcc_with_code_1_flags_clear
         .type   setcc_with_code_1_flags_clear, @function
setcc_with_code_1_flags_clear:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%ecx
  .byte 0x0f,0x91,0x01
  jnc .L946_c$
  movb $0x1,8448
.L946_c$: nop
  jnz .L946_z$
  movb $0x2,8449
.L946_z$: nop
  jns .L946_s$
  movb $0x3,8450
.L946_s$: nop
  jnp .L946_p$
  movb $0x4,8451
.L946_p$: nop
  jno .L946_o$
  movb $0x5,8452
.L946_o$: nop

    ret
         .size   setcc_with_code_1_flags_clear, .-setcc_with_code_1_flags_clear

    
.globl setcc_with_code_1_flags_clear_constant
         .type   setcc_with_code_1_flags_clear_constant, @function
setcc_with_code_1_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax
  mov $1,%ecx
  .byte 0x0f,0x91,0x01
  jnc .L947_c$
  movb $0x1,8448
.L947_c$: nop
  jnz .L947_z$
  movb $0x2,8449
.L947_z$: nop
  jns .L947_s$
  movb $0x3,8450
.L947_s$: nop
  jnp .L947_p$
  movb $0x4,8451
.L947_p$: nop
  jno .L947_o$
  movb $0x5,8452
.L947_o$: nop

    ret
         .size   setcc_with_code_1_flags_clear_constant, .-setcc_with_code_1_flags_clear_constant

    
.globl setcc_with_code_1_flags_clear_allregs
         .type   setcc_with_code_1_flags_clear_allregs, @function
setcc_with_code_1_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x91,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_1_flags_clear_allregs, .-setcc_with_code_1_flags_clear_allregs

    
.globl setcc_with_code_1_flags_set1
         .type   setcc_with_code_1_flags_set1, @function
setcc_with_code_1_flags_set1:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%ecx
  .byte 0x0f,0x91,0x01
  jnc .L948_c$
  movb $0x1,8448
.L948_c$: nop
  jnz .L948_z$
  movb $0x2,8449
.L948_z$: nop
  jns .L948_s$
  movb $0x3,8450
.L948_s$: nop
  jnp .L948_p$
  movb $0x4,8451
.L948_p$: nop
  jno .L948_o$
  movb $0x5,8452
.L948_o$: nop

    ret
         .size   setcc_with_code_1_flags_set1, .-setcc_with_code_1_flags_set1

    
.globl setcc_with_code_1_flags_set1_constant
         .type   setcc_with_code_1_flags_set1_constant, @function
setcc_with_code_1_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax
  mov $1,%ecx
  .byte 0x0f,0x91,0x01
  jnc .L949_c$
  movb $0x1,8448
.L949_c$: nop
  jnz .L949_z$
  movb $0x2,8449
.L949_z$: nop
  jns .L949_s$
  movb $0x3,8450
.L949_s$: nop
  jnp .L949_p$
  movb $0x4,8451
.L949_p$: nop
  jno .L949_o$
  movb $0x5,8452
.L949_o$: nop

    ret
         .size   setcc_with_code_1_flags_set1_constant, .-setcc_with_code_1_flags_set1_constant

    
.globl setcc_with_code_1_flags_set1_allregs
         .type   setcc_with_code_1_flags_set1_allregs, @function
setcc_with_code_1_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x91,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_1_flags_set1_allregs, .-setcc_with_code_1_flags_set1_allregs

    
.globl setcc_with_code_1_flags_set2
         .type   setcc_with_code_1_flags_set2, @function
setcc_with_code_1_flags_set2:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%ecx
  .byte 0x0f,0x91,0x01
  jnc .L950_c$
  movb $0x1,8448
.L950_c$: nop
  jnz .L950_z$
  movb $0x2,8449
.L950_z$: nop
  jns .L950_s$
  movb $0x3,8450
.L950_s$: nop
  jnp .L950_p$
  movb $0x4,8451
.L950_p$: nop
  jno .L950_o$
  movb $0x5,8452
.L950_o$: nop

    ret
         .size   setcc_with_code_1_flags_set2, .-setcc_with_code_1_flags_set2

    
.globl setcc_with_code_1_flags_set2_constant
         .type   setcc_with_code_1_flags_set2_constant, @function
setcc_with_code_1_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax
  mov $1,%ecx
  .byte 0x0f,0x91,0x01
  jnc .L951_c$
  movb $0x1,8448
.L951_c$: nop
  jnz .L951_z$
  movb $0x2,8449
.L951_z$: nop
  jns .L951_s$
  movb $0x3,8450
.L951_s$: nop
  jnp .L951_p$
  movb $0x4,8451
.L951_p$: nop
  jno .L951_o$
  movb $0x5,8452
.L951_o$: nop

    ret
         .size   setcc_with_code_1_flags_set2_constant, .-setcc_with_code_1_flags_set2_constant

    
.globl setcc_with_code_1_flags_set2_allregs
         .type   setcc_with_code_1_flags_set2_allregs, @function
setcc_with_code_1_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x91,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_1_flags_set2_allregs, .-setcc_with_code_1_flags_set2_allregs

    
.globl setcc_with_code_1_flags_cmp
         .type   setcc_with_code_1_flags_cmp, @function
setcc_with_code_1_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%ecx
  .byte 0x0f,0x91,0x01
  jnc .L952_c$
  movb $0x1,8448
.L952_c$: nop
  jnz .L952_z$
  movb $0x2,8449
.L952_z$: nop
  jns .L952_s$
  movb $0x3,8450
.L952_s$: nop
  jnp .L952_p$
  movb $0x4,8451
.L952_p$: nop
  jno .L952_o$
  movb $0x5,8452
.L952_o$: nop

    ret
         .size   setcc_with_code_1_flags_cmp, .-setcc_with_code_1_flags_cmp

    
.globl setcc_with_code_1_flags_cmp_constant
         .type   setcc_with_code_1_flags_cmp_constant, @function
setcc_with_code_1_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov $1,%ecx
  .byte 0x0f,0x91,0x01
  jnc .L953_c$
  movb $0x1,8448
.L953_c$: nop
  jnz .L953_z$
  movb $0x2,8449
.L953_z$: nop
  jns .L953_s$
  movb $0x3,8450
.L953_s$: nop
  jnp .L953_p$
  movb $0x4,8451
.L953_p$: nop
  jno .L953_o$
  movb $0x5,8452
.L953_o$: nop

    ret
         .size   setcc_with_code_1_flags_cmp_constant, .-setcc_with_code_1_flags_cmp_constant

    
.globl setcc_with_code_1_flags_cmp_allregs
         .type   setcc_with_code_1_flags_cmp_allregs, @function
setcc_with_code_1_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x91,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_1_flags_cmp_allregs, .-setcc_with_code_1_flags_cmp_allregs

    
.globl setcc_with_code_2_flags_clear
         .type   setcc_with_code_2_flags_clear, @function
setcc_with_code_2_flags_clear:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%ecx
  .byte 0x0f,0x92,0x01
  jnc .L954_c$
  movb $0x1,8448
.L954_c$: nop
  jnz .L954_z$
  movb $0x2,8449
.L954_z$: nop
  jns .L954_s$
  movb $0x3,8450
.L954_s$: nop
  jnp .L954_p$
  movb $0x4,8451
.L954_p$: nop
  jno .L954_o$
  movb $0x5,8452
.L954_o$: nop

    ret
         .size   setcc_with_code_2_flags_clear, .-setcc_with_code_2_flags_clear

    
.globl setcc_with_code_2_flags_clear_constant
         .type   setcc_with_code_2_flags_clear_constant, @function
setcc_with_code_2_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax
  mov $1,%ecx
  .byte 0x0f,0x92,0x01
  jnc .L955_c$
  movb $0x1,8448
.L955_c$: nop
  jnz .L955_z$
  movb $0x2,8449
.L955_z$: nop
  jns .L955_s$
  movb $0x3,8450
.L955_s$: nop
  jnp .L955_p$
  movb $0x4,8451
.L955_p$: nop
  jno .L955_o$
  movb $0x5,8452
.L955_o$: nop

    ret
         .size   setcc_with_code_2_flags_clear_constant, .-setcc_with_code_2_flags_clear_constant

    
.globl setcc_with_code_2_flags_clear_allregs
         .type   setcc_with_code_2_flags_clear_allregs, @function
setcc_with_code_2_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x92,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_2_flags_clear_allregs, .-setcc_with_code_2_flags_clear_allregs

    
.globl setcc_with_code_2_flags_set1
         .type   setcc_with_code_2_flags_set1, @function
setcc_with_code_2_flags_set1:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%ecx
  .byte 0x0f,0x92,0x01
  jnc .L956_c$
  movb $0x1,8448
.L956_c$: nop
  jnz .L956_z$
  movb $0x2,8449
.L956_z$: nop
  jns .L956_s$
  movb $0x3,8450
.L956_s$: nop
  jnp .L956_p$
  movb $0x4,8451
.L956_p$: nop
  jno .L956_o$
  movb $0x5,8452
.L956_o$: nop

    ret
         .size   setcc_with_code_2_flags_set1, .-setcc_with_code_2_flags_set1

    
.globl setcc_with_code_2_flags_set1_constant
         .type   setcc_with_code_2_flags_set1_constant, @function
setcc_with_code_2_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax
  mov $1,%ecx
  .byte 0x0f,0x92,0x01
  jnc .L957_c$
  movb $0x1,8448
.L957_c$: nop
  jnz .L957_z$
  movb $0x2,8449
.L957_z$: nop
  jns .L957_s$
  movb $0x3,8450
.L957_s$: nop
  jnp .L957_p$
  movb $0x4,8451
.L957_p$: nop
  jno .L957_o$
  movb $0x5,8452
.L957_o$: nop

    ret
         .size   setcc_with_code_2_flags_set1_constant, .-setcc_with_code_2_flags_set1_constant

    
.globl setcc_with_code_2_flags_set1_allregs
         .type   setcc_with_code_2_flags_set1_allregs, @function
setcc_with_code_2_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x92,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_2_flags_set1_allregs, .-setcc_with_code_2_flags_set1_allregs

    
.globl setcc_with_code_2_flags_set2
         .type   setcc_with_code_2_flags_set2, @function
setcc_with_code_2_flags_set2:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%ecx
  .byte 0x0f,0x92,0x01
  jnc .L958_c$
  movb $0x1,8448
.L958_c$: nop
  jnz .L958_z$
  movb $0x2,8449
.L958_z$: nop
  jns .L958_s$
  movb $0x3,8450
.L958_s$: nop
  jnp .L958_p$
  movb $0x4,8451
.L958_p$: nop
  jno .L958_o$
  movb $0x5,8452
.L958_o$: nop

    ret
         .size   setcc_with_code_2_flags_set2, .-setcc_with_code_2_flags_set2

    
.globl setcc_with_code_2_flags_set2_constant
         .type   setcc_with_code_2_flags_set2_constant, @function
setcc_with_code_2_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax
  mov $1,%ecx
  .byte 0x0f,0x92,0x01
  jnc .L959_c$
  movb $0x1,8448
.L959_c$: nop
  jnz .L959_z$
  movb $0x2,8449
.L959_z$: nop
  jns .L959_s$
  movb $0x3,8450
.L959_s$: nop
  jnp .L959_p$
  movb $0x4,8451
.L959_p$: nop
  jno .L959_o$
  movb $0x5,8452
.L959_o$: nop

    ret
         .size   setcc_with_code_2_flags_set2_constant, .-setcc_with_code_2_flags_set2_constant

    
.globl setcc_with_code_2_flags_set2_allregs
         .type   setcc_with_code_2_flags_set2_allregs, @function
setcc_with_code_2_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x92,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_2_flags_set2_allregs, .-setcc_with_code_2_flags_set2_allregs

    
.globl setcc_with_code_2_flags_cmp
         .type   setcc_with_code_2_flags_cmp, @function
setcc_with_code_2_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%ecx
  .byte 0x0f,0x92,0x01
  jnc .L960_c$
  movb $0x1,8448
.L960_c$: nop
  jnz .L960_z$
  movb $0x2,8449
.L960_z$: nop
  jns .L960_s$
  movb $0x3,8450
.L960_s$: nop
  jnp .L960_p$
  movb $0x4,8451
.L960_p$: nop
  jno .L960_o$
  movb $0x5,8452
.L960_o$: nop

    ret
         .size   setcc_with_code_2_flags_cmp, .-setcc_with_code_2_flags_cmp

    
.globl setcc_with_code_2_flags_cmp_constant
         .type   setcc_with_code_2_flags_cmp_constant, @function
setcc_with_code_2_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov $1,%ecx
  .byte 0x0f,0x92,0x01
  jnc .L961_c$
  movb $0x1,8448
.L961_c$: nop
  jnz .L961_z$
  movb $0x2,8449
.L961_z$: nop
  jns .L961_s$
  movb $0x3,8450
.L961_s$: nop
  jnp .L961_p$
  movb $0x4,8451
.L961_p$: nop
  jno .L961_o$
  movb $0x5,8452
.L961_o$: nop

    ret
         .size   setcc_with_code_2_flags_cmp_constant, .-setcc_with_code_2_flags_cmp_constant

    
.globl setcc_with_code_2_flags_cmp_allregs
         .type   setcc_with_code_2_flags_cmp_allregs, @function
setcc_with_code_2_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x92,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_2_flags_cmp_allregs, .-setcc_with_code_2_flags_cmp_allregs

    
.globl setcc_with_code_3_flags_clear
         .type   setcc_with_code_3_flags_clear, @function
setcc_with_code_3_flags_clear:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%ecx
  .byte 0x0f,0x93,0x01
  jnc .L962_c$
  movb $0x1,8448
.L962_c$: nop
  jnz .L962_z$
  movb $0x2,8449
.L962_z$: nop
  jns .L962_s$
  movb $0x3,8450
.L962_s$: nop
  jnp .L962_p$
  movb $0x4,8451
.L962_p$: nop
  jno .L962_o$
  movb $0x5,8452
.L962_o$: nop

    ret
         .size   setcc_with_code_3_flags_clear, .-setcc_with_code_3_flags_clear

    
.globl setcc_with_code_3_flags_clear_constant
         .type   setcc_with_code_3_flags_clear_constant, @function
setcc_with_code_3_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax
  mov $1,%ecx
  .byte 0x0f,0x93,0x01
  jnc .L963_c$
  movb $0x1,8448
.L963_c$: nop
  jnz .L963_z$
  movb $0x2,8449
.L963_z$: nop
  jns .L963_s$
  movb $0x3,8450
.L963_s$: nop
  jnp .L963_p$
  movb $0x4,8451
.L963_p$: nop
  jno .L963_o$
  movb $0x5,8452
.L963_o$: nop

    ret
         .size   setcc_with_code_3_flags_clear_constant, .-setcc_with_code_3_flags_clear_constant

    
.globl setcc_with_code_3_flags_clear_allregs
         .type   setcc_with_code_3_flags_clear_allregs, @function
setcc_with_code_3_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x93,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_3_flags_clear_allregs, .-setcc_with_code_3_flags_clear_allregs

    
.globl setcc_with_code_3_flags_set1
         .type   setcc_with_code_3_flags_set1, @function
setcc_with_code_3_flags_set1:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%ecx
  .byte 0x0f,0x93,0x01
  jnc .L964_c$
  movb $0x1,8448
.L964_c$: nop
  jnz .L964_z$
  movb $0x2,8449
.L964_z$: nop
  jns .L964_s$
  movb $0x3,8450
.L964_s$: nop
  jnp .L964_p$
  movb $0x4,8451
.L964_p$: nop
  jno .L964_o$
  movb $0x5,8452
.L964_o$: nop

    ret
         .size   setcc_with_code_3_flags_set1, .-setcc_with_code_3_flags_set1

    
.globl setcc_with_code_3_flags_set1_constant
         .type   setcc_with_code_3_flags_set1_constant, @function
setcc_with_code_3_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax
  mov $1,%ecx
  .byte 0x0f,0x93,0x01
  jnc .L965_c$
  movb $0x1,8448
.L965_c$: nop
  jnz .L965_z$
  movb $0x2,8449
.L965_z$: nop
  jns .L965_s$
  movb $0x3,8450
.L965_s$: nop
  jnp .L965_p$
  movb $0x4,8451
.L965_p$: nop
  jno .L965_o$
  movb $0x5,8452
.L965_o$: nop

    ret
         .size   setcc_with_code_3_flags_set1_constant, .-setcc_with_code_3_flags_set1_constant

    
.globl setcc_with_code_3_flags_set1_allregs
         .type   setcc_with_code_3_flags_set1_allregs, @function
setcc_with_code_3_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x93,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_3_flags_set1_allregs, .-setcc_with_code_3_flags_set1_allregs

    
.globl setcc_with_code_3_flags_set2
         .type   setcc_with_code_3_flags_set2, @function
setcc_with_code_3_flags_set2:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%ecx
  .byte 0x0f,0x93,0x01
  jnc .L966_c$
  movb $0x1,8448
.L966_c$: nop
  jnz .L966_z$
  movb $0x2,8449
.L966_z$: nop
  jns .L966_s$
  movb $0x3,8450
.L966_s$: nop
  jnp .L966_p$
  movb $0x4,8451
.L966_p$: nop
  jno .L966_o$
  movb $0x5,8452
.L966_o$: nop

    ret
         .size   setcc_with_code_3_flags_set2, .-setcc_with_code_3_flags_set2

    
.globl setcc_with_code_3_flags_set2_constant
         .type   setcc_with_code_3_flags_set2_constant, @function
setcc_with_code_3_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax
  mov $1,%ecx
  .byte 0x0f,0x93,0x01
  jnc .L967_c$
  movb $0x1,8448
.L967_c$: nop
  jnz .L967_z$
  movb $0x2,8449
.L967_z$: nop
  jns .L967_s$
  movb $0x3,8450
.L967_s$: nop
  jnp .L967_p$
  movb $0x4,8451
.L967_p$: nop
  jno .L967_o$
  movb $0x5,8452
.L967_o$: nop

    ret
         .size   setcc_with_code_3_flags_set2_constant, .-setcc_with_code_3_flags_set2_constant

    
.globl setcc_with_code_3_flags_set2_allregs
         .type   setcc_with_code_3_flags_set2_allregs, @function
setcc_with_code_3_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x93,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_3_flags_set2_allregs, .-setcc_with_code_3_flags_set2_allregs

    
.globl setcc_with_code_3_flags_cmp
         .type   setcc_with_code_3_flags_cmp, @function
setcc_with_code_3_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%ecx
  .byte 0x0f,0x93,0x01
  jnc .L968_c$
  movb $0x1,8448
.L968_c$: nop
  jnz .L968_z$
  movb $0x2,8449
.L968_z$: nop
  jns .L968_s$
  movb $0x3,8450
.L968_s$: nop
  jnp .L968_p$
  movb $0x4,8451
.L968_p$: nop
  jno .L968_o$
  movb $0x5,8452
.L968_o$: nop

    ret
         .size   setcc_with_code_3_flags_cmp, .-setcc_with_code_3_flags_cmp

    
.globl setcc_with_code_3_flags_cmp_constant
         .type   setcc_with_code_3_flags_cmp_constant, @function
setcc_with_code_3_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov $1,%ecx
  .byte 0x0f,0x93,0x01
  jnc .L969_c$
  movb $0x1,8448
.L969_c$: nop
  jnz .L969_z$
  movb $0x2,8449
.L969_z$: nop
  jns .L969_s$
  movb $0x3,8450
.L969_s$: nop
  jnp .L969_p$
  movb $0x4,8451
.L969_p$: nop
  jno .L969_o$
  movb $0x5,8452
.L969_o$: nop

    ret
         .size   setcc_with_code_3_flags_cmp_constant, .-setcc_with_code_3_flags_cmp_constant

    
.globl setcc_with_code_3_flags_cmp_allregs
         .type   setcc_with_code_3_flags_cmp_allregs, @function
setcc_with_code_3_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x93,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_3_flags_cmp_allregs, .-setcc_with_code_3_flags_cmp_allregs

    
.globl setcc_with_code_4_flags_clear
         .type   setcc_with_code_4_flags_clear, @function
setcc_with_code_4_flags_clear:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%ecx
  .byte 0x0f,0x94,0x01
  jnc .L970_c$
  movb $0x1,8448
.L970_c$: nop
  jnz .L970_z$
  movb $0x2,8449
.L970_z$: nop
  jns .L970_s$
  movb $0x3,8450
.L970_s$: nop
  jnp .L970_p$
  movb $0x4,8451
.L970_p$: nop
  jno .L970_o$
  movb $0x5,8452
.L970_o$: nop

    ret
         .size   setcc_with_code_4_flags_clear, .-setcc_with_code_4_flags_clear

    
.globl setcc_with_code_4_flags_clear_constant
         .type   setcc_with_code_4_flags_clear_constant, @function
setcc_with_code_4_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax
  mov $1,%ecx
  .byte 0x0f,0x94,0x01
  jnc .L971_c$
  movb $0x1,8448
.L971_c$: nop
  jnz .L971_z$
  movb $0x2,8449
.L971_z$: nop
  jns .L971_s$
  movb $0x3,8450
.L971_s$: nop
  jnp .L971_p$
  movb $0x4,8451
.L971_p$: nop
  jno .L971_o$
  movb $0x5,8452
.L971_o$: nop

    ret
         .size   setcc_with_code_4_flags_clear_constant, .-setcc_with_code_4_flags_clear_constant

    
.globl setcc_with_code_4_flags_clear_allregs
         .type   setcc_with_code_4_flags_clear_allregs, @function
setcc_with_code_4_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x94,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_4_flags_clear_allregs, .-setcc_with_code_4_flags_clear_allregs

    
.globl setcc_with_code_4_flags_set1
         .type   setcc_with_code_4_flags_set1, @function
setcc_with_code_4_flags_set1:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%ecx
  .byte 0x0f,0x94,0x01
  jnc .L972_c$
  movb $0x1,8448
.L972_c$: nop
  jnz .L972_z$
  movb $0x2,8449
.L972_z$: nop
  jns .L972_s$
  movb $0x3,8450
.L972_s$: nop
  jnp .L972_p$
  movb $0x4,8451
.L972_p$: nop
  jno .L972_o$
  movb $0x5,8452
.L972_o$: nop

    ret
         .size   setcc_with_code_4_flags_set1, .-setcc_with_code_4_flags_set1

    
.globl setcc_with_code_4_flags_set1_constant
         .type   setcc_with_code_4_flags_set1_constant, @function
setcc_with_code_4_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax
  mov $1,%ecx
  .byte 0x0f,0x94,0x01
  jnc .L973_c$
  movb $0x1,8448
.L973_c$: nop
  jnz .L973_z$
  movb $0x2,8449
.L973_z$: nop
  jns .L973_s$
  movb $0x3,8450
.L973_s$: nop
  jnp .L973_p$
  movb $0x4,8451
.L973_p$: nop
  jno .L973_o$
  movb $0x5,8452
.L973_o$: nop

    ret
         .size   setcc_with_code_4_flags_set1_constant, .-setcc_with_code_4_flags_set1_constant

    
.globl setcc_with_code_4_flags_set1_allregs
         .type   setcc_with_code_4_flags_set1_allregs, @function
setcc_with_code_4_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x94,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_4_flags_set1_allregs, .-setcc_with_code_4_flags_set1_allregs

    
.globl setcc_with_code_4_flags_set2
         .type   setcc_with_code_4_flags_set2, @function
setcc_with_code_4_flags_set2:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%ecx
  .byte 0x0f,0x94,0x01
  jnc .L974_c$
  movb $0x1,8448
.L974_c$: nop
  jnz .L974_z$
  movb $0x2,8449
.L974_z$: nop
  jns .L974_s$
  movb $0x3,8450
.L974_s$: nop
  jnp .L974_p$
  movb $0x4,8451
.L974_p$: nop
  jno .L974_o$
  movb $0x5,8452
.L974_o$: nop

    ret
         .size   setcc_with_code_4_flags_set2, .-setcc_with_code_4_flags_set2

    
.globl setcc_with_code_4_flags_set2_constant
         .type   setcc_with_code_4_flags_set2_constant, @function
setcc_with_code_4_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax
  mov $1,%ecx
  .byte 0x0f,0x94,0x01
  jnc .L975_c$
  movb $0x1,8448
.L975_c$: nop
  jnz .L975_z$
  movb $0x2,8449
.L975_z$: nop
  jns .L975_s$
  movb $0x3,8450
.L975_s$: nop
  jnp .L975_p$
  movb $0x4,8451
.L975_p$: nop
  jno .L975_o$
  movb $0x5,8452
.L975_o$: nop

    ret
         .size   setcc_with_code_4_flags_set2_constant, .-setcc_with_code_4_flags_set2_constant

    
.globl setcc_with_code_4_flags_set2_allregs
         .type   setcc_with_code_4_flags_set2_allregs, @function
setcc_with_code_4_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x94,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_4_flags_set2_allregs, .-setcc_with_code_4_flags_set2_allregs

    
.globl setcc_with_code_4_flags_cmp
         .type   setcc_with_code_4_flags_cmp, @function
setcc_with_code_4_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%ecx
  .byte 0x0f,0x94,0x01
  jnc .L976_c$
  movb $0x1,8448
.L976_c$: nop
  jnz .L976_z$
  movb $0x2,8449
.L976_z$: nop
  jns .L976_s$
  movb $0x3,8450
.L976_s$: nop
  jnp .L976_p$
  movb $0x4,8451
.L976_p$: nop
  jno .L976_o$
  movb $0x5,8452
.L976_o$: nop

    ret
         .size   setcc_with_code_4_flags_cmp, .-setcc_with_code_4_flags_cmp

    
.globl setcc_with_code_4_flags_cmp_constant
         .type   setcc_with_code_4_flags_cmp_constant, @function
setcc_with_code_4_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov $1,%ecx
  .byte 0x0f,0x94,0x01
  jnc .L977_c$
  movb $0x1,8448
.L977_c$: nop
  jnz .L977_z$
  movb $0x2,8449
.L977_z$: nop
  jns .L977_s$
  movb $0x3,8450
.L977_s$: nop
  jnp .L977_p$
  movb $0x4,8451
.L977_p$: nop
  jno .L977_o$
  movb $0x5,8452
.L977_o$: nop

    ret
         .size   setcc_with_code_4_flags_cmp_constant, .-setcc_with_code_4_flags_cmp_constant

    
.globl setcc_with_code_4_flags_cmp_allregs
         .type   setcc_with_code_4_flags_cmp_allregs, @function
setcc_with_code_4_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x94,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_4_flags_cmp_allregs, .-setcc_with_code_4_flags_cmp_allregs

    
.globl setcc_with_code_5_flags_clear
         .type   setcc_with_code_5_flags_clear, @function
setcc_with_code_5_flags_clear:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%ecx
  .byte 0x0f,0x95,0x01
  jnc .L978_c$
  movb $0x1,8448
.L978_c$: nop
  jnz .L978_z$
  movb $0x2,8449
.L978_z$: nop
  jns .L978_s$
  movb $0x3,8450
.L978_s$: nop
  jnp .L978_p$
  movb $0x4,8451
.L978_p$: nop
  jno .L978_o$
  movb $0x5,8452
.L978_o$: nop

    ret
         .size   setcc_with_code_5_flags_clear, .-setcc_with_code_5_flags_clear

    
.globl setcc_with_code_5_flags_clear_constant
         .type   setcc_with_code_5_flags_clear_constant, @function
setcc_with_code_5_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax
  mov $1,%ecx
  .byte 0x0f,0x95,0x01
  jnc .L979_c$
  movb $0x1,8448
.L979_c$: nop
  jnz .L979_z$
  movb $0x2,8449
.L979_z$: nop
  jns .L979_s$
  movb $0x3,8450
.L979_s$: nop
  jnp .L979_p$
  movb $0x4,8451
.L979_p$: nop
  jno .L979_o$
  movb $0x5,8452
.L979_o$: nop

    ret
         .size   setcc_with_code_5_flags_clear_constant, .-setcc_with_code_5_flags_clear_constant

    
.globl setcc_with_code_5_flags_clear_allregs
         .type   setcc_with_code_5_flags_clear_allregs, @function
setcc_with_code_5_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x95,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_5_flags_clear_allregs, .-setcc_with_code_5_flags_clear_allregs

    
.globl setcc_with_code_5_flags_set1
         .type   setcc_with_code_5_flags_set1, @function
setcc_with_code_5_flags_set1:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%ecx
  .byte 0x0f,0x95,0x01
  jnc .L980_c$
  movb $0x1,8448
.L980_c$: nop
  jnz .L980_z$
  movb $0x2,8449
.L980_z$: nop
  jns .L980_s$
  movb $0x3,8450
.L980_s$: nop
  jnp .L980_p$
  movb $0x4,8451
.L980_p$: nop
  jno .L980_o$
  movb $0x5,8452
.L980_o$: nop

    ret
         .size   setcc_with_code_5_flags_set1, .-setcc_with_code_5_flags_set1

    
.globl setcc_with_code_5_flags_set1_constant
         .type   setcc_with_code_5_flags_set1_constant, @function
setcc_with_code_5_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax
  mov $1,%ecx
  .byte 0x0f,0x95,0x01
  jnc .L981_c$
  movb $0x1,8448
.L981_c$: nop
  jnz .L981_z$
  movb $0x2,8449
.L981_z$: nop
  jns .L981_s$
  movb $0x3,8450
.L981_s$: nop
  jnp .L981_p$
  movb $0x4,8451
.L981_p$: nop
  jno .L981_o$
  movb $0x5,8452
.L981_o$: nop

    ret
         .size   setcc_with_code_5_flags_set1_constant, .-setcc_with_code_5_flags_set1_constant

    
.globl setcc_with_code_5_flags_set1_allregs
         .type   setcc_with_code_5_flags_set1_allregs, @function
setcc_with_code_5_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x95,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_5_flags_set1_allregs, .-setcc_with_code_5_flags_set1_allregs

    
.globl setcc_with_code_5_flags_set2
         .type   setcc_with_code_5_flags_set2, @function
setcc_with_code_5_flags_set2:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%ecx
  .byte 0x0f,0x95,0x01
  jnc .L982_c$
  movb $0x1,8448
.L982_c$: nop
  jnz .L982_z$
  movb $0x2,8449
.L982_z$: nop
  jns .L982_s$
  movb $0x3,8450
.L982_s$: nop
  jnp .L982_p$
  movb $0x4,8451
.L982_p$: nop
  jno .L982_o$
  movb $0x5,8452
.L982_o$: nop

    ret
         .size   setcc_with_code_5_flags_set2, .-setcc_with_code_5_flags_set2

    
.globl setcc_with_code_5_flags_set2_constant
         .type   setcc_with_code_5_flags_set2_constant, @function
setcc_with_code_5_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax
  mov $1,%ecx
  .byte 0x0f,0x95,0x01
  jnc .L983_c$
  movb $0x1,8448
.L983_c$: nop
  jnz .L983_z$
  movb $0x2,8449
.L983_z$: nop
  jns .L983_s$
  movb $0x3,8450
.L983_s$: nop
  jnp .L983_p$
  movb $0x4,8451
.L983_p$: nop
  jno .L983_o$
  movb $0x5,8452
.L983_o$: nop

    ret
         .size   setcc_with_code_5_flags_set2_constant, .-setcc_with_code_5_flags_set2_constant

    
.globl setcc_with_code_5_flags_set2_allregs
         .type   setcc_with_code_5_flags_set2_allregs, @function
setcc_with_code_5_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x95,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_5_flags_set2_allregs, .-setcc_with_code_5_flags_set2_allregs

    
.globl setcc_with_code_5_flags_cmp
         .type   setcc_with_code_5_flags_cmp, @function
setcc_with_code_5_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%ecx
  .byte 0x0f,0x95,0x01
  jnc .L984_c$
  movb $0x1,8448
.L984_c$: nop
  jnz .L984_z$
  movb $0x2,8449
.L984_z$: nop
  jns .L984_s$
  movb $0x3,8450
.L984_s$: nop
  jnp .L984_p$
  movb $0x4,8451
.L984_p$: nop
  jno .L984_o$
  movb $0x5,8452
.L984_o$: nop

    ret
         .size   setcc_with_code_5_flags_cmp, .-setcc_with_code_5_flags_cmp

    
.globl setcc_with_code_5_flags_cmp_constant
         .type   setcc_with_code_5_flags_cmp_constant, @function
setcc_with_code_5_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov $1,%ecx
  .byte 0x0f,0x95,0x01
  jnc .L985_c$
  movb $0x1,8448
.L985_c$: nop
  jnz .L985_z$
  movb $0x2,8449
.L985_z$: nop
  jns .L985_s$
  movb $0x3,8450
.L985_s$: nop
  jnp .L985_p$
  movb $0x4,8451
.L985_p$: nop
  jno .L985_o$
  movb $0x5,8452
.L985_o$: nop

    ret
         .size   setcc_with_code_5_flags_cmp_constant, .-setcc_with_code_5_flags_cmp_constant

    
.globl setcc_with_code_5_flags_cmp_allregs
         .type   setcc_with_code_5_flags_cmp_allregs, @function
setcc_with_code_5_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x95,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_5_flags_cmp_allregs, .-setcc_with_code_5_flags_cmp_allregs

    
.globl setcc_with_code_6_flags_clear
         .type   setcc_with_code_6_flags_clear, @function
setcc_with_code_6_flags_clear:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%ecx
  .byte 0x0f,0x96,0x01
  jnc .L986_c$
  movb $0x1,8448
.L986_c$: nop
  jnz .L986_z$
  movb $0x2,8449
.L986_z$: nop
  jns .L986_s$
  movb $0x3,8450
.L986_s$: nop
  jnp .L986_p$
  movb $0x4,8451
.L986_p$: nop
  jno .L986_o$
  movb $0x5,8452
.L986_o$: nop

    ret
         .size   setcc_with_code_6_flags_clear, .-setcc_with_code_6_flags_clear

    
.globl setcc_with_code_6_flags_clear_constant
         .type   setcc_with_code_6_flags_clear_constant, @function
setcc_with_code_6_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax
  mov $1,%ecx
  .byte 0x0f,0x96,0x01
  jnc .L987_c$
  movb $0x1,8448
.L987_c$: nop
  jnz .L987_z$
  movb $0x2,8449
.L987_z$: nop
  jns .L987_s$
  movb $0x3,8450
.L987_s$: nop
  jnp .L987_p$
  movb $0x4,8451
.L987_p$: nop
  jno .L987_o$
  movb $0x5,8452
.L987_o$: nop

    ret
         .size   setcc_with_code_6_flags_clear_constant, .-setcc_with_code_6_flags_clear_constant

    
.globl setcc_with_code_6_flags_clear_allregs
         .type   setcc_with_code_6_flags_clear_allregs, @function
setcc_with_code_6_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x96,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_6_flags_clear_allregs, .-setcc_with_code_6_flags_clear_allregs

    
.globl setcc_with_code_6_flags_set1
         .type   setcc_with_code_6_flags_set1, @function
setcc_with_code_6_flags_set1:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%ecx
  .byte 0x0f,0x96,0x01
  jnc .L988_c$
  movb $0x1,8448
.L988_c$: nop
  jnz .L988_z$
  movb $0x2,8449
.L988_z$: nop
  jns .L988_s$
  movb $0x3,8450
.L988_s$: nop
  jnp .L988_p$
  movb $0x4,8451
.L988_p$: nop
  jno .L988_o$
  movb $0x5,8452
.L988_o$: nop

    ret
         .size   setcc_with_code_6_flags_set1, .-setcc_with_code_6_flags_set1

    
.globl setcc_with_code_6_flags_set1_constant
         .type   setcc_with_code_6_flags_set1_constant, @function
setcc_with_code_6_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax
  mov $1,%ecx
  .byte 0x0f,0x96,0x01
  jnc .L989_c$
  movb $0x1,8448
.L989_c$: nop
  jnz .L989_z$
  movb $0x2,8449
.L989_z$: nop
  jns .L989_s$
  movb $0x3,8450
.L989_s$: nop
  jnp .L989_p$
  movb $0x4,8451
.L989_p$: nop
  jno .L989_o$
  movb $0x5,8452
.L989_o$: nop

    ret
         .size   setcc_with_code_6_flags_set1_constant, .-setcc_with_code_6_flags_set1_constant

    
.globl setcc_with_code_6_flags_set1_allregs
         .type   setcc_with_code_6_flags_set1_allregs, @function
setcc_with_code_6_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x96,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_6_flags_set1_allregs, .-setcc_with_code_6_flags_set1_allregs

    
.globl setcc_with_code_6_flags_set2
         .type   setcc_with_code_6_flags_set2, @function
setcc_with_code_6_flags_set2:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%ecx
  .byte 0x0f,0x96,0x01
  jnc .L990_c$
  movb $0x1,8448
.L990_c$: nop
  jnz .L990_z$
  movb $0x2,8449
.L990_z$: nop
  jns .L990_s$
  movb $0x3,8450
.L990_s$: nop
  jnp .L990_p$
  movb $0x4,8451
.L990_p$: nop
  jno .L990_o$
  movb $0x5,8452
.L990_o$: nop

    ret
         .size   setcc_with_code_6_flags_set2, .-setcc_with_code_6_flags_set2

    
.globl setcc_with_code_6_flags_set2_constant
         .type   setcc_with_code_6_flags_set2_constant, @function
setcc_with_code_6_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax
  mov $1,%ecx
  .byte 0x0f,0x96,0x01
  jnc .L991_c$
  movb $0x1,8448
.L991_c$: nop
  jnz .L991_z$
  movb $0x2,8449
.L991_z$: nop
  jns .L991_s$
  movb $0x3,8450
.L991_s$: nop
  jnp .L991_p$
  movb $0x4,8451
.L991_p$: nop
  jno .L991_o$
  movb $0x5,8452
.L991_o$: nop

    ret
         .size   setcc_with_code_6_flags_set2_constant, .-setcc_with_code_6_flags_set2_constant

    
.globl setcc_with_code_6_flags_set2_allregs
         .type   setcc_with_code_6_flags_set2_allregs, @function
setcc_with_code_6_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x96,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_6_flags_set2_allregs, .-setcc_with_code_6_flags_set2_allregs

    
.globl setcc_with_code_6_flags_cmp
         .type   setcc_with_code_6_flags_cmp, @function
setcc_with_code_6_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%ecx
  .byte 0x0f,0x96,0x01
  jnc .L992_c$
  movb $0x1,8448
.L992_c$: nop
  jnz .L992_z$
  movb $0x2,8449
.L992_z$: nop
  jns .L992_s$
  movb $0x3,8450
.L992_s$: nop
  jnp .L992_p$
  movb $0x4,8451
.L992_p$: nop
  jno .L992_o$
  movb $0x5,8452
.L992_o$: nop

    ret
         .size   setcc_with_code_6_flags_cmp, .-setcc_with_code_6_flags_cmp

    
.globl setcc_with_code_6_flags_cmp_constant
         .type   setcc_with_code_6_flags_cmp_constant, @function
setcc_with_code_6_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov $1,%ecx
  .byte 0x0f,0x96,0x01
  jnc .L993_c$
  movb $0x1,8448
.L993_c$: nop
  jnz .L993_z$
  movb $0x2,8449
.L993_z$: nop
  jns .L993_s$
  movb $0x3,8450
.L993_s$: nop
  jnp .L993_p$
  movb $0x4,8451
.L993_p$: nop
  jno .L993_o$
  movb $0x5,8452
.L993_o$: nop

    ret
         .size   setcc_with_code_6_flags_cmp_constant, .-setcc_with_code_6_flags_cmp_constant

    
.globl setcc_with_code_6_flags_cmp_allregs
         .type   setcc_with_code_6_flags_cmp_allregs, @function
setcc_with_code_6_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x96,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_6_flags_cmp_allregs, .-setcc_with_code_6_flags_cmp_allregs

    
.globl setcc_with_code_7_flags_clear
         .type   setcc_with_code_7_flags_clear, @function
setcc_with_code_7_flags_clear:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%ecx
  .byte 0x0f,0x97,0x01
  jnc .L994_c$
  movb $0x1,8448
.L994_c$: nop
  jnz .L994_z$
  movb $0x2,8449
.L994_z$: nop
  jns .L994_s$
  movb $0x3,8450
.L994_s$: nop
  jnp .L994_p$
  movb $0x4,8451
.L994_p$: nop
  jno .L994_o$
  movb $0x5,8452
.L994_o$: nop

    ret
         .size   setcc_with_code_7_flags_clear, .-setcc_with_code_7_flags_clear

    
.globl setcc_with_code_7_flags_clear_constant
         .type   setcc_with_code_7_flags_clear_constant, @function
setcc_with_code_7_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax
  mov $1,%ecx
  .byte 0x0f,0x97,0x01
  jnc .L995_c$
  movb $0x1,8448
.L995_c$: nop
  jnz .L995_z$
  movb $0x2,8449
.L995_z$: nop
  jns .L995_s$
  movb $0x3,8450
.L995_s$: nop
  jnp .L995_p$
  movb $0x4,8451
.L995_p$: nop
  jno .L995_o$
  movb $0x5,8452
.L995_o$: nop

    ret
         .size   setcc_with_code_7_flags_clear_constant, .-setcc_with_code_7_flags_clear_constant

    
.globl setcc_with_code_7_flags_clear_allregs
         .type   setcc_with_code_7_flags_clear_allregs, @function
setcc_with_code_7_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x97,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_7_flags_clear_allregs, .-setcc_with_code_7_flags_clear_allregs

    
.globl setcc_with_code_7_flags_set1
         .type   setcc_with_code_7_flags_set1, @function
setcc_with_code_7_flags_set1:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%ecx
  .byte 0x0f,0x97,0x01
  jnc .L996_c$
  movb $0x1,8448
.L996_c$: nop
  jnz .L996_z$
  movb $0x2,8449
.L996_z$: nop
  jns .L996_s$
  movb $0x3,8450
.L996_s$: nop
  jnp .L996_p$
  movb $0x4,8451
.L996_p$: nop
  jno .L996_o$
  movb $0x5,8452
.L996_o$: nop

    ret
         .size   setcc_with_code_7_flags_set1, .-setcc_with_code_7_flags_set1

    
.globl setcc_with_code_7_flags_set1_constant
         .type   setcc_with_code_7_flags_set1_constant, @function
setcc_with_code_7_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax
  mov $1,%ecx
  .byte 0x0f,0x97,0x01
  jnc .L997_c$
  movb $0x1,8448
.L997_c$: nop
  jnz .L997_z$
  movb $0x2,8449
.L997_z$: nop
  jns .L997_s$
  movb $0x3,8450
.L997_s$: nop
  jnp .L997_p$
  movb $0x4,8451
.L997_p$: nop
  jno .L997_o$
  movb $0x5,8452
.L997_o$: nop

    ret
         .size   setcc_with_code_7_flags_set1_constant, .-setcc_with_code_7_flags_set1_constant

    
.globl setcc_with_code_7_flags_set1_allregs
         .type   setcc_with_code_7_flags_set1_allregs, @function
setcc_with_code_7_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x97,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_7_flags_set1_allregs, .-setcc_with_code_7_flags_set1_allregs

    
.globl setcc_with_code_7_flags_set2
         .type   setcc_with_code_7_flags_set2, @function
setcc_with_code_7_flags_set2:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%ecx
  .byte 0x0f,0x97,0x01
  jnc .L998_c$
  movb $0x1,8448
.L998_c$: nop
  jnz .L998_z$
  movb $0x2,8449
.L998_z$: nop
  jns .L998_s$
  movb $0x3,8450
.L998_s$: nop
  jnp .L998_p$
  movb $0x4,8451
.L998_p$: nop
  jno .L998_o$
  movb $0x5,8452
.L998_o$: nop

    ret
         .size   setcc_with_code_7_flags_set2, .-setcc_with_code_7_flags_set2

    
.globl setcc_with_code_7_flags_set2_constant
         .type   setcc_with_code_7_flags_set2_constant, @function
setcc_with_code_7_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax
  mov $1,%ecx
  .byte 0x0f,0x97,0x01
  jnc .L999_c$
  movb $0x1,8448
.L999_c$: nop
  jnz .L999_z$
  movb $0x2,8449
.L999_z$: nop
  jns .L999_s$
  movb $0x3,8450
.L999_s$: nop
  jnp .L999_p$
  movb $0x4,8451
.L999_p$: nop
  jno .L999_o$
  movb $0x5,8452
.L999_o$: nop

    ret
         .size   setcc_with_code_7_flags_set2_constant, .-setcc_with_code_7_flags_set2_constant

    
.globl setcc_with_code_7_flags_set2_allregs
         .type   setcc_with_code_7_flags_set2_allregs, @function
setcc_with_code_7_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x97,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_7_flags_set2_allregs, .-setcc_with_code_7_flags_set2_allregs

    
.globl setcc_with_code_7_flags_cmp
         .type   setcc_with_code_7_flags_cmp, @function
setcc_with_code_7_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%ecx
  .byte 0x0f,0x97,0x01
  jnc .L1000_c$
  movb $0x1,8448
.L1000_c$: nop
  jnz .L1000_z$
  movb $0x2,8449
.L1000_z$: nop
  jns .L1000_s$
  movb $0x3,8450
.L1000_s$: nop
  jnp .L1000_p$
  movb $0x4,8451
.L1000_p$: nop
  jno .L1000_o$
  movb $0x5,8452
.L1000_o$: nop

    ret
         .size   setcc_with_code_7_flags_cmp, .-setcc_with_code_7_flags_cmp

    
.globl setcc_with_code_7_flags_cmp_constant
         .type   setcc_with_code_7_flags_cmp_constant, @function
setcc_with_code_7_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov $1,%ecx
  .byte 0x0f,0x97,0x01
  jnc .L1001_c$
  movb $0x1,8448
.L1001_c$: nop
  jnz .L1001_z$
  movb $0x2,8449
.L1001_z$: nop
  jns .L1001_s$
  movb $0x3,8450
.L1001_s$: nop
  jnp .L1001_p$
  movb $0x4,8451
.L1001_p$: nop
  jno .L1001_o$
  movb $0x5,8452
.L1001_o$: nop

    ret
         .size   setcc_with_code_7_flags_cmp_constant, .-setcc_with_code_7_flags_cmp_constant

    
.globl setcc_with_code_7_flags_cmp_allregs
         .type   setcc_with_code_7_flags_cmp_allregs, @function
setcc_with_code_7_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x97,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_7_flags_cmp_allregs, .-setcc_with_code_7_flags_cmp_allregs

    
.globl setcc_with_code_8_flags_clear
         .type   setcc_with_code_8_flags_clear, @function
setcc_with_code_8_flags_clear:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%ecx
  .byte 0x0f,0x98,0x01
  jnc .L1002_c$
  movb $0x1,8448
.L1002_c$: nop
  jnz .L1002_z$
  movb $0x2,8449
.L1002_z$: nop
  jns .L1002_s$
  movb $0x3,8450
.L1002_s$: nop
  jnp .L1002_p$
  movb $0x4,8451
.L1002_p$: nop
  jno .L1002_o$
  movb $0x5,8452
.L1002_o$: nop

    ret
         .size   setcc_with_code_8_flags_clear, .-setcc_with_code_8_flags_clear

    
.globl setcc_with_code_8_flags_clear_constant
         .type   setcc_with_code_8_flags_clear_constant, @function
setcc_with_code_8_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax
  mov $1,%ecx
  .byte 0x0f,0x98,0x01
  jnc .L1003_c$
  movb $0x1,8448
.L1003_c$: nop
  jnz .L1003_z$
  movb $0x2,8449
.L1003_z$: nop
  jns .L1003_s$
  movb $0x3,8450
.L1003_s$: nop
  jnp .L1003_p$
  movb $0x4,8451
.L1003_p$: nop
  jno .L1003_o$
  movb $0x5,8452
.L1003_o$: nop

    ret
         .size   setcc_with_code_8_flags_clear_constant, .-setcc_with_code_8_flags_clear_constant

    
.globl setcc_with_code_8_flags_clear_allregs
         .type   setcc_with_code_8_flags_clear_allregs, @function
setcc_with_code_8_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x98,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_8_flags_clear_allregs, .-setcc_with_code_8_flags_clear_allregs

    
.globl setcc_with_code_8_flags_set1
         .type   setcc_with_code_8_flags_set1, @function
setcc_with_code_8_flags_set1:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%ecx
  .byte 0x0f,0x98,0x01
  jnc .L1004_c$
  movb $0x1,8448
.L1004_c$: nop
  jnz .L1004_z$
  movb $0x2,8449
.L1004_z$: nop
  jns .L1004_s$
  movb $0x3,8450
.L1004_s$: nop
  jnp .L1004_p$
  movb $0x4,8451
.L1004_p$: nop
  jno .L1004_o$
  movb $0x5,8452
.L1004_o$: nop

    ret
         .size   setcc_with_code_8_flags_set1, .-setcc_with_code_8_flags_set1

    
.globl setcc_with_code_8_flags_set1_constant
         .type   setcc_with_code_8_flags_set1_constant, @function
setcc_with_code_8_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax
  mov $1,%ecx
  .byte 0x0f,0x98,0x01
  jnc .L1005_c$
  movb $0x1,8448
.L1005_c$: nop
  jnz .L1005_z$
  movb $0x2,8449
.L1005_z$: nop
  jns .L1005_s$
  movb $0x3,8450
.L1005_s$: nop
  jnp .L1005_p$
  movb $0x4,8451
.L1005_p$: nop
  jno .L1005_o$
  movb $0x5,8452
.L1005_o$: nop

    ret
         .size   setcc_with_code_8_flags_set1_constant, .-setcc_with_code_8_flags_set1_constant

    
.globl setcc_with_code_8_flags_set1_allregs
         .type   setcc_with_code_8_flags_set1_allregs, @function
setcc_with_code_8_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x98,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_8_flags_set1_allregs, .-setcc_with_code_8_flags_set1_allregs

    
.globl setcc_with_code_8_flags_set2
         .type   setcc_with_code_8_flags_set2, @function
setcc_with_code_8_flags_set2:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%ecx
  .byte 0x0f,0x98,0x01
  jnc .L1006_c$
  movb $0x1,8448
.L1006_c$: nop
  jnz .L1006_z$
  movb $0x2,8449
.L1006_z$: nop
  jns .L1006_s$
  movb $0x3,8450
.L1006_s$: nop
  jnp .L1006_p$
  movb $0x4,8451
.L1006_p$: nop
  jno .L1006_o$
  movb $0x5,8452
.L1006_o$: nop

    ret
         .size   setcc_with_code_8_flags_set2, .-setcc_with_code_8_flags_set2

    
.globl setcc_with_code_8_flags_set2_constant
         .type   setcc_with_code_8_flags_set2_constant, @function
setcc_with_code_8_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax
  mov $1,%ecx
  .byte 0x0f,0x98,0x01
  jnc .L1007_c$
  movb $0x1,8448
.L1007_c$: nop
  jnz .L1007_z$
  movb $0x2,8449
.L1007_z$: nop
  jns .L1007_s$
  movb $0x3,8450
.L1007_s$: nop
  jnp .L1007_p$
  movb $0x4,8451
.L1007_p$: nop
  jno .L1007_o$
  movb $0x5,8452
.L1007_o$: nop

    ret
         .size   setcc_with_code_8_flags_set2_constant, .-setcc_with_code_8_flags_set2_constant

    
.globl setcc_with_code_8_flags_set2_allregs
         .type   setcc_with_code_8_flags_set2_allregs, @function
setcc_with_code_8_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x98,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_8_flags_set2_allregs, .-setcc_with_code_8_flags_set2_allregs

    
.globl setcc_with_code_8_flags_cmp
         .type   setcc_with_code_8_flags_cmp, @function
setcc_with_code_8_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%ecx
  .byte 0x0f,0x98,0x01
  jnc .L1008_c$
  movb $0x1,8448
.L1008_c$: nop
  jnz .L1008_z$
  movb $0x2,8449
.L1008_z$: nop
  jns .L1008_s$
  movb $0x3,8450
.L1008_s$: nop
  jnp .L1008_p$
  movb $0x4,8451
.L1008_p$: nop
  jno .L1008_o$
  movb $0x5,8452
.L1008_o$: nop

    ret
         .size   setcc_with_code_8_flags_cmp, .-setcc_with_code_8_flags_cmp

    
.globl setcc_with_code_8_flags_cmp_constant
         .type   setcc_with_code_8_flags_cmp_constant, @function
setcc_with_code_8_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov $1,%ecx
  .byte 0x0f,0x98,0x01
  jnc .L1009_c$
  movb $0x1,8448
.L1009_c$: nop
  jnz .L1009_z$
  movb $0x2,8449
.L1009_z$: nop
  jns .L1009_s$
  movb $0x3,8450
.L1009_s$: nop
  jnp .L1009_p$
  movb $0x4,8451
.L1009_p$: nop
  jno .L1009_o$
  movb $0x5,8452
.L1009_o$: nop

    ret
         .size   setcc_with_code_8_flags_cmp_constant, .-setcc_with_code_8_flags_cmp_constant

    
.globl setcc_with_code_8_flags_cmp_allregs
         .type   setcc_with_code_8_flags_cmp_allregs, @function
setcc_with_code_8_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x98,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_8_flags_cmp_allregs, .-setcc_with_code_8_flags_cmp_allregs

    
.globl setcc_with_code_9_flags_clear
         .type   setcc_with_code_9_flags_clear, @function
setcc_with_code_9_flags_clear:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%ecx
  .byte 0x0f,0x99,0x01
  jnc .L1010_c$
  movb $0x1,8448
.L1010_c$: nop
  jnz .L1010_z$
  movb $0x2,8449
.L1010_z$: nop
  jns .L1010_s$
  movb $0x3,8450
.L1010_s$: nop
  jnp .L1010_p$
  movb $0x4,8451
.L1010_p$: nop
  jno .L1010_o$
  movb $0x5,8452
.L1010_o$: nop

    ret
         .size   setcc_with_code_9_flags_clear, .-setcc_with_code_9_flags_clear

    
.globl setcc_with_code_9_flags_clear_constant
         .type   setcc_with_code_9_flags_clear_constant, @function
setcc_with_code_9_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax
  mov $1,%ecx
  .byte 0x0f,0x99,0x01
  jnc .L1011_c$
  movb $0x1,8448
.L1011_c$: nop
  jnz .L1011_z$
  movb $0x2,8449
.L1011_z$: nop
  jns .L1011_s$
  movb $0x3,8450
.L1011_s$: nop
  jnp .L1011_p$
  movb $0x4,8451
.L1011_p$: nop
  jno .L1011_o$
  movb $0x5,8452
.L1011_o$: nop

    ret
         .size   setcc_with_code_9_flags_clear_constant, .-setcc_with_code_9_flags_clear_constant

    
.globl setcc_with_code_9_flags_clear_allregs
         .type   setcc_with_code_9_flags_clear_allregs, @function
setcc_with_code_9_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x99,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_9_flags_clear_allregs, .-setcc_with_code_9_flags_clear_allregs

    
.globl setcc_with_code_9_flags_set1
         .type   setcc_with_code_9_flags_set1, @function
setcc_with_code_9_flags_set1:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%ecx
  .byte 0x0f,0x99,0x01
  jnc .L1012_c$
  movb $0x1,8448
.L1012_c$: nop
  jnz .L1012_z$
  movb $0x2,8449
.L1012_z$: nop
  jns .L1012_s$
  movb $0x3,8450
.L1012_s$: nop
  jnp .L1012_p$
  movb $0x4,8451
.L1012_p$: nop
  jno .L1012_o$
  movb $0x5,8452
.L1012_o$: nop

    ret
         .size   setcc_with_code_9_flags_set1, .-setcc_with_code_9_flags_set1

    
.globl setcc_with_code_9_flags_set1_constant
         .type   setcc_with_code_9_flags_set1_constant, @function
setcc_with_code_9_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax
  mov $1,%ecx
  .byte 0x0f,0x99,0x01
  jnc .L1013_c$
  movb $0x1,8448
.L1013_c$: nop
  jnz .L1013_z$
  movb $0x2,8449
.L1013_z$: nop
  jns .L1013_s$
  movb $0x3,8450
.L1013_s$: nop
  jnp .L1013_p$
  movb $0x4,8451
.L1013_p$: nop
  jno .L1013_o$
  movb $0x5,8452
.L1013_o$: nop

    ret
         .size   setcc_with_code_9_flags_set1_constant, .-setcc_with_code_9_flags_set1_constant

    
.globl setcc_with_code_9_flags_set1_allregs
         .type   setcc_with_code_9_flags_set1_allregs, @function
setcc_with_code_9_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x99,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_9_flags_set1_allregs, .-setcc_with_code_9_flags_set1_allregs

    
.globl setcc_with_code_9_flags_set2
         .type   setcc_with_code_9_flags_set2, @function
setcc_with_code_9_flags_set2:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%ecx
  .byte 0x0f,0x99,0x01
  jnc .L1014_c$
  movb $0x1,8448
.L1014_c$: nop
  jnz .L1014_z$
  movb $0x2,8449
.L1014_z$: nop
  jns .L1014_s$
  movb $0x3,8450
.L1014_s$: nop
  jnp .L1014_p$
  movb $0x4,8451
.L1014_p$: nop
  jno .L1014_o$
  movb $0x5,8452
.L1014_o$: nop

    ret
         .size   setcc_with_code_9_flags_set2, .-setcc_with_code_9_flags_set2

    
.globl setcc_with_code_9_flags_set2_constant
         .type   setcc_with_code_9_flags_set2_constant, @function
setcc_with_code_9_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax
  mov $1,%ecx
  .byte 0x0f,0x99,0x01
  jnc .L1015_c$
  movb $0x1,8448
.L1015_c$: nop
  jnz .L1015_z$
  movb $0x2,8449
.L1015_z$: nop
  jns .L1015_s$
  movb $0x3,8450
.L1015_s$: nop
  jnp .L1015_p$
  movb $0x4,8451
.L1015_p$: nop
  jno .L1015_o$
  movb $0x5,8452
.L1015_o$: nop

    ret
         .size   setcc_with_code_9_flags_set2_constant, .-setcc_with_code_9_flags_set2_constant

    
.globl setcc_with_code_9_flags_set2_allregs
         .type   setcc_with_code_9_flags_set2_allregs, @function
setcc_with_code_9_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x99,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_9_flags_set2_allregs, .-setcc_with_code_9_flags_set2_allregs

    
.globl setcc_with_code_9_flags_cmp
         .type   setcc_with_code_9_flags_cmp, @function
setcc_with_code_9_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%ecx
  .byte 0x0f,0x99,0x01
  jnc .L1016_c$
  movb $0x1,8448
.L1016_c$: nop
  jnz .L1016_z$
  movb $0x2,8449
.L1016_z$: nop
  jns .L1016_s$
  movb $0x3,8450
.L1016_s$: nop
  jnp .L1016_p$
  movb $0x4,8451
.L1016_p$: nop
  jno .L1016_o$
  movb $0x5,8452
.L1016_o$: nop

    ret
         .size   setcc_with_code_9_flags_cmp, .-setcc_with_code_9_flags_cmp

    
.globl setcc_with_code_9_flags_cmp_constant
         .type   setcc_with_code_9_flags_cmp_constant, @function
setcc_with_code_9_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov $1,%ecx
  .byte 0x0f,0x99,0x01
  jnc .L1017_c$
  movb $0x1,8448
.L1017_c$: nop
  jnz .L1017_z$
  movb $0x2,8449
.L1017_z$: nop
  jns .L1017_s$
  movb $0x3,8450
.L1017_s$: nop
  jnp .L1017_p$
  movb $0x4,8451
.L1017_p$: nop
  jno .L1017_o$
  movb $0x5,8452
.L1017_o$: nop

    ret
         .size   setcc_with_code_9_flags_cmp_constant, .-setcc_with_code_9_flags_cmp_constant

    
.globl setcc_with_code_9_flags_cmp_allregs
         .type   setcc_with_code_9_flags_cmp_allregs, @function
setcc_with_code_9_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x99,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_9_flags_cmp_allregs, .-setcc_with_code_9_flags_cmp_allregs

    
.globl setcc_with_code_a_flags_clear
         .type   setcc_with_code_a_flags_clear, @function
setcc_with_code_a_flags_clear:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%ecx
  .byte 0x0f,0x9a,0x01
  jnc .L1018_c$
  movb $0x1,8448
.L1018_c$: nop
  jnz .L1018_z$
  movb $0x2,8449
.L1018_z$: nop
  jns .L1018_s$
  movb $0x3,8450
.L1018_s$: nop
  jnp .L1018_p$
  movb $0x4,8451
.L1018_p$: nop
  jno .L1018_o$
  movb $0x5,8452
.L1018_o$: nop

    ret
         .size   setcc_with_code_a_flags_clear, .-setcc_with_code_a_flags_clear

    
.globl setcc_with_code_a_flags_clear_constant
         .type   setcc_with_code_a_flags_clear_constant, @function
setcc_with_code_a_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax
  mov $1,%ecx
  .byte 0x0f,0x9a,0x01
  jnc .L1019_c$
  movb $0x1,8448
.L1019_c$: nop
  jnz .L1019_z$
  movb $0x2,8449
.L1019_z$: nop
  jns .L1019_s$
  movb $0x3,8450
.L1019_s$: nop
  jnp .L1019_p$
  movb $0x4,8451
.L1019_p$: nop
  jno .L1019_o$
  movb $0x5,8452
.L1019_o$: nop

    ret
         .size   setcc_with_code_a_flags_clear_constant, .-setcc_with_code_a_flags_clear_constant

    
.globl setcc_with_code_a_flags_clear_allregs
         .type   setcc_with_code_a_flags_clear_allregs, @function
setcc_with_code_a_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x9a,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_a_flags_clear_allregs, .-setcc_with_code_a_flags_clear_allregs

    
.globl setcc_with_code_a_flags_set1
         .type   setcc_with_code_a_flags_set1, @function
setcc_with_code_a_flags_set1:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%ecx
  .byte 0x0f,0x9a,0x01
  jnc .L1020_c$
  movb $0x1,8448
.L1020_c$: nop
  jnz .L1020_z$
  movb $0x2,8449
.L1020_z$: nop
  jns .L1020_s$
  movb $0x3,8450
.L1020_s$: nop
  jnp .L1020_p$
  movb $0x4,8451
.L1020_p$: nop
  jno .L1020_o$
  movb $0x5,8452
.L1020_o$: nop

    ret
         .size   setcc_with_code_a_flags_set1, .-setcc_with_code_a_flags_set1

    
.globl setcc_with_code_a_flags_set1_constant
         .type   setcc_with_code_a_flags_set1_constant, @function
setcc_with_code_a_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax
  mov $1,%ecx
  .byte 0x0f,0x9a,0x01
  jnc .L1021_c$
  movb $0x1,8448
.L1021_c$: nop
  jnz .L1021_z$
  movb $0x2,8449
.L1021_z$: nop
  jns .L1021_s$
  movb $0x3,8450
.L1021_s$: nop
  jnp .L1021_p$
  movb $0x4,8451
.L1021_p$: nop
  jno .L1021_o$
  movb $0x5,8452
.L1021_o$: nop

    ret
         .size   setcc_with_code_a_flags_set1_constant, .-setcc_with_code_a_flags_set1_constant

    
.globl setcc_with_code_a_flags_set1_allregs
         .type   setcc_with_code_a_flags_set1_allregs, @function
setcc_with_code_a_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x9a,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_a_flags_set1_allregs, .-setcc_with_code_a_flags_set1_allregs

    
.globl setcc_with_code_a_flags_set2
         .type   setcc_with_code_a_flags_set2, @function
setcc_with_code_a_flags_set2:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%ecx
  .byte 0x0f,0x9a,0x01
  jnc .L1022_c$
  movb $0x1,8448
.L1022_c$: nop
  jnz .L1022_z$
  movb $0x2,8449
.L1022_z$: nop
  jns .L1022_s$
  movb $0x3,8450
.L1022_s$: nop
  jnp .L1022_p$
  movb $0x4,8451
.L1022_p$: nop
  jno .L1022_o$
  movb $0x5,8452
.L1022_o$: nop

    ret
         .size   setcc_with_code_a_flags_set2, .-setcc_with_code_a_flags_set2

    
.globl setcc_with_code_a_flags_set2_constant
         .type   setcc_with_code_a_flags_set2_constant, @function
setcc_with_code_a_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax
  mov $1,%ecx
  .byte 0x0f,0x9a,0x01
  jnc .L1023_c$
  movb $0x1,8448
.L1023_c$: nop
  jnz .L1023_z$
  movb $0x2,8449
.L1023_z$: nop
  jns .L1023_s$
  movb $0x3,8450
.L1023_s$: nop
  jnp .L1023_p$
  movb $0x4,8451
.L1023_p$: nop
  jno .L1023_o$
  movb $0x5,8452
.L1023_o$: nop

    ret
         .size   setcc_with_code_a_flags_set2_constant, .-setcc_with_code_a_flags_set2_constant

    
.globl setcc_with_code_a_flags_set2_allregs
         .type   setcc_with_code_a_flags_set2_allregs, @function
setcc_with_code_a_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x9a,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_a_flags_set2_allregs, .-setcc_with_code_a_flags_set2_allregs

    
.globl setcc_with_code_a_flags_cmp
         .type   setcc_with_code_a_flags_cmp, @function
setcc_with_code_a_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%ecx
  .byte 0x0f,0x9a,0x01
  jnc .L1024_c$
  movb $0x1,8448
.L1024_c$: nop
  jnz .L1024_z$
  movb $0x2,8449
.L1024_z$: nop
  jns .L1024_s$
  movb $0x3,8450
.L1024_s$: nop
  jnp .L1024_p$
  movb $0x4,8451
.L1024_p$: nop
  jno .L1024_o$
  movb $0x5,8452
.L1024_o$: nop

    ret
         .size   setcc_with_code_a_flags_cmp, .-setcc_with_code_a_flags_cmp

    
.globl setcc_with_code_a_flags_cmp_constant
         .type   setcc_with_code_a_flags_cmp_constant, @function
setcc_with_code_a_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov $1,%ecx
  .byte 0x0f,0x9a,0x01
  jnc .L1025_c$
  movb $0x1,8448
.L1025_c$: nop
  jnz .L1025_z$
  movb $0x2,8449
.L1025_z$: nop
  jns .L1025_s$
  movb $0x3,8450
.L1025_s$: nop
  jnp .L1025_p$
  movb $0x4,8451
.L1025_p$: nop
  jno .L1025_o$
  movb $0x5,8452
.L1025_o$: nop

    ret
         .size   setcc_with_code_a_flags_cmp_constant, .-setcc_with_code_a_flags_cmp_constant

    
.globl setcc_with_code_a_flags_cmp_allregs
         .type   setcc_with_code_a_flags_cmp_allregs, @function
setcc_with_code_a_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x9a,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_a_flags_cmp_allregs, .-setcc_with_code_a_flags_cmp_allregs

    
.globl setcc_with_code_b_flags_clear
         .type   setcc_with_code_b_flags_clear, @function
setcc_with_code_b_flags_clear:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%ecx
  .byte 0x0f,0x9b,0x01
  jnc .L1026_c$
  movb $0x1,8448
.L1026_c$: nop
  jnz .L1026_z$
  movb $0x2,8449
.L1026_z$: nop
  jns .L1026_s$
  movb $0x3,8450
.L1026_s$: nop
  jnp .L1026_p$
  movb $0x4,8451
.L1026_p$: nop
  jno .L1026_o$
  movb $0x5,8452
.L1026_o$: nop

    ret
         .size   setcc_with_code_b_flags_clear, .-setcc_with_code_b_flags_clear

    
.globl setcc_with_code_b_flags_clear_constant
         .type   setcc_with_code_b_flags_clear_constant, @function
setcc_with_code_b_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax
  mov $1,%ecx
  .byte 0x0f,0x9b,0x01
  jnc .L1027_c$
  movb $0x1,8448
.L1027_c$: nop
  jnz .L1027_z$
  movb $0x2,8449
.L1027_z$: nop
  jns .L1027_s$
  movb $0x3,8450
.L1027_s$: nop
  jnp .L1027_p$
  movb $0x4,8451
.L1027_p$: nop
  jno .L1027_o$
  movb $0x5,8452
.L1027_o$: nop

    ret
         .size   setcc_with_code_b_flags_clear_constant, .-setcc_with_code_b_flags_clear_constant

    
.globl setcc_with_code_b_flags_clear_allregs
         .type   setcc_with_code_b_flags_clear_allregs, @function
setcc_with_code_b_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x9b,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_b_flags_clear_allregs, .-setcc_with_code_b_flags_clear_allregs

    
.globl setcc_with_code_b_flags_set1
         .type   setcc_with_code_b_flags_set1, @function
setcc_with_code_b_flags_set1:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%ecx
  .byte 0x0f,0x9b,0x01
  jnc .L1028_c$
  movb $0x1,8448
.L1028_c$: nop
  jnz .L1028_z$
  movb $0x2,8449
.L1028_z$: nop
  jns .L1028_s$
  movb $0x3,8450
.L1028_s$: nop
  jnp .L1028_p$
  movb $0x4,8451
.L1028_p$: nop
  jno .L1028_o$
  movb $0x5,8452
.L1028_o$: nop

    ret
         .size   setcc_with_code_b_flags_set1, .-setcc_with_code_b_flags_set1

    
.globl setcc_with_code_b_flags_set1_constant
         .type   setcc_with_code_b_flags_set1_constant, @function
setcc_with_code_b_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax
  mov $1,%ecx
  .byte 0x0f,0x9b,0x01
  jnc .L1029_c$
  movb $0x1,8448
.L1029_c$: nop
  jnz .L1029_z$
  movb $0x2,8449
.L1029_z$: nop
  jns .L1029_s$
  movb $0x3,8450
.L1029_s$: nop
  jnp .L1029_p$
  movb $0x4,8451
.L1029_p$: nop
  jno .L1029_o$
  movb $0x5,8452
.L1029_o$: nop

    ret
         .size   setcc_with_code_b_flags_set1_constant, .-setcc_with_code_b_flags_set1_constant

    
.globl setcc_with_code_b_flags_set1_allregs
         .type   setcc_with_code_b_flags_set1_allregs, @function
setcc_with_code_b_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x9b,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_b_flags_set1_allregs, .-setcc_with_code_b_flags_set1_allregs

    
.globl setcc_with_code_b_flags_set2
         .type   setcc_with_code_b_flags_set2, @function
setcc_with_code_b_flags_set2:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%ecx
  .byte 0x0f,0x9b,0x01
  jnc .L1030_c$
  movb $0x1,8448
.L1030_c$: nop
  jnz .L1030_z$
  movb $0x2,8449
.L1030_z$: nop
  jns .L1030_s$
  movb $0x3,8450
.L1030_s$: nop
  jnp .L1030_p$
  movb $0x4,8451
.L1030_p$: nop
  jno .L1030_o$
  movb $0x5,8452
.L1030_o$: nop

    ret
         .size   setcc_with_code_b_flags_set2, .-setcc_with_code_b_flags_set2

    
.globl setcc_with_code_b_flags_set2_constant
         .type   setcc_with_code_b_flags_set2_constant, @function
setcc_with_code_b_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax
  mov $1,%ecx
  .byte 0x0f,0x9b,0x01
  jnc .L1031_c$
  movb $0x1,8448
.L1031_c$: nop
  jnz .L1031_z$
  movb $0x2,8449
.L1031_z$: nop
  jns .L1031_s$
  movb $0x3,8450
.L1031_s$: nop
  jnp .L1031_p$
  movb $0x4,8451
.L1031_p$: nop
  jno .L1031_o$
  movb $0x5,8452
.L1031_o$: nop

    ret
         .size   setcc_with_code_b_flags_set2_constant, .-setcc_with_code_b_flags_set2_constant

    
.globl setcc_with_code_b_flags_set2_allregs
         .type   setcc_with_code_b_flags_set2_allregs, @function
setcc_with_code_b_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x9b,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_b_flags_set2_allregs, .-setcc_with_code_b_flags_set2_allregs

    
.globl setcc_with_code_b_flags_cmp
         .type   setcc_with_code_b_flags_cmp, @function
setcc_with_code_b_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%ecx
  .byte 0x0f,0x9b,0x01
  jnc .L1032_c$
  movb $0x1,8448
.L1032_c$: nop
  jnz .L1032_z$
  movb $0x2,8449
.L1032_z$: nop
  jns .L1032_s$
  movb $0x3,8450
.L1032_s$: nop
  jnp .L1032_p$
  movb $0x4,8451
.L1032_p$: nop
  jno .L1032_o$
  movb $0x5,8452
.L1032_o$: nop

    ret
         .size   setcc_with_code_b_flags_cmp, .-setcc_with_code_b_flags_cmp

    
.globl setcc_with_code_b_flags_cmp_constant
         .type   setcc_with_code_b_flags_cmp_constant, @function
setcc_with_code_b_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov $1,%ecx
  .byte 0x0f,0x9b,0x01
  jnc .L1033_c$
  movb $0x1,8448
.L1033_c$: nop
  jnz .L1033_z$
  movb $0x2,8449
.L1033_z$: nop
  jns .L1033_s$
  movb $0x3,8450
.L1033_s$: nop
  jnp .L1033_p$
  movb $0x4,8451
.L1033_p$: nop
  jno .L1033_o$
  movb $0x5,8452
.L1033_o$: nop

    ret
         .size   setcc_with_code_b_flags_cmp_constant, .-setcc_with_code_b_flags_cmp_constant

    
.globl setcc_with_code_b_flags_cmp_allregs
         .type   setcc_with_code_b_flags_cmp_allregs, @function
setcc_with_code_b_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x9b,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_b_flags_cmp_allregs, .-setcc_with_code_b_flags_cmp_allregs

    
.globl setcc_with_code_c_flags_clear
         .type   setcc_with_code_c_flags_clear, @function
setcc_with_code_c_flags_clear:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%ecx
  .byte 0x0f,0x9c,0x01
  jnc .L1034_c$
  movb $0x1,8448
.L1034_c$: nop
  jnz .L1034_z$
  movb $0x2,8449
.L1034_z$: nop
  jns .L1034_s$
  movb $0x3,8450
.L1034_s$: nop
  jnp .L1034_p$
  movb $0x4,8451
.L1034_p$: nop
  jno .L1034_o$
  movb $0x5,8452
.L1034_o$: nop

    ret
         .size   setcc_with_code_c_flags_clear, .-setcc_with_code_c_flags_clear

    
.globl setcc_with_code_c_flags_clear_constant
         .type   setcc_with_code_c_flags_clear_constant, @function
setcc_with_code_c_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax
  mov $1,%ecx
  .byte 0x0f,0x9c,0x01
  jnc .L1035_c$
  movb $0x1,8448
.L1035_c$: nop
  jnz .L1035_z$
  movb $0x2,8449
.L1035_z$: nop
  jns .L1035_s$
  movb $0x3,8450
.L1035_s$: nop
  jnp .L1035_p$
  movb $0x4,8451
.L1035_p$: nop
  jno .L1035_o$
  movb $0x5,8452
.L1035_o$: nop

    ret
         .size   setcc_with_code_c_flags_clear_constant, .-setcc_with_code_c_flags_clear_constant

    
.globl setcc_with_code_c_flags_clear_allregs
         .type   setcc_with_code_c_flags_clear_allregs, @function
setcc_with_code_c_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x9c,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_c_flags_clear_allregs, .-setcc_with_code_c_flags_clear_allregs

    
.globl setcc_with_code_c_flags_set1
         .type   setcc_with_code_c_flags_set1, @function
setcc_with_code_c_flags_set1:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%ecx
  .byte 0x0f,0x9c,0x01
  jnc .L1036_c$
  movb $0x1,8448
.L1036_c$: nop
  jnz .L1036_z$
  movb $0x2,8449
.L1036_z$: nop
  jns .L1036_s$
  movb $0x3,8450
.L1036_s$: nop
  jnp .L1036_p$
  movb $0x4,8451
.L1036_p$: nop
  jno .L1036_o$
  movb $0x5,8452
.L1036_o$: nop

    ret
         .size   setcc_with_code_c_flags_set1, .-setcc_with_code_c_flags_set1

    
.globl setcc_with_code_c_flags_set1_constant
         .type   setcc_with_code_c_flags_set1_constant, @function
setcc_with_code_c_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax
  mov $1,%ecx
  .byte 0x0f,0x9c,0x01
  jnc .L1037_c$
  movb $0x1,8448
.L1037_c$: nop
  jnz .L1037_z$
  movb $0x2,8449
.L1037_z$: nop
  jns .L1037_s$
  movb $0x3,8450
.L1037_s$: nop
  jnp .L1037_p$
  movb $0x4,8451
.L1037_p$: nop
  jno .L1037_o$
  movb $0x5,8452
.L1037_o$: nop

    ret
         .size   setcc_with_code_c_flags_set1_constant, .-setcc_with_code_c_flags_set1_constant

    
.globl setcc_with_code_c_flags_set1_allregs
         .type   setcc_with_code_c_flags_set1_allregs, @function
setcc_with_code_c_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x9c,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_c_flags_set1_allregs, .-setcc_with_code_c_flags_set1_allregs

    
.globl setcc_with_code_c_flags_set2
         .type   setcc_with_code_c_flags_set2, @function
setcc_with_code_c_flags_set2:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%ecx
  .byte 0x0f,0x9c,0x01
  jnc .L1038_c$
  movb $0x1,8448
.L1038_c$: nop
  jnz .L1038_z$
  movb $0x2,8449
.L1038_z$: nop
  jns .L1038_s$
  movb $0x3,8450
.L1038_s$: nop
  jnp .L1038_p$
  movb $0x4,8451
.L1038_p$: nop
  jno .L1038_o$
  movb $0x5,8452
.L1038_o$: nop

    ret
         .size   setcc_with_code_c_flags_set2, .-setcc_with_code_c_flags_set2

    
.globl setcc_with_code_c_flags_set2_constant
         .type   setcc_with_code_c_flags_set2_constant, @function
setcc_with_code_c_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax
  mov $1,%ecx
  .byte 0x0f,0x9c,0x01
  jnc .L1039_c$
  movb $0x1,8448
.L1039_c$: nop
  jnz .L1039_z$
  movb $0x2,8449
.L1039_z$: nop
  jns .L1039_s$
  movb $0x3,8450
.L1039_s$: nop
  jnp .L1039_p$
  movb $0x4,8451
.L1039_p$: nop
  jno .L1039_o$
  movb $0x5,8452
.L1039_o$: nop

    ret
         .size   setcc_with_code_c_flags_set2_constant, .-setcc_with_code_c_flags_set2_constant

    
.globl setcc_with_code_c_flags_set2_allregs
         .type   setcc_with_code_c_flags_set2_allregs, @function
setcc_with_code_c_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x9c,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_c_flags_set2_allregs, .-setcc_with_code_c_flags_set2_allregs

    
.globl setcc_with_code_c_flags_cmp
         .type   setcc_with_code_c_flags_cmp, @function
setcc_with_code_c_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%ecx
  .byte 0x0f,0x9c,0x01
  jnc .L1040_c$
  movb $0x1,8448
.L1040_c$: nop
  jnz .L1040_z$
  movb $0x2,8449
.L1040_z$: nop
  jns .L1040_s$
  movb $0x3,8450
.L1040_s$: nop
  jnp .L1040_p$
  movb $0x4,8451
.L1040_p$: nop
  jno .L1040_o$
  movb $0x5,8452
.L1040_o$: nop

    ret
         .size   setcc_with_code_c_flags_cmp, .-setcc_with_code_c_flags_cmp

    
.globl setcc_with_code_c_flags_cmp_constant
         .type   setcc_with_code_c_flags_cmp_constant, @function
setcc_with_code_c_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov $1,%ecx
  .byte 0x0f,0x9c,0x01
  jnc .L1041_c$
  movb $0x1,8448
.L1041_c$: nop
  jnz .L1041_z$
  movb $0x2,8449
.L1041_z$: nop
  jns .L1041_s$
  movb $0x3,8450
.L1041_s$: nop
  jnp .L1041_p$
  movb $0x4,8451
.L1041_p$: nop
  jno .L1041_o$
  movb $0x5,8452
.L1041_o$: nop

    ret
         .size   setcc_with_code_c_flags_cmp_constant, .-setcc_with_code_c_flags_cmp_constant

    
.globl setcc_with_code_c_flags_cmp_allregs
         .type   setcc_with_code_c_flags_cmp_allregs, @function
setcc_with_code_c_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x9c,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_c_flags_cmp_allregs, .-setcc_with_code_c_flags_cmp_allregs

    
.globl setcc_with_code_d_flags_clear
         .type   setcc_with_code_d_flags_clear, @function
setcc_with_code_d_flags_clear:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%ecx
  .byte 0x0f,0x9d,0x01
  jnc .L1042_c$
  movb $0x1,8448
.L1042_c$: nop
  jnz .L1042_z$
  movb $0x2,8449
.L1042_z$: nop
  jns .L1042_s$
  movb $0x3,8450
.L1042_s$: nop
  jnp .L1042_p$
  movb $0x4,8451
.L1042_p$: nop
  jno .L1042_o$
  movb $0x5,8452
.L1042_o$: nop

    ret
         .size   setcc_with_code_d_flags_clear, .-setcc_with_code_d_flags_clear

    
.globl setcc_with_code_d_flags_clear_constant
         .type   setcc_with_code_d_flags_clear_constant, @function
setcc_with_code_d_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax
  mov $1,%ecx
  .byte 0x0f,0x9d,0x01
  jnc .L1043_c$
  movb $0x1,8448
.L1043_c$: nop
  jnz .L1043_z$
  movb $0x2,8449
.L1043_z$: nop
  jns .L1043_s$
  movb $0x3,8450
.L1043_s$: nop
  jnp .L1043_p$
  movb $0x4,8451
.L1043_p$: nop
  jno .L1043_o$
  movb $0x5,8452
.L1043_o$: nop

    ret
         .size   setcc_with_code_d_flags_clear_constant, .-setcc_with_code_d_flags_clear_constant

    
.globl setcc_with_code_d_flags_clear_allregs
         .type   setcc_with_code_d_flags_clear_allregs, @function
setcc_with_code_d_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x9d,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_d_flags_clear_allregs, .-setcc_with_code_d_flags_clear_allregs

    
.globl setcc_with_code_d_flags_set1
         .type   setcc_with_code_d_flags_set1, @function
setcc_with_code_d_flags_set1:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%ecx
  .byte 0x0f,0x9d,0x01
  jnc .L1044_c$
  movb $0x1,8448
.L1044_c$: nop
  jnz .L1044_z$
  movb $0x2,8449
.L1044_z$: nop
  jns .L1044_s$
  movb $0x3,8450
.L1044_s$: nop
  jnp .L1044_p$
  movb $0x4,8451
.L1044_p$: nop
  jno .L1044_o$
  movb $0x5,8452
.L1044_o$: nop

    ret
         .size   setcc_with_code_d_flags_set1, .-setcc_with_code_d_flags_set1

    
.globl setcc_with_code_d_flags_set1_constant
         .type   setcc_with_code_d_flags_set1_constant, @function
setcc_with_code_d_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax
  mov $1,%ecx
  .byte 0x0f,0x9d,0x01
  jnc .L1045_c$
  movb $0x1,8448
.L1045_c$: nop
  jnz .L1045_z$
  movb $0x2,8449
.L1045_z$: nop
  jns .L1045_s$
  movb $0x3,8450
.L1045_s$: nop
  jnp .L1045_p$
  movb $0x4,8451
.L1045_p$: nop
  jno .L1045_o$
  movb $0x5,8452
.L1045_o$: nop

    ret
         .size   setcc_with_code_d_flags_set1_constant, .-setcc_with_code_d_flags_set1_constant

    
.globl setcc_with_code_d_flags_set1_allregs
         .type   setcc_with_code_d_flags_set1_allregs, @function
setcc_with_code_d_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x9d,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_d_flags_set1_allregs, .-setcc_with_code_d_flags_set1_allregs

    
.globl setcc_with_code_d_flags_set2
         .type   setcc_with_code_d_flags_set2, @function
setcc_with_code_d_flags_set2:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%ecx
  .byte 0x0f,0x9d,0x01
  jnc .L1046_c$
  movb $0x1,8448
.L1046_c$: nop
  jnz .L1046_z$
  movb $0x2,8449
.L1046_z$: nop
  jns .L1046_s$
  movb $0x3,8450
.L1046_s$: nop
  jnp .L1046_p$
  movb $0x4,8451
.L1046_p$: nop
  jno .L1046_o$
  movb $0x5,8452
.L1046_o$: nop

    ret
         .size   setcc_with_code_d_flags_set2, .-setcc_with_code_d_flags_set2

    
.globl setcc_with_code_d_flags_set2_constant
         .type   setcc_with_code_d_flags_set2_constant, @function
setcc_with_code_d_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax
  mov $1,%ecx
  .byte 0x0f,0x9d,0x01
  jnc .L1047_c$
  movb $0x1,8448
.L1047_c$: nop
  jnz .L1047_z$
  movb $0x2,8449
.L1047_z$: nop
  jns .L1047_s$
  movb $0x3,8450
.L1047_s$: nop
  jnp .L1047_p$
  movb $0x4,8451
.L1047_p$: nop
  jno .L1047_o$
  movb $0x5,8452
.L1047_o$: nop

    ret
         .size   setcc_with_code_d_flags_set2_constant, .-setcc_with_code_d_flags_set2_constant

    
.globl setcc_with_code_d_flags_set2_allregs
         .type   setcc_with_code_d_flags_set2_allregs, @function
setcc_with_code_d_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x9d,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_d_flags_set2_allregs, .-setcc_with_code_d_flags_set2_allregs

    
.globl setcc_with_code_d_flags_cmp
         .type   setcc_with_code_d_flags_cmp, @function
setcc_with_code_d_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%ecx
  .byte 0x0f,0x9d,0x01
  jnc .L1048_c$
  movb $0x1,8448
.L1048_c$: nop
  jnz .L1048_z$
  movb $0x2,8449
.L1048_z$: nop
  jns .L1048_s$
  movb $0x3,8450
.L1048_s$: nop
  jnp .L1048_p$
  movb $0x4,8451
.L1048_p$: nop
  jno .L1048_o$
  movb $0x5,8452
.L1048_o$: nop

    ret
         .size   setcc_with_code_d_flags_cmp, .-setcc_with_code_d_flags_cmp

    
.globl setcc_with_code_d_flags_cmp_constant
         .type   setcc_with_code_d_flags_cmp_constant, @function
setcc_with_code_d_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov $1,%ecx
  .byte 0x0f,0x9d,0x01
  jnc .L1049_c$
  movb $0x1,8448
.L1049_c$: nop
  jnz .L1049_z$
  movb $0x2,8449
.L1049_z$: nop
  jns .L1049_s$
  movb $0x3,8450
.L1049_s$: nop
  jnp .L1049_p$
  movb $0x4,8451
.L1049_p$: nop
  jno .L1049_o$
  movb $0x5,8452
.L1049_o$: nop

    ret
         .size   setcc_with_code_d_flags_cmp_constant, .-setcc_with_code_d_flags_cmp_constant

    
.globl setcc_with_code_d_flags_cmp_allregs
         .type   setcc_with_code_d_flags_cmp_allregs, @function
setcc_with_code_d_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x9d,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_d_flags_cmp_allregs, .-setcc_with_code_d_flags_cmp_allregs

    
.globl setcc_with_code_e_flags_clear
         .type   setcc_with_code_e_flags_clear, @function
setcc_with_code_e_flags_clear:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%ecx
  .byte 0x0f,0x9e,0x01
  jnc .L1050_c$
  movb $0x1,8448
.L1050_c$: nop
  jnz .L1050_z$
  movb $0x2,8449
.L1050_z$: nop
  jns .L1050_s$
  movb $0x3,8450
.L1050_s$: nop
  jnp .L1050_p$
  movb $0x4,8451
.L1050_p$: nop
  jno .L1050_o$
  movb $0x5,8452
.L1050_o$: nop

    ret
         .size   setcc_with_code_e_flags_clear, .-setcc_with_code_e_flags_clear

    
.globl setcc_with_code_e_flags_clear_constant
         .type   setcc_with_code_e_flags_clear_constant, @function
setcc_with_code_e_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax
  mov $1,%ecx
  .byte 0x0f,0x9e,0x01
  jnc .L1051_c$
  movb $0x1,8448
.L1051_c$: nop
  jnz .L1051_z$
  movb $0x2,8449
.L1051_z$: nop
  jns .L1051_s$
  movb $0x3,8450
.L1051_s$: nop
  jnp .L1051_p$
  movb $0x4,8451
.L1051_p$: nop
  jno .L1051_o$
  movb $0x5,8452
.L1051_o$: nop

    ret
         .size   setcc_with_code_e_flags_clear_constant, .-setcc_with_code_e_flags_clear_constant

    
.globl setcc_with_code_e_flags_clear_allregs
         .type   setcc_with_code_e_flags_clear_allregs, @function
setcc_with_code_e_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x9e,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_e_flags_clear_allregs, .-setcc_with_code_e_flags_clear_allregs

    
.globl setcc_with_code_e_flags_set1
         .type   setcc_with_code_e_flags_set1, @function
setcc_with_code_e_flags_set1:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%ecx
  .byte 0x0f,0x9e,0x01
  jnc .L1052_c$
  movb $0x1,8448
.L1052_c$: nop
  jnz .L1052_z$
  movb $0x2,8449
.L1052_z$: nop
  jns .L1052_s$
  movb $0x3,8450
.L1052_s$: nop
  jnp .L1052_p$
  movb $0x4,8451
.L1052_p$: nop
  jno .L1052_o$
  movb $0x5,8452
.L1052_o$: nop

    ret
         .size   setcc_with_code_e_flags_set1, .-setcc_with_code_e_flags_set1

    
.globl setcc_with_code_e_flags_set1_constant
         .type   setcc_with_code_e_flags_set1_constant, @function
setcc_with_code_e_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax
  mov $1,%ecx
  .byte 0x0f,0x9e,0x01
  jnc .L1053_c$
  movb $0x1,8448
.L1053_c$: nop
  jnz .L1053_z$
  movb $0x2,8449
.L1053_z$: nop
  jns .L1053_s$
  movb $0x3,8450
.L1053_s$: nop
  jnp .L1053_p$
  movb $0x4,8451
.L1053_p$: nop
  jno .L1053_o$
  movb $0x5,8452
.L1053_o$: nop

    ret
         .size   setcc_with_code_e_flags_set1_constant, .-setcc_with_code_e_flags_set1_constant

    
.globl setcc_with_code_e_flags_set1_allregs
         .type   setcc_with_code_e_flags_set1_allregs, @function
setcc_with_code_e_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x9e,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_e_flags_set1_allregs, .-setcc_with_code_e_flags_set1_allregs

    
.globl setcc_with_code_e_flags_set2
         .type   setcc_with_code_e_flags_set2, @function
setcc_with_code_e_flags_set2:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%ecx
  .byte 0x0f,0x9e,0x01
  jnc .L1054_c$
  movb $0x1,8448
.L1054_c$: nop
  jnz .L1054_z$
  movb $0x2,8449
.L1054_z$: nop
  jns .L1054_s$
  movb $0x3,8450
.L1054_s$: nop
  jnp .L1054_p$
  movb $0x4,8451
.L1054_p$: nop
  jno .L1054_o$
  movb $0x5,8452
.L1054_o$: nop

    ret
         .size   setcc_with_code_e_flags_set2, .-setcc_with_code_e_flags_set2

    
.globl setcc_with_code_e_flags_set2_constant
         .type   setcc_with_code_e_flags_set2_constant, @function
setcc_with_code_e_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax
  mov $1,%ecx
  .byte 0x0f,0x9e,0x01
  jnc .L1055_c$
  movb $0x1,8448
.L1055_c$: nop
  jnz .L1055_z$
  movb $0x2,8449
.L1055_z$: nop
  jns .L1055_s$
  movb $0x3,8450
.L1055_s$: nop
  jnp .L1055_p$
  movb $0x4,8451
.L1055_p$: nop
  jno .L1055_o$
  movb $0x5,8452
.L1055_o$: nop

    ret
         .size   setcc_with_code_e_flags_set2_constant, .-setcc_with_code_e_flags_set2_constant

    
.globl setcc_with_code_e_flags_set2_allregs
         .type   setcc_with_code_e_flags_set2_allregs, @function
setcc_with_code_e_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x9e,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_e_flags_set2_allregs, .-setcc_with_code_e_flags_set2_allregs

    
.globl setcc_with_code_e_flags_cmp
         .type   setcc_with_code_e_flags_cmp, @function
setcc_with_code_e_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%ecx
  .byte 0x0f,0x9e,0x01
  jnc .L1056_c$
  movb $0x1,8448
.L1056_c$: nop
  jnz .L1056_z$
  movb $0x2,8449
.L1056_z$: nop
  jns .L1056_s$
  movb $0x3,8450
.L1056_s$: nop
  jnp .L1056_p$
  movb $0x4,8451
.L1056_p$: nop
  jno .L1056_o$
  movb $0x5,8452
.L1056_o$: nop

    ret
         .size   setcc_with_code_e_flags_cmp, .-setcc_with_code_e_flags_cmp

    
.globl setcc_with_code_e_flags_cmp_constant
         .type   setcc_with_code_e_flags_cmp_constant, @function
setcc_with_code_e_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov $1,%ecx
  .byte 0x0f,0x9e,0x01
  jnc .L1057_c$
  movb $0x1,8448
.L1057_c$: nop
  jnz .L1057_z$
  movb $0x2,8449
.L1057_z$: nop
  jns .L1057_s$
  movb $0x3,8450
.L1057_s$: nop
  jnp .L1057_p$
  movb $0x4,8451
.L1057_p$: nop
  jno .L1057_o$
  movb $0x5,8452
.L1057_o$: nop

    ret
         .size   setcc_with_code_e_flags_cmp_constant, .-setcc_with_code_e_flags_cmp_constant

    
.globl setcc_with_code_e_flags_cmp_allregs
         .type   setcc_with_code_e_flags_cmp_allregs, @function
setcc_with_code_e_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x9e,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_e_flags_cmp_allregs, .-setcc_with_code_e_flags_cmp_allregs

    
.globl setcc_with_code_f_flags_clear
         .type   setcc_with_code_f_flags_clear, @function
setcc_with_code_f_flags_clear:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%ecx
  .byte 0x0f,0x9f,0x01
  jnc .L1058_c$
  movb $0x1,8448
.L1058_c$: nop
  jnz .L1058_z$
  movb $0x2,8449
.L1058_z$: nop
  jns .L1058_s$
  movb $0x3,8450
.L1058_s$: nop
  jnp .L1058_p$
  movb $0x4,8451
.L1058_p$: nop
  jno .L1058_o$
  movb $0x5,8452
.L1058_o$: nop

    ret
         .size   setcc_with_code_f_flags_clear, .-setcc_with_code_f_flags_clear

    
.globl setcc_with_code_f_flags_clear_constant
         .type   setcc_with_code_f_flags_clear_constant, @function
setcc_with_code_f_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax
  mov $1,%ecx
  .byte 0x0f,0x9f,0x01
  jnc .L1059_c$
  movb $0x1,8448
.L1059_c$: nop
  jnz .L1059_z$
  movb $0x2,8449
.L1059_z$: nop
  jns .L1059_s$
  movb $0x3,8450
.L1059_s$: nop
  jnp .L1059_p$
  movb $0x4,8451
.L1059_p$: nop
  jno .L1059_o$
  movb $0x5,8452
.L1059_o$: nop

    ret
         .size   setcc_with_code_f_flags_clear_constant, .-setcc_with_code_f_flags_clear_constant

    
.globl setcc_with_code_f_flags_clear_allregs
         .type   setcc_with_code_f_flags_clear_allregs, @function
setcc_with_code_f_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x9f,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_f_flags_clear_allregs, .-setcc_with_code_f_flags_clear_allregs

    
.globl setcc_with_code_f_flags_set1
         .type   setcc_with_code_f_flags_set1, @function
setcc_with_code_f_flags_set1:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%ecx
  .byte 0x0f,0x9f,0x01
  jnc .L1060_c$
  movb $0x1,8448
.L1060_c$: nop
  jnz .L1060_z$
  movb $0x2,8449
.L1060_z$: nop
  jns .L1060_s$
  movb $0x3,8450
.L1060_s$: nop
  jnp .L1060_p$
  movb $0x4,8451
.L1060_p$: nop
  jno .L1060_o$
  movb $0x5,8452
.L1060_o$: nop

    ret
         .size   setcc_with_code_f_flags_set1, .-setcc_with_code_f_flags_set1

    
.globl setcc_with_code_f_flags_set1_constant
         .type   setcc_with_code_f_flags_set1_constant, @function
setcc_with_code_f_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax
  mov $1,%ecx
  .byte 0x0f,0x9f,0x01
  jnc .L1061_c$
  movb $0x1,8448
.L1061_c$: nop
  jnz .L1061_z$
  movb $0x2,8449
.L1061_z$: nop
  jns .L1061_s$
  movb $0x3,8450
.L1061_s$: nop
  jnp .L1061_p$
  movb $0x4,8451
.L1061_p$: nop
  jno .L1061_o$
  movb $0x5,8452
.L1061_o$: nop

    ret
         .size   setcc_with_code_f_flags_set1_constant, .-setcc_with_code_f_flags_set1_constant

    
.globl setcc_with_code_f_flags_set1_allregs
         .type   setcc_with_code_f_flags_set1_allregs, @function
setcc_with_code_f_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x9f,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_f_flags_set1_allregs, .-setcc_with_code_f_flags_set1_allregs

    
.globl setcc_with_code_f_flags_set2
         .type   setcc_with_code_f_flags_set2, @function
setcc_with_code_f_flags_set2:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%ecx
  .byte 0x0f,0x9f,0x01
  jnc .L1062_c$
  movb $0x1,8448
.L1062_c$: nop
  jnz .L1062_z$
  movb $0x2,8449
.L1062_z$: nop
  jns .L1062_s$
  movb $0x3,8450
.L1062_s$: nop
  jnp .L1062_p$
  movb $0x4,8451
.L1062_p$: nop
  jno .L1062_o$
  movb $0x5,8452
.L1062_o$: nop

    ret
         .size   setcc_with_code_f_flags_set2, .-setcc_with_code_f_flags_set2

    
.globl setcc_with_code_f_flags_set2_constant
         .type   setcc_with_code_f_flags_set2_constant, @function
setcc_with_code_f_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax
  mov $1,%ecx
  .byte 0x0f,0x9f,0x01
  jnc .L1063_c$
  movb $0x1,8448
.L1063_c$: nop
  jnz .L1063_z$
  movb $0x2,8449
.L1063_z$: nop
  jns .L1063_s$
  movb $0x3,8450
.L1063_s$: nop
  jnp .L1063_p$
  movb $0x4,8451
.L1063_p$: nop
  jno .L1063_o$
  movb $0x5,8452
.L1063_o$: nop

    ret
         .size   setcc_with_code_f_flags_set2_constant, .-setcc_with_code_f_flags_set2_constant

    
.globl setcc_with_code_f_flags_set2_allregs
         .type   setcc_with_code_f_flags_set2_allregs, @function
setcc_with_code_f_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x9f,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_f_flags_set2_allregs, .-setcc_with_code_f_flags_set2_allregs

    
.globl setcc_with_code_f_flags_cmp
         .type   setcc_with_code_f_flags_cmp, @function
setcc_with_code_f_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%ecx
  .byte 0x0f,0x9f,0x01
  jnc .L1064_c$
  movb $0x1,8448
.L1064_c$: nop
  jnz .L1064_z$
  movb $0x2,8449
.L1064_z$: nop
  jns .L1064_s$
  movb $0x3,8450
.L1064_s$: nop
  jnp .L1064_p$
  movb $0x4,8451
.L1064_p$: nop
  jno .L1064_o$
  movb $0x5,8452
.L1064_o$: nop

    ret
         .size   setcc_with_code_f_flags_cmp, .-setcc_with_code_f_flags_cmp

    
.globl setcc_with_code_f_flags_cmp_constant
         .type   setcc_with_code_f_flags_cmp_constant, @function
setcc_with_code_f_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov $1,%ecx
  .byte 0x0f,0x9f,0x01
  jnc .L1065_c$
  movb $0x1,8448
.L1065_c$: nop
  jnz .L1065_z$
  movb $0x2,8449
.L1065_z$: nop
  jns .L1065_s$
  movb $0x3,8450
.L1065_s$: nop
  jnp .L1065_p$
  movb $0x4,8451
.L1065_p$: nop
  jno .L1065_o$
  movb $0x5,8452
.L1065_o$: nop

    ret
         .size   setcc_with_code_f_flags_cmp_constant, .-setcc_with_code_f_flags_cmp_constant

    
.globl setcc_with_code_f_flags_cmp_allregs
         .type   setcc_with_code_f_flags_cmp_allregs, @function
setcc_with_code_f_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x0f,0x9f,0x01
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   setcc_with_code_f_flags_cmp_allregs, .-setcc_with_code_f_flags_cmp_allregs

    
.globl sgdt
         .type   sgdt, @function
sgdt:
      


  sgdt (%eax)


    ret
         .size   sgdt, .-sgdt

    
.globl sgdt_constant
         .type   sgdt_constant, @function
sgdt_constant:
      


  sgdt (%eax)


    ret
         .size   sgdt_constant, .-sgdt_constant

    
.globl sgdt_allregs
         .type   sgdt_allregs, @function
sgdt_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  sgdt (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   sgdt_allregs, .-sgdt_allregs

    
.globl sidt
         .type   sidt, @function
sidt:
      


  sidt (%eax)


    ret
         .size   sidt, .-sidt

    
.globl sidt_constant
         .type   sidt_constant, @function
sidt_constant:
      


  sidt (%eax)


    ret
         .size   sidt_constant, .-sidt_constant

    
.globl sidt_allregs
         .type   sidt_allregs, @function
sidt_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  sidt (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   sidt_allregs, .-sidt_allregs

    
.globl shld1
         .type   shld1, @function
shld1:
      

  mov 4096,%ax
  mov 4100,%bx
  shld $4,%ax,%bx
  mov %ax,8192
  mov %bx,8196
  jnc .L1066_c$
  movb $0x1,8448
.L1066_c$: nop
  jnz .L1066_z$
  movb $0x2,8449
.L1066_z$: nop
  jns .L1066_s$
  movb $0x3,8450
.L1066_s$: nop
  jnp .L1066_p$
  movb $0x4,8451
.L1066_p$: nop
  jno .L1066_o$
  movb $0x5,8452
.L1066_o$: nop

    ret
         .size   shld1, .-shld1

    
.globl shld1_constant
         .type   shld1_constant, @function
shld1_constant:
      

  mov $1,%ax
  mov $2,%bx
  shld $4,%ax,%bx
  mov %ax,8192
  mov %bx,8196
  jnc .L1067_c$
  movb $0x1,8448
.L1067_c$: nop
  jnz .L1067_z$
  movb $0x2,8449
.L1067_z$: nop
  jns .L1067_s$
  movb $0x3,8450
.L1067_s$: nop
  jnp .L1067_p$
  movb $0x4,8451
.L1067_p$: nop
  jno .L1067_o$
  movb $0x5,8452
.L1067_o$: nop

    ret
         .size   shld1_constant, .-shld1_constant

    
.globl shld1_allregs
         .type   shld1_allregs, @function
shld1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  shld $4,%ax,%bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   shld1_allregs, .-shld1_allregs

    
.globl shld2
         .type   shld2, @function
shld2:
      

  mov 4096,%eax
  mov 4100,%ebx
  shld $4,%eax,%ebx
  mov %eax,8192
  mov %ebx,8196
  jnc .L1068_c$
  movb $0x1,8448
.L1068_c$: nop
  jnz .L1068_z$
  movb $0x2,8449
.L1068_z$: nop
  jns .L1068_s$
  movb $0x3,8450
.L1068_s$: nop
  jnp .L1068_p$
  movb $0x4,8451
.L1068_p$: nop
  jno .L1068_o$
  movb $0x5,8452
.L1068_o$: nop

    ret
         .size   shld2, .-shld2

    
.globl shld2_constant
         .type   shld2_constant, @function
shld2_constant:
      

  mov $1,%eax
  mov $2,%ebx
  shld $4,%eax,%ebx
  mov %eax,8192
  mov %ebx,8196
  jnc .L1069_c$
  movb $0x1,8448
.L1069_c$: nop
  jnz .L1069_z$
  movb $0x2,8449
.L1069_z$: nop
  jns .L1069_s$
  movb $0x3,8450
.L1069_s$: nop
  jnp .L1069_p$
  movb $0x4,8451
.L1069_p$: nop
  jno .L1069_o$
  movb $0x5,8452
.L1069_o$: nop

    ret
         .size   shld2_constant, .-shld2_constant

    
.globl shld2_allregs
         .type   shld2_allregs, @function
shld2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  shld $4,%eax,%ebx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   shld2_allregs, .-shld2_allregs

    
.globl shld3
         .type   shld3, @function
shld3:
      

  mov 4096,%ax
  mov 4100,%bx
  mov 4104,%cl
  shld %cl,%ax,%bx
  mov %ax,8192
  mov %bx,8196
  jnc .L1070_c$
  movb $0x1,8448
.L1070_c$: nop
  jnz .L1070_z$
  movb $0x2,8449
.L1070_z$: nop
  jns .L1070_s$
  movb $0x3,8450
.L1070_s$: nop
  jnp .L1070_p$
  movb $0x4,8451
.L1070_p$: nop
  jno .L1070_o$
  movb $0x5,8452
.L1070_o$: nop

    ret
         .size   shld3, .-shld3

    
.globl shld3_constant
         .type   shld3_constant, @function
shld3_constant:
      

  mov $1,%ax
  mov $2,%bx
  mov $3,%cl
  shld %cl,%ax,%bx
  mov %ax,8192
  mov %bx,8196
  jnc .L1071_c$
  movb $0x1,8448
.L1071_c$: nop
  jnz .L1071_z$
  movb $0x2,8449
.L1071_z$: nop
  jns .L1071_s$
  movb $0x3,8450
.L1071_s$: nop
  jnp .L1071_p$
  movb $0x4,8451
.L1071_p$: nop
  jno .L1071_o$
  movb $0x5,8452
.L1071_o$: nop

    ret
         .size   shld3_constant, .-shld3_constant

    
.globl shld3_allregs
         .type   shld3_allregs, @function
shld3_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  shld %cl,%ax,%bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   shld3_allregs, .-shld3_allregs

    
.globl shld4
         .type   shld4, @function
shld4:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%cl
  shld %cl,%eax,%ebx
  mov %eax,8192
  mov %ebx,8196
  jnc .L1072_c$
  movb $0x1,8448
.L1072_c$: nop
  jnz .L1072_z$
  movb $0x2,8449
.L1072_z$: nop
  jns .L1072_s$
  movb $0x3,8450
.L1072_s$: nop
  jnp .L1072_p$
  movb $0x4,8451
.L1072_p$: nop
  jno .L1072_o$
  movb $0x5,8452
.L1072_o$: nop

    ret
         .size   shld4, .-shld4

    
.globl shld4_constant
         .type   shld4_constant, @function
shld4_constant:
      

  mov $1,%eax
  mov $2,%ebx
  mov $3,%cl
  shld %cl,%eax,%ebx
  mov %eax,8192
  mov %ebx,8196
  jnc .L1073_c$
  movb $0x1,8448
.L1073_c$: nop
  jnz .L1073_z$
  movb $0x2,8449
.L1073_z$: nop
  jns .L1073_s$
  movb $0x3,8450
.L1073_s$: nop
  jnp .L1073_p$
  movb $0x4,8451
.L1073_p$: nop
  jno .L1073_o$
  movb $0x5,8452
.L1073_o$: nop

    ret
         .size   shld4_constant, .-shld4_constant

    
.globl shld4_allregs
         .type   shld4_allregs, @function
shld4_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  shld %cl,%eax,%ebx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   shld4_allregs, .-shld4_allregs

    
.globl shrd1
         .type   shrd1, @function
shrd1:
      

  mov 4096,%ax
  mov 4100,%bx
  shrd $4,%ax,%bx
  mov %ax,8192
  mov %bx,8196
  jnc .L1074_c$
  movb $0x1,8448
.L1074_c$: nop
  jnz .L1074_z$
  movb $0x2,8449
.L1074_z$: nop
  jns .L1074_s$
  movb $0x3,8450
.L1074_s$: nop
  jnp .L1074_p$
  movb $0x4,8451
.L1074_p$: nop
  jno .L1074_o$
  movb $0x5,8452
.L1074_o$: nop

    ret
         .size   shrd1, .-shrd1

    
.globl shrd1_constant
         .type   shrd1_constant, @function
shrd1_constant:
      

  mov $1,%ax
  mov $2,%bx
  shrd $4,%ax,%bx
  mov %ax,8192
  mov %bx,8196
  jnc .L1075_c$
  movb $0x1,8448
.L1075_c$: nop
  jnz .L1075_z$
  movb $0x2,8449
.L1075_z$: nop
  jns .L1075_s$
  movb $0x3,8450
.L1075_s$: nop
  jnp .L1075_p$
  movb $0x4,8451
.L1075_p$: nop
  jno .L1075_o$
  movb $0x5,8452
.L1075_o$: nop

    ret
         .size   shrd1_constant, .-shrd1_constant

    
.globl shrd1_allregs
         .type   shrd1_allregs, @function
shrd1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  shrd $4,%ax,%bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   shrd1_allregs, .-shrd1_allregs

    
.globl shrd2
         .type   shrd2, @function
shrd2:
      

  mov 4096,%eax
  mov 4100,%ebx
  shrd $4,%eax,%ebx
  mov %eax,8192
  mov %ebx,8196
  jnc .L1076_c$
  movb $0x1,8448
.L1076_c$: nop
  jnz .L1076_z$
  movb $0x2,8449
.L1076_z$: nop
  jns .L1076_s$
  movb $0x3,8450
.L1076_s$: nop
  jnp .L1076_p$
  movb $0x4,8451
.L1076_p$: nop
  jno .L1076_o$
  movb $0x5,8452
.L1076_o$: nop

    ret
         .size   shrd2, .-shrd2

    
.globl shrd2_constant
         .type   shrd2_constant, @function
shrd2_constant:
      

  mov $1,%eax
  mov $2,%ebx
  shrd $4,%eax,%ebx
  mov %eax,8192
  mov %ebx,8196
  jnc .L1077_c$
  movb $0x1,8448
.L1077_c$: nop
  jnz .L1077_z$
  movb $0x2,8449
.L1077_z$: nop
  jns .L1077_s$
  movb $0x3,8450
.L1077_s$: nop
  jnp .L1077_p$
  movb $0x4,8451
.L1077_p$: nop
  jno .L1077_o$
  movb $0x5,8452
.L1077_o$: nop

    ret
         .size   shrd2_constant, .-shrd2_constant

    
.globl shrd2_allregs
         .type   shrd2_allregs, @function
shrd2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  shrd $4,%eax,%ebx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   shrd2_allregs, .-shrd2_allregs

    
.globl shrd3
         .type   shrd3, @function
shrd3:
      

  mov 4096,%ax
  mov 4100,%bx
  mov 4104,%cl
  shrd %cl,%ax,%bx
  mov %ax,8192
  mov %bx,8196
  jnc .L1078_c$
  movb $0x1,8448
.L1078_c$: nop
  jnz .L1078_z$
  movb $0x2,8449
.L1078_z$: nop
  jns .L1078_s$
  movb $0x3,8450
.L1078_s$: nop
  jnp .L1078_p$
  movb $0x4,8451
.L1078_p$: nop
  jno .L1078_o$
  movb $0x5,8452
.L1078_o$: nop

    ret
         .size   shrd3, .-shrd3

    
.globl shrd3_constant
         .type   shrd3_constant, @function
shrd3_constant:
      

  mov $1,%ax
  mov $2,%bx
  mov $3,%cl
  shrd %cl,%ax,%bx
  mov %ax,8192
  mov %bx,8196
  jnc .L1079_c$
  movb $0x1,8448
.L1079_c$: nop
  jnz .L1079_z$
  movb $0x2,8449
.L1079_z$: nop
  jns .L1079_s$
  movb $0x3,8450
.L1079_s$: nop
  jnp .L1079_p$
  movb $0x4,8451
.L1079_p$: nop
  jno .L1079_o$
  movb $0x5,8452
.L1079_o$: nop

    ret
         .size   shrd3_constant, .-shrd3_constant

    
.globl shrd3_allregs
         .type   shrd3_allregs, @function
shrd3_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  shrd %cl,%ax,%bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   shrd3_allregs, .-shrd3_allregs

    
.globl shrd4
         .type   shrd4, @function
shrd4:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%cl
  shrd %cl,%eax,%ebx
  mov %eax,8192
  mov %ebx,8196
  jnc .L1080_c$
  movb $0x1,8448
.L1080_c$: nop
  jnz .L1080_z$
  movb $0x2,8449
.L1080_z$: nop
  jns .L1080_s$
  movb $0x3,8450
.L1080_s$: nop
  jnp .L1080_p$
  movb $0x4,8451
.L1080_p$: nop
  jno .L1080_o$
  movb $0x5,8452
.L1080_o$: nop

    ret
         .size   shrd4, .-shrd4

    
.globl shrd4_constant
         .type   shrd4_constant, @function
shrd4_constant:
      

  mov $1,%eax
  mov $2,%ebx
  mov $3,%cl
  shrd %cl,%eax,%ebx
  mov %eax,8192
  mov %ebx,8196
  jnc .L1081_c$
  movb $0x1,8448
.L1081_c$: nop
  jnz .L1081_z$
  movb $0x2,8449
.L1081_z$: nop
  jns .L1081_s$
  movb $0x3,8450
.L1081_s$: nop
  jnp .L1081_p$
  movb $0x4,8451
.L1081_p$: nop
  jno .L1081_o$
  movb $0x5,8452
.L1081_o$: nop

    ret
         .size   shrd4_constant, .-shrd4_constant

    
.globl shrd4_allregs
         .type   shrd4_allregs, @function
shrd4_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  shrd %cl,%eax,%ebx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   shrd4_allregs, .-shrd4_allregs

    
.globl sldt
         .type   sldt, @function
sldt:
      


  sldt (%eax)


    ret
         .size   sldt, .-sldt

    
.globl sldt_constant
         .type   sldt_constant, @function
sldt_constant:
      


  sldt (%eax)


    ret
         .size   sldt_constant, .-sldt_constant

    
.globl sldt_allregs
         .type   sldt_allregs, @function
sldt_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  sldt (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   sldt_allregs, .-sldt_allregs

    
.globl smsw
         .type   smsw, @function
smsw:
      


  smsw (%eax)


    ret
         .size   smsw, .-smsw

    
.globl smsw_constant
         .type   smsw_constant, @function
smsw_constant:
      


  smsw (%eax)


    ret
         .size   smsw_constant, .-smsw_constant

    
.globl smsw_allregs
         .type   smsw_allregs, @function
smsw_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  smsw (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   smsw_allregs, .-smsw_allregs

    
.globl stc_flags_clear
         .type   stc_flags_clear, @function
stc_flags_clear:
      
  movl $0x2,%eax
  decl %eax

  stc
  jnc .L1082_c$
  movb $0x1,8448
.L1082_c$: nop
  jnz .L1082_z$
  movb $0x2,8449
.L1082_z$: nop
  jns .L1082_s$
  movb $0x3,8450
.L1082_s$: nop
  jnp .L1082_p$
  movb $0x4,8451
.L1082_p$: nop
  jno .L1082_o$
  movb $0x5,8452
.L1082_o$: nop

    ret
         .size   stc_flags_clear, .-stc_flags_clear

    
.globl stc_flags_clear_constant
         .type   stc_flags_clear_constant, @function
stc_flags_clear_constant:
      
  movl $0x2,%eax
  decl %eax

  stc
  jnc .L1083_c$
  movb $0x1,8448
.L1083_c$: nop
  jnz .L1083_z$
  movb $0x2,8449
.L1083_z$: nop
  jns .L1083_s$
  movb $0x3,8450
.L1083_s$: nop
  jnp .L1083_p$
  movb $0x4,8451
.L1083_p$: nop
  jno .L1083_o$
  movb $0x5,8452
.L1083_o$: nop

    ret
         .size   stc_flags_clear_constant, .-stc_flags_clear_constant

    
.globl stc_flags_clear_allregs
         .type   stc_flags_clear_allregs, @function
stc_flags_clear_allregs:
      
  movl $0x2,%eax
  decl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  stc
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   stc_flags_clear_allregs, .-stc_flags_clear_allregs

    
.globl stc_flags_set1
         .type   stc_flags_set1, @function
stc_flags_set1:
      
  movl $0x0,%eax
  negl %eax

  stc
  jnc .L1084_c$
  movb $0x1,8448
.L1084_c$: nop
  jnz .L1084_z$
  movb $0x2,8449
.L1084_z$: nop
  jns .L1084_s$
  movb $0x3,8450
.L1084_s$: nop
  jnp .L1084_p$
  movb $0x4,8451
.L1084_p$: nop
  jno .L1084_o$
  movb $0x5,8452
.L1084_o$: nop

    ret
         .size   stc_flags_set1, .-stc_flags_set1

    
.globl stc_flags_set1_constant
         .type   stc_flags_set1_constant, @function
stc_flags_set1_constant:
      
  movl $0x0,%eax
  negl %eax

  stc
  jnc .L1085_c$
  movb $0x1,8448
.L1085_c$: nop
  jnz .L1085_z$
  movb $0x2,8449
.L1085_z$: nop
  jns .L1085_s$
  movb $0x3,8450
.L1085_s$: nop
  jnp .L1085_p$
  movb $0x4,8451
.L1085_p$: nop
  jno .L1085_o$
  movb $0x5,8452
.L1085_o$: nop

    ret
         .size   stc_flags_set1_constant, .-stc_flags_set1_constant

    
.globl stc_flags_set1_allregs
         .type   stc_flags_set1_allregs, @function
stc_flags_set1_allregs:
      
  movl $0x0,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  stc
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   stc_flags_set1_allregs, .-stc_flags_set1_allregs

    
.globl stc_flags_set2
         .type   stc_flags_set2, @function
stc_flags_set2:
      
  movl $0x2,%eax
  negl %eax

  stc
  jnc .L1086_c$
  movb $0x1,8448
.L1086_c$: nop
  jnz .L1086_z$
  movb $0x2,8449
.L1086_z$: nop
  jns .L1086_s$
  movb $0x3,8450
.L1086_s$: nop
  jnp .L1086_p$
  movb $0x4,8451
.L1086_p$: nop
  jno .L1086_o$
  movb $0x5,8452
.L1086_o$: nop

    ret
         .size   stc_flags_set2, .-stc_flags_set2

    
.globl stc_flags_set2_constant
         .type   stc_flags_set2_constant, @function
stc_flags_set2_constant:
      
  movl $0x2,%eax
  negl %eax

  stc
  jnc .L1087_c$
  movb $0x1,8448
.L1087_c$: nop
  jnz .L1087_z$
  movb $0x2,8449
.L1087_z$: nop
  jns .L1087_s$
  movb $0x3,8450
.L1087_s$: nop
  jnp .L1087_p$
  movb $0x4,8451
.L1087_p$: nop
  jno .L1087_o$
  movb $0x5,8452
.L1087_o$: nop

    ret
         .size   stc_flags_set2_constant, .-stc_flags_set2_constant

    
.globl stc_flags_set2_allregs
         .type   stc_flags_set2_allregs, @function
stc_flags_set2_allregs:
      
  movl $0x2,%eax
  negl %eax
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  stc
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   stc_flags_set2_allregs, .-stc_flags_set2_allregs

    
.globl stc_flags_cmp
         .type   stc_flags_cmp, @function
stc_flags_cmp:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  stc
  jnc .L1088_c$
  movb $0x1,8448
.L1088_c$: nop
  jnz .L1088_z$
  movb $0x2,8449
.L1088_z$: nop
  jns .L1088_s$
  movb $0x3,8450
.L1088_s$: nop
  jnp .L1088_p$
  movb $0x4,8451
.L1088_p$: nop
  jno .L1088_o$
  movb $0x5,8452
.L1088_o$: nop

    ret
         .size   stc_flags_cmp, .-stc_flags_cmp

    
.globl stc_flags_cmp_constant
         .type   stc_flags_cmp_constant, @function
stc_flags_cmp_constant:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx

  stc
  jnc .L1089_c$
  movb $0x1,8448
.L1089_c$: nop
  jnz .L1089_z$
  movb $0x2,8449
.L1089_z$: nop
  jns .L1089_s$
  movb $0x3,8450
.L1089_s$: nop
  jnp .L1089_p$
  movb $0x4,8451
.L1089_p$: nop
  jno .L1089_o$
  movb $0x5,8452
.L1089_o$: nop

    ret
         .size   stc_flags_cmp_constant, .-stc_flags_cmp_constant

    
.globl stc_flags_cmp_allregs
         .type   stc_flags_cmp_allregs, @function
stc_flags_cmp_allregs:
      
  mov 0x1100,%eax
  mov 0x1104,%ebx
  cmp %eax,%ebx
  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  stc
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   stc_flags_cmp_allregs, .-stc_flags_cmp_allregs

    
.globl std
         .type   std, @function
std:
      


  std


    ret
         .size   std, .-std

    
.globl std_constant
         .type   std_constant, @function
std_constant:
      


  std


    ret
         .size   std_constant, .-std_constant

    
.globl std_allregs
         .type   std_allregs, @function
std_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  std
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   std_allregs, .-std_allregs

    
.globl sti
         .type   sti, @function
sti:
      


  sti


    ret
         .size   sti, .-sti

    
.globl sti_constant
         .type   sti_constant, @function
sti_constant:
      


  sti


    ret
         .size   sti_constant, .-sti_constant

    
.globl sti_allregs
         .type   sti_allregs, @function
sti_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  sti
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   sti_allregs, .-sti_allregs

    
.globl stos1_cld
         .type   stos1_cld, @function
stos1_cld:
      cld

  mov 4096,%edi
  mov 4100,%al
  .byte 0xaa
  mov %edi,8192
  jnc .L1090_c$
  movb $0x1,8448
.L1090_c$: nop
  jnz .L1090_z$
  movb $0x2,8449
.L1090_z$: nop
  jns .L1090_s$
  movb $0x3,8450
.L1090_s$: nop
  jnp .L1090_p$
  movb $0x4,8451
.L1090_p$: nop
  jno .L1090_o$
  movb $0x5,8452
.L1090_o$: nop

    ret
         .size   stos1_cld, .-stos1_cld

    
.globl stos1_cld_constant
         .type   stos1_cld_constant, @function
stos1_cld_constant:
      cld

  mov $1,%edi
  mov $2,%al
  .byte 0xaa
  mov %edi,8192
  jnc .L1091_c$
  movb $0x1,8448
.L1091_c$: nop
  jnz .L1091_z$
  movb $0x2,8449
.L1091_z$: nop
  jns .L1091_s$
  movb $0x3,8450
.L1091_s$: nop
  jnp .L1091_p$
  movb $0x4,8451
.L1091_p$: nop
  jno .L1091_o$
  movb $0x5,8452
.L1091_o$: nop

    ret
         .size   stos1_cld_constant, .-stos1_cld_constant

    
.globl stos1_cld_allregs
         .type   stos1_cld_allregs, @function
stos1_cld_allregs:
      cld

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xaa
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   stos1_cld_allregs, .-stos1_cld_allregs

    
.globl stos1_std
         .type   stos1_std, @function
stos1_std:
      std

  mov 4096,%edi
  mov 4100,%al
  .byte 0xaa
  mov %edi,8192
  jnc .L1092_c$
  movb $0x1,8448
.L1092_c$: nop
  jnz .L1092_z$
  movb $0x2,8449
.L1092_z$: nop
  jns .L1092_s$
  movb $0x3,8450
.L1092_s$: nop
  jnp .L1092_p$
  movb $0x4,8451
.L1092_p$: nop
  jno .L1092_o$
  movb $0x5,8452
.L1092_o$: nop

    ret
         .size   stos1_std, .-stos1_std

    
.globl stos1_std_constant
         .type   stos1_std_constant, @function
stos1_std_constant:
      std

  mov $1,%edi
  mov $2,%al
  .byte 0xaa
  mov %edi,8192
  jnc .L1093_c$
  movb $0x1,8448
.L1093_c$: nop
  jnz .L1093_z$
  movb $0x2,8449
.L1093_z$: nop
  jns .L1093_s$
  movb $0x3,8450
.L1093_s$: nop
  jnp .L1093_p$
  movb $0x4,8451
.L1093_p$: nop
  jno .L1093_o$
  movb $0x5,8452
.L1093_o$: nop

    ret
         .size   stos1_std_constant, .-stos1_std_constant

    
.globl stos1_std_allregs
         .type   stos1_std_allregs, @function
stos1_std_allregs:
      std

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xaa
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   stos1_std_allregs, .-stos1_std_allregs

    
.globl stos1
         .type   stos1, @function
stos1:
      

  mov 4096,%edi
  mov 4100,%al
  .byte 0xaa
  mov %edi,8192
  jnc .L1094_c$
  movb $0x1,8448
.L1094_c$: nop
  jnz .L1094_z$
  movb $0x2,8449
.L1094_z$: nop
  jns .L1094_s$
  movb $0x3,8450
.L1094_s$: nop
  jnp .L1094_p$
  movb $0x4,8451
.L1094_p$: nop
  jno .L1094_o$
  movb $0x5,8452
.L1094_o$: nop

    ret
         .size   stos1, .-stos1

    
.globl stos1_constant
         .type   stos1_constant, @function
stos1_constant:
      

  mov $1,%edi
  mov $2,%al
  .byte 0xaa
  mov %edi,8192
  jnc .L1095_c$
  movb $0x1,8448
.L1095_c$: nop
  jnz .L1095_z$
  movb $0x2,8449
.L1095_z$: nop
  jns .L1095_s$
  movb $0x3,8450
.L1095_s$: nop
  jnp .L1095_p$
  movb $0x4,8451
.L1095_p$: nop
  jno .L1095_o$
  movb $0x5,8452
.L1095_o$: nop

    ret
         .size   stos1_constant, .-stos1_constant

    
.globl stos1_allregs
         .type   stos1_allregs, @function
stos1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xaa
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   stos1_allregs, .-stos1_allregs

    
.globl stos2_cld
         .type   stos2_cld, @function
stos2_cld:
      cld

  mov 4096,%edi
  mov 4100,%ax
  .byte 0x66,0xab
  mov %edi,8192
  jnc .L1096_c$
  movb $0x1,8448
.L1096_c$: nop
  jnz .L1096_z$
  movb $0x2,8449
.L1096_z$: nop
  jns .L1096_s$
  movb $0x3,8450
.L1096_s$: nop
  jnp .L1096_p$
  movb $0x4,8451
.L1096_p$: nop
  jno .L1096_o$
  movb $0x5,8452
.L1096_o$: nop

    ret
         .size   stos2_cld, .-stos2_cld

    
.globl stos2_cld_constant
         .type   stos2_cld_constant, @function
stos2_cld_constant:
      cld

  mov $1,%edi
  mov $2,%ax
  .byte 0x66,0xab
  mov %edi,8192
  jnc .L1097_c$
  movb $0x1,8448
.L1097_c$: nop
  jnz .L1097_z$
  movb $0x2,8449
.L1097_z$: nop
  jns .L1097_s$
  movb $0x3,8450
.L1097_s$: nop
  jnp .L1097_p$
  movb $0x4,8451
.L1097_p$: nop
  jno .L1097_o$
  movb $0x5,8452
.L1097_o$: nop

    ret
         .size   stos2_cld_constant, .-stos2_cld_constant

    
.globl stos2_cld_allregs
         .type   stos2_cld_allregs, @function
stos2_cld_allregs:
      cld

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0xab
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   stos2_cld_allregs, .-stos2_cld_allregs

    
.globl stos2_std
         .type   stos2_std, @function
stos2_std:
      std

  mov 4096,%edi
  mov 4100,%ax
  .byte 0x66,0xab
  mov %edi,8192
  jnc .L1098_c$
  movb $0x1,8448
.L1098_c$: nop
  jnz .L1098_z$
  movb $0x2,8449
.L1098_z$: nop
  jns .L1098_s$
  movb $0x3,8450
.L1098_s$: nop
  jnp .L1098_p$
  movb $0x4,8451
.L1098_p$: nop
  jno .L1098_o$
  movb $0x5,8452
.L1098_o$: nop

    ret
         .size   stos2_std, .-stos2_std

    
.globl stos2_std_constant
         .type   stos2_std_constant, @function
stos2_std_constant:
      std

  mov $1,%edi
  mov $2,%ax
  .byte 0x66,0xab
  mov %edi,8192
  jnc .L1099_c$
  movb $0x1,8448
.L1099_c$: nop
  jnz .L1099_z$
  movb $0x2,8449
.L1099_z$: nop
  jns .L1099_s$
  movb $0x3,8450
.L1099_s$: nop
  jnp .L1099_p$
  movb $0x4,8451
.L1099_p$: nop
  jno .L1099_o$
  movb $0x5,8452
.L1099_o$: nop

    ret
         .size   stos2_std_constant, .-stos2_std_constant

    
.globl stos2_std_allregs
         .type   stos2_std_allregs, @function
stos2_std_allregs:
      std

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0xab
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   stos2_std_allregs, .-stos2_std_allregs

    
.globl stos2
         .type   stos2, @function
stos2:
      

  mov 4096,%edi
  mov 4100,%ax
  .byte 0x66,0xab
  mov %edi,8192
  jnc .L1100_c$
  movb $0x1,8448
.L1100_c$: nop
  jnz .L1100_z$
  movb $0x2,8449
.L1100_z$: nop
  jns .L1100_s$
  movb $0x3,8450
.L1100_s$: nop
  jnp .L1100_p$
  movb $0x4,8451
.L1100_p$: nop
  jno .L1100_o$
  movb $0x5,8452
.L1100_o$: nop

    ret
         .size   stos2, .-stos2

    
.globl stos2_constant
         .type   stos2_constant, @function
stos2_constant:
      

  mov $1,%edi
  mov $2,%ax
  .byte 0x66,0xab
  mov %edi,8192
  jnc .L1101_c$
  movb $0x1,8448
.L1101_c$: nop
  jnz .L1101_z$
  movb $0x2,8449
.L1101_z$: nop
  jns .L1101_s$
  movb $0x3,8450
.L1101_s$: nop
  jnp .L1101_p$
  movb $0x4,8451
.L1101_p$: nop
  jno .L1101_o$
  movb $0x5,8452
.L1101_o$: nop

    ret
         .size   stos2_constant, .-stos2_constant

    
.globl stos2_allregs
         .type   stos2_allregs, @function
stos2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0xab
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   stos2_allregs, .-stos2_allregs

    
.globl stos3_cld
         .type   stos3_cld, @function
stos3_cld:
      cld

  mov 4096,%edi
  mov 4100,%eax
  .byte 0xab
  mov %edi,8192
  jnc .L1102_c$
  movb $0x1,8448
.L1102_c$: nop
  jnz .L1102_z$
  movb $0x2,8449
.L1102_z$: nop
  jns .L1102_s$
  movb $0x3,8450
.L1102_s$: nop
  jnp .L1102_p$
  movb $0x4,8451
.L1102_p$: nop
  jno .L1102_o$
  movb $0x5,8452
.L1102_o$: nop

    ret
         .size   stos3_cld, .-stos3_cld

    
.globl stos3_cld_constant
         .type   stos3_cld_constant, @function
stos3_cld_constant:
      cld

  mov $1,%edi
  mov $2,%eax
  .byte 0xab
  mov %edi,8192
  jnc .L1103_c$
  movb $0x1,8448
.L1103_c$: nop
  jnz .L1103_z$
  movb $0x2,8449
.L1103_z$: nop
  jns .L1103_s$
  movb $0x3,8450
.L1103_s$: nop
  jnp .L1103_p$
  movb $0x4,8451
.L1103_p$: nop
  jno .L1103_o$
  movb $0x5,8452
.L1103_o$: nop

    ret
         .size   stos3_cld_constant, .-stos3_cld_constant

    
.globl stos3_cld_allregs
         .type   stos3_cld_allregs, @function
stos3_cld_allregs:
      cld

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xab
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   stos3_cld_allregs, .-stos3_cld_allregs

    
.globl stos3_std
         .type   stos3_std, @function
stos3_std:
      std

  mov 4096,%edi
  mov 4100,%eax
  .byte 0xab
  mov %edi,8192
  jnc .L1104_c$
  movb $0x1,8448
.L1104_c$: nop
  jnz .L1104_z$
  movb $0x2,8449
.L1104_z$: nop
  jns .L1104_s$
  movb $0x3,8450
.L1104_s$: nop
  jnp .L1104_p$
  movb $0x4,8451
.L1104_p$: nop
  jno .L1104_o$
  movb $0x5,8452
.L1104_o$: nop

    ret
         .size   stos3_std, .-stos3_std

    
.globl stos3_std_constant
         .type   stos3_std_constant, @function
stos3_std_constant:
      std

  mov $1,%edi
  mov $2,%eax
  .byte 0xab
  mov %edi,8192
  jnc .L1105_c$
  movb $0x1,8448
.L1105_c$: nop
  jnz .L1105_z$
  movb $0x2,8449
.L1105_z$: nop
  jns .L1105_s$
  movb $0x3,8450
.L1105_s$: nop
  jnp .L1105_p$
  movb $0x4,8451
.L1105_p$: nop
  jno .L1105_o$
  movb $0x5,8452
.L1105_o$: nop

    ret
         .size   stos3_std_constant, .-stos3_std_constant

    
.globl stos3_std_allregs
         .type   stos3_std_allregs, @function
stos3_std_allregs:
      std

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xab
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   stos3_std_allregs, .-stos3_std_allregs

    
.globl stos3
         .type   stos3, @function
stos3:
      

  mov 4096,%edi
  mov 4100,%eax
  .byte 0xab
  mov %edi,8192
  jnc .L1106_c$
  movb $0x1,8448
.L1106_c$: nop
  jnz .L1106_z$
  movb $0x2,8449
.L1106_z$: nop
  jns .L1106_s$
  movb $0x3,8450
.L1106_s$: nop
  jnp .L1106_p$
  movb $0x4,8451
.L1106_p$: nop
  jno .L1106_o$
  movb $0x5,8452
.L1106_o$: nop

    ret
         .size   stos3, .-stos3

    
.globl stos3_constant
         .type   stos3_constant, @function
stos3_constant:
      

  mov $1,%edi
  mov $2,%eax
  .byte 0xab
  mov %edi,8192
  jnc .L1107_c$
  movb $0x1,8448
.L1107_c$: nop
  jnz .L1107_z$
  movb $0x2,8449
.L1107_z$: nop
  jns .L1107_s$
  movb $0x3,8450
.L1107_s$: nop
  jnp .L1107_p$
  movb $0x4,8451
.L1107_p$: nop
  jno .L1107_o$
  movb $0x5,8452
.L1107_o$: nop

    ret
         .size   stos3_constant, .-stos3_constant

    
.globl stos3_allregs
         .type   stos3_allregs, @function
stos3_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xab
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   stos3_allregs, .-stos3_allregs

    
.globl str
         .type   str, @function
str:
      


  str (%eax)


    ret
         .size   str, .-str

    
.globl str_constant
         .type   str_constant, @function
str_constant:
      


  str (%eax)


    ret
         .size   str_constant, .-str_constant

    
.globl str_allregs
         .type   str_allregs, @function
str_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  str (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   str_allregs, .-str_allregs

    
.globl sub1
         .type   sub1, @function
sub1:
      

  mov 4096,%al
  .byte 0x2c,0x02
  mov %al,8192
  jnc .L1108_c$
  movb $0x1,8448
.L1108_c$: nop
  jnz .L1108_z$
  movb $0x2,8449
.L1108_z$: nop
  jns .L1108_s$
  movb $0x3,8450
.L1108_s$: nop
  jnp .L1108_p$
  movb $0x4,8451
.L1108_p$: nop
  jno .L1108_o$
  movb $0x5,8452
.L1108_o$: nop

    ret
         .size   sub1, .-sub1

    
.globl sub1_constant
         .type   sub1_constant, @function
sub1_constant:
      

  mov $1,%al
  .byte 0x2c,0x02
  mov %al,8192
  jnc .L1109_c$
  movb $0x1,8448
.L1109_c$: nop
  jnz .L1109_z$
  movb $0x2,8449
.L1109_z$: nop
  jns .L1109_s$
  movb $0x3,8450
.L1109_s$: nop
  jnp .L1109_p$
  movb $0x4,8451
.L1109_p$: nop
  jno .L1109_o$
  movb $0x5,8452
.L1109_o$: nop

    ret
         .size   sub1_constant, .-sub1_constant

    
.globl sub1_allregs
         .type   sub1_allregs, @function
sub1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x2c,0x02
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   sub1_allregs, .-sub1_allregs

    
.globl sub2
         .type   sub2, @function
sub2:
      

  mov 4096,%al
  .byte 0x2c,0xfe
  mov %al,8192
  jnc .L1110_c$
  movb $0x1,8448
.L1110_c$: nop
  jnz .L1110_z$
  movb $0x2,8449
.L1110_z$: nop
  jns .L1110_s$
  movb $0x3,8450
.L1110_s$: nop
  jnp .L1110_p$
  movb $0x4,8451
.L1110_p$: nop
  jno .L1110_o$
  movb $0x5,8452
.L1110_o$: nop

    ret
         .size   sub2, .-sub2

    
.globl sub2_constant
         .type   sub2_constant, @function
sub2_constant:
      

  mov $1,%al
  .byte 0x2c,0xfe
  mov %al,8192
  jnc .L1111_c$
  movb $0x1,8448
.L1111_c$: nop
  jnz .L1111_z$
  movb $0x2,8449
.L1111_z$: nop
  jns .L1111_s$
  movb $0x3,8450
.L1111_s$: nop
  jnp .L1111_p$
  movb $0x4,8451
.L1111_p$: nop
  jno .L1111_o$
  movb $0x5,8452
.L1111_o$: nop

    ret
         .size   sub2_constant, .-sub2_constant

    
.globl sub2_allregs
         .type   sub2_allregs, @function
sub2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x2c,0xfe
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   sub2_allregs, .-sub2_allregs

    
.globl sub3
         .type   sub3, @function
sub3:
      

  mov 4096,%ax
  .byte 0x66,0x2d,0x02,0x00
  mov %ax,8192
  jnc .L1112_c$
  movb $0x1,8448
.L1112_c$: nop
  jnz .L1112_z$
  movb $0x2,8449
.L1112_z$: nop
  jns .L1112_s$
  movb $0x3,8450
.L1112_s$: nop
  jnp .L1112_p$
  movb $0x4,8451
.L1112_p$: nop
  jno .L1112_o$
  movb $0x5,8452
.L1112_o$: nop

    ret
         .size   sub3, .-sub3

    
.globl sub3_constant
         .type   sub3_constant, @function
sub3_constant:
      

  mov $1,%ax
  .byte 0x66,0x2d,0x02,0x00
  mov %ax,8192
  jnc .L1113_c$
  movb $0x1,8448
.L1113_c$: nop
  jnz .L1113_z$
  movb $0x2,8449
.L1113_z$: nop
  jns .L1113_s$
  movb $0x3,8450
.L1113_s$: nop
  jnp .L1113_p$
  movb $0x4,8451
.L1113_p$: nop
  jno .L1113_o$
  movb $0x5,8452
.L1113_o$: nop

    ret
         .size   sub3_constant, .-sub3_constant

    
.globl sub3_allregs
         .type   sub3_allregs, @function
sub3_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0x2d,0x02,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   sub3_allregs, .-sub3_allregs

    
.globl sub4
         .type   sub4, @function
sub4:
      

  mov 4096,%ax
  .byte 0x66,0x2d,0xfe,0xff
  mov %ax,8192
  jnc .L1114_c$
  movb $0x1,8448
.L1114_c$: nop
  jnz .L1114_z$
  movb $0x2,8449
.L1114_z$: nop
  jns .L1114_s$
  movb $0x3,8450
.L1114_s$: nop
  jnp .L1114_p$
  movb $0x4,8451
.L1114_p$: nop
  jno .L1114_o$
  movb $0x5,8452
.L1114_o$: nop

    ret
         .size   sub4, .-sub4

    
.globl sub4_constant
         .type   sub4_constant, @function
sub4_constant:
      

  mov $1,%ax
  .byte 0x66,0x2d,0xfe,0xff
  mov %ax,8192
  jnc .L1115_c$
  movb $0x1,8448
.L1115_c$: nop
  jnz .L1115_z$
  movb $0x2,8449
.L1115_z$: nop
  jns .L1115_s$
  movb $0x3,8450
.L1115_s$: nop
  jnp .L1115_p$
  movb $0x4,8451
.L1115_p$: nop
  jno .L1115_o$
  movb $0x5,8452
.L1115_o$: nop

    ret
         .size   sub4_constant, .-sub4_constant

    
.globl sub4_allregs
         .type   sub4_allregs, @function
sub4_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0x2d,0xfe,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   sub4_allregs, .-sub4_allregs

    
.globl sub5
         .type   sub5, @function
sub5:
      

  mov 4096,%eax
  .byte 0x2d,0x02,0x00,0x00,0x00
  mov %eax,8192
  jnc .L1116_c$
  movb $0x1,8448
.L1116_c$: nop
  jnz .L1116_z$
  movb $0x2,8449
.L1116_z$: nop
  jns .L1116_s$
  movb $0x3,8450
.L1116_s$: nop
  jnp .L1116_p$
  movb $0x4,8451
.L1116_p$: nop
  jno .L1116_o$
  movb $0x5,8452
.L1116_o$: nop

    ret
         .size   sub5, .-sub5

    
.globl sub5_constant
         .type   sub5_constant, @function
sub5_constant:
      

  mov $1,%eax
  .byte 0x2d,0x02,0x00,0x00,0x00
  mov %eax,8192
  jnc .L1117_c$
  movb $0x1,8448
.L1117_c$: nop
  jnz .L1117_z$
  movb $0x2,8449
.L1117_z$: nop
  jns .L1117_s$
  movb $0x3,8450
.L1117_s$: nop
  jnp .L1117_p$
  movb $0x4,8451
.L1117_p$: nop
  jno .L1117_o$
  movb $0x5,8452
.L1117_o$: nop

    ret
         .size   sub5_constant, .-sub5_constant

    
.globl sub5_allregs
         .type   sub5_allregs, @function
sub5_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x2d,0x02,0x00,0x00,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   sub5_allregs, .-sub5_allregs

    
.globl sub6
         .type   sub6, @function
sub6:
      

  mov 4096,%eax
  .byte 0x2d,0xfe,0xff,0xff,0xff
  mov %eax,8192
  jnc .L1118_c$
  movb $0x1,8448
.L1118_c$: nop
  jnz .L1118_z$
  movb $0x2,8449
.L1118_z$: nop
  jns .L1118_s$
  movb $0x3,8450
.L1118_s$: nop
  jnp .L1118_p$
  movb $0x4,8451
.L1118_p$: nop
  jno .L1118_o$
  movb $0x5,8452
.L1118_o$: nop

    ret
         .size   sub6, .-sub6

    
.globl sub6_constant
         .type   sub6_constant, @function
sub6_constant:
      

  mov $1,%eax
  .byte 0x2d,0xfe,0xff,0xff,0xff
  mov %eax,8192
  jnc .L1119_c$
  movb $0x1,8448
.L1119_c$: nop
  jnz .L1119_z$
  movb $0x2,8449
.L1119_z$: nop
  jns .L1119_s$
  movb $0x3,8450
.L1119_s$: nop
  jnp .L1119_p$
  movb $0x4,8451
.L1119_p$: nop
  jno .L1119_o$
  movb $0x5,8452
.L1119_o$: nop

    ret
         .size   sub6_constant, .-sub6_constant

    
.globl sub6_allregs
         .type   sub6_allregs, @function
sub6_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x2d,0xfe,0xff,0xff,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   sub6_allregs, .-sub6_allregs

    
.globl sub7
         .type   sub7, @function
sub7:
      

  mov 4096,%eax
  mov 4100,%ebp
  subl 8(%ebp), %eax
  mov %eax,8192
  jnc .L1120_c$
  movb $0x1,8448
.L1120_c$: nop
  jnz .L1120_z$
  movb $0x2,8449
.L1120_z$: nop
  jns .L1120_s$
  movb $0x3,8450
.L1120_s$: nop
  jnp .L1120_p$
  movb $0x4,8451
.L1120_p$: nop
  jno .L1120_o$
  movb $0x5,8452
.L1120_o$: nop

    ret
         .size   sub7, .-sub7

    
.globl sub7_constant
         .type   sub7_constant, @function
sub7_constant:
      

  mov $1,%eax
  mov $2,%ebp
  subl 8(%ebp), %eax
  mov %eax,8192
  jnc .L1121_c$
  movb $0x1,8448
.L1121_c$: nop
  jnz .L1121_z$
  movb $0x2,8449
.L1121_z$: nop
  jns .L1121_s$
  movb $0x3,8450
.L1121_s$: nop
  jnp .L1121_p$
  movb $0x4,8451
.L1121_p$: nop
  jno .L1121_o$
  movb $0x5,8452
.L1121_o$: nop

    ret
         .size   sub7_constant, .-sub7_constant

    
.globl sub7_allregs
         .type   sub7_allregs, @function
sub7_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  subl 8(%ebp), %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   sub7_allregs, .-sub7_allregs

    
.globl sub_locked
         .type   sub_locked, @function
sub_locked:
      


  lock subl 8(%ebp), %eax


    ret
         .size   sub_locked, .-sub_locked

    
.globl sub_locked_constant
         .type   sub_locked_constant, @function
sub_locked_constant:
      


  lock subl 8(%ebp), %eax


    ret
         .size   sub_locked_constant, .-sub_locked_constant

    
.globl sub_locked_allregs
         .type   sub_locked_allregs, @function
sub_locked_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  lock subl 8(%ebp), %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   sub_locked_allregs, .-sub_locked_allregs

    
.globl test1
         .type   test1, @function
test1:
      

  mov 4096,%al
  test $0x42,%al
  jnc .L1122_c$
  movb $0x1,8448
.L1122_c$: nop
  jnz .L1122_z$
  movb $0x2,8449
.L1122_z$: nop
  jns .L1122_s$
  movb $0x3,8450
.L1122_s$: nop
  jnp .L1122_p$
  movb $0x4,8451
.L1122_p$: nop
  jno .L1122_o$
  movb $0x5,8452
.L1122_o$: nop

    ret
         .size   test1, .-test1

    
.globl test1_constant
         .type   test1_constant, @function
test1_constant:
      

  mov $1,%al
  test $0x42,%al
  jnc .L1123_c$
  movb $0x1,8448
.L1123_c$: nop
  jnz .L1123_z$
  movb $0x2,8449
.L1123_z$: nop
  jns .L1123_s$
  movb $0x3,8450
.L1123_s$: nop
  jnp .L1123_p$
  movb $0x4,8451
.L1123_p$: nop
  jno .L1123_o$
  movb $0x5,8452
.L1123_o$: nop

    ret
         .size   test1_constant, .-test1_constant

    
.globl test1_allregs
         .type   test1_allregs, @function
test1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  test $0x42,%al
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   test1_allregs, .-test1_allregs

    
.globl test2
         .type   test2, @function
test2:
      

  mov 4096,%ax
  test $0x42,%ax
  jnc .L1124_c$
  movb $0x1,8448
.L1124_c$: nop
  jnz .L1124_z$
  movb $0x2,8449
.L1124_z$: nop
  jns .L1124_s$
  movb $0x3,8450
.L1124_s$: nop
  jnp .L1124_p$
  movb $0x4,8451
.L1124_p$: nop
  jno .L1124_o$
  movb $0x5,8452
.L1124_o$: nop

    ret
         .size   test2, .-test2

    
.globl test2_constant
         .type   test2_constant, @function
test2_constant:
      

  mov $1,%ax
  test $0x42,%ax
  jnc .L1125_c$
  movb $0x1,8448
.L1125_c$: nop
  jnz .L1125_z$
  movb $0x2,8449
.L1125_z$: nop
  jns .L1125_s$
  movb $0x3,8450
.L1125_s$: nop
  jnp .L1125_p$
  movb $0x4,8451
.L1125_p$: nop
  jno .L1125_o$
  movb $0x5,8452
.L1125_o$: nop

    ret
         .size   test2_constant, .-test2_constant

    
.globl test2_allregs
         .type   test2_allregs, @function
test2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  test $0x42,%ax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   test2_allregs, .-test2_allregs

    
.globl test3
         .type   test3, @function
test3:
      

  mov 4096,%eax
  test $0x42,%eax
  jnc .L1126_c$
  movb $0x1,8448
.L1126_c$: nop
  jnz .L1126_z$
  movb $0x2,8449
.L1126_z$: nop
  jns .L1126_s$
  movb $0x3,8450
.L1126_s$: nop
  jnp .L1126_p$
  movb $0x4,8451
.L1126_p$: nop
  jno .L1126_o$
  movb $0x5,8452
.L1126_o$: nop

    ret
         .size   test3, .-test3

    
.globl test3_constant
         .type   test3_constant, @function
test3_constant:
      

  mov $1,%eax
  test $0x42,%eax
  jnc .L1127_c$
  movb $0x1,8448
.L1127_c$: nop
  jnz .L1127_z$
  movb $0x2,8449
.L1127_z$: nop
  jns .L1127_s$
  movb $0x3,8450
.L1127_s$: nop
  jnp .L1127_p$
  movb $0x4,8451
.L1127_p$: nop
  jno .L1127_o$
  movb $0x5,8452
.L1127_o$: nop

    ret
         .size   test3_constant, .-test3_constant

    
.globl test3_allregs
         .type   test3_allregs, @function
test3_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  test $0x42,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   test3_allregs, .-test3_allregs

    
.globl test4
         .type   test4, @function
test4:
      

  mov 4096,%ecx
  testb $0x42,(%ecx)
  jnc .L1128_c$
  movb $0x1,8448
.L1128_c$: nop
  jnz .L1128_z$
  movb $0x2,8449
.L1128_z$: nop
  jns .L1128_s$
  movb $0x3,8450
.L1128_s$: nop
  jnp .L1128_p$
  movb $0x4,8451
.L1128_p$: nop
  jno .L1128_o$
  movb $0x5,8452
.L1128_o$: nop

    ret
         .size   test4, .-test4

    
.globl test4_constant
         .type   test4_constant, @function
test4_constant:
      

  mov $1,%ecx
  testb $0x42,(%ecx)
  jnc .L1129_c$
  movb $0x1,8448
.L1129_c$: nop
  jnz .L1129_z$
  movb $0x2,8449
.L1129_z$: nop
  jns .L1129_s$
  movb $0x3,8450
.L1129_s$: nop
  jnp .L1129_p$
  movb $0x4,8451
.L1129_p$: nop
  jno .L1129_o$
  movb $0x5,8452
.L1129_o$: nop

    ret
         .size   test4_constant, .-test4_constant

    
.globl test4_allregs
         .type   test4_allregs, @function
test4_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  testb $0x42,(%ecx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   test4_allregs, .-test4_allregs

    
.globl test5
         .type   test5, @function
test5:
      

  mov 4096,%ecx
  testw $0x42,(%ecx)
  jnc .L1130_c$
  movb $0x1,8448
.L1130_c$: nop
  jnz .L1130_z$
  movb $0x2,8449
.L1130_z$: nop
  jns .L1130_s$
  movb $0x3,8450
.L1130_s$: nop
  jnp .L1130_p$
  movb $0x4,8451
.L1130_p$: nop
  jno .L1130_o$
  movb $0x5,8452
.L1130_o$: nop

    ret
         .size   test5, .-test5

    
.globl test5_constant
         .type   test5_constant, @function
test5_constant:
      

  mov $1,%ecx
  testw $0x42,(%ecx)
  jnc .L1131_c$
  movb $0x1,8448
.L1131_c$: nop
  jnz .L1131_z$
  movb $0x2,8449
.L1131_z$: nop
  jns .L1131_s$
  movb $0x3,8450
.L1131_s$: nop
  jnp .L1131_p$
  movb $0x4,8451
.L1131_p$: nop
  jno .L1131_o$
  movb $0x5,8452
.L1131_o$: nop

    ret
         .size   test5_constant, .-test5_constant

    
.globl test5_allregs
         .type   test5_allregs, @function
test5_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  testw $0x42,(%ecx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   test5_allregs, .-test5_allregs

    
.globl test6
         .type   test6, @function
test6:
      

  mov 4096,%ecx
  testl $0x42,(%ecx)
  jnc .L1132_c$
  movb $0x1,8448
.L1132_c$: nop
  jnz .L1132_z$
  movb $0x2,8449
.L1132_z$: nop
  jns .L1132_s$
  movb $0x3,8450
.L1132_s$: nop
  jnp .L1132_p$
  movb $0x4,8451
.L1132_p$: nop
  jno .L1132_o$
  movb $0x5,8452
.L1132_o$: nop

    ret
         .size   test6, .-test6

    
.globl test6_constant
         .type   test6_constant, @function
test6_constant:
      

  mov $1,%ecx
  testl $0x42,(%ecx)
  jnc .L1133_c$
  movb $0x1,8448
.L1133_c$: nop
  jnz .L1133_z$
  movb $0x2,8449
.L1133_z$: nop
  jns .L1133_s$
  movb $0x3,8450
.L1133_s$: nop
  jnp .L1133_p$
  movb $0x4,8451
.L1133_p$: nop
  jno .L1133_o$
  movb $0x5,8452
.L1133_o$: nop

    ret
         .size   test6_constant, .-test6_constant

    
.globl test6_allregs
         .type   test6_allregs, @function
test6_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  testl $0x42,(%ecx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   test6_allregs, .-test6_allregs

    
.globl test7
         .type   test7, @function
test7:
      

  mov 4096,%bl
  mov 4100,%ecx
  test %bl,(%ecx)
  jnc .L1134_c$
  movb $0x1,8448
.L1134_c$: nop
  jnz .L1134_z$
  movb $0x2,8449
.L1134_z$: nop
  jns .L1134_s$
  movb $0x3,8450
.L1134_s$: nop
  jnp .L1134_p$
  movb $0x4,8451
.L1134_p$: nop
  jno .L1134_o$
  movb $0x5,8452
.L1134_o$: nop

    ret
         .size   test7, .-test7

    
.globl test7_constant
         .type   test7_constant, @function
test7_constant:
      

  mov $1,%bl
  mov $2,%ecx
  test %bl,(%ecx)
  jnc .L1135_c$
  movb $0x1,8448
.L1135_c$: nop
  jnz .L1135_z$
  movb $0x2,8449
.L1135_z$: nop
  jns .L1135_s$
  movb $0x3,8450
.L1135_s$: nop
  jnp .L1135_p$
  movb $0x4,8451
.L1135_p$: nop
  jno .L1135_o$
  movb $0x5,8452
.L1135_o$: nop

    ret
         .size   test7_constant, .-test7_constant

    
.globl test7_allregs
         .type   test7_allregs, @function
test7_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  test %bl,(%ecx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   test7_allregs, .-test7_allregs

    
.globl test8
         .type   test8, @function
test8:
      

  mov 4096,%bx
  mov 4100,%ecx
  test %bx,(%ecx)
  jnc .L1136_c$
  movb $0x1,8448
.L1136_c$: nop
  jnz .L1136_z$
  movb $0x2,8449
.L1136_z$: nop
  jns .L1136_s$
  movb $0x3,8450
.L1136_s$: nop
  jnp .L1136_p$
  movb $0x4,8451
.L1136_p$: nop
  jno .L1136_o$
  movb $0x5,8452
.L1136_o$: nop

    ret
         .size   test8, .-test8

    
.globl test8_constant
         .type   test8_constant, @function
test8_constant:
      

  mov $1,%bx
  mov $2,%ecx
  test %bx,(%ecx)
  jnc .L1137_c$
  movb $0x1,8448
.L1137_c$: nop
  jnz .L1137_z$
  movb $0x2,8449
.L1137_z$: nop
  jns .L1137_s$
  movb $0x3,8450
.L1137_s$: nop
  jnp .L1137_p$
  movb $0x4,8451
.L1137_p$: nop
  jno .L1137_o$
  movb $0x5,8452
.L1137_o$: nop

    ret
         .size   test8_constant, .-test8_constant

    
.globl test8_allregs
         .type   test8_allregs, @function
test8_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  test %bx,(%ecx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   test8_allregs, .-test8_allregs

    
.globl test9
         .type   test9, @function
test9:
      

  mov 4096,%ebx
  mov 4100,%ecx
  test %ebx,(%ecx)
  jnc .L1138_c$
  movb $0x1,8448
.L1138_c$: nop
  jnz .L1138_z$
  movb $0x2,8449
.L1138_z$: nop
  jns .L1138_s$
  movb $0x3,8450
.L1138_s$: nop
  jnp .L1138_p$
  movb $0x4,8451
.L1138_p$: nop
  jno .L1138_o$
  movb $0x5,8452
.L1138_o$: nop

    ret
         .size   test9, .-test9

    
.globl test9_constant
         .type   test9_constant, @function
test9_constant:
      

  mov $1,%ebx
  mov $2,%ecx
  test %ebx,(%ecx)
  jnc .L1139_c$
  movb $0x1,8448
.L1139_c$: nop
  jnz .L1139_z$
  movb $0x2,8449
.L1139_z$: nop
  jns .L1139_s$
  movb $0x3,8450
.L1139_s$: nop
  jnp .L1139_p$
  movb $0x4,8451
.L1139_p$: nop
  jno .L1139_o$
  movb $0x5,8452
.L1139_o$: nop

    ret
         .size   test9_constant, .-test9_constant

    
.globl test9_allregs
         .type   test9_allregs, @function
test9_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  test %ebx,(%ecx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   test9_allregs, .-test9_allregs

    
.globl verr
         .type   verr, @function
verr:
      


  verr (%eax)


    ret
         .size   verr, .-verr

    
.globl verr_constant
         .type   verr_constant, @function
verr_constant:
      


  verr (%eax)


    ret
         .size   verr_constant, .-verr_constant

    
.globl verr_allregs
         .type   verr_allregs, @function
verr_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  verr (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   verr_allregs, .-verr_allregs

    
.globl verw
         .type   verw, @function
verw:
      


  verw (%eax)


    ret
         .size   verw, .-verw

    
.globl verw_constant
         .type   verw_constant, @function
verw_constant:
      


  verw (%eax)


    ret
         .size   verw_constant, .-verw_constant

    
.globl verw_allregs
         .type   verw_allregs, @function
verw_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  verw (%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   verw_allregs, .-verw_allregs

    
.globl wait
         .type   wait, @function
wait:
      


  .byte 0x9b


    ret
         .size   wait, .-wait

    
.globl wait_constant
         .type   wait_constant, @function
wait_constant:
      


  .byte 0x9b


    ret
         .size   wait_constant, .-wait_constant

    
.globl wait_allregs
         .type   wait_allregs, @function
wait_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x9b
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   wait_allregs, .-wait_allregs

    
.globl xchg1
         .type   xchg1, @function
xchg1:
      

  mov 4096,%ax
  mov 4100,%bx
  xchg %ax,%bx
  mov %ax,8192
  mov %bx,8196
  jnc .L1140_c$
  movb $0x1,8448
.L1140_c$: nop
  jnz .L1140_z$
  movb $0x2,8449
.L1140_z$: nop
  jns .L1140_s$
  movb $0x3,8450
.L1140_s$: nop
  jnp .L1140_p$
  movb $0x4,8451
.L1140_p$: nop
  jno .L1140_o$
  movb $0x5,8452
.L1140_o$: nop

    ret
         .size   xchg1, .-xchg1

    
.globl xchg1_constant
         .type   xchg1_constant, @function
xchg1_constant:
      

  mov $1,%ax
  mov $2,%bx
  xchg %ax,%bx
  mov %ax,8192
  mov %bx,8196
  jnc .L1141_c$
  movb $0x1,8448
.L1141_c$: nop
  jnz .L1141_z$
  movb $0x2,8449
.L1141_z$: nop
  jns .L1141_s$
  movb $0x3,8450
.L1141_s$: nop
  jnp .L1141_p$
  movb $0x4,8451
.L1141_p$: nop
  jno .L1141_o$
  movb $0x5,8452
.L1141_o$: nop

    ret
         .size   xchg1_constant, .-xchg1_constant

    
.globl xchg1_allregs
         .type   xchg1_allregs, @function
xchg1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  xchg %ax,%bx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   xchg1_allregs, .-xchg1_allregs

    
.globl xchg2
         .type   xchg2, @function
xchg2:
      

  mov 4096,%eax
  mov 4100,%ebx
  xchg %eax,%ebx
  mov %eax,8192
  mov %ebx,8196
  jnc .L1142_c$
  movb $0x1,8448
.L1142_c$: nop
  jnz .L1142_z$
  movb $0x2,8449
.L1142_z$: nop
  jns .L1142_s$
  movb $0x3,8450
.L1142_s$: nop
  jnp .L1142_p$
  movb $0x4,8451
.L1142_p$: nop
  jno .L1142_o$
  movb $0x5,8452
.L1142_o$: nop

    ret
         .size   xchg2, .-xchg2

    
.globl xchg2_constant
         .type   xchg2_constant, @function
xchg2_constant:
      

  mov $1,%eax
  mov $2,%ebx
  xchg %eax,%ebx
  mov %eax,8192
  mov %ebx,8196
  jnc .L1143_c$
  movb $0x1,8448
.L1143_c$: nop
  jnz .L1143_z$
  movb $0x2,8449
.L1143_z$: nop
  jns .L1143_s$
  movb $0x3,8450
.L1143_s$: nop
  jnp .L1143_p$
  movb $0x4,8451
.L1143_p$: nop
  jno .L1143_o$
  movb $0x5,8452
.L1143_o$: nop

    ret
         .size   xchg2_constant, .-xchg2_constant

    
.globl xchg2_allregs
         .type   xchg2_allregs, @function
xchg2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  xchg %eax,%ebx
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   xchg2_allregs, .-xchg2_allregs

    
.globl xchg3
         .type   xchg3, @function
xchg3:
      

  mov 4096,%bl
  mov 4100,%ecx
  xchg %bl,(%ecx)
  mov %bl,8192
  jnc .L1144_c$
  movb $0x1,8448
.L1144_c$: nop
  jnz .L1144_z$
  movb $0x2,8449
.L1144_z$: nop
  jns .L1144_s$
  movb $0x3,8450
.L1144_s$: nop
  jnp .L1144_p$
  movb $0x4,8451
.L1144_p$: nop
  jno .L1144_o$
  movb $0x5,8452
.L1144_o$: nop

    ret
         .size   xchg3, .-xchg3

    
.globl xchg3_constant
         .type   xchg3_constant, @function
xchg3_constant:
      

  mov $1,%bl
  mov $2,%ecx
  xchg %bl,(%ecx)
  mov %bl,8192
  jnc .L1145_c$
  movb $0x1,8448
.L1145_c$: nop
  jnz .L1145_z$
  movb $0x2,8449
.L1145_z$: nop
  jns .L1145_s$
  movb $0x3,8450
.L1145_s$: nop
  jnp .L1145_p$
  movb $0x4,8451
.L1145_p$: nop
  jno .L1145_o$
  movb $0x5,8452
.L1145_o$: nop

    ret
         .size   xchg3_constant, .-xchg3_constant

    
.globl xchg3_allregs
         .type   xchg3_allregs, @function
xchg3_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  xchg %bl,(%ecx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   xchg3_allregs, .-xchg3_allregs

    
.globl xchg4
         .type   xchg4, @function
xchg4:
      

  mov 4096,%bx
  mov 4100,%ecx
  xchg %bx,(%ecx)
  mov %bx,8192
  jnc .L1146_c$
  movb $0x1,8448
.L1146_c$: nop
  jnz .L1146_z$
  movb $0x2,8449
.L1146_z$: nop
  jns .L1146_s$
  movb $0x3,8450
.L1146_s$: nop
  jnp .L1146_p$
  movb $0x4,8451
.L1146_p$: nop
  jno .L1146_o$
  movb $0x5,8452
.L1146_o$: nop

    ret
         .size   xchg4, .-xchg4

    
.globl xchg4_constant
         .type   xchg4_constant, @function
xchg4_constant:
      

  mov $1,%bx
  mov $2,%ecx
  xchg %bx,(%ecx)
  mov %bx,8192
  jnc .L1147_c$
  movb $0x1,8448
.L1147_c$: nop
  jnz .L1147_z$
  movb $0x2,8449
.L1147_z$: nop
  jns .L1147_s$
  movb $0x3,8450
.L1147_s$: nop
  jnp .L1147_p$
  movb $0x4,8451
.L1147_p$: nop
  jno .L1147_o$
  movb $0x5,8452
.L1147_o$: nop

    ret
         .size   xchg4_constant, .-xchg4_constant

    
.globl xchg4_allregs
         .type   xchg4_allregs, @function
xchg4_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  xchg %bx,(%ecx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   xchg4_allregs, .-xchg4_allregs

    
.globl xchg5
         .type   xchg5, @function
xchg5:
      

  mov 4096,%ebx
  mov 4100,%ecx
  xchg %ebx,(%ecx)
  mov %ebx,8192
  jnc .L1148_c$
  movb $0x1,8448
.L1148_c$: nop
  jnz .L1148_z$
  movb $0x2,8449
.L1148_z$: nop
  jns .L1148_s$
  movb $0x3,8450
.L1148_s$: nop
  jnp .L1148_p$
  movb $0x4,8451
.L1148_p$: nop
  jno .L1148_o$
  movb $0x5,8452
.L1148_o$: nop

    ret
         .size   xchg5, .-xchg5

    
.globl xchg5_constant
         .type   xchg5_constant, @function
xchg5_constant:
      

  mov $1,%ebx
  mov $2,%ecx
  xchg %ebx,(%ecx)
  mov %ebx,8192
  jnc .L1149_c$
  movb $0x1,8448
.L1149_c$: nop
  jnz .L1149_z$
  movb $0x2,8449
.L1149_z$: nop
  jns .L1149_s$
  movb $0x3,8450
.L1149_s$: nop
  jnp .L1149_p$
  movb $0x4,8451
.L1149_p$: nop
  jno .L1149_o$
  movb $0x5,8452
.L1149_o$: nop

    ret
         .size   xchg5_constant, .-xchg5_constant

    
.globl xchg5_allregs
         .type   xchg5_allregs, @function
xchg5_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  xchg %ebx,(%ecx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   xchg5_allregs, .-xchg5_allregs

    
.globl xchg_locked
         .type   xchg_locked, @function
xchg_locked:
      


  lock xchg %ebx,(%ecx)


    ret
         .size   xchg_locked, .-xchg_locked

    
.globl xchg_locked_constant
         .type   xchg_locked_constant, @function
xchg_locked_constant:
      


  lock xchg %ebx,(%ecx)


    ret
         .size   xchg_locked_constant, .-xchg_locked_constant

    
.globl xchg_locked_allregs
         .type   xchg_locked_allregs, @function
xchg_locked_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  lock xchg %ebx,(%ecx)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   xchg_locked_allregs, .-xchg_locked_allregs

    
.globl xlat1
         .type   xlat1, @function
xlat1:
      


  .byte 0xd7


    ret
         .size   xlat1, .-xlat1

    
.globl xlat1_constant
         .type   xlat1_constant, @function
xlat1_constant:
      


  .byte 0xd7


    ret
         .size   xlat1_constant, .-xlat1_constant

    
.globl xlat1_allregs
         .type   xlat1_allregs, @function
xlat1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0xd7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   xlat1_allregs, .-xlat1_allregs

    
.globl xlat2
         .type   xlat2, @function
xlat2:
      


  .byte 0x67,0xd7


    ret
         .size   xlat2, .-xlat2

    
.globl xlat2_constant
         .type   xlat2_constant, @function
xlat2_constant:
      


  .byte 0x67,0xd7


    ret
         .size   xlat2_constant, .-xlat2_constant

    
.globl xlat2_allregs
         .type   xlat2_allregs, @function
xlat2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x67,0xd7
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   xlat2_allregs, .-xlat2_allregs

    
.globl xor1
         .type   xor1, @function
xor1:
      

  mov 4096,%al
  .byte 0x34,0x02
  mov %al,8192
  jnc .L1150_c$
  movb $0x1,8448
.L1150_c$: nop
  jnz .L1150_z$
  movb $0x2,8449
.L1150_z$: nop
  jns .L1150_s$
  movb $0x3,8450
.L1150_s$: nop
  jnp .L1150_p$
  movb $0x4,8451
.L1150_p$: nop
  jno .L1150_o$
  movb $0x5,8452
.L1150_o$: nop

    ret
         .size   xor1, .-xor1

    
.globl xor1_constant
         .type   xor1_constant, @function
xor1_constant:
      

  mov $1,%al
  .byte 0x34,0x02
  mov %al,8192
  jnc .L1151_c$
  movb $0x1,8448
.L1151_c$: nop
  jnz .L1151_z$
  movb $0x2,8449
.L1151_z$: nop
  jns .L1151_s$
  movb $0x3,8450
.L1151_s$: nop
  jnp .L1151_p$
  movb $0x4,8451
.L1151_p$: nop
  jno .L1151_o$
  movb $0x5,8452
.L1151_o$: nop

    ret
         .size   xor1_constant, .-xor1_constant

    
.globl xor1_allregs
         .type   xor1_allregs, @function
xor1_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x34,0x02
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   xor1_allregs, .-xor1_allregs

    
.globl xor2
         .type   xor2, @function
xor2:
      

  mov 4096,%al
  .byte 0x34,0xfe
  mov %al,8192
  jnc .L1152_c$
  movb $0x1,8448
.L1152_c$: nop
  jnz .L1152_z$
  movb $0x2,8449
.L1152_z$: nop
  jns .L1152_s$
  movb $0x3,8450
.L1152_s$: nop
  jnp .L1152_p$
  movb $0x4,8451
.L1152_p$: nop
  jno .L1152_o$
  movb $0x5,8452
.L1152_o$: nop

    ret
         .size   xor2, .-xor2

    
.globl xor2_constant
         .type   xor2_constant, @function
xor2_constant:
      

  mov $1,%al
  .byte 0x34,0xfe
  mov %al,8192
  jnc .L1153_c$
  movb $0x1,8448
.L1153_c$: nop
  jnz .L1153_z$
  movb $0x2,8449
.L1153_z$: nop
  jns .L1153_s$
  movb $0x3,8450
.L1153_s$: nop
  jnp .L1153_p$
  movb $0x4,8451
.L1153_p$: nop
  jno .L1153_o$
  movb $0x5,8452
.L1153_o$: nop

    ret
         .size   xor2_constant, .-xor2_constant

    
.globl xor2_allregs
         .type   xor2_allregs, @function
xor2_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x34,0xfe
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   xor2_allregs, .-xor2_allregs

    
.globl xor3
         .type   xor3, @function
xor3:
      

  mov 4096,%ax
  .byte 0x66,0x35,0x02,0x00
  mov %ax,8192
  jnc .L1154_c$
  movb $0x1,8448
.L1154_c$: nop
  jnz .L1154_z$
  movb $0x2,8449
.L1154_z$: nop
  jns .L1154_s$
  movb $0x3,8450
.L1154_s$: nop
  jnp .L1154_p$
  movb $0x4,8451
.L1154_p$: nop
  jno .L1154_o$
  movb $0x5,8452
.L1154_o$: nop

    ret
         .size   xor3, .-xor3

    
.globl xor3_constant
         .type   xor3_constant, @function
xor3_constant:
      

  mov $1,%ax
  .byte 0x66,0x35,0x02,0x00
  mov %ax,8192
  jnc .L1155_c$
  movb $0x1,8448
.L1155_c$: nop
  jnz .L1155_z$
  movb $0x2,8449
.L1155_z$: nop
  jns .L1155_s$
  movb $0x3,8450
.L1155_s$: nop
  jnp .L1155_p$
  movb $0x4,8451
.L1155_p$: nop
  jno .L1155_o$
  movb $0x5,8452
.L1155_o$: nop

    ret
         .size   xor3_constant, .-xor3_constant

    
.globl xor3_allregs
         .type   xor3_allregs, @function
xor3_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0x35,0x02,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   xor3_allregs, .-xor3_allregs

    
.globl xor4
         .type   xor4, @function
xor4:
      

  mov 4096,%ax
  .byte 0x66,0x35,0xfe,0xff
  mov %ax,8192
  jnc .L1156_c$
  movb $0x1,8448
.L1156_c$: nop
  jnz .L1156_z$
  movb $0x2,8449
.L1156_z$: nop
  jns .L1156_s$
  movb $0x3,8450
.L1156_s$: nop
  jnp .L1156_p$
  movb $0x4,8451
.L1156_p$: nop
  jno .L1156_o$
  movb $0x5,8452
.L1156_o$: nop

    ret
         .size   xor4, .-xor4

    
.globl xor4_constant
         .type   xor4_constant, @function
xor4_constant:
      

  mov $1,%ax
  .byte 0x66,0x35,0xfe,0xff
  mov %ax,8192
  jnc .L1157_c$
  movb $0x1,8448
.L1157_c$: nop
  jnz .L1157_z$
  movb $0x2,8449
.L1157_z$: nop
  jns .L1157_s$
  movb $0x3,8450
.L1157_s$: nop
  jnp .L1157_p$
  movb $0x4,8451
.L1157_p$: nop
  jno .L1157_o$
  movb $0x5,8452
.L1157_o$: nop

    ret
         .size   xor4_constant, .-xor4_constant

    
.globl xor4_allregs
         .type   xor4_allregs, @function
xor4_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x66,0x35,0xfe,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   xor4_allregs, .-xor4_allregs

    
.globl xor5
         .type   xor5, @function
xor5:
      

  mov 4096,%eax
  .byte 0x35,0x02,0x00,0x00,0x00
  mov %eax,8192
  jnc .L1158_c$
  movb $0x1,8448
.L1158_c$: nop
  jnz .L1158_z$
  movb $0x2,8449
.L1158_z$: nop
  jns .L1158_s$
  movb $0x3,8450
.L1158_s$: nop
  jnp .L1158_p$
  movb $0x4,8451
.L1158_p$: nop
  jno .L1158_o$
  movb $0x5,8452
.L1158_o$: nop

    ret
         .size   xor5, .-xor5

    
.globl xor5_constant
         .type   xor5_constant, @function
xor5_constant:
      

  mov $1,%eax
  .byte 0x35,0x02,0x00,0x00,0x00
  mov %eax,8192
  jnc .L1159_c$
  movb $0x1,8448
.L1159_c$: nop
  jnz .L1159_z$
  movb $0x2,8449
.L1159_z$: nop
  jns .L1159_s$
  movb $0x3,8450
.L1159_s$: nop
  jnp .L1159_p$
  movb $0x4,8451
.L1159_p$: nop
  jno .L1159_o$
  movb $0x5,8452
.L1159_o$: nop

    ret
         .size   xor5_constant, .-xor5_constant

    
.globl xor5_allregs
         .type   xor5_allregs, @function
xor5_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x35,0x02,0x00,0x00,0x00
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   xor5_allregs, .-xor5_allregs

    
.globl xor6
         .type   xor6, @function
xor6:
      

  mov 4096,%eax
  .byte 0x35,0xfe,0xff,0xff,0xff
  mov %eax,8192
  jnc .L1160_c$
  movb $0x1,8448
.L1160_c$: nop
  jnz .L1160_z$
  movb $0x2,8449
.L1160_z$: nop
  jns .L1160_s$
  movb $0x3,8450
.L1160_s$: nop
  jnp .L1160_p$
  movb $0x4,8451
.L1160_p$: nop
  jno .L1160_o$
  movb $0x5,8452
.L1160_o$: nop

    ret
         .size   xor6, .-xor6

    
.globl xor6_constant
         .type   xor6_constant, @function
xor6_constant:
      

  mov $1,%eax
  .byte 0x35,0xfe,0xff,0xff,0xff
  mov %eax,8192
  jnc .L1161_c$
  movb $0x1,8448
.L1161_c$: nop
  jnz .L1161_z$
  movb $0x2,8449
.L1161_z$: nop
  jns .L1161_s$
  movb $0x3,8450
.L1161_s$: nop
  jnp .L1161_p$
  movb $0x4,8451
.L1161_p$: nop
  jno .L1161_o$
  movb $0x5,8452
.L1161_o$: nop

    ret
         .size   xor6_constant, .-xor6_constant

    
.globl xor6_allregs
         .type   xor6_allregs, @function
xor6_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  .byte 0x35,0xfe,0xff,0xff,0xff
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   xor6_allregs, .-xor6_allregs

    
.globl xor7
         .type   xor7, @function
xor7:
      

  mov 4096,%eax
  mov 4100,%ebp
  xorl 8(%ebp), %eax
  mov %eax,8192
  jnc .L1162_c$
  movb $0x1,8448
.L1162_c$: nop
  jnz .L1162_z$
  movb $0x2,8449
.L1162_z$: nop
  jns .L1162_s$
  movb $0x3,8450
.L1162_s$: nop
  jnp .L1162_p$
  movb $0x4,8451
.L1162_p$: nop
  jno .L1162_o$
  movb $0x5,8452
.L1162_o$: nop

    ret
         .size   xor7, .-xor7

    
.globl xor7_constant
         .type   xor7_constant, @function
xor7_constant:
      

  mov $1,%eax
  mov $2,%ebp
  xorl 8(%ebp), %eax
  mov %eax,8192
  jnc .L1163_c$
  movb $0x1,8448
.L1163_c$: nop
  jnz .L1163_z$
  movb $0x2,8449
.L1163_z$: nop
  jns .L1163_s$
  movb $0x3,8450
.L1163_s$: nop
  jnp .L1163_p$
  movb $0x4,8451
.L1163_p$: nop
  jno .L1163_o$
  movb $0x5,8452
.L1163_o$: nop

    ret
         .size   xor7_constant, .-xor7_constant

    
.globl xor7_allregs
         .type   xor7_allregs, @function
xor7_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  xorl 8(%ebp), %eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   xor7_allregs, .-xor7_allregs

    
.globl xor8
         .type   xor8, @function
xor8:
      

  mov 4096,%eax
  xorl $0x02,%eax
  mov %eax,8192
  jnc .L1164_c$
  movb $0x1,8448
.L1164_c$: nop
  jnz .L1164_z$
  movb $0x2,8449
.L1164_z$: nop
  jns .L1164_s$
  movb $0x3,8450
.L1164_s$: nop
  jnp .L1164_p$
  movb $0x4,8451
.L1164_p$: nop
  jno .L1164_o$
  movb $0x5,8452
.L1164_o$: nop

    ret
         .size   xor8, .-xor8

    
.globl xor8_constant
         .type   xor8_constant, @function
xor8_constant:
      

  mov $1,%eax
  xorl $0x02,%eax
  mov %eax,8192
  jnc .L1165_c$
  movb $0x1,8448
.L1165_c$: nop
  jnz .L1165_z$
  movb $0x2,8449
.L1165_z$: nop
  jns .L1165_s$
  movb $0x3,8450
.L1165_s$: nop
  jnp .L1165_p$
  movb $0x4,8451
.L1165_p$: nop
  jno .L1165_o$
  movb $0x5,8452
.L1165_o$: nop

    ret
         .size   xor8_constant, .-xor8_constant

    
.globl xor8_allregs
         .type   xor8_allregs, @function
xor8_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  xorl $0x02,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   xor8_allregs, .-xor8_allregs

    
.globl xor9
         .type   xor9, @function
xor9:
      

  mov 4096,%eax
  xorl $0xf2,%eax
  mov %eax,8192
  jnc .L1166_c$
  movb $0x1,8448
.L1166_c$: nop
  jnz .L1166_z$
  movb $0x2,8449
.L1166_z$: nop
  jns .L1166_s$
  movb $0x3,8450
.L1166_s$: nop
  jnp .L1166_p$
  movb $0x4,8451
.L1166_p$: nop
  jno .L1166_o$
  movb $0x5,8452
.L1166_o$: nop

    ret
         .size   xor9, .-xor9

    
.globl xor9_constant
         .type   xor9_constant, @function
xor9_constant:
      

  mov $1,%eax
  xorl $0xf2,%eax
  mov %eax,8192
  jnc .L1167_c$
  movb $0x1,8448
.L1167_c$: nop
  jnz .L1167_z$
  movb $0x2,8449
.L1167_z$: nop
  jns .L1167_s$
  movb $0x3,8450
.L1167_s$: nop
  jnp .L1167_p$
  movb $0x4,8451
.L1167_p$: nop
  jno .L1167_o$
  movb $0x5,8452
.L1167_o$: nop

    ret
         .size   xor9_constant, .-xor9_constant

    
.globl xor9_allregs
         .type   xor9_allregs, @function
xor9_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  xorl $0xf2,%eax
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   xor9_allregs, .-xor9_allregs

    
.globl xor_locked
         .type   xor_locked, @function
xor_locked:
      


  lock xorl $0xf2,(%eax)


    ret
         .size   xor_locked, .-xor_locked

    
.globl xor_locked_constant
         .type   xor_locked_constant, @function
xor_locked_constant:
      


  lock xorl $0xf2,(%eax)


    ret
         .size   xor_locked_constant, .-xor_locked_constant

    
.globl xor_locked_allregs
         .type   xor_locked_allregs, @function
xor_locked_allregs:
      

  mov 4096,%eax
  mov 4100,%ebx
  mov 4104,%ecx
  mov 4108,%edx
  mov 4112,%ebp
  mov 4116,%esi
  mov 4120,%edi
  mov 4124,%esp
  lock xorl $0xf2,(%eax)
  mov %eax,8192
  mov %ebx,8196
  mov %ecx,8200
  mov %edx,8204
  mov %ebp,8208
  mov %esi,8212
  mov %edi,8216
  mov %esp,8220

    ret
         .size   xor_locked_allregs, .-xor_locked_allregs

.globl main
         .type   main, @function
main:
          call aaa_flags_clear
          call aaa_flags_clear_constant
          call aaa_flags_clear_allregs
          call aaa_flags_set1
          call aaa_flags_set1_constant
          call aaa_flags_set1_allregs
          call aaa_flags_set2
          call aaa_flags_set2_constant
          call aaa_flags_set2_allregs
          call aaa_flags_cmp
          call aaa_flags_cmp_constant
          call aaa_flags_cmp_allregs
          call aad1
          call aad1_constant
          call aad1_allregs
          call aad2
          call aad2_constant
          call aad2_allregs
          call aam1
          call aam1_constant
          call aam1_allregs
          call aam2
          call aam2_constant
          call aam2_allregs
          call aas_flags_clear
          call aas_flags_clear_constant
          call aas_flags_clear_allregs
          call aas_flags_set1
          call aas_flags_set1_constant
          call aas_flags_set1_allregs
          call aas_flags_set2
          call aas_flags_set2_constant
          call aas_flags_set2_allregs
          call aas_flags_cmp
          call aas_flags_cmp_constant
          call aas_flags_cmp_allregs
          call adc1_flags_clear
          call adc1_flags_clear_constant
          call adc1_flags_clear_allregs
          call adc1_flags_set1
          call adc1_flags_set1_constant
          call adc1_flags_set1_allregs
          call adc1_flags_set2
          call adc1_flags_set2_constant
          call adc1_flags_set2_allregs
          call adc1_flags_cmp
          call adc1_flags_cmp_constant
          call adc1_flags_cmp_allregs
          call adc2_flags_clear
          call adc2_flags_clear_constant
          call adc2_flags_clear_allregs
          call adc2_flags_set1
          call adc2_flags_set1_constant
          call adc2_flags_set1_allregs
          call adc2_flags_set2
          call adc2_flags_set2_constant
          call adc2_flags_set2_allregs
          call adc2_flags_cmp
          call adc2_flags_cmp_constant
          call adc2_flags_cmp_allregs
          call adc2a_flags_clear
          call adc2a_flags_clear_constant
          call adc2a_flags_clear_allregs
          call adc2a_flags_set1
          call adc2a_flags_set1_constant
          call adc2a_flags_set1_allregs
          call adc2a_flags_set2
          call adc2a_flags_set2_constant
          call adc2a_flags_set2_allregs
          call adc2a_flags_cmp
          call adc2a_flags_cmp_constant
          call adc2a_flags_cmp_allregs
          call adc3_flags_clear
          call adc3_flags_clear_constant
          call adc3_flags_clear_allregs
          call adc3_flags_set1
          call adc3_flags_set1_constant
          call adc3_flags_set1_allregs
          call adc3_flags_set2
          call adc3_flags_set2_constant
          call adc3_flags_set2_allregs
          call adc3_flags_cmp
          call adc3_flags_cmp_constant
          call adc3_flags_cmp_allregs
          call adc3a_flags_clear
          call adc3a_flags_clear_constant
          call adc3a_flags_clear_allregs
          call adc3a_flags_set1
          call adc3a_flags_set1_constant
          call adc3a_flags_set1_allregs
          call adc3a_flags_set2
          call adc3a_flags_set2_constant
          call adc3a_flags_set2_allregs
          call adc3a_flags_cmp
          call adc3a_flags_cmp_constant
          call adc3a_flags_cmp_allregs
          call adc4_flags_clear
          call adc4_flags_clear_constant
          call adc4_flags_clear_allregs
          call adc4_flags_set1
          call adc4_flags_set1_constant
          call adc4_flags_set1_allregs
          call adc4_flags_set2
          call adc4_flags_set2_constant
          call adc4_flags_set2_allregs
          call adc4_flags_cmp
          call adc4_flags_cmp_constant
          call adc4_flags_cmp_allregs
          call adc_locked
          call adc_locked_constant
          call adc_locked_allregs
          call add1
          call add1_constant
          call add1_allregs
          call add2
          call add2_constant
          call add2_allregs
          call add3
          call add3_constant
          call add3_allregs
          call add4
          call add4_constant
          call add4_allregs
          call add5
          call add5_constant
          call add5_allregs
          call add6
          call add6_constant
          call add6_allregs
          call add7
          call add7_constant
          call add7_allregs
          call add_locked
          call add_locked_constant
          call add_locked_allregs
          call and1
          call and1_constant
          call and1_allregs
          call and2
          call and2_constant
          call and2_allregs
          call and3
          call and3_constant
          call and3_allregs
          call and4
          call and4_constant
          call and4_allregs
          call and5
          call and5_constant
          call and5_allregs
          call and6
          call and6_constant
          call and6_allregs
          call and7
          call and7_constant
          call and7_allregs
          call and_locked
          call and_locked_constant
          call and_locked_allregs
          call arpl
          call arpl_constant
          call arpl_allregs
          call bound1
          call bound1_constant
          call bound1_allregs
          call bound2
          call bound2_constant
          call bound2_allregs
          call bsf1
          call bsf1_constant
          call bsf1_allregs
          call bsf2
          call bsf2_constant
          call bsf2_allregs
          call bsf3
          call bsf3_constant
          call bsf3_allregs
          call bsf4
          call bsf4_constant
          call bsf4_allregs
          call bsr1
          call bsr1_constant
          call bsr1_allregs
          call bsr2
          call bsr2_constant
          call bsr2_allregs
          call bsr3
          call bsr3_constant
          call bsr3_allregs
          call bsr4
          call bsr4_constant
          call bsr4_allregs
          call bt1
          call bt1_constant
          call bt1_allregs
          call bt2
          call bt2_constant
          call bt2_allregs
          call bt3
          call bt3_constant
          call bt3_allregs
          call bt4
          call bt4_constant
          call bt4_allregs
          call bt5
          call bt5_constant
          call bt5_allregs
          call btc1
          call btc1_constant
          call btc1_allregs
          call btc2
          call btc2_constant
          call btc2_allregs
          call btc3
          call btc3_constant
          call btc3_allregs
          call btc4
          call btc4_constant
          call btc4_allregs
          call btc5
          call btc5_constant
          call btc5_allregs
          call btc_locked
          call btc_locked_constant
          call btc_locked_allregs
          call btr1
          call btr1_constant
          call btr1_allregs
          call btr2
          call btr2_constant
          call btr2_allregs
          call btr3
          call btr3_constant
          call btr3_allregs
          call btr4
          call btr4_constant
          call btr4_allregs
          call btr5
          call btr5_constant
          call btr5_allregs
          call btr_locked
          call btr_locked_constant
          call btr_locked_allregs
          call bts1
          call bts1_constant
          call bts1_allregs
          call bts2
          call bts2_constant
          call bts2_allregs
          call bts3
          call bts3_constant
          call bts3_allregs
          call bts4
          call bts4_constant
          call bts4_allregs
          call bts5
          call bts5_constant
          call bts5_allregs
          call bts_locked
          call bts_locked_constant
          call bts_locked_allregs
          call call1
          call call1_constant
          call call1_allregs
          call call2
          call call2_constant
          call call2_allregs
          call call3
          call call3_constant
          call call3_allregs
          call call5
          call call5_constant
          call call5_allregs
          call call6
          call call6_constant
          call call6_allregs
          call cbw1
          call cbw1_constant
          call cbw1_allregs
          call cbw2
          call cbw2_constant
          call cbw2_allregs
          call clc_flags_clear
          call clc_flags_clear_constant
          call clc_flags_clear_allregs
          call clc_flags_set1
          call clc_flags_set1_constant
          call clc_flags_set1_allregs
          call clc_flags_set2
          call clc_flags_set2_constant
          call clc_flags_set2_allregs
          call clc_flags_cmp
          call clc_flags_cmp_constant
          call clc_flags_cmp_allregs
          call cld
          call cld_constant
          call cld_allregs
          call cli
          call cli_constant
          call cli_allregs
          call clts
          call clts_constant
          call clts_allregs
          call cmc_flags_clear
          call cmc_flags_clear_constant
          call cmc_flags_clear_allregs
          call cmc_flags_set1
          call cmc_flags_set1_constant
          call cmc_flags_set1_allregs
          call cmc_flags_set2
          call cmc_flags_set2_constant
          call cmc_flags_set2_allregs
          call cmc_flags_cmp
          call cmc_flags_cmp_constant
          call cmc_flags_cmp_allregs
          call cmp1
          call cmp1_constant
          call cmp1_allregs
          call cmp2
          call cmp2_constant
          call cmp2_allregs
          call cmp3
          call cmp3_constant
          call cmp3_allregs
          call cmp4
          call cmp4_constant
          call cmp4_allregs
          call cmp5
          call cmp5_constant
          call cmp5_allregs
          call cmp6
          call cmp6_constant
          call cmp6_allregs
          call cmp7
          call cmp7_constant
          call cmp7_allregs
          call cmp8
          call cmp8_constant
          call cmp8_allregs
          call cmps1
          call cmps1_constant
          call cmps1_allregs
          call cmps2
          call cmps2_constant
          call cmps2_allregs
          call cmps3
          call cmps3_constant
          call cmps3_allregs
          call cmps4
          call cmps4_constant
          call cmps4_allregs
          call cmps5
          call cmps5_constant
          call cmps5_allregs
          call cmps6
          call cmps6_constant
          call cmps6_allregs
          call cmps_seg
          call cmps_seg_constant
          call cmps_seg_allregs
          call cwd1
          call cwd1_constant
          call cwd1_allregs
          call cwd2
          call cwd2_constant
          call cwd2_allregs
          call daa_flags_clear
          call daa_flags_clear_constant
          call daa_flags_clear_allregs
          call daa_flags_set1
          call daa_flags_set1_constant
          call daa_flags_set1_allregs
          call daa_flags_set2
          call daa_flags_set2_constant
          call daa_flags_set2_allregs
          call daa_flags_cmp
          call daa_flags_cmp_constant
          call daa_flags_cmp_allregs
          call das_flags_clear
          call das_flags_clear_constant
          call das_flags_clear_allregs
          call das_flags_set1
          call das_flags_set1_constant
          call das_flags_set1_allregs
          call das_flags_set2
          call das_flags_set2_constant
          call das_flags_set2_allregs
          call das_flags_cmp
          call das_flags_cmp_constant
          call das_flags_cmp_allregs
          call dec1
          call dec1_constant
          call dec1_allregs
          call dec2
          call dec2_constant
          call dec2_allregs
          call dec3
          call dec3_constant
          call dec3_allregs
          call dec4
          call dec4_constant
          call dec4_allregs
          call dec5b
          call dec5b_constant
          call dec5b_allregs
          call dec5w
          call dec5w_constant
          call dec5w_allregs
          call dec5l
          call dec5l_constant
          call dec5l_allregs
          call dec_locked
          call dec_locked_constant
          call dec_locked_allregs
          call div1
          call div1_constant
          call div1_allregs
          call div2
          call div2_constant
          call div2_allregs
          call div3
          call div3_constant
          call div3_allregs
          call div4
          call div4_constant
          call div4_allregs
          call div5
          call div5_constant
          call div5_allregs
          call enter1
          call enter1_constant
          call enter1_allregs
          call enter2
          call enter2_constant
          call enter2_allregs
          call enter3
          call enter3_constant
          call enter3_allregs
          call hlt
          call hlt_constant
          call hlt_allregs
          call idiv1
          call idiv1_constant
          call idiv1_allregs
          call idiv2
          call idiv2_constant
          call idiv2_allregs
          call idiv3
          call idiv3_constant
          call idiv3_allregs
          call imul_one_op1
          call imul_one_op1_constant
          call imul_one_op1_allregs
          call imul_one_op2
          call imul_one_op2_constant
          call imul_one_op2_allregs
          call imul_one_op3
          call imul_one_op3_constant
          call imul_one_op3_allregs
          call imul_one_op4
          call imul_one_op4_constant
          call imul_one_op4_allregs
          call imul_two_op1
          call imul_two_op1_constant
          call imul_two_op1_allregs
          call imul_two_op2
          call imul_two_op2_constant
          call imul_two_op2_allregs
          call imul_two_op3
          call imul_two_op3_constant
          call imul_two_op3_allregs
          call imul_three_op1
          call imul_three_op1_constant
          call imul_three_op1_allregs
          call imul_three_op2
          call imul_three_op2_constant
          call imul_three_op2_allregs
          call imul_three_op3
          call imul_three_op3_constant
          call imul_three_op3_allregs
          call in1
          call in1_constant
          call in1_allregs
          call in2
          call in2_constant
          call in2_allregs
          call in3
          call in3_constant
          call in3_allregs
          call in4
          call in4_constant
          call in4_allregs
          call in5
          call in5_constant
          call in5_allregs
          call in6
          call in6_constant
          call in6_allregs
          call inc1
          call inc1_constant
          call inc1_allregs
          call inc2
          call inc2_constant
          call inc2_allregs
          call inc3
          call inc3_constant
          call inc3_allregs
          call inc4
          call inc4_constant
          call inc4_allregs
          call inc5b
          call inc5b_constant
          call inc5b_allregs
          call inc5w
          call inc5w_constant
          call inc5w_allregs
          call inc5l
          call inc5l_constant
          call inc5l_allregs
          call inc_locked
          call inc_locked_constant
          call inc_locked_allregs
          call ins1_cld
          call ins1_cld_constant
          call ins1_cld_allregs
          call ins1_std
          call ins1_std_constant
          call ins1_std_allregs
          call ins1
          call ins1_constant
          call ins1_allregs
          call ins2_cld
          call ins2_cld_constant
          call ins2_cld_allregs
          call ins2_std
          call ins2_std_constant
          call ins2_std_allregs
          call ins2
          call ins2_constant
          call ins2_allregs
          call ins3_cld
          call ins3_cld_constant
          call ins3_cld_allregs
          call ins3_std
          call ins3_std_constant
          call ins3_std_allregs
          call ins3
          call ins3_constant
          call ins3_allregs
          call int1
          call int1_constant
          call int1_allregs
          call int2
          call int2_constant
          call int2_allregs
          call int3
          call int3_constant
          call int3_allregs
          call iret1
          call iret1_constant
          call iret1_allregs
          call iret2
          call iret2_constant
          call iret2_allregs
          call jcc_short_with_code_0_flags_clear
          call jcc_short_with_code_0_flags_clear_constant
          call jcc_short_with_code_0_flags_clear_allregs
          call jcc_short_with_code_0_flags_set1
          call jcc_short_with_code_0_flags_set1_constant
          call jcc_short_with_code_0_flags_set1_allregs
          call jcc_short_with_code_0_flags_set2
          call jcc_short_with_code_0_flags_set2_constant
          call jcc_short_with_code_0_flags_set2_allregs
          call jcc_short_with_code_0_flags_cmp
          call jcc_short_with_code_0_flags_cmp_constant
          call jcc_short_with_code_0_flags_cmp_allregs
          call jcc_short_with_code_1_flags_clear
          call jcc_short_with_code_1_flags_clear_constant
          call jcc_short_with_code_1_flags_clear_allregs
          call jcc_short_with_code_1_flags_set1
          call jcc_short_with_code_1_flags_set1_constant
          call jcc_short_with_code_1_flags_set1_allregs
          call jcc_short_with_code_1_flags_set2
          call jcc_short_with_code_1_flags_set2_constant
          call jcc_short_with_code_1_flags_set2_allregs
          call jcc_short_with_code_1_flags_cmp
          call jcc_short_with_code_1_flags_cmp_constant
          call jcc_short_with_code_1_flags_cmp_allregs
          call jcc_short_with_code_2_flags_clear
          call jcc_short_with_code_2_flags_clear_constant
          call jcc_short_with_code_2_flags_clear_allregs
          call jcc_short_with_code_2_flags_set1
          call jcc_short_with_code_2_flags_set1_constant
          call jcc_short_with_code_2_flags_set1_allregs
          call jcc_short_with_code_2_flags_set2
          call jcc_short_with_code_2_flags_set2_constant
          call jcc_short_with_code_2_flags_set2_allregs
          call jcc_short_with_code_2_flags_cmp
          call jcc_short_with_code_2_flags_cmp_constant
          call jcc_short_with_code_2_flags_cmp_allregs
          call jcc_short_with_code_3_flags_clear
          call jcc_short_with_code_3_flags_clear_constant
          call jcc_short_with_code_3_flags_clear_allregs
          call jcc_short_with_code_3_flags_set1
          call jcc_short_with_code_3_flags_set1_constant
          call jcc_short_with_code_3_flags_set1_allregs
          call jcc_short_with_code_3_flags_set2
          call jcc_short_with_code_3_flags_set2_constant
          call jcc_short_with_code_3_flags_set2_allregs
          call jcc_short_with_code_3_flags_cmp
          call jcc_short_with_code_3_flags_cmp_constant
          call jcc_short_with_code_3_flags_cmp_allregs
          call jcc_short_with_code_4_flags_clear
          call jcc_short_with_code_4_flags_clear_constant
          call jcc_short_with_code_4_flags_clear_allregs
          call jcc_short_with_code_4_flags_set1
          call jcc_short_with_code_4_flags_set1_constant
          call jcc_short_with_code_4_flags_set1_allregs
          call jcc_short_with_code_4_flags_set2
          call jcc_short_with_code_4_flags_set2_constant
          call jcc_short_with_code_4_flags_set2_allregs
          call jcc_short_with_code_4_flags_cmp
          call jcc_short_with_code_4_flags_cmp_constant
          call jcc_short_with_code_4_flags_cmp_allregs
          call jcc_short_with_code_5_flags_clear
          call jcc_short_with_code_5_flags_clear_constant
          call jcc_short_with_code_5_flags_clear_allregs
          call jcc_short_with_code_5_flags_set1
          call jcc_short_with_code_5_flags_set1_constant
          call jcc_short_with_code_5_flags_set1_allregs
          call jcc_short_with_code_5_flags_set2
          call jcc_short_with_code_5_flags_set2_constant
          call jcc_short_with_code_5_flags_set2_allregs
          call jcc_short_with_code_5_flags_cmp
          call jcc_short_with_code_5_flags_cmp_constant
          call jcc_short_with_code_5_flags_cmp_allregs
          call jcc_short_with_code_6_flags_clear
          call jcc_short_with_code_6_flags_clear_constant
          call jcc_short_with_code_6_flags_clear_allregs
          call jcc_short_with_code_6_flags_set1
          call jcc_short_with_code_6_flags_set1_constant
          call jcc_short_with_code_6_flags_set1_allregs
          call jcc_short_with_code_6_flags_set2
          call jcc_short_with_code_6_flags_set2_constant
          call jcc_short_with_code_6_flags_set2_allregs
          call jcc_short_with_code_6_flags_cmp
          call jcc_short_with_code_6_flags_cmp_constant
          call jcc_short_with_code_6_flags_cmp_allregs
          call jcc_short_with_code_7_flags_clear
          call jcc_short_with_code_7_flags_clear_constant
          call jcc_short_with_code_7_flags_clear_allregs
          call jcc_short_with_code_7_flags_set1
          call jcc_short_with_code_7_flags_set1_constant
          call jcc_short_with_code_7_flags_set1_allregs
          call jcc_short_with_code_7_flags_set2
          call jcc_short_with_code_7_flags_set2_constant
          call jcc_short_with_code_7_flags_set2_allregs
          call jcc_short_with_code_7_flags_cmp
          call jcc_short_with_code_7_flags_cmp_constant
          call jcc_short_with_code_7_flags_cmp_allregs
          call jcc_short_with_code_8_flags_clear
          call jcc_short_with_code_8_flags_clear_constant
          call jcc_short_with_code_8_flags_clear_allregs
          call jcc_short_with_code_8_flags_set1
          call jcc_short_with_code_8_flags_set1_constant
          call jcc_short_with_code_8_flags_set1_allregs
          call jcc_short_with_code_8_flags_set2
          call jcc_short_with_code_8_flags_set2_constant
          call jcc_short_with_code_8_flags_set2_allregs
          call jcc_short_with_code_8_flags_cmp
          call jcc_short_with_code_8_flags_cmp_constant
          call jcc_short_with_code_8_flags_cmp_allregs
          call jcc_short_with_code_9_flags_clear
          call jcc_short_with_code_9_flags_clear_constant
          call jcc_short_with_code_9_flags_clear_allregs
          call jcc_short_with_code_9_flags_set1
          call jcc_short_with_code_9_flags_set1_constant
          call jcc_short_with_code_9_flags_set1_allregs
          call jcc_short_with_code_9_flags_set2
          call jcc_short_with_code_9_flags_set2_constant
          call jcc_short_with_code_9_flags_set2_allregs
          call jcc_short_with_code_9_flags_cmp
          call jcc_short_with_code_9_flags_cmp_constant
          call jcc_short_with_code_9_flags_cmp_allregs
          call jcc_short_with_code_a_flags_clear
          call jcc_short_with_code_a_flags_clear_constant
          call jcc_short_with_code_a_flags_clear_allregs
          call jcc_short_with_code_a_flags_set1
          call jcc_short_with_code_a_flags_set1_constant
          call jcc_short_with_code_a_flags_set1_allregs
          call jcc_short_with_code_a_flags_set2
          call jcc_short_with_code_a_flags_set2_constant
          call jcc_short_with_code_a_flags_set2_allregs
          call jcc_short_with_code_a_flags_cmp
          call jcc_short_with_code_a_flags_cmp_constant
          call jcc_short_with_code_a_flags_cmp_allregs
          call jcc_short_with_code_b_flags_clear
          call jcc_short_with_code_b_flags_clear_constant
          call jcc_short_with_code_b_flags_clear_allregs
          call jcc_short_with_code_b_flags_set1
          call jcc_short_with_code_b_flags_set1_constant
          call jcc_short_with_code_b_flags_set1_allregs
          call jcc_short_with_code_b_flags_set2
          call jcc_short_with_code_b_flags_set2_constant
          call jcc_short_with_code_b_flags_set2_allregs
          call jcc_short_with_code_b_flags_cmp
          call jcc_short_with_code_b_flags_cmp_constant
          call jcc_short_with_code_b_flags_cmp_allregs
          call jcc_short_with_code_c_flags_clear
          call jcc_short_with_code_c_flags_clear_constant
          call jcc_short_with_code_c_flags_clear_allregs
          call jcc_short_with_code_c_flags_set1
          call jcc_short_with_code_c_flags_set1_constant
          call jcc_short_with_code_c_flags_set1_allregs
          call jcc_short_with_code_c_flags_set2
          call jcc_short_with_code_c_flags_set2_constant
          call jcc_short_with_code_c_flags_set2_allregs
          call jcc_short_with_code_c_flags_cmp
          call jcc_short_with_code_c_flags_cmp_constant
          call jcc_short_with_code_c_flags_cmp_allregs
          call jcc_short_with_code_d_flags_clear
          call jcc_short_with_code_d_flags_clear_constant
          call jcc_short_with_code_d_flags_clear_allregs
          call jcc_short_with_code_d_flags_set1
          call jcc_short_with_code_d_flags_set1_constant
          call jcc_short_with_code_d_flags_set1_allregs
          call jcc_short_with_code_d_flags_set2
          call jcc_short_with_code_d_flags_set2_constant
          call jcc_short_with_code_d_flags_set2_allregs
          call jcc_short_with_code_d_flags_cmp
          call jcc_short_with_code_d_flags_cmp_constant
          call jcc_short_with_code_d_flags_cmp_allregs
          call jcc_short_with_code_e_flags_clear
          call jcc_short_with_code_e_flags_clear_constant
          call jcc_short_with_code_e_flags_clear_allregs
          call jcc_short_with_code_e_flags_set1
          call jcc_short_with_code_e_flags_set1_constant
          call jcc_short_with_code_e_flags_set1_allregs
          call jcc_short_with_code_e_flags_set2
          call jcc_short_with_code_e_flags_set2_constant
          call jcc_short_with_code_e_flags_set2_allregs
          call jcc_short_with_code_e_flags_cmp
          call jcc_short_with_code_e_flags_cmp_constant
          call jcc_short_with_code_e_flags_cmp_allregs
          call jcc_short_with_code_f_flags_clear
          call jcc_short_with_code_f_flags_clear_constant
          call jcc_short_with_code_f_flags_clear_allregs
          call jcc_short_with_code_f_flags_set1
          call jcc_short_with_code_f_flags_set1_constant
          call jcc_short_with_code_f_flags_set1_allregs
          call jcc_short_with_code_f_flags_set2
          call jcc_short_with_code_f_flags_set2_constant
          call jcc_short_with_code_f_flags_set2_allregs
          call jcc_short_with_code_f_flags_cmp
          call jcc_short_with_code_f_flags_cmp_constant
          call jcc_short_with_code_f_flags_cmp_allregs
          call jcc_long_with_code_0_flags_clear
          call jcc_long_with_code_0_flags_clear_constant
          call jcc_long_with_code_0_flags_clear_allregs
          call jcc_long_with_code_0_flags_set1
          call jcc_long_with_code_0_flags_set1_constant
          call jcc_long_with_code_0_flags_set1_allregs
          call jcc_long_with_code_0_flags_set2
          call jcc_long_with_code_0_flags_set2_constant
          call jcc_long_with_code_0_flags_set2_allregs
          call jcc_long_with_code_0_flags_cmp
          call jcc_long_with_code_0_flags_cmp_constant
          call jcc_long_with_code_0_flags_cmp_allregs
          call jcc_long_with_code_1_flags_clear
          call jcc_long_with_code_1_flags_clear_constant
          call jcc_long_with_code_1_flags_clear_allregs
          call jcc_long_with_code_1_flags_set1
          call jcc_long_with_code_1_flags_set1_constant
          call jcc_long_with_code_1_flags_set1_allregs
          call jcc_long_with_code_1_flags_set2
          call jcc_long_with_code_1_flags_set2_constant
          call jcc_long_with_code_1_flags_set2_allregs
          call jcc_long_with_code_1_flags_cmp
          call jcc_long_with_code_1_flags_cmp_constant
          call jcc_long_with_code_1_flags_cmp_allregs
          call jcc_long_with_code_2_flags_clear
          call jcc_long_with_code_2_flags_clear_constant
          call jcc_long_with_code_2_flags_clear_allregs
          call jcc_long_with_code_2_flags_set1
          call jcc_long_with_code_2_flags_set1_constant
          call jcc_long_with_code_2_flags_set1_allregs
          call jcc_long_with_code_2_flags_set2
          call jcc_long_with_code_2_flags_set2_constant
          call jcc_long_with_code_2_flags_set2_allregs
          call jcc_long_with_code_2_flags_cmp
          call jcc_long_with_code_2_flags_cmp_constant
          call jcc_long_with_code_2_flags_cmp_allregs
          call jcc_long_with_code_3_flags_clear
          call jcc_long_with_code_3_flags_clear_constant
          call jcc_long_with_code_3_flags_clear_allregs
          call jcc_long_with_code_3_flags_set1
          call jcc_long_with_code_3_flags_set1_constant
          call jcc_long_with_code_3_flags_set1_allregs
          call jcc_long_with_code_3_flags_set2
          call jcc_long_with_code_3_flags_set2_constant
          call jcc_long_with_code_3_flags_set2_allregs
          call jcc_long_with_code_3_flags_cmp
          call jcc_long_with_code_3_flags_cmp_constant
          call jcc_long_with_code_3_flags_cmp_allregs
          call jcc_long_with_code_4_flags_clear
          call jcc_long_with_code_4_flags_clear_constant
          call jcc_long_with_code_4_flags_clear_allregs
          call jcc_long_with_code_4_flags_set1
          call jcc_long_with_code_4_flags_set1_constant
          call jcc_long_with_code_4_flags_set1_allregs
          call jcc_long_with_code_4_flags_set2
          call jcc_long_with_code_4_flags_set2_constant
          call jcc_long_with_code_4_flags_set2_allregs
          call jcc_long_with_code_4_flags_cmp
          call jcc_long_with_code_4_flags_cmp_constant
          call jcc_long_with_code_4_flags_cmp_allregs
          call jcc_long_with_code_5_flags_clear
          call jcc_long_with_code_5_flags_clear_constant
          call jcc_long_with_code_5_flags_clear_allregs
          call jcc_long_with_code_5_flags_set1
          call jcc_long_with_code_5_flags_set1_constant
          call jcc_long_with_code_5_flags_set1_allregs
          call jcc_long_with_code_5_flags_set2
          call jcc_long_with_code_5_flags_set2_constant
          call jcc_long_with_code_5_flags_set2_allregs
          call jcc_long_with_code_5_flags_cmp
          call jcc_long_with_code_5_flags_cmp_constant
          call jcc_long_with_code_5_flags_cmp_allregs
          call jcc_long_with_code_6_flags_clear
          call jcc_long_with_code_6_flags_clear_constant
          call jcc_long_with_code_6_flags_clear_allregs
          call jcc_long_with_code_6_flags_set1
          call jcc_long_with_code_6_flags_set1_constant
          call jcc_long_with_code_6_flags_set1_allregs
          call jcc_long_with_code_6_flags_set2
          call jcc_long_with_code_6_flags_set2_constant
          call jcc_long_with_code_6_flags_set2_allregs
          call jcc_long_with_code_6_flags_cmp
          call jcc_long_with_code_6_flags_cmp_constant
          call jcc_long_with_code_6_flags_cmp_allregs
          call jcc_long_with_code_7_flags_clear
          call jcc_long_with_code_7_flags_clear_constant
          call jcc_long_with_code_7_flags_clear_allregs
          call jcc_long_with_code_7_flags_set1
          call jcc_long_with_code_7_flags_set1_constant
          call jcc_long_with_code_7_flags_set1_allregs
          call jcc_long_with_code_7_flags_set2
          call jcc_long_with_code_7_flags_set2_constant
          call jcc_long_with_code_7_flags_set2_allregs
          call jcc_long_with_code_7_flags_cmp
          call jcc_long_with_code_7_flags_cmp_constant
          call jcc_long_with_code_7_flags_cmp_allregs
          call jcc_long_with_code_8_flags_clear
          call jcc_long_with_code_8_flags_clear_constant
          call jcc_long_with_code_8_flags_clear_allregs
          call jcc_long_with_code_8_flags_set1
          call jcc_long_with_code_8_flags_set1_constant
          call jcc_long_with_code_8_flags_set1_allregs
          call jcc_long_with_code_8_flags_set2
          call jcc_long_with_code_8_flags_set2_constant
          call jcc_long_with_code_8_flags_set2_allregs
          call jcc_long_with_code_8_flags_cmp
          call jcc_long_with_code_8_flags_cmp_constant
          call jcc_long_with_code_8_flags_cmp_allregs
          call jcc_long_with_code_9_flags_clear
          call jcc_long_with_code_9_flags_clear_constant
          call jcc_long_with_code_9_flags_clear_allregs
          call jcc_long_with_code_9_flags_set1
          call jcc_long_with_code_9_flags_set1_constant
          call jcc_long_with_code_9_flags_set1_allregs
          call jcc_long_with_code_9_flags_set2
          call jcc_long_with_code_9_flags_set2_constant
          call jcc_long_with_code_9_flags_set2_allregs
          call jcc_long_with_code_9_flags_cmp
          call jcc_long_with_code_9_flags_cmp_constant
          call jcc_long_with_code_9_flags_cmp_allregs
          call jcc_long_with_code_a_flags_clear
          call jcc_long_with_code_a_flags_clear_constant
          call jcc_long_with_code_a_flags_clear_allregs
          call jcc_long_with_code_a_flags_set1
          call jcc_long_with_code_a_flags_set1_constant
          call jcc_long_with_code_a_flags_set1_allregs
          call jcc_long_with_code_a_flags_set2
          call jcc_long_with_code_a_flags_set2_constant
          call jcc_long_with_code_a_flags_set2_allregs
          call jcc_long_with_code_a_flags_cmp
          call jcc_long_with_code_a_flags_cmp_constant
          call jcc_long_with_code_a_flags_cmp_allregs
          call jcc_long_with_code_b_flags_clear
          call jcc_long_with_code_b_flags_clear_constant
          call jcc_long_with_code_b_flags_clear_allregs
          call jcc_long_with_code_b_flags_set1
          call jcc_long_with_code_b_flags_set1_constant
          call jcc_long_with_code_b_flags_set1_allregs
          call jcc_long_with_code_b_flags_set2
          call jcc_long_with_code_b_flags_set2_constant
          call jcc_long_with_code_b_flags_set2_allregs
          call jcc_long_with_code_b_flags_cmp
          call jcc_long_with_code_b_flags_cmp_constant
          call jcc_long_with_code_b_flags_cmp_allregs
          call jcc_long_with_code_c_flags_clear
          call jcc_long_with_code_c_flags_clear_constant
          call jcc_long_with_code_c_flags_clear_allregs
          call jcc_long_with_code_c_flags_set1
          call jcc_long_with_code_c_flags_set1_constant
          call jcc_long_with_code_c_flags_set1_allregs
          call jcc_long_with_code_c_flags_set2
          call jcc_long_with_code_c_flags_set2_constant
          call jcc_long_with_code_c_flags_set2_allregs
          call jcc_long_with_code_c_flags_cmp
          call jcc_long_with_code_c_flags_cmp_constant
          call jcc_long_with_code_c_flags_cmp_allregs
          call jcc_long_with_code_d_flags_clear
          call jcc_long_with_code_d_flags_clear_constant
          call jcc_long_with_code_d_flags_clear_allregs
          call jcc_long_with_code_d_flags_set1
          call jcc_long_with_code_d_flags_set1_constant
          call jcc_long_with_code_d_flags_set1_allregs
          call jcc_long_with_code_d_flags_set2
          call jcc_long_with_code_d_flags_set2_constant
          call jcc_long_with_code_d_flags_set2_allregs
          call jcc_long_with_code_d_flags_cmp
          call jcc_long_with_code_d_flags_cmp_constant
          call jcc_long_with_code_d_flags_cmp_allregs
          call jcc_long_with_code_e_flags_clear
          call jcc_long_with_code_e_flags_clear_constant
          call jcc_long_with_code_e_flags_clear_allregs
          call jcc_long_with_code_e_flags_set1
          call jcc_long_with_code_e_flags_set1_constant
          call jcc_long_with_code_e_flags_set1_allregs
          call jcc_long_with_code_e_flags_set2
          call jcc_long_with_code_e_flags_set2_constant
          call jcc_long_with_code_e_flags_set2_allregs
          call jcc_long_with_code_e_flags_cmp
          call jcc_long_with_code_e_flags_cmp_constant
          call jcc_long_with_code_e_flags_cmp_allregs
          call jcc_long_with_code_f_flags_clear
          call jcc_long_with_code_f_flags_clear_constant
          call jcc_long_with_code_f_flags_clear_allregs
          call jcc_long_with_code_f_flags_set1
          call jcc_long_with_code_f_flags_set1_constant
          call jcc_long_with_code_f_flags_set1_allregs
          call jcc_long_with_code_f_flags_set2
          call jcc_long_with_code_f_flags_set2_constant
          call jcc_long_with_code_f_flags_set2_allregs
          call jcc_long_with_code_f_flags_cmp
          call jcc_long_with_code_f_flags_cmp_constant
          call jcc_long_with_code_f_flags_cmp_allregs
          call jcxz
          call jcxz_constant
          call jcxz_allregs
          call jecxz
          call jecxz_constant
          call jecxz_allregs
          call jmp1
          call jmp1_constant
          call jmp1_allregs
          call jmp2
          call jmp2_constant
          call jmp2_allregs
          call jmp3
          call jmp3_constant
          call jmp3_allregs
          call lahf_flags_clear
          call lahf_flags_clear_constant
          call lahf_flags_clear_allregs
          call lahf_flags_set1
          call lahf_flags_set1_constant
          call lahf_flags_set1_allregs
          call lahf_flags_set2
          call lahf_flags_set2_constant
          call lahf_flags_set2_allregs
          call lahf_flags_cmp
          call lahf_flags_cmp_constant
          call lahf_flags_cmp_allregs
          call lar
          call lar_constant
          call lar_allregs
          call lea1
          call lea1_constant
          call lea1_allregs
          call lea2
          call lea2_constant
          call lea2_allregs
          call leave1
          call leave1_constant
          call leave1_allregs
          call leave2
          call leave2_constant
          call leave2_allregs
          call lgdtl
          call lgdtl_constant
          call lgdtl_allregs
          call lidtl
          call lidtl_constant
          call lidtl_allregs
          call lds1
          call lds1_constant
          call lds1_allregs
          call lds2
          call lds2_constant
          call lds2_allregs
          call les1
          call les1_constant
          call les1_allregs
          call les2
          call les2_constant
          call les2_allregs
          call lfs1
          call lfs1_constant
          call lfs1_allregs
          call lfs2
          call lfs2_constant
          call lfs2_allregs
          call lgs1
          call lgs1_constant
          call lgs1_allregs
          call lgs2
          call lgs2_constant
          call lgs2_allregs
          call lss1
          call lss1_constant
          call lss1_allregs
          call lss2
          call lss2_constant
          call lss2_allregs
          call lldt
          call lldt_constant
          call lldt_allregs
          call lmsw
          call lmsw_constant
          call lmsw_allregs
          call lods1_cld
          call lods1_cld_constant
          call lods1_cld_allregs
          call lods1_std
          call lods1_std_constant
          call lods1_std_allregs
          call lods1
          call lods1_constant
          call lods1_allregs
          call lods2_cld
          call lods2_cld_constant
          call lods2_cld_allregs
          call lods2_std
          call lods2_std_constant
          call lods2_std_allregs
          call lods2
          call lods2_constant
          call lods2_allregs
          call lods3_cld
          call lods3_cld_constant
          call lods3_cld_allregs
          call lods3_std
          call lods3_std_constant
          call lods3_std_allregs
          call lods3
          call lods3_constant
          call lods3_allregs
          call lods_seg
          call lods_seg_constant
          call lods_seg_allregs
          call loop_type_0
          call loop_type_0_constant
          call loop_type_0_allregs
          call loop_type_0w
          call loop_type_0w_constant
          call loop_type_0w_allregs
          call loop_type_1
          call loop_type_1_constant
          call loop_type_1_allregs
          call loop_type_1w
          call loop_type_1w_constant
          call loop_type_1w_allregs
          call loop_type_2
          call loop_type_2_constant
          call loop_type_2_allregs
          call loop_type_2w
          call loop_type_2w_constant
          call loop_type_2w_allregs
          call lsl
          call lsl_constant
          call lsl_allregs
          call ltr
          call ltr_constant
          call ltr_allregs
          call mov_b1
          call mov_b1_constant
          call mov_b1_allregs
          call mov_b2
          call mov_b2_constant
          call mov_b2_allregs
          call mov_b3
          call mov_b3_constant
          call mov_b3_allregs
          call mov_b4
          call mov_b4_constant
          call mov_b4_allregs
          call mov_b5
          call mov_b5_constant
          call mov_b5_allregs
          call mov_b6
          call mov_b6_constant
          call mov_b6_allregs
          call mov_b7
          call mov_b7_constant
          call mov_b7_allregs
          call mov_w1
          call mov_w1_constant
          call mov_w1_allregs
          call mov_w2
          call mov_w2_constant
          call mov_w2_allregs
          call mov_w3
          call mov_w3_constant
          call mov_w3_allregs
          call mov_w4
          call mov_w4_constant
          call mov_w4_allregs
          call mov_l1
          call mov_l1_constant
          call mov_l1_allregs
          call mov_l2
          call mov_l2_constant
          call mov_l2_allregs
          call mov_l3
          call mov_l3_constant
          call mov_l3_allregs
          call mov_l4
          call mov_l4_constant
          call mov_l4_allregs
          call mov_from_cr
          call mov_from_cr_constant
          call mov_from_cr_allregs
          call mov_to_cr
          call mov_to_cr_constant
          call mov_to_cr_allregs
          call mov_from_dr
          call mov_from_dr_constant
          call mov_from_dr_allregs
          call mov_to_dr
          call mov_to_dr_constant
          call mov_to_dr_allregs
          call mov_from_tr
          call mov_from_tr_constant
          call mov_from_tr_allregs
          call mov_to_tr
          call mov_to_tr_constant
          call mov_to_tr_allregs
          call movs1_cld
          call movs1_cld_constant
          call movs1_cld_allregs
          call movs1_std
          call movs1_std_constant
          call movs1_std_allregs
          call movs1
          call movs1_constant
          call movs1_allregs
          call movs2_cld
          call movs2_cld_constant
          call movs2_cld_allregs
          call movs2_std
          call movs2_std_constant
          call movs2_std_allregs
          call movs2
          call movs2_constant
          call movs2_allregs
          call movs3_cld
          call movs3_cld_constant
          call movs3_cld_allregs
          call movs3_std
          call movs3_std_constant
          call movs3_std_allregs
          call movs3
          call movs3_constant
          call movs3_allregs
          call movs_seg
          call movs_seg_constant
          call movs_seg_allregs
          call movsx1
          call movsx1_constant
          call movsx1_allregs
          call movsx2
          call movsx2_constant
          call movsx2_allregs
          call movsx3
          call movsx3_constant
          call movsx3_allregs
          call movzx1
          call movzx1_constant
          call movzx1_allregs
          call movzx2
          call movzx2_constant
          call movzx2_allregs
          call movzx3
          call movzx3_constant
          call movzx3_allregs
          call mul1
          call mul1_constant
          call mul1_allregs
          call mul2
          call mul2_constant
          call mul2_allregs
          call mul3
          call mul3_constant
          call mul3_allregs
          call neg1
          call neg1_constant
          call neg1_allregs
          call neg2
          call neg2_constant
          call neg2_allregs
          call neg3
          call neg3_constant
          call neg3_allregs
          call neg_locked
          call neg_locked_constant
          call neg_locked_allregs
          call nop1
          call nop1_constant
          call nop1_allregs
          call nop2
          call nop2_constant
          call nop2_allregs
          call nop3
          call nop3_constant
          call nop3_allregs
          call nop4
          call nop4_constant
          call nop4_allregs
          call nop5
          call nop5_constant
          call nop5_allregs
          call nop6
          call nop6_constant
          call nop6_allregs
          call nop7
          call nop7_constant
          call nop7_allregs
          call not1
          call not1_constant
          call not1_allregs
          call not2
          call not2_constant
          call not2_allregs
          call not3
          call not3_constant
          call not3_allregs
          call not_locked
          call not_locked_constant
          call not_locked_allregs
          call or1
          call or1_constant
          call or1_allregs
          call or2
          call or2_constant
          call or2_allregs
          call or3
          call or3_constant
          call or3_allregs
          call or4
          call or4_constant
          call or4_allregs
          call or5
          call or5_constant
          call or5_allregs
          call or6
          call or6_constant
          call or6_allregs
          call or7
          call or7_constant
          call or7_allregs
          call or8
          call or8_constant
          call or8_allregs
          call or9
          call or9_constant
          call or9_allregs
          call or_locked
          call or_locked_constant
          call or_locked_allregs
          call out1
          call out1_constant
          call out1_allregs
          call out2
          call out2_constant
          call out2_allregs
          call out3
          call out3_constant
          call out3_allregs
          call out4
          call out4_constant
          call out4_allregs
          call out5
          call out5_constant
          call out5_allregs
          call out6
          call out6_constant
          call out6_allregs
          call outs1
          call outs1_constant
          call outs1_allregs
          call outs2
          call outs2_constant
          call outs2_allregs
          call outs3
          call outs3_constant
          call outs3_allregs
          call pop1
          call pop1_constant
          call pop1_allregs
          call pop2
          call pop2_constant
          call pop2_allregs
          call pop3
          call pop3_constant
          call pop3_allregs
          call pop4
          call pop4_constant
          call pop4_allregs
          call pop_seg1
          call pop_seg1_constant
          call pop_seg1_allregs
          call pop_seg2
          call pop_seg2_constant
          call pop_seg2_allregs
          call pop_seg3
          call pop_seg3_constant
          call pop_seg3_allregs
          call pop_seg4
          call pop_seg4_constant
          call pop_seg4_allregs
          call pop_seg5
          call pop_seg5_constant
          call pop_seg5_allregs
          call popa1
          call popa1_constant
          call popa1_allregs
          call popa2
          call popa2_constant
          call popa2_allregs
          call popf1
          call popf1_constant
          call popf1_allregs
          call popf2
          call popf2_constant
          call popf2_allregs
          call push1
          call push1_constant
          call push1_allregs
          call push2
          call push2_constant
          call push2_allregs
          call push3
          call push3_constant
          call push3_allregs
          call push4
          call push4_constant
          call push4_allregs
          call push5
          call push5_constant
          call push5_allregs
          call push6
          call push6_constant
          call push6_allregs
          call push7
          call push7_constant
          call push7_allregs
          call push_seg1
          call push_seg1_constant
          call push_seg1_allregs
          call push_seg2
          call push_seg2_constant
          call push_seg2_allregs
          call push_seg3
          call push_seg3_constant
          call push_seg3_allregs
          call push_seg4
          call push_seg4_constant
          call push_seg4_allregs
          call push_seg5
          call push_seg5_constant
          call push_seg5_allregs
          call pusha1
          call pusha1_constant
          call pusha1_allregs
          call pusha2
          call pusha2_constant
          call pusha2_allregs
          call pushf1
          call pushf1_constant
          call pushf1_allregs
          call pushf2
          call pushf2_constant
          call pushf2_allregs
          call rotate_once_rol_b
          call rotate_once_rol_b_constant
          call rotate_once_rol_b_allregs
          call rotate_once_rol_w
          call rotate_once_rol_w_constant
          call rotate_once_rol_w_allregs
          call rotate_once_rol_l
          call rotate_once_rol_l_constant
          call rotate_once_rol_l_allregs
          call rotate_once_ror_b
          call rotate_once_ror_b_constant
          call rotate_once_ror_b_allregs
          call rotate_once_ror_w
          call rotate_once_ror_w_constant
          call rotate_once_ror_w_allregs
          call rotate_once_ror_l
          call rotate_once_ror_l_constant
          call rotate_once_ror_l_allregs
          call rotate_once_rcl_b
          call rotate_once_rcl_b_constant
          call rotate_once_rcl_b_allregs
          call rotate_once_rcl_w
          call rotate_once_rcl_w_constant
          call rotate_once_rcl_w_allregs
          call rotate_once_rcl_l
          call rotate_once_rcl_l_constant
          call rotate_once_rcl_l_allregs
          call rotate_once_rcr_b
          call rotate_once_rcr_b_constant
          call rotate_once_rcr_b_allregs
          call rotate_once_rcr_w
          call rotate_once_rcr_w_constant
          call rotate_once_rcr_w_allregs
          call rotate_once_rcr_l
          call rotate_once_rcr_l_constant
          call rotate_once_rcr_l_allregs
          call rotate_once_shl_b
          call rotate_once_shl_b_constant
          call rotate_once_shl_b_allregs
          call rotate_once_shl_w
          call rotate_once_shl_w_constant
          call rotate_once_shl_w_allregs
          call rotate_once_shl_l
          call rotate_once_shl_l_constant
          call rotate_once_shl_l_allregs
          call rotate_once_shr_b
          call rotate_once_shr_b_constant
          call rotate_once_shr_b_allregs
          call rotate_once_shr_w
          call rotate_once_shr_w_constant
          call rotate_once_shr_w_allregs
          call rotate_once_shr_l
          call rotate_once_shr_l_constant
          call rotate_once_shr_l_allregs
          call rotate_once_sar_b
          call rotate_once_sar_b_constant
          call rotate_once_sar_b_allregs
          call rotate_once_sar_w
          call rotate_once_sar_w_constant
          call rotate_once_sar_w_allregs
          call rotate_once_sar_l
          call rotate_once_sar_l_constant
          call rotate_once_sar_l_allregs
          call rotate_cl_controlled_rol_b
          call rotate_cl_controlled_rol_b_constant
          call rotate_cl_controlled_rol_b_allregs
          call rotate_cl_controlled_rol_w
          call rotate_cl_controlled_rol_w_constant
          call rotate_cl_controlled_rol_w_allregs
          call rotate_cl_controlled_rol_l
          call rotate_cl_controlled_rol_l_constant
          call rotate_cl_controlled_rol_l_allregs
          call rotate_cl_controlled_ror_b
          call rotate_cl_controlled_ror_b_constant
          call rotate_cl_controlled_ror_b_allregs
          call rotate_cl_controlled_ror_w
          call rotate_cl_controlled_ror_w_constant
          call rotate_cl_controlled_ror_w_allregs
          call rotate_cl_controlled_ror_l
          call rotate_cl_controlled_ror_l_constant
          call rotate_cl_controlled_ror_l_allregs
          call rotate_cl_controlled_rcl_b
          call rotate_cl_controlled_rcl_b_constant
          call rotate_cl_controlled_rcl_b_allregs
          call rotate_cl_controlled_rcl_w
          call rotate_cl_controlled_rcl_w_constant
          call rotate_cl_controlled_rcl_w_allregs
          call rotate_cl_controlled_rcl_l
          call rotate_cl_controlled_rcl_l_constant
          call rotate_cl_controlled_rcl_l_allregs
          call rotate_cl_controlled_rcr_b
          call rotate_cl_controlled_rcr_b_constant
          call rotate_cl_controlled_rcr_b_allregs
          call rotate_cl_controlled_rcr_w
          call rotate_cl_controlled_rcr_w_constant
          call rotate_cl_controlled_rcr_w_allregs
          call rotate_cl_controlled_rcr_l
          call rotate_cl_controlled_rcr_l_constant
          call rotate_cl_controlled_rcr_l_allregs
          call rotate_cl_controlled_shl_b
          call rotate_cl_controlled_shl_b_constant
          call rotate_cl_controlled_shl_b_allregs
          call rotate_cl_controlled_shl_w
          call rotate_cl_controlled_shl_w_constant
          call rotate_cl_controlled_shl_w_allregs
          call rotate_cl_controlled_shl_l
          call rotate_cl_controlled_shl_l_constant
          call rotate_cl_controlled_shl_l_allregs
          call rotate_cl_controlled_shr_b
          call rotate_cl_controlled_shr_b_constant
          call rotate_cl_controlled_shr_b_allregs
          call rotate_cl_controlled_shr_w
          call rotate_cl_controlled_shr_w_constant
          call rotate_cl_controlled_shr_w_allregs
          call rotate_cl_controlled_shr_l
          call rotate_cl_controlled_shr_l_constant
          call rotate_cl_controlled_shr_l_allregs
          call rotate_cl_controlled_sar_b
          call rotate_cl_controlled_sar_b_constant
          call rotate_cl_controlled_sar_b_allregs
          call rotate_cl_controlled_sar_w
          call rotate_cl_controlled_sar_w_constant
          call rotate_cl_controlled_sar_w_allregs
          call rotate_cl_controlled_sar_l
          call rotate_cl_controlled_sar_l_constant
          call rotate_cl_controlled_sar_l_allregs
          call rotate_imm8_rol_b
          call rotate_imm8_rol_b_constant
          call rotate_imm8_rol_b_allregs
          call rotate_imm8_rol_w
          call rotate_imm8_rol_w_constant
          call rotate_imm8_rol_w_allregs
          call rotate_imm8_rol_l
          call rotate_imm8_rol_l_constant
          call rotate_imm8_rol_l_allregs
          call rotate_imm8_ror_b
          call rotate_imm8_ror_b_constant
          call rotate_imm8_ror_b_allregs
          call rotate_imm8_ror_w
          call rotate_imm8_ror_w_constant
          call rotate_imm8_ror_w_allregs
          call rotate_imm8_ror_l
          call rotate_imm8_ror_l_constant
          call rotate_imm8_ror_l_allregs
          call rotate_imm8_rcl_b
          call rotate_imm8_rcl_b_constant
          call rotate_imm8_rcl_b_allregs
          call rotate_imm8_rcl_w
          call rotate_imm8_rcl_w_constant
          call rotate_imm8_rcl_w_allregs
          call rotate_imm8_rcl_l
          call rotate_imm8_rcl_l_constant
          call rotate_imm8_rcl_l_allregs
          call rotate_imm8_rcr_b
          call rotate_imm8_rcr_b_constant
          call rotate_imm8_rcr_b_allregs
          call rotate_imm8_rcr_w
          call rotate_imm8_rcr_w_constant
          call rotate_imm8_rcr_w_allregs
          call rotate_imm8_rcr_l
          call rotate_imm8_rcr_l_constant
          call rotate_imm8_rcr_l_allregs
          call rotate_imm8_shl_b
          call rotate_imm8_shl_b_constant
          call rotate_imm8_shl_b_allregs
          call rotate_imm8_shl_w
          call rotate_imm8_shl_w_constant
          call rotate_imm8_shl_w_allregs
          call rotate_imm8_shl_l
          call rotate_imm8_shl_l_constant
          call rotate_imm8_shl_l_allregs
          call rotate_imm8_shr_b
          call rotate_imm8_shr_b_constant
          call rotate_imm8_shr_b_allregs
          call rotate_imm8_shr_w
          call rotate_imm8_shr_w_constant
          call rotate_imm8_shr_w_allregs
          call rotate_imm8_shr_l
          call rotate_imm8_shr_l_constant
          call rotate_imm8_shr_l_allregs
          call rotate_imm8_sar_b
          call rotate_imm8_sar_b_constant
          call rotate_imm8_sar_b_allregs
          call rotate_imm8_sar_w
          call rotate_imm8_sar_w_constant
          call rotate_imm8_sar_w_allregs
          call rotate_imm8_sar_l
          call rotate_imm8_sar_l_constant
          call rotate_imm8_sar_l_allregs
          call rep_ins1b_cld
          call rep_ins1b_cld_constant
          call rep_ins1b_cld_allregs
          call rep_ins1b_std
          call rep_ins1b_std_constant
          call rep_ins1b_std_allregs
          call rep_ins1b
          call rep_ins1b_constant
          call rep_ins1b_allregs
          call rep_ins1w_cld
          call rep_ins1w_cld_constant
          call rep_ins1w_cld_allregs
          call rep_ins1w_std
          call rep_ins1w_std_constant
          call rep_ins1w_std_allregs
          call rep_ins1w
          call rep_ins1w_constant
          call rep_ins1w_allregs
          call rep_ins1l_cld
          call rep_ins1l_cld_constant
          call rep_ins1l_cld_allregs
          call rep_ins1l_std
          call rep_ins1l_std_constant
          call rep_ins1l_std_allregs
          call rep_ins1l
          call rep_ins1l_constant
          call rep_ins1l_allregs
          call rep_ins2b_cld
          call rep_ins2b_cld_constant
          call rep_ins2b_cld_allregs
          call rep_ins2b_std
          call rep_ins2b_std_constant
          call rep_ins2b_std_allregs
          call rep_ins2b
          call rep_ins2b_constant
          call rep_ins2b_allregs
          call rep_ins2w_cld
          call rep_ins2w_cld_constant
          call rep_ins2w_cld_allregs
          call rep_ins2w_std
          call rep_ins2w_std_constant
          call rep_ins2w_std_allregs
          call rep_ins2w
          call rep_ins2w_constant
          call rep_ins2w_allregs
          call rep_ins2l_cld
          call rep_ins2l_cld_constant
          call rep_ins2l_cld_allregs
          call rep_ins2l_std
          call rep_ins2l_std_constant
          call rep_ins2l_std_allregs
          call rep_ins2l
          call rep_ins2l_constant
          call rep_ins2l_allregs
          call rep_lods1b_cld
          call rep_lods1b_cld_constant
          call rep_lods1b_cld_allregs
          call rep_lods1b_std
          call rep_lods1b_std_constant
          call rep_lods1b_std_allregs
          call rep_lods1b
          call rep_lods1b_constant
          call rep_lods1b_allregs
          call rep_lods1w_cld
          call rep_lods1w_cld_constant
          call rep_lods1w_cld_allregs
          call rep_lods1w_std
          call rep_lods1w_std_constant
          call rep_lods1w_std_allregs
          call rep_lods1w
          call rep_lods1w_constant
          call rep_lods1w_allregs
          call rep_lods1l_cld
          call rep_lods1l_cld_constant
          call rep_lods1l_cld_allregs
          call rep_lods1l_std
          call rep_lods1l_std_constant
          call rep_lods1l_std_allregs
          call rep_lods1l
          call rep_lods1l_constant
          call rep_lods1l_allregs
          call rep_lods2b_cld
          call rep_lods2b_cld_constant
          call rep_lods2b_cld_allregs
          call rep_lods2b_std
          call rep_lods2b_std_constant
          call rep_lods2b_std_allregs
          call rep_lods2b
          call rep_lods2b_constant
          call rep_lods2b_allregs
          call rep_lods2w_cld
          call rep_lods2w_cld_constant
          call rep_lods2w_cld_allregs
          call rep_lods2w_std
          call rep_lods2w_std_constant
          call rep_lods2w_std_allregs
          call rep_lods2w
          call rep_lods2w_constant
          call rep_lods2w_allregs
          call rep_lods2l_cld
          call rep_lods2l_cld_constant
          call rep_lods2l_cld_allregs
          call rep_lods2l_std
          call rep_lods2l_std_constant
          call rep_lods2l_std_allregs
          call rep_lods2l
          call rep_lods2l_constant
          call rep_lods2l_allregs
          call rep_movs1b_cld
          call rep_movs1b_cld_constant
          call rep_movs1b_cld_allregs
          call rep_movs1b_std
          call rep_movs1b_std_constant
          call rep_movs1b_std_allregs
          call rep_movs1b
          call rep_movs1b_constant
          call rep_movs1b_allregs
          call rep_movs1w_cld
          call rep_movs1w_cld_constant
          call rep_movs1w_cld_allregs
          call rep_movs1w_std
          call rep_movs1w_std_constant
          call rep_movs1w_std_allregs
          call rep_movs1w
          call rep_movs1w_constant
          call rep_movs1w_allregs
          call rep_movs1l_cld
          call rep_movs1l_cld_constant
          call rep_movs1l_cld_allregs
          call rep_movs1l_std
          call rep_movs1l_std_constant
          call rep_movs1l_std_allregs
          call rep_movs1l
          call rep_movs1l_constant
          call rep_movs1l_allregs
          call rep_movs2b_cld
          call rep_movs2b_cld_constant
          call rep_movs2b_cld_allregs
          call rep_movs2b_std
          call rep_movs2b_std_constant
          call rep_movs2b_std_allregs
          call rep_movs2b
          call rep_movs2b_constant
          call rep_movs2b_allregs
          call rep_movs2w_cld
          call rep_movs2w_cld_constant
          call rep_movs2w_cld_allregs
          call rep_movs2w_std
          call rep_movs2w_std_constant
          call rep_movs2w_std_allregs
          call rep_movs2w
          call rep_movs2w_constant
          call rep_movs2w_allregs
          call rep_movs2l_cld
          call rep_movs2l_cld_constant
          call rep_movs2l_cld_allregs
          call rep_movs2l_std
          call rep_movs2l_std_constant
          call rep_movs2l_std_allregs
          call rep_movs2l
          call rep_movs2l_constant
          call rep_movs2l_allregs
          call rep_outs1b_cld
          call rep_outs1b_cld_constant
          call rep_outs1b_cld_allregs
          call rep_outs1b_std
          call rep_outs1b_std_constant
          call rep_outs1b_std_allregs
          call rep_outs1b
          call rep_outs1b_constant
          call rep_outs1b_allregs
          call rep_outs1w_cld
          call rep_outs1w_cld_constant
          call rep_outs1w_cld_allregs
          call rep_outs1w_std
          call rep_outs1w_std_constant
          call rep_outs1w_std_allregs
          call rep_outs1w
          call rep_outs1w_constant
          call rep_outs1w_allregs
          call rep_outs1l_cld
          call rep_outs1l_cld_constant
          call rep_outs1l_cld_allregs
          call rep_outs1l_std
          call rep_outs1l_std_constant
          call rep_outs1l_std_allregs
          call rep_outs1l
          call rep_outs1l_constant
          call rep_outs1l_allregs
          call rep_outs2b_cld
          call rep_outs2b_cld_constant
          call rep_outs2b_cld_allregs
          call rep_outs2b_std
          call rep_outs2b_std_constant
          call rep_outs2b_std_allregs
          call rep_outs2b
          call rep_outs2b_constant
          call rep_outs2b_allregs
          call rep_outs2w_cld
          call rep_outs2w_cld_constant
          call rep_outs2w_cld_allregs
          call rep_outs2w_std
          call rep_outs2w_std_constant
          call rep_outs2w_std_allregs
          call rep_outs2w
          call rep_outs2w_constant
          call rep_outs2w_allregs
          call rep_outs2l_cld
          call rep_outs2l_cld_constant
          call rep_outs2l_cld_allregs
          call rep_outs2l_std
          call rep_outs2l_std_constant
          call rep_outs2l_std_allregs
          call rep_outs2l
          call rep_outs2l_constant
          call rep_outs2l_allregs
          call rep_stos1b_cld
          call rep_stos1b_cld_constant
          call rep_stos1b_cld_allregs
          call rep_stos1b_std
          call rep_stos1b_std_constant
          call rep_stos1b_std_allregs
          call rep_stos1b
          call rep_stos1b_constant
          call rep_stos1b_allregs
          call rep_stos1w_cld
          call rep_stos1w_cld_constant
          call rep_stos1w_cld_allregs
          call rep_stos1w_std
          call rep_stos1w_std_constant
          call rep_stos1w_std_allregs
          call rep_stos1w
          call rep_stos1w_constant
          call rep_stos1w_allregs
          call rep_stos1l_cld
          call rep_stos1l_cld_constant
          call rep_stos1l_cld_allregs
          call rep_stos1l_std
          call rep_stos1l_std_constant
          call rep_stos1l_std_allregs
          call rep_stos1l
          call rep_stos1l_constant
          call rep_stos1l_allregs
          call rep_stos2b_cld
          call rep_stos2b_cld_constant
          call rep_stos2b_cld_allregs
          call rep_stos2b_std
          call rep_stos2b_std_constant
          call rep_stos2b_std_allregs
          call rep_stos2b
          call rep_stos2b_constant
          call rep_stos2b_allregs
          call rep_stos2w_cld
          call rep_stos2w_cld_constant
          call rep_stos2w_cld_allregs
          call rep_stos2w_std
          call rep_stos2w_std_constant
          call rep_stos2w_std_allregs
          call rep_stos2w
          call rep_stos2w_constant
          call rep_stos2w_allregs
          call rep_stos2l_cld
          call rep_stos2l_cld_constant
          call rep_stos2l_cld_allregs
          call rep_stos2l_std
          call rep_stos2l_std_constant
          call rep_stos2l_std_allregs
          call rep_stos2l
          call rep_stos2l_constant
          call rep_stos2l_allregs
          call rep_cmps1b_cld
          call rep_cmps1b_cld_constant
          call rep_cmps1b_cld_allregs
          call rep_cmps1b_std
          call rep_cmps1b_std_constant
          call rep_cmps1b_std_allregs
          call rep_cmps1b
          call rep_cmps1b_constant
          call rep_cmps1b_allregs
          call rep_cmps1w_cld
          call rep_cmps1w_cld_constant
          call rep_cmps1w_cld_allregs
          call rep_cmps1w_std
          call rep_cmps1w_std_constant
          call rep_cmps1w_std_allregs
          call rep_cmps1w
          call rep_cmps1w_constant
          call rep_cmps1w_allregs
          call rep_cmps1l_cld
          call rep_cmps1l_cld_constant
          call rep_cmps1l_cld_allregs
          call rep_cmps1l_std
          call rep_cmps1l_std_constant
          call rep_cmps1l_std_allregs
          call rep_cmps1l
          call rep_cmps1l_constant
          call rep_cmps1l_allregs
          call rep_cmps2b_cld
          call rep_cmps2b_cld_constant
          call rep_cmps2b_cld_allregs
          call rep_cmps2b_std
          call rep_cmps2b_std_constant
          call rep_cmps2b_std_allregs
          call rep_cmps2b
          call rep_cmps2b_constant
          call rep_cmps2b_allregs
          call rep_cmps2w_cld
          call rep_cmps2w_cld_constant
          call rep_cmps2w_cld_allregs
          call rep_cmps2w_std
          call rep_cmps2w_std_constant
          call rep_cmps2w_std_allregs
          call rep_cmps2w
          call rep_cmps2w_constant
          call rep_cmps2w_allregs
          call rep_cmps2l_cld
          call rep_cmps2l_cld_constant
          call rep_cmps2l_cld_allregs
          call rep_cmps2l_std
          call rep_cmps2l_std_constant
          call rep_cmps2l_std_allregs
          call rep_cmps2l
          call rep_cmps2l_constant
          call rep_cmps2l_allregs
          call rep_cmps_seg1
          call rep_cmps_seg1_constant
          call rep_cmps_seg1_allregs
          call rep_cmps_clear
          call rep_cmps_clear_constant
          call rep_cmps_clear_allregs
          call rep_cmps_set
          call rep_cmps_set_constant
          call rep_cmps_set_allregs
          call rep_cmpsb_memcmp
          call rep_cmpsb_memcmp_constant
          call rep_cmpsb_memcmp_allregs
          call rep_scas1b_cld
          call rep_scas1b_cld_constant
          call rep_scas1b_cld_allregs
          call rep_scas1b_std
          call rep_scas1b_std_constant
          call rep_scas1b_std_allregs
          call rep_scas1b
          call rep_scas1b_constant
          call rep_scas1b_allregs
          call rep_scas1w_cld
          call rep_scas1w_cld_constant
          call rep_scas1w_cld_allregs
          call rep_scas1w_std
          call rep_scas1w_std_constant
          call rep_scas1w_std_allregs
          call rep_scas1w
          call rep_scas1w_constant
          call rep_scas1w_allregs
          call rep_scas1l_cld
          call rep_scas1l_cld_constant
          call rep_scas1l_cld_allregs
          call rep_scas1l_std
          call rep_scas1l_std_constant
          call rep_scas1l_std_allregs
          call rep_scas1l
          call rep_scas1l_constant
          call rep_scas1l_allregs
          call rep_scas2b_cld
          call rep_scas2b_cld_constant
          call rep_scas2b_cld_allregs
          call rep_scas2b_std
          call rep_scas2b_std_constant
          call rep_scas2b_std_allregs
          call rep_scas2b
          call rep_scas2b_constant
          call rep_scas2b_allregs
          call rep_scas2w_cld
          call rep_scas2w_cld_constant
          call rep_scas2w_cld_allregs
          call rep_scas2w_std
          call rep_scas2w_std_constant
          call rep_scas2w_std_allregs
          call rep_scas2w
          call rep_scas2w_constant
          call rep_scas2w_allregs
          call rep_scas2l_cld
          call rep_scas2l_cld_constant
          call rep_scas2l_cld_allregs
          call rep_scas2l_std
          call rep_scas2l_std_constant
          call rep_scas2l_std_allregs
          call rep_scas2l
          call rep_scas2l_constant
          call rep_scas2l_allregs
          call rep_scas_seg
          call rep_scas_seg_constant
          call rep_scas_seg_allregs
          call rep_scas_memchr
          call rep_scas_memchr_constant
          call rep_scas_memchr_allregs
          call ret1
          call ret1_constant
          call ret1_allregs
          call ret2
          call ret2_constant
          call ret2_allregs
          call ret3
          call ret3_constant
          call ret3_allregs
          call ret4
          call ret4_constant
          call ret4_allregs
          call ret_pop1
          call ret_pop1_constant
          call ret_pop1_allregs
          call ret_pop2
          call ret_pop2_constant
          call ret_pop2_allregs
          call ret_pop3
          call ret_pop3_constant
          call ret_pop3_allregs
          call ret_pop4
          call ret_pop4_constant
          call ret_pop4_allregs
          call sahf
          call sahf_constant
          call sahf_allregs
          call sbb1_flags_clear
          call sbb1_flags_clear_constant
          call sbb1_flags_clear_allregs
          call sbb1_flags_set1
          call sbb1_flags_set1_constant
          call sbb1_flags_set1_allregs
          call sbb1_flags_set2
          call sbb1_flags_set2_constant
          call sbb1_flags_set2_allregs
          call sbb1_flags_cmp
          call sbb1_flags_cmp_constant
          call sbb1_flags_cmp_allregs
          call sbb2_flags_clear
          call sbb2_flags_clear_constant
          call sbb2_flags_clear_allregs
          call sbb2_flags_set1
          call sbb2_flags_set1_constant
          call sbb2_flags_set1_allregs
          call sbb2_flags_set2
          call sbb2_flags_set2_constant
          call sbb2_flags_set2_allregs
          call sbb2_flags_cmp
          call sbb2_flags_cmp_constant
          call sbb2_flags_cmp_allregs
          call sbb3_flags_clear
          call sbb3_flags_clear_constant
          call sbb3_flags_clear_allregs
          call sbb3_flags_set1
          call sbb3_flags_set1_constant
          call sbb3_flags_set1_allregs
          call sbb3_flags_set2
          call sbb3_flags_set2_constant
          call sbb3_flags_set2_allregs
          call sbb3_flags_cmp
          call sbb3_flags_cmp_constant
          call sbb3_flags_cmp_allregs
          call sbb4_flags_clear
          call sbb4_flags_clear_constant
          call sbb4_flags_clear_allregs
          call sbb4_flags_set1
          call sbb4_flags_set1_constant
          call sbb4_flags_set1_allregs
          call sbb4_flags_set2
          call sbb4_flags_set2_constant
          call sbb4_flags_set2_allregs
          call sbb4_flags_cmp
          call sbb4_flags_cmp_constant
          call sbb4_flags_cmp_allregs
          call sbb5_flags_clear
          call sbb5_flags_clear_constant
          call sbb5_flags_clear_allregs
          call sbb5_flags_set1
          call sbb5_flags_set1_constant
          call sbb5_flags_set1_allregs
          call sbb5_flags_set2
          call sbb5_flags_set2_constant
          call sbb5_flags_set2_allregs
          call sbb5_flags_cmp
          call sbb5_flags_cmp_constant
          call sbb5_flags_cmp_allregs
          call sbb6_flags_clear
          call sbb6_flags_clear_constant
          call sbb6_flags_clear_allregs
          call sbb6_flags_set1
          call sbb6_flags_set1_constant
          call sbb6_flags_set1_allregs
          call sbb6_flags_set2
          call sbb6_flags_set2_constant
          call sbb6_flags_set2_allregs
          call sbb6_flags_cmp
          call sbb6_flags_cmp_constant
          call sbb6_flags_cmp_allregs
          call sbb7_flags_clear
          call sbb7_flags_clear_constant
          call sbb7_flags_clear_allregs
          call sbb7_flags_set1
          call sbb7_flags_set1_constant
          call sbb7_flags_set1_allregs
          call sbb7_flags_set2
          call sbb7_flags_set2_constant
          call sbb7_flags_set2_allregs
          call sbb7_flags_cmp
          call sbb7_flags_cmp_constant
          call sbb7_flags_cmp_allregs
          call sbb_locked
          call sbb_locked_constant
          call sbb_locked_allregs
          call scas1_cld
          call scas1_cld_constant
          call scas1_cld_allregs
          call scas1_std
          call scas1_std_constant
          call scas1_std_allregs
          call scas1
          call scas1_constant
          call scas1_allregs
          call scas2_cld
          call scas2_cld_constant
          call scas2_cld_allregs
          call scas2_std
          call scas2_std_constant
          call scas2_std_allregs
          call scas2
          call scas2_constant
          call scas2_allregs
          call scas3_cld
          call scas3_cld_constant
          call scas3_cld_allregs
          call scas3_std
          call scas3_std_constant
          call scas3_std_allregs
          call scas3
          call scas3_constant
          call scas3_allregs
          call setcc_with_code_0_flags_clear
          call setcc_with_code_0_flags_clear_constant
          call setcc_with_code_0_flags_clear_allregs
          call setcc_with_code_0_flags_set1
          call setcc_with_code_0_flags_set1_constant
          call setcc_with_code_0_flags_set1_allregs
          call setcc_with_code_0_flags_set2
          call setcc_with_code_0_flags_set2_constant
          call setcc_with_code_0_flags_set2_allregs
          call setcc_with_code_0_flags_cmp
          call setcc_with_code_0_flags_cmp_constant
          call setcc_with_code_0_flags_cmp_allregs
          call setcc_with_code_1_flags_clear
          call setcc_with_code_1_flags_clear_constant
          call setcc_with_code_1_flags_clear_allregs
          call setcc_with_code_1_flags_set1
          call setcc_with_code_1_flags_set1_constant
          call setcc_with_code_1_flags_set1_allregs
          call setcc_with_code_1_flags_set2
          call setcc_with_code_1_flags_set2_constant
          call setcc_with_code_1_flags_set2_allregs
          call setcc_with_code_1_flags_cmp
          call setcc_with_code_1_flags_cmp_constant
          call setcc_with_code_1_flags_cmp_allregs
          call setcc_with_code_2_flags_clear
          call setcc_with_code_2_flags_clear_constant
          call setcc_with_code_2_flags_clear_allregs
          call setcc_with_code_2_flags_set1
          call setcc_with_code_2_flags_set1_constant
          call setcc_with_code_2_flags_set1_allregs
          call setcc_with_code_2_flags_set2
          call setcc_with_code_2_flags_set2_constant
          call setcc_with_code_2_flags_set2_allregs
          call setcc_with_code_2_flags_cmp
          call setcc_with_code_2_flags_cmp_constant
          call setcc_with_code_2_flags_cmp_allregs
          call setcc_with_code_3_flags_clear
          call setcc_with_code_3_flags_clear_constant
          call setcc_with_code_3_flags_clear_allregs
          call setcc_with_code_3_flags_set1
          call setcc_with_code_3_flags_set1_constant
          call setcc_with_code_3_flags_set1_allregs
          call setcc_with_code_3_flags_set2
          call setcc_with_code_3_flags_set2_constant
          call setcc_with_code_3_flags_set2_allregs
          call setcc_with_code_3_flags_cmp
          call setcc_with_code_3_flags_cmp_constant
          call setcc_with_code_3_flags_cmp_allregs
          call setcc_with_code_4_flags_clear
          call setcc_with_code_4_flags_clear_constant
          call setcc_with_code_4_flags_clear_allregs
          call setcc_with_code_4_flags_set1
          call setcc_with_code_4_flags_set1_constant
          call setcc_with_code_4_flags_set1_allregs
          call setcc_with_code_4_flags_set2
          call setcc_with_code_4_flags_set2_constant
          call setcc_with_code_4_flags_set2_allregs
          call setcc_with_code_4_flags_cmp
          call setcc_with_code_4_flags_cmp_constant
          call setcc_with_code_4_flags_cmp_allregs
          call setcc_with_code_5_flags_clear
          call setcc_with_code_5_flags_clear_constant
          call setcc_with_code_5_flags_clear_allregs
          call setcc_with_code_5_flags_set1
          call setcc_with_code_5_flags_set1_constant
          call setcc_with_code_5_flags_set1_allregs
          call setcc_with_code_5_flags_set2
          call setcc_with_code_5_flags_set2_constant
          call setcc_with_code_5_flags_set2_allregs
          call setcc_with_code_5_flags_cmp
          call setcc_with_code_5_flags_cmp_constant
          call setcc_with_code_5_flags_cmp_allregs
          call setcc_with_code_6_flags_clear
          call setcc_with_code_6_flags_clear_constant
          call setcc_with_code_6_flags_clear_allregs
          call setcc_with_code_6_flags_set1
          call setcc_with_code_6_flags_set1_constant
          call setcc_with_code_6_flags_set1_allregs
          call setcc_with_code_6_flags_set2
          call setcc_with_code_6_flags_set2_constant
          call setcc_with_code_6_flags_set2_allregs
          call setcc_with_code_6_flags_cmp
          call setcc_with_code_6_flags_cmp_constant
          call setcc_with_code_6_flags_cmp_allregs
          call setcc_with_code_7_flags_clear
          call setcc_with_code_7_flags_clear_constant
          call setcc_with_code_7_flags_clear_allregs
          call setcc_with_code_7_flags_set1
          call setcc_with_code_7_flags_set1_constant
          call setcc_with_code_7_flags_set1_allregs
          call setcc_with_code_7_flags_set2
          call setcc_with_code_7_flags_set2_constant
          call setcc_with_code_7_flags_set2_allregs
          call setcc_with_code_7_flags_cmp
          call setcc_with_code_7_flags_cmp_constant
          call setcc_with_code_7_flags_cmp_allregs
          call setcc_with_code_8_flags_clear
          call setcc_with_code_8_flags_clear_constant
          call setcc_with_code_8_flags_clear_allregs
          call setcc_with_code_8_flags_set1
          call setcc_with_code_8_flags_set1_constant
          call setcc_with_code_8_flags_set1_allregs
          call setcc_with_code_8_flags_set2
          call setcc_with_code_8_flags_set2_constant
          call setcc_with_code_8_flags_set2_allregs
          call setcc_with_code_8_flags_cmp
          call setcc_with_code_8_flags_cmp_constant
          call setcc_with_code_8_flags_cmp_allregs
          call setcc_with_code_9_flags_clear
          call setcc_with_code_9_flags_clear_constant
          call setcc_with_code_9_flags_clear_allregs
          call setcc_with_code_9_flags_set1
          call setcc_with_code_9_flags_set1_constant
          call setcc_with_code_9_flags_set1_allregs
          call setcc_with_code_9_flags_set2
          call setcc_with_code_9_flags_set2_constant
          call setcc_with_code_9_flags_set2_allregs
          call setcc_with_code_9_flags_cmp
          call setcc_with_code_9_flags_cmp_constant
          call setcc_with_code_9_flags_cmp_allregs
          call setcc_with_code_a_flags_clear
          call setcc_with_code_a_flags_clear_constant
          call setcc_with_code_a_flags_clear_allregs
          call setcc_with_code_a_flags_set1
          call setcc_with_code_a_flags_set1_constant
          call setcc_with_code_a_flags_set1_allregs
          call setcc_with_code_a_flags_set2
          call setcc_with_code_a_flags_set2_constant
          call setcc_with_code_a_flags_set2_allregs
          call setcc_with_code_a_flags_cmp
          call setcc_with_code_a_flags_cmp_constant
          call setcc_with_code_a_flags_cmp_allregs
          call setcc_with_code_b_flags_clear
          call setcc_with_code_b_flags_clear_constant
          call setcc_with_code_b_flags_clear_allregs
          call setcc_with_code_b_flags_set1
          call setcc_with_code_b_flags_set1_constant
          call setcc_with_code_b_flags_set1_allregs
          call setcc_with_code_b_flags_set2
          call setcc_with_code_b_flags_set2_constant
          call setcc_with_code_b_flags_set2_allregs
          call setcc_with_code_b_flags_cmp
          call setcc_with_code_b_flags_cmp_constant
          call setcc_with_code_b_flags_cmp_allregs
          call setcc_with_code_c_flags_clear
          call setcc_with_code_c_flags_clear_constant
          call setcc_with_code_c_flags_clear_allregs
          call setcc_with_code_c_flags_set1
          call setcc_with_code_c_flags_set1_constant
          call setcc_with_code_c_flags_set1_allregs
          call setcc_with_code_c_flags_set2
          call setcc_with_code_c_flags_set2_constant
          call setcc_with_code_c_flags_set2_allregs
          call setcc_with_code_c_flags_cmp
          call setcc_with_code_c_flags_cmp_constant
          call setcc_with_code_c_flags_cmp_allregs
          call setcc_with_code_d_flags_clear
          call setcc_with_code_d_flags_clear_constant
          call setcc_with_code_d_flags_clear_allregs
          call setcc_with_code_d_flags_set1
          call setcc_with_code_d_flags_set1_constant
          call setcc_with_code_d_flags_set1_allregs
          call setcc_with_code_d_flags_set2
          call setcc_with_code_d_flags_set2_constant
          call setcc_with_code_d_flags_set2_allregs
          call setcc_with_code_d_flags_cmp
          call setcc_with_code_d_flags_cmp_constant
          call setcc_with_code_d_flags_cmp_allregs
          call setcc_with_code_e_flags_clear
          call setcc_with_code_e_flags_clear_constant
          call setcc_with_code_e_flags_clear_allregs
          call setcc_with_code_e_flags_set1
          call setcc_with_code_e_flags_set1_constant
          call setcc_with_code_e_flags_set1_allregs
          call setcc_with_code_e_flags_set2
          call setcc_with_code_e_flags_set2_constant
          call setcc_with_code_e_flags_set2_allregs
          call setcc_with_code_e_flags_cmp
          call setcc_with_code_e_flags_cmp_constant
          call setcc_with_code_e_flags_cmp_allregs
          call setcc_with_code_f_flags_clear
          call setcc_with_code_f_flags_clear_constant
          call setcc_with_code_f_flags_clear_allregs
          call setcc_with_code_f_flags_set1
          call setcc_with_code_f_flags_set1_constant
          call setcc_with_code_f_flags_set1_allregs
          call setcc_with_code_f_flags_set2
          call setcc_with_code_f_flags_set2_constant
          call setcc_with_code_f_flags_set2_allregs
          call setcc_with_code_f_flags_cmp
          call setcc_with_code_f_flags_cmp_constant
          call setcc_with_code_f_flags_cmp_allregs
          call sgdt
          call sgdt_constant
          call sgdt_allregs
          call sidt
          call sidt_constant
          call sidt_allregs
          call shld1
          call shld1_constant
          call shld1_allregs
          call shld2
          call shld2_constant
          call shld2_allregs
          call shld3
          call shld3_constant
          call shld3_allregs
          call shld4
          call shld4_constant
          call shld4_allregs
          call shrd1
          call shrd1_constant
          call shrd1_allregs
          call shrd2
          call shrd2_constant
          call shrd2_allregs
          call shrd3
          call shrd3_constant
          call shrd3_allregs
          call shrd4
          call shrd4_constant
          call shrd4_allregs
          call sldt
          call sldt_constant
          call sldt_allregs
          call smsw
          call smsw_constant
          call smsw_allregs
          call stc_flags_clear
          call stc_flags_clear_constant
          call stc_flags_clear_allregs
          call stc_flags_set1
          call stc_flags_set1_constant
          call stc_flags_set1_allregs
          call stc_flags_set2
          call stc_flags_set2_constant
          call stc_flags_set2_allregs
          call stc_flags_cmp
          call stc_flags_cmp_constant
          call stc_flags_cmp_allregs
          call std
          call std_constant
          call std_allregs
          call sti
          call sti_constant
          call sti_allregs
          call stos1_cld
          call stos1_cld_constant
          call stos1_cld_allregs
          call stos1_std
          call stos1_std_constant
          call stos1_std_allregs
          call stos1
          call stos1_constant
          call stos1_allregs
          call stos2_cld
          call stos2_cld_constant
          call stos2_cld_allregs
          call stos2_std
          call stos2_std_constant
          call stos2_std_allregs
          call stos2
          call stos2_constant
          call stos2_allregs
          call stos3_cld
          call stos3_cld_constant
          call stos3_cld_allregs
          call stos3_std
          call stos3_std_constant
          call stos3_std_allregs
          call stos3
          call stos3_constant
          call stos3_allregs
          call str
          call str_constant
          call str_allregs
          call sub1
          call sub1_constant
          call sub1_allregs
          call sub2
          call sub2_constant
          call sub2_allregs
          call sub3
          call sub3_constant
          call sub3_allregs
          call sub4
          call sub4_constant
          call sub4_allregs
          call sub5
          call sub5_constant
          call sub5_allregs
          call sub6
          call sub6_constant
          call sub6_allregs
          call sub7
          call sub7_constant
          call sub7_allregs
          call sub_locked
          call sub_locked_constant
          call sub_locked_allregs
          call test1
          call test1_constant
          call test1_allregs
          call test2
          call test2_constant
          call test2_allregs
          call test3
          call test3_constant
          call test3_allregs
          call test4
          call test4_constant
          call test4_allregs
          call test5
          call test5_constant
          call test5_allregs
          call test6
          call test6_constant
          call test6_allregs
          call test7
          call test7_constant
          call test7_allregs
          call test8
          call test8_constant
          call test8_allregs
          call test9
          call test9_constant
          call test9_allregs
          call verr
          call verr_constant
          call verr_allregs
          call verw
          call verw_constant
          call verw_allregs
          call wait
          call wait_constant
          call wait_allregs
          call xchg1
          call xchg1_constant
          call xchg1_allregs
          call xchg2
          call xchg2_constant
          call xchg2_allregs
          call xchg3
          call xchg3_constant
          call xchg3_allregs
          call xchg4
          call xchg4_constant
          call xchg4_allregs
          call xchg5
          call xchg5_constant
          call xchg5_allregs
          call xchg_locked
          call xchg_locked_constant
          call xchg_locked_allregs
          call xlat1
          call xlat1_constant
          call xlat1_allregs
          call xlat2
          call xlat2_constant
          call xlat2_allregs
          call xor1
          call xor1_constant
          call xor1_allregs
          call xor2
          call xor2_constant
          call xor2_allregs
          call xor3
          call xor3_constant
          call xor3_allregs
          call xor4
          call xor4_constant
          call xor4_allregs
          call xor5
          call xor5_constant
          call xor5_allregs
          call xor6
          call xor6_constant
          call xor6_allregs
          call xor7
          call xor7_constant
          call xor7_allregs
          call xor8
          call xor8_constant
          call xor8_allregs
          call xor9
          call xor9_constant
          call xor9_allregs
          call xor_locked
          call xor_locked_constant
          call xor_locked_allregs
         .size   main, .-main
