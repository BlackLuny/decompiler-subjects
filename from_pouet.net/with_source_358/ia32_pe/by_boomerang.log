Unknown library function CreateFileA
assgn   33 *32* m[r28 - 4] := m[0x403016]
assgn   45 *32* m[r28 - 4] := m[0x40301a]
assgn   57 *32* m[r28 - 4] := m[0x40301e]
assgn   69 *32* m[r28 - 4] := m[0x40301a]
assgn  110 *32* m[r28 - 4] := m[0x40308d]
assgn  124 *32* m[r28 - 4] := m[0x40308d]
assgn  136 *32* m[r28 - 4] := m[0x40308d]
assgn  150 *32* m[r28 - 4] := m[0x40308d]
assgn  162 *32* m[r28 - 4] := m[0x40308d]
assgn  176 *32* m[r28 - 4] := m[0x40308d]
assgn  188 *32* m[r28 - 4] := m[0x40308d]
assgn  202 *32* m[r28 - 4] := m[0x40308d]
assgn  208 *32* m[r28 - 4] := m[0x40308d]
assgn  240 *32* m[r28 - 4] := m[0x403016]
assgn  246 *32* m[r28 - 4] := m[0x40301a]
assgn  252 *32* m[r28 - 4] := m[0x40301e]
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure _start ###
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 20 to local table
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 32 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 52 to local table
in proc _start adding addrExp r28{0} - 4 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28{0} - 8 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffff8 existing type unsigned int but added type HANDLE
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28{0} - 8 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffff8 existing type unsigned int but added type HANDLE
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28{0} - 8 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffff8 existing type unsigned int but added type HANDLE
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28{0} - 8 to local table
TYPE DIFFERENCE (could be OK): At address 0xfffffff8 existing type unsigned int but added type HANDLE
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 20 to local table
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 32 to local table
in proc _start adding addrExp r28{0} - 32 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 32 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 48 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffd0 existing type unsigned int but added type HANDLE
in proc _start adding addrExp r28{0} - 52 to local table
in proc _start adding addrExp r28{0} - 32 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 32 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 48 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffd0 existing type unsigned int but added type HANDLE
in proc _start adding addrExp r28{0} - 52 to local table
in proc _start adding addrExp r28{0} - 32 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 32 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 48 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffd0 existing type unsigned int but added type HANDLE
in proc _start adding addrExp r28{0} - 52 to local table
in proc _start adding addrExp r28{0} - 32 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 32 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 48 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffd0 existing type unsigned int but added type HANDLE
in proc _start adding addrExp r28{0} - 52 to local table
in proc _start adding addrExp r28{0} - 32 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffe0 existing type unsigned int but added type HANDLE
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 20 to local table
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 32 to local table
in proc _start adding addrExp r28{0} - 32 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 12 to local table
in proc _start adding addrExp r28{0} - 16 to local table
in proc _start adding addrExp r28{0} - 20 to local table
in proc _start adding addrExp r28{0} - 24 to local table
in proc _start adding addrExp r28{0} - 28 to local table
in proc _start adding addrExp r28{0} - 32 to local table
in proc _start adding addrExp r28{0} - 36 to local table
in proc _start adding addrExp r28{0} - 40 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 48 to local table
in proc _start adding addrExp r28{0} - 52 to local table
finding final parameters for _start
potential param r28
found new parameter r28
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 8 to local table
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 48 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffd0 existing type unsigned int but added type HANDLE
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 48 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffd0 existing type unsigned int but added type HANDLE
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 48 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffd0 existing type unsigned int but added type HANDLE
in proc _start adding addrExp r28{0} - 44 to local table
in proc _start adding addrExp r28{0} - 48 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffd0 existing type unsigned int but added type HANDLE
in proc _start adding addrExp r28{0} - 32 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffe0 existing type unsigned int but added type HANDLE
local esp has type void * that doesn't agree with type of define void of a library, why?
local esp has type void that doesn't agree with type of define void * of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
dest is not lib
call:    6 {*32* eax, *v* r25, *v* r26, *v** esp_1} := CALL LoadLibraryA(
                *LPCSTR* local0 := "kernel32"
              )
              Reaching definitions: r28=r28{0} - 8,   m[r28{0} - 4]=0x403000,   m[r28{0} - 8]=%pc,
                m[r28{0} - 12]=m[r28{0} - 12]{0},   m[r28{0} - 16]=m[r28{0} - 16]{0},
                m[r28{0} - 20]=m[r28{0} - 20]{0},   m[r28{0} - 24]=m[r28{0} - 24]{0},
                m[r28{0} - 28]=m[r28{0} - 28]{0},   m[r28{0} - 32]=m[r28{0} - 32]{0},
                m[r28{0} - 36]=m[r28{0} - 36]{0},   m[r28{0} - 40]=m[r28{0} - 40]{0},
                m[r28{0} - 44]=m[r28{0} - 44]{0},   m[r28{0} - 48]=m[r28{0} - 48]{0},
                m[r28{0} - 52]=m[r28{0} - 52]{0}
              Live variables: eax,  esp_1 in proc _start
result:    0 *32* eax := -
result:    0 *v** esp_1 := -
dest is not lib
call:  226 {*32* eax, *v* r25, *v* r26, *v** esp} := CALL MessageBoxA(
                *HWND* m[esp_1 - 16] := m[esp_1 - 16]
                *LPCSTR* m[esp_1 - 12] := m[esp_1 - 12]
                *LPCSTR* m[esp_1 - 8] := m[esp_1 - 8]
                *UINT* m[esp_1 - 4] := m[esp_1 - 4]
              )
              Reaching definitions: r24=r24{265},   r25=r25{266},   r26=r26{267},   r28=r28{268} - 20,
                m[r28{0} - 4]=m[r28{0} - 4]{281},   m[r28{0} - 8]=m[r28{0} - 8]{282},
                m[r28{0} - 12]=m[r28{0} - 12]{283},   m[r28{0} - 16]=m[r28{0} - 16]{284},
                m[r28{0} - 20]=m[r28{0} - 20]{285},   m[r28{0} - 24]=m[r28{0} - 24]{286},
                m[r28{0} - 28]=m[r28{0} - 28]{287},   m[r28{0} - 32]=m[r28{0} - 32]{288},
                m[r28{0} - 36]=m[r28{0} - 36]{0},   m[r28{0} - 40]=m[r28{0} - 40]{0},
                m[r28{0} - 44]=m[r28{0} - 44]{0},   m[r28{0} - 48]=m[r28{0} - 48]{0},
                m[r28{0} - 52]=m[r28{0} - 52]{0},   tmp1=tmp1{269},   %flags=%flags{270},   %ZF=%ZF{271},
                %CF=%CF{272}
              Live variables: esp in proc _start
result:    0 *v** esp := -
dest is not lib
call:   16 {*32* eax, *v* r25, *v* r26, *v** esp_2} := CALL LoadLibraryA(
                *LPCSTR* local0 := "user32"
              )
              Reaching definitions: r24=r24{6},   r25=r25{6},   r26=r26{6},   r28=r28{0} - 8,   m[r28{0} - 4]=0x403009,
                m[r28{0} - 8]=%pc,   m[r28{0} - 12]=m[r28{0} - 12]{0},   m[r28{0} - 16]=m[r28{0} - 16]{0},
                m[r28{0} - 20]=m[r28{0} - 20]{0},   m[r28{0} - 24]=m[r28{0} - 24]{0},
                m[r28{0} - 28]=m[r28{0} - 28]{0},   m[r28{0} - 32]=m[r28{0} - 32]{0},
                m[r28{0} - 36]=m[r28{0} - 36]{0},   m[r28{0} - 40]=m[r28{0} - 40]{0},
                m[r28{0} - 44]=m[r28{0} - 44]{0},   m[r28{0} - 48]=m[r28{0} - 48]{0},
                m[r28{0} - 52]=m[r28{0} - 52]{0},   tmp1=r24{6},   %flags=LOGICALFLAGS32( r24{6} ),
                %ZF=LOGICALFLAGS32( r24{6} ),   %CF=LOGICALFLAGS32( r24{6} )
              Live variables: eax,  esp_2 in proc _start
result:    0 *32* eax := -
result:    0 *v** esp_2 := -
dest is not lib
call:   26 {*32* eax, *v* r25, *v* r26, *v** esp_3} := CALL LoadLibraryA(
                *LPCSTR* local0 := "gdi32"
              )
              Reaching definitions: r24=r24{16},   r25=r25{16},   r26=r26{16},   r28=r28{0} - 8,
                m[r28{0} - 4]=0x403010,   m[r28{0} - 8]=%pc,   m[r28{0} - 12]=m[r28{0} - 12]{0},
                m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 20]=m[r28{0} - 20]{0},
                m[r28{0} - 24]=m[r28{0} - 24]{0},   m[r28{0} - 28]=m[r28{0} - 28]{0},
                m[r28{0} - 32]=m[r28{0} - 32]{0},   m[r28{0} - 36]=m[r28{0} - 36]{0},
                m[r28{0} - 40]=m[r28{0} - 40]{0},   m[r28{0} - 44]=m[r28{0} - 44]{0},
                m[r28{0} - 48]=m[r28{0} - 48]{0},   m[r28{0} - 52]=m[r28{0} - 52]{0},   tmp1=r24{16},
                %flags=LOGICALFLAGS32( r24{16} ),   %ZF=LOGICALFLAGS32( r24{16} ),   %CF=LOGICALFLAGS32( r24{16} )
              Live variables: eax,  esp_3 in proc _start
result:    0 *32* eax := -
result:    0 *v** esp_3 := -
dest is not lib
call:   38 {*32* eax, *v* r25, *v* r26, *v** esp_4} := CALL GetProcAddress(
                *HANDLE* local1 := local1
                *c** local0 := "LoadLibraryA"
              )
              Reaching definitions: r24=r24{26},   r25=r25{26},   r26=r26{26},   r28=r28{0} - 12,
                m[r28{0} - 4]=0x403022,   m[r28{0} - 8]=m[r28{0} - 8]{33},   m[r28{0} - 12]=%pc,
                m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 20]=m[r28{0} - 20]{0},
                m[r28{0} - 24]=m[r28{0} - 24]{0},   m[r28{0} - 28]=m[r28{0} - 28]{0},
                m[r28{0} - 32]=m[r28{0} - 32]{0},   m[r28{0} - 36]=m[r28{0} - 36]{0},
                m[r28{0} - 40]=m[r28{0} - 40]{0},   m[r28{0} - 44]=m[r28{0} - 44]{0},
                m[r28{0} - 48]=m[r28{0} - 48]{0},   m[r28{0} - 52]=m[r28{0} - 52]{0},   tmp1=r24{26},
                %flags=LOGICALFLAGS32( r24{26} ),   %ZF=LOGICALFLAGS32( r24{26} ),   %CF=LOGICALFLAGS32( r24{26} )
              Live variables: eax,  esp_4 in proc _start
result:    0 *32* eax := -
result:    0 *v** esp_4 := -
dest is not lib
call:   50 {*32* eax, *v* r25, *v* r26, *v** esp_5} := CALL GetProcAddress(
                *HANDLE* local1 := local1
                *c** local0 := "GetDC"
              )
              Reaching definitions: r24=r24{38},   r25=r25{38},   r26=r26{38},   r28=r28{0} - 12,
                m[r28{0} - 4]=0x40302f,   m[r28{0} - 8]=m[r28{0} - 8]{45},   m[r28{0} - 12]=%pc,
                m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 20]=m[r28{0} - 20]{0},
                m[r28{0} - 24]=m[r28{0} - 24]{0},   m[r28{0} - 28]=m[r28{0} - 28]{0},
                m[r28{0} - 32]=m[r28{0} - 32]{0},   m[r28{0} - 36]=m[r28{0} - 36]{0},
                m[r28{0} - 40]=m[r28{0} - 40]{0},   m[r28{0} - 44]=m[r28{0} - 44]{0},
                m[r28{0} - 48]=m[r28{0} - 48]{0},   m[r28{0} - 52]=m[r28{0} - 52]{0},   tmp1=r24{38},
                %flags=LOGICALFLAGS32( r24{38} ),   %ZF=LOGICALFLAGS32( r24{38} ),   %CF=LOGICALFLAGS32( r24{38} )
              Live variables: eax,  esp_5 in proc _start
result:    0 *32* eax := -
result:    0 *v** esp_5 := -
dest is not lib
call:   62 {*32* eax, *v* r25, *v* r26, *v** esp_6} := CALL GetProcAddress(
                *HANDLE* local1 := local1
                *c** local0 := "SetPixel"
              )
              Reaching definitions: r24=r24{50},   r25=r25{50},   r26=r26{50},   r28=r28{0} - 12,
                m[r28{0} - 4]=0x403035,   m[r28{0} - 8]=m[r28{0} - 8]{57},   m[r28{0} - 12]=%pc,
                m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 20]=m[r28{0} - 20]{0},
                m[r28{0} - 24]=m[r28{0} - 24]{0},   m[r28{0} - 28]=m[r28{0} - 28]{0},
                m[r28{0} - 32]=m[r28{0} - 32]{0},   m[r28{0} - 36]=m[r28{0} - 36]{0},
                m[r28{0} - 40]=m[r28{0} - 40]{0},   m[r28{0} - 44]=m[r28{0} - 44]{0},
                m[r28{0} - 48]=m[r28{0} - 48]{0},   m[r28{0} - 52]=m[r28{0} - 52]{0},   tmp1=r24{50},
                %flags=LOGICALFLAGS32( r24{50} ),   %ZF=LOGICALFLAGS32( r24{50} ),   %CF=LOGICALFLAGS32( r24{50} )
              Live variables: eax,  esp_6 in proc _start
result:    0 *32* eax := -
result:    0 *v** esp_6 := -
dest is not lib
call:   74 {*32* eax, *v* r25, *v* r26, *v** esp_7} := CALL GetProcAddress(
                *HANDLE* local1 := local1
                *c** local0 := "ReleaseDC"
              )
              Reaching definitions: r24=r24{62},   r25=r25{62},   r26=r26{62},   r28=r28{0} - 12,
                m[r28{0} - 4]=0x40303e,   m[r28{0} - 8]=m[r28{0} - 8]{69},   m[r28{0} - 12]=%pc,
                m[r28{0} - 16]=m[r28{0} - 16]{0},   m[r28{0} - 20]=m[r28{0} - 20]{0},
                m[r28{0} - 24]=m[r28{0} - 24]{0},   m[r28{0} - 28]=m[r28{0} - 28]{0},
                m[r28{0} - 32]=m[r28{0} - 32]{0},   m[r28{0} - 36]=m[r28{0} - 36]{0},
                m[r28{0} - 40]=m[r28{0} - 40]{0},   m[r28{0} - 44]=m[r28{0} - 44]{0},
                m[r28{0} - 48]=m[r28{0} - 48]{0},   m[r28{0} - 52]=m[r28{0} - 52]{0},   tmp1=r24{62},
                %flags=LOGICALFLAGS32( r24{62} ),   %ZF=LOGICALFLAGS32( r24{62} ),   %CF=LOGICALFLAGS32( r24{62} )
              Live variables: eax,  esp_7 in proc _start
result:    0 *32* eax := -
result:    0 *v** esp_7 := -
dest is not lib
call:   96 {*32* eax, *v* r25, *v* r26, *v** esp_8} := CALL CreateFileA(
              )
              Reaching definitions: r24=r24{74},   r25=r25{74},   r26=r26{74},   r28=r28{0} - 32,   m[r28{0} - 4]=0,
                m[r28{0} - 8]=128,   m[r28{0} - 12]=3,   m[r28{0} - 16]=0,   m[r28{0} - 20]=0,
                m[r28{0} - 24]=0x40000000,   m[r28{0} - 28]=0x403080,   m[r28{0} - 32]=%pc,
                m[r28{0} - 36]=m[r28{0} - 36]{0},   m[r28{0} - 40]=m[r28{0} - 40]{0},
                m[r28{0} - 44]=m[r28{0} - 44]{0},   m[r28{0} - 48]=m[r28{0} - 48]{0},
                m[r28{0} - 52]=m[r28{0} - 52]{0},   tmp1=r24{74},   %flags=LOGICALFLAGS32( r24{74} ),
                %ZF=LOGICALFLAGS32( r24{74} ),   %CF=LOGICALFLAGS32( r24{74} )
              Live variables: eax,  esp_8 in proc _start
result:    0 *32* eax := -
result:    0 *v** esp_8 := -
dest is not lib
call:  115 {*32* eax, *v* r25, *v* r26, *v* esp} := CALL SetFilePointer(
                *HANDLE* local2 := local2
                *LONG* local3 := 186
                *PLONG* local4 := 0
                *DWORD* local5 := 0
              )
              Reaching definitions: r24=r24{96} + 1,   r25=r25{96},   r26=r26{96},   r28=r28{0} - 48,   m[r28{0} - 4]=0
                m[r28{0} - 8]=128,   m[r28{0} - 12]=3,   m[r28{0} - 16]=0,   m[r28{0} - 20]=0,
                m[r28{0} - 24]=0x40000000,   m[r28{0} - 28]=0x403080,   m[r28{0} - 32]=0,   m[r28{0} - 36]=0,
                m[r28{0} - 40]=186,   m[r28{0} - 44]=m[r28{0} - 44]{110},   m[r28{0} - 48]=%pc,
                m[r28{0} - 52]=m[r28{0} - 52]{0},   tmp1=r24{96} + 1,   %flags=LOGICALFLAGS32( r24{96} + 1 ),
                %ZF=LOGICALFLAGS32( r24{96} + 1 ),   %CF=LOGICALFLAGS32( r24{96} + 1 )
              Live variables:  in proc _start
dest is not lib
call:  129 {*32* eax, *v* r25, *v* r26, *v* esp} := CALL WriteFile(
                *HANDLE* local6 := local6
                *LPCVOID* local2 := 0x403048
                *DWORD* local3 := 4
                *LPDWORD* local7 := 0x403091
                *LPOVERLAPPED* local8 := 0
              )
              Reaching definitions: r24=r24{115},   r25=r25{115},   r26=r26{115},   r28=r28{0} - 52,   m[r28{0} - 4]=0,
                m[r28{0} - 8]=128,   m[r28{0} - 12]=3,   m[r28{0} - 16]=0,   m[r28{0} - 20]=0,
                m[r28{0} - 24]=0x40000000,   m[r28{0} - 28]=0x403080,   m[r28{0} - 32]=0,   m[r28{0} - 36]=0x403091,
                m[r28{0} - 40]=4,   m[r28{0} - 44]=0x403048,   m[r28{0} - 48]=m[r28{0} - 48]{124},   m[r28{0} - 52]=%pc
                tmp1=r24{96} + 1,   %flags=LOGICALFLAGS32( r24{96} + 1 ),   %ZF=LOGICALFLAGS32( r24{96} + 1 ),
                %CF=LOGICALFLAGS32( r24{96} + 1 )
              Live variables:  in proc _start
dest is not lib
call:  141 {*32* eax, *v* r25, *v* r26, *v* esp} := CALL SetFilePointer(
                *HANDLE* local2 := local2
                *LONG* local3 := 196
                *PLONG* local4 := 0
                *DWORD* local5 := 0
              )
              Reaching definitions: r24=r24{129},   r25=r25{129},   r26=r26{129},   r28=r28{0} - 48,   m[r28{0} - 4]=0,
                m[r28{0} - 8]=128,   m[r28{0} - 12]=3,   m[r28{0} - 16]=0,   m[r28{0} - 20]=0,
                m[r28{0} - 24]=0x40000000,   m[r28{0} - 28]=0x403080,   m[r28{0} - 32]=0,   m[r28{0} - 36]=0,
                m[r28{0} - 40]=196,   m[r28{0} - 44]=m[r28{0} - 44]{136},   m[r28{0} - 48]=%pc,   m[r28{0} - 52]=%pc,
                tmp1=r24{96} + 1,   %flags=LOGICALFLAGS32( r24{96} + 1 ),   %ZF=LOGICALFLAGS32( r24{96} + 1 ),
                %CF=LOGICALFLAGS32( r24{96} + 1 )
              Live variables:  in proc _start
dest is not lib
call:  155 {*32* eax, *v* r25, *v* r26, *v* esp} := CALL WriteFile(
                *HANDLE* local6 := local6
                *LPCVOID* local2 := 0x40304c
                *DWORD* local3 := 4
                *LPDWORD* local7 := 0x403091
                *LPOVERLAPPED* local8 := 0
              )
              Reaching definitions: r24=r24{141},   r25=r25{141},   r26=r26{141},   r28=r28{0} - 52,   m[r28{0} - 4]=0,
                m[r28{0} - 8]=128,   m[r28{0} - 12]=3,   m[r28{0} - 16]=0,   m[r28{0} - 20]=0,
                m[r28{0} - 24]=0x40000000,   m[r28{0} - 28]=0x403080,   m[r28{0} - 32]=0,   m[r28{0} - 36]=0x403091,
                m[r28{0} - 40]=4,   m[r28{0} - 44]=0x40304c,   m[r28{0} - 48]=m[r28{0} - 48]{150},   m[r28{0} - 52]=%pc
                tmp1=r24{96} + 1,   %flags=LOGICALFLAGS32( r24{96} + 1 ),   %ZF=LOGICALFLAGS32( r24{96} + 1 ),
                %CF=LOGICALFLAGS32( r24{96} + 1 )
              Live variables:  in proc _start
dest is not lib
call:  167 {*32* eax, *v* r25, *v* r26, *v* esp} := CALL SetFilePointer(
                *HANDLE* local2 := local2
                *LONG* local3 := 221
                *PLONG* local4 := 0
                *DWORD* local5 := 0
              )
              Reaching definitions: r24=r24{155},   r25=r25{155},   r26=r26{155},   r28=r28{0} - 48,   m[r28{0} - 4]=0,
                m[r28{0} - 8]=128,   m[r28{0} - 12]=3,   m[r28{0} - 16]=0,   m[r28{0} - 20]=0,
                m[r28{0} - 24]=0x40000000,   m[r28{0} - 28]=0x403080,   m[r28{0} - 32]=0,   m[r28{0} - 36]=0,
                m[r28{0} - 40]=221,   m[r28{0} - 44]=m[r28{0} - 44]{162},   m[r28{0} - 48]=%pc,   m[r28{0} - 52]=%pc,
                tmp1=r24{96} + 1,   %flags=LOGICALFLAGS32( r24{96} + 1 ),   %ZF=LOGICALFLAGS32( r24{96} + 1 ),
                %CF=LOGICALFLAGS32( r24{96} + 1 )
              Live variables:  in proc _start
dest is not lib
call:  181 {*32* eax, *v* r25, *v* r26, *v* esp} := CALL WriteFile(
                *HANDLE* local6 := local6
                *LPCVOID* local2 := 0x403050
                *DWORD* local3 := 4
                *LPDWORD* local7 := 0x403091
                *LPOVERLAPPED* local8 := 0
              )
              Reaching definitions: r24=r24{167},   r25=r25{167},   r26=r26{167},   r28=r28{0} - 52,   m[r28{0} - 4]=0,
                m[r28{0} - 8]=128,   m[r28{0} - 12]=3,   m[r28{0} - 16]=0,   m[r28{0} - 20]=0,
                m[r28{0} - 24]=0x40000000,   m[r28{0} - 28]=0x403080,   m[r28{0} - 32]=0,   m[r28{0} - 36]=0x403091,
                m[r28{0} - 40]=4,   m[r28{0} - 44]=0x403050,   m[r28{0} - 48]=m[r28{0} - 48]{176},   m[r28{0} - 52]=%pc
                tmp1=r24{96} + 1,   %flags=LOGICALFLAGS32( r24{96} + 1 ),   %ZF=LOGICALFLAGS32( r24{96} + 1 ),
                %CF=LOGICALFLAGS32( r24{96} + 1 )
              Live variables:  in proc _start
dest is not lib
call:  193 {*32* eax, *v* r25, *v* r26, *v* esp} := CALL SetFilePointer(
                *HANDLE* local2 := local2
                *LONG* local3 := 247
                *PLONG* local4 := 0
                *DWORD* local5 := 0
              )
              Reaching definitions: r24=r24{181},   r25=r25{181},   r26=r26{181},   r28=r28{0} - 48,   m[r28{0} - 4]=0,
                m[r28{0} - 8]=128,   m[r28{0} - 12]=3,   m[r28{0} - 16]=0,   m[r28{0} - 20]=0,
                m[r28{0} - 24]=0x40000000,   m[r28{0} - 28]=0x403080,   m[r28{0} - 32]=0,   m[r28{0} - 36]=0,
                m[r28{0} - 40]=247,   m[r28{0} - 44]=m[r28{0} - 44]{188},   m[r28{0} - 48]=%pc,   m[r28{0} - 52]=%pc,
                tmp1=r24{96} + 1,   %flags=LOGICALFLAGS32( r24{96} + 1 ),   %ZF=LOGICALFLAGS32( r24{96} + 1 ),
                %CF=LOGICALFLAGS32( r24{96} + 1 )
              Live variables:  in proc _start
dest is not lib
call:  207 {*32* eax, *v* r25, *v* r26, *v* esp} := CALL WriteFile(
                *HANDLE* local6 := local6
                *LPCVOID* local2 := 0x403054
                *DWORD* local3 := 4
                *LPDWORD* local7 := 0x403091
                *LPOVERLAPPED* local8 := 0
              )
              Reaching definitions: r24=r24{193},   r25=r25{193},   r26=r26{193},   r28=r28{0} - 52,   m[r28{0} - 4]=0,
                m[r28{0} - 8]=128,   m[r28{0} - 12]=3,   m[r28{0} - 16]=0,   m[r28{0} - 20]=0,
                m[r28{0} - 24]=0x40000000,   m[r28{0} - 28]=0x403080,   m[r28{0} - 32]=0,   m[r28{0} - 36]=0x403091,
                m[r28{0} - 40]=4,   m[r28{0} - 44]=0x403054,   m[r28{0} - 48]=m[r28{0} - 48]{202},   m[r28{0} - 52]=%pc
                tmp1=r24{96} + 1,   %flags=LOGICALFLAGS32( r24{96} + 1 ),   %ZF=LOGICALFLAGS32( r24{96} + 1 ),
                %CF=LOGICALFLAGS32( r24{96} + 1 )
              Live variables:  in proc _start
dest is not lib
call:  213 {*32* eax, *v* r25, *v* r26, *v* esp} := CALL CloseHandle(
                *HANDLE* local9 := local9
              )
              Reaching definitions: r24=r24{207},   r25=r25{207},   r26=r26{207},   r28=r28{0} - 36,   m[r28{0} - 4]=0,
                m[r28{0} - 8]=128,   m[r28{0} - 12]=3,   m[r28{0} - 16]=0,   m[r28{0} - 20]=0,
                m[r28{0} - 24]=0x40000000,   m[r28{0} - 28]=0x403080,   m[r28{0} - 32]=m[r28{0} - 32]{208},
                m[r28{0} - 36]=%pc,   m[r28{0} - 40]=4,   m[r28{0} - 44]=0x403054,   m[r28{0} - 48]=m[r28{0} - 48]{202}
                m[r28{0} - 52]=%pc,   tmp1=r24{96} + 1,   %flags=LOGICALFLAGS32( r24{96} + 1 ),
                %ZF=LOGICALFLAGS32( r24{96} + 1 ),   %CF=LOGICALFLAGS32( r24{96} + 1 )
              Live variables:  in proc _start
dest is not lib
call:  239 {*32* eax, *v* r25, *v* r26, *v** esp} := CALL MessageBoxA(
                *HWND* local10 := 0
                *LPCSTR* local11 := "DONE! (^_^)"
                *LPCSTR* local12 := "ROXOR-2A SETUP"
                *UINT* local5 := 0
              )
              Reaching definitions: r24=r24{213},   r25=r25{213},   r26=r26{213},   r28=r28{0} - 48,   m[r28{0} - 4]=0,
                m[r28{0} - 8]=128,   m[r28{0} - 12]=3,   m[r28{0} - 16]=0,   m[r28{0} - 20]=0,
                m[r28{0} - 24]=0x40000000,   m[r28{0} - 28]=0x403080,   m[r28{0} - 32]=0,   m[r28{0} - 36]=0x403058,
                m[r28{0} - 40]=0x403067,   m[r28{0} - 44]=0,   m[r28{0} - 48]=%pc,   m[r28{0} - 52]=%pc,
                tmp1=r24{96} + 1,   %flags=LOGICALFLAGS32( r24{96} + 1 ),   %ZF=LOGICALFLAGS32( r24{96} + 1 ),
                %CF=LOGICALFLAGS32( r24{96} + 1 )
              Live variables: esp in proc _start
result:    0 *v** esp := -
dest is not lib
call:  245 {*32* eax, *v* r25, *v* r26, *v* esp} := CALL FreeLibrary(
                *j32* m[esp - 4] := m[esp - 4]
              )
              Reaching definitions: r24=r24{273},   r25=r25{274},   r26=r26{275},   r28=r28{276} - 8,
                m[r28{0} - 4]=m[r28{0} - 4]{289},   m[r28{0} - 8]=m[r28{0} - 8]{290},
                m[r28{0} - 12]=m[r28{0} - 12]{291},   m[r28{0} - 16]=m[r28{0} - 16]{292},
                m[r28{0} - 20]=m[r28{0} - 20]{293},   m[r28{0} - 24]=m[r28{0} - 24]{294},
                m[r28{0} - 28]=m[r28{0} - 28]{295},   m[r28{0} - 32]=m[r28{0} - 32]{296},
                m[r28{0} - 36]=m[r28{0} - 36]{297},   m[r28{0} - 40]=m[r28{0} - 40]{298},
                m[r28{0} - 44]=m[r28{0} - 44]{299},   m[r28{0} - 48]=m[r28{0} - 48]{300},
                m[r28{0} - 52]=m[r28{0} - 52]{301},   tmp1=tmp1{277},   %flags=%flags{278},   %ZF=%ZF{279},
                %CF=%CF{280}
              Live variables:  in proc _start
dest is not lib
call:  251 {*32* eax, *v* r25, *v* r26, *v* esp} := CALL FreeLibrary(
                *j32* m[esp - 4] := m[esp - 4]
              )
              Reaching definitions: r24=r24{245},   r25=r25{245},   r26=r26{245},   r28=r28{276} - 8,
                m[r28{0} - 4]=m[r28{0} - 4]{289},   m[r28{0} - 8]=m[r28{0} - 8]{290},
                m[r28{0} - 12]=m[r28{0} - 12]{291},   m[r28{0} - 16]=m[r28{0} - 16]{292},
                m[r28{0} - 20]=m[r28{0} - 20]{293},   m[r28{0} - 24]=m[r28{0} - 24]{294},
                m[r28{0} - 28]=m[r28{0} - 28]{295},   m[r28{0} - 32]=m[r28{0} - 32]{296},
                m[r28{0} - 36]=m[r28{0} - 36]{297},   m[r28{0} - 40]=m[r28{0} - 40]{298},
                m[r28{0} - 44]=m[r28{0} - 44]{299},   m[r28{0} - 48]=m[r28{0} - 48]{300},
                m[r28{0} - 52]=m[r28{0} - 52]{301},   tmp1=tmp1{277},   %flags=%flags{278},   %ZF=%ZF{279},
                %CF=%CF{280}
              Live variables:  in proc _start
dest is not lib
call:  257 {*32* eax, *v* r25, *v* r26, *v* esp} := CALL FreeLibrary(
                *j32* m[esp - 4] := m[esp - 4]
              )
              Reaching definitions: r24=r24{251},   r25=r25{251},   r26=r26{251},   r28=r28{276} - 8,
                m[r28{0} - 4]=m[r28{0} - 4]{289},   m[r28{0} - 8]=m[r28{0} - 8]{290},
                m[r28{0} - 12]=m[r28{0} - 12]{291},   m[r28{0} - 16]=m[r28{0} - 16]{292},
                m[r28{0} - 20]=m[r28{0} - 20]{293},   m[r28{0} - 24]=m[r28{0} - 24]{294},
                m[r28{0} - 28]=m[r28{0} - 28]{295},   m[r28{0} - 32]=m[r28{0} - 32]{296},
                m[r28{0} - 36]=m[r28{0} - 36]{297},   m[r28{0} - 40]=m[r28{0} - 40]{298},
                m[r28{0} - 44]=m[r28{0} - 44]{299},   m[r28{0} - 48]=m[r28{0} - 48]{300},
                m[r28{0} - 52]=m[r28{0} - 52]{301},   tmp1=tmp1{277},   %flags=%flags{278},   %ZF=%ZF{279},
                %CF=%CF{280}
              Live variables:  in proc _start
dest is not lib
call:  263 {*32* eax, *v* r25, *v* r26, *v* esp} := CALL ExitProcess(
                *UINT* m[esp - 4] := m[esp - 4]
              )
              Reaching definitions: r24=r24{257},   r25=r25{257},   r26=r26{257},   r28=r28{276} - 8,
                m[r28{0} - 4]=m[r28{0} - 4]{289},   m[r28{0} - 8]=m[r28{0} - 8]{290},
                m[r28{0} - 12]=m[r28{0} - 12]{291},   m[r28{0} - 16]=m[r28{0} - 16]{292},
                m[r28{0} - 20]=m[r28{0} - 20]{293},   m[r28{0} - 24]=m[r28{0} - 24]{294},
                m[r28{0} - 28]=m[r28{0} - 28]{295},   m[r28{0} - 32]=m[r28{0} - 32]{296},
                m[r28{0} - 36]=m[r28{0} - 36]{297},   m[r28{0} - 40]=m[r28{0} - 40]{298},
                m[r28{0} - 44]=m[r28{0} - 44]{299},   m[r28{0} - 48]=m[r28{0} - 48]{300},
                m[r28{0} - 52]=m[r28{0} - 52]{301},   tmp1=tmp1{277},   %flags=%flags{278},   %ZF=%ZF{279},
                %CF=%CF{280}
              Live variables:  in proc _start
