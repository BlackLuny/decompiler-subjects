got filename main.c for main
got filename main.c for init
got filename main.c for FontInit
got filename main.c for MikmodInit
got filename main.c for XPrint
Unknown library function XClearWindow
Unknown library function MikMod_Update
Unknown library function XLoadQueryFont
Unknown library function XSetFont
Unknown library function XDrawString
Unknown library function XOpenDisplay
Unknown library function XCreateSimpleWindow
Unknown library function XMapWindow
Unknown library function XCreateGC
Unknown library function XParseColor
Unknown library function XAllocColor
Unknown library function XSetForeground
Unknown library function MikMod_RegisterAllDrivers
Unknown library function MikMod_RegisterAllLoaders
Unknown library function MikMod_Init
Unknown library function MikMod_strerror
Unknown library function Player_Load
Unknown library function Player_Start
assgn   23 *32* r24 := m[0x804a580]
assgn   39 *32* r24 := m[0x804a580]
assgn   43 *32* m[r28 - 4] := m[0x804a580]
assgn   56 *32* m[r28 - 4] := m[0x804a514]
assgn   58 *32* m[r28 - 4] := m[0x804a580]
assgn   67 *32* r24 := m[0x804a580]
assgn   75 *32* m[r28 - 4] := m[0x804a514]
assgn   77 *32* m[r28 - 4] := m[0x804a580]
assgn   91 *32* m[r28 - 4] := m[0x804a504]
assgn   93 *32* m[r28 - 4] := m[0x804a580]
assgn  107 *32* m[r28 - 4] := m[0x804a504]
assgn  109 *32* m[r28 - 4] := m[0x804a580]
assgn  121 *32* m[r28 - 4] := m[0x804a508]
assgn  123 *32* m[r28 - 4] := m[0x804a500]
assgn  125 *32* m[r28 - 4] := m[0x804a580]
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
in proc init adding addrExp r28{0} - 4 to local table
in proc init adding addrExp r28{0} - 28 to local table
in proc init adding addrExp r28{0} - 32 to local table
in proc init adding addrExp r28{0} - 28 to local table
in proc init adding addrExp r28{0} - 32 to local table
in proc init adding addrExp r28{0} - 36 to local table
in proc init adding addrExp r28{0} - 40 to local table
in proc init adding addrExp r28{0} - 44 to local table
in proc init adding addrExp r28{0} - 48 to local table
in proc init adding addrExp r28{0} - 52 to local table
in proc init adding addrExp r28{0} - 56 to local table
in proc init adding addrExp r28{0} - 60 to local table
in proc init adding addrExp r28{0} - 64 to local table
in proc init adding addrExp r28{0} - 24 to local table
in proc init adding addrExp r28{0} - 28 to local table
in proc init adding addrExp r28{0} - 32 to local table
in proc init adding addrExp r28{0} - 16 to local table
in proc init adding addrExp r28{0} - 20 to local table
in proc init adding addrExp r28{0} - 24 to local table
in proc init adding addrExp r28{0} - 28 to local table
in proc init adding addrExp r28{0} - 32 to local table
in proc init adding addrExp r28{0} - 16 to local table
in proc init adding addrExp r28{0} - 20 to local table
in proc init adding addrExp r28{0} - 24 to local table
in proc init adding addrExp r28{0} - 28 to local table
in proc init adding addrExp r28{0} - 32 to local table
in proc init adding addrExp r28{0} - 20 to local table
in proc init adding addrExp r28{0} - 24 to local table
in proc init adding addrExp r28{0} - 28 to local table
in proc init adding addrExp r28{0} - 32 to local table
in proc init adding addrExp r28{0} - 20 to local table
in proc init adding addrExp r28{0} - 24 to local table
in proc init adding addrExp r28{0} - 28 to local table
in proc init adding addrExp r28{0} - 32 to local table
finding final parameters for init
assgn   14 *32* m[r28 - 4] := m[0x804a580]
assgn   30 *32* m[r28 - 4] := m[0x804a500]
assgn   32 *32* m[r28 - 4] := m[0x804a580]
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
in proc FontInit adding addrExp r28{0} - 4 to local table
in proc FontInit adding addrExp r28{0} - 12 to local table
in proc FontInit adding addrExp r28{0} - 24 to local table
in proc FontInit adding addrExp r28{0} - 28 to local table
in proc FontInit adding addrExp r28{0} - 32 to local table
in proc FontInit adding addrExp r28{0} - 8 to local table
in proc FontInit adding addrExp r28{0} - 20 to local table
in proc FontInit adding addrExp r28{0} - 24 to local table
in proc FontInit adding addrExp r28{0} - 28 to local table
in proc FontInit adding addrExp r28{0} - 32 to local table
finding final parameters for FontInit
assgn   36 *32* m[r28 - 4] := m[0x804a4e4]
assgn   49 *32* m[r28 - 4] := m[0x804a4e0]
assgn   94 *32* m[r28 - 4] := m[0x804a4e4]
after removing matching assigns (%pc).
in proc MikmodInit adding addrExp r28{0} - 4 to local table
in proc MikmodInit adding addrExp r28{0} - 16 to local table
in proc MikmodInit adding addrExp r28{0} - 16 to local table
in proc MikmodInit adding addrExp r28{0} - 28 to local table
in proc MikmodInit adding addrExp r28{0} - 32 to local table
in proc MikmodInit adding addrExp r28{0} - 28 to local table
in proc MikmodInit adding addrExp r28{0} - 32 to local table
in proc MikmodInit adding addrExp r28{0} - 20 to local table
in proc MikmodInit adding addrExp r28{0} - 24 to local table
in proc MikmodInit adding addrExp r28{0} - 28 to local table
in proc MikmodInit adding addrExp r28{0} - 32 to local table
in proc MikmodInit adding addrExp r28{0} - 28 to local table
in proc MikmodInit adding addrExp r28{0} - 32 to local table
in proc MikmodInit adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc MikmodInit adding addrExp r28{0} - 8 to local table
in proc MikmodInit adding addrExp r28{0} - 16 to local table
in proc MikmodInit adding addrExp r28{0} - 20 to local table
TYPE ERROR: Existing type at address 0xffffffec is not structure or array type
in proc MikmodInit adding addrExp r28{0} - 24 to local table
TYPE ERROR: Existing type at address 0xffffffe8 is not structure or array type
in proc MikmodInit adding addrExp r28{0} - 28 to local table
in proc MikmodInit adding addrExp r28{0} - 32 to local table
in proc MikmodInit adding addrExp r28{0} - 20 to local table
in proc MikmodInit adding addrExp r28{0} - 24 to local table
in proc MikmodInit adding addrExp r28{0} - 28 to local table
in proc MikmodInit adding addrExp r28{0} - 32 to local table
in proc MikmodInit adding addrExp r28{0} - 8 to local table
in proc MikmodInit adding addrExp r28{0} - 28 to local table
in proc MikmodInit adding addrExp r28{0} - 32 to local table
in proc MikmodInit adding addrExp r28{0} - 24 to local table
in proc MikmodInit adding addrExp r28{0} - 28 to local table
in proc MikmodInit adding addrExp r28{0} - 32 to local table
in proc MikmodInit adding addrExp r28{0} - 28 to local table
in proc MikmodInit adding addrExp r28{0} - 32 to local table
in proc MikmodInit adding addrExp r28{0} - 28 to local table
in proc MikmodInit adding addrExp r28{0} - 32 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure MikmodInit ###
in proc MikmodInit adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc MikmodInit adding addrExp r28{0} - 16 to local table
in proc MikmodInit adding addrExp r28{0} - 16 to local table
in proc MikmodInit adding addrExp r28{0} - 28 to local table
in proc MikmodInit adding addrExp r28{0} - 32 to local table
in proc MikmodInit adding addrExp r28{0} - 28 to local table
in proc MikmodInit adding addrExp r28{0} - 32 to local table
in proc MikmodInit adding addrExp r28{0} - 20 to local table
in proc MikmodInit adding addrExp r28{0} - 24 to local table
in proc MikmodInit adding addrExp r28{0} - 28 to local table
in proc MikmodInit adding addrExp r28{0} - 32 to local table
in proc MikmodInit adding addrExp r28{0} - 28 to local table
in proc MikmodInit adding addrExp r28{0} - 32 to local table
in proc MikmodInit adding addrExp r28{0} - 4 to local table
TYPE ERROR: at address 0xfffffffc, overlapping type __size32 does not resolve to compound or array
in proc MikmodInit adding addrExp r28{0} - 8 to local table
in proc MikmodInit adding addrExp r28{0} - 16 to local table
in proc MikmodInit adding addrExp r28{0} - 20 to local table
TYPE ERROR: Existing type at address 0xffffffec is not structure or array type
in proc MikmodInit adding addrExp r28{0} - 24 to local table
TYPE ERROR: Existing type at address 0xffffffe8 is not structure or array type
in proc MikmodInit adding addrExp r28{0} - 28 to local table
in proc MikmodInit adding addrExp r28{0} - 32 to local table
in proc MikmodInit adding addrExp r28{0} - 20 to local table
in proc MikmodInit adding addrExp r28{0} - 24 to local table
in proc MikmodInit adding addrExp r28{0} - 28 to local table
in proc MikmodInit adding addrExp r28{0} - 32 to local table
in proc MikmodInit adding addrExp r28{0} - 8 to local table
in proc MikmodInit adding addrExp r28{0} - 28 to local table
in proc MikmodInit adding addrExp r28{0} - 32 to local table
in proc MikmodInit adding addrExp r28{0} - 24 to local table
in proc MikmodInit adding addrExp r28{0} - 28 to local table
in proc MikmodInit adding addrExp r28{0} - 32 to local table
in proc MikmodInit adding addrExp r28{0} - 28 to local table
in proc MikmodInit adding addrExp r28{0} - 32 to local table
in proc MikmodInit adding addrExp r28{0} - 28 to local table
in proc MikmodInit adding addrExp r28{0} - 32 to local table
finding final parameters for MikmodInit
potential param r28
found new parameter r28
assgn   97 *32* m[r28 - 4] := m[0x804a500]
assgn   99 *32* m[r28 - 4] := m[0x804a514]
assgn  101 *32* m[r28 - 4] := m[0x804a580]
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
WARNING: size 0x20 meet with double; allowing temporarily
WARNING: size 0x20 meet with double; allowing temporarily
WARNING: size 0x20 meet with double; allowing temporarily
WARNING: size 0x20 meet with double; allowing temporarily
WARNING: size 0x20 meet with double; allowing temporarily
WARNING: size 0x20 meet with double; allowing temporarily
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure XPrint ###
in proc XPrint adding addrExp r28{0} - 4 to local table
in proc XPrint adding addrExp r28{0} - 12 to local table
in proc XPrint adding addrExp r28{0} - 8 to local table
TYPE ERROR: Existing type at address 0xfffffff4 is not structure or array type
in proc XPrint adding addrExp r28{0} - 20 to local table
in proc XPrint adding addrExp r28{0} - 16 to local table
TYPE ERROR: Existing type at address 0xffffffec is not structure or array type
in proc XPrint adding addrExp r28{0} - 44 to local table
in proc XPrint adding addrExp r28{0} - 48 to local table
in proc XPrint adding addrExp r28{0} - 36 to local table
in proc XPrint adding addrExp r28{0} - 40 to local table
in proc XPrint adding addrExp r28{0} - 22 to local table
in proc XPrint adding addrExp r28{0} - 24 to local table
in proc XPrint adding addrExp r28{0} - 28 to local table
in proc XPrint adding addrExp r28{0} - 44 to local table
in proc XPrint adding addrExp r28{0} - 28 to local table
in proc XPrint adding addrExp r28{0} - 48 to local table
in proc XPrint adding addrExp r28{0} - 52 to local table
in proc XPrint adding addrExp r28{0} - 56 to local table
in proc XPrint adding addrExp r28{0} - 60 to local table
in proc XPrint adding addrExp r28{0} - 64 to local table
finding final parameters for XPrint
potential param m[r28{0} + 4]
found new parameter m[r28{0} + 4]
potential param m[r28{0} + 20]
found new parameter m[r28{0} + 20]
assgn  354 *32* m[r28 - 4] := m[0x804a514]
assgn  356 *32* m[r28 - 4] := m[0x804a580]
after removing matching assigns (t[WILDSTR]).
after removing matching assigns (%pc).
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure main ###
in proc main adding addrExp r28{0} - 4 to local table
in proc main adding addrExp r28{0} - 24 to local table
in proc main adding addrExp r28{0} - 28 to local table
in proc main adding addrExp r28{0} - 32 to local table
in proc main adding addrExp r28{0} - 28 to local table
in proc main adding addrExp r28{0} - 32 to local table
in proc main adding addrExp r28{0} - 16 to local table
in proc main adding addrExp r28{0} - 32 to local table
TYPE DIFFERENCE (could be OK): At address 0xffffffe0 existing type unsigned int but added type char[] *
in proc main adding addrExp r28{0} - 48 to local table
in proc main adding addrExp r28{0} - 52 to local table
in proc main adding addrExp r28{0} - 40 to local table
in proc main adding addrExp r28{0} - 48 to local table
in proc main adding addrExp r28{0} - 52 to local table
in proc main adding addrExp r28{0} - 28 to local table
in proc main adding addrExp r28{0} - 32 to local table
in proc main adding addrExp r28{0} - 36 to local table
TYPE ERROR: Existing type at address 0xffffffd8 is not structure or array type
in proc main adding addrExp r28{0} - 20 to local table
### WARNING: iteration limit exceeded for dfaTypeAnalysis of procedure main ###
could not set type for unknown parameter expression m[r28{0} + 4]
could not set type for unknown parameter expression m[r28{0} + 8]
could not set type for unknown parameter expression m[r28{0} + 12]
in proc main adding addrExp r28{0} - 36 to local table
TYPE ERROR: Existing type at address 0xffffffd8 is not structure or array type
in proc main adding addrExp r28{0} - 28 to local table
in proc main adding addrExp r28{0} - 28 to local table
in proc main adding addrExp r28{0} - 36 to local table
TYPE ERROR: Existing type at address 0xffffffd8 is not structure or array type
in proc main adding addrExp r28{0} - 48 to local table
in proc main adding addrExp r28{0} - 28 to local table
in proc main adding addrExp r28{0} - 36 to local table
TYPE ERROR: Existing type at address 0xffffffd8 is not structure or array type
in proc main adding addrExp r28{0} - 28 to local table
in proc main adding addrExp r28{0} - 36 to local table
TYPE ERROR: Existing type at address 0xffffffd8 is not structure or array type
in proc MikmodInit adding addrExp r28{0} - 28 to local table
finding final parameters for init
finding final parameters for FontInit
finding final parameters for XPrint
potential param m[r28{0} + 20]
found new parameter m[r28{0} + 20]
local esp has type void * that doesn't agree with type of define void of a library, why?
local esp has type void * that doesn't agree with type of define void of a library, why?
local eax has type __size32 that doesn't agree with type of define char[] * of a library, why?
local eax has type char[] * that doesn't agree with type of define __size32 of a library, why?
local eax has type __size32 that doesn't agree with type of define char[] * of a library, why?
local eax has type char[] * that doesn't agree with type of define __size32 of a library, why?
local esp has type __size32 that doesn't agree with type of define void of a library, why?
dest is not lib
call:   22 {*v* r24, *v* r25, *v* r26} := CALL init(
              )
              Reaching definitions: r0=r0{0},   r8=r8{0},   r12=0@15:8,   r24=0,   r28=r28{0} - 32,   r29=r28{0} - 4,
                r32=r32{0},   r33=r33{0},   r34=r34{0},   r35=r35{0},   r36=r36{0},   r37=r37{0},   r38=r38{0},
                r39=r39{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},
                m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 24]=100,   m[r28{0} - 28]=300,
                m[r28{0} - 32]=%pc,   m[r28{0} - 36]=m[r28{0} - 36]{0},   tmp1=r28{0} - 12,
                %flags=SUBFLAGS32( r28{0} - 12, 8, r28{0} - 20 ),   %fflags=%fflags{0},   %ZF=(r28{0} - 20) = 0,
                %CF=(r28{0} - 12) <u 8
              Live variables:  in proc main
dest is not lib
call:   34 {*32* r24, *32* r25, *32* r26} := CALL FontInit(
              )
              Reaching definitions: r0=r0{0},   r8=r8{0},   r12=0@15:8,   r24=r24{22},   r25=r25{22},   r26=r26{22},
                r28=r28{0} - 32,   r29=r28{0} - 4,   r32=r32{0},   r33=r33{0},   r34=r34{0},   r35=r35{0},   r36=r36{0}
                r37=r37{0},   r38=r38{0},   r39=r39{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 24]=100,   m[r28{0} - 28]=0x8048e38,   m[r28{0} - 32]=%pc,
                m[r28{0} - 36]=m[r28{0} - 36]{0},   tmp1=r28{0} - 12,
                %flags=SUBFLAGS32( r28{0} - 12, 12, r28{0} - 24 ),   %fflags=%fflags{0},   %ZF=(r28{0} - 24) = 0,
                %CF=(r28{0} - 12) <u 12
              Live variables:  in proc main
dest is not lib
call:   41 CALL MikmodInit(
              )
              Reaching definitions: r0=r0{0},   r8=r8{0},   r12=0@15:8,   r24=r24{34},   r25=r25{34},   r26=r26{34},
                r28=r28{0} - 16,   r29=r28{0} - 4,   r32=r32{0},   r33=r33{0},   r34=r34{0},   r35=r35{0},   r36=r36{0}
                r37=r37{0},   r38=r38{0},   r39=r39{0},   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 16]=%pc,   m[r28{0} - 24]=100,   m[r28{0} - 28]=0x8048e38,   m[r28{0} - 32]=%pc,
                m[r28{0} - 36]=m[r28{0} - 36]{0},   tmp1=(r28{0} - 32) + 4,
                %flags=ADDFLAGS32( r28{0} - 28, 16, r28{0} - 12 ),   %fflags=%fflags{0},
                %ZF=ADDFLAGS32( r28{0} - 28, 16, r28{0} - 12 ),   %CF=ADDFLAGS32( r28{0} - 28, 16, r28{0} - 12 )
              Live variables:  in proc main
dest is not lib
call:   94 {*32* r24, *v* r25, *v* r26} := CALL sin(
                *f64* local2 := fsize(80,64,fsize(32,80,rut) /f 300.0000)
              )
              Reaching definitions: r0=r0{373},   r8=r8{374},   r12=r12{375},   r24=r24{376},   r25=r25{377},
                r26=r26{378},   r28=(r28{0} - 16) - 36,   r29=r28{0} - 4,   r32=r32{380},   r33=r33{381},
                r34=r34{382},   r35=r35{383},   r36=r36{384},   r37=r37{385},   r38=300.0000,
                r39=fsize(32,80,rut) /f 300.0000,   m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},
                m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 16]=%pc,
                m[r28{0} - 20]=m[r28{0} - 20]{407},   m[r28{0} - 24]=100,   m[r28{0} - 28]=0x8048e38,
                m[r28{0} - 32]=%pc,   m[r28{0} - 36]=m[r28{0} - 36]{410},   m[r28{0} - 40]=m[r28{0} - 40]{411},
                m[r28{0} - 48]=fsize(80,64,fsize(32,80,rut) /f 300.0000),   m[r28{0} - 52]=%pc,
                tmp1=(r28{0} - 16) - 16,   tmpD=tmpD{389},   tmpD1=tmpD1{390},   tmpD2=tmpD2{391},
                tmpD9=fsize(32,80,rut) /f 300.0000,   tmpb=tmpb{393},
                %flags=SUBFLAGS32( (r28{0} - 16) - 16, 8, (r28{0} - 16) - 24 ),   %fflags=%fflags{395},
                %ZF=((r28{0} - 16) - 24) = 0,   %CF=((r28{0} - 16) - 16) <u 8
              Live variables:  in proc main
dest is not lib
call:  213 {*j32* r24, *16* r0, *8* r12, *32* r25, *32* r26, *f80* r39} := CALL XPrint(
                *[c]** local3 := 0x8049020
              )
              Reaching definitions: r0=r0{373},   r8=r8{374},   r12=r12{375},   r24=r24{94},   r25=r25{94},
                r26=r26{94},   r28=(r28{0} - 16) - 36,   r29=r28{0} - 4,   r32=r33{381},   r33=r34{382},   r34=r35{383}
                r35=r36{384},   r36=r37{385},   r37=300.0000,   r38=400.0000,
                r39=400.0000 -f (fsize(32,80,rut) /f 2.0000),   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 16]=%pc,   m[r28{0} - 20]=m[r28{0} - 20]{407},   m[r28{0} - 24]=100,
                m[r28{0} - 28]=0x8048e38,   m[r28{0} - 32]=%pc,   m[r28{0} - 36]=m[r28{0} - 36]{410},
                m[r28{0} - 40]=fsize(80,64,(20.0000 *f r32{380}) +f 60.0000),   m[r28{0} - 48]=m[r28{0} - 48]{200},
                m[r28{0} - 52]=%pc,   tmp1=((r28{0} - 16) - 36) + 4,   tmpD=tmpD{389},   tmpD1=tmpD1{390},
                tmpD2=tmpD2{391},   tmpD9=400.0000 -f (fsize(32,80,rut) /f 2.0000),   tmpb=tmpb{393},
                %flags=ADDFLAGS32( (r28{0} - 16) - 32, 16, (r28{0} - 16) - 16 ),   %fflags=%fflags{395},
                %ZF=ADDFLAGS32( (r28{0} - 16) - 32, 16, (r28{0} - 16) - 16 ),
                %CF=ADDFLAGS32( (r28{0} - 16) - 32, 16, (r28{0} - 16) - 16 )
              Live variables:  in proc main
found seq with more than one outedge!
taken branch is first out edge
dest is not lib
call:  361 {*32* r24, *32* r25, *32* r26} := CALL XClearWindow(
              )
              Reaching definitions: r0=r0{213},   r8=0,   r12=SETFFLAGS( fsize(32,80,tim), 50.0000 ),
                r24=((r24{213} & 0xffff00ff) | ((SETFFLAGS( fsize(32,80,tim), 50.0000 )) * 256))@31:8,   r25=r25{213},
                r26=r26{213},   r28=(r28{0} - 16) - 20,   r29=r28{0} - 4,   r32=r33{381},   r33=r34{382},
                r34=r35{383},   r35=r36{384},   r36=r37{385},   r37=300.0000,   r38=fsize(32,80,tim),   r39=50.0000,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} - 4]=r29{0},   m[r28{0} - 16]=%pc,   m[r28{0} - 20]=m[r28{0} - 20]{407},   m[r28{0} - 24]=100,
                m[r28{0} - 28]=0x8048e38,   m[r28{0} - 32]=%pc,   m[r28{0} - 36]=%pc,
                m[r28{0} - 40]=fsize(80,64,(20.0000 *f r32{380}) +f 60.0000),   m[r28{0} - 48]=m[r28{0} - 48]{200},
                m[r28{0} - 52]=%pc,   tmp1=r28{0} - 16,   tmpD=fsize(32,80,tim) -f 50.0000,   tmpD1=fsize(32,80,tim),
                tmpD2=50.0000,   tmpD9=50.0000,   tmpb=(SETFFLAGS( fsize(32,80,tim), 50.0000 )) & 69,
                %flags=SUBFLAGS32( r28{0} - 16, 8, (r28{0} - 16) - 8 ),
                %fflags=SETFFLAGS( fsize(32,80,tim), 50.0000 ),   %ZF=((r28{0} - 16) - 8) = 0,   %CF=(r28{0} - 16) <u 8
              Live variables:  in proc main
dest is not lib
call:  371 {*32* r24, *32* r25, *32* r26} := CALL MikMod_Update(
              )
              Reaching definitions: r0=r0{213},   r8=0,   r12=r12{398},   r24=r24{399},   r25=r25{400},   r26=r26{401},
                r28=(r28{0} - 16) - 4,   r29=r28{0} - 4,   r32=r33{381},   r33=r34{382},   r34=r35{383},   r35=r36{384}
                r36=r37{385},   r37=300.0000,   r38=fsize(32,80,tim),   r39=50.0000,   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 16]=%pc,   m[r28{0} - 20]=%pc,   m[r28{0} - 24]=100,   m[r28{0} - 28]=0x8048e38,
                m[r28{0} - 32]=%pc,   m[r28{0} - 36]=m[r28{0} - 36]{416},
                m[r28{0} - 40]=fsize(80,64,(20.0000 *f r32{380}) +f 60.0000),   m[r28{0} - 48]=m[r28{0} - 48]{200},
                m[r28{0} - 52]=%pc,   tmp1=tmp1{403},   tmpD=fsize(32,80,tim) -f 50.0000,   tmpD1=fsize(32,80,tim),
                tmpD2=50.0000,   tmpD9=50.0000,   tmpb=(SETFFLAGS( fsize(32,80,tim), 50.0000 )) & 69,
                %flags=%flags{404},   %fflags=SETFFLAGS( fsize(32,80,tim), 50.0000 ),   %ZF=%ZF{405},   %CF=%CF{406}
              Live variables:  in proc main
dest is not lib
call:   15 {*32* eax, *v* r25, *v* r26, *v* r28} := CALL XOpenDisplay(
              )
              Reaching definitions: r28=r28{0} - 32,   r29=r28{0} - 4,   m[r28{0} + 4]=m[r28{0} + 4]{0},
                m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 28]=0,   m[r28{0} - 32]=%pc,
                tmp1=r28{0} - 12,   %flags=SUBFLAGS32( r28{0} - 12, 12, r28{0} - 24 ),   %ZF=(r28{0} - 24) = 0,
                %CF=(r28{0} - 12) <u 12
              Live variables: eax in proc init
result:    0 *32* eax := -
dest is not lib
call:   48 {*32* eax, *v* r25, *v* r26, *v* r28} := CALL XCreateSimpleWindow(
              )
              Reaching definitions: r24=r24{40},   r25=r25{15},   r26=r26{15},   r28=r28{0} - 64,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 28]=m[r28{0} - 28]{25},   m[r28{0} - 32]=0,   m[r28{0} - 36]=0,
                m[r28{0} - 40]=m[r28{0} + 8]{0},   m[r28{0} - 44]=m[r28{0} + 4]{0},   m[r28{0} - 48]=0,
                m[r28{0} - 52]=0,   m[r28{0} - 56]=m[r28{0} - 56]{41},   m[r28{0} - 60]=dis,   m[r28{0} - 64]=%pc,
                tmp1=r28{0} - 12,   %flags=SUBFLAGS32( r28{0} - 12, 12, r28{0} - 24 ),   %ZF=(r28{0} - 24) = 0,
                %CF=(r28{0} - 12) <u 12
              Live variables: eax in proc init
result:    0 *32* eax := -
dest is not lib
call:   63 {*32* eax, *v* r25, *v* r26, *v* r28} := CALL XMapWindow(
              )
              Reaching definitions: r24=r24{48},   r25=r25{48},   r26=r26{48},   r28=r28{0} - 32,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 24]=win,   m[r28{0} - 28]=dis,   m[r28{0} - 32]=%pc,   m[r28{0} - 36]=0,
                m[r28{0} - 40]=m[r28{0} + 8]{0},   m[r28{0} - 44]=m[r28{0} + 4]{0},   m[r28{0} - 48]=0,
                m[r28{0} - 52]=0,   m[r28{0} - 56]=m[r28{0} - 56]{41},   m[r28{0} - 60]=dis,   m[r28{0} - 64]=%pc,
                tmp1=r28{0} - 12,   %flags=SUBFLAGS32( r28{0} - 12, 8, r28{0} - 20 ),   %ZF=(r28{0} - 20) = 0,
                %CF=(r28{0} - 12) <u 8
              Live variables:  in proc init
dest is not lib
call:   82 {*32* eax, *v* r25, *v* r26, *v* r28} := CALL XCreateGC(
              )
              Reaching definitions: r24=r24{69},   r25=r25{63},   r26=r26{63},   r28=r28{0} - 32,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 16]=0,   m[r28{0} - 20]=0,   m[r28{0} - 24]=win,   m[r28{0} - 28]=dis,   m[r28{0} - 32]=%pc,
                m[r28{0} - 36]=0,   m[r28{0} - 40]=m[r28{0} + 8]{0},   m[r28{0} - 44]=m[r28{0} + 4]{0},
                m[r28{0} - 48]=0,   m[r28{0} - 52]=0,   m[r28{0} - 56]=m[r28{0} - 56]{41},   m[r28{0} - 60]=dis,
                m[r28{0} - 64]=%pc,   tmp1=(r28{0} - 32) + 4,   %flags=ADDFLAGS32( r28{0} - 28, 16, r28{0} - 12 ),
                %ZF=ADDFLAGS32( r28{0} - 28, 16, r28{0} - 12 ),   %CF=ADDFLAGS32( r28{0} - 28, 16, r28{0} - 12 )
              Live variables: eax in proc init
result:    0 *32* eax := -
dest is not lib
call:   98 {*32* eax, *v* r25, *v* r26, *v* r28} := CALL XParseColor(
              )
              Reaching definitions: r24=r24{82},   r25=r25{82},   r26=r26{82},   r28=r28{0} - 32,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 16]=0x804a508,   m[r28{0} - 20]=0x804a358,   m[r28{0} - 24]=colormap,   m[r28{0} - 28]=dis,
                m[r28{0} - 32]=%pc,   m[r28{0} - 36]=0,   m[r28{0} - 40]=m[r28{0} + 8]{0},
                m[r28{0} - 44]=m[r28{0} + 4]{0},   m[r28{0} - 48]=0,   m[r28{0} - 52]=0,
                m[r28{0} - 56]=m[r28{0} - 56]{41},   m[r28{0} - 60]=dis,   m[r28{0} - 64]=%pc,   tmp1=(r28{0} - 32) + 4
                %flags=ADDFLAGS32( r28{0} - 28, 16, r28{0} - 12 ),   %ZF=ADDFLAGS32( r28{0} - 28, 16, r28{0} - 12 ),
                %CF=ADDFLAGS32( r28{0} - 28, 16, r28{0} - 12 )
              Live variables:  in proc init
dest is not lib
call:  114 {*32* eax, *v* r25, *v* r26, *v* r28} := CALL XAllocColor(
              )
              Reaching definitions: r24=r24{98},   r25=r25{98},   r26=r26{98},   r28=r28{0} - 32,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 16]=0x804a508,   m[r28{0} - 20]=0x804a508,   m[r28{0} - 24]=colormap,   m[r28{0} - 28]=dis,
                m[r28{0} - 32]=%pc,   m[r28{0} - 36]=0,   m[r28{0} - 40]=m[r28{0} + 8]{0},
                m[r28{0} - 44]=m[r28{0} + 4]{0},   m[r28{0} - 48]=0,   m[r28{0} - 52]=0,
                m[r28{0} - 56]=m[r28{0} - 56]{41},   m[r28{0} - 60]=dis,   m[r28{0} - 64]=%pc,   tmp1=r28{0} - 12,
                %flags=SUBFLAGS32( r28{0} - 12, 4, r28{0} - 16 ),   %ZF=(r28{0} - 16) = 0,   %CF=(r28{0} - 12) <u 4
              Live variables:  in proc init
dest is not lib
call:  130 {*32* eax, *32* r25, *32* r26, *v* r28} := CALL XSetForeground(
              )
              Reaching definitions: r24=r24{114},   r25=r25{114},   r26=r26{114},   r28=r28{0} - 32,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 16]=0x804a508,   m[r28{0} - 20]=green_col,   m[r28{0} - 24]=green_gc,   m[r28{0} - 28]=dis,
                m[r28{0} - 32]=%pc,   m[r28{0} - 36]=0,   m[r28{0} - 40]=m[r28{0} + 8]{0},
                m[r28{0} - 44]=m[r28{0} + 4]{0},   m[r28{0} - 48]=0,   m[r28{0} - 52]=0,
                m[r28{0} - 56]=m[r28{0} - 56]{41},   m[r28{0} - 60]=dis,   m[r28{0} - 64]=%pc,   tmp1=r28{0} - 12,
                %flags=SUBFLAGS32( r28{0} - 12, 4, r28{0} - 16 ),   %ZF=(r28{0} - 16) = 0,   %CF=(r28{0} - 12) <u 4
              Live variables:  in proc init
dest is not lib
call:   19 {*32* r24, *v* r25, *v* r26, *v* r28} := CALL XLoadQueryFont(
              )
              Reaching definitions: r24=m[r28{0} + 4]{0},   r28=r28{0} - 32,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 12]=m[r28{0} + 4]{0},
                m[r28{0} - 24]=m[r28{0} + 4]{0},   m[r28{0} - 28]=dis,   m[r28{0} - 32]=%pc,   tmp1=r28{0} - 12,
                %flags=SUBFLAGS32( r28{0} - 12, 8, r28{0} - 20 ),   %ZF=(r28{0} - 20) = 0,   %CF=(r28{0} - 12) <u 8
              Live variables:  in proc FontInit
dest is not lib
call:   37 {*32* r24, *32* r25, *32* r26, *v* r28} := CALL XSetFont(
              )
              Reaching definitions: r24=r24{19},   r25=r25{19},   r26=r26{19},   r28=r28{0} - 32,   r29=r28{0} - 4,
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{19},
                m[r28{0} - 12]=m[r28{0} + 4]{0},   m[r28{0} - 20]=m[r28{0} - 20]{28},   m[r28{0} - 24]=green_gc,
                m[r28{0} - 28]=dis,   m[r28{0} - 32]=%pc,   tmp1=r28{0} - 12,
                %flags=SUBFLAGS32( r28{0} - 12, 4, r28{0} - 16 ),   %ZF=(r28{0} - 16) = 0,   %CF=(r28{0} - 12) <u 4
              Live variables:  in proc FontInit
dest is not lib
call:   10 {*32* eax, *v* r25, *v* r26} := CALL MikMod_RegisterAllDrivers(
              )
              Reaching definitions: r28=r28{0} - 16,   r29=r28{0} - 4,   m[r28{0} - 4]=r29{0},   m[r28{0} - 16]=%pc,
                tmp1=r28{0} - 4,   %flags=SUBFLAGS32( r28{0} - 4, 8, r28{0} - 12 ),   %ZF=(r28{0} - 12) = 0,
                %CF=(r28{0} - 4) <u 8
              Live variables:  in proc MikmodInit
dest is not lib
call:   14 {*32* eax, *v* r25, *v* r26} := CALL MikMod_RegisterAllLoaders(
              )
              Reaching definitions: r24=r24{10},   r25=r25{10},   r26=r26{10},   r28=r28{0} - 16,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 16]=%pc,   tmp1=r28{0} - 4,
                %flags=SUBFLAGS32( r28{0} - 4, 8, r28{0} - 12 ),   %ZF=(r28{0} - 12) = 0,   %CF=(r28{0} - 4) <u 8
              Live variables:  in proc MikmodInit
dest is not lib
call:   23 {*32* eax, *v* r25, *v* r26} := CALL MikMod_Init(
              )
              Reaching definitions: r24=r24{14},   r25=r25{14},   r26=r26{14},   r28=r28{0} - 32,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 16]=%pc,   m[r28{0} - 28]=0x8048e10,   m[r28{0} - 32]=%pc,
                tmp1=(r28{0} - 16) + 4,   %flags=SUBFLAGS32( r28{0} - 12, 12, r28{0} - 24 ),   %ZF=(r28{0} - 24) = 0,
                %CF=(r28{0} - 12) <u 12
              Live variables: eax in proc MikmodInit
result:    0 *32* eax := -
dest is not lib
call:   41 {*[c]** eax, *v* r25, *v* r26} := CALL MikMod_strerror(
              )
              Reaching definitions: r24=r24{23},   r25=r25{23},   r26=r26{23},   r28=r28{0} - 32,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 16]=%pc,   m[r28{0} - 28]=MikMod_errno,   m[r28{0} - 32]=%pc,
                tmp1=r28{0} - 16,   %flags=SUBFLAGS32( r28{0} - 16, 8, r28{0} - 24 ),   %ZF=(r28{0} - 24) = 0,
                %CF=(r28{0} - 16) <u 8
              Live variables: eax in proc MikmodInit
result:    0 *[c]** eax := -
dest is not lib
call:   54 {*32* eax, *v* r25, *v* r26} := CALL fprintf(
                *FILE** local0 := local0
                *c** local1 := "MikMod: %s
"
                *[c]** local2 := eax
              )
              Reaching definitions: r24=r24{41},   r25=r25{41},   r26=r26{41},   r28=r28{0} - 32,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 16]=%pc,   m[r28{0} - 20]=r24{41},   m[r28{0} - 24]=0x8048e11,
                m[r28{0} - 28]=m[r28{0} - 28]{49},   m[r28{0} - 32]=%pc,   tmp1=(r28{0} - 32) + 4,
                %flags=ADDFLAGS32( r28{0} - 28, 12, r28{0} - 16 ),   %ZF=ADDFLAGS32( r28{0} - 28, 12, r28{0} - 16 ),
                %CF=ADDFLAGS32( r28{0} - 28, 12, r28{0} - 16 )
              Live variables:  in proc MikmodInit
dest is not lib
call:   66 {*32* eax, *v* r25, *v* r26} := CALL exit(
                *i32* local3 := 1
              )
              Reaching definitions: r24=r24{54},   r25=r25{54},   r26=r26{54},   r28=r28{0} - 32,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 16]=%pc,   m[r28{0} - 20]=r24{41},   m[r28{0} - 24]=0x8048e11,
                m[r28{0} - 28]=1,   m[r28{0} - 32]=%pc,   tmp1=r28{0} - 12,
                %flags=SUBFLAGS32( r28{0} - 12, 12, r28{0} - 24 ),   %ZF=(r28{0} - 24) = 0,   %CF=(r28{0} - 12) <u 12
              Live variables:  in proc MikmodInit
dest is not lib
call:   80 {*32* eax, *v* r25, *v* r26} := CALL Player_Load(
              )
              Reaching definitions: r24=r24{23},   r25=r25{23},   r26=r26{23},   r28=r28{0} - 32,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 16]=%pc,   m[r28{0} - 20]=0,   m[r28{0} - 24]=128,
                m[r28{0} - 28]=0x8048e1d,   m[r28{0} - 32]=%pc,   tmp1=r28{0} - 12,
                %flags=SUBFLAGS32( r28{0} - 12, 4, r28{0} - 16 ),   %ZF=(r28{0} - 16) = 0,   %CF=(r28{0} - 12) <u 4
              Live variables: eax in proc MikmodInit
result:    0 *32* eax := -
dest is not lib
call:   99 {*[c]** eax, *v* r25, *v* r26} := CALL MikMod_strerror(
              )
              Reaching definitions: r24=r24{80},   r25=r25{80},   r26=r26{80},   r28=r28{0} - 32,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{80},   m[r28{0} - 16]=%pc,   m[r28{0} - 20]=0,
                m[r28{0} - 24]=128,   m[r28{0} - 28]=MikMod_errno,   m[r28{0} - 32]=%pc,   tmp1=r28{0} - 20,
                %flags=SUBFLAGS32( r28{0} - 20, 4, r28{0} - 24 ),   %ZF=(r28{0} - 24) = 0,   %CF=(r28{0} - 20) <u 4
              Live variables: eax in proc MikmodInit
result:    0 *[c]** eax := -
dest is not lib
call:  110 {*32* eax, *v* r25, *v* r26} := CALL printf(
                *c** local4 := "MikMod Error: %s
"
                *[c]** local1 := eax
              )
              Reaching definitions: r24=r24{99},   r25=r25{99},   r26=r26{99},   r28=r28{0} - 32,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{80},   m[r28{0} - 16]=%pc,   m[r28{0} - 20]=0,
                m[r28{0} - 24]=r24{99},   m[r28{0} - 28]=0x8048e26,   m[r28{0} - 32]=%pc,   tmp1=(r28{0} - 32) + 4,
                %flags=ADDFLAGS32( r28{0} - 28, 8, r28{0} - 20 ),   %ZF=ADDFLAGS32( r28{0} - 28, 8, r28{0} - 20 ),
                %CF=ADDFLAGS32( r28{0} - 28, 8, r28{0} - 20 )
              Live variables:  in proc MikmodInit
dest is not lib
call:  122 {*32* eax, *v* r25, *v* r26} := CALL exit(
                *i32* local3 := 1
              )
              Reaching definitions: r24=r24{110},   r25=r25{110},   r26=r26{110},   r28=r28{0} - 32,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{80},   m[r28{0} - 16]=%pc,   m[r28{0} - 20]=0,
                m[r28{0} - 24]=r24{99},   m[r28{0} - 28]=1,   m[r28{0} - 32]=%pc,   tmp1=r28{0} - 12,
                %flags=SUBFLAGS32( r28{0} - 12, 12, r28{0} - 24 ),   %ZF=(r28{0} - 24) = 0,   %CF=(r28{0} - 12) <u 12
              Live variables:  in proc MikmodInit
dest is not lib
call:  132 {*32* eax, *v* r25, *v* r26} := CALL Player_Start(
              )
              Reaching definitions: r24=r24{80},   r25=r25{80},   r26=r26{80},   r28=r28{0} - 32,   r29=r28{0} - 4,
                m[r28{0} - 4]=r29{0},   m[r28{0} - 8]=r24{80},   m[r28{0} - 16]=%pc,   m[r28{0} - 20]=0,
                m[r28{0} - 24]=128,   m[r28{0} - 28]=r24{80},   m[r28{0} - 32]=%pc,   tmp1=r28{0} - 12,
                %flags=SUBFLAGS32( r28{0} - 12, 12, r28{0} - 24 ),   %ZF=(r28{0} - 24) = 0,   %CF=(r28{0} - 12) <u 12
              Live variables:  in proc MikmodInit
dest is not lib
call:   28 {*32* r24, *v* r25, *v* r26} := CALL strlen(
                *[c]** local0 := param1
              )
              Reaching definitions: r0=truncu(32,16,m[r28{0} + 12]{0}),   r24=m[r28{0} + 12]{0},
                r26=m[r28{0} + 16]{0},   r28=r28{0} - 48,   r29=r28{0} - 4,   r32=r32{0},   r33=r33{0},   r34=r34{0},
                r35=r35{0},   r36=r36{0},   r37=r37{0},   r38=r38{0},   r39=r39{0},   r42=r42{0},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} + 16]=m[r28{0} + 16]{0},   m[r28{0} + 20]=m[r28{0} + 20]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} + 8]{0},   m[r28{0} - 12]=m[r28{0} + 4]{0},   m[r28{0} - 16]=m[r28{0} + 16]{0},
                m[r28{0} - 20]=m[r28{0} + 12]{0},   m[r28{0} - 44]=m[r28{0} + 20]{0},   m[r28{0} - 48]=%pc,
                tmp1=r28{0} - 32,   %flags=SUBFLAGS32( r28{0} - 32, 8, r28{0} - 40 ),   %ZF=(r28{0} - 40) = 0,
                %CF=(r28{0} - 32) <u 8
              Live variables:  in proc XPrint
dest is not lib
call:  106 {*32* r24, *32* r25, *32* r26} := CALL XDrawString(
              )
              Reaching definitions: r0=truncu(32,16,ftoi(80,32,r32{80})),   r12=12,   r24=ftoi(80,32,r32{80}),
                r25=r25{28},   r26=r26{28},   r28=r28{0} - 64,   r29=r28{0} - 4,   r32=r32{0},   r33=r33{0},
                r34=r34{0},   r35=r35{0},   r36=r36{0},   r37=r37{0},   r38=r38{0},   r39=r32{80},   r42=r42{0},
                m[r28{0} + 4]=m[r28{0} + 4]{0},   m[r28{0} + 8]=m[r28{0} + 8]{0},   m[r28{0} + 12]=m[r28{0} + 12]{0},
                m[r28{0} + 16]=m[r28{0} + 16]{0},   m[r28{0} + 20]=m[r28{0} + 20]{0},   m[r28{0} - 4]=r29{0},
                m[r28{0} - 8]=m[r28{0} + 8]{0},   m[r28{0} - 12]=m[r28{0} + 4]{0},   m[r28{0} - 16]=m[r28{0} + 16]{0},
                m[r28{0} - 20]=m[r28{0} + 12]{0},   m[r28{0} - 22]=r42{0},   m[r28{0} - 24]=(r42{0} & 255) | 0xc00,
                m[r28{0} - 28]=ftoi(80,32,r32{80}),   m[r28{0} - 36]=r24{28},   m[r28{0} - 40]=m[r28{0} + 20]{0},
                m[r28{0} - 44]=ftoi(80,32,r32{45}),   m[r28{0} - 48]=ftoi(80,32,r32{80}),   m[r28{0} - 52]=green_gc,
                m[r28{0} - 56]=win,   m[r28{0} - 60]=dis,   m[r28{0} - 64]=%pc,   tmp1=(r28{0} - 48) + 4,
                tmpD9=r32{80},   %flags=ADDFLAGS32( r28{0} - 44, 12, r28{0} - 32 ),
                %ZF=ADDFLAGS32( r28{0} - 44, 12, r28{0} - 32 ),   %CF=ADDFLAGS32( r28{0} - 44, 12, r28{0} - 32 )
              Live variables:  in proc XPrint
