// subject.h
// Generated by decompiling subject.exe
// using Reko decompiler version VERSION

/*
// Equivalence classes ////////////
Eq_1: (struct "Globals")
	globals_t (in globals : (ptr (struct "Globals")))
Eq_7: (fn void (ui32, int32))
	T_7 (in gcd : ptr32)
	T_8 (in signature of gcd : void)
Eq_9: (union "Eq_9" (int32 u0) (uint32 u1))
	T_9 (in dwArg04 : word32)
// Type Variables ////////////
globals_t: (in globals : (ptr (struct "Globals")))
  Class: Eq_1
  DataType: (ptr Eq_1)
  OrigDataType: (ptr (struct "Globals"))
T_2: (in dwArg04 : ui32)
  Class: Eq_2
  DataType: ui32
  OrigDataType: word32
T_3: (in dwArg08 : int32)
  Class: Eq_3
  DataType: int32
  OrigDataType: word32
T_4: (in dwArg08 : word32)
  Class: Eq_2
  DataType: ui32
  OrigDataType: ui32
T_5: (in 0x00000000 : word32)
  Class: Eq_2
  DataType: ui32
  OrigDataType: word32
T_6: (in dwArg08 != 0x00000000 : bool)
  Class: Eq_6
  DataType: bool
  OrigDataType: bool
T_7: (in gcd : ptr32)
  Class: Eq_7
  DataType: (ptr Eq_7)
  OrigDataType: (ptr (fn T_15 (T_4, T_14)))
T_8: (in signature of gcd : void)
  Class: Eq_7
  DataType: (ptr Eq_7)
  OrigDataType: 
T_9: (in dwArg04 : word32)
  Class: Eq_9
  DataType: Eq_9
  OrigDataType: (union (int32 u1) (uint32 u0))
T_10: (in 0x0000001F : word32)
  Class: Eq_10
  DataType: word32
  OrigDataType: word32
T_11: (in dwArg04 >> 0x0000001F : word32)
  Class: Eq_11
  DataType: int32
  OrigDataType: int32
T_12: (in SEQ(dwArg04 >> 0x0000001F, dwArg04) : word64)
  Class: Eq_12
  DataType: int64
  OrigDataType: int64
T_13: (in SEQ(dwArg04 >> 0x0000001F, dwArg04) % dwArg08 : word64)
  Class: Eq_13
  DataType: ui64
  OrigDataType: ui64
T_14: (in (int32) (SEQ(dwArg04 >> 0x0000001F, dwArg04) % dwArg08) : int32)
  Class: Eq_3
  DataType: int32
  OrigDataType: int32
T_15: (in gcd(dwArg08, (int32) (SEQ(dwArg04 >> 0x0000001F, dwArg04) % dwArg08)) : void)
  Class: Eq_15
  DataType: void
  OrigDataType: void
*/
typedef struct Globals {
} Eq_1;

typedef void (Eq_7)(ui32, int32);

typedef union Eq_9 {
	int32 u0;
	uint32 u1;
} Eq_9;

